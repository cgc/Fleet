'λx.apply(or[and[rectangle,not[apply(same_color,x.o)]],and[or[not[triangle],and[yellow,yellow]],size2]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:rectangle;4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:triangle;4:and[%s,%s];4:yellow;4:yellow;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_size,iota(filter(x.s, size2))),iota(filter(x.s, nor[triangle,blue])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:triangle;4:blue
'λx.apply(size1,iota(filter(x.s, and[or[not[size1],green],size3])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:size1;4:green;4:size3
'λx.exists(not[size1], filter(x.s, and[blue,size2]))'	0:exists(%s, %s);4:not[%s];4:size1;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size2
'λx.apply(not[not[not[size1]]],iota(filter(x.s, green)))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(yellow,iota(filter(filter(x.s, or[yellow,size3]), or[blue,not[rectangle]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:size3;4:or[%s,%s];4:blue;4:not[%s];4:rectangle
'λx.empty(filter(x.s, and[and[apply(same_shape,iota(x.s)),circle],implies[size1,green]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle;4:implies[%s,%s];4:size1;4:green
'λx.forall(triangle,filter(filter(filter(filter(filter(x.s, circle), size1), blue), iff[size2,green]), yellow))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1;4:blue;4:iff[%s,%s];4:size2;4:green;4:yellow
'λx.apply(iff[blue,size2],iota(filter(filter(filter(x.s, size1), circle), rectangle)))'	0:apply(%s,%s);4:iff[%s,%s];4:blue;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle;4:rectangle
'λx.true'	0:true
'λx.apply(and[and[nor[yellow,and[not[size1],implies[size3,apply(same_shape,iota(x.s))]]],and[size2,nand[size3,triangle]]],circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:yellow;4:and[%s,%s];4:not[%s];4:size1;4:implies[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:nand[%s,%s];4:size3;4:triangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, not[apply(same_size,iota(x.s))]), size1), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size1;4:green
'λx.apply(or[apply(same_color,x.o),not[rectangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.apply(and[apply(same_shape,iota(filter(filter(x.s, triangle), triangle))),blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:triangle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[size3,size1],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:size3;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(or[rectangle,size1],iota(filter(x.s, green)))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.exists(circle, filter(x.s, nor[size2,or[blue,triangle]]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size2;4:or[%s,%s];4:blue;4:triangle
'λx.contains(x.o, filter(filter(x.s, circle), and[or[size2,iff[size3,apply(same_color,iota(filter(filter(filter(filter(x.s, green), rectangle), green), size3)))]],not[and[triangle,yellow]]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:or[%s,%s];4:size2;4:iff[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle;4:green;4:size3;4:not[%s];4:and[%s,%s];4:triangle;4:yellow
'λx.apply(or[and[triangle,apply(same_color,iota(filter(x.s, circle)))],green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, yellow), circle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle
'λx.exists(and[yellow,triangle], filter(filter(x.s, triangle), and[circle,size1]))'	0:exists(%s, %s);4:and[%s,%s];4:yellow;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:circle;4:size1
'λx.forall(apply(same_size,iota(x.s)),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.forall(rectangle,filter(x.s, not[implies[triangle,size3]]))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:implies[%s,%s];4:triangle;4:size3
'λx.contains(iota(filter(x.s, size3)), filter(x.s, apply(same_shape,iota(x.s))))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(x.s, not[iff[and[implies[and[blue,size3],size2],rectangle],and[green,rectangle]]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:iff[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:blue;4:size3;4:size2;4:rectangle;4:and[%s,%s];4:green;4:rectangle
'λx.apply(triangle,iota(filter(x.s, or[green,blue])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:blue
'λx.exists(iff[implies[triangle,yellow],blue], filter(filter(x.s, size1), not[size1]))'	0:exists(%s, %s);4:iff[%s,%s];4:implies[%s,%s];4:triangle;4:yellow;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:not[%s];4:size1
'λx.apply(apply(same_color,iota(filter(filter(x.s, or[size2,blue]), green))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:blue;4:green;1:%s.o;2:x
'λx.apply(and[not[size2],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size2;4:size2;1:%s.o;2:x
'λx.apply(and[not[size2],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size2;4:size1;1:%s.o;2:x
'λx.apply(or[yellow,triangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(filter(filter(x.s, yellow), green), size3), yellow), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green;4:size3;4:yellow;4:size2
'λx.forall(rectangle,filter(x.s, rectangle))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[and[size1,implies[triangle,circle]],and[triangle,apply(size-geq,iota(filter(filter(filter(filter(filter(x.s, and[size2,or[green,or[and[size1,yellow],or[triangle,circle]]]]), and[yellow,size1]), blue), triangle), blue)))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:implies[%s,%s];4:triangle;4:circle;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:or[%s,%s];4:green;4:or[%s,%s];4:and[%s,%s];4:size1;4:yellow;4:or[%s,%s];4:triangle;4:circle;4:and[%s,%s];4:yellow;4:size1;4:blue;4:triangle;4:blue;1:%s.o;2:x
'λx.apply(and[size3,size3],iota(filter(filter(filter(x.s, triangle), size3), size2)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3;4:size2
'λx.apply(green,iota(filter(filter(filter(filter(filter(filter(filter(x.s, size2), size3), and[size2,yellow]), rectangle), rectangle), size1), and[size2,rectangle])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3;4:and[%s,%s];4:size2;4:yellow;4:rectangle;4:rectangle;4:size1;4:and[%s,%s];4:size2;4:rectangle
'λx.apply(not[size1],iota(filter(filter(filter(x.s, implies[nor[and[blue,and[green,green]],implies[and[apply(same_shape,iota(x.s)),circle],apply(size-leq,iota(x.s))]],blue]), not[size2]), size2)))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:green;4:green;4:implies[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:blue;4:not[%s];4:size2;4:size2
'λx.apply(and[or[and[size2,yellow],circle],apply(size-geq,iota(filter(x.s, and[not[triangle],not[circle]])))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size2;4:yellow;4:circle;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:triangle;4:not[%s];4:circle;1:%s.o;2:x
'λx.forall(blue,filter(filter(filter(filter(filter(filter(filter(filter(x.s, and[yellow,size1]), not[green]), size2), rectangle), circle), yellow), rectangle), size3))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size1;4:not[%s];4:green;4:size2;4:rectangle;4:circle;4:yellow;4:rectangle;4:size3
'λx.apply(triangle,iota(filter(filter(filter(x.s, nand[size2,size2]), and[rectangle,triangle]), size2)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size2;4:size2;4:and[%s,%s];4:rectangle;4:triangle;4:size2
'λx.apply(and[apply(size-leq,iota(filter(filter(filter(x.s, size3), yellow), or[rectangle,triangle]))),not[rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow;4:or[%s,%s];4:rectangle;4:triangle;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.apply(not[apply(size-geq,x.o)],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:%s.o;2:x
'λx.contains(iota(filter(x.s, size3)), filter(filter(x.s, circle), green))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green
'λx.exists(and[not[and[apply(same_shape,iota(filter(x.s, or[circle,size1]))),yellow]],triangle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:size1;4:yellow;4:triangle;3:%s.s;2:x
'λx.apply(not[triangle],iota(filter(filter(x.s, size1), green)))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green
'λx.contains(x.o, filter(x.s, apply(same_shape,iota(filter(x.s, triangle)))))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.contains(iota(x.s), filter(filter(filter(x.s, rectangle), rectangle), circle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle;4:circle
'λx.forall(or[yellow,green],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:yellow;4:green;3:%s.s;2:x
'λx.exists(rectangle, filter(filter(x.s, triangle), size1))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size1
'λx.apply(and[size2,and[and[rectangle,or[triangle,apply(same_size,iota(filter(filter(x.s, and[triangle,apply(size-leq,iota(x.s))]), and[size2,yellow])))]],green]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:or[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:yellow;4:green;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(x.s, not[and[size3,yellow]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:size3;4:yellow
'λx.apply(and[green,size1],iota(filter(filter(x.s, rectangle), size3)))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3
'λx.apply(or[rectangle,size3],iota(filter(x.s, not[not[and[yellow,circle]]])))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:and[%s,%s];4:yellow;4:circle
'λx.apply(not[iff[size2,circle]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:iff[%s,%s];4:size2;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[size3,size1],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size3;4:size1;1:%s.o;2:x
'λx.apply(or[and[not[size1],not[yellow]],triangle],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:not[%s];4:size1;4:not[%s];4:yellow;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(not[or[not[size3],green]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:not[%s];4:size3;4:green;1:%s.o;2:x
'λx.apply(not[implies[green,or[nand[size3,size2],nand[or[size1,rectangle],and[size2,and[size2,apply(same_size,iota(filter(filter(filter(filter(x.s, blue), and[size3,circle]), size2), yellow)))]]]]]],iota(filter(filter(x.s, green), apply(same_color,x.o))))'	0:apply(%s,%s);4:not[%s];4:implies[%s,%s];4:green;4:or[%s,%s];4:nand[%s,%s];4:size3;4:size2;4:nand[%s,%s];4:or[%s,%s];4:size1;4:rectangle;4:and[%s,%s];4:size2;4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:size3;4:circle;4:size2;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.empty(filter(filter(x.s, size3), not[or[and[triangle,green],not[blue]]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:triangle;4:green;4:not[%s];4:blue
'λx.apply(not[not[green]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:green;1:%s.o;2:x
'λx.apply(and[not[triangle],and[size1,nand[yellow,size3]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:triangle;4:and[%s,%s];4:size1;4:nand[%s,%s];4:yellow;4:size3;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, nor[size1,yellow])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size1;4:yellow
'λx.exists(and[size2,triangle], filter(x.s, apply(size-geq,iota(filter(filter(x.s, rectangle), green)))))'	0:exists(%s, %s);4:and[%s,%s];4:size2;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green
'λx.apply(nand[and[size2,or[circle,or[green,and[apply(same_size,x.o),circle]]]],and[green,and[and[size1,or[circle,triangle]],triangle]]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:size2;4:or[%s,%s];4:circle;4:or[%s,%s];4:green;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;4:and[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:circle;4:triangle;4:triangle;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, size3)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(blue,iota(filter(x.s, size2)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(blue,iota(filter(x.s, size1)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(or[nor[blue,and[size1,nor[or[blue,not[not[iff[apply(same_size,iota(filter(x.s, circle))),size2]]]],green]]],and[circle,rectangle]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:nor[%s,%s];4:blue;4:and[%s,%s];4:size1;4:nor[%s,%s];4:or[%s,%s];4:blue;4:not[%s];4:not[%s];4:iff[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size2;4:green;4:and[%s,%s];4:circle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[not[or[not[apply(same_size,iota(filter(x.s, triangle)))],and[circle,triangle]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:circle;4:triangle;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, green)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(or[circle,green],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[triangle,rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:rectangle;1:%s.o;2:x
'λx.exists(size3, filter(filter(filter(x.s, size1), apply(same_size,x.o)), size3))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3
'λx.apply(not[or[and[size2,rectangle],yellow]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:and[%s,%s];4:size2;4:rectangle;4:yellow;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(x.s)),iota(filter(filter(filter(filter(filter(filter(filter(x.s, or[not[apply(same_color,iota(x.s))],nand[size3,green]]), yellow), not[implies[size2,and[rectangle,size2]]]), apply(same_shape,iota(filter(filter(x.s, yellow), not[apply(size-leq,iota(filter(x.s, blue)))])))), yellow), size2), apply(same_shape,iota(filter(x.s, circle))))))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:nand[%s,%s];4:size3;4:green;4:yellow;4:not[%s];4:implies[%s,%s];4:size2;4:and[%s,%s];4:rectangle;4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow;4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.exists(and[not[and[size1,green]],triangle], filter(x.s, apply(same_shape,iota(x.s))))'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:size1;4:green;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(and[or[not[and[blue,size3]],size3],circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:not[%s];4:and[%s,%s];4:blue;4:size3;4:size3;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[and[rectangle,size2]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:rectangle;4:size2;1:%s.o;2:x
'λx.apply(and[and[size1,or[circle,triangle]],triangle],iota(filter(filter(filter(filter(x.s, size2), size2), size3), and[not[size3],and[or[yellow,apply(same_color,x.o)],green]])))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:circle;4:triangle;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2;4:size3;4:and[%s,%s];4:not[%s];4:size3;4:and[%s,%s];4:or[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green
'λx.apply(or[nand[size3,green],size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:size3;4:green;4:size3;1:%s.o;2:x
'λx.exists(circle, filter(filter(x.s, rectangle), and[rectangle,size3]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:rectangle;4:size3
'λx.apply(or[yellow,size2],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(apply(same_size,x.o),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(filter(filter(filter(x.s, iff[triangle,green]), and[green,and[rectangle,triangle]]), size1), or[and[or[triangle,yellow],triangle],not[or[circle,size1]]]), rectangle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:triangle;4:green;4:and[%s,%s];4:green;4:and[%s,%s];4:rectangle;4:triangle;4:size1;4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:triangle;4:yellow;4:triangle;4:not[%s];4:or[%s,%s];4:circle;4:size1;4:rectangle;3:%s.s;2:x
'λx.forall(size2,filter(x.s, size3))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.forall(size2,filter(x.s, size2))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.forall(size2,filter(x.s, size1))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.forall(size3,filter(x.s, size1))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.forall(size3,filter(x.s, size2))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.forall(size3,filter(x.s, green))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.forall(size2,filter(x.s, green))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.forall(size1,filter(x.s, green))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.forall(and[and[or[blue,rectangle],triangle],circle],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:blue;4:rectangle;4:triangle;4:circle;3:%s.s;2:x
'λx.apply(or[not[implies[circle,not[size2]]],green],iota(filter(filter(filter(filter(x.s, and[size2,blue]), blue), iff[blue,circle]), and[triangle,circle])))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:implies[%s,%s];4:circle;4:not[%s];4:size2;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:blue;4:blue;4:iff[%s,%s];4:blue;4:circle;4:and[%s,%s];4:triangle;4:circle
'λx.empty(filter(filter(filter(x.s, and[size2,not[and[size2,nand[or[rectangle,apply(same_color,iota(x.s))],blue]]]]), and[triangle,rectangle]), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:not[%s];4:and[%s,%s];4:size2;4:nand[%s,%s];4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:triangle;4:rectangle;4:triangle
'λx.apply(apply(same_color,iota(filter(filter(x.s, iff[rectangle,size1]), or[and[or[implies[circle,apply(same_shape,iota(filter(x.s, implies[size2,and[apply(size-gt,iota(filter(filter(x.s, triangle), and[not[circle],green]))),green]])))],circle],rectangle],size3]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:rectangle;4:size1;4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size2;4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:not[%s];4:circle;4:green;4:green;4:circle;4:rectangle;4:size3;1:%s.o;2:x
'λx.apply(or[yellow,and[size2,green]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:and[%s,%s];4:size2;4:green;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, yellow), apply(same_color,iota(x.s))))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(x.s, apply(same_size,iota(x.s))), and[circle,size2])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size2
'λx.apply(triangle,iota(filter(filter(x.s, apply(same_size,x.o)), not[circle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:not[%s];4:circle
'λx.contains(x.o, filter(filter(x.s, size2), nor[yellow,circle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:nor[%s,%s];4:yellow;4:circle
'λx.apply(apply(same_shape,iota(filter(filter(filter(filter(x.s, nor[yellow,iff[yellow,size2]]), blue), blue), and[size2,yellow]))),iota(filter(filter(x.s, blue), and[size3,blue])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:yellow;4:iff[%s,%s];4:yellow;4:size2;4:blue;4:blue;4:and[%s,%s];4:size2;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:size3;4:blue
'λx.apply(size2,iota(filter(x.s, nor[size2,yellow])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size2;4:yellow
'λx.apply(apply(size-leq,iota(x.s)),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[blue,blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:blue;1:%s.o;2:x
'λx.apply(size1,iota(filter(x.s, nand[nand[or[green,or[triangle,yellow]],not[nand[green,and[triangle,and[or[nor[apply(same_shape,x.o),size1],and[apply(same_color,iota(filter(filter(x.s, size3), nor[blue,size2]))),blue]],implies[iff[or[circle,green],size3],yellow]]]]]],size1])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:green;4:or[%s,%s];4:triangle;4:yellow;4:not[%s];4:nand[%s,%s];4:green;4:and[%s,%s];4:triangle;4:and[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:nor[%s,%s];4:blue;4:size2;4:blue;4:implies[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:circle;4:green;4:size3;4:yellow;4:size1
'λx.apply(and[rectangle,and[rectangle,not[size1]]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:rectangle;4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[green,triangle],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(nand[triangle,yellow],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:yellow;1:%s.o;2:x
'λx.apply(and[and[not[implies[and[yellow,rectangle],green]],and[and[iff[size1,size3],not[and[blue,and[size2,green]]]],implies[size3,circle]]],and[triangle,or[yellow,blue]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:implies[%s,%s];4:and[%s,%s];4:yellow;4:rectangle;4:green;4:and[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:size1;4:size3;4:not[%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:size2;4:green;4:implies[%s,%s];4:size3;4:circle;4:and[%s,%s];4:triangle;4:or[%s,%s];4:yellow;4:blue;1:%s.o;2:x
'λx.apply(nand[or[or[size2,size1],size1],and[and[size2,circle],yellow]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:or[%s,%s];4:or[%s,%s];4:size2;4:size1;4:size1;4:and[%s,%s];4:and[%s,%s];4:size2;4:circle;4:yellow;1:%s.o;2:x
'λx.exists(blue, filter(x.s, not[triangle]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.apply(not[and[triangle,size3]],iota(filter(x.s, not[and[green,triangle]])))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:triangle;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:green;4:triangle
'λx.contains(x.o, filter(filter(x.s, green), size2))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size2
'λx.contains(x.o, filter(filter(x.s, green), size1))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1
'λx.apply(triangle,iota(filter(x.s, or[size1,and[rectangle,apply(same_size,iota(filter(x.s, green)))]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(implies[rectangle,apply(same_size,x.o)],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(size1,iota(filter(x.s, implies[or[apply(same_shape,x.o),circle],blue])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;4:blue
'λx.contains(iota(filter(filter(filter(filter(x.s, and[apply(same_shape,iota(filter(x.s, and[size1,triangle]))),not[blue]]), triangle), rectangle), not[size2])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:triangle;4:not[%s];4:blue;4:triangle;4:rectangle;4:not[%s];4:size2;3:%s.s;2:x
'λx.contains(iota(filter(filter(filter(x.s, triangle), and[implies[apply(size-geq,iota(filter(x.s, apply(same_color,x.o)))),green],green]), yellow)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:implies[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green;4:green;4:yellow;3:%s.s;2:x
'λx.apply(or[and[size3,blue],size1],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size3;4:blue;4:size1;1:iota(%s);3:%s.s;2:x
'λx.forall(or[or[size1,and[or[green,or[and[apply(size-lt,iota(filter(filter(filter(filter(x.s, rectangle), rectangle), triangle), and[blue,size2]))),not[nor[not[implies[and[circle,blue],green]],rectangle]]],size1]],rectangle]],blue],filter(x.s, apply(same_size,x.o)))'	0:forall(%s,%s);4:or[%s,%s];4:or[%s,%s];4:size1;4:and[%s,%s];4:or[%s,%s];4:green;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle;4:triangle;4:and[%s,%s];4:blue;4:size2;4:not[%s];4:nor[%s,%s];4:not[%s];4:implies[%s,%s];4:and[%s,%s];4:circle;4:blue;4:green;4:rectangle;4:size1;4:rectangle;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.exists(and[yellow,blue], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:yellow;4:blue;3:%s.s;2:x
'λx.apply(apply(same_size,iota(filter(x.s, size2))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;1:%s.o;2:x
'λx.apply(apply(same_size,iota(filter(x.s, size1))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;1:%s.o;2:x
'λx.apply(apply(same_size,iota(filter(x.s, size3))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, and[apply(size-gt,iota(x.s)),not[nor[yellow,or[size1,and[circle,and[circle,rectangle]]]]]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:not[%s];4:nor[%s,%s];4:yellow;4:or[%s,%s];4:size1;4:and[%s,%s];4:circle;4:and[%s,%s];4:circle;4:rectangle
'λx.apply(nor[not[rectangle],or[and[yellow,triangle],circle]],iota(filter(filter(x.s, apply(same_shape,iota(x.s))), apply(same_size,iota(filter(filter(filter(x.s, size2), not[and[green,blue]]), green))))))'	0:apply(%s,%s);4:nor[%s,%s];4:not[%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:yellow;4:triangle;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:not[%s];4:and[%s,%s];4:green;4:blue;4:green
'λx.contains(iota(x.s), filter(x.s, and[size1,size3]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size3
'λx.contains(iota(x.s), filter(x.s, and[size2,size1]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:size1
'λx.apply(and[green,green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:green;1:%s.o;2:x
'λx.apply(not[nor[circle,and[rectangle,triangle]]],iota(filter(filter(filter(filter(filter(filter(x.s, and[green,not[blue]]), size3), yellow), apply(same_color,iota(x.s))), or[size1,circle]), circle)))'	0:apply(%s,%s);4:not[%s];4:nor[%s,%s];4:circle;4:and[%s,%s];4:rectangle;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:not[%s];4:blue;4:size3;4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:circle;4:circle
'λx.apply(and[green,green],iota(filter(filter(x.s, rectangle), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue
'λx.apply(nand[size2,or[and[size3,triangle],green]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size2;4:or[%s,%s];4:and[%s,%s];4:size3;4:triangle;4:green;1:%s.o;2:x
'λx.forall(apply(size-lt,iota(filter(filter(x.s, size1), blue))),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue;3:%s.s;2:x
'λx.apply(and[blue,size2],iota(filter(filter(filter(filter(filter(x.s, and[green,yellow]), not[size1]), and[size1,blue]), and[and[triangle,nor[and[circle,apply(same_shape,iota(filter(x.s, or[blue,circle])))],and[not[yellow],blue]]],green]), size2)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:yellow;4:not[%s];4:size1;4:and[%s,%s];4:size1;4:blue;4:and[%s,%s];4:and[%s,%s];4:triangle;4:nor[%s,%s];4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:circle;4:and[%s,%s];4:not[%s];4:yellow;4:blue;4:green;4:size2
'λx.apply(or[size2,or[rectangle,green]],iota(filter(filter(x.s, and[apply(same_shape,x.o),not[green]]), blue)))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:or[%s,%s];4:rectangle;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:green;4:blue
'λx.forall(or[not[rectangle],yellow],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:not[%s];4:rectangle;4:yellow;3:%s.s;2:x
'λx.apply(blue,iota(filter(x.s, apply(same_shape,x.o))))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(implies[or[size3,apply(same_size,x.o)],nand[not[yellow],apply(same_size,iota(filter(x.s, not[nor[triangle,blue]])))]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:nand[%s,%s];4:not[%s];4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:nor[%s,%s];4:triangle;4:blue;1:%s.o;2:x
'λx.exists(rectangle, filter(filter(x.s, yellow), implies[and[not[size2],nand[size3,blue]],size3]))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:implies[%s,%s];4:and[%s,%s];4:not[%s];4:size2;4:nand[%s,%s];4:size3;4:blue;4:size3
'λx.apply(and[and[size1,size2],and[green,nor[and[apply(same_size,iota(x.s)),blue],size2]]],iota(filter(filter(x.s, size1), and[not[and[size1,size1]],size2])))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:size2;4:and[%s,%s];4:green;4:nor[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:blue;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:size1;4:size1;4:size2
'λx.apply(size3,iota(filter(x.s, or[apply(same_shape,iota(x.s)),circle])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle
'λx.apply(not[blue],iota(filter(x.s, apply(same_shape,x.o))))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(and[or[size2,iff[size3,apply(same_color,iota(filter(x.s, size3)))]],not[and[triangle,yellow]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size2;4:iff[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:and[%s,%s];4:triangle;4:yellow;1:%s.o;2:x
'λx.apply(not[yellow],iota(filter(filter(x.s, or[or[or[and[blue,rectangle],or[or[size3,and[green,blue]],green]],blue],size3]), green)))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:blue;4:rectangle;4:or[%s,%s];4:or[%s,%s];4:size3;4:and[%s,%s];4:green;4:blue;4:green;4:blue;4:size3;4:green
'λx.apply(not[iff[yellow,circle]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:iff[%s,%s];4:yellow;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[and[rectangle,and[or[blue,circle],size3]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:or[%s,%s];4:blue;4:circle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(x.s, nand[size3,size1]), blue)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size3;4:size1;4:blue
'λx.apply(circle,iota(filter(x.s, and[not[triangle],size2])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:triangle;4:size2
'λx.apply(not[nand[rectangle,rectangle]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:nand[%s,%s];4:rectangle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, or[blue,or[size1,nand[size2,and[apply(same_size,iota(filter(x.s, or[and[circle,and[circle,not[and[size1,triangle]]]],and[size2,size3]]))),circle]]]]), size2))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:or[%s,%s];4:size1;4:nand[%s,%s];4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:circle;4:not[%s];4:and[%s,%s];4:size1;4:triangle;4:and[%s,%s];4:size2;4:size3;4:circle;4:size2
'λx.apply(apply(same_shape,iota(filter(filter(x.s, or[triangle,size2]), not[yellow]))),iota(filter(filter(x.s, size1), size2)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:size2;4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2
'λx.apply(apply(same_size,x.o),iota(filter(filter(x.s, or[or[nor[apply(same_color,x.o),blue],yellow],or[and[yellow,size2],and[and[and[size1,and[triangle,nand[and[size3,blue],apply(same_size,x.o)]]],size1],size2]]]), apply(size-leq,x.o))))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue;4:yellow;4:or[%s,%s];4:and[%s,%s];4:yellow;4:size2;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:triangle;4:nand[%s,%s];4:and[%s,%s];4:size3;4:blue;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1;4:size2;4:apply(%s,%s);5:size-leq;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(filter(filter(filter(x.s, circle), green), and[not[apply(same_shape,x.o)],apply(same_size,iota(filter(x.s, rectangle)))]), size1), rectangle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1;4:rectangle
'λx.forall(apply(size-lt,x.o),filter(x.s, and[triangle,size1]))'	0:forall(%s,%s);4:apply(%s,%s);5:size-lt;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:size1
'λx.apply(and[triangle,iff[rectangle,circle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:iff[%s,%s];4:rectangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[or[and[size2,rectangle],rectangle]],iota(filter(filter(filter(x.s, or[nor[implies[triangle,nand[implies[size1,iff[size1,apply(size-leq,x.o)]],and[blue,apply(size-gt,iota(filter(x.s, and[or[size1,or[yellow,blue]],green])))]]],size3],triangle]), yellow), size3)))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:and[%s,%s];4:size2;4:rectangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:nor[%s,%s];4:implies[%s,%s];4:triangle;4:nand[%s,%s];4:implies[%s,%s];4:size1;4:iff[%s,%s];4:size1;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:and[%s,%s];4:blue;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:size1;4:or[%s,%s];4:yellow;4:blue;4:green;4:size3;4:triangle;4:yellow;4:size3
'λx.apply(nand[yellow,apply(same_shape,iota(x.s))],iota(filter(filter(x.s, not[nor[triangle,rectangle]]), and[apply(same_shape,x.o),yellow])))'	0:apply(%s,%s);4:nand[%s,%s];4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:nor[%s,%s];4:triangle;4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow
'λx.forall(and[yellow,green],filter(x.s, nand[circle,apply(same_shape,iota(filter(x.s, apply(same_shape,iota(filter(x.s, triangle))))))]))'	0:forall(%s,%s);4:and[%s,%s];4:yellow;4:green;3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.exists(or[nand[and[and[nand[apply(same_color,x.o),size3],and[size2,or[yellow,nand[apply(size-gt,iota(x.s)),triangle]]]],size2],and[nor[size1,yellow],yellow]],size2], filter(filter(filter(x.s, circle), circle), and[circle,yellow]))'	0:exists(%s, %s);4:or[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3;4:and[%s,%s];4:size2;4:or[%s,%s];4:yellow;4:nand[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:triangle;4:size2;4:and[%s,%s];4:nor[%s,%s];4:size1;4:yellow;4:yellow;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:circle;4:and[%s,%s];4:circle;4:yellow
'λx.apply(and[rectangle,and[blue,nand[yellow,size3]]],iota(filter(x.s, or[size2,apply(size-geq,x.o)])))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:blue;4:nand[%s,%s];4:yellow;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.apply(nor[green,triangle],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:green;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size3,not[green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:not[%s];4:green;1:%s.o;2:x
'λx.forall(apply(same_color,x.o),filter(filter(filter(x.s, yellow), size2), triangle))'	0:forall(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2;4:triangle
'λx.apply(blue,iota(filter(filter(filter(x.s, triangle), size2), yellow)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2;4:yellow
'λx.apply(not[not[size1]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:size1;1:%s.o;2:x
'λx.apply(not[not[size3]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:size3;1:%s.o;2:x
'λx.apply(apply(same_color,x.o),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.exists(apply(same_shape,iota(x.s)), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(rectangle,iota(filter(x.s, apply(same_shape,x.o))))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(and[not[not[green]],apply(same_size,iota(filter(x.s, apply(same_shape,x.o))))],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:not[%s];4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[or[blue,size1],green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:blue;4:size1;4:green;1:iota(%s);3:%s.s;2:x
'λx.exists(triangle, filter(filter(x.s, size3), apply(same_size,iota(x.s))))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(filter(x.s, blue), size1), blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1;4:blue
'λx.apply(size1,iota(filter(x.s, implies[nor[triangle,apply(same_color,x.o)],triangle])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:nor[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle
'λx.apply(yellow,iota(filter(filter(x.s, and[and[blue,green],size2]), yellow)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:blue;4:green;4:size2;4:yellow
'λx.apply(and[size3,nor[circle,size3]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:nor[%s,%s];4:circle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.exists(and[blue,apply(size-leq,iota(x.s))], filter(filter(x.s, triangle), size2))'	0:exists(%s, %s);4:and[%s,%s];4:blue;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2
'λx.apply(nor[green,and[not[and[apply(same_shape,x.o),size3]],size1]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:green;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3;4:size1;1:%s.o;2:x
'λx.apply(and[size1,and[circle,yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:and[%s,%s];4:circle;4:yellow;1:%s.o;2:x
'λx.apply(and[not[size1],blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size1;4:blue;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(x.s, size2), circle), blue))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle;4:blue
'λx.contains(iota(filter(x.s, size1)), filter(x.s, circle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.forall(and[blue,rectangle],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:blue;4:rectangle;3:%s.s;2:x
'λx.apply(or[blue,circle],iota(filter(x.s, and[size2,circle])))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:circle
'λx.apply(and[yellow,circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:circle;1:%s.o;2:x
'λx.apply(and[size2,or[apply(same_size,iota(x.s)),and[yellow,yellow]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(x.s, and[green,green])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:green
'λx.apply(or[apply(same_size,x.o),size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1;1:%s.o;2:x
'λx.apply(or[apply(same_size,x.o),size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, apply(same_shape,x.o)))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(filter(x.s, size2), and[circle,yellow]), size3)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:circle;4:yellow;4:size3
'λx.apply(not[nand[not[and[apply(same_shape,x.o),yellow]],circle]],x.o)'	0:apply(%s,%s);4:not[%s];4:nand[%s,%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow;4:circle;1:%s.o;2:x
'λx.apply(iff[apply(same_size,x.o),and[size3,size1]],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:size3;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.forall(or[or[size1,and[or[green,or[and[apply(size-lt,iota(filter(filter(filter(filter(x.s, not[and[circle,circle]]), rectangle), triangle), and[blue,size2]))),not[nor[not[implies[and[circle,blue],green]],rectangle]]],size1]],rectangle]],blue],filter(x.s, apply(same_size,x.o)))'	0:forall(%s,%s);4:or[%s,%s];4:or[%s,%s];4:size1;4:and[%s,%s];4:or[%s,%s];4:green;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:circle;4:circle;4:rectangle;4:triangle;4:and[%s,%s];4:blue;4:size2;4:not[%s];4:nor[%s,%s];4:not[%s];4:implies[%s,%s];4:and[%s,%s];4:circle;4:blue;4:green;4:rectangle;4:size1;4:rectangle;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.forall(not[circle],x.s)'	0:forall(%s,%s);4:not[%s];4:circle;3:%s.s;2:x
'λx.forall(or[apply(size-gt,iota(x.s)),circle],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:circle;3:%s.s;2:x
'λx.apply(not[not[green]],iota(filter(filter(filter(x.s, apply(same_shape,x.o)), not[blue]), triangle)))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:blue;4:triangle
'λx.apply(and[apply(same_size,iota(filter(filter(x.s, blue), size3))),triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3;4:triangle;1:%s.o;2:x
'λx.apply(and[circle,green],iota(filter(x.s, implies[size3,size3])))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size3;4:size3
'λx.empty(filter(filter(x.s, size3), implies[size3,and[size3,and[or[size2,rectangle],apply(same_color,iota(filter(x.s, and[size1,triangle])))]]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:implies[%s,%s];4:size3;4:and[%s,%s];4:size3;4:and[%s,%s];4:or[%s,%s];4:size2;4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:triangle
'λx.contains(iota(filter(filter(x.s, and[circle,or[and[blue,size2],yellow]]), blue)), filter(x.s, and[green,yellow]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:or[%s,%s];4:and[%s,%s];4:blue;4:size2;4:yellow;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:yellow
'λx.apply(nand[yellow,rectangle],iota(filter(filter(x.s, and[and[yellow,not[blue]],size2]), triangle)))'	0:apply(%s,%s);4:nand[%s,%s];4:yellow;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:yellow;4:not[%s];4:blue;4:size2;4:triangle
'λx.apply(and[apply(same_color,iota(x.s)),size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size3;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, and[apply(same_shape,x.o),blue])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue
'λx.apply(or[size2,not[green]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:not[%s];4:green;1:%s.o;2:x
'λx.exists(apply(same_color,iota(x.s)), filter(filter(filter(x.s, circle), circle), not[size3]))'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:circle;4:not[%s];4:size3
'λx.contains(iota(x.s), filter(filter(filter(x.s, and[size3,circle]), or[and[size3,and[blue,yellow]],size1]), or[and[size2,circle],rectangle]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:circle;4:or[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:blue;4:yellow;4:size1;4:or[%s,%s];4:and[%s,%s];4:size2;4:circle;4:rectangle
'λx.apply(yellow,iota(filter(x.s, and[or[or[yellow,nand[size3,apply(same_color,x.o)]],triangle],size3])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:yellow;4:nand[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;4:size3
'λx.empty(filter(x.s, and[yellow,blue]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:blue
'λx.apply(apply(size-geq,iota(x.s)),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.exists(not[size2], filter(filter(x.s, iff[rectangle,apply(same_size,x.o)]), size1))'	0:exists(%s, %s);4:not[%s];4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1
'λx.apply(and[not[and[or[and[triangle,yellow],and[yellow,blue]],or[triangle,green]]],size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:triangle;4:yellow;4:and[%s,%s];4:yellow;4:blue;4:or[%s,%s];4:triangle;4:green;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(or[rectangle,implies[green,nand[not[nor[yellow,triangle]],and[size3,rectangle]]]],iota(filter(x.s, apply(size-geq,x.o))))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:implies[%s,%s];4:green;4:nand[%s,%s];4:not[%s];4:nor[%s,%s];4:yellow;4:triangle;4:and[%s,%s];4:size3;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.apply(not[and[rectangle,size1]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:rectangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(not[and[rectangle,size2]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:rectangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(filter(filter(filter(filter(filter(x.s, green), blue), green), or[green,and[green,and[not[apply(same_size,iota(filter(x.s, yellow)))],green]]]), blue), green), yellow)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue;4:green;4:or[%s,%s];4:green;4:and[%s,%s];4:green;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green;4:blue;4:green;4:yellow
'λx.exists(green, filter(filter(x.s, rectangle), or[size3,and[size3,green]]))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:or[%s,%s];4:size3;4:and[%s,%s];4:size3;4:green
'λx.apply(and[apply(same_size,x.o),blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(filter(x.s, and[triangle,circle]), apply(size-leq,x.o)), or[or[not[not[green]],blue],size2]), triangle)), filter(filter(x.s, implies[apply(same_color,iota(x.s)),size1]), triangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:circle;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:or[%s,%s];4:or[%s,%s];4:not[%s];4:not[%s];4:green;4:blue;4:size2;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size1;4:triangle
'λx.apply(or[or[green,and[blue,size1]],size1],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:green;4:and[%s,%s];4:blue;4:size1;4:size1;1:iota(%s);3:%s.s;2:x
'λx.forall(triangle,filter(filter(filter(x.s, rectangle), yellow), apply(same_size,iota(x.s))))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(x.s, and[nand[or[size1,or[and[triangle,circle],triangle]],not[triangle]],apply(same_shape,iota(x.s))]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:size1;4:or[%s,%s];4:and[%s,%s];4:triangle;4:circle;4:triangle;4:not[%s];4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[yellow,size3],size1],iota(filter(filter(filter(x.s, blue), apply(same_size,x.o)), nor[rectangle,size3])))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:size3;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:nor[%s,%s];4:rectangle;4:size3
'λx.apply(not[or[size1,and[circle,blue]]],iota(filter(x.s, apply(size-geq,x.o))))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:size1;4:and[%s,%s];4:circle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.apply(or[and[not[size2],size1],iff[rectangle,size3]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:not[%s];4:size2;4:size1;4:iff[%s,%s];4:rectangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(size-geq,x.o),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, and[nand[and[yellow,size3],rectangle],not[and[and[circle,triangle],size2]]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:yellow;4:size3;4:rectangle;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:triangle;4:size2
'λx.empty(filter(filter(filter(x.s, and[and[and[and[or[blue,apply(size-gt,iota(filter(x.s, and[size3,size3])))],and[green,or[size2,and[size2,circle]]]],circle],nand[size1,size2]],or[rectangle,size2]]), rectangle), and[or[and[size1,yellow],size3],green]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:blue;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:size3;4:and[%s,%s];4:green;4:or[%s,%s];4:size2;4:and[%s,%s];4:size2;4:circle;4:circle;4:nand[%s,%s];4:size1;4:size2;4:or[%s,%s];4:rectangle;4:size2;4:rectangle;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size1;4:yellow;4:size3;4:green
'λx.apply(apply(same_size,iota(x.s)),iota(filter(filter(filter(x.s, and[not[yellow],rectangle]), or[and[yellow,or[blue,size3]],not[green]]), triangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:yellow;4:rectangle;4:or[%s,%s];4:and[%s,%s];4:yellow;4:or[%s,%s];4:blue;4:size3;4:not[%s];4:green;4:triangle
'λx.contains(iota(x.s), filter(x.s, and[size2,or[and[blue,size1],blue]]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:or[%s,%s];4:and[%s,%s];4:blue;4:size1;4:blue
'λx.apply(apply(same_size,iota(filter(x.s, size3))),iota(filter(filter(filter(x.s, triangle), green), apply(same_shape,iota(filter(x.s, size3))))))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(and[nand[green,size2],rectangle],iota(filter(filter(x.s, size3), size2)))'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:green;4:size2;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2
'λx.empty(filter(filter(filter(filter(x.s, implies[circle,blue]), size2), and[and[size1,and[green,yellow]],rectangle]), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:circle;4:blue;4:size2;4:and[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:green;4:yellow;4:rectangle;4:rectangle
'λx.apply(implies[yellow,and[size3,triangle]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:yellow;4:and[%s,%s];4:size3;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[blue,circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:circle;1:%s.o;2:x
'λx.empty(filter(filter(x.s, apply(size-leq,iota(x.s))), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:rectangle
'λx.apply(size3,iota(filter(x.s, or[and[yellow,blue],or[and[yellow,size1],size2]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:yellow;4:blue;4:or[%s,%s];4:and[%s,%s];4:yellow;4:size1;4:size2
'λx.apply(iff[iff[not[circle],and[blue,circle]],or[size2,size1]],iota(filter(filter(filter(x.s, triangle), and[and[size1,and[green,and[and[circle,rectangle],or[rectangle,or[green,or[yellow,iff[and[blue,rectangle],size3]]]]]]],rectangle]), rectangle)))'	0:apply(%s,%s);4:iff[%s,%s];4:iff[%s,%s];4:not[%s];4:circle;4:and[%s,%s];4:blue;4:circle;4:or[%s,%s];4:size2;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:circle;4:rectangle;4:or[%s,%s];4:rectangle;4:or[%s,%s];4:green;4:or[%s,%s];4:yellow;4:iff[%s,%s];4:and[%s,%s];4:blue;4:rectangle;4:size3;4:rectangle;4:rectangle
'λx.apply(and[blue,and[triangle,rectangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:triangle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[not[not[size1]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:not[%s];4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(not[nand[triangle,nor[green,yellow]]],x.o)'	0:apply(%s,%s);4:not[%s];4:nand[%s,%s];4:triangle;4:nor[%s,%s];4:green;4:yellow;1:%s.o;2:x
'λx.apply(not[size3],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(and[size2,nand[blue,implies[blue,not[apply(size-geq,iota(x.s))]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:nand[%s,%s];4:blue;4:implies[%s,%s];4:blue;4:not[%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(x.s, or[and[size1,size2],rectangle]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size1;4:size2;4:rectangle;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(x.s, and[nor[and[and[size1,or[and[and[apply(same_color,x.o),yellow],blue],and[not[circle],green]]],and[blue,triangle]],not[green]],apply(same_size,x.o)]), apply(same_color,iota(filter(filter(x.s, green), size1))))))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;4:blue;4:and[%s,%s];4:not[%s];4:circle;4:green;4:and[%s,%s];4:blue;4:triangle;4:not[%s];4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1
'λx.exists(size1, filter(filter(x.s, yellow), blue))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:blue
'λx.apply(blue,iota(filter(filter(filter(x.s, and[or[triangle,and[circle,size1]],rectangle]), apply(same_size,iota(filter(filter(x.s, blue), and[yellow,size3])))), circle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:triangle;4:and[%s,%s];4:circle;4:size1;4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:yellow;4:size3;4:circle
'λx.apply(apply(size-leq,x.o),iota(filter(x.s, green)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.exists(and[size1,size3], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:size1;4:size3;3:%s.s;2:x
'λx.empty(filter(x.s, and[and[size3,size2],circle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size3;4:size2;4:circle
'λx.apply(apply(same_shape,iota(filter(filter(x.s, circle), nand[not[nor[size3,size3]],and[apply(same_color,x.o),green]]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:nand[%s,%s];4:not[%s];4:nor[%s,%s];4:size3;4:size3;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green;1:%s.o;2:x
'λx.exists(and[size2,size1], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:size2;4:size1;3:%s.s;2:x
'λx.exists(and[size2,size3], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:size2;4:size3;3:%s.s;2:x
'λx.apply(and[green,circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:circle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(x.s, nand[yellow,green]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:yellow;4:green
'λx.apply(implies[not[size3],and[apply(same_color,x.o),size1]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:not[%s];4:size3;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1;1:iota(%s);3:%s.s;2:x
'λx.forall(or[circle,and[or[triangle,size3],or[yellow,and[yellow,triangle]]]],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:circle;4:and[%s,%s];4:or[%s,%s];4:triangle;4:size3;4:or[%s,%s];4:yellow;4:and[%s,%s];4:yellow;4:triangle;3:%s.s;2:x
'λx.forall(and[not[apply(size-lt,iota(x.s))],and[and[or[and[and[apply(size-lt,iota(x.s)),and[size2,size2]],yellow],size3],or[triangle,size3]],green]],filter(x.s, rectangle))'	0:forall(%s,%s);4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:size2;4:yellow;4:size3;4:or[%s,%s];4:triangle;4:size3;4:green;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(not[or[triangle,nand[and[iff[yellow,size1],nor[yellow,and[green,size1]]],nor[rectangle,size2]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:triangle;4:nand[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:yellow;4:size1;4:nor[%s,%s];4:yellow;4:and[%s,%s];4:green;4:size1;4:nor[%s,%s];4:rectangle;4:size2;1:%s.o;2:x
'λx.exists(and[blue,size1], filter(x.s, green))'	0:exists(%s, %s);4:and[%s,%s];4:blue;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.forall(green,x.s)'	0:forall(%s,%s);4:green;3:%s.s;2:x
'λx.apply(or[apply(same_size,x.o),blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;1:%s.o;2:x
'λx.apply(implies[implies[blue,circle],size1],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:implies[%s,%s];4:blue;4:circle;4:size1;1:%s.o;2:x
'λx.apply(apply(same_color,iota(filter(x.s, or[yellow,nor[triangle,size2]]))),iota(filter(x.s, blue)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:nor[%s,%s];4:triangle;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(apply(same_shape,iota(filter(x.s, or[blue,triangle]))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[and[circle,circle],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:circle;4:circle;4:blue;1:%s.o;2:x
'λx.exists(nand[triangle,size3], filter(x.s, circle))'	0:exists(%s, %s);4:nand[%s,%s];4:triangle;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[rectangle,size2],iota(filter(filter(x.s, or[size3,size1]), and[blue,size1])))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:size1;4:and[%s,%s];4:blue;4:size1
'λx.apply(or[and[or[circle,and[nor[size3,rectangle],circle]],yellow],size1],iota(filter(x.s, apply(size-geq,x.o))))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:circle;4:and[%s,%s];4:nor[%s,%s];4:size3;4:rectangle;4:circle;4:yellow;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.apply(and[blue,yellow],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(triangle,iota(filter(x.s, and[and[and[size2,blue],size1],and[circle,yellow]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:blue;4:size1;4:and[%s,%s];4:circle;4:yellow
'λx.apply(and[apply(same_color,x.o),and[apply(same_size,iota(x.s)),green]],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(size2,iota(filter(filter(x.s, not[yellow]), triangle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:triangle
'λx.apply(and[and[green,blue],apply(size-leq,x.o)],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:green;4:blue;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[yellow,apply(size-leq,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(or[or[yellow,and[circle,and[apply(size-geq,x.o),not[triangle]]]],size2],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:yellow;4:and[%s,%s];4:circle;4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:not[%s];4:triangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size2,green],iota(filter(filter(x.s, not[size2]), size2)))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:size2
'λx.apply(and[rectangle,size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:size2;1:%s.o;2:x
'λx.apply(and[rectangle,size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:size3;1:%s.o;2:x
'λx.apply(and[rectangle,size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:size1;1:%s.o;2:x
'λx.exists(size2, filter(x.s, and[rectangle,triangle]))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:triangle
'λx.apply(size3,iota(filter(filter(filter(x.s, not[and[and[circle,triangle],size2]]), blue), or[yellow,blue])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:triangle;4:size2;4:blue;4:or[%s,%s];4:yellow;4:blue
'λx.apply(and[yellow,or[yellow,blue]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:or[%s,%s];4:yellow;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[triangle,apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[size3,green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:green;1:%s.o;2:x
'λx.apply(and[or[green,triangle],green],iota(filter(filter(filter(x.s, circle), size2), size1)))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:green;4:triangle;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size2;4:size1
'λx.forall(rectangle,filter(x.s, nor[yellow,size1]))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:yellow;4:size1
'λx.forall(and[size1,size2],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:size1;4:size2;3:%s.s;2:x
'λx.forall(and[size1,size3],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:size1;4:size3;3:%s.s;2:x
'λx.contains(iota(filter(filter(filter(x.s, blue), circle), and[and[yellow,size2],and[size1,green]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle;4:and[%s,%s];4:and[%s,%s];4:yellow;4:size2;4:and[%s,%s];4:size1;4:green;3:%s.s;2:x
'λx.apply(and[green,size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[green,size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:size3;1:iota(%s);3:%s.s;2:x
'λx.exists(or[not[apply(same_color,iota(filter(x.s, or[implies[and[triangle,or[triangle,circle]],implies[and[size2,and[size3,and[size3,triangle]]],green]],size3])))],triangle], filter(filter(x.s, green), size1))'	0:exists(%s, %s);4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:triangle;4:or[%s,%s];4:triangle;4:circle;4:implies[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:size3;4:and[%s,%s];4:size3;4:triangle;4:green;4:size3;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1
'λx.exists(and[or[circle,not[size3]],and[rectangle,rectangle]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:or[%s,%s];4:circle;4:not[%s];4:size3;4:and[%s,%s];4:rectangle;4:rectangle;3:%s.s;2:x
'λx.apply(or[size1,blue],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(and[yellow,or[green,and[blue,and[rectangle,size2]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:or[%s,%s];4:green;4:and[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[apply(same_color,iota(filter(filter(x.s, triangle), nand[size2,yellow]))),rectangle],iota(filter(x.s, and[size2,size3])))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:nand[%s,%s];4:size2;4:yellow;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:size3
'λx.apply(blue,iota(filter(filter(x.s, size2), rectangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle
'λx.apply(or[nor[or[size3,not[blue]],size2],size3],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:size3;4:not[%s];4:blue;4:size2;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(filter(filter(x.s, blue), size2), yellow), iff[and[rectangle,triangle],size1])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2;4:yellow;4:iff[%s,%s];4:and[%s,%s];4:rectangle;4:triangle;4:size1
'λx.apply(and[and[not[iff[rectangle,size2]],or[size1,blue]],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:iff[%s,%s];4:rectangle;4:size2;4:or[%s,%s];4:size1;4:blue;4:size2;1:%s.o;2:x
'λx.forall(green,filter(x.s, circle))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[rectangle,yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:yellow;1:%s.o;2:x
'λx.apply(or[size2,blue],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[size1,not[not[yellow]]],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:iff[%s,%s];4:size1;4:not[%s];4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(or[yellow,circle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[and[iff[not[apply(same_size,x.o)],blue],yellow]],iota(filter(x.s, green)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:iff[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[or[green,nand[size3,not[green]]],and[yellow,or[or[apply(size-lt,iota(x.s)),green],apply(same_size,x.o)]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:green;4:nand[%s,%s];4:size3;4:not[%s];4:green;4:and[%s,%s];4:yellow;4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.forall(green,filter(filter(filter(x.s, size3), yellow), size3))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow;4:size3
'λx.apply(nand[apply(size-gt,iota(filter(x.s, rectangle))),rectangle],iota(filter(x.s, and[size1,size3])))'	0:apply(%s,%s);4:nand[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size3
'λx.apply(circle,iota(filter(filter(x.s, blue), nand[circle,blue])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:nand[%s,%s];4:circle;4:blue
'λx.apply(and[rectangle,and[size2,blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:size2;4:blue;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, apply(same_shape,iota(filter(x.s, size2))))))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(apply(same_color,iota(filter(x.s, size3))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size1,green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:green;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(x.s, triangle), not[circle])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:not[%s];4:circle
'λx.contains(iota(filter(x.s, implies[rectangle,size2])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:rectangle;4:size2;3:%s.s;2:x
'λx.forall(and[and[or[blue,and[not[apply(size-geq,x.o)],rectangle]],and[nor[not[circle],apply(size-lt,iota(filter(x.s, size3)))],or[circle,size2]]],circle],filter(x.s, triangle))'	0:forall(%s,%s);4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:blue;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:rectangle;4:and[%s,%s];4:nor[%s,%s];4:not[%s];4:circle;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:circle;4:size2;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(blue,iota(filter(filter(filter(filter(x.s, and[size2,or[or[nor[or[and[apply(same_color,x.o),rectangle],size2],triangle],not[not[triangle]]],iff[and[rectangle,apply(same_size,x.o)],circle]]]), triangle), apply(size-gt,iota(filter(filter(x.s, implies[yellow,and[blue,yellow]]), rectangle)))), and[circle,blue])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:or[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle;4:size2;4:triangle;4:not[%s];4:not[%s];4:triangle;4:iff[%s,%s];4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;4:triangle;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:yellow;4:and[%s,%s];4:blue;4:yellow;4:rectangle;4:and[%s,%s];4:circle;4:blue
'λx.empty(filter(filter(x.s, or[size2,and[and[apply(same_shape,iota(x.s)),and[rectangle,size2]],triangle]]), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:size2;4:triangle;4:triangle
'λx.apply(or[or[size1,not[rectangle]],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:size1;4:not[%s];4:rectangle;4:blue;1:%s.o;2:x
'λx.forall(and[rectangle,blue],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:rectangle;4:blue;3:%s.s;2:x
'λx.apply(not[apply(same_size,iota(x.s))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(and[and[blue,circle],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:circle;4:circle;1:%s.o;2:x
'λx.apply(not[apply(same_color,iota(filter(filter(filter(filter(x.s, size3), and[size3,green]), nor[yellow,and[circle,circle]]), or[size3,yellow])))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:size3;4:green;4:nor[%s,%s];4:yellow;4:and[%s,%s];4:circle;4:circle;4:or[%s,%s];4:size3;4:yellow;1:%s.o;2:x
'λx.exists(or[size1,and[or[blue,or[and[apply(size-lt,iota(filter(filter(filter(filter(x.s, not[and[circle,circle]]), rectangle), triangle), nor[apply(same_size,x.o),blue]))),not[nor[not[implies[and[circle,blue],green]],rectangle]]],size1]],rectangle]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:size1;4:and[%s,%s];4:or[%s,%s];4:blue;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:circle;4:circle;4:rectangle;4:triangle;4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;4:not[%s];4:nor[%s,%s];4:not[%s];4:implies[%s,%s];4:and[%s,%s];4:circle;4:blue;4:green;4:rectangle;4:size1;4:rectangle;3:%s.s;2:x
'λx.apply(nand[yellow,rectangle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:yellow;4:rectangle;1:%s.o;2:x
'λx.apply(or[size2,and[or[iff[and[size1,triangle],blue],rectangle],size1]],iota(filter(filter(filter(filter(filter(filter(filter(filter(x.s, apply(same_size,iota(x.s))), green), size1), size2), triangle), or[or[and[blue,and[iff[nor[yellow,green],blue],circle]],not[not[or[or[triangle,rectangle],not[rectangle]]]]],or[and[size3,and[size1,size1]],triangle]]), size2), rectangle)))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:and[%s,%s];4:or[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:size1;4:triangle;4:blue;4:rectangle;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:green;4:size1;4:size2;4:triangle;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:iff[%s,%s];4:nor[%s,%s];4:yellow;4:green;4:blue;4:circle;4:not[%s];4:not[%s];4:or[%s,%s];4:or[%s,%s];4:triangle;4:rectangle;4:not[%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:size1;4:size1;4:triangle;4:size2;4:rectangle
'λx.apply(and[size2,green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:green;1:%s.o;2:x
'λx.contains(x.o, filter(filter(filter(filter(x.s, rectangle), rectangle), size2), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle;4:size2;4:green
'λx.apply(or[not[size1],triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:size1;4:triangle;1:%s.o;2:x
'λx.apply(not[apply(same_shape,iota(filter(filter(x.s, or[circle,size3]), yellow)))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:size3;4:yellow;1:%s.o;2:x
'λx.contains(iota(filter(x.s, and[and[implies[apply(same_size,x.o),implies[blue,size2]],size3],or[and[size2,nor[implies[or[triangle,rectangle],size3],nor[circle,apply(size-gt,x.o)]]],or[size2,size3]]])), filter(filter(x.s, rectangle), implies[yellow,rectangle]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:implies[%s,%s];4:blue;4:size2;4:size3;4:or[%s,%s];4:and[%s,%s];4:size2;4:nor[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:triangle;4:rectangle;4:size3;4:nor[%s,%s];4:circle;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:or[%s,%s];4:size2;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:implies[%s,%s];4:yellow;4:rectangle
'λx.contains(iota(x.s), filter(filter(x.s, and[triangle,nor[size3,rectangle]]), not[and[rectangle,and[rectangle,blue]]]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:nor[%s,%s];4:size3;4:rectangle;4:not[%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:rectangle;4:blue
'λx.apply(and[circle,not[and[and[triangle,size3],size1]]],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:size3;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.exists(apply(same_color,iota(x.s)), filter(filter(x.s, apply(same_size,x.o)), triangle))'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle
'λx.forall(not[size3],filter(filter(x.s, implies[and[size2,size3],and[and[size3,green],and[nor[size1,triangle],apply(size-gt,iota(x.s))]]]), size1))'	0:forall(%s,%s);4:not[%s];4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:and[%s,%s];4:size2;4:size3;4:and[%s,%s];4:and[%s,%s];4:size3;4:green;4:and[%s,%s];4:nor[%s,%s];4:size1;4:triangle;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:size1
'λx.apply(circle,iota(filter(x.s, nand[and[size3,blue],blue])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:and[%s,%s];4:size3;4:blue;4:blue
'λx.apply(not[yellow],iota(filter(filter(x.s, rectangle), size2)))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2
'λx.apply(or[and[circle,and[yellow,yellow]],size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:yellow;4:yellow;4:size1;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(filter(x.s, rectangle), blue), apply(same_color,x.o)), not[size1])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:size1;3:%s.s;2:x
'λx.forall(green,filter(x.s, green))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.exists(and[iff[or[apply(size-geq,x.o),triangle],yellow],triangle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:triangle;4:yellow;4:triangle;3:%s.s;2:x
'λx.apply(or[nand[not[yellow],triangle],green],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:not[%s];4:yellow;4:triangle;4:green;1:iota(%s);3:%s.s;2:x
'λx.forall(or[size3,apply(same_shape,x.o)],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(not[and[yellow,apply(same_shape,iota(filter(x.s, size1)))]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(and[or[rectangle,apply(same_color,x.o)],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue;1:%s.o;2:x
'λx.apply(and[rectangle,nand[triangle,green]],iota(filter(x.s, or[circle,blue])))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:nand[%s,%s];4:triangle;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:blue
'λx.apply(and[blue,rectangle],iota(filter(filter(x.s, circle), triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle
'λx.apply(green,iota(filter(filter(filter(x.s, apply(same_shape,iota(filter(x.s, or[or[triangle,not[green]],implies[and[and[size3,and[triangle,blue]],not[not[not[size2]]]],triangle]])))), size3), size1)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:triangle;4:not[%s];4:green;4:implies[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:triangle;4:blue;4:not[%s];4:not[%s];4:not[%s];4:size2;4:triangle;4:size3;4:size1
'λx.apply(and[green,yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:yellow;1:%s.o;2:x
'λx.apply(and[implies[green,circle],iff[not[circle],or[triangle,implies[apply(same_color,x.o),apply(same_color,x.o)]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:green;4:circle;4:iff[%s,%s];4:not[%s];4:circle;4:or[%s,%s];4:triangle;4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, size1), circle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle
'λx.apply(iff[and[size2,or[and[size1,size1],not[blue]]],triangle],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:size2;4:or[%s,%s];4:and[%s,%s];4:size1;4:size1;4:not[%s];4:blue;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[iff[yellow,apply(same_size,iota(x.s))]],x.o)'	0:apply(%s,%s);4:not[%s];4:iff[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(size2,iota(filter(x.s, not[size1])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1
'λx.apply(size3,iota(filter(x.s, not[size1])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1
'λx.apply(size1,iota(filter(x.s, not[size3])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3
'λx.apply(not[apply(size-lt,x.o)],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(filter(x.s, size3), green), triangle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green;4:triangle
'λx.empty(filter(filter(x.s, and[rectangle,apply(same_color,x.o)]), nand[green,and[not[or[triangle,rectangle]],rectangle]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:nand[%s,%s];4:green;4:and[%s,%s];4:not[%s];4:or[%s,%s];4:triangle;4:rectangle;4:rectangle
'λx.apply(or[green,yellow],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.exists(size1, filter(filter(x.s, apply(same_color,x.o)), blue))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue
'λx.apply(and[yellow,and[or[iff[circle,implies[green,size1]],green],or[blue,green]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:and[%s,%s];4:or[%s,%s];4:iff[%s,%s];4:circle;4:implies[%s,%s];4:green;4:size1;4:green;4:or[%s,%s];4:blue;4:green;1:%s.o;2:x
'λx.apply(not[not[and[triangle,not[green]]]],iota(filter(filter(filter(x.s, rectangle), yellow), rectangle)))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:and[%s,%s];4:triangle;4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:yellow;4:rectangle
'λx.exists(iff[size1,size1], filter(x.s, size2))'	0:exists(%s, %s);4:iff[%s,%s];4:size1;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(rectangle,iota(filter(filter(filter(x.s, size1), apply(same_size,x.o)), not[apply(same_size,x.o)])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.exists(or[and[apply(same_color,iota(filter(filter(x.s, triangle), triangle))),triangle],blue], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:triangle;4:triangle;4:blue;3:%s.s;2:x
'λx.exists(triangle, filter(filter(x.s, and[triangle,not[circle]]), and[not[and[rectangle,or[size1,implies[size3,size2]]]],green]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:not[%s];4:circle;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:rectangle;4:or[%s,%s];4:size1;4:implies[%s,%s];4:size3;4:size2;4:green
'λx.contains(iota(filter(x.s, yellow)), filter(x.s, and[apply(same_shape,x.o),and[size3,and[not[and[or[and[rectangle,size1],or[and[triangle,circle],size3]],iff[triangle,rectangle]]],yellow]]]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:size3;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:rectangle;4:size1;4:or[%s,%s];4:and[%s,%s];4:triangle;4:circle;4:size3;4:iff[%s,%s];4:triangle;4:rectangle;4:yellow
'λx.apply(nand[blue,triangle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:blue;4:triangle;1:%s.o;2:x
'λx.apply(apply(same_color,iota(filter(filter(filter(filter(x.s, size3), apply(same_shape,iota(x.s))), and[size2,nand[size3,triangle]]), size1))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:nand[%s,%s];4:size3;4:triangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(x.s, size3), circle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle
'λx.apply(implies[size2,and[yellow,not[yellow]]],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:implies[%s,%s];4:size2;4:and[%s,%s];4:yellow;4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(iff[not[size2],or[circle,size2]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:not[%s];4:size2;4:or[%s,%s];4:circle;4:size2;1:%s.o;2:x
'λx.apply(size1,iota(filter(x.s, or[yellow,triangle])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:triangle
'λx.exists(yellow, filter(filter(filter(x.s, or[size1,and[rectangle,rectangle]]), triangle), size2))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:and[%s,%s];4:rectangle;4:rectangle;4:triangle;4:size2
'λx.apply(yellow,iota(x.s))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(and[rectangle,and[size2,blue]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:size2;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[yellow,blue],yellow],iota(filter(filter(filter(filter(filter(filter(filter(filter(filter(x.s, not[not[green]]), rectangle), apply(same_shape,iota(x.s))), size3), blue), size2), triangle), circle), rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:blue;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:green;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size3;4:blue;4:size2;4:triangle;4:circle;4:rectangle
'λx.apply(and[blue,triangle],iota(filter(filter(filter(filter(filter(x.s, or[size1,and[green,or[not[rectangle],or[size3,or[yellow,triangle]]]]]), rectangle), or[not[not[rectangle]],nand[rectangle,and[triangle,triangle]]]), yellow), circle)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:and[%s,%s];4:green;4:or[%s,%s];4:not[%s];4:rectangle;4:or[%s,%s];4:size3;4:or[%s,%s];4:yellow;4:triangle;4:rectangle;4:or[%s,%s];4:not[%s];4:not[%s];4:rectangle;4:nand[%s,%s];4:rectangle;4:and[%s,%s];4:triangle;4:triangle;4:yellow;4:circle
'λx.exists(or[blue,or[apply(same_size,x.o),and[or[apply(same_shape,iota(x.s)),size1],apply(same_shape,iota(filter(filter(x.s, and[nor[circle,nor[apply(size-geq,x.o),nor[circle,and[rectangle,nand[or[size3,and[triangle,size2]],size3]]]]],size1]), triangle)))]]], filter(filter(x.s, size3), triangle))'	0:exists(%s, %s);4:or[%s,%s];4:blue;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:circle;4:nor[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:nor[%s,%s];4:circle;4:and[%s,%s];4:rectangle;4:nand[%s,%s];4:or[%s,%s];4:size3;4:and[%s,%s];4:triangle;4:size2;4:size3;4:size1;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle
'λx.apply(nand[not[apply(size-lt,iota(filter(x.s, rectangle)))],not[or[size1,not[or[yellow,yellow]]]]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:nand[%s,%s];4:not[%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:or[%s,%s];4:size1;4:not[%s];4:or[%s,%s];4:yellow;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(apply(same_shape,iota(filter(x.s, circle))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(x.s, and[blue,and[rectangle,blue]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:blue
'λx.apply(not[and[or[not[size2],blue],size1]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:or[%s,%s];4:not[%s];4:size2;4:blue;4:size1;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, circle), nand[not[nor[size2,size2]],and[apply(same_color,x.o),green]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:nand[%s,%s];4:not[%s];4:nor[%s,%s];4:size2;4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green
'λx.apply(and[triangle,blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[not[blue],or[not[or[apply(same_shape,iota(filter(x.s, and[triangle,and[rectangle,green]]))),size2]],rectangle]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:not[%s];4:blue;4:or[%s,%s];4:not[%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:and[%s,%s];4:rectangle;4:green;4:size2;4:rectangle;1:%s.o;2:x
'λx.apply(and[and[implies[size2,triangle],size3],rectangle],iota(filter(filter(x.s, implies[size2,yellow]), apply(same_color,x.o))))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:size2;4:triangle;4:size3;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size2;4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(filter(filter(filter(filter(filter(filter(x.s, blue), size2), and[circle,and[circle,circle]]), rectangle), blue), apply(same_color,iota(x.s))), size3), rectangle), green), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2;4:and[%s,%s];4:circle;4:and[%s,%s];4:circle;4:circle;4:rectangle;4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size3;4:rectangle;4:green;4:yellow
'λx.apply(size2,iota(filter(x.s, and[circle,not[and[size3,size3]]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:not[%s];4:and[%s,%s];4:size3;4:size3
'λx.apply(rectangle,iota(filter(filter(filter(filter(filter(filter(x.s, rectangle), or[yellow,green]), and[size1,green]), triangle), blue), green)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:or[%s,%s];4:yellow;4:green;4:and[%s,%s];4:size1;4:green;4:triangle;4:blue;4:green
'λx.apply(nand[nor[triangle,circle],green],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:nor[%s,%s];4:triangle;4:circle;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(or[not[implies[green,blue]],and[green,blue]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:implies[%s,%s];4:green;4:blue;4:and[%s,%s];4:green;4:blue;1:iota(%s);3:%s.s;2:x
'λx.exists(iff[yellow,or[size3,apply(same_color,iota(filter(filter(x.s, not[nor[iff[circle,and[apply(same_size,iota(x.s)),green]],triangle]]), yellow)))]], filter(x.s, or[green,and[or[yellow,not[size3]],size2]]))'	0:exists(%s, %s);4:iff[%s,%s];4:yellow;4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:nor[%s,%s];4:iff[%s,%s];4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:green;4:triangle;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:and[%s,%s];4:or[%s,%s];4:yellow;4:not[%s];4:size3;4:size2
'λx.apply(circle,iota(filter(x.s, or[yellow,size2])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:size2
'λx.empty(filter(filter(x.s, apply(same_size,x.o)), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green
'λx.apply(and[or[rectangle,or[size2,size2]],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:rectangle;4:or[%s,%s];4:size2;4:size2;4:size3;1:%s.o;2:x
'λx.exists(yellow, filter(x.s, nand[size2,blue]))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size2;4:blue
'λx.apply(circle,x.o)'	0:apply(%s,%s);4:circle;1:%s.o;2:x
'λx.exists(and[not[yellow],rectangle], filter(x.s, rectangle))'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:yellow;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.forall(or[green,or[not[blue],or[size2,implies[triangle,apply(same_shape,iota(filter(filter(filter(filter(x.s, nand[rectangle,and[size2,yellow]]), green), nand[yellow,or[size1,nor[size2,triangle]]]), and[and[apply(same_shape,x.o),apply(same_color,iota(filter(x.s, size2)))],and[triangle,triangle]])))]]]],filter(filter(filter(x.s, size3), not[green]), yellow))'	0:forall(%s,%s);4:or[%s,%s];4:green;4:or[%s,%s];4:not[%s];4:blue;4:or[%s,%s];4:size2;4:implies[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:rectangle;4:and[%s,%s];4:size2;4:yellow;4:green;4:nand[%s,%s];4:yellow;4:or[%s,%s];4:size1;4:nor[%s,%s];4:size2;4:triangle;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:triangle;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:green;4:yellow
'λx.apply(implies[green,blue],iota(filter(filter(x.s, not[nand[blue,blue]]), and[triangle,apply(same_color,x.o)])))'	0:apply(%s,%s);4:implies[%s,%s];4:green;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:nand[%s,%s];4:blue;4:blue;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(or[green,or[blue,yellow]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:or[%s,%s];4:blue;4:yellow;1:%s.o;2:x
'λx.apply(nor[nand[size2,nor[apply(size-leq,x.o),apply(same_shape,x.o)]],size1],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:nand[%s,%s];4:size2;4:nor[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[size3,or[yellow,apply(same_size,x.o)]],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size3;4:or[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2;1:%s.o;2:x
'λx.apply(and[blue,nand[apply(same_color,x.o),circle]],iota(filter(x.s, and[triangle,circle])))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:nand[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:circle
'λx.exists(or[size2,apply(same_shape,x.o)], filter(x.s, iff[rectangle,size2]))'	0:exists(%s, %s);4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:rectangle;4:size2
'λx.apply(size3,iota(filter(x.s, apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(filter(x.s, blue), and[size2,size2]), green)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:size2;4:size2;4:green
'λx.apply(apply(same_shape,iota(x.s)),iota(filter(x.s, green)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(apply(same_shape,iota(x.s)),iota(filter(x.s, size3)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.forall(size1,filter(filter(filter(filter(x.s, size3), triangle), triangle), blue))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle;4:triangle;4:blue
'λx.apply(yellow,iota(filter(x.s, or[apply(same_size,x.o),size3])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3
'λx.apply(circle,iota(filter(x.s, apply(size-gt,x.o))))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, size1), yellow)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow
'λx.exists(apply(same_color,iota(filter(filter(x.s, green), not[yellow]))), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:yellow;3:%s.s;2:x
'λx.apply(and[not[blue],blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:blue;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(and[yellow,green],iota(filter(filter(filter(filter(filter(x.s, blue), triangle), apply(size-geq,x.o)), size2), size3)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:size2;4:size3
'λx.apply(and[circle,not[yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:not[%s];4:yellow;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(filter(x.s, blue), size3), green))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3;4:green
'λx.apply(blue,iota(filter(filter(x.s, implies[rectangle,green]), implies[triangle,rectangle])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:rectangle;4:green;4:implies[%s,%s];4:triangle;4:rectangle
'λx.exists(or[green,yellow], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:green;4:yellow;3:%s.s;2:x
'λx.apply(apply(same_shape,iota(filter(filter(filter(x.s, size3), rectangle), and[and[rectangle,iff[triangle,green]],size3]))),iota(filter(x.s, circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:iff[%s,%s];4:triangle;4:green;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.exists(or[yellow,circle], filter(x.s, circle))'	0:exists(%s, %s);4:or[%s,%s];4:yellow;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(green,iota(filter(x.s, or[yellow,triangle])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:triangle
'λx.forall(or[and[and[size1,circle],size2],green],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:circle;4:size2;4:green;3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, size2), and[yellow,not[implies[green,size3]]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:yellow;4:not[%s];4:implies[%s,%s];4:green;4:size3
'λx.contains(iota(filter(x.s, blue)), filter(filter(x.s, green), yellow))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow
'λx.apply(and[nand[size3,size2],circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:size3;4:size2;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[nor[not[apply(same_color,x.o)],size3],rectangle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:nor[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3;4:rectangle;1:%s.o;2:x
'λx.apply(apply(same_shape,x.o),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(x.s, and[circle,size1])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size1
'λx.apply(or[green,triangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(x.s, blue), triangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle
'λx.apply(nor[and[rectangle,yellow],and[size1,and[and[blue,apply(size-lt,iota(x.s))],or[and[nand[green,size3],green],or[size2,or[triangle,or[or[rectangle,circle],green]]]]]]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:rectangle;4:yellow;4:and[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:blue;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:green;4:size3;4:green;4:or[%s,%s];4:size2;4:or[%s,%s];4:triangle;4:or[%s,%s];4:or[%s,%s];4:rectangle;4:circle;4:green;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(filter(x.s, and[blue,size2]), rectangle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size2;4:rectangle;1:%s.o;2:x
'λx.apply(or[blue,size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:size3;1:%s.o;2:x
'λx.apply(or[blue,size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:size1;1:%s.o;2:x
'λx.apply(or[blue,size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:size2;1:%s.o;2:x
'λx.exists(not[and[and[nand[size3,and[triangle,and[green,rectangle]]],apply(same_shape,x.o)],yellow]], filter(x.s, apply(same_color,x.o)))'	0:exists(%s, %s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:size3;4:and[%s,%s];4:triangle;4:and[%s,%s];4:green;4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(and[circle,or[apply(same_color,x.o),apply(same_size,x.o)]],iota(filter(filter(filter(filter(x.s, blue), circle), yellow), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle;4:yellow;4:blue
'λx.empty(filter(filter(filter(filter(filter(filter(filter(filter(x.s, apply(size-lt,iota(filter(filter(x.s, green), blue)))), blue), size1), triangle), circle), size2), size3), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue;4:blue;4:size1;4:triangle;4:circle;4:size2;4:size3;4:size1
'λx.apply(apply(same_shape,iota(filter(filter(x.s, and[rectangle,green]), and[size1,not[size2]]))),iota(filter(filter(filter(x.s, yellow), triangle), and[and[size2,circle],green])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:green;4:and[%s,%s];4:size1;4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle;4:and[%s,%s];4:and[%s,%s];4:size2;4:circle;4:green
'λx.exists(size3, filter(filter(filter(x.s, circle), size1), size3))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1;4:size3
'λx.apply(apply(same_shape,x.o),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[not[and[apply(same_color,iota(filter(filter(x.s, triangle), green))),not[blue]]],green],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green;4:not[%s];4:blue;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(nor[apply(size-geq,x.o),rectangle],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:nor[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.contains(x.o, filter(filter(filter(filter(x.s, size3), rectangle), yellow), not[iff[size1,apply(same_size,iota(filter(x.s, rectangle)))]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle;4:yellow;4:not[%s];4:iff[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.forall(apply(same_size,iota(filter(x.s, not[blue]))),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;3:%s.s;2:x
'λx.apply(or[size2,and[triangle,and[yellow,yellow]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:and[%s,%s];4:triangle;4:and[%s,%s];4:yellow;4:yellow;1:%s.o;2:x
'λx.apply(and[size3,apply(same_size,iota(filter(filter(x.s, green), blue)))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, circle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(nand[triangle,or[apply(size-gt,iota(x.s)),size2]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:size2;1:%s.o;2:x
'λx.apply(and[yellow,not[triangle]],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.contains(iota(x.s), filter(x.s, green))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.contains(iota(x.s), filter(x.s, size1))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.contains(iota(x.s), filter(x.s, size2))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.contains(iota(x.s), filter(x.s, size3))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(green,iota(filter(filter(x.s, iff[size3,green]), apply(same_color,x.o))))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size3;4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(filter(x.s, size3), triangle), size2)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle;4:size2
'λx.contains(iota(x.s), filter(x.s, and[rectangle,circle]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:circle
'λx.apply(yellow,iota(filter(x.s, nand[blue,and[size3,and[and[size2,nand[and[size1,apply(size-lt,x.o)],size2]],size2]]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:blue;4:and[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:size2;4:nand[%s,%s];4:and[%s,%s];4:size1;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:size2;4:size2
'λx.forall(not[and[and[not[yellow],green],implies[and[triangle,size2],or[not[triangle],size3]]]],x.s)'	0:forall(%s,%s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:yellow;4:green;4:implies[%s,%s];4:and[%s,%s];4:triangle;4:size2;4:or[%s,%s];4:not[%s];4:triangle;4:size3;3:%s.s;2:x
'λx.exists(not[circle], filter(x.s, size1))'	0:exists(%s, %s);4:not[%s];4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(or[apply(same_color,iota(x.s)),not[apply(same_color,x.o)]],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(not[not[nor[and[or[circle,circle],or[or[size1,or[yellow,green]],size3]],apply(size-gt,x.o)]]],iota(filter(x.s, green)))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:nor[%s,%s];4:and[%s,%s];4:or[%s,%s];4:circle;4:circle;4:or[%s,%s];4:or[%s,%s];4:size1;4:or[%s,%s];4:yellow;4:green;4:size3;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(blue,iota(filter(x.s, and[triangle,or[yellow,blue]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:or[%s,%s];4:yellow;4:blue
'λx.apply(iff[yellow,size1],iota(filter(filter(x.s, circle), circle)))'	0:apply(%s,%s);4:iff[%s,%s];4:yellow;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:circle
'λx.empty(filter(filter(filter(filter(filter(x.s, rectangle), triangle), or[and[and[size2,triangle],implies[size2,not[rectangle]]],size2]), and[blue,rectangle]), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:triangle;4:implies[%s,%s];4:size2;4:not[%s];4:rectangle;4:size2;4:and[%s,%s];4:blue;4:rectangle;4:size1
'λx.exists(size2, filter(x.s, circle))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.contains(iota(filter(filter(x.s, or[rectangle,apply(same_shape,x.o)]), apply(same_color,x.o))), filter(x.s, and[blue,triangle]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:triangle
'λx.contains(iota(filter(filter(x.s, size1), apply(same_size,iota(x.s)))), filter(filter(filter(x.s, size2), size2), green))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2;4:green
'λx.apply(and[rectangle,green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:green;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(filter(x.s, and[or[and[yellow,green],and[and[triangle,size2],or[not[blue],triangle]]],size2]), triangle), apply(same_color,iota(filter(x.s, and[rectangle,circle]))))))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:yellow;4:green;4:and[%s,%s];4:and[%s,%s];4:triangle;4:size2;4:or[%s,%s];4:not[%s];4:blue;4:triangle;4:size2;4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:circle
'λx.apply(green,iota(filter(filter(filter(filter(filter(filter(x.s, size2), and[size3,green]), size1), blue), blue), circle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:size3;4:green;4:size1;4:blue;4:blue;4:circle
'λx.forall(size1,filter(filter(filter(x.s, rectangle), size1), triangle))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1;4:triangle
'λx.apply(and[size3,or[green,apply(same_size,iota(x.s))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:or[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, triangle), rectangle), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle;4:blue
'λx.apply(size1,iota(filter(filter(filter(filter(x.s, nor[circle,size2]), apply(size-gt,iota(filter(filter(filter(filter(x.s, size3), and[rectangle,nand[circle,or[size1,size3]]]), nor[circle,and[size3,rectangle]]), yellow)))), green), and[yellow,rectangle])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:circle;4:size2;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:rectangle;4:nand[%s,%s];4:circle;4:or[%s,%s];4:size1;4:size3;4:nor[%s,%s];4:circle;4:and[%s,%s];4:size3;4:rectangle;4:yellow;4:green;4:and[%s,%s];4:yellow;4:rectangle
'λx.apply(triangle,iota(filter(filter(filter(filter(filter(x.s, and[green,and[size2,green]]), size3), size2), or[yellow,or[size3,size2]]), green)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:and[%s,%s];4:size2;4:green;4:size3;4:size2;4:or[%s,%s];4:yellow;4:or[%s,%s];4:size3;4:size2;4:green
'λx.apply(or[not[blue],not[green]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:blue;4:not[%s];4:green;1:iota(%s);3:%s.s;2:x
'λx.exists(rectangle, filter(x.s, triangle))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.exists(circle, filter(filter(x.s, blue), circle))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle
'λx.apply(and[and[size2,not[rectangle]],green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size2;4:not[%s];4:rectangle;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(or[blue,blue],iota(filter(x.s, and[apply(same_shape,iota(filter(filter(x.s, yellow), and[blue,and[triangle,nand[size3,circle]]]))),apply(same_size,x.o)])))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:blue;4:and[%s,%s];4:triangle;4:nand[%s,%s];4:size3;4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.forall(apply(same_size,iota(filter(filter(filter(filter(filter(x.s, yellow), and[rectangle,size1]), and[apply(size-leq,x.o),and[size3,and[not[or[nand[circle,iff[apply(same_size,iota(x.s)),apply(size-leq,iota(x.s))]],apply(size-geq,x.o)]],nor[rectangle,not[and[blue,size3]]]]]]), size2), size2))),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:rectangle;4:size1;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:and[%s,%s];4:size3;4:and[%s,%s];4:not[%s];4:or[%s,%s];4:nand[%s,%s];4:circle;4:iff[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:nor[%s,%s];4:rectangle;4:not[%s];4:and[%s,%s];4:blue;4:size3;4:size2;4:size2;3:%s.s;2:x
'λx.apply(and[triangle,green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:green;1:iota(%s);3:%s.s;2:x
'λx.exists(not[not[apply(same_shape,x.o)]], filter(x.s, size1))'	0:exists(%s, %s);4:not[%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(rectangle,iota(filter(filter(filter(filter(filter(x.s, apply(same_shape,x.o)), blue), apply(size-lt,iota(filter(filter(filter(filter(x.s, triangle), and[implies[rectangle,nor[nor[size1,size2],size3]],iff[circle,size2]]), rectangle), size2)))), not[or[size1,circle]]), and[or[blue,and[and[apply(same_shape,iota(x.s)),green],size2]],size2])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:implies[%s,%s];4:rectangle;4:nor[%s,%s];4:nor[%s,%s];4:size1;4:size2;4:size3;4:iff[%s,%s];4:circle;4:size2;4:rectangle;4:size2;4:not[%s];4:or[%s,%s];4:size1;4:circle;4:and[%s,%s];4:or[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:green;4:size2;4:size2
'λx.apply(not[and[size3,size1]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size3;4:size1;1:%s.o;2:x
'λx.apply(and[nand[green,size1],not[yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:green;4:size1;4:not[%s];4:yellow;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(x.s, circle), apply(size-leq,iota(x.s)))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x
'λx.forall(or[rectangle,and[and[iff[or[blue,and[size2,or[circle,not[size1]]]],and[yellow,size2]],not[and[implies[or[apply(same_size,iota(x.s)),apply(same_color,x.o)],triangle],size1]]],triangle]],filter(x.s, and[triangle,apply(same_shape,x.o)]))'	0:forall(%s,%s);4:or[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:blue;4:and[%s,%s];4:size2;4:or[%s,%s];4:circle;4:not[%s];4:size1;4:and[%s,%s];4:yellow;4:size2;4:not[%s];4:and[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;4:size1;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(and[blue,size2],iota(filter(x.s, or[size1,rectangle])))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:rectangle
'λx.apply(circle,iota(filter(filter(x.s, yellow), and[rectangle,green])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:rectangle;4:green
'λx.apply(or[and[not[nand[not[and[apply(same_size,iota(x.s)),circle]],blue]],blue],yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:not[%s];4:nand[%s,%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:circle;4:blue;4:blue;4:yellow;1:%s.o;2:x
'λx.apply(or[and[rectangle,blue],size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:rectangle;4:blue;4:size3;1:%s.o;2:x
'λx.apply(and[apply(same_size,x.o),green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;1:%s.o;2:x
'λx.apply(nand[size2,size1],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size2;4:size1;1:%s.o;2:x
'λx.apply(nand[size2,size3],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size2;4:size3;1:%s.o;2:x
'λx.apply(nor[green,yellow],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:green;4:yellow;1:%s.o;2:x
'λx.apply(or[nor[size1,or[blue,size1]],blue],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:nor[%s,%s];4:size1;4:or[%s,%s];4:blue;4:size1;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[size2,blue],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size2;4:blue;1:%s.o;2:x
'λx.exists(blue, filter(x.s, rectangle))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.contains(x.o, filter(filter(filter(filter(x.s, rectangle), and[yellow,green]), green), circle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:yellow;4:green;4:green;4:circle
'λx.apply(and[and[and[size1,blue],and[size1,green]],and[and[circle,nand[triangle,circle]],green]],iota(filter(filter(filter(filter(filter(x.s, and[yellow,not[or[not[not[apply(size-lt,iota(x.s))]],and[not[triangle],green]]]]), size3), implies[blue,yellow]), and[and[and[size1,size2],or[yellow,and[green,and[size3,apply(size-geq,x.o)]]]],and[blue,rectangle]]), size3)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:blue;4:and[%s,%s];4:size1;4:green;4:and[%s,%s];4:and[%s,%s];4:circle;4:nand[%s,%s];4:triangle;4:circle;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:not[%s];4:or[%s,%s];4:not[%s];4:not[%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:triangle;4:green;4:size3;4:implies[%s,%s];4:blue;4:yellow;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:size2;4:or[%s,%s];4:yellow;4:and[%s,%s];4:green;4:and[%s,%s];4:size3;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:and[%s,%s];4:blue;4:rectangle;4:size3
'λx.apply(and[not[size1],size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size1;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[size1,size3],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size1;4:size3;1:%s.o;2:x
'λx.apply(apply(same_color,iota(filter(filter(filter(x.s, apply(same_shape,iota(filter(x.s, size2)))), size2), and[blue,nor[iff[and[size1,green],size2],rectangle]]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2;4:and[%s,%s];4:blue;4:nor[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:size1;4:green;4:size2;4:rectangle;1:%s.o;2:x
'λx.apply(and[blue,or[size2,nor[yellow,and[circle,and[and[size1,green],circle]]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:or[%s,%s];4:size2;4:nor[%s,%s];4:yellow;4:and[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:size1;4:green;4:circle;1:%s.o;2:x
'λx.apply(nor[size2,size3],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:size2;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(or[and[not[triangle],size2],and[and[triangle,apply(same_shape,x.o)],green]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:not[%s];4:triangle;4:size2;4:and[%s,%s];4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[and[and[or[blue,size3],rectangle],apply(same_shape,iota(filter(x.s, size3)))],and[yellow,and[or[blue,size1],size1]]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:blue;4:size3;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:yellow;4:and[%s,%s];4:or[%s,%s];4:blue;4:size1;4:size1;1:%s.o;2:x
'λx.apply(nor[size1,size3],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:size1;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[implies[size2,and[rectangle,size3]],size3],iota(filter(filter(filter(x.s, implies[size2,yellow]), apply(same_color,x.o)), green)))'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:size2;4:and[%s,%s];4:rectangle;4:size3;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size2;4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green
'λx.forall(not[size2],filter(filter(filter(filter(x.s, not[or[triangle,and[triangle,not[apply(same_shape,iota(filter(filter(x.s, not[rectangle]), green)))]]]]), blue), size3), not[or[green,green]]))'	0:forall(%s,%s);4:not[%s];4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:triangle;4:and[%s,%s];4:triangle;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;4:green;4:blue;4:size3;4:not[%s];4:or[%s,%s];4:green;4:green
'λx.exists(iff[circle,size1], x.s)'	0:exists(%s, %s);4:iff[%s,%s];4:circle;4:size1;3:%s.s;2:x
'λx.apply(apply(size-lt,x.o),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:%s.o;2:x
'λx.forall(and[blue,size3],filter(x.s, triangle))'	0:forall(%s,%s);4:and[%s,%s];4:blue;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(or[triangle,and[green,implies[triangle,and[or[circle,yellow],circle]]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:and[%s,%s];4:green;4:implies[%s,%s];4:triangle;4:and[%s,%s];4:or[%s,%s];4:circle;4:yellow;4:circle;1:%s.o;2:x
'λx.apply(or[rectangle,circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:circle;1:%s.o;2:x
'λx.apply(or[size3,triangle],iota(filter(x.s, and[and[blue,not[triangle]],yellow])))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:blue;4:not[%s];4:triangle;4:yellow
'λx.contains(iota(filter(filter(x.s, blue), circle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle;3:%s.s;2:x
'λx.exists(and[implies[rectangle,blue],apply(size-gt,x.o)], filter(x.s, apply(same_shape,iota(x.s))))'	0:exists(%s, %s);4:and[%s,%s];4:implies[%s,%s];4:rectangle;4:blue;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(filter(x.s, and[implies[size1,rectangle],size2]), rectangle), and[nor[not[circle],apply(size-lt,iota(filter(x.s, size3)))],or[circle,size2]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:implies[%s,%s];4:size1;4:rectangle;4:size2;4:rectangle;4:and[%s,%s];4:nor[%s,%s];4:not[%s];4:circle;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:circle;4:size2
'λx.exists(and[green,green], filter(filter(filter(x.s, size3), size1), and[apply(size-geq,x.o),green]))'	0:exists(%s, %s);4:and[%s,%s];4:green;4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size1;4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:green
'λx.apply(blue,iota(filter(x.s, or[yellow,triangle])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:triangle
'λx.apply(and[triangle,yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(or[and[yellow,rectangle],blue],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:yellow;4:rectangle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(size2,iota(filter(x.s, not[or[yellow,not[and[rectangle,and[and[and[nor[blue,yellow],yellow],size3],size3]]]]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:yellow;4:not[%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:blue;4:yellow;4:yellow;4:size3;4:size3
'λx.apply(implies[and[triangle,circle],size3],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:triangle;4:circle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[yellow,green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:green;1:%s.o;2:x
'λx.apply(not[apply(size-gt,x.o)],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[rectangle,size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[rectangle,size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(x.s, triangle), size3), circle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3;4:circle
'λx.apply(or[circle,rectangle],iota(filter(filter(x.s, green), blue)))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue
'λx.apply(not[size2],iota(filter(x.s, and[nor[implies[size3,and[nand[size2,size2],and[rectangle,triangle]]],size2],triangle])))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:implies[%s,%s];4:size3;4:and[%s,%s];4:nand[%s,%s];4:size2;4:size2;4:and[%s,%s];4:rectangle;4:triangle;4:size2;4:triangle
'λx.apply(yellow,iota(filter(x.s, apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(and[not[size3],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size3;4:rectangle;1:%s.o;2:x
'λx.apply(apply(same_color,iota(filter(x.s, not[size2]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(filter(filter(filter(x.s, or[nand[green,and[and[rectangle,or[and[triangle,circle],rectangle]],green]],blue]), green), size3), triangle), size3)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:nand[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:triangle;4:circle;4:rectangle;4:green;4:blue;4:green;4:size3;4:triangle;4:size3
'λx.apply(and[blue,yellow],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.forall(triangle,filter(filter(x.s, apply(same_size,iota(x.s))), size1))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size1
'λx.apply(not[not[nor[yellow,green]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:nor[%s,%s];4:yellow;4:green;1:%s.o;2:x
'λx.apply(not[not[rectangle]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[size3,not[triangle]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:size3;4:not[%s];4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(filter(x.s, size2), rectangle), apply(same_shape,x.o))))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(filter(filter(x.s, rectangle), apply(same_shape,iota(x.s))), triangle), yellow)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle;4:yellow
'λx.apply(and[size1,nor[or[triangle,rectangle],green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:nor[%s,%s];4:or[%s,%s];4:triangle;4:rectangle;4:green;1:%s.o;2:x
'λx.apply(nor[not[size1],size1],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:not[%s];4:size1;4:size1;1:iota(%s);3:%s.s;2:x
'λx.forall(rectangle,filter(filter(filter(x.s, circle), apply(size-geq,iota(filter(x.s, and[not[triangle],not[circle]])))), rectangle))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:triangle;4:not[%s];4:circle;4:rectangle
'λx.apply(not[not[or[not[apply(same_size,iota(filter(filter(filter(filter(x.s, yellow), circle), rectangle), triangle)))],and[circle,triangle]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle;4:rectangle;4:triangle;4:and[%s,%s];4:circle;4:triangle;1:%s.o;2:x
'λx.apply(and[size3,nand[rectangle,not[nand[circle,or[apply(size-geq,x.o),and[green,rectangle]]]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:nand[%s,%s];4:rectangle;4:not[%s];4:nand[%s,%s];4:circle;4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:and[%s,%s];4:green;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.forall(nor[and[blue,and[size3,size3]],blue],x.s)'	0:forall(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:size3;4:size3;4:blue;3:%s.s;2:x
'λx.apply(or[rectangle,blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:blue;1:%s.o;2:x
'λx.apply(or[size3,and[rectangle,circle]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:and[%s,%s];4:rectangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[green],iota(filter(filter(x.s, and[triangle,green]), and[size3,size3])))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:green;4:and[%s,%s];4:size3;4:size3
'λx.apply(circle,iota(filter(x.s, nor[not[size1],blue])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:not[%s];4:size1;4:blue
'λx.apply(implies[triangle,and[yellow,circle]],iota(filter(x.s, nand[triangle,size1])))'	0:apply(%s,%s);4:implies[%s,%s];4:triangle;4:and[%s,%s];4:yellow;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:triangle;4:size1
'λx.apply(not[nor[not[triangle],and[size3,not[yellow]]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:nor[%s,%s];4:not[%s];4:triangle;4:and[%s,%s];4:size3;4:not[%s];4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(and[green,and[yellow,triangle]],iota(filter(x.s, not[blue])))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:yellow;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.apply(or[size2,triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:triangle;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(x.s, or[apply(same_color,iota(filter(x.s, rectangle))),size1]), circle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1;4:circle
'λx.apply(not[apply(same_size,iota(filter(filter(x.s, and[not[rectangle],and[not[size2],and[and[size3,circle],blue]]]), size2)))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:rectangle;4:and[%s,%s];4:not[%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:size3;4:circle;4:blue;4:size2;1:%s.o;2:x
'λx.apply(apply(size-geq,iota(x.s)),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size1,implies[size2,and[yellow,not[yellow]]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:implies[%s,%s];4:size2;4:and[%s,%s];4:yellow;4:not[%s];4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(filter(x.s, or[and[size3,triangle],implies[blue,iff[triangle,apply(size-geq,iota(x.s))]]]), rectangle), circle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size3;4:triangle;4:implies[%s,%s];4:blue;4:iff[%s,%s];4:triangle;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:rectangle;4:circle
'λx.apply(and[green,and[blue,blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:blue;4:blue;1:%s.o;2:x
'λx.apply(and[or[yellow,not[size1]],blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:yellow;4:not[%s];4:size1;4:blue;1:iota(%s);3:%s.s;2:x
'λx.exists(green, filter(x.s, yellow))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(and[not[blue],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:blue;4:size3;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(filter(filter(filter(x.s, size1), green), triangle), not[circle]), circle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green;4:triangle;4:not[%s];4:circle;4:circle
'λx.apply(nand[apply(same_size,x.o),size3],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[or[blue,nand[size3,not[green]]],and[yellow,size1]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:blue;4:nand[%s,%s];4:size3;4:not[%s];4:green;4:and[%s,%s];4:yellow;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(or[apply(same_size,x.o),circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;1:%s.o;2:x
'λx.exists(nor[and[size2,or[apply(same_size,iota(x.s)),triangle]],or[blue,size1]], x.s)'	0:exists(%s, %s);4:nor[%s,%s];4:and[%s,%s];4:size2;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:triangle;4:or[%s,%s];4:blue;4:size1;3:%s.s;2:x
'λx.exists(not[size1], filter(filter(x.s, rectangle), size2))'	0:exists(%s, %s);4:not[%s];4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2
'λx.empty(filter(filter(x.s, circle), and[and[size2,apply(same_shape,iota(x.s))],not[circle]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:not[%s];4:circle
'λx.apply(or[or[rectangle,apply(same_color,x.o)],green],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(x.s, not[apply(same_shape,iota(x.s))]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[size2,size2],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size2;4:size2;1:%s.o;2:x
'λx.apply(nor[apply(same_shape,iota(x.s)),triangle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle;1:%s.o;2:x
'λx.apply(or[and[blue,or[circle,blue]],triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:blue;4:or[%s,%s];4:circle;4:blue;4:triangle;1:%s.o;2:x
'λx.apply(and[and[blue,and[and[iff[yellow,triangle],green],size1]],nor[rectangle,or[size2,apply(same_color,iota(x.s))]]],iota(filter(x.s, and[yellow,rectangle])))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:yellow;4:triangle;4:green;4:size1;4:nor[%s,%s];4:rectangle;4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:rectangle
'λx.apply(and[rectangle,size2],iota(filter(filter(x.s, not[blue]), size2)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:size2
'λx.apply(nor[size1,size1],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size1;4:size1;1:%s.o;2:x
'λx.apply(nor[size1,size3],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size1;4:size3;1:%s.o;2:x
'λx.empty(filter(x.s, and[yellow,not[implies[green,size3]]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:not[%s];4:implies[%s,%s];4:green;4:size3
'λx.apply(or[implies[size3,blue],size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:implies[%s,%s];4:size3;4:blue;4:size3;1:%s.o;2:x
'λx.apply(not[rectangle],iota(filter(x.s, nor[size1,apply(same_size,iota(x.s))])))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(and[not[nor[size1,or[size1,size2]]],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:nor[%s,%s];4:size1;4:or[%s,%s];4:size1;4:size2;4:circle;1:%s.o;2:x
'λx.apply(not[circle],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[implies[yellow,rectangle],and[size1,size3]],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:implies[%s,%s];4:yellow;4:rectangle;4:and[%s,%s];4:size1;4:size3;1:iota(%s);3:%s.s;2:x
'λx.forall(size1,filter(x.s, nand[triangle,triangle]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:triangle;4:triangle
'λx.apply(or[not[size2],nor[not[size1],size1]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:size2;4:nor[%s,%s];4:not[%s];4:size1;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size3,and[blue,and[green,circle]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:blue;4:and[%s,%s];4:green;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(x.s, and[triangle,triangle]), apply(size-geq,x.o))))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:triangle;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.apply(and[green,triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[iff[yellow,green]],x.o)'	0:apply(%s,%s);4:not[%s];4:iff[%s,%s];4:yellow;4:green;1:%s.o;2:x
'λx.apply(or[implies[green,apply(same_color,iota(filter(filter(x.s, and[green,blue]), size3)))],size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:implies[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:blue;4:size3;4:size2;1:%s.o;2:x
'λx.apply(and[apply(same_color,iota(x.s)),size1],iota(filter(x.s, green)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.contains(iota(filter(x.s, size1)), filter(x.s, blue))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(implies[rectangle,rectangle],iota(filter(filter(x.s, size1), size2)))'	0:apply(%s,%s);4:implies[%s,%s];4:rectangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2
'λx.forall(and[size3,yellow],filter(x.s, or[size1,and[circle,or[size2,size2]]]))'	0:forall(%s,%s);4:and[%s,%s];4:size3;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:and[%s,%s];4:circle;4:or[%s,%s];4:size2;4:size2
'λx.forall(iff[circle,green],filter(filter(filter(filter(filter(filter(filter(filter(x.s, and[size2,not[or[size2,rectangle]]]), green), blue), circle), rectangle), not[size3]), and[not[triangle],yellow]), size1))'	0:forall(%s,%s);4:iff[%s,%s];4:circle;4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:not[%s];4:or[%s,%s];4:size2;4:rectangle;4:green;4:blue;4:circle;4:rectangle;4:not[%s];4:size3;4:and[%s,%s];4:not[%s];4:triangle;4:yellow;4:size1
'λx.apply(rectangle,iota(filter(filter(filter(filter(x.s, and[size1,yellow]), blue), apply(same_color,x.o)), not[size1])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:yellow;4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:size1
'λx.apply(apply(same_size,iota(x.s)),iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.exists(and[or[and[or[yellow,size3],circle],green],triangle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:yellow;4:size3;4:circle;4:green;4:triangle;3:%s.s;2:x
'λx.apply(nor[size3,green],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size3;4:green;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(filter(filter(x.s, size3), size3), and[rectangle,not[size2]]), size3), blue), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3;4:and[%s,%s];4:rectangle;4:not[%s];4:size2;4:size3;4:blue;4:yellow
'λx.exists(apply(same_color,x.o), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(nor[and[and[or[blue,and[and[implies[size1,rectangle],size2],rectangle]],and[nor[not[circle],size2],or[circle,size2]]],circle],apply(same_shape,iota(x.s))],iota(filter(filter(x.s, yellow), apply(same_color,iota(filter(x.s, rectangle))))))'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:size1;4:rectangle;4:size2;4:rectangle;4:and[%s,%s];4:nor[%s,%s];4:not[%s];4:circle;4:size2;4:or[%s,%s];4:circle;4:size2;4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.exists(apply(same_color,iota(filter(filter(filter(x.s, yellow), green), not[size3]))), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green;4:not[%s];4:size3;3:%s.s;2:x
'λx.apply(or[yellow,size2],iota(filter(filter(filter(filter(x.s, nand[implies[yellow,rectangle],triangle]), rectangle), size2), blue)))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:implies[%s,%s];4:yellow;4:rectangle;4:triangle;4:rectangle;4:size2;4:blue
'λx.apply(not[and[size1,green]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size1;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(size-gt,iota(x.s)),iota(filter(x.s, size3)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(and[green,apply(size-geq,iota(filter(x.s, yellow)))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, size2), and[blue,yellow]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:blue;4:yellow
'λx.apply(and[green,size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:size1;1:%s.o;2:x
'λx.apply(and[green,size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:size2;1:%s.o;2:x
'λx.empty(filter(x.s, and[not[green],yellow]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:green;4:yellow
'λx.apply(size3,iota(filter(x.s, apply(same_size,x.o))))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(size2,iota(filter(x.s, apply(same_size,x.o))))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(filter(filter(x.s, size2), size2), size2), or[not[triangle],and[circle,triangle]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2;4:size2;4:or[%s,%s];4:not[%s];4:triangle;4:and[%s,%s];4:circle;4:triangle
'λx.apply(or[rectangle,apply(size-gt,x.o)],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, and[apply(same_color,iota(x.s)),triangle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:triangle
'λx.apply(nor[blue,triangle],iota(filter(filter(filter(filter(filter(filter(filter(x.s, size3), and[yellow,size1]), not[green]), size2), rectangle), and[not[size1],blue]), yellow)))'	0:apply(%s,%s);4:nor[%s,%s];4:blue;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:yellow;4:size1;4:not[%s];4:green;4:size2;4:rectangle;4:and[%s,%s];4:not[%s];4:size1;4:blue;4:yellow
'λx.apply(or[implies[green,or[green,rectangle]],apply(same_size,iota(filter(x.s, size3)))],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:or[%s,%s];4:implies[%s,%s];4:green;4:or[%s,%s];4:green;4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(nor[rectangle,rectangle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:rectangle;4:rectangle;1:%s.o;2:x
'λx.apply(or[not[green],or[and[green,or[triangle,apply(same_shape,iota(x.s))]],nor[apply(same_shape,iota(filter(filter(filter(x.s, not[size1]), yellow), size3))),and[and[rectangle,rectangle],or[apply(size-leq,x.o),circle]]]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:green;4:or[%s,%s];4:and[%s,%s];4:green;4:or[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:yellow;4:size3;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:rectangle;4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:circle;1:%s.o;2:x
'λx.apply(implies[green,blue],iota(filter(x.s, green)))'	0:apply(%s,%s);4:implies[%s,%s];4:green;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.exists(green, filter(filter(filter(filter(filter(x.s, size1), size3), rectangle), yellow), triangle))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size3;4:rectangle;4:yellow;4:triangle
'λx.apply(not[circle],iota(filter(x.s, and[and[blue,green],implies[iff[size2,yellow],green]])))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:blue;4:green;4:implies[%s,%s];4:iff[%s,%s];4:size2;4:yellow;4:green
'λx.apply(and[and[size1,rectangle],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:rectangle;4:yellow;1:%s.o;2:x
'λx.apply(and[yellow,green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[size3,rectangle],size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size3;4:rectangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(x.s), filter(x.s, not[yellow]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow
'λx.empty(filter(filter(x.s, and[apply(same_color,x.o),apply(same_color,x.o)]), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green
'λx.apply(and[size3,and[size1,and[and[apply(size-geq,iota(filter(filter(x.s, triangle), size3))),or[yellow,yellow]],circle]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3;4:or[%s,%s];4:yellow;4:yellow;4:circle;1:%s.o;2:x
'λx.exists(apply(size-lt,iota(filter(filter(filter(filter(x.s, and[size3,circle]), rectangle), size2), rectangle))), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:circle;4:rectangle;4:size2;4:rectangle;3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, or[size2,yellow]), apply(same_size,x.o)))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.forall(and[apply(same_size,iota(filter(x.s, nand[iff[size3,apply(size-gt,x.o)],blue]))),not[yellow]],filter(x.s, rectangle))'	0:forall(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:iff[%s,%s];4:size3;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:blue;4:not[%s];4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.contains(x.o, filter(x.s, and[and[blue,iff[and[size2,size1],and[green,not[size2]]]],triangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:blue;4:iff[%s,%s];4:and[%s,%s];4:size2;4:size1;4:and[%s,%s];4:green;4:not[%s];4:size2;4:triangle
'λx.apply(size2,iota(filter(x.s, or[size2,or[yellow,yellow]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:or[%s,%s];4:yellow;4:yellow
'λx.contains(x.o, filter(x.s, and[not[triangle],green]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:triangle;4:green
'λx.apply(and[apply(same_color,iota(x.s)),and[or[size3,rectangle],apply(same_shape,iota(x.s))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:size3;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(or[size1,apply(same_shape,x.o)],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.contains(iota(filter(x.s, and[green,apply(size-leq,iota(x.s))])), filter(filter(filter(filter(x.s, not[and[size3,circle]]), apply(same_size,x.o)), size2), blue))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:size3;4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2;4:blue
'λx.contains(x.o, filter(x.s, apply(size-lt,iota(x.s))))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x
'λx.apply(and[or[apply(same_size,x.o),size3],green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(or[circle,and[iff[size3,size1],rectangle]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:and[%s,%s];4:iff[%s,%s];4:size3;4:size1;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[implies[circle,and[and[size2,green],green]]],x.o)'	0:apply(%s,%s);4:not[%s];4:implies[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:size2;4:green;4:green;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, and[rectangle,and[apply(same_color,x.o),triangle]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle
'λx.apply(size2,iota(filter(filter(x.s, blue), or[apply(same_color,iota(x.s)),nand[green,size3]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:nand[%s,%s];4:green;4:size3
'λx.apply(implies[and[rectangle,triangle],blue],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:rectangle;4:triangle;4:blue;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(filter(filter(x.s, green), green), implies[and[apply(same_shape,iota(x.s)),circle],apply(size-leq,iota(x.s))]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:green;4:implies[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.forall(size1,filter(x.s, or[rectangle,triangle]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:triangle
'λx.apply(and[and[size2,circle],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size2;4:circle;4:size2;1:%s.o;2:x
'λx.apply(or[circle,and[and[or[yellow,size1],green],not[blue]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:yellow;4:size1;4:green;4:not[%s];4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(and[circle,size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[circle,size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(and[circle,size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, apply(same_color,iota(x.s))), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:circle
'λx.apply(nand[apply(size-leq,x.o),triangle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:triangle;1:%s.o;2:x
'λx.apply(and[iff[and[and[apply(same_size,x.o),size2],not[size1]],not[apply(same_size,x.o)]],size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2;4:not[%s];4:size1;4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(filter(filter(x.s, blue), size2), and[blue,blue]), and[size2,size3])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2;4:and[%s,%s];4:blue;4:blue;4:and[%s,%s];4:size2;4:size3
'λx.contains(iota(filter(filter(filter(x.s, implies[size3,circle]), not[green]), size1)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size3;4:circle;4:not[%s];4:green;4:size1;3:%s.s;2:x
'λx.apply(and[apply(same_color,iota(filter(x.s, or[yellow,nor[triangle,size2]]))),not[iff[size3,rectangle]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:nor[%s,%s];4:triangle;4:size2;4:not[%s];4:iff[%s,%s];4:size3;4:rectangle;1:%s.o;2:x
'λx.empty(filter(filter(x.s, green), and[not[green],size1]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:not[%s];4:green;4:size1
'λx.apply(green,iota(filter(filter(x.s, size2), triangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:triangle
'λx.apply(iff[and[green,implies[rectangle,or[and[size2,size3],not[and[and[or[triangle,not[circle]],yellow],blue]]]]],nor[rectangle,size3]],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:green;4:implies[%s,%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:size2;4:size3;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:triangle;4:not[%s];4:circle;4:yellow;4:blue;4:nor[%s,%s];4:rectangle;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[size3,circle],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(and[yellow,and[yellow,size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:and[%s,%s];4:yellow;4:size2;1:%s.o;2:x
'λx.apply(or[green,size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:size1;1:%s.o;2:x
'λx.apply(or[green,size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:size3;1:%s.o;2:x
'λx.apply(and[and[size1,green],or[not[size2],blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:green;4:or[%s,%s];4:not[%s];4:size2;4:blue;1:%s.o;2:x
'λx.empty(filter(filter(x.s, and[and[rectangle,and[not[rectangle],triangle]],rectangle]), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:not[%s];4:rectangle;4:triangle;4:rectangle;4:green
'λx.apply(or[blue,apply(same_size,x.o)],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.exists(iff[circle,green], filter(x.s, green))'	0:exists(%s, %s);4:iff[%s,%s];4:circle;4:green;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.exists(circle, filter(x.s, apply(same_size,x.o)))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(x.s, size2), circle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle
'λx.empty(filter(filter(x.s, rectangle), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1
'λx.empty(filter(filter(x.s, rectangle), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3
'λx.forall(nor[or[not[blue],size2],rectangle],x.s)'	0:forall(%s,%s);4:nor[%s,%s];4:or[%s,%s];4:not[%s];4:blue;4:size2;4:rectangle;3:%s.s;2:x
'λx.forall(and[size1,triangle],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:size1;4:triangle;3:%s.s;2:x
'λx.apply(and[iff[rectangle,size3],and[circle,or[and[and[size1,circle],size2],green]]],iota(filter(x.s, not[blue])))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:rectangle;4:size3;4:and[%s,%s];4:circle;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:circle;4:size2;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.apply(circle,iota(filter(filter(x.s, and[size3,size3]), rectangle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:size3;4:rectangle
'λx.apply(and[blue,yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, green), not[and[size3,size2]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:and[%s,%s];4:size3;4:size2
'λx.contains(x.o, filter(x.s, and[size1,not[not[blue]]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:not[%s];4:not[%s];4:blue
'λx.apply(iff[rectangle,yellow],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:rectangle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(and[iff[size1,green],triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:size1;4:green;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(filter(filter(x.s, circle), or[blue,and[iff[yellow,and[rectangle,implies[and[size1,apply(size-geq,x.o)],circle]]],green]]), size2), and[and[not[yellow],and[rectangle,and[size2,green]]],not[and[size1,apply(same_shape,iota(filter(filter(filter(filter(x.s, not[or[not[triangle],blue]]), yellow), size2), and[yellow,size3])))]]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:blue;4:and[%s,%s];4:iff[%s,%s];4:yellow;4:and[%s,%s];4:rectangle;4:implies[%s,%s];4:and[%s,%s];4:size1;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:circle;4:green;4:size2;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:yellow;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:size2;4:green;4:not[%s];4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:not[%s];4:triangle;4:blue;4:yellow;4:size2;4:and[%s,%s];4:yellow;4:size3
'λx.apply(or[or[blue,green],triangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:blue;4:green;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[or[blue,size1],and[blue,and[rectangle,blue]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:blue;4:size1;4:and[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:blue;1:%s.o;2:x
'λx.apply(nand[yellow,and[circle,blue]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:yellow;4:and[%s,%s];4:circle;4:blue;1:%s.o;2:x
'λx.apply(and[size1,apply(same_shape,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(and[size2,apply(same_shape,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(nor[green,circle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:green;4:circle;1:%s.o;2:x
'λx.forall(and[rectangle,yellow],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:rectangle;4:yellow;3:%s.s;2:x
'λx.apply(iff[or[size2,iff[size2,blue]],size2],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:or[%s,%s];4:size2;4:iff[%s,%s];4:size2;4:blue;4:size2;1:iota(%s);3:%s.s;2:x
'λx.exists(not[rectangle], filter(x.s, implies[not[size1],and[yellow,circle]]))'	0:exists(%s, %s);4:not[%s];4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:not[%s];4:size1;4:and[%s,%s];4:yellow;4:circle
'λx.apply(not[blue],iota(filter(filter(filter(filter(x.s, yellow), and[rectangle,green]), triangle), and[circle,size1])))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:rectangle;4:green;4:triangle;4:and[%s,%s];4:circle;4:size1
'λx.apply(apply(same_size,x.o),iota(filter(filter(filter(filter(x.s, blue), size3), yellow), yellow)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3;4:yellow;4:yellow
'λx.apply(triangle,iota(filter(x.s, or[and[blue,rectangle],and[green,apply(same_size,x.o)]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:blue;4:rectangle;4:and[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.forall(circle,filter(filter(filter(filter(filter(x.s, circle), and[apply(size-lt,iota(x.s)),rectangle]), circle), green), circle))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:rectangle;4:circle;4:green;4:circle
'λx.apply(green,iota(filter(x.s, apply(same_size,iota(filter(x.s, and[blue,size3]))))))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size3
'λx.exists(or[circle,nand[apply(same_shape,iota(filter(filter(filter(x.s, and[blue,green]), size2), implies[triangle,and[triangle,yellow]]))),and[size3,blue]]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:circle;4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:green;4:size2;4:implies[%s,%s];4:triangle;4:and[%s,%s];4:triangle;4:yellow;4:and[%s,%s];4:size3;4:blue;3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(x.s, size1), yellow)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow
'λx.apply(triangle,iota(filter(filter(x.s, size2), yellow)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:yellow
'λx.apply(green,iota(filter(x.s, implies[triangle,size2])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:triangle;4:size2
'λx.apply(size3,iota(filter(filter(x.s, green), yellow)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow
'λx.contains(x.o, filter(x.s, and[rectangle,green]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:green
'λx.exists(green, filter(filter(x.s, or[and[triangle,not[or[apply(size-geq,x.o),size2]]],iff[apply(same_color,x.o),triangle]]), or[size3,and[size3,size3]]))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:triangle;4:not[%s];4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:size2;4:iff[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;4:or[%s,%s];4:size3;4:and[%s,%s];4:size3;4:size3
'λx.apply(and[or[not[yellow],apply(same_color,iota(filter(x.s, size1)))],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:not[%s];4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle;1:%s.o;2:x
'λx.exists(size2, filter(filter(x.s, size3), blue))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue
'λx.apply(blue,iota(filter(x.s, apply(same_size,x.o))))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.forall(and[green,yellow],filter(x.s, size3))'	0:forall(%s,%s);4:and[%s,%s];4:green;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.contains(x.o, filter(x.s, not[size1]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1
'λx.contains(x.o, filter(x.s, not[size3]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3
'λx.apply(size3,iota(filter(filter(filter(filter(x.s, triangle), rectangle), apply(same_color,x.o)), apply(same_size,x.o))))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(x.s, apply(same_shape,x.o)), blue), apply(size-lt,iota(filter(filter(filter(filter(x.s, triangle), and[implies[rectangle,nor[nor[size1,size2],size3]],or[blue,and[and[apply(same_shape,iota(x.s)),green],size2]]]), rectangle), size2)))), not[or[size1,circle]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:implies[%s,%s];4:rectangle;4:nor[%s,%s];4:nor[%s,%s];4:size1;4:size2;4:size3;4:or[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:green;4:size2;4:rectangle;4:size2;4:not[%s];4:or[%s,%s];4:size1;4:circle
'λx.forall(apply(same_shape,x.o),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(filter(x.s, green), and[or[size2,size2],not[blue]]), size3)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:or[%s,%s];4:size2;4:size2;4:not[%s];4:blue;4:size3
'λx.exists(or[size3,not[yellow]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:size3;4:not[%s];4:yellow;3:%s.s;2:x
'λx.contains(iota(filter(filter(filter(filter(filter(x.s, and[size2,or[green,or[size1,or[triangle,circle]]]]), and[yellow,size1]), blue), triangle), blue)), filter(x.s, size1))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:or[%s,%s];4:green;4:or[%s,%s];4:size1;4:or[%s,%s];4:triangle;4:circle;4:and[%s,%s];4:yellow;4:size1;4:blue;4:triangle;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(triangle, filter(x.s, apply(same_color,x.o)))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(and[triangle,apply(size-leq,iota(filter(x.s, yellow)))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;1:%s.o;2:x
'λx.apply(and[and[and[circle,apply(same_color,x.o)],and[rectangle,triangle]],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:rectangle;4:triangle;4:rectangle;1:%s.o;2:x
'λx.apply(implies[and[green,nand[and[and[not[and[not[blue],triangle]],nor[size2,green]],green],blue]],or[rectangle,triangle]],iota(filter(filter(x.s, apply(same_color,iota(x.s))), apply(same_color,x.o))))'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:green;4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:not[%s];4:blue;4:triangle;4:nor[%s,%s];4:size2;4:green;4:green;4:blue;4:or[%s,%s];4:rectangle;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(filter(filter(x.s, green), size3), size2), blue)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size3;4:size2;4:blue
'λx.apply(size2,iota(filter(filter(x.s, and[not[size3],or[not[and[rectangle,not[circle]]],and[size1,size3]]]), green)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:size3;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:rectangle;4:not[%s];4:circle;4:and[%s,%s];4:size1;4:size3;4:green
'λx.exists(and[blue,triangle], filter(x.s, green))'	0:exists(%s, %s);4:and[%s,%s];4:blue;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(rectangle,iota(filter(filter(x.s, and[size3,iff[and[not[green],size2],blue]]), blue)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:iff[%s,%s];4:and[%s,%s];4:not[%s];4:green;4:size2;4:blue;4:blue
'λx.apply(and[triangle,not[blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:not[%s];4:blue;1:%s.o;2:x
'λx.apply(yellow,iota(filter(x.s, and[blue,size2])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size2
'λx.apply(yellow,iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(and[blue,not[and[and[blue,triangle],size3]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:triangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(x.s, apply(size-geq,x.o)), size2)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:size2
'λx.exists(or[triangle,blue], filter(x.s, rectangle))'	0:exists(%s, %s);4:or[%s,%s];4:triangle;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[or[green,not[triangle]],rectangle],iota(filter(filter(filter(filter(filter(filter(filter(x.s, circle), size1), yellow), iff[size2,green]), yellow), rectangle), green)))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:green;4:not[%s];4:triangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1;4:yellow;4:iff[%s,%s];4:size2;4:green;4:yellow;4:rectangle;4:green
'λx.forall(and[implies[or[apply(size-lt,iota(filter(filter(filter(x.s, size3), triangle), rectangle))),green],not[rectangle]],size3],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle;4:rectangle;4:green;4:not[%s];4:rectangle;4:size3;3:%s.s;2:x
'λx.apply(or[and[or[not[and[and[size3,rectangle],yellow]],not[apply(same_shape,iota(x.s))]],rectangle],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:rectangle;4:yellow;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:rectangle;4:blue;1:%s.o;2:x
'λx.empty(filter(x.s, and[blue,size3]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size3
'λx.forall(circle,filter(filter(x.s, circle), green))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green
'λx.empty(filter(filter(filter(filter(x.s, rectangle), apply(same_shape,iota(x.s))), triangle), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle;4:yellow
'λx.apply(or[and[not[size1],nand[size1,or[and[circle,size1],circle]]],green],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:not[%s];4:size1;4:nand[%s,%s];4:size1;4:or[%s,%s];4:and[%s,%s];4:circle;4:size1;4:circle;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(filter(x.s, blue), and[size3,or[or[blue,circle],circle]]), and[apply(size-leq,x.o),rectangle])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:size3;4:or[%s,%s];4:or[%s,%s];4:blue;4:circle;4:circle;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:rectangle
'λx.false'	0:false
'λx.apply(nor[circle,rectangle],iota(filter(filter(x.s, yellow), green)))'	0:apply(%s,%s);4:nor[%s,%s];4:circle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green
'λx.apply(or[blue,and[yellow,size2]],iota(filter(filter(x.s, not[triangle]), iff[size2,yellow])))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:and[%s,%s];4:yellow;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:iff[%s,%s];4:size2;4:yellow
'λx.apply(and[rectangle,and[rectangle,not[yellow]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:rectangle;4:not[%s];4:yellow;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, and[and[apply(same_size,x.o),not[triangle]],not[triangle]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:not[%s];4:triangle;4:not[%s];4:triangle
'λx.apply(not[and[size3,rectangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size3;4:rectangle;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(filter(x.s, rectangle), green), size1)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green;4:size1
'λx.apply(size1,iota(filter(filter(filter(x.s, rectangle), green), size3)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green;4:size3
'λx.exists(iff[rectangle,and[green,rectangle]], filter(x.s, iff[blue,size2]))'	0:exists(%s, %s);4:iff[%s,%s];4:rectangle;4:and[%s,%s];4:green;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:blue;4:size2
'λx.apply(and[not[and[blue,triangle]],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:blue;4:triangle;4:circle;1:%s.o;2:x
'λx.apply(implies[apply(same_size,x.o),circle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;1:%s.o;2:x
'λx.apply(or[not[yellow],size2],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:yellow;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[not[green],or[blue,and[triangle,size2]]],iota(filter(filter(filter(filter(filter(x.s, and[and[not[size2],not[not[yellow]]],nor[size3,blue]]), size3), green), circle), size1)))'	0:apply(%s,%s);4:nor[%s,%s];4:not[%s];4:green;4:or[%s,%s];4:blue;4:and[%s,%s];4:triangle;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size2;4:not[%s];4:not[%s];4:yellow;4:nor[%s,%s];4:size3;4:blue;4:size3;4:green;4:circle;4:size1
'λx.apply(size1,iota(filter(x.s, not[green])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green
'λx.forall(nor[blue,size3],filter(filter(filter(filter(x.s, apply(same_size,x.o)), or[triangle,size1]), triangle), and[nor[size2,or[and[size1,or[circle,not[circle]]],triangle]],and[and[size2,size2],not[or[blue,or[apply(same_shape,iota(x.s)),circle]]]]]))'	0:forall(%s,%s);4:nor[%s,%s];4:blue;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:triangle;4:size1;4:triangle;4:and[%s,%s];4:nor[%s,%s];4:size2;4:or[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:circle;4:not[%s];4:circle;4:triangle;4:and[%s,%s];4:and[%s,%s];4:size2;4:size2;4:not[%s];4:or[%s,%s];4:blue;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle
'λx.exists(and[or[nor[rectangle,yellow],and[triangle,rectangle]],size1], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:rectangle;4:yellow;4:and[%s,%s];4:triangle;4:rectangle;4:size1;3:%s.s;2:x
'λx.apply(and[yellow,and[nand[size3,not[yellow]],size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:and[%s,%s];4:nand[%s,%s];4:size3;4:not[%s];4:yellow;4:size1;1:%s.o;2:x
'λx.apply(or[green,blue],iota(filter(filter(x.s, circle), rectangle)))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle
'λx.exists(rectangle, filter(filter(filter(x.s, not[blue]), size1), green))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:size1;4:green
'λx.apply(blue,iota(filter(filter(x.s, apply(same_size,x.o)), size3)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3
'λx.exists(and[not[implies[size3,blue]],size2], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:implies[%s,%s];4:size3;4:blue;4:size2;3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, nand[not[size2],blue]), implies[and[blue,size2],and[not[or[size3,yellow]],not[size1]]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:not[%s];4:size2;4:blue;4:implies[%s,%s];4:and[%s,%s];4:blue;4:size2;4:and[%s,%s];4:not[%s];4:or[%s,%s];4:size3;4:yellow;4:not[%s];4:size1
'λx.apply(iff[or[yellow,and[nand[apply(same_shape,x.o),apply(same_size,iota(filter(x.s, triangle)))],blue]],blue],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:or[%s,%s];4:yellow;4:and[%s,%s];4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue;4:blue;1:%s.o;2:x
'λx.apply(and[blue,size2],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.exists(yellow, filter(x.s, and[size1,apply(same_size,x.o)]))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(or[circle,size1],iota(filter(filter(filter(x.s, apply(same_color,iota(filter(x.s, or[triangle,apply(size-lt,x.o)])))), triangle), size1)))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:triangle;4:size1
'λx.forall(apply(same_size,iota(filter(x.s, yellow))),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;3:%s.s;2:x
'λx.contains(iota(filter(x.s, not[triangle])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;3:%s.s;2:x
'λx.apply(and[green,or[yellow,rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:or[%s,%s];4:yellow;4:rectangle;1:%s.o;2:x
'λx.exists(blue, x.s)'	0:exists(%s, %s);4:blue;3:%s.s;2:x
'λx.apply(triangle,iota(filter(x.s, green)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(triangle,iota(filter(x.s, size3)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(triangle,iota(filter(x.s, size2)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(triangle,iota(filter(x.s, size1)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(and[size3,apply(size-lt,iota(filter(filter(filter(x.s, size2), size1), size3)))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1;4:size3;1:%s.o;2:x
'λx.apply(apply(same_size,x.o),iota(filter(filter(filter(x.s, triangle), blue), not[size2])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue;4:not[%s];4:size2
'λx.apply(nor[and[implies[circle,green],or[and[green,size1],triangle]],not[and[circle,size2]]],iota(filter(filter(x.s, blue), yellow)))'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:circle;4:green;4:or[%s,%s];4:and[%s,%s];4:green;4:size1;4:triangle;4:not[%s];4:and[%s,%s];4:circle;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow
'λx.apply(not[size2],iota(filter(filter(x.s, and[triangle,size1]), green)))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:size1;4:green
'λx.apply(rectangle,iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(or[triangle,blue],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(x.s, size1), apply(size-geq,x.o))))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, nor[circle,triangle])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:circle;4:triangle
'λx.apply(triangle,iota(filter(filter(filter(x.s, not[size1]), yellow), size3)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:yellow;4:size3
'λx.exists(triangle, filter(filter(x.s, implies[and[size3,apply(same_color,x.o)],apply(same_color,iota(x.s))]), and[implies[apply(same_color,x.o),blue],yellow]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue;4:yellow
'λx.forall(apply(size-lt,x.o),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:size-lt;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(filter(x.s, and[green,yellow]), not[size1]), size1)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:yellow;4:not[%s];4:size1;4:size1
'λx.apply(size1,iota(filter(filter(filter(filter(filter(filter(x.s, apply(same_shape,iota(x.s))), nor[size3,triangle]), circle), yellow), green), blue)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:nor[%s,%s];4:size3;4:triangle;4:circle;4:yellow;4:green;4:blue
'λx.contains(iota(filter(filter(filter(x.s, green), size3), size2)), filter(filter(x.s, size3), yellow))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size3;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow
'λx.apply(nand[yellow,blue],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:yellow;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(filter(filter(x.s, blue), implies[circle,size2]), yellow), size3)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:implies[%s,%s];4:circle;4:size2;4:yellow;4:size3
'λx.exists(and[and[triangle,circle],rectangle], filter(x.s, yellow))'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:circle;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(apply(same_color,x.o),iota(filter(x.s, circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(apply(size-lt,x.o),iota(filter(filter(filter(filter(x.s, nor[size3,green]), green), rectangle), size2)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size3;4:green;4:green;4:rectangle;4:size2
'λx.apply(implies[circle,and[and[green,apply(same_color,iota(filter(x.s, circle)))],green]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[and[size1,triangle],blue],iota(filter(x.s, or[blue,blue])))'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:size1;4:triangle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:blue
'λx.apply(size1,iota(filter(filter(filter(filter(x.s, not[triangle]), circle), not[circle]), green)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:circle;4:not[%s];4:circle;4:green
'λx.empty(filter(filter(filter(filter(x.s, and[and[or[apply(same_color,x.o),circle],size1],apply(same_size,x.o)]), green), green), or[rectangle,or[and[nor[apply(same_shape,iota(x.s)),green],yellow],nand[apply(size-leq,x.o),size3]]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;4:green;4:or[%s,%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:green;4:yellow;4:nand[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size3
'λx.apply(yellow,iota(filter(filter(x.s, size1), yellow)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow
'λx.apply(implies[blue,circle],iota(filter(filter(x.s, nand[and[apply(size-leq,x.o),apply(same_color,iota(filter(x.s, yellow)))],rectangle]), size1)))'	0:apply(%s,%s);4:implies[%s,%s];4:blue;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle;4:size1
'λx.contains(iota(x.s), filter(filter(x.s, rectangle), size2))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2
'λx.apply(circle,iota(filter(filter(x.s, green), green)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:green
'λx.contains(iota(filter(filter(x.s, yellow), not[rectangle])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:rectangle;3:%s.s;2:x
'λx.contains(iota(x.s), filter(filter(filter(filter(x.s, not[green]), or[not[green],and[rectangle,yellow]]), not[and[apply(same_color,iota(x.s)),apply(same_color,x.o)]]), and[triangle,green]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:or[%s,%s];4:not[%s];4:green;4:and[%s,%s];4:rectangle;4:yellow;4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:triangle;4:green
'λx.apply(or[yellow,or[green,green]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:or[%s,%s];4:green;4:green;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(filter(filter(x.s, implies[yellow,and[blue,yellow]]), rectangle), and[circle,blue]), size3))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:yellow;4:and[%s,%s];4:blue;4:yellow;4:rectangle;4:and[%s,%s];4:circle;4:blue;4:size3
'λx.forall(and[green,rectangle],filter(filter(filter(filter(x.s, and[size3,circle]), triangle), or[size1,blue]), and[green,and[or[circle,size2],and[not[and[or[and[not[not[green]],nand[or[triangle,green],size2]],and[implies[blue,size2],and[size2,apply(same_color,x.o)]]],and[or[size3,size3],rectangle]]],rectangle]]]))'	0:forall(%s,%s);4:and[%s,%s];4:green;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:circle;4:triangle;4:or[%s,%s];4:size1;4:blue;4:and[%s,%s];4:green;4:and[%s,%s];4:or[%s,%s];4:circle;4:size2;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:not[%s];4:not[%s];4:green;4:nand[%s,%s];4:or[%s,%s];4:triangle;4:green;4:size2;4:and[%s,%s];4:implies[%s,%s];4:blue;4:size2;4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:or[%s,%s];4:size3;4:size3;4:rectangle;4:rectangle
'λx.contains(iota(filter(filter(filter(x.s, blue), circle), and[and[and[size3,size3],size2],and[size1,green]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:size3;4:size2;4:and[%s,%s];4:size1;4:green;3:%s.s;2:x
'λx.forall(circle,x.s)'	0:forall(%s,%s);4:circle;3:%s.s;2:x
'λx.exists(size3, filter(filter(x.s, green), and[apply(same_color,x.o),green]))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green
'λx.empty(filter(filter(filter(filter(x.s, and[and[or[apply(same_color,x.o),circle],size1],apply(same_size,x.o)]), green), circle), or[rectangle,or[and[not[size2],yellow],nand[apply(size-leq,x.o),size3]]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;4:circle;4:or[%s,%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:size2;4:yellow;4:nand[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size3
'λx.apply(and[or[size2,size3],circle],iota(filter(filter(x.s, yellow), size2)))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size2;4:size3;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2
'λx.apply(size1,iota(filter(filter(x.s, apply(size-geq,iota(x.s))), nand[triangle,yellow])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:nand[%s,%s];4:triangle;4:yellow
'λx.apply(green,iota(filter(filter(x.s, size3), apply(same_size,iota(filter(filter(x.s, triangle), rectangle))))))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle
'λx.apply(or[not[nor[size1,blue]],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:nor[%s,%s];4:size1;4:blue;4:blue;1:%s.o;2:x
'λx.apply(and[nand[size1,circle],rectangle],iota(filter(filter(filter(filter(x.s, rectangle), size3), blue), circle)))'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:size1;4:circle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3;4:blue;4:circle
'λx.apply(blue,iota(filter(x.s, not[green])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green
'λx.apply(yellow,iota(filter(x.s, not[size2])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2
'λx.apply(triangle,iota(filter(x.s, and[not[and[size1,blue]],blue])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:size1;4:blue;4:blue
'λx.exists(apply(same_shape,iota(filter(x.s, green))), filter(filter(x.s, nor[triangle,yellow]), triangle))'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:triangle;4:yellow;4:triangle
'λx.exists(rectangle, filter(filter(x.s, size2), or[rectangle,apply(size-lt,x.o)]))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(filter(filter(filter(x.s, green), size3), size2), blue), triangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size3;4:size2;4:blue;4:triangle
'λx.forall(iff[or[size3,size1],not[apply(same_shape,iota(x.s))]],x.s)'	0:forall(%s,%s);4:iff[%s,%s];4:or[%s,%s];4:size3;4:size1;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(apply(same_color,iota(filter(x.s, rectangle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;1:%s.o;2:x
'λx.exists(rectangle, filter(filter(x.s, or[apply(same_color,iota(filter(filter(filter(x.s, yellow), green), not[size3]))),size1]), size1))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green;4:not[%s];4:size3;4:size1;4:size1
'λx.forall(rectangle,filter(x.s, and[yellow,and[circle,size3]]))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:and[%s,%s];4:circle;4:size3
'λx.contains(x.o, filter(filter(x.s, size1), and[and[size1,blue],triangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:and[%s,%s];4:size1;4:blue;4:triangle
'λx.apply(blue,iota(filter(x.s, not[size3])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3
'λx.apply(not[green],x.o)'	0:apply(%s,%s);4:not[%s];4:green;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, or[size2,green]), apply(same_size,x.o)))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(iff[blue,and[and[and[rectangle,or[triangle,and[nor[circle,or[green,green]],and[green,apply(size-gt,x.o)]]]],and[apply(same_size,iota(x.s)),size1]],size1]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:or[%s,%s];4:triangle;4:and[%s,%s];4:nor[%s,%s];4:circle;4:or[%s,%s];4:green;4:green;4:and[%s,%s];4:green;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size1;4:size1;1:%s.o;2:x
'λx.apply(and[and[iff[size1,size3],not[and[blue,and[size2,green]]]],implies[blue,circle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:size1;4:size3;4:not[%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:size2;4:green;4:implies[%s,%s];4:blue;4:circle;1:iota(%s);3:%s.s;2:x
'λx.exists(iff[green,triangle], x.s)'	0:exists(%s, %s);4:iff[%s,%s];4:green;4:triangle;3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(filter(filter(filter(x.s, and[and[or[apply(same_color,x.o),circle],size1],apply(same_size,x.o)]), green), green), or[rectangle,or[and[not[size2],yellow],nand[apply(size-leq,x.o),size3]]]), triangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;4:green;4:or[%s,%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:size2;4:yellow;4:nand[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size3;4:triangle
'λx.apply(and[and[size3,triangle],size2],iota(filter(filter(filter(filter(filter(filter(x.s, circle), nand[size2,not[circle]]), and[and[green,size3],and[or[rectangle,apply(same_size,iota(x.s))],yellow]]), blue), and[size2,size1]), triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size3;4:triangle;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:nand[%s,%s];4:size2;4:not[%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:green;4:size3;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:yellow;4:blue;4:and[%s,%s];4:size2;4:size1;4:triangle
'λx.apply(nand[iff[yellow,size3],circle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:iff[%s,%s];4:yellow;4:size3;4:circle;1:%s.o;2:x
'λx.forall(and[rectangle,nor[rectangle,size2]],filter(filter(filter(filter(x.s, and[size3,or[size2,triangle]]), triangle), rectangle), or[or[size3,apply(size-leq,iota(filter(filter(x.s, and[size3,not[and[size3,circle]]]), implies[rectangle,blue])))],green]))'	0:forall(%s,%s);4:and[%s,%s];4:rectangle;4:nor[%s,%s];4:rectangle;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:or[%s,%s];4:size2;4:triangle;4:triangle;4:rectangle;4:or[%s,%s];4:or[%s,%s];4:size3;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:not[%s];4:and[%s,%s];4:size3;4:circle;4:implies[%s,%s];4:rectangle;4:blue;4:green
'λx.apply(nand[circle,triangle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:circle;4:triangle;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(filter(filter(x.s, and[green,not[blue]]), size3), yellow), apply(size-gt,iota(x.s))), or[size1,circle]), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:not[%s];4:blue;4:size3;4:yellow;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:circle;4:circle
'λx.empty(filter(filter(x.s, not[not[size1]]), apply(same_shape,iota(x.s))))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(and[green,rectangle],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(and[implies[apply(same_color,x.o),size3],circle], filter(x.s, size1))'	0:exists(%s, %s);4:and[%s,%s];4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(and[iff[triangle,rectangle],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:triangle;4:rectangle;4:size2;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(x.s, not[or[and[apply(same_size,x.o),rectangle],and[size1,apply(same_shape,iota(x.s))]]]), triangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:rectangle;4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle
'λx.apply(nand[iff[or[size3,size1],size2],green],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:size3;4:size1;4:size2;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(x.s, and[and[triangle,apply(same_size,iota(filter(filter(filter(filter(filter(x.s, blue), size2), triangle), and[iff[size3,apply(same_size,x.o)],size2]), size3)))],size2])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2;4:triangle;4:and[%s,%s];4:iff[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2;4:size3;4:size2
'λx.apply(triangle,iota(filter(filter(filter(filter(x.s, yellow), iff[size1,not[circle]]), implies[nand[rectangle,nor[yellow,and[circle,circle]]],green]), circle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:iff[%s,%s];4:size1;4:not[%s];4:circle;4:implies[%s,%s];4:nand[%s,%s];4:rectangle;4:nor[%s,%s];4:yellow;4:and[%s,%s];4:circle;4:circle;4:green;4:circle
'λx.forall(size1,filter(filter(filter(filter(x.s, rectangle), green), triangle), nor[apply(size-lt,x.o),size3]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green;4:triangle;4:nor[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:size3
'λx.contains(iota(filter(x.s, size3)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;3:%s.s;2:x
'λx.contains(iota(filter(x.s, size1)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;3:%s.s;2:x
'λx.apply(nand[and[size2,and[apply(size-leq,iota(filter(x.s, circle))),size1]],rectangle],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[apply(same_shape,iota(x.s)),not[circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:not[%s];4:circle;1:%s.o;2:x
'λx.apply(or[triangle,triangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.forall(not[circle],filter(filter(filter(x.s, rectangle), triangle), apply(size-gt,iota(x.s))))'	0:forall(%s,%s);4:not[%s];4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[not[triangle],and[rectangle,nand[or[apply(size-geq,iota(filter(filter(x.s, yellow), and[apply(same_color,iota(x.s)),size1]))),green],green]]],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:not[%s];4:triangle;4:and[%s,%s];4:rectangle;4:nand[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size1;4:green;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_color,iota(x.s)),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.empty(filter(filter(x.s, apply(same_color,x.o)), and[size1,yellow]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:size1;4:yellow
'λx.apply(nand[green,size1],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:green;4:size1;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(filter(x.s, size3), green), apply(same_shape,iota(filter(filter(filter(x.s, or[green,blue]), green), or[triangle,triangle])))), triangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:blue;4:green;4:or[%s,%s];4:triangle;4:triangle;4:triangle
'λx.apply(and[size3,not[or[circle,yellow]]],iota(filter(x.s, and[blue,yellow])))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:not[%s];4:or[%s,%s];4:circle;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:yellow
'λx.apply(and[and[rectangle,size1],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size1;4:blue;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, implies[yellow,nor[and[size2,or[yellow,size3]],size3]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:yellow;4:nor[%s,%s];4:and[%s,%s];4:size2;4:or[%s,%s];4:yellow;4:size3;4:size3
'λx.apply(blue,iota(filter(x.s, or[yellow,or[blue,and[or[size1,or[and[triangle,blue],implies[rectangle,and[yellow,size3]]]],size1]]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:or[%s,%s];4:blue;4:and[%s,%s];4:or[%s,%s];4:size1;4:or[%s,%s];4:and[%s,%s];4:triangle;4:blue;4:implies[%s,%s];4:rectangle;4:and[%s,%s];4:yellow;4:size3;4:size1
'λx.forall(apply(size-geq,iota(x.s)),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.exists(rectangle, filter(filter(x.s, circle), or[size2,size2]))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:size2;4:size2
'λx.exists(rectangle, filter(x.s, size1))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(rectangle, filter(x.s, size3))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(or[green,yellow],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[green,green],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:green;4:green;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(filter(filter(filter(filter(x.s, yellow), triangle), size3), rectangle), rectangle), not[iff[rectangle,rectangle]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle;4:size3;4:rectangle;4:rectangle;4:not[%s];4:iff[%s,%s];4:rectangle;4:rectangle
'λx.forall(blue,filter(filter(x.s, and[green,size1]), nor[triangle,size3]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:size1;4:nor[%s,%s];4:triangle;4:size3
'λx.apply(or[not[circle],yellow],iota(filter(filter(x.s, and[or[and[not[circle],size2],nor[rectangle,not[size2]]],blue]), size3)))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:circle;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:not[%s];4:circle;4:size2;4:nor[%s,%s];4:rectangle;4:not[%s];4:size2;4:blue;4:size3
'λx.apply(not[and[size2,nand[or[rectangle,apply(same_color,iota(x.s))],blue]]],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size2;4:nand[%s,%s];4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(green,iota(filter(x.s, or[and[and[yellow,size3],nand[and[size3,triangle],circle]],triangle])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:size3;4:nand[%s,%s];4:and[%s,%s];4:size3;4:triangle;4:circle;4:triangle
'λx.apply(size2,iota(filter(filter(x.s, size3), and[implies[and[size2,size1],iff[apply(size-geq,x.o),blue]],or[blue,apply(same_size,iota(filter(filter(x.s, size1), yellow)))]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:size2;4:size1;4:iff[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:blue;4:or[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow
'λx.apply(and[implies[triangle,yellow],yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:triangle;4:yellow;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[apply(same_size,iota(filter(filter(x.s, rectangle), apply(same_color,iota(x.s))))),size1],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size1;1:%s.o;2:x
'λx.apply(and[green,or[not[rectangle],blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:or[%s,%s];4:not[%s];4:rectangle;4:blue;1:%s.o;2:x
'λx.apply(implies[size2,size1],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:size2;4:size1;1:iota(%s);3:%s.s;2:x
'λx.exists(circle, filter(x.s, rectangle))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.forall(and[circle,circle],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:circle;4:circle;3:%s.s;2:x
'λx.apply(or[blue,apply(same_size,iota(filter(x.s, circle)))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, size1), apply(same_size,x.o))))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(and[implies[apply(same_size,iota(x.s)),blue],rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:blue;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[or[size3,rectangle],rectangle],iota(filter(filter(filter(filter(x.s, rectangle), size3), blue), circle)))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size3;4:rectangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3;4:blue;4:circle
'λx.apply(and[circle,and[not[and[size2,yellow]],triangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:size2;4:yellow;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[and[yellow,size2],yellow],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:yellow;4:size2;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(x.s, and[size3,apply(same_shape,x.o)])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(and[triangle,and[size1,apply(same_shape,iota(x.s))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.forall(nand[blue,not[circle]],x.s)'	0:forall(%s,%s);4:nand[%s,%s];4:blue;4:not[%s];4:circle;3:%s.s;2:x
'λx.apply(implies[blue,circle],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:blue;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(size-geq,iota(filter(filter(filter(filter(x.s, size1), yellow), circle), green))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow;4:circle;4:green;1:%s.o;2:x
'λx.exists(size1, filter(x.s, apply(same_size,iota(x.s))))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.exists(triangle, x.s)'	0:exists(%s, %s);4:triangle;3:%s.s;2:x
'λx.contains(x.o, filter(x.s, or[or[rectangle,blue],size3]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:rectangle;4:blue;4:size3
'λx.apply(rectangle,iota(x.s))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[and[and[circle,green],circle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:green;4:circle;1:%s.o;2:x
'λx.empty(filter(x.s, and[triangle,circle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:circle
'λx.apply(iff[size1,size1],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:size1;4:size1;1:%s.o;2:x
'λx.contains(iota(filter(x.s, yellow)), filter(x.s, apply(same_color,x.o)))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.forall(not[triangle],filter(x.s, or[and[green,blue],apply(size-geq,x.o)]))'	0:forall(%s,%s);4:not[%s];4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:green;4:blue;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, size1), or[rectangle,size3])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:or[%s,%s];4:rectangle;4:size3
'λx.exists(apply(same_shape,x.o), filter(x.s, iff[and[circle,or[green,yellow]],yellow]))'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:and[%s,%s];4:circle;4:or[%s,%s];4:green;4:yellow;4:yellow
'λx.forall(yellow,filter(x.s, and[rectangle,and[yellow,size1]]))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:yellow;4:size1
'λx.apply(or[nand[size3,apply(same_shape,x.o)],and[and[and[green,rectangle],yellow],circle]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:rectangle;4:yellow;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[green,rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(size-leq,iota(filter(filter(x.s, size2), size2))),iota(filter(x.s, circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[or[size3,blue],size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size3;4:blue;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[apply(same_color,iota(x.s)),apply(same_size,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, apply(same_shape,iota(filter(x.s, or[or[triangle,not[green]],implies[and[and[size3,and[triangle,and[or[size1,not[or[nor[implies[implies[triangle,nand[blue,implies[triangle,blue]]],size2],and[blue,apply(size-lt,x.o)]],apply(size-gt,x.o)]]],nand[size1,size1]]]],not[not[not[size2]]]],triangle]]))))))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:triangle;4:not[%s];4:green;4:implies[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:triangle;4:and[%s,%s];4:or[%s,%s];4:size1;4:not[%s];4:or[%s,%s];4:nor[%s,%s];4:implies[%s,%s];4:implies[%s,%s];4:triangle;4:nand[%s,%s];4:blue;4:implies[%s,%s];4:triangle;4:blue;4:size2;4:and[%s,%s];4:blue;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:nand[%s,%s];4:size1;4:size1;4:not[%s];4:not[%s];4:not[%s];4:size2;4:triangle
'λx.apply(nor[green,size3],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:green;4:size3;1:%s.o;2:x
'λx.apply(nor[green,size1],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:green;4:size1;1:%s.o;2:x
'λx.contains(iota(x.s), filter(x.s, triangle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.exists(size2, filter(x.s, and[size1,size3]))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size3
'λx.apply(not[apply(same_shape,iota(x.s))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(not[or[green,yellow]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:green;4:yellow;1:%s.o;2:x
'λx.empty(filter(x.s, apply(same_size,iota(x.s))))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.exists(yellow, x.s)'	0:exists(%s, %s);4:yellow;3:%s.s;2:x
'λx.apply(or[size2,green],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(x.s, not[blue])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.apply(yellow,iota(filter(filter(x.s, and[size2,rectangle]), green)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:rectangle;4:green
'λx.apply(not[and[or[triangle,triangle],apply(same_color,iota(x.s))]],iota(filter(x.s, green)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:or[%s,%s];4:triangle;4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(circle,iota(filter(filter(filter(filter(x.s, rectangle), and[nor[and[green,not[circle]],size2],apply(same_color,iota(filter(x.s, not[and[or[size1,blue],rectangle]])))]), not[size3]), nand[triangle,implies[and[not[rectangle],or[green,rectangle]],size2]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:green;4:not[%s];4:circle;4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:or[%s,%s];4:size1;4:blue;4:rectangle;4:not[%s];4:size3;4:nand[%s,%s];4:triangle;4:implies[%s,%s];4:and[%s,%s];4:not[%s];4:rectangle;4:or[%s,%s];4:green;4:rectangle;4:size2
'λx.apply(not[size1],iota(filter(filter(filter(filter(filter(x.s, size1), or[or[and[apply(same_shape,x.o),size2],blue],rectangle]), size3), size3), yellow)))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2;4:blue;4:rectangle;4:size3;4:size3;4:yellow
'λx.apply(or[blue,triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:triangle;1:%s.o;2:x
'λx.contains(x.o, filter(filter(filter(filter(x.s, apply(same_shape,x.o)), rectangle), rectangle), blue))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle;4:rectangle;4:blue
'λx.contains(x.o, filter(filter(x.s, rectangle), size2))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2
'λx.forall(nand[triangle,apply(same_color,iota(filter(x.s, rectangle)))],filter(filter(x.s, and[rectangle,blue]), blue))'	0:forall(%s,%s);4:nand[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:blue;4:blue
'λx.apply(or[or[blue,blue],and[triangle,size3]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:blue;4:blue;4:and[%s,%s];4:triangle;4:size3;1:%s.o;2:x
'λx.empty(filter(x.s, and[or[apply(same_color,iota(filter(x.s, and[triangle,not[rectangle]]))),and[not[rectangle],blue]],or[circle,not[size3]]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:not[%s];4:rectangle;4:and[%s,%s];4:not[%s];4:rectangle;4:blue;4:or[%s,%s];4:circle;4:not[%s];4:size3
'λx.apply(size3,iota(filter(filter(filter(filter(filter(filter(x.s, apply(size-gt,x.o)), rectangle), size1), rectangle), and[and[apply(same_size,x.o),or[blue,size1]],apply(same_color,iota(x.s))]), size1)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:rectangle;4:size1;4:rectangle;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:blue;4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size1
'λx.apply(and[apply(same_shape,iota(x.s)),and[and[yellow,rectangle],iff[size2,size3]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:yellow;4:rectangle;4:iff[%s,%s];4:size2;4:size3;1:%s.o;2:x
'λx.apply(or[green,rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:rectangle;1:%s.o;2:x
'λx.apply(and[not[triangle],and[green,and[green,and[size1,size3]]]],iota(filter(filter(filter(x.s, and[and[apply(same_size,iota(filter(x.s, and[triangle,size3]))),and[size3,size1]],apply(same_size,x.o)]), yellow), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:triangle;4:and[%s,%s];4:green;4:and[%s,%s];4:green;4:and[%s,%s];4:size1;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:size3;4:and[%s,%s];4:size3;4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow;4:blue
'λx.apply(and[circle,triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, blue), or[green,green]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:green;4:green
'λx.apply(and[and[apply(same_color,x.o),size3],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3;4:size2;1:%s.o;2:x
'λx.apply(triangle,iota(filter(x.s, not[or[size1,or[size1,and[and[size1,or[triangle,size3]],rectangle]]]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:size1;4:or[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:triangle;4:size3;4:rectangle
'λx.empty(filter(filter(x.s, size2), and[size2,blue]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:size2;4:blue
'λx.apply(and[yellow,circle],iota(filter(x.s, nand[triangle,size1])))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:triangle;4:size1
'λx.apply(and[and[circle,and[blue,and[size3,blue]]],nand[size2,rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:blue;4:and[%s,%s];4:size3;4:blue;4:nand[%s,%s];4:size2;4:rectangle;1:%s.o;2:x
'λx.forall(or[not[not[or[iff[nand[triangle,rectangle],or[or[and[iff[not[size3],size1],rectangle],apply(same_color,x.o)],green]],or[circle,nor[nor[not[triangle],blue],size3]]]]],apply(size-geq,iota(filter(filter(x.s, blue), apply(same_shape,x.o))))],filter(x.s, rectangle))'	0:forall(%s,%s);4:or[%s,%s];4:not[%s];4:not[%s];4:or[%s,%s];4:iff[%s,%s];4:nand[%s,%s];4:triangle;4:rectangle;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:not[%s];4:size3;4:size1;4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green;4:or[%s,%s];4:circle;4:nor[%s,%s];4:nor[%s,%s];4:not[%s];4:triangle;4:blue;4:size3;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(rectangle,iota(filter(filter(filter(x.s, not[or[green,blue]]), blue), and[size2,apply(same_color,iota(filter(filter(filter(filter(filter(x.s, and[implies[circle,yellow],circle]), and[and[yellow,size1],and[or[and[size1,size3],size1],rectangle]]), not[blue]), nor[and[size2,size2],triangle]), blue)))])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:green;4:blue;4:blue;4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:implies[%s,%s];4:circle;4:yellow;4:circle;4:and[%s,%s];4:and[%s,%s];4:yellow;4:size1;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size1;4:size3;4:size1;4:rectangle;4:not[%s];4:blue;4:nor[%s,%s];4:and[%s,%s];4:size2;4:size2;4:triangle;4:blue
'λx.forall(triangle,filter(x.s, and[not[size3],size2]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:size3;4:size2
'λx.apply(and[apply(size-leq,iota(x.s)),rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:rectangle;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(filter(filter(x.s, size2), apply(same_color,x.o)), not[size1]), apply(same_size,iota(filter(filter(x.s, and[and[green,or[rectangle,yellow]],not[and[not[apply(same_size,iota(filter(x.s, blue)))],or[not[size3],circle]]]]), size2)))), yellow)), filter(x.s, size2))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:green;4:or[%s,%s];4:rectangle;4:yellow;4:not[%s];4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:not[%s];4:size3;4:circle;4:size2;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(or[or[and[not[size3],yellow],rectangle],yellow],iota(filter(filter(filter(x.s, green), not[and[apply(same_size,iota(filter(x.s, not[blue]))),rectangle]]), circle)))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:not[%s];4:size3;4:yellow;4:rectangle;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:rectangle;4:circle
'λx.apply(and[triangle,or[size1,size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:or[%s,%s];4:size1;4:size1;1:%s.o;2:x
'λx.apply(nor[yellow,and[triangle,green]],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:yellow;4:and[%s,%s];4:triangle;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(x.s, iff[size2,size2]), or[blue,blue])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size2;4:size2;4:or[%s,%s];4:blue;4:blue
'λx.contains(iota(filter(filter(filter(filter(filter(x.s, yellow), triangle), triangle), blue), implies[circle,rectangle])), filter(filter(x.s, circle), green))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle;4:triangle;4:blue;4:implies[%s,%s];4:circle;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green
'λx.apply(circle,iota(filter(x.s, and[circle,size1])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size1
'λx.forall(and[yellow,rectangle],filter(filter(x.s, triangle), apply(same_shape,x.o)))'	0:forall(%s,%s);4:and[%s,%s];4:yellow;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(or[apply(size-gt,x.o),and[circle,blue]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:and[%s,%s];4:circle;4:blue;1:%s.o;2:x
'λx.empty(filter(x.s, apply(same_size,x.o)))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(size3,iota(filter(x.s, not[blue])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.apply(size2,iota(filter(x.s, not[blue])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.apply(size1,iota(filter(x.s, not[blue])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.apply(iff[size3,circle],iota(filter(filter(filter(filter(filter(filter(filter(filter(filter(x.s, size3), triangle), rectangle), green), not[rectangle]), size3), rectangle), size1), circle)))'	0:apply(%s,%s);4:iff[%s,%s];4:size3;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle;4:rectangle;4:green;4:not[%s];4:rectangle;4:size3;4:rectangle;4:size1;4:circle
'λx.apply(and[size3,nand[triangle,blue]],iota(filter(x.s, and[green,size2])))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:nand[%s,%s];4:triangle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:size2
'λx.apply(size3,iota(filter(x.s, or[size2,blue])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:blue
'λx.exists(or[size2,blue], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:size2;4:blue;3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(filter(filter(x.s, or[size3,or[rectangle,size2]]), yellow), or[size1,apply(size-gt,x.o)]), apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:or[%s,%s];4:rectangle;4:size2;4:yellow;4:or[%s,%s];4:size1;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_size,iota(x.s)),iota(filter(x.s, blue)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(not[yellow],x.o)'	0:apply(%s,%s);4:not[%s];4:yellow;1:%s.o;2:x
'λx.apply(nor[triangle,size3],iota(filter(filter(filter(x.s, triangle), size1), rectangle)))'	0:apply(%s,%s);4:nor[%s,%s];4:triangle;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size1;4:rectangle
'λx.apply(not[apply(same_color,iota(filter(x.s, apply(same_shape,x.o))))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(implies[or[or[blue,and[size2,green]],nand[yellow,iff[and[triangle,and[blue,apply(same_shape,x.o)]],and[apply(size-leq,iota(filter(x.s, size1))),rectangle]]]],not[triangle]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:or[%s,%s];4:or[%s,%s];4:blue;4:and[%s,%s];4:size2;4:green;4:nand[%s,%s];4:yellow;4:iff[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle;4:not[%s];4:triangle;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(x.s, nand[circle,size1]), and[circle,apply(same_color,iota(filter(x.s, blue)))])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:circle;4:size1;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(nand[or[and[yellow,and[size2,and[size2,size1]]],green],blue],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:or[%s,%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:size2;4:and[%s,%s];4:size2;4:size1;4:green;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(filter(x.s, rectangle), not[green]), triangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:green;4:triangle
'λx.apply(and[or[blue,size1],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:blue;4:size1;4:circle;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.exists(and[apply(same_color,x.o),and[circle,green]], filter(filter(filter(filter(x.s, size3), triangle), or[blue,size2]), or[not[size1],apply(same_shape,x.o)]))'	0:exists(%s, %s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:circle;4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle;4:or[%s,%s];4:blue;4:size2;4:or[%s,%s];4:not[%s];4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.forall(size3,filter(filter(filter(x.s, apply(same_color,x.o)), yellow), not[circle]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;4:not[%s];4:circle
'λx.apply(and[green,rectangle],iota(filter(filter(x.s, or[blue,not[blue]]), green)))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:not[%s];4:blue;4:green
'λx.exists(and[green,blue], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:green;4:blue;3:%s.s;2:x
'λx.exists(nand[circle,rectangle], filter(x.s, size3))'	0:exists(%s, %s);4:nand[%s,%s];4:circle;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(and[triangle,circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:circle;1:%s.o;2:x
'λx.apply(and[and[and[apply(same_size,x.o),size3],triangle],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;4:triangle;4:size2;1:%s.o;2:x
'λx.apply(or[apply(size-gt,iota(filter(filter(x.s, rectangle), and[nor[and[green,not[circle]],size2],apply(same_color,iota(filter(x.s, not[and[or[size1,blue],rectangle]])))]))),yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:green;4:not[%s];4:circle;4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:or[%s,%s];4:size1;4:blue;4:rectangle;4:yellow;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(filter(filter(x.s, size2), circle), size2), iff[size2,or[size1,rectangle]]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle;4:size2;4:iff[%s,%s];4:size2;4:or[%s,%s];4:size1;4:rectangle
'λx.apply(size1,iota(filter(filter(x.s, or[triangle,and[or[yellow,or[blue,and[or[size1,or[and[triangle,blue],implies[rectangle,and[yellow,size3]]]],size1]]],and[yellow,or[blue,size1]]]]), size2)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:and[%s,%s];4:or[%s,%s];4:yellow;4:or[%s,%s];4:blue;4:and[%s,%s];4:or[%s,%s];4:size1;4:or[%s,%s];4:and[%s,%s];4:triangle;4:blue;4:implies[%s,%s];4:rectangle;4:and[%s,%s];4:yellow;4:size3;4:size1;4:and[%s,%s];4:yellow;4:or[%s,%s];4:blue;4:size1;4:size2
'λx.apply(triangle,iota(filter(filter(x.s, and[green,size3]), blue)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:size3;4:blue
'λx.apply(or[and[circle,size3],iff[size3,not[nand[size1,rectangle]]]],iota(filter(filter(filter(x.s, and[iff[size2,size3],yellow]), size3), implies[size3,apply(same_shape,iota(x.s))])))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:circle;4:size3;4:iff[%s,%s];4:size3;4:not[%s];4:nand[%s,%s];4:size1;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:iff[%s,%s];4:size2;4:size3;4:yellow;4:size3;4:implies[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.forall(yellow,filter(x.s, apply(size-leq,iota(x.s))))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, apply(same_shape,iota(x.s))), blue), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:blue;4:triangle
'λx.apply(or[circle,rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:rectangle;1:%s.o;2:x
'λx.forall(and[and[blue,size1],size2],filter(x.s, implies[and[and[or[circle,blue],blue],apply(same_shape,x.o)],blue]))'	0:forall(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:size1;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:circle;4:blue;4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue
'λx.contains(iota(filter(filter(filter(x.s, not[green]), apply(same_color,iota(filter(filter(x.s, size3), apply(same_color,iota(x.s)))))), triangle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:triangle;3:%s.s;2:x
'λx.apply(and[yellow,and[and[or[blue,yellow],or[green,and[implies[yellow,size1],size2]]],size2]],iota(filter(x.s, apply(same_color,iota(filter(x.s, blue))))))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:blue;4:yellow;4:or[%s,%s];4:green;4:and[%s,%s];4:implies[%s,%s];4:yellow;4:size1;4:size2;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(green,iota(filter(filter(x.s, and[apply(same_size,x.o),and[size2,or[or[circle,apply(same_size,x.o)],size3]]]), implies[apply(same_color,x.o),circle])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:size2;4:or[%s,%s];4:or[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle
'λx.apply(implies[rectangle,yellow],iota(filter(x.s, and[green,and[and[apply(size-leq,iota(filter(filter(x.s, and[size1,rectangle]), size3))),size1],green]])))'	0:apply(%s,%s);4:implies[%s,%s];4:rectangle;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:rectangle;4:size3;4:size1;4:green
'λx.contains(iota(filter(filter(filter(filter(filter(x.s, or[not[apply(same_color,iota(x.s))],nand[size3,green]]), yellow), yellow), apply(same_shape,iota(filter(filter(x.s, yellow), not[apply(size-leq,iota(filter(x.s, blue)))])))), yellow)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:nand[%s,%s];4:size3;4:green;4:yellow;4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow;3:%s.s;2:x
'λx.exists(triangle, filter(filter(filter(filter(x.s, triangle), yellow), blue), not[rectangle]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:yellow;4:blue;4:not[%s];4:rectangle
'λx.apply(and[rectangle,rectangle],iota(filter(x.s, green)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(iff[apply(size-leq,x.o),rectangle],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, and[iff[size1,circle],size2]), rectangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:iff[%s,%s];4:size1;4:circle;4:size2;4:rectangle
'λx.forall(or[nand[rectangle,yellow],blue],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:rectangle;4:yellow;4:blue;3:%s.s;2:x
'λx.apply(implies[rectangle,apply(same_shape,iota(filter(x.s, apply(same_color,x.o))))],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.exists(rectangle, x.s)'	0:exists(%s, %s);4:rectangle;3:%s.s;2:x
'λx.apply(green,iota(filter(filter(x.s, triangle), circle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle
'λx.contains(x.o, filter(filter(x.s, yellow), triangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle
'λx.apply(size1,iota(filter(x.s, and[or[iff[and[and[circle,and[size3,circle]],blue],triangle],rectangle],yellow])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:size3;4:circle;4:blue;4:triangle;4:rectangle;4:yellow
'λx.apply(size2,iota(filter(filter(filter(filter(filter(filter(x.s, yellow), triangle), size3), rectangle), rectangle), not[iff[rectangle,rectangle]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle;4:size3;4:rectangle;4:rectangle;4:not[%s];4:iff[%s,%s];4:rectangle;4:rectangle
'λx.apply(not[apply(size-geq,iota(filter(x.s, and[size3,size3])))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:size3;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(filter(x.s, size3), size1), yellow)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size1;4:yellow
'λx.apply(and[not[blue],size3],iota(filter(filter(filter(x.s, nor[and[not[size1],not[not[and[blue,not[yellow]]]]],triangle]), and[triangle,size2]), not[rectangle])))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:blue;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:and[%s,%s];4:not[%s];4:size1;4:not[%s];4:not[%s];4:and[%s,%s];4:blue;4:not[%s];4:yellow;4:triangle;4:and[%s,%s];4:triangle;4:size2;4:not[%s];4:rectangle
'λx.apply(iff[triangle,nor[triangle,triangle]],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:iff[%s,%s];4:triangle;4:nor[%s,%s];4:triangle;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(and[size1,yellow],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.forall(rectangle,filter(filter(filter(x.s, size3), or[not[or[size1,or[triangle,size3]]],size2]), apply(same_color,x.o)))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:not[%s];4:or[%s,%s];4:size1;4:or[%s,%s];4:triangle;4:size3;4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(and[and[size1,circle],nand[apply(same_color,x.o),and[not[green],apply(same_size,iota(filter(filter(x.s, triangle), blue)))]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:circle;4:nand[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:not[%s];4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue;1:%s.o;2:x
'λx.exists(or[and[nand[size1,yellow],size3],size2], filter(x.s, size1))'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:size1;4:yellow;4:size3;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(nand[size1,yellow],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size1;4:yellow;1:%s.o;2:x
'λx.apply(nand[implies[nand[and[size2,apply(same_color,iota(filter(x.s, green)))],yellow],size2],triangle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:implies[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow;4:size2;4:triangle;1:%s.o;2:x
'λx.apply(nor[green,not[circle]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:green;4:not[%s];4:circle;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(filter(x.s, nor[green,or[not[implies[green,and[size2,nor[not[iff[green,not[green]]],circle]]]],green]]), or[iff[implies[and[triangle,size1],and[green,size1]],apply(size-leq,x.o)],circle]), or[nor[circle,size1],rectangle]), and[and[and[size3,triangle],and[blue,size2]],nor[triangle,green]])), filter(filter(x.s, yellow), iff[iff[circle,blue],blue]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:green;4:or[%s,%s];4:not[%s];4:implies[%s,%s];4:green;4:and[%s,%s];4:size2;4:nor[%s,%s];4:not[%s];4:iff[%s,%s];4:green;4:not[%s];4:green;4:circle;4:green;4:or[%s,%s];4:iff[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:triangle;4:size1;4:and[%s,%s];4:green;4:size1;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:circle;4:or[%s,%s];4:nor[%s,%s];4:circle;4:size1;4:rectangle;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:triangle;4:and[%s,%s];4:blue;4:size2;4:nor[%s,%s];4:triangle;4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:iff[%s,%s];4:iff[%s,%s];4:circle;4:blue;4:blue
'λx.apply(yellow,iota(filter(x.s, blue)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(size2,iota(filter(x.s, not[apply(size-geq,iota(filter(x.s, size2)))])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(or[not[nor[and[not[circle],and[and[rectangle,size1],and[apply(size-leq,x.o),and[size3,and[not[or[nand[circle,iff[apply(same_size,iota(x.s)),apply(size-leq,iota(x.s))]],apply(size-geq,x.o)]],nor[rectangle,not[and[blue,size3]]]]]]]],size2]],size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:nor[%s,%s];4:and[%s,%s];4:not[%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size1;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:and[%s,%s];4:size3;4:and[%s,%s];4:not[%s];4:or[%s,%s];4:nand[%s,%s];4:circle;4:iff[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:nor[%s,%s];4:rectangle;4:not[%s];4:and[%s,%s];4:blue;4:size3;4:size2;4:size2;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, nor[and[not[blue],size3],size1]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:and[%s,%s];4:not[%s];4:blue;4:size3;4:size1
'λx.empty(filter(x.s, apply(same_color,x.o)))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.forall(not[size3],x.s)'	0:forall(%s,%s);4:not[%s];4:size3;3:%s.s;2:x
'λx.forall(not[size1],x.s)'	0:forall(%s,%s);4:not[%s];4:size1;3:%s.s;2:x
'λx.forall(not[size2],x.s)'	0:forall(%s,%s);4:not[%s];4:size2;3:%s.s;2:x
'λx.apply(or[green,size1],iota(filter(x.s, green)))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(implies[size1,green],iota(filter(filter(x.s, implies[nand[circle,rectangle],size1]), rectangle)))'	0:apply(%s,%s);4:implies[%s,%s];4:size1;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:nand[%s,%s];4:circle;4:rectangle;4:size1;4:rectangle
'λx.forall(yellow,filter(filter(filter(x.s, yellow), size1), apply(same_shape,iota(x.s))))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.forall(green,filter(x.s, or[yellow,yellow]))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:yellow
'λx.apply(size1,iota(filter(filter(filter(x.s, size2), size1), and[yellow,blue])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1;4:and[%s,%s];4:yellow;4:blue
'λx.exists(apply(same_color,iota(filter(x.s, rectangle))), filter(x.s, size3))'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.contains(iota(x.s), filter(x.s, and[and[or[blue,nand[and[rectangle,circle],not[size1]]],blue],green]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:blue;4:nand[%s,%s];4:and[%s,%s];4:rectangle;4:circle;4:not[%s];4:size1;4:blue;4:green
'λx.forall(or[and[and[size1,blue],or[and[and[size2,size3],and[not[rectangle],rectangle]],apply(same_color,iota(x.s))]],circle],filter(x.s, size1))'	0:forall(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:blue;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:size3;4:and[%s,%s];4:not[%s];4:rectangle;4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(or[and[size1,nor[or[not[blue],rectangle],green]],blue], filter(x.s, apply(same_size,x.o)))'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:size1;4:nor[%s,%s];4:or[%s,%s];4:not[%s];4:blue;4:rectangle;4:green;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(and[size3,iff[not[triangle],not[and[rectangle,circle]]]],iota(filter(x.s, and[blue,blue])))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:iff[%s,%s];4:not[%s];4:triangle;4:not[%s];4:and[%s,%s];4:rectangle;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:blue
'λx.exists(and[blue,rectangle], filter(x.s, and[apply(same_size,iota(filter(x.s, apply(same_shape,iota(x.s))))),rectangle]))'	0:exists(%s, %s);4:and[%s,%s];4:blue;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:rectangle
'λx.apply(nand[and[apply(size-geq,iota(x.s)),green],green],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:green;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_shape,iota(x.s)),iota(filter(filter(filter(x.s, and[size3,and[circle,rectangle]]), blue), circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:and[%s,%s];4:circle;4:rectangle;4:blue;4:circle
'λx.apply(apply(same_shape,iota(filter(filter(x.s, size1), green))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green;1:%s.o;2:x
'λx.apply(and[not[size3],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size3;4:size1;1:%s.o;2:x
'λx.forall(apply(same_size,x.o),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(apply(same_size,x.o),iota(filter(filter(filter(x.s, rectangle), circle), or[and[green,blue],rectangle])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle;4:or[%s,%s];4:and[%s,%s];4:green;4:blue;4:rectangle
'λx.forall(not[triangle],filter(x.s, apply(same_size,iota(filter(filter(x.s, blue), size3)))))'	0:forall(%s,%s);4:not[%s];4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3
'λx.apply(green,iota(filter(x.s, apply(same_color,x.o))))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(not[not[implies[size1,yellow]]],iota(filter(x.s, and[and[not[size3],not[circle]],apply(same_size,iota(x.s))])))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:implies[%s,%s];4:size1;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size3;4:not[%s];4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(x.s, not[and[circle,apply(same_color,iota(x.s))]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[size2,yellow],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size2;4:yellow;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(x.s, and[circle,yellow]), size3)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:yellow;4:size3
'λx.exists(apply(same_shape,x.o), filter(filter(x.s, size3), blue))'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue
'λx.apply(green,iota(filter(filter(x.s, not[and[apply(same_size,iota(x.s)),size2]]), circle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size2;4:circle
'λx.apply(and[and[not[circle],size3],size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:circle;4:size3;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(not[and[not[nand[apply(same_color,x.o),and[and[green,circle],blue]]],triangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:nand[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:and[%s,%s];4:green;4:circle;4:blue;4:triangle;1:%s.o;2:x
'λx.apply(not[not[yellow]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(size-geq,x.o),iota(filter(filter(x.s, and[and[size2,triangle],rectangle]), apply(size-lt,iota(filter(filter(filter(x.s, triangle), and[and[implies[and[or[and[green,size3],not[green]],or[and[blue,and[and[triangle,green],rectangle]],rectangle]],iff[rectangle,or[blue,size1]]],iff[yellow,blue]],and[circle,not[size3]]]), green))))))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size2;4:triangle;4:rectangle;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:green;4:size3;4:not[%s];4:green;4:or[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:triangle;4:green;4:rectangle;4:rectangle;4:iff[%s,%s];4:rectangle;4:or[%s,%s];4:blue;4:size1;4:iff[%s,%s];4:yellow;4:blue;4:and[%s,%s];4:circle;4:not[%s];4:size3;4:green
'λx.apply(and[or[iff[and[size1,triangle],blue],rectangle],size1],iota(filter(filter(filter(filter(filter(filter(filter(filter(x.s, apply(same_size,iota(x.s))), green), size1), size2), triangle), or[or[and[blue,and[iff[nor[yellow,green],blue],circle]],not[not[not[rectangle]]]],or[and[size3,and[size1,size1]],triangle]]), size2), rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:size1;4:triangle;4:blue;4:rectangle;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:green;4:size1;4:size2;4:triangle;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:iff[%s,%s];4:nor[%s,%s];4:yellow;4:green;4:blue;4:circle;4:not[%s];4:not[%s];4:not[%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:size1;4:size1;4:triangle;4:size2;4:rectangle
'λx.apply(not[not[size2]],iota(filter(x.s, not[triangle])))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.apply(size2,iota(filter(x.s, apply(same_color,x.o))))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(size3,iota(filter(x.s, apply(same_color,x.o))))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(size1,iota(filter(x.s, apply(same_color,x.o))))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(or[circle,not[iff[size1,not[size1]]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:not[%s];4:iff[%s,%s];4:size1;4:not[%s];4:size1;1:%s.o;2:x
'λx.apply(not[apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(blue,iota(x.s))'	0:apply(%s,%s);4:blue;1:iota(%s);3:%s.s;2:x
'λx.exists(size3, filter(filter(filter(filter(x.s, and[blue,size3]), rectangle), rectangle), size3))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size3;4:rectangle;4:rectangle;4:size3
'λx.exists(nor[size3,or[or[size2,apply(same_color,x.o)],not[green]]], x.s)'	0:exists(%s, %s);4:nor[%s,%s];4:size3;4:or[%s,%s];4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:green;3:%s.s;2:x
'λx.contains(iota(filter(filter(x.s, triangle), and[green,rectangle])), filter(x.s, and[yellow,size2]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:green;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size2
'λx.apply(or[and[apply(same_shape,x.o),and[circle,green]],apply(same_size,iota(filter(x.s, size3)))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:circle;4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, and[and[apply(size-gt,iota(x.s)),size3],and[size3,blue]]), size2), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:size3;4:blue;4:size2;4:size2
'λx.apply(green,iota(filter(x.s, and[nand[green,triangle],and[and[yellow,apply(same_shape,x.o)],size2]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nand[%s,%s];4:green;4:triangle;4:and[%s,%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2
'λx.exists(size3, filter(x.s, not[circle]))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.apply(iff[green,size1],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:green;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[not[blue],apply(same_size,x.o)],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:nor[%s,%s];4:not[%s];4:blue;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.empty(filter(filter(filter(filter(x.s, nor[circle,green]), and[size2,apply(same_color,x.o)]), apply(same_size,x.o)), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:circle;4:green;4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3
'λx.apply(yellow,iota(filter(x.s, or[size1,apply(same_color,x.o)])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, apply(same_shape,x.o))))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(size3,iota(filter(x.s, implies[size3,triangle])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size3;4:triangle
'λx.apply(size1,iota(filter(x.s, apply(same_shape,x.o))))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(x.s, size3), and[size3,size3]), circle), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:size3;4:size3;4:circle;4:circle
'λx.apply(implies[and[iff[implies[not[triangle],yellow],rectangle],rectangle],and[blue,triangle]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:implies[%s,%s];4:not[%s];4:triangle;4:yellow;4:rectangle;4:rectangle;4:and[%s,%s];4:blue;4:triangle;1:%s.o;2:x
'λx.apply(and[green,nand[and[size2,circle],blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:nand[%s,%s];4:and[%s,%s];4:size2;4:circle;4:blue;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(filter(filter(x.s, yellow), apply(same_size,x.o)), and[size1,triangle]), size2)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:size1;4:triangle;4:size2
'λx.forall(circle,filter(filter(x.s, rectangle), triangle))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle
'λx.apply(iff[not[or[apply(same_color,x.o),and[size2,or[apply(same_size,iota(x.s)),blue]]]],and[size1,yellow]],iota(filter(filter(filter(x.s, triangle), rectangle), not[size2])))'	0:apply(%s,%s);4:iff[%s,%s];4:not[%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:size2;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:size1;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle;4:not[%s];4:size2
'λx.apply(or[triangle,size3],iota(filter(filter(x.s, or[or[blue,blue],circle]), size2)))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:blue;4:blue;4:circle;4:size2
'λx.apply(nor[apply(same_color,x.o),iff[triangle,yellow]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:iff[%s,%s];4:triangle;4:yellow;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(x.s, yellow), triangle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle
'λx.forall(iff[apply(same_size,x.o),triangle],x.s)'	0:forall(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle;3:%s.s;2:x
'λx.apply(or[green,rectangle],iota(filter(x.s, not[and[or[size1,nor[triangle,and[apply(same_color,x.o),not[and[and[triangle,and[apply(same_shape,iota(x.s)),size1]],circle]]]]],and[size3,not[and[and[rectangle,size3],size1]]]]])))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:or[%s,%s];4:size1;4:nor[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size1;4:circle;4:and[%s,%s];4:size3;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size3;4:size1
'λx.apply(and[not[circle],and[rectangle,and[and[yellow,and[and[size1,green],apply(same_color,x.o)]],nand[triangle,size2]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:circle;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:and[%s,%s];4:size1;4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:nand[%s,%s];4:triangle;4:size2;1:%s.o;2:x
'λx.contains(x.o, filter(filter(filter(x.s, rectangle), rectangle), or[blue,green]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle;4:or[%s,%s];4:blue;4:green
'λx.apply(and[yellow,yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[and[yellow,apply(size-leq,iota(x.s))],triangle],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(size-gt,x.o),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(not[green],iota(filter(filter(x.s, nand[green,apply(same_color,iota(filter(x.s, rectangle)))]), rectangle)))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle
'λx.forall(and[size3,and[apply(same_size,iota(filter(filter(x.s, not[nand[triangle,rectangle]]), not[rectangle]))),apply(size-leq,x.o)]],filter(x.s, size1))'	0:forall(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:nand[%s,%s];4:triangle;4:rectangle;4:not[%s];4:rectangle;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(or[apply(size-gt,iota(filter(filter(filter(filter(x.s, not[green]), and[size3,green]), circle), size3))),implies[blue,not[yellow]]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:and[%s,%s];4:size3;4:green;4:circle;4:size3;4:implies[%s,%s];4:blue;4:not[%s];4:yellow;3:%s.s;2:x
'λx.apply(and[apply(same_shape,iota(x.s)),size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size1;1:%s.o;2:x
'λx.apply(nand[yellow,apply(same_shape,iota(x.s))],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(filter(filter(filter(filter(x.s, and[implies[or[apply(same_shape,iota(x.s)),triangle],and[size1,not[rectangle]]],size1]), apply(same_color,iota(filter(filter(filter(x.s, triangle), and[size2,and[size3,apply(same_size,x.o)]]), iff[rectangle,triangle])))), or[yellow,size3]), or[size1,yellow]), not[blue]), size3)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:size1;4:not[%s];4:rectangle;4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:size2;4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:iff[%s,%s];4:rectangle;4:triangle;4:or[%s,%s];4:yellow;4:size3;4:or[%s,%s];4:size1;4:yellow;4:not[%s];4:blue;4:size3
'λx.apply(and[apply(size-gt,iota(filter(filter(x.s, rectangle), apply(same_size,x.o)))),green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;1:%s.o;2:x
'λx.apply(not[and[rectangle,rectangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:rectangle;4:rectangle;1:%s.o;2:x
'λx.apply(iff[size2,size2],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:size2;4:size2;1:%s.o;2:x
'λx.apply(iff[size2,blue],iota(filter(x.s, or[triangle,blue])))'	0:apply(%s,%s);4:iff[%s,%s];4:size2;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:blue
'λx.contains(iota(filter(x.s, size2)), filter(x.s, size2))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(and[nor[not[implies[circle,and[yellow,size3]]],size1],size1],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:not[%s];4:implies[%s,%s];4:circle;4:and[%s,%s];4:yellow;4:size3;4:size1;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.contains(x.o, filter(filter(x.s, and[size1,not[size2]]), triangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:not[%s];4:size2;4:triangle
'λx.forall(blue,filter(filter(filter(x.s, or[size1,size3]), triangle), rectangle))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:size3;4:triangle;4:rectangle
'λx.apply(triangle,iota(filter(x.s, or[circle,blue])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:blue
'λx.apply(size3,iota(filter(filter(x.s, or[yellow,and[circle,size2]]), size3)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:and[%s,%s];4:circle;4:size2;4:size3
'λx.apply(and[not[apply(same_shape,x.o)],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle;1:%s.o;2:x
'λx.apply(iff[size1,iff[not[rectangle],rectangle]],iota(filter(filter(filter(x.s, size1), yellow), triangle)))'	0:apply(%s,%s);4:iff[%s,%s];4:size1;4:iff[%s,%s];4:not[%s];4:rectangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow;4:triangle
'λx.contains(iota(x.s), filter(x.s, or[or[blue,and[triangle,or[blue,and[not[size3],or[size2,apply(same_color,iota(filter(filter(filter(x.s, size3), and[size2,size3]), and[and[not[not[apply(same_size,x.o)]],not[or[green,and[circle,or[circle,or[apply(same_size,x.o),green]]]]]],and[and[circle,size3],circle]])))]]]]],green]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:blue;4:and[%s,%s];4:triangle;4:or[%s,%s];4:blue;4:and[%s,%s];4:not[%s];4:size3;4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:size2;4:size3;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:not[%s];4:or[%s,%s];4:green;4:and[%s,%s];4:circle;4:or[%s,%s];4:circle;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;4:and[%s,%s];4:and[%s,%s];4:circle;4:size3;4:circle;4:green
'λx.exists(blue, filter(filter(x.s, size1), size1))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1
'λx.apply(not[size1],iota(filter(x.s, not[or[apply(same_size,x.o),size3]])))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3
'λx.exists(nor[apply(size-leq,iota(x.s)),rectangle], x.s)'	0:exists(%s, %s);4:nor[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:rectangle;3:%s.s;2:x
'λx.contains(iota(filter(x.s, green)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;3:%s.s;2:x
'λx.empty(filter(filter(x.s, triangle), and[size2,iff[yellow,not[apply(same_color,iota(x.s))]]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:size2;4:iff[%s,%s];4:yellow;4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(x.s, apply(same_size,iota(x.s))), blue)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:blue;3:%s.s;2:x
'λx.apply(blue,iota(filter(x.s, nand[triangle,green])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:triangle;4:green
'λx.apply(and[green,not[yellow]],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.contains(x.o, filter(x.s, or[and[rectangle,and[green,green]],triangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:green;4:green;4:triangle
'λx.apply(nand[size1,and[size2,blue]],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:size1;4:and[%s,%s];4:size2;4:blue;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, yellow), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle
'λx.apply(nand[size3,size1],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:nand[%s,%s];4:size3;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(and[apply(size-leq,iota(filter(x.s, green))),size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size2;1:iota(%s);3:%s.s;2:x
'λx.exists(rectangle, filter(filter(x.s, and[size2,rectangle]), green))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:rectangle;4:green
'λx.contains(x.o, filter(filter(filter(x.s, iff[size3,circle]), size2), circle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size3;4:circle;4:size2;4:circle
'λx.apply(yellow,iota(filter(x.s, circle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.exists(blue, filter(x.s, and[triangle,apply(same_color,iota(x.s))]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(not[not[apply(same_shape,iota(x.s))]],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(yellow,iota(filter(filter(x.s, circle), and[yellow,iff[size1,or[size1,circle]]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:yellow;4:iff[%s,%s];4:size1;4:or[%s,%s];4:size1;4:circle
'λx.forall(circle,filter(x.s, and[or[apply(same_size,iota(filter(x.s, triangle))),apply(same_color,x.o)],size1]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1
'λx.forall(apply(size-gt,x.o),filter(filter(filter(filter(x.s, size1), triangle), green), apply(size-lt,iota(x.s))))'	0:forall(%s,%s);4:apply(%s,%s);5:size-gt;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle;4:green;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[not[and[triangle,yellow]],and[rectangle,and[size2,not[yellow]]]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:not[%s];4:and[%s,%s];4:triangle;4:yellow;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:size2;4:not[%s];4:yellow;1:%s.o;2:x
'λx.apply(or[not[implies[circle,not[size2]]],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:implies[%s,%s];4:circle;4:not[%s];4:size2;4:blue;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, apply(size-gt,iota(filter(x.s, triangle)))), rectangle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle
'λx.apply(and[size1,not[nand[or[size2,not[rectangle]],not[rectangle]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:not[%s];4:nand[%s,%s];4:or[%s,%s];4:size2;4:not[%s];4:rectangle;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.apply(and[and[triangle,size1],not[triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:size1;4:not[%s];4:triangle;1:%s.o;2:x
'λx.apply(apply(size-geq,iota(filter(x.s, or[triangle,size2]))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[green,size1],and[size3,size1]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:green;4:size1;4:and[%s,%s];4:size3;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(not[and[nor[size3,blue],yellow]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:nor[%s,%s];4:size3;4:blue;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[yellow,circle],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:yellow;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(x.s, blue), green)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green
'λx.apply(or[size1,blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:blue;1:%s.o;2:x
'λx.forall(not[green],x.s)'	0:forall(%s,%s);4:not[%s];4:green;3:%s.s;2:x
'λx.apply(apply(same_size,iota(filter(x.s, rectangle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(x.s, size3), not[and[triangle,nand[circle,triangle]]]), size3)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:and[%s,%s];4:triangle;4:nand[%s,%s];4:circle;4:triangle;4:size3;3:%s.s;2:x
'λx.apply(or[size3,and[blue,rectangle]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:and[%s,%s];4:blue;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(x.s, and[size1,circle])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:circle
'λx.apply(iff[and[triangle,and[apply(same_size,iota(filter(filter(filter(filter(x.s, and[rectangle,not[apply(same_shape,iota(filter(filter(x.s, blue), and[size2,size3])))]]), triangle), and[size2,apply(size-lt,x.o)]), rectangle))),size1]],circle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:size2;4:size3;4:triangle;4:and[%s,%s];4:size2;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:rectangle;4:size1;4:circle;1:%s.o;2:x
'λx.empty(filter(x.s, and[yellow,size3]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size3
'λx.apply(or[blue,nand[size3,and[size3,and[rectangle,size2]]]],iota(filter(x.s, green)))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:nand[%s,%s];4:size3;4:and[%s,%s];4:size3;4:and[%s,%s];4:rectangle;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[size2,apply(size-gt,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(apply(same_size,iota(filter(x.s, size1))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(not[or[not[not[circle]],not[blue]]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:not[%s];4:not[%s];4:circle;4:not[%s];4:blue;1:%s.o;2:x
'λx.exists(blue, filter(filter(x.s, implies[rectangle,apply(same_size,x.o)]), size2))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2
'λx.apply(or[size2,blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:blue;1:%s.o;2:x
'λx.empty(filter(filter(x.s, triangle), apply(same_shape,iota(x.s))))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(x.s), filter(filter(x.s, size2), size3))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3
'λx.apply(not[and[size3,nand[size2,or[blue,and[blue,yellow]]]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size3;4:nand[%s,%s];4:size2;4:or[%s,%s];4:blue;4:and[%s,%s];4:blue;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(x.s, size2), not[iff[size2,size1]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:not[%s];4:iff[%s,%s];4:size2;4:size1
'λx.forall(size1,filter(filter(filter(x.s, green), rectangle), or[or[implies[not[not[size2]],iff[rectangle,size3]],blue],circle]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle;4:or[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:not[%s];4:not[%s];4:size2;4:iff[%s,%s];4:rectangle;4:size3;4:blue;4:circle
'λx.apply(or[apply(same_color,x.o),green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green;1:%s.o;2:x
'λx.apply(apply(same_color,x.o),iota(filter(filter(filter(filter(x.s, and[apply(same_color,x.o),size2]), apply(same_color,iota(filter(x.s, apply(same_shape,x.o))))), size3), and[circle,size3])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3;4:and[%s,%s];4:circle;4:size3
'λx.apply(triangle,iota(filter(filter(filter(filter(filter(x.s, green), and[size3,nor[iff[blue,size2],size1]]), and[size1,and[triangle,blue]]), triangle), iff[rectangle,and[yellow,rectangle]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:size3;4:nor[%s,%s];4:iff[%s,%s];4:blue;4:size2;4:size1;4:and[%s,%s];4:size1;4:and[%s,%s];4:triangle;4:blue;4:triangle;4:iff[%s,%s];4:rectangle;4:and[%s,%s];4:yellow;4:rectangle
'λx.apply(or[blue,size2],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(circle,iota(filter(filter(filter(x.s, rectangle), or[and[size2,not[implies[circle,and[size1,size3]]]],size3]), apply(same_shape,iota(x.s)))))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:or[%s,%s];4:and[%s,%s];4:size2;4:not[%s];4:implies[%s,%s];4:circle;4:and[%s,%s];4:size1;4:size3;4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_color,iota(filter(filter(x.s, yellow), size3))),iota(filter(filter(filter(filter(x.s, size2), not[and[size1,size3]]), not[not[iff[apply(same_color,iota(x.s)),size3]]]), nand[size3,size3])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:not[%s];4:and[%s,%s];4:size1;4:size3;4:not[%s];4:not[%s];4:iff[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size3;4:nand[%s,%s];4:size3;4:size3
'λx.apply(circle,iota(filter(x.s, not[and[blue,and[implies[or[rectangle,and[triangle,triangle]],size2],blue]]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:rectangle;4:and[%s,%s];4:triangle;4:triangle;4:size2;4:blue
'λx.apply(and[rectangle,and[or[not[triangle],yellow],blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:triangle;4:yellow;4:blue;1:%s.o;2:x
'λx.empty(filter(filter(x.s, size3), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow
'λx.apply(triangle,iota(filter(filter(filter(filter(filter(x.s, apply(same_color,iota(x.s))), size2), and[size1,nor[not[size2],implies[circle,size2]]]), and[rectangle,iff[circle,blue]]), and[size3,size3])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:size1;4:nor[%s,%s];4:not[%s];4:size2;4:implies[%s,%s];4:circle;4:size2;4:and[%s,%s];4:rectangle;4:iff[%s,%s];4:circle;4:blue;4:and[%s,%s];4:size3;4:size3
'λx.apply(and[or[size1,triangle],or[size2,circle]],iota(filter(filter(filter(filter(filter(filter(filter(filter(filter(x.s, size2), and[circle,and[circle,circle]]), rectangle), blue), apply(same_color,iota(x.s))), size3), rectangle), green), yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size1;4:triangle;4:or[%s,%s];4:size2;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:circle;4:and[%s,%s];4:circle;4:circle;4:rectangle;4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size3;4:rectangle;4:green;4:yellow
'λx.apply(or[and[and[rectangle,blue],not[size3]],size1],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:blue;4:not[%s];4:size3;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[rectangle,circle],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:rectangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[blue,apply(same_shape,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.exists(green, filter(filter(x.s, triangle), rectangle))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle
'λx.apply(rectangle,iota(filter(filter(x.s, rectangle), size1)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1
'λx.empty(filter(x.s, and[and[size1,circle],green]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size1;4:circle;4:green
'λx.apply(iff[yellow,and[green,not[apply(same_color,iota(x.s))]]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:yellow;4:and[%s,%s];4:green;4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(and[circle,size1],iota(filter(x.s, iff[size1,green])))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size1;4:green
'λx.apply(apply(size-gt,iota(filter(filter(x.s, blue), size2))),iota(filter(filter(x.s, size2), circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle
'λx.apply(nor[apply(same_size,x.o),or[iff[or[or[triangle,circle],green],size3],not[triangle]]],iota(filter(filter(x.s, circle), and[blue,size2])))'	0:apply(%s,%s);4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:or[%s,%s];4:triangle;4:circle;4:green;4:size3;4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:blue;4:size2
'λx.apply(or[and[size3,or[rectangle,blue]],green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size3;4:or[%s,%s];4:rectangle;4:blue;4:green;1:%s.o;2:x
'λx.apply(and[rectangle,or[yellow,size1]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:or[%s,%s];4:yellow;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size2,apply(size-gt,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, or[triangle,rectangle]), iff[blue,triangle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:rectangle;4:iff[%s,%s];4:blue;4:triangle
'λx.apply(yellow,iota(filter(filter(x.s, not[and[size3,triangle]]), circle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:size3;4:triangle;4:circle
'λx.apply(size3,iota(filter(filter(filter(filter(filter(filter(filter(x.s, blue), apply(same_color,x.o)), triangle), yellow), or[implies[green,or[green,and[iff[circle,apply(same_shape,x.o)],size1]]],apply(same_size,iota(filter(x.s, size3)))]), apply(same_size,x.o)), green)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;4:yellow;4:or[%s,%s];4:implies[%s,%s];4:green;4:or[%s,%s];4:green;4:and[%s,%s];4:iff[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green
'λx.apply(and[and[not[not[apply(same_size,x.o)]],not[rectangle]],and[and[circle,size3],circle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:not[%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:circle;4:size3;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[not[not[rectangle]],not[size1]],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:not[%s];4:rectangle;4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.empty(filter(filter(x.s, circle), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow
'λx.contains(iota(filter(x.s, circle)), filter(x.s, size2))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(blue,iota(filter(filter(filter(x.s, green), size1), green)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1;4:green
'λx.forall(triangle,filter(filter(x.s, size2), blue))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue
'λx.apply(and[not[and[apply(same_size,x.o),not[and[not[apply(same_size,x.o)],size2]]]],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2;4:size3;1:%s.o;2:x
'λx.empty(filter(filter(x.s, circle), implies[implies[size2,triangle],rectangle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:implies[%s,%s];4:implies[%s,%s];4:size2;4:triangle;4:rectangle
'λx.apply(and[or[size2,apply(size-leq,iota(filter(filter(x.s, circle), or[green,nor[size1,triangle]])))],apply(same_size,iota(x.s))],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size2;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:green;4:nor[%s,%s];4:size1;4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.exists(and[and[size1,circle],size3], filter(x.s, size1))'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:size1;4:circle;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.contains(iota(filter(filter(x.s, size3), not[green])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:green;3:%s.s;2:x
'λx.apply(or[yellow,or[green,circle]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:or[%s,%s];4:green;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[or[nor[and[and[green,or[circle,nor[size2,yellow]]],triangle],triangle],and[triangle,not[yellow]]],size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:or[%s,%s];4:circle;4:nor[%s,%s];4:size2;4:yellow;4:triangle;4:triangle;4:and[%s,%s];4:triangle;4:not[%s];4:yellow;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(or[blue,not[and[apply(same_shape,x.o),circle]]],iota(filter(x.s, not[and[or[and[rectangle,size1],or[blue,size3]],iff[triangle,rectangle]]])))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:rectangle;4:size1;4:or[%s,%s];4:blue;4:size3;4:iff[%s,%s];4:triangle;4:rectangle
'λx.apply(not[nand[triangle,green]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:nand[%s,%s];4:triangle;4:green;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(x.s), filter(filter(filter(x.s, and[size2,or[or[circle,apply(same_size,x.o)],size3]]), implies[apply(same_color,x.o),circle]), circle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:or[%s,%s];4:or[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;4:circle
'λx.empty(filter(x.s, and[or[apply(size-lt,iota(filter(filter(filter(filter(x.s, and[size3,circle]), rectangle), size2), rectangle))),rectangle],blue]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:circle;4:rectangle;4:size2;4:rectangle;4:rectangle;4:blue
'λx.apply(and[size1,or[yellow,size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:or[%s,%s];4:yellow;4:size3;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, and[and[rectangle,iff[size3,and[size3,and[yellow,blue]]]],and[circle,apply(same_size,x.o)]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:iff[%s,%s];4:size3;4:and[%s,%s];4:size3;4:and[%s,%s];4:yellow;4:blue;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(and[circle,iff[yellow,blue]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:iff[%s,%s];4:yellow;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(not[or[or[yellow,and[nor[triangle,and[iff[green,rectangle],and[size3,green]]],not[blue]]],size2]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:or[%s,%s];4:yellow;4:and[%s,%s];4:nor[%s,%s];4:triangle;4:and[%s,%s];4:iff[%s,%s];4:green;4:rectangle;4:and[%s,%s];4:size3;4:green;4:not[%s];4:blue;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_size,x.o),iota(filter(filter(filter(x.s, triangle), size2), not[size2])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2;4:not[%s];4:size2
'λx.apply(implies[and[circle,yellow],yellow],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:circle;4:yellow;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(filter(filter(x.s, rectangle), or[size1,circle]), iff[size2,not[circle]]), circle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:or[%s,%s];4:size1;4:circle;4:iff[%s,%s];4:size2;4:not[%s];4:circle;4:circle
'λx.apply(size2,iota(filter(x.s, and[or[rectangle,size3],yellow])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:size3;4:yellow
'λx.apply(and[blue,and[blue,size3]],iota(filter(x.s, not[triangle])))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:blue;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.apply(not[apply(same_color,iota(filter(x.s, not[and[blue,size1]])))],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:blue;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(filter(x.s, size2), yellow), size3)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:yellow;4:size3
'λx.apply(and[blue,circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:circle;1:%s.o;2:x
'λx.apply(size1,iota(x.s))'	0:apply(%s,%s);4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(x.s))'	0:apply(%s,%s);4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(x.s))'	0:apply(%s,%s);4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_size,x.o),iota(filter(filter(filter(x.s, triangle), yellow), yellow)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:yellow;4:yellow
'λx.exists(iff[and[not[size3],triangle],rectangle], filter(x.s, size3))'	0:exists(%s, %s);4:iff[%s,%s];4:and[%s,%s];4:not[%s];4:size3;4:triangle;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(or[yellow,and[rectangle,size1]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:and[%s,%s];4:rectangle;4:size1;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, and[size1,size3]), yellow)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size3;4:yellow
'λx.forall(and[blue,circle],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:blue;4:circle;3:%s.s;2:x
'λx.forall(and[size3,size3],filter(filter(filter(filter(x.s, yellow), size1), rectangle), size3))'	0:forall(%s,%s);4:and[%s,%s];4:size3;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;4:rectangle;4:size3
'λx.apply(blue,iota(filter(filter(filter(x.s, triangle), green), circle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green;4:circle
'λx.apply(blue,iota(filter(x.s, or[size1,nor[and[or[circle,circle],size2],green]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:nor[%s,%s];4:and[%s,%s];4:or[%s,%s];4:circle;4:circle;4:size2;4:green
'λx.apply(size1,iota(filter(filter(x.s, yellow), or[blue,not[and[apply(same_shape,x.o),circle]]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:blue;4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle
'λx.apply(or[apply(size-geq,x.o),rectangle],iota(filter(filter(filter(x.s, and[and[size1,not[not[apply(same_shape,x.o)]]],green]), size1), size3)))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size1;4:not[%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green;4:size1;4:size3
'λx.exists(and[and[green,rectangle],apply(size-leq,iota(filter(filter(filter(filter(filter(filter(filter(filter(x.s, not[not[green]]), rectangle), apply(same_shape,iota(x.s))), size3), blue), size2), triangle), circle)))], filter(filter(x.s, rectangle), and[and[yellow,blue],apply(same_color,iota(x.s))]))'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:green;4:rectangle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:green;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size3;4:blue;4:size2;4:triangle;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:and[%s,%s];4:yellow;4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.exists(green, filter(filter(x.s, triangle), green))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green
'λx.apply(or[rectangle,or[apply(same_shape,iota(filter(filter(filter(filter(x.s, or[not[size1],and[rectangle,or[nor[or[size1,size1],circle],apply(same_color,x.o)]]]), size2), triangle), size2))),size2]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:size1;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:size1;4:size1;4:circle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size2;4:triangle;4:size2;4:size2;1:%s.o;2:x
'λx.apply(or[size3,or[size3,and[circle,rectangle]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:or[%s,%s];4:size3;4:and[%s,%s];4:circle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(x.s))'	0:apply(%s,%s);4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(x.s, green)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(circle,iota(filter(x.s, size3)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(circle,iota(filter(x.s, size1)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(circle,iota(filter(x.s, size2)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(not[apply(same_size,iota(filter(x.s, or[apply(same_color,iota(x.s)),iff[apply(same_shape,iota(filter(filter(x.s, size3), triangle))),size2]])))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle;4:size2;1:%s.o;2:x
'λx.apply(size2,iota(filter(x.s, apply(same_shape,iota(x.s)))))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(filter(x.s, blue), yellow), and[and[size3,nor[blue,not[circle]]],and[circle,apply(size-geq,iota(filter(x.s, and[and[green,yellow],size3])))]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow;4:and[%s,%s];4:and[%s,%s];4:size3;4:nor[%s,%s];4:blue;4:not[%s];4:circle;4:and[%s,%s];4:circle;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:green;4:yellow;4:size3
'λx.apply(or[green,size1],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(or[green,size2],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(or[rectangle,iff[green,blue]],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:iff[%s,%s];4:green;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(size2,iota(filter(filter(filter(x.s, and[size2,size2]), triangle), or[triangle,triangle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:size2;4:triangle;4:or[%s,%s];4:triangle;4:triangle
'λx.apply(yellow,iota(filter(x.s, green)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(yellow,iota(filter(x.s, size3)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(yellow,iota(filter(x.s, size2)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(yellow,iota(filter(x.s, size1)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(or[iff[rectangle,circle],or[size3,apply(same_color,iota(filter(x.s, size1)))]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:iff[%s,%s];4:rectangle;4:circle;4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(filter(x.s, iff[rectangle,size1]), size2), yellow)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:rectangle;4:size1;4:size2;4:yellow
'λx.apply(or[and[or[yellow,size3],circle],green],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:yellow;4:size3;4:circle;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(or[implies[size1,size2],green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:implies[%s,%s];4:size1;4:size2;4:green;1:%s.o;2:x
'λx.apply(apply(same_size,iota(filter(filter(filter(x.s, blue), and[and[nand[and[nand[size1,rectangle],size1],triangle],and[size2,circle]],and[size3,and[size2,and[yellow,iff[size2,blue]]]]]), and[size3,size2]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:size1;4:rectangle;4:size1;4:triangle;4:and[%s,%s];4:size2;4:circle;4:and[%s,%s];4:size3;4:and[%s,%s];4:size2;4:and[%s,%s];4:yellow;4:iff[%s,%s];4:size2;4:blue;4:and[%s,%s];4:size3;4:size2;1:%s.o;2:x
'λx.apply(and[blue,rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:rectangle;1:%s.o;2:x
'λx.apply(nand[and[size1,implies[apply(same_color,iota(filter(x.s, not[green]))),circle]],yellow],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:size1;4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:circle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.exists(circle, filter(x.s, size3))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(circle, filter(x.s, size2))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.exists(circle, filter(x.s, green))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.empty(filter(filter(x.s, size3), and[circle,size2]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:circle;4:size2
'λx.apply(or[not[green],nand[yellow,blue]],iota(filter(x.s, not[not[rectangle]])))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:green;4:nand[%s,%s];4:yellow;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:rectangle
'λx.apply(and[and[green,triangle],nor[and[apply(size-gt,iota(x.s)),green],or[size2,and[blue,not[and[yellow,and[blue,size2]]]]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:green;4:triangle;4:nor[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:green;4:or[%s,%s];4:size2;4:and[%s,%s];4:blue;4:not[%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:blue;4:size2;1:%s.o;2:x
'λx.exists(not[apply(same_color,iota(x.s))], x.s)'	0:exists(%s, %s);4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.exists(blue, filter(filter(filter(filter(x.s, or[circle,rectangle]), rectangle), size2), and[size2,apply(size-leq,iota(x.s))]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:rectangle;4:rectangle;4:size2;4:and[%s,%s];4:size2;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(filter(x.s, rectangle), size2), size3), and[size2,triangle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2;4:size3;4:and[%s,%s];4:size2;4:triangle
'λx.apply(and[or[yellow,or[and[yellow,size1],rectangle]],rectangle],iota(filter(filter(filter(x.s, yellow), size1), and[rectangle,size2])))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:yellow;4:or[%s,%s];4:and[%s,%s];4:yellow;4:size1;4:rectangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;4:and[%s,%s];4:rectangle;4:size2
'λx.apply(apply(size-leq,iota(x.s)),iota(filter(x.s, green)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(or[apply(same_size,iota(x.s)),green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:green;1:%s.o;2:x
'λx.apply(iff[implies[size1,size1],apply(same_size,x.o)],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:implies[%s,%s];4:size1;4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[and[circle,and[not[yellow],and[nor[blue,circle],yellow]]],not[and[rectangle,rectangle]]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:not[%s];4:yellow;4:and[%s,%s];4:nor[%s,%s];4:blue;4:circle;4:yellow;4:not[%s];4:and[%s,%s];4:rectangle;4:rectangle;1:%s.o;2:x
'λx.exists(size1, filter(filter(x.s, rectangle), yellow))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:yellow
'λx.apply(not[apply(same_color,iota(filter(filter(filter(x.s, size2), size2), size1)))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2;4:size1;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(filter(filter(x.s, blue), nor[or[yellow,circle],not[rectangle]]), nor[rectangle,circle]), implies[and[green,yellow],apply(same_color,x.o)])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:nor[%s,%s];4:or[%s,%s];4:yellow;4:circle;4:not[%s];4:rectangle;4:nor[%s,%s];4:rectangle;4:circle;4:implies[%s,%s];4:and[%s,%s];4:green;4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, implies[green,yellow])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:green;4:yellow
'λx.exists(or[size2,and[implies[not[circle],not[size3]],rectangle]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:size2;4:and[%s,%s];4:implies[%s,%s];4:not[%s];4:circle;4:not[%s];4:size3;4:rectangle;3:%s.s;2:x
'λx.apply(or[blue,rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:rectangle;1:%s.o;2:x
'λx.apply(or[and[circle,and[yellow,triangle]],size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:yellow;4:triangle;4:size1;1:%s.o;2:x
'λx.apply(nor[yellow,circle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:yellow;4:circle;1:%s.o;2:x
'λx.apply(size3,iota(filter(x.s, or[and[blue,rectangle],and[size2,rectangle]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:blue;4:rectangle;4:and[%s,%s];4:size2;4:rectangle
'λx.apply(and[size2,and[circle,blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:circle;4:blue;1:%s.o;2:x
'λx.exists(size1, filter(filter(filter(filter(filter(filter(filter(filter(filter(x.s, yellow), or[or[yellow,not[circle]],size2]), size3), size2), and[size2,iff[blue,and[triangle,nand[and[implies[triangle,circle],size3],and[size1,and[rectangle,rectangle]]]]]]), or[not[size3],size3]), size1), circle), not[not[size2]]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:or[%s,%s];4:yellow;4:not[%s];4:circle;4:size2;4:size3;4:size2;4:and[%s,%s];4:size2;4:iff[%s,%s];4:blue;4:and[%s,%s];4:triangle;4:nand[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:triangle;4:circle;4:size3;4:and[%s,%s];4:size1;4:and[%s,%s];4:rectangle;4:rectangle;4:or[%s,%s];4:not[%s];4:size3;4:size3;4:size1;4:circle;4:not[%s];4:not[%s];4:size2
'λx.apply(or[not[implies[yellow,not[size1]]],green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:implies[%s,%s];4:yellow;4:not[%s];4:size1;4:green;1:%s.o;2:x
'λx.exists(size1, filter(x.s, and[size1,rectangle]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:rectangle
'λx.apply(or[yellow,blue],iota(filter(x.s, and[nand[and[yellow,size3],rectangle],not[and[and[circle,triangle],size2]]])))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:yellow;4:size3;4:rectangle;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:triangle;4:size2
'λx.exists(and[not[nand[triangle,nor[triangle,yellow]]],yellow], filter(x.s, size3))'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:nand[%s,%s];4:triangle;4:nor[%s,%s];4:triangle;4:yellow;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(not[and[size3,circle]],iota(filter(filter(x.s, green), yellow)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size3;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow
'λx.apply(and[green,and[size3,blue]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:size3;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_color,iota(filter(filter(x.s, size3), not[not[and[yellow,and[yellow,and[rectangle,yellow]]]]]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:not[%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:yellow;4:and[%s,%s];4:rectangle;4:yellow;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, or[triangle,not[not[not[size2]]]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:not[%s];4:not[%s];4:not[%s];4:size2
'λx.exists(and[green,and[apply(size-gt,x.o),rectangle]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:green;4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:rectangle;3:%s.s;2:x
'λx.apply(size1,iota(filter(x.s, apply(size-leq,iota(x.s)))))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size2,and[yellow,blue]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:and[%s,%s];4:yellow;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(x.s, or[green,and[blue,or[size3,size1]]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:and[%s,%s];4:blue;4:or[%s,%s];4:size3;4:size1
'λx.apply(apply(same_color,iota(filter(x.s, blue))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.exists(blue, filter(filter(filter(x.s, apply(same_color,iota(x.s))), size2), apply(same_color,x.o)))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(and[yellow,not[triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:not[%s];4:triangle;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, apply(size-leq,iota(x.s)))))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x
'λx.exists(size1, filter(x.s, and[apply(same_shape,iota(filter(filter(filter(filter(x.s, circle), apply(same_size,x.o)), triangle), and[apply(same_color,x.o),and[and[green,nand[yellow,circle]],blue]]))),and[apply(size-lt,x.o),triangle]]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:and[%s,%s];4:green;4:nand[%s,%s];4:yellow;4:circle;4:blue;4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:triangle
'λx.forall(size2,filter(x.s, blue))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(nand[not[rectangle],green],iota(filter(filter(x.s, size3), size2)))'	0:apply(%s,%s);4:nand[%s,%s];4:not[%s];4:rectangle;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2
'λx.apply(or[triangle,size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:size2;1:%s.o;2:x
'λx.apply(or[triangle,size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:size1;1:%s.o;2:x
'λx.exists(iff[green,triangle], filter(x.s, circle))'	0:exists(%s, %s);4:iff[%s,%s];4:green;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.exists(and[size2,circle], filter(x.s, size3))'	0:exists(%s, %s);4:and[%s,%s];4:size2;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.contains(x.o, filter(x.s, and[blue,size2]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size2
'λx.forall(circle,filter(x.s, circle))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[circle,yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:yellow;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(x.s, yellow), iff[size1,not[circle]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:iff[%s,%s];4:size1;4:not[%s];4:circle
'λx.apply(or[and[size2,circle],rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size2;4:circle;4:rectangle;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(filter(filter(x.s, apply(same_shape,iota(x.s))), nor[size3,triangle]), circle), yellow), green)), filter(x.s, triangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:nor[%s,%s];4:size3;4:triangle;4:circle;4:yellow;4:green;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(yellow,iota(filter(filter(filter(x.s, size1), circle), and[size3,rectangle])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle;4:and[%s,%s];4:size3;4:rectangle
'λx.apply(and[or[blue,apply(same_shape,iota(filter(filter(x.s, and[iff[size3,yellow],or[yellow,and[triangle,not[size3]]]]), circle)))],apply(same_color,iota(filter(x.s, circle)))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:iff[%s,%s];4:size3;4:yellow;4:or[%s,%s];4:yellow;4:and[%s,%s];4:triangle;4:not[%s];4:size3;4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;1:%s.o;2:x
'λx.apply(and[green,and[circle,not[size1]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:circle;4:not[%s];4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(x.s, or[nand[and[circle,yellow],blue],and[size2,size2]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:circle;4:yellow;4:blue;4:and[%s,%s];4:size2;4:size2
'λx.apply(nor[rectangle,and[size3,or[size2,and[circle,triangle]]]],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:rectangle;4:and[%s,%s];4:size3;4:or[%s,%s];4:size2;4:and[%s,%s];4:circle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[triangle],iota(filter(filter(x.s, and[size3,yellow]), blue)))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:yellow;4:blue
'λx.apply(and[and[and[green,triangle],size1],blue],iota(filter(filter(x.s, or[apply(same_shape,iota(filter(x.s, circle))),circle]), and[blue,size2])))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:triangle;4:size1;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:circle;4:and[%s,%s];4:blue;4:size2
'λx.forall(size2,filter(filter(filter(filter(filter(filter(filter(filter(x.s, blue), apply(same_color,x.o)), not[yellow]), nor[size2,apply(same_color,iota(x.s))]), size3), blue), size3), apply(same_size,iota(x.s))))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:yellow;4:nor[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size3;4:blue;4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(and[or[green,blue],triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:green;4:blue;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, size2), nor[not[size3],triangle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:nor[%s,%s];4:not[%s];4:size3;4:triangle
'λx.contains(iota(filter(filter(x.s, apply(size-leq,iota(x.s))), size1)), filter(x.s, size1))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(size1,iota(filter(filter(filter(x.s, yellow), circle), green)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle;4:green
'λx.apply(yellow,iota(filter(filter(x.s, green), iff[size2,and[apply(same_size,iota(filter(filter(filter(filter(x.s, blue), apply(same_color,x.o)), not[yellow]), size2))),size3]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:iff[%s,%s];4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:yellow;4:size2;4:size3
'λx.apply(not[or[rectangle,green]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:rectangle;4:green;1:%s.o;2:x
'λx.apply(and[rectangle,green],iota(filter(filter(filter(filter(filter(x.s, yellow), size2), circle), triangle), size1)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2;4:circle;4:triangle;4:size1
'λx.apply(and[iff[and[green,iff[green,triangle]],apply(size-gt,iota(filter(x.s, iff[yellow,and[rectangle,circle]])))],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:green;4:iff[%s,%s];4:green;4:triangle;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:yellow;4:and[%s,%s];4:rectangle;4:circle;4:size1;1:%s.o;2:x
'λx.contains(iota(filter(x.s, or[size2,triangle])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:triangle;3:%s.s;2:x
'λx.apply(green,iota(filter(x.s, or[green,blue])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:blue
'λx.apply(size2,iota(filter(filter(x.s, and[not[circle],and[and[and[not[blue],and[and[iff[size1,size3],not[and[blue,and[size2,green]]]],implies[size3,circle]]],and[triangle,or[yellow,blue]]],green]]), size3)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:size1;4:size3;4:not[%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:size2;4:green;4:implies[%s,%s];4:size3;4:circle;4:and[%s,%s];4:triangle;4:or[%s,%s];4:yellow;4:blue;4:green;4:size3
'λx.apply(green,iota(filter(filter(x.s, rectangle), and[circle,green])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:circle;4:green
'λx.forall(size2,filter(x.s, and[size3,not[size3]]))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:not[%s];4:size3
'λx.apply(nor[apply(same_size,x.o),apply(same_size,iota(filter(x.s, green)))],iota(filter(filter(filter(filter(x.s, triangle), size2), and[size2,size2]), not[size2])))'	0:apply(%s,%s);4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2;4:and[%s,%s];4:size2;4:size2;4:not[%s];4:size2
'λx.apply(and[rectangle,size3],iota(filter(filter(x.s, size3), apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(filter(filter(filter(x.s, rectangle), size3), nand[blue,and[apply(size-gt,x.o),size1]]), and[circle,size2]), yellow)), filter(filter(x.s, size1), rectangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3;4:nand[%s,%s];4:blue;4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:size1;4:and[%s,%s];4:circle;4:size2;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle
'λx.apply(or[size3,size3],iota(filter(x.s, nand[size1,triangle])))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size1;4:triangle
'λx.apply(and[and[size3,not[apply(same_shape,iota(filter(filter(x.s, size3), rectangle)))]],apply(same_color,iota(x.s))],iota(filter(filter(filter(filter(x.s, blue), size2), apply(same_size,x.o)), circle)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size3;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle
'λx.apply(iff[circle,circle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:circle;4:circle;1:%s.o;2:x
'λx.empty(filter(filter(x.s, size3), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle
'λx.apply(green,iota(filter(filter(filter(filter(x.s, circle), size1), yellow), iff[size2,green])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1;4:yellow;4:iff[%s,%s];4:size2;4:green
'λx.apply(apply(same_shape,iota(filter(x.s, size2))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(x.s, size1))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(x.s, size3))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;1:%s.o;2:x
'λx.forall(triangle,filter(filter(filter(filter(x.s, rectangle), iff[size1,size3]), size1), blue))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:iff[%s,%s];4:size1;4:size3;4:size1;4:blue
'λx.apply(or[triangle,rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:rectangle;1:%s.o;2:x
'λx.contains(iota(filter(x.s, or[apply(same_shape,iota(x.s)),yellow])), filter(x.s, rectangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.empty(filter(filter(filter(filter(filter(x.s, green), not[size2]), not[and[size3,or[triangle,green]]]), apply(same_color,iota(x.s))), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:size2;4:not[%s];4:and[%s,%s];4:size3;4:or[%s,%s];4:triangle;4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:blue
'λx.apply(apply(same_size,iota(filter(filter(filter(x.s, yellow), size1), size2))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;4:size2;1:%s.o;2:x
'λx.forall(and[green,green],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:green;4:green;3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(filter(filter(x.s, green), yellow), not[iff[green,or[rectangle,size2]]]), size2)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow;4:not[%s];4:iff[%s,%s];4:green;4:or[%s,%s];4:rectangle;4:size2;4:size2
'λx.exists(green, filter(filter(filter(filter(filter(x.s, triangle), and[or[nor[size1,size1],and[apply(same_color,iota(filter(filter(x.s, size3), nor[blue,size2]))),blue]],implies[iff[or[circle,green],size3],yellow]]), and[triangle,rectangle]), green), circle))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:size1;4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:nor[%s,%s];4:blue;4:size2;4:blue;4:implies[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:circle;4:green;4:size3;4:yellow;4:and[%s,%s];4:triangle;4:rectangle;4:green;4:circle
'λx.apply(and[size1,size1],iota(filter(filter(x.s, size3), or[green,apply(same_size,x.o)])))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(or[size1,iff[nand[blue,not[blue]],apply(size-gt,iota(filter(filter(x.s, size2), and[circle,and[size3,circle]])))]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:iff[%s,%s];4:nand[%s,%s];4:blue;4:not[%s];4:blue;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:circle;4:and[%s,%s];4:size3;4:circle;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, implies[apply(same_size,iota(x.s)),and[size3,circle]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:circle
'λx.apply(nand[circle,yellow],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:circle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.forall(and[blue,blue],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:blue;4:blue;3:%s.s;2:x
'λx.apply(implies[or[size3,implies[and[apply(size-geq,iota(filter(filter(filter(x.s, or[circle,yellow]), not[triangle]), yellow))),size2],nor[triangle,yellow]]],circle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:or[%s,%s];4:size3;4:implies[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:yellow;4:not[%s];4:triangle;4:yellow;4:size2;4:nor[%s,%s];4:triangle;4:yellow;4:circle;1:%s.o;2:x
'λx.apply(and[and[yellow,size1],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:size1;4:size1;1:%s.o;2:x
'λx.apply(not[or[and[or[blue,nand[rectangle,not[blue]]],nand[blue,size1]],implies[not[size3],and[and[and[rectangle,circle],triangle],size3]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:blue;4:nand[%s,%s];4:rectangle;4:not[%s];4:blue;4:nand[%s,%s];4:blue;4:size1;4:implies[%s,%s];4:not[%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:circle;4:triangle;4:size3;1:%s.o;2:x
'λx.apply(or[and[circle,yellow],size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:circle;4:yellow;4:size3;1:%s.o;2:x
'λx.contains(iota(filter(x.s, green)), filter(filter(filter(x.s, or[size1,green]), green), and[green,green]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:green;4:green;4:and[%s,%s];4:green;4:green
'λx.forall(not[and[and[not[yellow],not[and[blue,size3]]],implies[and[triangle,size2],or[not[triangle],size3]]]],x.s)'	0:forall(%s,%s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:yellow;4:not[%s];4:and[%s,%s];4:blue;4:size3;4:implies[%s,%s];4:and[%s,%s];4:triangle;4:size2;4:or[%s,%s];4:not[%s];4:triangle;4:size3;3:%s.s;2:x
'λx.apply(or[iff[apply(size-geq,iota(filter(x.s, apply(same_shape,iota(filter(filter(x.s, size2), not[nor[size2,size2]])))))),nor[triangle,circle]],or[size1,rectangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:iff[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:not[%s];4:nor[%s,%s];4:size2;4:size2;4:nor[%s,%s];4:triangle;4:circle;4:or[%s,%s];4:size1;4:rectangle;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(filter(filter(x.s, or[and[triangle,circle],size3]), yellow), yellow), blue))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:triangle;4:circle;4:size3;4:yellow;4:yellow;4:blue
'λx.forall(triangle,filter(filter(filter(x.s, blue), blue), rectangle))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue;4:rectangle
'λx.forall(size1,filter(x.s, nand[or[apply(same_size,iota(filter(x.s, not[green]))),and[or[yellow,triangle],green]],triangle]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:and[%s,%s];4:or[%s,%s];4:yellow;4:triangle;4:green;4:triangle
'λx.contains(x.o, filter(x.s, or[blue,and[blue,yellow]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:and[%s,%s];4:blue;4:yellow
'λx.exists(or[not[and[triangle,implies[size2,triangle]]],nor[circle,and[apply(same_color,iota(x.s)),or[size3,or[and[and[not[iff[circle,size3]],circle],blue],circle]]]]], filter(x.s, size3))'	0:exists(%s, %s);4:or[%s,%s];4:not[%s];4:and[%s,%s];4:triangle;4:implies[%s,%s];4:size2;4:triangle;4:nor[%s,%s];4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:iff[%s,%s];4:circle;4:size3;4:circle;4:blue;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(nand[and[apply(size-geq,iota(x.s)),green],green],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:green;4:green;1:%s.o;2:x
'λx.exists(yellow, filter(x.s, yellow))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.contains(x.o, filter(filter(x.s, circle), and[size2,circle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:size2;4:circle
'λx.apply(yellow,iota(filter(x.s, and[apply(size-lt,x.o),triangle])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:triangle
'λx.apply(nor[blue,yellow],iota(filter(x.s, not[triangle])))'	0:apply(%s,%s);4:nor[%s,%s];4:blue;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.apply(nor[blue,size2],iota(filter(filter(filter(x.s, circle), rectangle), rectangle)))'	0:apply(%s,%s);4:nor[%s,%s];4:blue;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle;4:rectangle
'λx.empty(filter(filter(filter(filter(x.s, blue), and[and[nand[and[nand[size1,rectangle],size1],triangle],and[size2,circle]],and[size3,or[triangle,green]]]), and[size3,size2]), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:size1;4:rectangle;4:size1;4:triangle;4:and[%s,%s];4:size2;4:circle;4:and[%s,%s];4:size3;4:or[%s,%s];4:triangle;4:green;4:and[%s,%s];4:size3;4:size2;4:blue
'λx.apply(not[size3],iota(filter(filter(filter(x.s, circle), yellow), not[size2])))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow;4:not[%s];4:size2
'λx.apply(nor[blue,triangle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:blue;4:triangle;1:%s.o;2:x
'λx.exists(green, filter(x.s, apply(size-gt,iota(x.s))))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[and[triangle,nor[not[size3],size1]],nand[size2,size3]],iota(filter(x.s, and[size2,circle])))'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:triangle;4:nor[%s,%s];4:not[%s];4:size3;4:size1;4:nand[%s,%s];4:size2;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:circle
'λx.apply(iff[not[rectangle],or[rectangle,or[apply(same_color,x.o),circle]]],iota(filter(x.s, apply(size-leq,iota(x.s)))))'	0:apply(%s,%s);4:iff[%s,%s];4:not[%s];4:rectangle;4:or[%s,%s];4:rectangle;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x
'λx.apply(not[apply(size-leq,x.o)],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:%s.o;2:x
'λx.forall(or[rectangle,size2],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:rectangle;4:size2;3:%s.s;2:x
'λx.contains(iota(filter(x.s, rectangle)), filter(x.s, yellow))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.empty(filter(filter(filter(x.s, blue), yellow), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow;4:green
'λx.apply(and[not[yellow],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:yellow;4:size1;1:%s.o;2:x
'λx.apply(and[triangle,apply(same_shape,iota(x.s))],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[rectangle,and[not[yellow],and[rectangle,and[size2,green]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:not[%s];4:yellow;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:size2;4:green;1:%s.o;2:x
'λx.forall(blue,filter(filter(x.s, blue), circle))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle
'λx.apply(yellow,iota(filter(filter(x.s, triangle), rectangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle
'λx.exists(and[yellow,size2], filter(filter(x.s, size1), nor[size3,or[or[triangle,blue],size3]]))'	0:exists(%s, %s);4:and[%s,%s];4:yellow;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:nor[%s,%s];4:size3;4:or[%s,%s];4:or[%s,%s];4:triangle;4:blue;4:size3
'λx.forall(apply(size-geq,x.o),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:size-geq;1:%s.o;2:x;3:%s.s;2:x
'λx.exists(nor[and[yellow,or[apply(same_size,iota(filter(x.s, apply(same_size,iota(filter(filter(x.s, or[or[size1,triangle],nand[size2,rectangle]]), size3)))))),size3]],size1], filter(filter(x.s, size2), and[circle,size2]))'	0:exists(%s, %s);4:nor[%s,%s];4:and[%s,%s];4:yellow;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:size1;4:triangle;4:nand[%s,%s];4:size2;4:rectangle;4:size3;4:size3;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:circle;4:size2
'λx.apply(green,iota(filter(filter(x.s, nand[apply(size-gt,x.o),triangle]), size1)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:triangle;4:size1
'λx.exists(blue, filter(filter(filter(filter(x.s, and[blue,and[yellow,not[rectangle]]]), or[apply(same_color,x.o),rectangle]), blue), iff[size3,apply(same_color,iota(x.s))]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:and[%s,%s];4:yellow;4:not[%s];4:rectangle;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle;4:blue;4:iff[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(x.s, yellow), and[size3,and[not[and[or[and[rectangle,size1],or[and[triangle,circle],size3]],iff[triangle,rectangle]]],yellow]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:size3;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:rectangle;4:size1;4:or[%s,%s];4:and[%s,%s];4:triangle;4:circle;4:size3;4:iff[%s,%s];4:triangle;4:rectangle;4:yellow
'λx.forall(or[size2,apply(same_shape,iota(x.s))],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(and[or[implies[size2,size3],size1],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:size2;4:size3;4:size1;4:blue;1:%s.o;2:x
'λx.apply(iff[and[and[size3,nand[apply(same_size,x.o),size3]],size1],circle],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:nand[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;4:size1;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, or[triangle,size1]), blue)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:size1;4:blue
'λx.apply(apply(same_color,iota(filter(filter(filter(filter(filter(x.s, yellow), size2), size3), green), or[size3,size3]))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2;4:size3;4:green;4:or[%s,%s];4:size3;4:size3;1:iota(%s);3:%s.s;2:x
'λx.exists(not[yellow], x.s)'	0:exists(%s, %s);4:not[%s];4:yellow;3:%s.s;2:x
'λx.apply(apply(same_color,iota(filter(filter(filter(x.s, implies[and[yellow,not[yellow]],or[or[triangle,or[yellow,triangle]],circle]]), size1), yellow))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:and[%s,%s];4:yellow;4:not[%s];4:yellow;4:or[%s,%s];4:or[%s,%s];4:triangle;4:or[%s,%s];4:yellow;4:triangle;4:circle;4:size1;4:yellow;1:%s.o;2:x
'λx.apply(not[apply(same_shape,x.o)],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.forall(and[blue,implies[not[iff[yellow,green]],not[apply(same_color,iota(filter(x.s, or[not[rectangle],circle])))]]],filter(x.s, blue))'	0:forall(%s,%s);4:and[%s,%s];4:blue;4:implies[%s,%s];4:not[%s];4:iff[%s,%s];4:yellow;4:green;4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:rectangle;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(iff[circle,or[or[blue,and[rectangle,rectangle]],size2]],iota(filter(x.s, not[triangle])))'	0:apply(%s,%s);4:iff[%s,%s];4:circle;4:or[%s,%s];4:or[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:rectangle;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.apply(green,iota(filter(filter(filter(x.s, circle), size3), green)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3;4:green
'λx.apply(and[or[not[yellow],size2],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:not[%s];4:yellow;4:size2;4:rectangle;1:%s.o;2:x
'λx.empty(filter(filter(x.s, iff[not[or[size1,and[blue,and[rectangle,and[yellow,apply(size-leq,iota(x.s))]]]]],green]), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:not[%s];4:or[%s,%s];4:size1;4:and[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:yellow;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:green;4:size2
'λx.exists(yellow, filter(x.s, blue))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(not[not[blue]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(not[size3],iota(filter(filter(filter(filter(x.s, size3), and[size1,apply(size-leq,iota(filter(filter(filter(filter(filter(x.s, nor[apply(same_shape,x.o),nand[implies[circle,and[circle,and[triangle,green]]],triangle]]), green), size2), and[yellow,size2]), size1)))]), and[size2,or[or[rectangle,green],apply(size-lt,x.o)]]), size2)))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:size1;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:nand[%s,%s];4:implies[%s,%s];4:circle;4:and[%s,%s];4:circle;4:and[%s,%s];4:triangle;4:green;4:triangle;4:green;4:size2;4:and[%s,%s];4:yellow;4:size2;4:size1;4:and[%s,%s];4:size2;4:or[%s,%s];4:or[%s,%s];4:rectangle;4:green;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:size2
'λx.forall(circle,filter(x.s, yellow))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(yellow,iota(filter(x.s, nor[or[yellow,not[and[yellow,apply(same_size,x.o)]]],and[green,apply(same_shape,iota(filter(filter(x.s, or[apply(same_color,iota(filter(filter(filter(x.s, rectangle), green), green))),size1]), blue)))]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:or[%s,%s];4:yellow;4:not[%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green;4:green;4:size1;4:blue
'λx.empty(filter(filter(filter(x.s, triangle), size3), and[or[green,nor[circle,apply(same_shape,iota(filter(filter(filter(filter(filter(filter(filter(x.s, triangle), and[apply(same_shape,x.o),or[blue,green]]), triangle), apply(size-leq,iota(filter(filter(x.s, size1), blue)))), size2), triangle), size1)))]],yellow]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3;4:and[%s,%s];4:or[%s,%s];4:green;4:nor[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:blue;4:green;4:triangle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue;4:size2;4:triangle;4:size1;4:yellow
'λx.apply(not[circle],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(implies[triangle,green],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:implies[%s,%s];4:triangle;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(not[or[circle,not[size3]]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:circle;4:not[%s];4:size3;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, size2), circle), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle;4:size3
'λx.apply(nor[and[implies[circle,green],or[and[green,size1],triangle]],not[and[triangle,size2]]],iota(filter(filter(x.s, blue), yellow)))'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:circle;4:green;4:or[%s,%s];4:and[%s,%s];4:green;4:size1;4:triangle;4:not[%s];4:and[%s,%s];4:triangle;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow
'λx.apply(and[apply(size-gt,iota(x.s)),green],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.contains(iota(filter(x.s, triangle)), filter(filter(filter(x.s, green), apply(same_size,x.o)), size1))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1
'λx.exists(yellow, filter(x.s, and[size1,green]))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:green
'λx.apply(nand[and[green,apply(same_color,x.o)],triangle],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.exists(and[blue,and[iff[nor[yellow,green],blue],circle]], filter(filter(filter(filter(x.s, size1), or[size2,triangle]), size2), rectangle))'	0:exists(%s, %s);4:and[%s,%s];4:blue;4:and[%s,%s];4:iff[%s,%s];4:nor[%s,%s];4:yellow;4:green;4:blue;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:or[%s,%s];4:size2;4:triangle;4:size2;4:rectangle
'λx.exists(iff[and[not[blue],yellow],circle], filter(x.s, size1))'	0:exists(%s, %s);4:iff[%s,%s];4:and[%s,%s];4:not[%s];4:blue;4:yellow;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(and[blue,size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[blue,size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[blue,size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(x.s, yellow), apply(same_color,iota(filter(filter(filter(x.s, green), rectangle), blue))))))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle;4:blue
'λx.apply(apply(same_shape,iota(filter(filter(x.s, triangle), triangle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:triangle;1:%s.o;2:x
'λx.forall(nor[yellow,size2],x.s)'	0:forall(%s,%s);4:nor[%s,%s];4:yellow;4:size2;3:%s.s;2:x
'λx.apply(not[and[not[size3],size2]],iota(filter(filter(x.s, size1), blue)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:size3;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue
'λx.apply(or[size3,not[green]],iota(filter(x.s, green)))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(apply(same_shape,iota(filter(x.s, size2))),iota(filter(filter(x.s, size1), triangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle
'λx.apply(size1,iota(filter(filter(x.s, and[yellow,not[green]]), triangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:not[%s];4:green;4:triangle
'λx.apply(size1,iota(filter(filter(x.s, or[size1,circle]), size3)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:circle;4:size3
'λx.apply(and[size3,green],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(rectangle,iota(filter(x.s, nor[size2,not[circle]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size2;4:not[%s];4:circle
'λx.forall(triangle,filter(filter(x.s, blue), rectangle))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle
'λx.forall(nor[green,and[or[size1,or[size1,or[nand[triangle,size2],apply(same_color,x.o)]]],circle]],x.s)'	0:forall(%s,%s);4:nor[%s,%s];4:green;4:and[%s,%s];4:or[%s,%s];4:size1;4:or[%s,%s];4:size1;4:or[%s,%s];4:nand[%s,%s];4:triangle;4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;3:%s.s;2:x
'λx.apply(and[blue,and[size2,green]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:size2;4:green;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, green), iff[size2,and[apply(same_size,iota(filter(filter(filter(filter(x.s, blue), apply(same_color,x.o)), not[yellow]), size2))),size3]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:iff[%s,%s];4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:yellow;4:size2;4:size3
'λx.empty(filter(filter(x.s, implies[or[blue,rectangle],and[rectangle,triangle]]), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:or[%s,%s];4:blue;4:rectangle;4:and[%s,%s];4:rectangle;4:triangle;4:rectangle
'λx.empty(filter(x.s, yellow))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.exists(iff[size1,not[yellow]], filter(x.s, green))'	0:exists(%s, %s);4:iff[%s,%s];4:size1;4:not[%s];4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(not[size3],x.o)'	0:apply(%s,%s);4:not[%s];4:size3;1:%s.o;2:x
'λx.apply(not[size1],x.o)'	0:apply(%s,%s);4:not[%s];4:size1;1:%s.o;2:x
'λx.apply(not[size2],x.o)'	0:apply(%s,%s);4:not[%s];4:size2;1:%s.o;2:x
'λx.apply(apply(size-gt,iota(x.s)),iota(filter(filter(filter(x.s, implies[size3,not[green]]), and[not[circle],green]), and[blue,green])))'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size3;4:not[%s];4:green;4:and[%s,%s];4:not[%s];4:circle;4:green;4:and[%s,%s];4:blue;4:green
'λx.apply(nor[and[not[size1],triangle],circle],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:not[%s];4:size1;4:triangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(x.s, not[not[green]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:green
'λx.apply(and[and[triangle,circle],apply(same_shape,x.o)],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[green,size2],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:green;4:size2;1:%s.o;2:x
'λx.forall(and[apply(size-geq,iota(x.s)),not[or[rectangle,triangle]]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:rectangle;4:triangle;3:%s.s;2:x
'λx.apply(and[and[circle,size1],nand[and[apply(size-leq,x.o),apply(size-geq,iota(filter(x.s, yellow)))],rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:size1;4:nand[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle;1:%s.o;2:x
'λx.apply(yellow,x.o)'	0:apply(%s,%s);4:yellow;1:%s.o;2:x
'λx.apply(and[triangle,or[or[size3,and[blue,yellow]],and[and[or[apply(same_shape,x.o),or[circle,size1]],size2],triangle]]],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:or[%s,%s];4:or[%s,%s];4:size3;4:and[%s,%s];4:blue;4:yellow;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:circle;4:size1;4:size2;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(rectangle,iota(filter(filter(x.s, blue), yellow)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow
'λx.apply(and[nor[green,triangle],blue],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:green;4:triangle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(circle,iota(filter(filter(filter(filter(filter(filter(filter(x.s, yellow), triangle), triangle), blue), implies[circle,rectangle]), and[implies[size2,yellow],circle]), green)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle;4:triangle;4:blue;4:implies[%s,%s];4:circle;4:rectangle;4:and[%s,%s];4:implies[%s,%s];4:size2;4:yellow;4:circle;4:green
'λx.apply(rectangle,iota(filter(filter(filter(x.s, and[green,size1]), triangle), not[circle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:size1;4:triangle;4:not[%s];4:circle
'λx.exists(rectangle, filter(x.s, apply(same_color,x.o)))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(not[implies[size1,size2]],iota(filter(x.s, iff[blue,size1])))'	0:apply(%s,%s);4:not[%s];4:implies[%s,%s];4:size1;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:blue;4:size1
'λx.empty(filter(x.s, and[and[size1,triangle],green]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size1;4:triangle;4:green
'λx.apply(not[apply(same_size,x.o)],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(green,iota(filter(filter(filter(x.s, rectangle), triangle), and[circle,and[not[triangle],or[implies[circle,yellow],size3]]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle;4:and[%s,%s];4:circle;4:and[%s,%s];4:not[%s];4:triangle;4:or[%s,%s];4:implies[%s,%s];4:circle;4:yellow;4:size3
'λx.forall(blue,filter(x.s, apply(same_color,x.o)))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.exists(or[size1,size3], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:size1;4:size3;3:%s.s;2:x
'λx.exists(triangle, filter(x.s, apply(same_shape,x.o)))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(and[green,or[apply(size-geq,iota(filter(filter(x.s, yellow), circle))),triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle;4:triangle;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, circle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.forall(and[blue,yellow],filter(x.s, and[circle,and[not[and[apply(same_color,iota(filter(filter(x.s, and[size2,rectangle]), size2))),yellow]],blue]]))'	0:forall(%s,%s);4:and[%s,%s];4:blue;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:rectangle;4:size2;4:yellow;4:blue
'λx.apply(or[not[circle],apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:circle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.exists(yellow, filter(x.s, or[yellow,rectangle]))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:rectangle
'λx.exists(rectangle, filter(filter(filter(filter(filter(filter(x.s, size3), size2), size1), size2), apply(size-gt,iota(x.s))), size3))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2;4:size1;4:size2;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:size3
'λx.apply(size3,iota(filter(filter(filter(x.s, green), triangle), rectangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:triangle;4:rectangle
'λx.apply(and[apply(size-leq,x.o),nand[iff[nor[apply(same_shape,iota(filter(x.s, yellow))),blue],blue],size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:nand[%s,%s];4:iff[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:blue;4:blue;4:size3;1:%s.o;2:x
'λx.apply(not[and[and[blue,not[green]],circle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:not[%s];4:green;4:circle;1:%s.o;2:x
'λx.exists(rectangle, filter(filter(filter(filter(filter(x.s, not[yellow]), or[apply(same_shape,iota(filter(filter(x.s, and[not[size3],green]), nand[yellow,size2]))),nor[yellow,not[not[size3]]]]), size3), green), and[apply(same_size,iota(filter(x.s, size3))),size2]))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:size3;4:green;4:nand[%s,%s];4:yellow;4:size2;4:nor[%s,%s];4:yellow;4:not[%s];4:not[%s];4:size3;4:size3;4:green;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2
'λx.apply(not[blue],iota(filter(x.s, nor[and[blue,blue],nand[circle,size1]])))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:and[%s,%s];4:blue;4:blue;4:nand[%s,%s];4:circle;4:size1
'λx.apply(nand[size3,blue],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:nand[%s,%s];4:size3;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.exists(blue, filter(x.s, yellow))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.contains(iota(filter(filter(x.s, blue), rectangle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle;3:%s.s;2:x
'λx.apply(and[or[size2,nor[and[or[triangle,size1],apply(size-geq,x.o)],not[size2]]],green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size2;4:nor[%s,%s];4:and[%s,%s];4:or[%s,%s];4:triangle;4:size1;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:not[%s];4:size2;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[circle,rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[apply(same_shape,iota(filter(filter(x.s, yellow), size2)))],iota(filter(filter(x.s, size1), and[size2,or[green,yellow]])))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:size2;4:or[%s,%s];4:green;4:yellow
'λx.apply(iff[triangle,rectangle],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:triangle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[size2,and[or[green,rectangle],yellow]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size2;4:and[%s,%s];4:or[%s,%s];4:green;4:rectangle;4:yellow;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(filter(x.s, and[and[or[and[and[apply(size-lt,iota(x.s)),and[size2,size2]],yellow],size3],or[triangle,size3]],green]), rectangle), green)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:size2;4:yellow;4:size3;4:or[%s,%s];4:triangle;4:size3;4:green;4:rectangle;4:green
'λx.apply(and[circle,or[size2,size2]],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:or[%s,%s];4:size2;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(apply(size-lt,iota(filter(x.s, and[size1,rectangle]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:rectangle;1:%s.o;2:x
'λx.empty(filter(x.s, circle))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(implies[or[size2,size2],size1],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:or[%s,%s];4:size2;4:size2;4:size1;1:iota(%s);3:%s.s;2:x
'λx.forall(size2,filter(filter(filter(x.s, blue), apply(same_color,x.o)), rectangle))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle
'λx.apply(implies[apply(same_color,x.o),blue],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(x.s, and[or[apply(same_size,iota(x.s)),rectangle],size3]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:rectangle;4:size3
'λx.empty(filter(x.s, and[and[size1,or[rectangle,size2]],yellow]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:rectangle;4:size2;4:yellow
'λx.apply(or[yellow,or[iff[blue,green],rectangle]],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:or[%s,%s];4:iff[%s,%s];4:blue;4:green;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(circle,iota(filter(filter(filter(filter(x.s, circle), size3), size3), and[and[and[green,rectangle],yellow],circle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3;4:size3;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:rectangle;4:yellow;4:circle
'λx.apply(nor[size1,triangle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size1;4:triangle;1:%s.o;2:x
'λx.apply(or[apply(size-geq,x.o),and[blue,or[and[iff[and[yellow,apply(same_size,x.o)],size3],blue],blue]]],iota(filter(x.s, and[green,and[size1,or[implies[or[green,apply(same_size,x.o)],blue],and[blue,size2]]]])))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:and[%s,%s];4:blue;4:or[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;4:blue;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:and[%s,%s];4:size1;4:or[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;4:and[%s,%s];4:blue;4:size2
'λx.apply(or[apply(size-lt,iota(filter(x.s, size2))),not[triangle]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:not[%s];4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_shape,iota(filter(x.s, nand[yellow,not[implies[size1,and[rectangle,or[circle,size3]]]]]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:yellow;4:not[%s];4:implies[%s,%s];4:size1;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:circle;4:size3;1:%s.o;2:x
'λx.apply(and[implies[triangle,and[size1,not[or[and[size2,rectangle],apply(size-lt,iota(x.s))]]]],nor[yellow,rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:triangle;4:and[%s,%s];4:size1;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:size2;4:rectangle;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:nor[%s,%s];4:yellow;4:rectangle;1:%s.o;2:x
'λx.apply(or[size1,size2],iota(filter(x.s, or[green,not[green]])))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:not[%s];4:green
'λx.contains(iota(filter(filter(x.s, green), size3)), filter(x.s, size1))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(triangle,iota(filter(filter(filter(x.s, rectangle), or[and[apply(same_size,x.o),or[circle,rectangle]],size1]), and[size2,circle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:circle;4:rectangle;4:size1;4:and[%s,%s];4:size2;4:circle
'λx.forall(circle,filter(filter(x.s, green), apply(size-lt,x.o)))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, green), rectangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle
'λx.exists(or[size1,apply(size-geq,iota(filter(x.s, size2)))], filter(filter(filter(x.s, apply(same_shape,iota(filter(filter(x.s, circle), size2)))), and[and[rectangle,blue],and[and[yellow,size2],and[rectangle,not[rectangle]]]]), not[apply(same_color,iota(x.s))]))'	0:exists(%s, %s);4:or[%s,%s];4:size1;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size2;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:blue;4:and[%s,%s];4:and[%s,%s];4:yellow;4:size2;4:and[%s,%s];4:rectangle;4:not[%s];4:rectangle;4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(x.s, blue), and[yellow,and[yellow,rectangle]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:yellow;4:and[%s,%s];4:yellow;4:rectangle
'λx.apply(and[green,implies[or[size2,apply(same_size,iota(filter(filter(filter(x.s, size1), size1), size1)))],size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:implies[%s,%s];4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1;4:size1;4:size2;1:%s.o;2:x
'λx.apply(size2,iota(filter(x.s, apply(size-lt,x.o))))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(x.s, and[green,size2]), green)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:size2;4:green
'λx.apply(not[nand[and[circle,circle],rectangle]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:nand[%s,%s];4:and[%s,%s];4:circle;4:circle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[green,size1],iota(filter(filter(x.s, rectangle), green)))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green
'λx.apply(and[yellow,or[or[nor[triangle,apply(same_size,x.o)],size2],yellow]],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:or[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(and[yellow,or[and[size2,green],blue]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:or[%s,%s];4:and[%s,%s];4:size2;4:green;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(x.s, green), triangle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:triangle
'λx.apply(and[blue,size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:size2;1:%s.o;2:x
'λx.apply(and[blue,size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:size1;1:%s.o;2:x
'λx.apply(and[blue,size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:size3;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(x.s, and[triangle,and[rectangle,and[triangle,size1]]]), not[size1]), blue)), filter(filter(filter(filter(filter(filter(x.s, and[circle,apply(same_size,x.o)]), green), green), or[rectangle,or[and[not[size2],yellow],nand[apply(size-leq,x.o),size3]]]), triangle), circle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:triangle;4:size1;4:not[%s];4:size1;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;4:green;4:or[%s,%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:size2;4:yellow;4:nand[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size3;4:triangle;4:circle
'λx.apply(blue,iota(filter(filter(x.s, blue), size2)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2
'λx.apply(not[and[size3,yellow]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size3;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, and[and[size2,or[triangle,rectangle]],size1]), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size2;4:or[%s,%s];4:triangle;4:rectangle;4:size1;4:rectangle
'λx.empty(filter(x.s, or[green,not[green]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:not[%s];4:green
'λx.contains(iota(filter(x.s, and[nor[triangle,rectangle],yellow])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:triangle;4:rectangle;4:yellow;3:%s.s;2:x
'λx.apply(not[nor[size2,blue]],x.o)'	0:apply(%s,%s);4:not[%s];4:nor[%s,%s];4:size2;4:blue;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(filter(x.s, rectangle), size3), yellow)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3;4:yellow
'λx.apply(or[rectangle,or[size3,and[size2,apply(same_size,iota(filter(filter(x.s, not[circle]), triangle)))]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:or[%s,%s];4:size3;4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:triangle;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, and[rectangle,triangle]), size1), or[not[not[apply(same_size,x.o)]],or[or[size3,and[green,blue]],green]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:triangle;4:size1;4:or[%s,%s];4:not[%s];4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:or[%s,%s];4:size3;4:and[%s,%s];4:green;4:blue;4:green
'λx.apply(yellow,iota(filter(filter(filter(filter(x.s, rectangle), and[apply(size-geq,x.o),not[nand[green,rectangle]]]), apply(size-leq,iota(x.s))), and[size1,and[blue,or[blue,and[blue,and[rectangle,size2]]]]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:not[%s];4:nand[%s,%s];4:green;4:rectangle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:and[%s,%s];4:blue;4:or[%s,%s];4:blue;4:and[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:size2
'λx.apply(size3,iota(filter(filter(filter(filter(filter(x.s, size2), circle), blue), yellow), apply(same_shape,x.o))))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle;4:blue;4:yellow;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(and[not[and[iff[or[blue,yellow],and[size2,blue]],green]],implies[green,or[and[circle,and[and[and[apply(size-gt,iota(x.s)),size3],and[size3,blue]],yellow]],rectangle]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:blue;4:yellow;4:and[%s,%s];4:size2;4:blue;4:green;4:implies[%s,%s];4:green;4:or[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:size3;4:blue;4:yellow;4:rectangle;1:%s.o;2:x
'λx.forall(or[and[size3,circle],and[not[rectangle],rectangle]],filter(x.s, size1))'	0:forall(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size3;4:circle;4:and[%s,%s];4:not[%s];4:rectangle;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(not[rectangle],iota(filter(filter(x.s, size2), yellow)))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:yellow
'λx.forall(nor[yellow,yellow],x.s)'	0:forall(%s,%s);4:nor[%s,%s];4:yellow;4:yellow;3:%s.s;2:x
'λx.apply(not[not[and[apply(size-gt,x.o),rectangle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:rectangle;1:%s.o;2:x
'λx.apply(nor[size2,triangle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size2;4:triangle;1:%s.o;2:x
'λx.apply(or[size3,blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:blue;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(filter(filter(filter(filter(x.s, triangle), triangle), size1), triangle), and[and[triangle,circle],apply(same_shape,x.o)]), and[size2,yellow])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:triangle;4:size1;4:triangle;4:and[%s,%s];4:and[%s,%s];4:triangle;4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:size2;4:yellow
'λx.apply(and[or[circle,green],circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:circle;4:green;4:circle;1:iota(%s);3:%s.s;2:x
'λx.exists(circle, filter(x.s, and[nand[rectangle,circle],and[iff[triangle,size1],or[implies[size1,size2],circle]]]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nand[%s,%s];4:rectangle;4:circle;4:and[%s,%s];4:iff[%s,%s];4:triangle;4:size1;4:or[%s,%s];4:implies[%s,%s];4:size1;4:size2;4:circle
'λx.apply(size1,iota(filter(x.s, apply(same_shape,iota(filter(filter(x.s, rectangle), apply(same_size,x.o)))))))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(implies[or[size3,apply(same_size,x.o)],nand[not[yellow],green]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:nand[%s,%s];4:not[%s];4:yellow;4:green;1:%s.o;2:x
'λx.apply(or[rectangle,green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:green;1:%s.o;2:x
'λx.apply(and[and[rectangle,size2],triangle],iota(filter(filter(x.s, size3), size3)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size2;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3
'λx.apply(not[and[green,circle]],iota(filter(filter(filter(filter(x.s, green), circle), not[apply(size-geq,x.o)]), or[or[apply(same_color,iota(x.s)),not[size3]],and[and[blue,and[rectangle,green]],green]])))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:green;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:circle;4:not[%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:not[%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:green;4:green
'λx.apply(implies[and[and[and[size3,rectangle],not[size3]],apply(same_shape,iota(x.s))],size2],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:rectangle;4:not[%s];4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(not[nor[size3,blue]],x.o)'	0:apply(%s,%s);4:not[%s];4:nor[%s,%s];4:size3;4:blue;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, blue), and[green,blue])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:green;4:blue
'λx.apply(circle,iota(filter(x.s, or[rectangle,size1])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:size1
'λx.apply(size1,iota(filter(filter(filter(x.s, rectangle), or[yellow,not[size3]]), apply(size-geq,iota(filter(x.s, blue))))))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:or[%s,%s];4:yellow;4:not[%s];4:size3;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.exists(triangle, filter(filter(filter(filter(x.s, iff[and[triangle,and[not[circle],size3]],size1]), yellow), yellow), green))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:not[%s];4:circle;4:size3;4:size1;4:yellow;4:yellow;4:green
'λx.apply(size2,iota(filter(filter(filter(x.s, and[rectangle,blue]), yellow), not[circle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:blue;4:yellow;4:not[%s];4:circle
'λx.apply(implies[size1,and[blue,size2]],iota(filter(x.s, and[not[rectangle],rectangle])))'	0:apply(%s,%s);4:implies[%s,%s];4:size1;4:and[%s,%s];4:blue;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:rectangle;4:rectangle
'λx.apply(not[apply(same_size,x.o)],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[and[apply(size-gt,x.o),blue],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:blue;4:size1;1:%s.o;2:x
'λx.apply(implies[size2,and[size3,or[and[size3,size3],and[not[size3],or[not[and[rectangle,not[circle]]],and[size1,size3]]]]]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size2;4:and[%s,%s];4:size3;4:or[%s,%s];4:and[%s,%s];4:size3;4:size3;4:and[%s,%s];4:not[%s];4:size3;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:rectangle;4:not[%s];4:circle;4:and[%s,%s];4:size1;4:size3;1:%s.o;2:x
'λx.apply(or[iff[yellow,not[rectangle]],green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:iff[%s,%s];4:yellow;4:not[%s];4:rectangle;4:green;1:%s.o;2:x
'λx.apply(not[and[not[triangle],and[not[yellow],green]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:triangle;4:and[%s,%s];4:not[%s];4:yellow;4:green;1:%s.o;2:x
'λx.empty(filter(filter(x.s, size2), and[or[rectangle,or[size2,not[green]]],not[implies[green,size3]]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:or[%s,%s];4:size2;4:not[%s];4:green;4:not[%s];4:implies[%s,%s];4:green;4:size3
'λx.contains(x.o, filter(filter(x.s, size2), size3))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3
'λx.contains(x.o, filter(filter(x.s, size2), size2))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2
'λx.contains(x.o, filter(filter(x.s, size3), size2))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2
'λx.contains(x.o, filter(filter(x.s, size1), size2))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2
'λx.contains(x.o, filter(filter(x.s, size1), size3))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size3
'λx.apply(size1,iota(filter(x.s, and[or[blue,green],size3])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:blue;4:green;4:size3
'λx.exists(or[apply(size-leq,iota(filter(x.s, triangle))),nand[triangle,apply(size-lt,iota(filter(filter(filter(x.s, size2), apply(same_shape,x.o)), rectangle)))]], filter(filter(filter(filter(x.s, green), yellow), triangle), apply(same_shape,x.o)))'	0:exists(%s, %s);4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:nand[%s,%s];4:triangle;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow;4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(x.s, triangle), size2), not[rectangle])), filter(x.s, and[size1,circle]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2;4:not[%s];4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:circle
'λx.apply(green,iota(filter(x.s, blue)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(green,iota(filter(x.s, nor[and[or[size1,size2],or[and[yellow,size2],and[not[blue],nor[size1,nor[size3,or[or[triangle,blue],size3]]]]]],blue])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size1;4:size2;4:or[%s,%s];4:and[%s,%s];4:yellow;4:size2;4:and[%s,%s];4:not[%s];4:blue;4:nor[%s,%s];4:size1;4:nor[%s,%s];4:size3;4:or[%s,%s];4:or[%s,%s];4:triangle;4:blue;4:size3;4:blue
'λx.apply(apply(same_color,iota(filter(x.s, size3))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;1:%s.o;2:x
'λx.apply(apply(same_color,iota(filter(x.s, size2))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;1:%s.o;2:x
'λx.apply(apply(same_color,iota(filter(x.s, size1))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;1:%s.o;2:x
'λx.apply(and[blue,apply(same_color,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(filter(x.s, triangle), green), and[yellow,green])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green;4:and[%s,%s];4:yellow;4:green
'λx.apply(and[nor[green,size3],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:green;4:size3;4:size1;1:%s.o;2:x
'λx.exists(not[green], x.s)'	0:exists(%s, %s);4:not[%s];4:green;3:%s.s;2:x
'λx.apply(nand[size3,apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[and[or[size3,apply(same_shape,x.o)],and[circle,green]],blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:circle;4:green;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size1,apply(same_shape,iota(x.s))],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(filter(x.s, blue), and[and[size2,yellow],nand[nor[circle,and[not[not[circle]],apply(same_shape,x.o)]],and[nand[green,triangle],apply(same_color,iota(filter(filter(x.s, iff[size3,apply(same_color,iota(filter(filter(filter(filter(x.s, and[apply(same_shape,x.o),green]), apply(size-leq,iota(x.s))), not[blue]), circle)))]), yellow)))]]]), size2)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:and[%s,%s];4:size2;4:yellow;4:nand[%s,%s];4:nor[%s,%s];4:circle;4:and[%s,%s];4:not[%s];4:not[%s];4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:nand[%s,%s];4:green;4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:not[%s];4:blue;4:circle;4:yellow;4:size2
'λx.apply(and[size2,size3],iota(filter(x.s, apply(same_size,x.o))))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(and[rectangle,circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_color,iota(filter(filter(x.s, iff[rectangle,size1]), or[triangle,size3]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:rectangle;4:size1;4:or[%s,%s];4:triangle;4:size3;1:%s.o;2:x
'λx.apply(and[green,green],iota(filter(filter(filter(filter(x.s, not[size3]), apply(same_color,iota(filter(filter(filter(x.s, rectangle), size1), yellow)))), not[not[green]]), not[yellow])))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1;4:yellow;4:not[%s];4:not[%s];4:green;4:not[%s];4:yellow
'λx.forall(yellow,filter(filter(x.s, size2), green))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green
'λx.apply(not[not[circle]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:circle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, not[green])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;3:%s.s;2:x
'λx.apply(not[and[green,apply(same_size,iota(x.s))]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(nand[and[size1,implies[apply(same_color,iota(filter(x.s, apply(same_shape,x.o)))),circle]],yellow],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:size1;4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.forall(iff[circle,or[and[triangle,size3],size1]],filter(filter(filter(x.s, triangle), nand[circle,yellow]), size1))'	0:forall(%s,%s);4:iff[%s,%s];4:circle;4:or[%s,%s];4:and[%s,%s];4:triangle;4:size3;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:nand[%s,%s];4:circle;4:yellow;4:size1
'λx.contains(x.o, x.s)'	0:contains(%s, %s);1:%s.o;2:x;3:%s.s;2:x
'λx.apply(size2,iota(filter(x.s, blue)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(size3,iota(filter(x.s, blue)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(size1,iota(filter(x.s, blue)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(size3,iota(filter(filter(filter(x.s, size1), green), and[or[iff[triangle,and[not[nor[iff[not[and[not[not[not[rectangle]]],apply(same_color,x.o)]],yellow],not[triangle]]],or[and[apply(same_size,iota(x.s)),and[circle,and[rectangle,rectangle]]],or[size2,and[rectangle,triangle]]]]],green],green])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green;4:and[%s,%s];4:or[%s,%s];4:iff[%s,%s];4:triangle;4:and[%s,%s];4:not[%s];4:nor[%s,%s];4:iff[%s,%s];4:not[%s];4:and[%s,%s];4:not[%s];4:not[%s];4:not[%s];4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;4:not[%s];4:triangle;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:and[%s,%s];4:rectangle;4:rectangle;4:or[%s,%s];4:size2;4:and[%s,%s];4:rectangle;4:triangle;4:green;4:green
'λx.exists(and[and[and[triangle,not[green]],apply(size-lt,iota(x.s))],size2], filter(filter(x.s, apply(same_shape,x.o)), yellow))'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:not[%s];4:green;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow
'λx.contains(iota(filter(filter(x.s, blue), rectangle)), filter(filter(filter(filter(x.s, green), implies[and[triangle,size3],blue]), size2), triangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:implies[%s,%s];4:and[%s,%s];4:triangle;4:size3;4:blue;4:size2;4:triangle
'λx.apply(size3,iota(filter(filter(x.s, and[apply(same_color,x.o),size1]), blue)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1;4:blue
'λx.exists(and[size3,circle], filter(x.s, apply(size-leq,x.o)))'	0:exists(%s, %s);4:and[%s,%s];4:size3;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:%s.o;2:x
'λx.apply(or[and[size1,size1],circle],iota(filter(x.s, and[apply(same_color,iota(x.s)),and[blue,yellow]])))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size1;4:size1;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:yellow
'λx.empty(filter(filter(x.s, circle), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1
'λx.apply(not[and[and[rectangle,size3],size1]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size3;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(and[nor[circle,size2],rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:circle;4:size2;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(x.s, or[not[size1],rectangle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:size1;4:rectangle
'λx.apply(rectangle,iota(filter(filter(x.s, iff[and[and[apply(same_shape,iota(filter(x.s, blue))),size3],green],size1]), triangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3;4:green;4:size1;4:triangle
'λx.apply(yellow,iota(filter(filter(filter(x.s, apply(same_color,iota(filter(filter(x.s, rectangle), rectangle)))), blue), rectangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle;4:blue;4:rectangle
'λx.apply(nand[triangle,implies[and[circle,and[size3,blue]],blue]],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:implies[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:size3;4:blue;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(x.s, not[or[rectangle,blue]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:rectangle;4:blue
'λx.apply(and[and[triangle,rectangle],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:rectangle;4:triangle;1:%s.o;2:x
'λx.empty(filter(filter(x.s, or[or[and[blue,and[triangle,size3]],not[size3]],and[and[blue,and[rectangle,green]],green]]), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:triangle;4:size3;4:not[%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:green;4:green;4:yellow
'λx.apply(and[size2,nand[yellow,size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:nand[%s,%s];4:yellow;4:size2;1:%s.o;2:x
'λx.apply(and[not[yellow],and[circle,rectangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:yellow;4:and[%s,%s];4:circle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, apply(same_size,x.o)), and[green,green]), not[apply(same_color,iota(x.s))]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:green;4:green;4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(size-lt,x.o),iota(filter(filter(x.s, rectangle), rectangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle
'λx.apply(green,iota(filter(filter(filter(filter(filter(filter(x.s, yellow), size2), green), or[yellow,circle]), not[yellow]), size2)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2;4:green;4:or[%s,%s];4:yellow;4:circle;4:not[%s];4:yellow;4:size2
'λx.forall(green,filter(x.s, apply(same_shape,iota(filter(filter(filter(x.s, circle), and[yellow,iff[and[apply(same_color,iota(x.s)),or[size1,rectangle]],or[yellow,circle]]]), nand[nor[or[size2,size2],rectangle],blue])))))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:yellow;4:iff[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:rectangle;4:or[%s,%s];4:yellow;4:circle;4:nand[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:size2;4:size2;4:rectangle;4:blue
'λx.apply(not[and[blue,and[and[green,triangle],apply(size-geq,x.o)]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:green;4:triangle;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, implies[apply(size-leq,iota(filter(filter(filter(filter(filter(x.s, green), rectangle), rectangle), iff[and[implies[nor[size1,implies[blue,size1]],size3],iff[rectangle,circle]],and[yellow,blue]]), green))),implies[rectangle,yellow]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle;4:rectangle;4:iff[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:nor[%s,%s];4:size1;4:implies[%s,%s];4:blue;4:size1;4:size3;4:iff[%s,%s];4:rectangle;4:circle;4:and[%s,%s];4:yellow;4:blue;4:green;4:implies[%s,%s];4:rectangle;4:yellow
'λx.apply(size2,iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(size3,iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(size1,iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.exists(triangle, filter(x.s, apply(same_shape,iota(filter(filter(x.s, yellow), not[apply(size-leq,iota(filter(x.s, blue)))])))))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(not[iff[blue,not[size1]]],x.o)'	0:apply(%s,%s);4:not[%s];4:iff[%s,%s];4:blue;4:not[%s];4:size1;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, circle), size1)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1
'λx.apply(not[iff[rectangle,or[size2,and[triangle,and[nor[size2,nand[circle,apply(same_shape,iota(x.s))]],yellow]]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:iff[%s,%s];4:rectangle;4:or[%s,%s];4:size2;4:and[%s,%s];4:triangle;4:and[%s,%s];4:nor[%s,%s];4:size2;4:nand[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:yellow;1:%s.o;2:x
'λx.apply(nor[and[size3,and[triangle,apply(same_color,x.o)]],blue],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, implies[and[nand[and[or[rectangle,rectangle],size3],and[green,or[circle,nand[and[size3,size1],size2]]]],yellow],rectangle])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:or[%s,%s];4:rectangle;4:rectangle;4:size3;4:and[%s,%s];4:green;4:or[%s,%s];4:circle;4:nand[%s,%s];4:and[%s,%s];4:size3;4:size1;4:size2;4:yellow;4:rectangle
'λx.apply(not[triangle],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(x.s, and[or[blue,rectangle],size3])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:blue;4:rectangle;4:size3
'λx.empty(filter(filter(x.s, blue), implies[or[size2,size3],size3]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:implies[%s,%s];4:or[%s,%s];4:size2;4:size3;4:size3
'λx.apply(not[or[implies[yellow,blue],blue]],iota(filter(x.s, not[and[size1,size3]])))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:implies[%s,%s];4:yellow;4:blue;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:size1;4:size3
'λx.apply(and[size3,blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:blue;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(x.s, size1))),iota(filter(x.s, or[not[circle],or[and[implies[blue,nor[size2,apply(same_shape,iota(filter(filter(filter(x.s, circle), yellow), apply(same_color,iota(x.s)))))]],yellow],and[and[circle,size1],nand[and[apply(size-leq,x.o),apply(same_color,iota(filter(x.s, yellow)))],rectangle]]]])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:circle;4:or[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:blue;4:nor[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:and[%s,%s];4:circle;4:size1;4:nand[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle
'λx.apply(circle,iota(filter(x.s, and[or[and[size3,size1],size1],green])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size3;4:size1;4:size1;4:green
'λx.apply(and[green,circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:circle;1:%s.o;2:x
'λx.apply(and[apply(same_color,x.o),rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size2,not[nor[not[rectangle],and[size3,not[yellow]]]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:not[%s];4:nor[%s,%s];4:not[%s];4:rectangle;4:and[%s,%s];4:size3;4:not[%s];4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(or[blue,size2],iota(filter(filter(x.s, triangle), blue)))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue
'λx.apply(and[triangle,and[and[rectangle,or[rectangle,green]],triangle]],iota(filter(x.s, iff[or[size2,nor[nor[apply(same_color,iota(filter(filter(x.s, and[nor[not[size1],size1],or[not[blue],and[triangle,not[and[or[blue,blue],triangle]]]]]), nor[and[green,circle],apply(same_shape,x.o)]))),size1],rectangle]],or[green,rectangle]])))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:or[%s,%s];4:rectangle;4:green;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:or[%s,%s];4:size2;4:nor[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:not[%s];4:size1;4:size1;4:or[%s,%s];4:not[%s];4:blue;4:and[%s,%s];4:triangle;4:not[%s];4:and[%s,%s];4:or[%s,%s];4:blue;4:blue;4:triangle;4:nor[%s,%s];4:and[%s,%s];4:green;4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;4:rectangle;4:or[%s,%s];4:green;4:rectangle
'λx.apply(blue,iota(filter(filter(filter(filter(x.s, apply(same_color,x.o)), not[green]), size2), size2)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:green;4:size2;4:size2
'λx.exists(and[or[and[or[yellow,size3],circle],green],triangle], filter(filter(x.s, rectangle), apply(same_size,iota(filter(filter(x.s, yellow), or[circle,green])))))'	0:exists(%s, %s);4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:yellow;4:size3;4:circle;4:green;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:circle;4:green
'λx.apply(not[and[size1,not[size2]]],iota(filter(x.s, nor[size2,size3])))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size1;4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size2;4:size3
'λx.exists(blue, filter(x.s, not[circle]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.apply(and[implies[iff[size1,size2],triangle],nand[size1,circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:iff[%s,%s];4:size1;4:size2;4:triangle;4:nand[%s,%s];4:size1;4:circle;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(filter(x.s, nor[or[not[green],and[circle,yellow]],and[green,yellow]]), rectangle), blue)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:or[%s,%s];4:not[%s];4:green;4:and[%s,%s];4:circle;4:yellow;4:and[%s,%s];4:green;4:yellow;4:rectangle;4:blue
'λx.apply(and[size1,blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:blue;1:%s.o;2:x
'λx.apply(or[or[triangle,triangle],and[apply(size-gt,iota(x.s)),size1]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:triangle;4:triangle;4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:size1;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(filter(filter(filter(x.s, circle), or[blue,not[yellow]]), or[green,rectangle]), not[implies[size3,blue]]), and[circle,not[size3]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:blue;4:not[%s];4:yellow;4:or[%s,%s];4:green;4:rectangle;4:not[%s];4:implies[%s,%s];4:size3;4:blue;4:and[%s,%s];4:circle;4:not[%s];4:size3;3:%s.s;2:x
'λx.exists(size3, filter(filter(x.s, implies[green,size1]), apply(same_size,iota(x.s))))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:green;4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_color,iota(filter(filter(x.s, yellow), green))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green;1:%s.o;2:x
'λx.apply(not[not[nor[and[or[not[size1],circle],or[or[size1,or[yellow,green]],size3]],apply(size-gt,x.o)]]],iota(filter(x.s, green)))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:nor[%s,%s];4:and[%s,%s];4:or[%s,%s];4:not[%s];4:size1;4:circle;4:or[%s,%s];4:or[%s,%s];4:size1;4:or[%s,%s];4:yellow;4:green;4:size3;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.contains(iota(filter(filter(x.s, green), circle)), filter(filter(filter(x.s, or[or[and[blue,and[triangle,size3]],not[size3]],and[and[blue,and[rectangle,green]],green]]), yellow), apply(same_color,iota(x.s))))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:triangle;4:size3;4:not[%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:green;4:green;4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.forall(not[or[and[blue,rectangle],yellow]],x.s)'	0:forall(%s,%s);4:not[%s];4:or[%s,%s];4:and[%s,%s];4:blue;4:rectangle;4:yellow;3:%s.s;2:x
'λx.apply(nand[size1,circle],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:size1;4:circle;1:iota(%s);3:%s.s;2:x
'λx.exists(size1, filter(filter(x.s, size2), apply(size-leq,x.o)))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:size-leq;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(filter(x.s, triangle), and[apply(same_color,x.o),not[and[and[triangle,and[apply(same_shape,iota(x.s)),size1]],circle]]]), and[not[and[and[rectangle,size3],size1]],blue])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size1;4:circle;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size3;4:size1;4:blue
'λx.apply(and[size1,apply(size-geq,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(not[size1],iota(filter(x.s, iff[size3,and[iff[triangle,not[size1]],or[apply(size-leq,x.o),and[nor[size3,apply(size-leq,iota(x.s))],size1]]]])))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size3;4:and[%s,%s];4:iff[%s,%s];4:triangle;4:not[%s];4:size1;4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:and[%s,%s];4:nor[%s,%s];4:size3;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:size1
'λx.apply(and[size2,rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[rectangle,or[nor[not[size2],and[not[and[and[rectangle,not[not[or[triangle,and[triangle,not[apply(same_shape,iota(filter(filter(x.s, not[rectangle]), green)))]]]]]],blue]],size3]],not[or[green,green]]]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:rectangle;4:or[%s,%s];4:nor[%s,%s];4:not[%s];4:size2;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:not[%s];4:not[%s];4:or[%s,%s];4:triangle;4:and[%s,%s];4:triangle;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;4:green;4:blue;4:size3;4:not[%s];4:or[%s,%s];4:green;4:green;1:%s.o;2:x
'λx.apply(and[yellow,size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:size3;1:%s.o;2:x
'λx.contains(iota(filter(x.s, size1)), filter(x.s, nand[and[blue,yellow],not[triangle]]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:and[%s,%s];4:blue;4:yellow;4:not[%s];4:triangle
'λx.empty(filter(filter(x.s, and[rectangle,yellow]), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:yellow;4:triangle
'λx.apply(green,iota(filter(x.s, apply(size-gt,x.o))))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.contains(iota(filter(x.s, yellow)), filter(filter(filter(x.s, or[rectangle,apply(same_shape,x.o)]), apply(same_color,x.o)), yellow))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow
'λx.apply(not[circle],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[triangle,and[triangle,size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:triangle;4:size1;1:%s.o;2:x
'λx.empty(filter(filter(x.s, circle), not[triangle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:triangle
'λx.forall(circle,filter(x.s, and[implies[or[nor[or[size1,blue],size1],nand[not[nand[yellow,size3]],iff[and[triangle,and[blue,apply(same_shape,x.o)]],and[apply(size-leq,iota(filter(x.s, size1))),rectangle]]]],not[triangle]],green]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:size1;4:blue;4:size1;4:nand[%s,%s];4:not[%s];4:nand[%s,%s];4:yellow;4:size3;4:iff[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle;4:not[%s];4:triangle;4:green
'λx.empty(filter(filter(x.s, size3), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle
'λx.apply(implies[and[apply(same_color,x.o),and[green,or[rectangle,or[size1,and[and[rectangle,rectangle],apply(same_shape,iota(x.s))]]]]],size2],iota(filter(filter(x.s, size2), apply(same_shape,x.o))))'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:green;4:or[%s,%s];4:rectangle;4:or[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(triangle,iota(filter(x.s, apply(size-gt,x.o))))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.forall(nor[green,and[or[size1,or[size1,or[and[triangle,and[size1,apply(same_size,iota(x.s))]],apply(same_color,x.o)]]],circle]],x.s)'	0:forall(%s,%s);4:nor[%s,%s];4:green;4:and[%s,%s];4:or[%s,%s];4:size1;4:or[%s,%s];4:size1;4:or[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;3:%s.s;2:x
'λx.apply(iff[yellow,circle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:yellow;4:circle;1:%s.o;2:x
'λx.contains(x.o, filter(filter(filter(filter(filter(x.s, nand[triangle,implies[and[and[triangle,blue],or[size3,yellow]],rectangle]]), apply(same_shape,iota(filter(filter(x.s, or[yellow,apply(same_color,x.o)]), not[size1])))), rectangle), rectangle), circle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:triangle;4:implies[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:blue;4:or[%s,%s];4:size3;4:yellow;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:size1;4:rectangle;4:rectangle;4:circle
'λx.exists(yellow, filter(filter(filter(x.s, size3), and[size1,apply(size-leq,iota(filter(filter(filter(filter(filter(x.s, nor[apply(same_shape,x.o),nand[implies[circle,and[circle,and[size2,rectangle]]],triangle]]), green), size2), and[yellow,size2]), size1)))]), and[yellow,or[or[rectangle,green],apply(size-lt,x.o)]]))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:size1;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:nand[%s,%s];4:implies[%s,%s];4:circle;4:and[%s,%s];4:circle;4:and[%s,%s];4:size2;4:rectangle;4:triangle;4:green;4:size2;4:and[%s,%s];4:yellow;4:size2;4:size1;4:and[%s,%s];4:yellow;4:or[%s,%s];4:or[%s,%s];4:rectangle;4:green;4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.apply(and[not[and[triangle,green]],or[apply(same_color,iota(filter(filter(x.s, green), size1))),green]],iota(filter(filter(x.s, green), yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:triangle;4:green;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow
'λx.apply(and[not[apply(same_color,x.o)],apply(same_color,x.o)],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[size2,size1],nor[and[circle,or[circle,triangle]],size1]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size2;4:size1;4:nor[%s,%s];4:and[%s,%s];4:circle;4:or[%s,%s];4:circle;4:triangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(or[not[rectangle],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:rectangle;4:blue;1:%s.o;2:x
'λx.exists(and[size2,circle], filter(filter(x.s, and[and[yellow,apply(same_shape,iota(filter(filter(x.s, rectangle), and[rectangle,apply(same_color,x.o)])))],size2]), or[apply(size-leq,iota(filter(x.s, triangle))),nand[triangle,apply(same_shape,iota(x.s))]]))'	0:exists(%s, %s);4:and[%s,%s];4:size2;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size2;4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:nand[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(filter(x.s, circle), triangle), triangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle;4:triangle
'λx.exists(and[and[and[blue,green],implies[green,size2]],implies[rectangle,size1]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:green;4:implies[%s,%s];4:green;4:size2;4:implies[%s,%s];4:rectangle;4:size1;3:%s.s;2:x
'λx.forall(and[circle,size3],filter(x.s, circle))'	0:forall(%s,%s);4:and[%s,%s];4:circle;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[yellow,size2],iota(filter(filter(x.s, size2), implies[size2,apply(size-gt,iota(filter(filter(filter(x.s, green), apply(same_color,x.o)), size3)))])))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:implies[%s,%s];4:size2;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3
'λx.apply(apply(same_color,iota(x.s)),iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.exists(apply(size-gt,iota(filter(x.s, size3))), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;3:%s.s;2:x
'λx.apply(and[size2,yellow],iota(filter(x.s, nor[apply(same_size,x.o),yellow])))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow
'λx.apply(and[rectangle,rectangle],iota(filter(filter(filter(x.s, apply(same_size,x.o)), apply(size-lt,x.o)), not[size1])))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:not[%s];4:size1
'λx.apply(size3,iota(filter(filter(x.s, apply(same_size,iota(x.s))), size1)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size1
'λx.apply(blue,iota(filter(filter(x.s, and[and[or[and[size3,circle],not[green]],or[size3,and[rectangle,yellow]]],and[apply(same_color,iota(x.s)),apply(same_color,x.o)]]), and[triangle,green])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size3;4:circle;4:not[%s];4:green;4:or[%s,%s];4:size3;4:and[%s,%s];4:rectangle;4:yellow;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:triangle;4:green
'λx.forall(rectangle,filter(filter(x.s, size3), blue))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue
'λx.apply(triangle,iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.forall(yellow,filter(filter(x.s, or[size3,nand[apply(same_shape,x.o),size1]]), triangle))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;4:triangle
'λx.empty(filter(filter(filter(filter(x.s, or[or[triangle,blue],size3]), green), size1), or[and[green,circle],or[or[size3,and[green,blue]],green]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:triangle;4:blue;4:size3;4:green;4:size1;4:or[%s,%s];4:and[%s,%s];4:green;4:circle;4:or[%s,%s];4:or[%s,%s];4:size3;4:and[%s,%s];4:green;4:blue;4:green
'λx.apply(and[iff[triangle,apply(same_color,iota(x.s))],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:green;1:%s.o;2:x
'λx.exists(size1, filter(filter(x.s, blue), apply(size-gt,iota(filter(filter(x.s, size2), and[circle,and[blue,circle]])))))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:circle;4:and[%s,%s];4:blue;4:circle
'λx.empty(filter(x.s, not[triangle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.apply(iff[rectangle,rectangle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:rectangle;4:rectangle;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(x.s, yellow), triangle), size3)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle;4:size3;3:%s.s;2:x
'λx.apply(iff[blue,rectangle],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:blue;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.exists(apply(same_shape,iota(filter(filter(filter(x.s, not[and[and[not[nand[or[apply(same_color,x.o),not[green]],nand[iff[rectangle,or[size2,blue]],or[size3,apply(same_size,iota(x.s))]]]],rectangle],triangle]]), circle), and[green,or[apply(size-geq,x.o),green]]))), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:nand[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:green;4:nand[%s,%s];4:iff[%s,%s];4:rectangle;4:or[%s,%s];4:size2;4:blue;4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:rectangle;4:triangle;4:circle;4:and[%s,%s];4:green;4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:green;3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(filter(filter(filter(x.s, size2), yellow), rectangle), yellow), size2)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:yellow;4:rectangle;4:yellow;4:size2
'λx.apply(or[blue,or[circle,size1]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:or[%s,%s];4:circle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, apply(same_color,x.o)), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow
'λx.apply(size1,iota(filter(x.s, apply(same_size,iota(filter(x.s, circle))))))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(not[not[blue]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(size2,iota(filter(x.s, not[and[and[apply(size-leq,iota(filter(filter(filter(x.s, size3), circle), green))),size2],yellow]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle;4:green;4:size2;4:yellow
'λx.contains(x.o, filter(x.s, size3))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.contains(x.o, filter(x.s, size1))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.contains(x.o, filter(x.s, green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.contains(iota(x.s), filter(x.s, and[green,or[yellow,size1]]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:or[%s,%s];4:yellow;4:size1
'λx.apply(size3,iota(filter(filter(x.s, and[size3,green]), green)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:green;4:green
'λx.apply(size3,iota(filter(x.s, implies[green,size1])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:green;4:size1
'λx.apply(and[not[size3],rectangle],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size3;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(nand[size2,circle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size2;4:circle;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(filter(x.s, size1), circle), and[not[and[triangle,or[and[size1,and[circle,apply(same_shape,x.o)]],circle]]],not[circle]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:triangle;4:or[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;4:not[%s];4:circle
'λx.exists(not[size1], filter(filter(x.s, size3), and[circle,size3]))'	0:exists(%s, %s);4:not[%s];4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:circle;4:size3
'λx.apply(iff[blue,blue],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:blue;4:blue;1:iota(%s);3:%s.s;2:x
'λx.exists(blue, filter(filter(x.s, green), blue))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue
'λx.apply(yellow,iota(filter(x.s, and[or[apply(size-lt,iota(filter(filter(filter(filter(x.s, and[circle,and[size3,circle]]), rectangle), size2), rectangle))),rectangle],blue])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:and[%s,%s];4:size3;4:circle;4:rectangle;4:size2;4:rectangle;4:rectangle;4:blue
'λx.contains(iota(filter(x.s, size1)), filter(filter(x.s, or[blue,or[size1,nand[size2,and[apply(same_size,iota(filter(x.s, or[and[circle,and[circle,not[and[size1,triangle]]]],and[size2,size3]]))),circle]]]]), size2))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:or[%s,%s];4:size1;4:nand[%s,%s];4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:circle;4:not[%s];4:and[%s,%s];4:size1;4:triangle;4:and[%s,%s];4:size2;4:size3;4:circle;4:size2
'λx.apply(apply(size-leq,iota(x.s)),iota(filter(filter(filter(filter(filter(filter(x.s, iff[triangle,green]), and[green,and[rectangle,triangle]]), size1), or[and[or[triangle,yellow],triangle],not[or[circle,size1]]]), and[green,circle]), size1)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:triangle;4:green;4:and[%s,%s];4:green;4:and[%s,%s];4:rectangle;4:triangle;4:size1;4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:triangle;4:yellow;4:triangle;4:not[%s];4:or[%s,%s];4:circle;4:size1;4:and[%s,%s];4:green;4:circle;4:size1
'λx.apply(or[blue,implies[apply(same_shape,x.o),size3]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:implies[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3;1:%s.o;2:x
'λx.apply(and[triangle,triangle],iota(filter(filter(x.s, size2), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue
'λx.apply(or[size3,triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:triangle;1:%s.o;2:x
'λx.apply(and[apply(size-leq,iota(filter(filter(x.s, and[and[implies[iff[size1,green],triangle],rectangle],rectangle]), size3))),size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:iff[%s,%s];4:size1;4:green;4:triangle;4:rectangle;4:rectangle;4:size3;4:size1;1:%s.o;2:x
'λx.apply(or[size1,triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:triangle;1:%s.o;2:x
'λx.apply(implies[size2,blue],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:implies[%s,%s];4:size2;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(and[apply(same_shape,x.o),rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.exists(green, filter(filter(filter(x.s, rectangle), rectangle), size1))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle;4:size1
'λx.apply(blue,iota(filter(filter(filter(x.s, green), or[size3,and[blue,circle]]), not[blue])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:size3;4:and[%s,%s];4:blue;4:circle;4:not[%s];4:blue
'λx.empty(filter(filter(filter(filter(x.s, and[size3,green]), triangle), blue), implies[circle,rectangle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:green;4:triangle;4:blue;4:implies[%s,%s];4:circle;4:rectangle
'λx.contains(iota(filter(x.s, triangle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;3:%s.s;2:x
'λx.apply(or[or[blue,size1],size2],iota(filter(filter(x.s, rectangle), size3)))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:blue;4:size1;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3
'λx.apply(nor[not[size2],not[size3]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:not[%s];4:size2;4:not[%s];4:size3;1:%s.o;2:x
'λx.apply(yellow,iota(filter(x.s, or[size1,apply(same_shape,x.o)])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, apply(same_size,x.o)), and[size2,and[and[and[circle,green],or[size2,circle]],and[nor[rectangle,and[nor[apply(same_color,x.o),triangle],apply(size-lt,x.o)]],not[circle]]]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:green;4:or[%s,%s];4:size2;4:circle;4:and[%s,%s];4:nor[%s,%s];4:rectangle;4:and[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:not[%s];4:circle
'λx.exists(or[yellow,and[apply(same_shape,iota(x.s)),size1]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:yellow;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size1;3:%s.s;2:x
'λx.forall(circle,filter(x.s, and[implies[or[nor[or[size1,blue],size1],nand[not[nand[yellow,size3]],iff[and[triangle,and[blue,apply(same_shape,x.o)]],and[apply(size-leq,iota(filter(x.s, size1))),rectangle]]]],not[triangle]],circle]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:size1;4:blue;4:size1;4:nand[%s,%s];4:not[%s];4:nand[%s,%s];4:yellow;4:size3;4:iff[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle;4:not[%s];4:triangle;4:circle
'λx.apply(and[apply(same_shape,iota(x.s)),triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(yellow,iota(filter(filter(filter(filter(filter(filter(x.s, and[apply(same_shape,iota(filter(x.s, size1))),and[or[size1,nand[apply(same_size,iota(x.s)),triangle]],rectangle]]), rectangle), circle), implies[blue,and[nand[and[size2,size3],and[size3,triangle]],and[size3,circle]]]), blue), size1)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:or[%s,%s];4:size1;4:nand[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:triangle;4:rectangle;4:rectangle;4:circle;4:implies[%s,%s];4:blue;4:and[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:size2;4:size3;4:and[%s,%s];4:size3;4:triangle;4:and[%s,%s];4:size3;4:circle;4:blue;4:size1
'λx.apply(and[and[and[triangle,triangle],green],green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:triangle;4:green;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[rectangle,triangle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:rectangle;4:triangle;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(x.s, and[size1,or[circle,not[circle]]]), triangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:or[%s,%s];4:circle;4:not[%s];4:circle;4:triangle
'λx.contains(iota(filter(filter(x.s, apply(same_size,x.o)), implies[green,or[size1,blue]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:implies[%s,%s];4:green;4:or[%s,%s];4:size1;4:blue;3:%s.s;2:x
'λx.apply(green,iota(filter(x.s, and[circle,size3])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size3
'λx.apply(and[yellow,apply(size-geq,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(not[apply(same_color,iota(filter(x.s, circle)))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;1:%s.o;2:x
'λx.apply(and[size1,apply(same_size,x.o)],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.exists(green, filter(x.s, or[rectangle,size2]))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:size2
'λx.apply(not[apply(same_size,x.o)],iota(filter(filter(x.s, and[apply(same_color,x.o),rectangle]), and[size3,not[size3]])))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle;4:and[%s,%s];4:size3;4:not[%s];4:size3
'λx.apply(and[yellow,rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:rectangle;1:%s.o;2:x
'λx.exists(and[apply(same_color,iota(x.s)),rectangle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:rectangle;3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(filter(x.s, triangle), or[blue,not[yellow]]), and[circle,blue])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:or[%s,%s];4:blue;4:not[%s];4:yellow;4:and[%s,%s];4:circle;4:blue
'λx.apply(circle,iota(filter(filter(x.s, yellow), size1)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1
'λx.exists(size3, filter(filter(filter(filter(filter(x.s, and[size3,not[and[size3,circle]]]), implies[rectangle,blue]), nand[green,size1]), or[green,and[and[iff[green,size1],size2],triangle]]), size3))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:not[%s];4:and[%s,%s];4:size3;4:circle;4:implies[%s,%s];4:rectangle;4:blue;4:nand[%s,%s];4:green;4:size1;4:or[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:green;4:size1;4:size2;4:triangle;4:size3
'λx.apply(apply(same_size,iota(filter(filter(x.s, blue), and[size3,triangle]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:size3;4:triangle;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(filter(x.s, circle), nand[not[nor[size3,size2]],and[apply(same_color,x.o),green]]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:nand[%s,%s];4:not[%s];4:nor[%s,%s];4:size3;4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green;1:%s.o;2:x
'λx.apply(and[apply(same_size,iota(filter(filter(x.s, blue), size3))),triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.forall(blue,filter(x.s, or[nor[implies[triangle,nand[size3,and[blue,apply(same_color,iota(filter(x.s, and[or[size1,or[yellow,blue]],green])))]]],size3],triangle]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:nor[%s,%s];4:implies[%s,%s];4:triangle;4:nand[%s,%s];4:size3;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:size1;4:or[%s,%s];4:yellow;4:blue;4:green;4:size3;4:triangle
'λx.apply(apply(same_color,x.o),iota(filter(x.s, and[not[blue],and[and[size2,yellow],or[yellow,or[and[triangle,triangle],or[or[apply(size-gt,iota(x.s)),and[or[and[size1,and[not[yellow],apply(same_shape,iota(x.s))]],size1],yellow]],size1]]]]])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:size2;4:yellow;4:or[%s,%s];4:yellow;4:or[%s,%s];4:and[%s,%s];4:triangle;4:triangle;4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:not[%s];4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size1;4:yellow;4:size1
'λx.apply(or[size3,or[not[circle],apply(same_color,iota(filter(filter(x.s, green), size3)))]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:or[%s,%s];4:not[%s];4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, circle), yellow)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow
'λx.contains(x.o, filter(filter(filter(filter(filter(filter(filter(filter(x.s, and[green,apply(same_shape,iota(filter(filter(x.s, or[apply(same_color,iota(filter(filter(filter(x.s, rectangle), green), green))),size1]), blue)))]), size2), or[and[or[not[and[and[size3,rectangle],yellow]],not[apply(same_shape,iota(x.s))]],circle],blue]), blue), triangle), and[circle,blue]), and[rectangle,circle]), triangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green;4:green;4:size1;4:blue;4:size2;4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:rectangle;4:yellow;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle;4:blue;4:blue;4:triangle;4:and[%s,%s];4:circle;4:blue;4:and[%s,%s];4:rectangle;4:circle;4:triangle
'λx.apply(implies[circle,and[size1,apply(size-gt,iota(x.s))]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:circle;4:and[%s,%s];4:size1;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(and[apply(same_color,x.o),size2],iota(filter(filter(x.s, and[apply(same_size,iota(x.s)),not[triangle]]), or[triangle,green])))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:not[%s];4:triangle;4:or[%s,%s];4:triangle;4:green
'λx.forall(size2,filter(filter(filter(x.s, size2), apply(same_shape,iota(filter(filter(filter(x.s, implies[circle,rectangle]), circle), rectangle)))), size3))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:circle;4:rectangle;4:circle;4:rectangle;4:size3
'λx.exists(or[triangle,size1], filter(x.s, rectangle))'	0:exists(%s, %s);4:or[%s,%s];4:triangle;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(size3,iota(filter(x.s, and[circle,circle])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:circle
'λx.apply(and[triangle,or[circle,size3]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:or[%s,%s];4:circle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.exists(not[circle], filter(filter(x.s, size2), and[or[green,blue],size3]))'	0:exists(%s, %s);4:not[%s];4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:or[%s,%s];4:green;4:blue;4:size3
'λx.apply(and[and[rectangle,size2],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size2;4:triangle;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(x.s)),iota(filter(filter(x.s, nand[triangle,size1]), or[size2,yellow])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:triangle;4:size1;4:or[%s,%s];4:size2;4:yellow
'λx.empty(filter(filter(x.s, triangle), not[blue]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:not[%s];4:blue
'λx.apply(and[and[or[apply(same_size,x.o),size3],green],apply(same_shape,iota(filter(filter(filter(x.s, and[size2,size2]), green), or[triangle,triangle])))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:size2;4:green;4:or[%s,%s];4:triangle;4:triangle;1:%s.o;2:x
'λx.forall(blue,filter(x.s, blue))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(nand[and[and[and[green,or[implies[triangle,triangle],and[not[yellow],apply(same_size,x.o)]]],size3],or[nand[yellow,size1],apply(size-gt,x.o)]],yellow],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:or[%s,%s];4:implies[%s,%s];4:triangle;4:triangle;4:and[%s,%s];4:not[%s];4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;4:or[%s,%s];4:nand[%s,%s];4:yellow;4:size1;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:yellow;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, and[blue,apply(same_shape,iota(x.s))])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, blue)), filter(x.s, or[size3,triangle]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:triangle
'λx.empty(filter(filter(filter(filter(x.s, and[rectangle,green]), triangle), blue), implies[implies[size2,yellow],rectangle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:green;4:triangle;4:blue;4:implies[%s,%s];4:implies[%s,%s];4:size2;4:yellow;4:rectangle
'λx.apply(yellow,iota(filter(x.s, nand[apply(same_color,iota(x.s)),and[not[green],apply(same_size,iota(filter(filter(x.s, triangle), blue)))]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue
'λx.apply(nand[blue,size2],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:blue;4:size2;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(x.s, rectangle), rectangle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle
'λx.apply(size3,iota(filter(filter(x.s, rectangle), rectangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle
'λx.apply(size1,iota(filter(filter(x.s, rectangle), rectangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle
'λx.contains(x.o, filter(filter(x.s, size3), nand[not[apply(size-lt,iota(filter(x.s, rectangle)))],not[or[size1,not[or[blue,yellow]]]]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:nand[%s,%s];4:not[%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:or[%s,%s];4:size1;4:not[%s];4:or[%s,%s];4:blue;4:yellow
'λx.apply(green,iota(filter(x.s, nand[or[yellow,circle],and[size3,and[size3,not[rectangle]]]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:or[%s,%s];4:yellow;4:circle;4:and[%s,%s];4:size3;4:and[%s,%s];4:size3;4:not[%s];4:rectangle
'λx.apply(and[not[and[or[and[triangle,yellow],and[yellow,blue]],or[triangle,green]]],and[size3,size1]],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:triangle;4:yellow;4:and[%s,%s];4:yellow;4:blue;4:or[%s,%s];4:triangle;4:green;4:and[%s,%s];4:size3;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(circle,iota(filter(x.s, or[or[size1,yellow],size1])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:size1;4:yellow;4:size1
'λx.apply(nand[nand[apply(same_size,iota(x.s)),not[blue]],or[nand[apply(same_size,iota(filter(filter(filter(filter(x.s, apply(same_shape,iota(x.s))), rectangle), implies[not[not[and[and[circle,size3],and[and[and[circle,rectangle],apply(same_shape,iota(x.s))],not[size1]]]]],triangle]), circle))),circle],size1]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:nand[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:not[%s];4:blue;4:or[%s,%s];4:nand[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:rectangle;4:implies[%s,%s];4:not[%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:size3;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:not[%s];4:size1;4:triangle;4:circle;4:circle;4:size1;1:%s.o;2:x
'λx.apply(or[rectangle,apply(same_size,x.o)],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.empty(filter(filter(x.s, apply(same_shape,x.o)), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle
'λx.apply(nor[triangle,and[size3,size3]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:triangle;4:and[%s,%s];4:size3;4:size3;1:%s.o;2:x
'λx.apply(not[or[apply(same_shape,x.o),apply(same_color,x.o)]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(implies[size3,size1],iota(filter(x.s, not[rectangle])))'	0:apply(%s,%s);4:implies[%s,%s];4:size3;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle
'λx.apply(and[size2,yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size1,yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(and[yellow,or[triangle,blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:or[%s,%s];4:triangle;4:blue;1:%s.o;2:x
'λx.apply(or[and[or[apply(same_size,iota(filter(filter(filter(x.s, rectangle), rectangle), apply(same_shape,iota(x.s))))),size3],blue],size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size3;4:blue;4:size2;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, rectangle), rectangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle
'λx.apply(and[size3,yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(x.s, implies[size3,apply(same_color,iota(x.s))])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(and[or[yellow,blue],or[size2,circle]],iota(filter(filter(filter(filter(filter(filter(filter(filter(filter(x.s, size2), and[circle,and[circle,circle]]), rectangle), blue), apply(same_color,iota(x.s))), size3), rectangle), green), yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:yellow;4:blue;4:or[%s,%s];4:size2;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:circle;4:and[%s,%s];4:circle;4:circle;4:rectangle;4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size3;4:rectangle;4:green;4:yellow
'λx.apply(size1,iota(filter(filter(x.s, not[triangle]), circle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:circle
'λx.apply(yellow,iota(filter(filter(x.s, rectangle), not[green])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:green
'λx.apply(implies[yellow,size2],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:yellow;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(x.s, blue), iff[apply(same_color,iota(x.s)),apply(size-leq,iota(x.s))])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:iff[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[circle,and[green,not[apply(same_shape,x.o)]]],iota(filter(x.s, green)))'	0:apply(%s,%s);4:nand[%s,%s];4:circle;4:and[%s,%s];4:green;4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(green,iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(circle,iota(filter(filter(filter(x.s, iff[rectangle,circle]), size2), yellow)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:rectangle;4:circle;4:size2;4:yellow
'λx.apply(or[blue,circle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(size-gt,iota(filter(filter(filter(filter(x.s, blue), blue), rectangle), blue))),iota(filter(x.s, or[rectangle,blue])))'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue;4:rectangle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:blue
'λx.apply(blue,iota(filter(filter(x.s, or[size2,green]), not[triangle])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:green;4:not[%s];4:triangle
'λx.apply(and[apply(same_size,x.o),or[triangle,and[or[yellow,or[blue,and[or[size1,or[and[triangle,triangle],implies[rectangle,and[yellow,size3]]]],size1]]],and[yellow,or[blue,blue]]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:triangle;4:and[%s,%s];4:or[%s,%s];4:yellow;4:or[%s,%s];4:blue;4:and[%s,%s];4:or[%s,%s];4:size1;4:or[%s,%s];4:and[%s,%s];4:triangle;4:triangle;4:implies[%s,%s];4:rectangle;4:and[%s,%s];4:yellow;4:size3;4:size1;4:and[%s,%s];4:yellow;4:or[%s,%s];4:blue;4:blue;1:%s.o;2:x
'λx.apply(apply(size-gt,iota(x.s)),iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(not[green],iota(filter(filter(filter(filter(filter(filter(filter(x.s, rectangle), and[yellow,size1]), not[green]), size2), rectangle), and[not[size1],blue]), yellow)))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:yellow;4:size1;4:not[%s];4:green;4:size2;4:rectangle;4:and[%s,%s];4:not[%s];4:size1;4:blue;4:yellow
'λx.apply(and[yellow,or[size1,and[and[size1,size1],implies[not[green],size3]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:or[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:size1;4:size1;4:implies[%s,%s];4:not[%s];4:green;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(filter(x.s, blue), size2), apply(same_size,x.o))))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(size3,iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(size2,iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(size1,iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(not[and[blue,blue]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:blue;4:blue;1:%s.o;2:x
'λx.apply(apply(size-geq,iota(filter(x.s, blue))),iota(filter(filter(x.s, rectangle), size2)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2
'λx.contains(x.o, filter(x.s, and[green,nand[size2,rectangle]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:nand[%s,%s];4:size2;4:rectangle
'λx.apply(or[and[and[size1,triangle],size3],size1],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:triangle;4:size3;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[size1,or[yellow,implies[size1,apply(same_size,x.o)]]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size1;4:or[%s,%s];4:yellow;4:implies[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.forall(not[circle],filter(filter(x.s, size3), green))'	0:forall(%s,%s);4:not[%s];4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green
'λx.empty(filter(filter(filter(filter(x.s, green), rectangle), circle), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle;4:circle;4:circle
'λx.apply(iff[yellow,size1],iota(filter(filter(x.s, circle), or[green,size2])))'	0:apply(%s,%s);4:iff[%s,%s];4:yellow;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:green;4:size2
'λx.exists(blue, filter(filter(filter(x.s, and[blue,blue]), yellow), rectangle))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:blue;4:yellow;4:rectangle
'λx.apply(or[apply(size-lt,iota(x.s)),rectangle],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(or[not[blue],iff[or[size2,size1],triangle]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:blue;4:iff[%s,%s];4:or[%s,%s];4:size2;4:size1;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_size,x.o),iota(filter(filter(x.s, and[rectangle,circle]), not[size1])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:circle;4:not[%s];4:size1
'λx.contains(iota(filter(filter(filter(filter(filter(x.s, triangle), and[implies[rectangle,nor[nor[size1,size2],size3]],iff[circle,size2]]), or[size2,or[blue,size2]]), size2), not[or[size1,circle]])), filter(filter(x.s, and[apply(same_shape,iota(x.s)),green]), size2))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:implies[%s,%s];4:rectangle;4:nor[%s,%s];4:nor[%s,%s];4:size1;4:size2;4:size3;4:iff[%s,%s];4:circle;4:size2;4:or[%s,%s];4:size2;4:or[%s,%s];4:blue;4:size2;4:size2;4:not[%s];4:or[%s,%s];4:size1;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:green;4:size2
'λx.empty(filter(x.s, not[not[rectangle]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:rectangle
'λx.apply(iff[apply(same_size,x.o),and[size3,size1]],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:size3;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[not[or[rectangle,and[blue,not[blue]]]],circle],apply(same_size,iota(filter(filter(x.s, yellow), green)))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:or[%s,%s];4:rectangle;4:and[%s,%s];4:blue;4:not[%s];4:blue;4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(x.s, green), rectangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle
'λx.apply(and[iff[size1,green],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:size1;4:green;4:triangle;1:%s.o;2:x
'λx.exists(iff[and[rectangle,triangle],apply(same_color,iota(filter(x.s, or[size2,and[and[iff[blue,rectangle],and[not[yellow],not[size1]]],size1]])))], filter(x.s, blue))'	0:exists(%s, %s);4:iff[%s,%s];4:and[%s,%s];4:rectangle;4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:blue;4:rectangle;4:and[%s,%s];4:not[%s];4:yellow;4:not[%s];4:size1;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(not[apply(size-leq,iota(filter(filter(filter(filter(x.s, blue), green), yellow), triangle)))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green;4:yellow;4:triangle;1:%s.o;2:x
'λx.apply(or[blue,iff[blue,or[triangle,size2]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:iff[%s,%s];4:blue;4:or[%s,%s];4:triangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(or[nand[and[triangle,blue],yellow],not[green]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:triangle;4:blue;4:yellow;4:not[%s];4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[yellow,nand[blue,not[triangle]]],size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:nand[%s,%s];4:blue;4:not[%s];4:triangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.forall(iff[size1,or[and[size1,implies[size2,apply(same_color,x.o)]],blue]],filter(filter(filter(filter(filter(x.s, and[circle,blue]), and[size1,apply(same_size,x.o)]), yellow), nand[green,and[rectangle,and[triangle,and[apply(same_size,x.o),rectangle]]]]), size3))'	0:forall(%s,%s);4:iff[%s,%s];4:size1;4:or[%s,%s];4:and[%s,%s];4:size1;4:implies[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:blue;4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow;4:nand[%s,%s];4:green;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:rectangle;4:size3
'λx.apply(and[rectangle,apply(same_size,iota(filter(x.s, green)))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;1:%s.o;2:x
'λx.apply(yellow,iota(filter(x.s, and[triangle,circle])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:circle
'λx.contains(iota(filter(x.s, or[and[size3,rectangle],circle])), filter(x.s, size1))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size3;4:rectangle;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.empty(filter(filter(x.s, size1), and[yellow,size3]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:yellow;4:size3
'λx.apply(and[not[circle],triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:circle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.exists(and[nand[or[and[and[yellow,apply(same_size,x.o)],green],green],circle],yellow], filter(filter(x.s, rectangle), blue))'	0:exists(%s, %s);4:and[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;4:green;4:circle;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue
'λx.apply(and[nand[size3,and[not[green],apply(same_color,iota(filter(filter(filter(x.s, size3), size1), size2)))]],apply(same_color,iota(filter(x.s, blue)))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:size3;4:and[%s,%s];4:not[%s];4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size1;4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.contains(x.o, filter(filter(filter(x.s, yellow), and[size1,yellow]), not[size2]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:size1;4:yellow;4:not[%s];4:size2
'λx.apply(circle,iota(filter(filter(x.s, size2), and[size1,or[yellow,size3]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:size1;4:or[%s,%s];4:yellow;4:size3
'λx.apply(size1,iota(filter(filter(filter(x.s, green), circle), size3)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:circle;4:size3
'λx.apply(not[size1],iota(filter(filter(filter(x.s, triangle), rectangle), and[not[yellow],size1])))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle;4:and[%s,%s];4:not[%s];4:yellow;4:size1
'λx.apply(and[yellow,apply(same_shape,iota(filter(filter(x.s, green), size1)))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(filter(x.s, rectangle), iff[size1,size3]), size1)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:iff[%s,%s];4:size1;4:size3;4:size1
'λx.apply(triangle,iota(filter(filter(x.s, size3), iff[rectangle,size2])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:iff[%s,%s];4:rectangle;4:size2
'λx.apply(nand[size2,and[size1,blue]],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:nand[%s,%s];4:size2;4:and[%s,%s];4:size1;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.contains(x.o, filter(x.s, apply(same_size,x.o)))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(x.s, not[iff[or[rectangle,size3],and[size1,triangle]]]), size2), size3), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:iff[%s,%s];4:or[%s,%s];4:rectangle;4:size3;4:and[%s,%s];4:size1;4:triangle;4:size2;4:size3;4:circle
'λx.apply(triangle,iota(filter(x.s, nand[size3,size1])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size3;4:size1
'λx.apply(and[rectangle,and[and[rectangle,rectangle],and[not[and[and[blue,not[green]],circle]],size3]]],iota(filter(x.s, and[size3,blue])))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:rectangle;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:not[%s];4:green;4:circle;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:blue
'λx.exists(and[triangle,green], filter(x.s, and[nor[apply(same_shape,iota(x.s)),green],size1]))'	0:exists(%s, %s);4:and[%s,%s];4:triangle;4:green;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:green;4:size1
'λx.apply(size3,iota(filter(filter(filter(filter(filter(filter(x.s, apply(same_size,iota(filter(x.s, not[green])))), size3), not[rectangle]), size1), and[yellow,circle]), nand[nand[not[size2],blue],implies[and[blue,size2],and[not[or[size3,and[or[green,green],nand[and[size2,not[triangle]],circle]]]],not[size1]]]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:size3;4:not[%s];4:rectangle;4:size1;4:and[%s,%s];4:yellow;4:circle;4:nand[%s,%s];4:nand[%s,%s];4:not[%s];4:size2;4:blue;4:implies[%s,%s];4:and[%s,%s];4:blue;4:size2;4:and[%s,%s];4:not[%s];4:or[%s,%s];4:size3;4:and[%s,%s];4:or[%s,%s];4:green;4:green;4:nand[%s,%s];4:and[%s,%s];4:size2;4:not[%s];4:triangle;4:circle;4:not[%s];4:size1
'λx.apply(not[apply(same_size,iota(filter(x.s, blue)))],iota(filter(filter(filter(filter(filter(x.s, and[triangle,blue]), triangle), blue), rectangle), size3)))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:blue;4:triangle;4:blue;4:rectangle;4:size3
'λx.apply(and[not[circle],apply(same_size,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(x.s, size3), iff[yellow,size2])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:iff[%s,%s];4:yellow;4:size2
'λx.apply(rectangle,iota(filter(filter(x.s, green), and[apply(same_color,x.o),green])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green
'λx.forall(circle,filter(x.s, and[green,and[implies[circle,green],or[not[blue],triangle]]]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:and[%s,%s];4:implies[%s,%s];4:circle;4:green;4:or[%s,%s];4:not[%s];4:blue;4:triangle
'λx.apply(iff[triangle,size1],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:iff[%s,%s];4:triangle;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(green,iota(filter(filter(filter(filter(filter(filter(x.s, yellow), size1), nand[size3,blue]), size3), circle), and[green,not[yellow]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;4:nand[%s,%s];4:size3;4:blue;4:size3;4:circle;4:and[%s,%s];4:green;4:not[%s];4:yellow
'λx.apply(blue,iota(filter(x.s, and[size3,green])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:green
'λx.apply(implies[triangle,and[and[triangle,implies[blue,and[not[iff[triangle,size1]],circle]]],size1]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:triangle;4:and[%s,%s];4:and[%s,%s];4:triangle;4:implies[%s,%s];4:blue;4:and[%s,%s];4:not[%s];4:iff[%s,%s];4:triangle;4:size1;4:circle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(and[triangle,and[size3,size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:size3;4:size1;1:%s.o;2:x
'λx.apply(and[and[triangle,not[rectangle]],not[size3]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:not[%s];4:rectangle;4:not[%s];4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(x.s, and[not[circle],and[size1,apply(size-geq,iota(filter(filter(filter(x.s, blue), apply(same_color,x.o)), size2)))]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:circle;4:and[%s,%s];4:size1;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size2
'λx.forall(rectangle,filter(x.s, and[yellow,green]))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:green
'λx.forall(rectangle,filter(x.s, and[yellow,size2]))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size2
'λx.apply(yellow,iota(filter(x.s, nand[green,and[size1,green]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:green;4:and[%s,%s];4:size1;4:green
'λx.empty(filter(filter(x.s, apply(same_shape,iota(x.s))), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:yellow
'λx.forall(yellow,filter(x.s, or[apply(size-geq,iota(x.s)),nor[blue,size1]]))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:nor[%s,%s];4:blue;4:size1
'λx.apply(green,iota(filter(x.s, or[nand[green,and[green,size2]],and[size3,apply(same_size,iota(filter(filter(x.s, green), blue)))]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:nand[%s,%s];4:green;4:and[%s,%s];4:green;4:size2;4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue
'λx.apply(nor[rectangle,iff[triangle,apply(same_color,iota(x.s))]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:rectangle;4:iff[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(filter(filter(x.s, nor[circle,green]), and[size2,apply(same_color,x.o)]), apply(same_size,x.o)), size3), size3)), filter(x.s, apply(size-leq,iota(filter(x.s, not[size1])))))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:circle;4:green;4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1
'λx.apply(and[and[or[size1,size2],size2],or[green,triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size1;4:size2;4:size2;4:or[%s,%s];4:green;4:triangle;1:%s.o;2:x
'λx.apply(or[not[yellow],and[yellow,size2]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:yellow;4:and[%s,%s];4:yellow;4:size2;1:iota(%s);3:%s.s;2:x
'λx.exists(and[rectangle,rectangle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:rectangle;4:rectangle;3:%s.s;2:x
'λx.exists(size2, filter(filter(filter(x.s, nor[size3,and[iff[size3,green],triangle]]), rectangle), size1))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size3;4:and[%s,%s];4:iff[%s,%s];4:size3;4:green;4:triangle;4:rectangle;4:size1
'λx.apply(circle,iota(filter(filter(filter(filter(x.s, or[circle,triangle]), nand[yellow,not[size3]]), blue), blue)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:triangle;4:nand[%s,%s];4:yellow;4:not[%s];4:size3;4:blue;4:blue
'λx.empty(filter(x.s, triangle))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.exists(triangle, filter(filter(x.s, size1), implies[circle,and[implies[rectangle,and[size2,circle]],and[size2,rectangle]]]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:implies[%s,%s];4:circle;4:and[%s,%s];4:implies[%s,%s];4:rectangle;4:and[%s,%s];4:size2;4:circle;4:and[%s,%s];4:size2;4:rectangle
'λx.forall(not[apply(same_shape,x.o)],filter(x.s, size2))'	0:forall(%s,%s);4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(rectangle,iota(filter(filter(filter(x.s, size2), circle), not[size3])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle;4:not[%s];4:size3
'λx.contains(iota(filter(filter(filter(filter(x.s, blue), triangle), and[triangle,circle]), size2)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle;4:and[%s,%s];4:triangle;4:circle;4:size2;3:%s.s;2:x
'λx.forall(nor[apply(same_size,iota(filter(x.s, green))),and[iff[and[green,and[blue,not[rectangle]]],and[yellow,or[green,iff[or[or[size2,not[rectangle]],iff[green,size2]],rectangle]]]],implies[size2,size1]]],filter(x.s, circle))'	0:forall(%s,%s);4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:blue;4:not[%s];4:rectangle;4:and[%s,%s];4:yellow;4:or[%s,%s];4:green;4:iff[%s,%s];4:or[%s,%s];4:or[%s,%s];4:size2;4:not[%s];4:rectangle;4:iff[%s,%s];4:green;4:size2;4:rectangle;4:implies[%s,%s];4:size2;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(size2,iota(filter(x.s, or[size1,and[rectangle,circle]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:and[%s,%s];4:rectangle;4:circle
'λx.apply(size1,iota(filter(filter(filter(filter(x.s, or[or[size3,and[green,blue]],green]), size2), and[blue,and[and[green,circle],circle]]), and[rectangle,triangle])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:size3;4:and[%s,%s];4:green;4:blue;4:green;4:size2;4:and[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:green;4:circle;4:circle;4:and[%s,%s];4:rectangle;4:triangle
'λx.apply(size3,iota(filter(filter(x.s, rectangle), iff[iff[not[circle],and[blue,circle]],or[size2,size1]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:iff[%s,%s];4:iff[%s,%s];4:not[%s];4:circle;4:and[%s,%s];4:blue;4:circle;4:or[%s,%s];4:size2;4:size1
'λx.apply(and[rectangle,and[apply(same_size,iota(x.s)),green]],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(apply(size-lt,iota(filter(filter(x.s, triangle), or[not[and[size3,iff[circle,rectangle]]],or[and[size2,apply(size-lt,iota(filter(x.s, rectangle)))],circle]]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:size3;4:iff[%s,%s];4:circle;4:rectangle;4:or[%s,%s];4:and[%s,%s];4:size2;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle;1:%s.o;2:x
'λx.apply(apply(same_size,iota(filter(filter(x.s, and[size3,size1]), circle))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:size1;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[iff[yellow,nor[green,and[size3,circle]]],triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:yellow;4:nor[%s,%s];4:green;4:and[%s,%s];4:size3;4:circle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.exists(size3, filter(filter(filter(x.s, yellow), apply(same_size,x.o)), size3))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3
'λx.forall(and[yellow,apply(size-gt,x.o)],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:yellow;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, and[size1,size3]), or[not[size3],and[not[green],and[triangle,or[circle,triangle]]]]), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size3;4:or[%s,%s];4:not[%s];4:size3;4:and[%s,%s];4:not[%s];4:green;4:and[%s,%s];4:triangle;4:or[%s,%s];4:circle;4:triangle;4:rectangle
'λx.apply(or[and[apply(same_size,iota(filter(x.s, size2))),nor[nor[circle,size3],not[circle]]],nand[and[blue,size2],rectangle]],iota(filter(filter(filter(x.s, rectangle), green), and[circle,not[and[size1,rectangle]]])))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:nor[%s,%s];4:nor[%s,%s];4:circle;4:size3;4:not[%s];4:circle;4:nand[%s,%s];4:and[%s,%s];4:blue;4:size2;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green;4:and[%s,%s];4:circle;4:not[%s];4:and[%s,%s];4:size1;4:rectangle
'λx.apply(not[and[yellow,blue]],iota(filter(filter(x.s, nor[and[size2,and[or[nand[and[circle,yellow],blue],and[size2,size2]],green]],yellow]), size1)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:yellow;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:or[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:circle;4:yellow;4:blue;4:and[%s,%s];4:size2;4:size2;4:green;4:yellow;4:size1
'λx.apply(apply(same_size,iota(x.s)),iota(filter(filter(filter(filter(x.s, size2), blue), iff[apply(same_shape,x.o),apply(same_shape,iota(x.s))]), green)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue;4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:green
'λx.forall(and[size2,not[nand[apply(size-gt,iota(x.s)),size2]]],filter(x.s, and[size1,or[circle,triangle]]))'	0:forall(%s,%s);4:and[%s,%s];4:size2;4:not[%s];4:nand[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:or[%s,%s];4:circle;4:triangle
'λx.apply(and[or[not[size2],not[green]],blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:not[%s];4:size2;4:not[%s];4:green;4:blue;1:iota(%s);3:%s.s;2:x
'λx.exists(and[green,and[blue,circle]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:green;4:and[%s,%s];4:blue;4:circle;3:%s.s;2:x
'λx.contains(iota(x.s), filter(x.s, blue))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(not[apply(size-leq,iota(filter(filter(filter(x.s, rectangle), and[yellow,size1]), not[green])))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:yellow;4:size1;4:not[%s];4:green;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(x.s, or[circle,size1]), triangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:size1;4:triangle
'λx.apply(and[size3,and[and[blue,size3],or[rectangle,size3]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:blue;4:size3;4:or[%s,%s];4:rectangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.forall(size1,filter(x.s, or[size1,size1]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:size1
'λx.forall(green,filter(x.s, triangle))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(size1,iota(filter(filter(filter(filter(x.s, size1), green), apply(same_color,x.o)), nor[or[apply(same_shape,x.o),apply(same_size,x.o)],size2])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:nor[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2
'λx.apply(triangle,iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(circle,iota(filter(filter(x.s, apply(same_shape,x.o)), yellow)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow
'λx.apply(or[green,apply(same_shape,iota(filter(filter(filter(filter(filter(filter(filter(x.s, and[triangle,rectangle]), size3), and[apply(same_size,x.o),triangle]), not[size3]), size1), and[not[size1],size2]), size1)))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:rectangle;4:size3;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle;4:not[%s];4:size3;4:size1;4:and[%s,%s];4:not[%s];4:size1;4:size2;4:size1;1:%s.o;2:x
'λx.apply(nand[apply(size-gt,iota(x.s)),blue],iota(filter(filter(x.s, yellow), size3)))'	0:apply(%s,%s);4:nand[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size3
'λx.apply(iff[and[or[blue,circle],size1],blue],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:or[%s,%s];4:blue;4:circle;4:size1;4:blue;1:%s.o;2:x
'λx.exists(size3, filter(filter(filter(filter(filter(filter(x.s, yellow), size3), apply(same_size,iota(x.s))), blue), and[blue,blue]), size1))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:blue;4:blue;4:size1
'λx.apply(and[not[and[not[and[not[size1],and[or[size1,size2],rectangle]]],or[not[not[rectangle]],nand[rectangle,yellow]]]],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:not[%s];4:size1;4:and[%s,%s];4:or[%s,%s];4:size1;4:size2;4:rectangle;4:or[%s,%s];4:not[%s];4:not[%s];4:rectangle;4:nand[%s,%s];4:rectangle;4:yellow;4:yellow;1:%s.o;2:x
'λx.apply(iff[and[size1,triangle],blue],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:size1;4:triangle;4:blue;1:%s.o;2:x
'λx.apply(or[circle,size1],iota(filter(filter(filter(x.s, not[yellow]), implies[and[size3,yellow],size1]), not[rectangle])))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:implies[%s,%s];4:and[%s,%s];4:size3;4:yellow;4:size1;4:not[%s];4:rectangle
'λx.apply(size3,iota(filter(filter(filter(x.s, apply(same_color,x.o)), not[and[size3,or[triangle,green]]]), apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:size3;4:or[%s,%s];4:triangle;4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, size1), and[size3,circle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:size3;4:circle
'λx.apply(or[rectangle,rectangle],iota(filter(filter(filter(x.s, circle), triangle), iff[nor[size2,and[rectangle,and[triangle,triangle]]],size2])))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle;4:iff[%s,%s];4:nor[%s,%s];4:size2;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:triangle;4:triangle;4:size2
'λx.apply(not[nor[circle,implies[size3,or[size2,green]]]],iota(filter(x.s, nor[size2,size2])))'	0:apply(%s,%s);4:not[%s];4:nor[%s,%s];4:circle;4:implies[%s,%s];4:size3;4:or[%s,%s];4:size2;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size2;4:size2
'λx.empty(filter(x.s, or[or[rectangle,or[size1,not[blue]]],size1]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:rectangle;4:or[%s,%s];4:size1;4:not[%s];4:blue;4:size1
'λx.apply(or[size2,yellow],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.contains(x.o, filter(filter(filter(x.s, yellow), yellow), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:yellow;4:green
'λx.apply(and[circle,rectangle],iota(filter(filter(filter(filter(x.s, and[size3,size2]), not[apply(same_shape,x.o)]), blue), yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:size2;4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue;4:yellow
'λx.apply(or[green,yellow],iota(filter(x.s, not[size3])))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3
'λx.exists(circle, filter(filter(filter(x.s, size1), size1), green))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1;4:green
'λx.apply(rectangle,iota(filter(filter(x.s, and[or[rectangle,size3],yellow]), size2)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:size3;4:yellow;4:size2
'λx.apply(or[yellow,blue],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[size2,triangle],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:size2;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[circle,and[apply(size-leq,iota(filter(filter(filter(filter(x.s, size1), size2), size1), triangle))),rectangle]],iota(filter(filter(filter(x.s, apply(size-gt,x.o)), rectangle), apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:iff[%s,%s];4:circle;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2;4:size1;4:triangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(and[not[rectangle],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:rectangle;4:rectangle;1:%s.o;2:x
'λx.apply(nand[apply(same_shape,x.o),apply(same_size,iota(filter(x.s, triangle)))],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;1:%s.o;2:x
'λx.apply(and[size2,yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:yellow;1:%s.o;2:x
'λx.apply(and[size1,rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(x.s, or[triangle,size3])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:size3
'λx.apply(and[apply(same_shape,iota(filter(x.s, size3))),yellow],iota(filter(filter(filter(filter(x.s, apply(size-geq,x.o)), circle), yellow), size1)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:circle;4:yellow;4:size1
'λx.apply(or[size1,size1],iota(filter(x.s, and[size2,circle])))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:circle
'λx.apply(and[not[triangle],triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:triangle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size1,yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:yellow;1:%s.o;2:x
'λx.empty(filter(filter(x.s, size3), and[and[green,triangle],size1]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:and[%s,%s];4:green;4:triangle;4:size1
'λx.exists(not[apply(size-lt,iota(x.s))], filter(filter(x.s, and[size2,not[rectangle]]), apply(size-gt,x.o)))'	0:exists(%s, %s);4:not[%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:not[%s];4:rectangle;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(filter(x.s, apply(same_color,iota(filter(filter(x.s, size2), triangle)))), green), size1)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:triangle;4:green;4:size1
'λx.apply(or[and[apply(same_size,x.o),and[size3,and[yellow,size1]]],or[rectangle,and[not[and[yellow,circle]],circle]]],iota(filter(x.s, not[rectangle])))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:size3;4:and[%s,%s];4:yellow;4:size1;4:or[%s,%s];4:rectangle;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:yellow;4:circle;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle
'λx.contains(x.o, filter(filter(filter(x.s, or[rectangle,apply(same_shape,x.o)]), apply(same_color,x.o)), yellow))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow
'λx.apply(nand[green,size3],iota(filter(filter(filter(filter(filter(x.s, not[size1]), triangle), and[size2,size3]), size3), rectangle)))'	0:apply(%s,%s);4:nand[%s,%s];4:green;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:triangle;4:and[%s,%s];4:size2;4:size3;4:size3;4:rectangle
'λx.empty(filter(filter(x.s, size1), apply(same_color,x.o)))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(and[apply(size-lt,iota(x.s)),circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[nor[yellow,not[green]],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:yellow;4:not[%s];4:green;4:size1;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(filter(filter(filter(filter(x.s, circle), yellow), blue), implies[nand[green,not[not[size2]]],apply(same_color,x.o)]), size3), nor[size1,or[not[and[apply(same_size,iota(filter(x.s, size1))),rectangle]],iff[rectangle,iff[triangle,triangle]]]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow;4:blue;4:implies[%s,%s];4:nand[%s,%s];4:green;4:not[%s];4:not[%s];4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3;4:nor[%s,%s];4:size1;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle;4:iff[%s,%s];4:rectangle;4:iff[%s,%s];4:triangle;4:triangle
'λx.exists(circle, filter(filter(filter(filter(x.s, and[not[circle],and[and[and[not[implies[and[apply(same_color,iota(filter(filter(filter(x.s, and[size1,triangle]), size2), blue))),rectangle],green]],and[and[iff[size1,size3],not[and[blue,and[size2,green]]]],implies[size3,circle]]],and[triangle,or[yellow,blue]]],green]]), size3), size3), not[triangle]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:implies[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:triangle;4:size2;4:blue;4:rectangle;4:green;4:and[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:size1;4:size3;4:not[%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:size2;4:green;4:implies[%s,%s];4:size3;4:circle;4:and[%s,%s];4:triangle;4:or[%s,%s];4:yellow;4:blue;4:green;4:size3;4:size3;4:not[%s];4:triangle
'λx.apply(blue,iota(filter(filter(filter(filter(x.s, size1), yellow), size3), and[size1,size3])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow;4:size3;4:and[%s,%s];4:size1;4:size3
'λx.apply(implies[size2,yellow],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:size2;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(filter(x.s, apply(same_shape,x.o)), blue), size1)), filter(filter(x.s, green), size2))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size2
'λx.apply(apply(size-leq,x.o),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.forall(or[not[circle],implies[triangle,triangle]],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:not[%s];4:circle;4:implies[%s,%s];4:triangle;4:triangle;3:%s.s;2:x
'λx.apply(not[yellow],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(triangle,iota(filter(filter(filter(filter(filter(x.s, not[blue]), or[rectangle,rectangle]), and[green,triangle]), size2), nor[blue,circle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:or[%s,%s];4:rectangle;4:rectangle;4:and[%s,%s];4:green;4:triangle;4:size2;4:nor[%s,%s];4:blue;4:circle
'λx.apply(and[rectangle,circle],iota(filter(x.s, not[iff[size3,rectangle]])))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:iff[%s,%s];4:size3;4:rectangle
'λx.apply(size2,iota(filter(filter(filter(x.s, rectangle), apply(same_color,iota(filter(filter(filter(x.s, green), nor[apply(same_size,x.o),triangle]), blue)))), and[iff[yellow,nor[circle,size3]],size2])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle;4:blue;4:and[%s,%s];4:iff[%s,%s];4:yellow;4:nor[%s,%s];4:circle;4:size3;4:size2
'λx.contains(x.o, filter(filter(filter(filter(x.s, size1), size3), or[blue,not[or[triangle,green]]]), not[size1]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size3;4:or[%s,%s];4:blue;4:not[%s];4:or[%s,%s];4:triangle;4:green;4:not[%s];4:size1
'λx.empty(filter(filter(filter(x.s, circle), triangle), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle;4:size1
'λx.empty(filter(filter(filter(x.s, circle), triangle), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle;4:green
'λx.apply(and[rectangle,triangle],iota(filter(filter(x.s, circle), yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow
'λx.forall(green,filter(filter(filter(filter(filter(x.s, and[size2,blue]), green), implies[green,or[rectangle,rectangle]]), rectangle), size3))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:blue;4:green;4:implies[%s,%s];4:green;4:or[%s,%s];4:rectangle;4:rectangle;4:rectangle;4:size3
'λx.apply(and[blue,green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:green;1:%s.o;2:x
'λx.apply(and[triangle,triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[or[size2,size3],apply(same_color,x.o)],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size2;4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_shape,iota(filter(filter(x.s, and[apply(same_color,x.o),or[size3,blue]]), rectangle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:or[%s,%s];4:size3;4:blue;4:rectangle;1:%s.o;2:x
'λx.apply(not[size2],iota(filter(filter(x.s, size2), nor[size3,triangle])))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:nor[%s,%s];4:size3;4:triangle
'λx.apply(and[apply(same_color,iota(filter(filter(filter(filter(x.s, size3), not[yellow]), triangle), size3))),size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:yellow;4:triangle;4:size3;4:size2;1:%s.o;2:x
'λx.apply(implies[green,apply(same_shape,iota(filter(x.s, and[triangle,and[rectangle,green]])))],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:and[%s,%s];4:rectangle;4:green;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(filter(filter(filter(x.s, apply(same_size,x.o)), and[apply(same_color,x.o),circle]), rectangle), size2), and[yellow,size1])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;4:rectangle;4:size2;4:and[%s,%s];4:yellow;4:size1
'λx.forall(size2,filter(filter(x.s, green), rectangle))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle
'λx.apply(or[yellow,size3],iota(filter(filter(filter(filter(filter(x.s, size2), circle), blue), yellow), apply(same_shape,x.o))))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle;4:blue;4:yellow;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(and[apply(same_size,iota(x.s)),yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(not[size1],iota(filter(filter(filter(filter(x.s, size2), apply(same_size,x.o)), size1), nand[not[apply(same_shape,iota(filter(filter(x.s, nand[rectangle,and[or[not[size2],size3],green]]), and[green,triangle])))],circle])))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1;4:nand[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:rectangle;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:size2;4:size3;4:green;4:and[%s,%s];4:green;4:triangle;4:circle
'λx.forall(size2,filter(filter(filter(x.s, yellow), and[not[size1],or[not[and[and[yellow,yellow],triangle]],yellow]]), size3))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:not[%s];4:size1;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:yellow;4:triangle;4:yellow;4:size3
'λx.apply(nand[green,and[green,size2]],iota(filter(filter(filter(x.s, rectangle), apply(same_shape,iota(x.s))), triangle)))'	0:apply(%s,%s);4:nand[%s,%s];4:green;4:and[%s,%s];4:green;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle
'λx.apply(and[blue,green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:green;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, iff[yellow,and[rectangle,circle]]), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:yellow;4:and[%s,%s];4:rectangle;4:circle;4:size1
'λx.contains(iota(filter(filter(x.s, circle), nand[green,rectangle])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:nand[%s,%s];4:green;4:rectangle;3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(x.s, and[size2,size2]), not[blue])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:size2;4:not[%s];4:blue
'λx.apply(and[triangle,nand[triangle,size1]],iota(filter(filter(filter(x.s, yellow), green), size2)))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:nand[%s,%s];4:triangle;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green;4:size2
'λx.apply(and[apply(same_color,x.o),and[not[circle],triangle]],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:not[%s];4:circle;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(size2, filter(filter(x.s, triangle), circle))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle
'λx.apply(and[triangle,or[and[rectangle,blue],size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:blue;4:size3;1:%s.o;2:x
'λx.apply(nor[yellow,size1],iota(filter(filter(filter(x.s, and[rectangle,nand[circle,circle]]), not[or[or[green,size2],green]]), size3)))'	0:apply(%s,%s);4:nor[%s,%s];4:yellow;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:nand[%s,%s];4:circle;4:circle;4:not[%s];4:or[%s,%s];4:or[%s,%s];4:green;4:size2;4:green;4:size3
'λx.apply(blue,iota(filter(filter(x.s, circle), apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.exists(or[and[size1,blue],not[triangle]], filter(filter(filter(filter(filter(x.s, and[triangle,rectangle]), and[triangle,rectangle]), or[apply(size-leq,iota(filter(filter(filter(filter(x.s, iff[triangle,green]), and[green,and[rectangle,triangle]]), size1), or[and[or[triangle,yellow],triangle],not[or[circle,size1]]]))),and[green,rectangle]]), size1), triangle))'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:size1;4:blue;4:not[%s];4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:rectangle;4:and[%s,%s];4:triangle;4:rectangle;4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:triangle;4:green;4:and[%s,%s];4:green;4:and[%s,%s];4:rectangle;4:triangle;4:size1;4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:triangle;4:yellow;4:triangle;4:not[%s];4:or[%s,%s];4:circle;4:size1;4:and[%s,%s];4:green;4:rectangle;4:size1;4:triangle
'λx.empty(filter(filter(filter(x.s, size3), triangle), not[rectangle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle;4:not[%s];4:rectangle
'λx.contains(iota(filter(x.s, not[green])), filter(filter(x.s, not[size1]), yellow))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:yellow
'λx.apply(or[and[circle,size1],circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:circle;4:size1;4:circle;1:%s.o;2:x
'λx.apply(not[and[or[size2,green],rectangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:or[%s,%s];4:size2;4:green;4:rectangle;1:%s.o;2:x
'λx.contains(iota(x.s), filter(x.s, not[circle]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.apply(rectangle,iota(filter(filter(x.s, not[or[or[rectangle,nor[blue,size2]],yellow]]), apply(same_color,x.o))))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:or[%s,%s];4:rectangle;4:nor[%s,%s];4:blue;4:size2;4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(filter(x.s, not[size2]), and[and[triangle,rectangle],triangle]), size2)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:triangle;4:rectangle;4:triangle;4:size2
'λx.apply(or[apply(size-lt,x.o),circle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[rectangle,and[not[rectangle],triangle]],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:not[%s];4:rectangle;4:triangle;4:rectangle;1:%s.o;2:x
'λx.apply(implies[size3,size3],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size3;4:size3;1:%s.o;2:x
'λx.forall(green,filter(filter(filter(filter(x.s, size1), apply(same_color,x.o)), green), circle))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green;4:circle
'λx.apply(triangle,iota(filter(filter(filter(x.s, circle), yellow), blue)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow;4:blue
'λx.empty(filter(x.s, and[yellow,or[rectangle,triangle]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:or[%s,%s];4:rectangle;4:triangle
'λx.apply(not[size1],iota(filter(filter(x.s, circle), not[size1])))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:size1
'λx.apply(triangle,iota(filter(filter(filter(x.s, circle), apply(size-geq,x.o)), nor[and[size2,size1],and[not[green],triangle]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:nor[%s,%s];4:and[%s,%s];4:size2;4:size1;4:and[%s,%s];4:not[%s];4:green;4:triangle
'λx.apply(yellow,iota(filter(filter(x.s, or[circle,and[and[nand[circle,rectangle],and[rectangle,or[size1,circle]]],size2]]), rectangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:circle;4:rectangle;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:size1;4:circle;4:size2;4:rectangle
'λx.apply(and[and[size2,size3],yellow],iota(filter(filter(x.s, triangle), size2)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size2;4:size3;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2
'λx.apply(and[or[not[and[blue,size3]],size3],green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:not[%s];4:and[%s,%s];4:blue;4:size3;4:size3;4:green;1:iota(%s);3:%s.s;2:x
'λx.exists(not[apply(same_color,x.o)], filter(x.s, green))'	0:exists(%s, %s);4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.contains(x.o, filter(filter(x.s, or[rectangle,yellow]), apply(same_size,x.o)))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(and[triangle,and[size1,apply(same_shape,iota(filter(x.s, size2)))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;1:%s.o;2:x
'λx.apply(apply(same_color,iota(filter(x.s, green))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;1:%s.o;2:x
'λx.apply(or[size2,and[size3,triangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:and[%s,%s];4:size3;4:triangle;1:%s.o;2:x
'λx.apply(implies[and[not[size1],circle],or[circle,rectangle]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:not[%s];4:size1;4:circle;4:or[%s,%s];4:circle;4:rectangle;1:%s.o;2:x
'λx.empty(filter(x.s, implies[size2,not[rectangle]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size2;4:not[%s];4:rectangle
'λx.apply(nor[apply(same_size,iota(x.s)),blue],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.exists(implies[size3,or[nand[apply(same_shape,iota(x.s)),or[size1,triangle]],green]], x.s)'	0:exists(%s, %s);4:implies[%s,%s];4:size3;4:or[%s,%s];4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:triangle;4:green;3:%s.s;2:x
'λx.exists(and[not[yellow],rectangle], filter(filter(x.s, rectangle), and[size2,green]))'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:yellow;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:size2;4:green
'λx.apply(triangle,iota(filter(filter(x.s, green), triangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:triangle
'λx.apply(iff[and[rectangle,yellow],size1],iota(filter(x.s, not[and[size1,and[or[size1,triangle],rectangle]]])))'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:rectangle;4:yellow;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:or[%s,%s];4:size1;4:triangle;4:rectangle
'λx.apply(nand[green,apply(size-lt,x.o)],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:green;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(or[blue,blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:blue;1:%s.o;2:x
'λx.apply(implies[not[size3],rectangle],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:not[%s];4:size3;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(size-geq,x.o),iota(filter(filter(filter(filter(x.s, yellow), size1), green), size3)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;4:green;4:size3
'λx.apply(or[and[not[size1],yellow],and[blue,size2]],iota(filter(filter(x.s, green), size2)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:not[%s];4:size1;4:yellow;4:and[%s,%s];4:blue;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size2
'λx.exists(or[yellow,and[and[size2,triangle],size1]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:yellow;4:and[%s,%s];4:and[%s,%s];4:size2;4:triangle;4:size1;3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, apply(same_color,x.o)), and[apply(same_size,iota(x.s)),rectangle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:rectangle
'λx.apply(iff[nand[circle,triangle],size1],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:nand[%s,%s];4:circle;4:triangle;4:size1;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(x.s, rectangle), and[yellow,rectangle]), size1), and[blue,circle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:yellow;4:rectangle;4:size1;4:and[%s,%s];4:blue;4:circle
'λx.apply(apply(size-geq,iota(filter(filter(filter(x.s, green), and[blue,or[size3,size1]]), blue))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:blue;4:or[%s,%s];4:size3;4:size1;4:blue;1:%s.o;2:x
'λx.apply(implies[or[size2,implies[rectangle,nand[nor[and[size2,green],apply(same_shape,iota(x.s))],not[blue]]]],circle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:or[%s,%s];4:size2;4:implies[%s,%s];4:rectangle;4:nand[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:size2;4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:not[%s];4:blue;4:circle;1:%s.o;2:x
'λx.forall(not[blue],filter(x.s, yellow))'	0:forall(%s,%s);4:not[%s];4:blue;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(or[blue,not[or[nor[rectangle,yellow],blue]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:not[%s];4:or[%s,%s];4:nor[%s,%s];4:rectangle;4:yellow;4:blue;1:iota(%s);3:%s.s;2:x
'λx.forall(size3,filter(x.s, triangle))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.forall(size1,filter(x.s, triangle))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(iff[apply(size-geq,iota(filter(x.s, apply(same_shape,iota(filter(filter(x.s, size2), not[nor[size2,size2]])))))),nor[triangle,circle]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:not[%s];4:nor[%s,%s];4:size2;4:size2;4:nor[%s,%s];4:triangle;4:circle;1:%s.o;2:x
'λx.empty(filter(x.s, not[apply(same_color,x.o)]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(and[or[or[and[apply(same_shape,iota(filter(x.s, triangle))),triangle],blue],rectangle],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:triangle;4:blue;4:rectangle;4:rectangle;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, and[and[not[circle],yellow],and[apply(same_size,iota(x.s)),rectangle]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:circle;4:yellow;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:rectangle
'λx.apply(or[apply(same_color,x.o),or[size2,size3]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:or[%s,%s];4:size2;4:size3;1:iota(%s);3:%s.s;2:x
'λx.forall(and[triangle,and[circle,size2]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:circle;4:size2;3:%s.s;2:x
'λx.forall(implies[size1,or[rectangle,circle]],filter(filter(x.s, blue), size2))'	0:forall(%s,%s);4:implies[%s,%s];4:size1;4:or[%s,%s];4:rectangle;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2
'λx.apply(not[or[nand[size1,implies[circle,size1]],yellow]],iota(filter(x.s, green)))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:nand[%s,%s];4:size1;4:implies[%s,%s];4:circle;4:size1;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(triangle,x.o)'	0:apply(%s,%s);4:triangle;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(filter(x.s, not[size2]), yellow), blue)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:yellow;4:blue
'λx.apply(and[circle,circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:circle;1:%s.o;2:x
'λx.contains(iota(filter(x.s, yellow)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;3:%s.s;2:x
'λx.exists(circle, filter(filter(x.s, triangle), blue))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue
'λx.apply(and[yellow,green],iota(filter(filter(x.s, rectangle), size3)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3
'λx.apply(nor[yellow,and[yellow,green]],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:yellow;4:and[%s,%s];4:yellow;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[and[size1,rectangle],nand[and[size3,blue],size3]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:size1;4:rectangle;4:nand[%s,%s];4:and[%s,%s];4:size3;4:blue;4:size3;1:%s.o;2:x
'λx.forall(implies[size1,apply(same_color,x.o)],x.s)'	0:forall(%s,%s);4:implies[%s,%s];4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(filter(x.s, circle), rectangle), size2)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle;4:size2
'λx.forall(iff[circle,or[size2,size1]],filter(filter(filter(x.s, triangle), nand[circle,and[and[green,blue],green]]), size1))'	0:forall(%s,%s);4:iff[%s,%s];4:circle;4:or[%s,%s];4:size2;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:nand[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:green;4:blue;4:green;4:size1
'λx.empty(filter(x.s, and[green,green]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:green
'λx.apply(yellow,iota(filter(x.s, implies[rectangle,circle])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:rectangle;4:circle
'λx.apply(or[yellow,blue],iota(filter(filter(filter(filter(x.s, and[size1,rectangle]), green), yellow), and[size2,iff[size1,or[nor[not[size2],and[not[and[and[rectangle,not[not[or[triangle,and[triangle,not[apply(same_shape,iota(filter(filter(x.s, not[rectangle]), green)))]]]]]],blue]],size3]],not[or[green,green]]]]])))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:rectangle;4:green;4:yellow;4:and[%s,%s];4:size2;4:iff[%s,%s];4:size1;4:or[%s,%s];4:nor[%s,%s];4:not[%s];4:size2;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:not[%s];4:not[%s];4:or[%s,%s];4:triangle;4:and[%s,%s];4:triangle;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;4:green;4:blue;4:size3;4:not[%s];4:or[%s,%s];4:green;4:green
'λx.apply(or[apply(size-lt,iota(x.s)),and[or[triangle,and[circle,size1]],rectangle]],iota(filter(filter(filter(filter(x.s, blue), and[yellow,size3]), circle), or[apply(size-leq,x.o),and[or[circle,rectangle],rectangle]])))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:triangle;4:and[%s,%s];4:circle;4:size1;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:yellow;4:size3;4:circle;4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:and[%s,%s];4:or[%s,%s];4:circle;4:rectangle;4:rectangle
'λx.apply(and[or[rectangle,yellow],or[nand[triangle,apply(same_size,iota(filter(x.s, size1)))],circle]],iota(filter(filter(filter(filter(filter(filter(x.s, triangle), and[rectangle,size1]), green), triangle), and[implies[blue,size1],and[rectangle,nor[size3,blue]]]), size1)))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:rectangle;4:yellow;4:or[%s,%s];4:nand[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:rectangle;4:size1;4:green;4:triangle;4:and[%s,%s];4:implies[%s,%s];4:blue;4:size1;4:and[%s,%s];4:rectangle;4:nor[%s,%s];4:size3;4:blue;4:size1
'λx.apply(or[iff[circle,apply(size-leq,iota(x.s))],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:iff[%s,%s];4:circle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.apply(and[blue,apply(same_size,iota(filter(filter(filter(filter(filter(x.s, size1), green), triangle), not[circle]), circle)))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green;4:triangle;4:not[%s];4:circle;4:circle;1:%s.o;2:x
'λx.apply(apply(same_color,iota(filter(x.s, iff[nor[rectangle,and[yellow,triangle]],size3]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:nor[%s,%s];4:rectangle;4:and[%s,%s];4:yellow;4:triangle;4:size3;1:%s.o;2:x
'λx.apply(not[nand[triangle,green]],x.o)'	0:apply(%s,%s);4:not[%s];4:nand[%s,%s];4:triangle;4:green;1:%s.o;2:x
'λx.apply(and[and[size2,and[iff[or[apply(same_shape,x.o),size3],and[rectangle,blue]],rectangle]],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3;4:and[%s,%s];4:rectangle;4:blue;4:rectangle;4:yellow;1:%s.o;2:x
'λx.apply(and[not[yellow],yellow],iota(filter(filter(filter(x.s, rectangle), rectangle), circle)))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:yellow;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle;4:circle
'λx.contains(iota(filter(x.s, blue)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;3:%s.s;2:x
'λx.apply(and[green,size3],iota(filter(x.s, and[nor[size2,and[and[yellow,triangle],blue]],and[size2,size1]])))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:yellow;4:triangle;4:blue;4:and[%s,%s];4:size2;4:size1
'λx.apply(not[circle],iota(filter(filter(x.s, size3), and[size3,circle])))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:size3;4:circle
'λx.contains(x.o, filter(x.s, rectangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.contains(iota(x.s), filter(x.s, or[or[blue,and[triangle,rectangle]],green]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:blue;4:and[%s,%s];4:triangle;4:rectangle;4:green
'λx.apply(not[nand[size3,size1]],x.o)'	0:apply(%s,%s);4:not[%s];4:nand[%s,%s];4:size3;4:size1;1:%s.o;2:x
'λx.apply(implies[triangle,and[size1,not[or[and[size2,rectangle],apply(size-lt,iota(x.s))]]]],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:implies[%s,%s];4:triangle;4:and[%s,%s];4:size1;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:size2;4:rectangle;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.forall(green,filter(filter(x.s, circle), or[circle,blue]))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:circle;4:blue
'λx.apply(size3,iota(filter(filter(x.s, circle), triangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle
'λx.apply(and[not[circle],and[size2,size2]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:circle;4:and[%s,%s];4:size2;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(x.s, and[rectangle,and[and[size1,rectangle],yellow]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:size1;4:rectangle;4:yellow
'λx.forall(apply(same_shape,x.o),filter(x.s, size2))'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(and[triangle,and[size3,blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:size3;4:blue;1:%s.o;2:x
'λx.apply(nor[circle,implies[or[not[and[apply(same_shape,iota(x.s)),blue]],blue],triangle]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:circle;4:implies[%s,%s];4:or[%s,%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:blue;4:blue;4:triangle;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(filter(x.s, or[triangle,rectangle]), yellow), and[blue,blue])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:rectangle;4:yellow;4:and[%s,%s];4:blue;4:blue
'λx.apply(yellow,iota(filter(filter(x.s, nor[and[and[or[circle,and[green,nor[circle,and[rectangle,size2]]]],size1],blue],size2]), green)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:circle;4:and[%s,%s];4:green;4:nor[%s,%s];4:circle;4:and[%s,%s];4:rectangle;4:size2;4:size1;4:blue;4:size2;4:green
'λx.apply(triangle,iota(filter(x.s, and[not[size3],circle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:size3;4:circle
'λx.apply(or[size3,yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:yellow;1:%s.o;2:x
'λx.apply(or[implies[size2,rectangle],size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:implies[%s,%s];4:size2;4:rectangle;4:size1;1:%s.o;2:x
'λx.apply(nor[triangle,size2],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:nor[%s,%s];4:triangle;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[or[rectangle,apply(size-gt,iota(x.s))],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:yellow;1:%s.o;2:x
'λx.apply(or[size2,apply(same_color,iota(x.s))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(or[implies[and[size3,iff[blue,implies[triangle,size3]]],nor[or[size3,circle],and[or[triangle,triangle],nor[size1,size1]]]],size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:size3;4:iff[%s,%s];4:blue;4:implies[%s,%s];4:triangle;4:size3;4:nor[%s,%s];4:or[%s,%s];4:size3;4:circle;4:and[%s,%s];4:or[%s,%s];4:triangle;4:triangle;4:nor[%s,%s];4:size1;4:size1;4:size2;1:%s.o;2:x
'λx.apply(and[circle,apply(same_shape,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, rectangle), yellow), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:yellow;4:circle
'λx.apply(rectangle,iota(filter(filter(x.s, size3), or[or[and[apply(same_shape,x.o),size2],blue],rectangle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2;4:blue;4:rectangle
'λx.apply(circle,iota(filter(filter(x.s, size2), size1)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1
'λx.apply(circle,iota(filter(filter(x.s, size1), size1)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1
'λx.apply(and[or[blue,apply(same_shape,x.o)],apply(same_size,iota(filter(filter(x.s, apply(same_shape,x.o)), and[size1,not[rectangle]])))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:size1;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.apply(apply(same_size,iota(filter(x.s, or[blue,and[size3,nor[and[blue,rectangle],size3]]]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:and[%s,%s];4:size3;4:nor[%s,%s];4:and[%s,%s];4:blue;4:rectangle;4:size3;1:%s.o;2:x
'λx.exists(apply(size-gt,iota(x.s)), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(and[size2,or[apply(same_size,iota(x.s)),triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:triangle;1:%s.o;2:x
'λx.exists(blue, filter(filter(filter(filter(filter(filter(filter(filter(x.s, size3), size3), and[triangle,yellow]), blue), triangle), yellow), or[implies[size2,rectangle],implies[or[blue,nand[size3,green]],yellow]]), blue))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3;4:and[%s,%s];4:triangle;4:yellow;4:blue;4:triangle;4:yellow;4:or[%s,%s];4:implies[%s,%s];4:size2;4:rectangle;4:implies[%s,%s];4:or[%s,%s];4:blue;4:nand[%s,%s];4:size3;4:green;4:yellow;4:blue
'λx.forall(size3,filter(x.s, or[blue,nand[not[size3],apply(same_color,x.o)]]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:nand[%s,%s];4:not[%s];4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(and[not[size1],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size1;4:size2;1:%s.o;2:x
'λx.apply(and[not[size1],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size1;4:size1;1:%s.o;2:x
'λx.apply(nand[rectangle,yellow],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:rectangle;4:yellow;1:%s.o;2:x
'λx.apply(not[apply(size-gt,iota(x.s))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(filter(filter(x.s, size3), rectangle), size3), rectangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle;4:size3;4:rectangle
'λx.exists(and[size1,not[and[and[circle,size1],apply(size-geq,iota(x.s))]]], filter(filter(x.s, size1), size1))'	0:exists(%s, %s);4:and[%s,%s];4:size1;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:size1;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1
'λx.exists(and[blue,apply(same_shape,iota(filter(x.s, size3)))], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;3:%s.s;2:x
'λx.apply(circle,iota(filter(x.s, and[size1,apply(same_shape,x.o)])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(filter(x.s, yellow), green), and[and[circle,and[size2,yellow]],rectangle]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green;4:and[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:size2;4:yellow;4:rectangle
'λx.apply(triangle,iota(filter(filter(filter(x.s, yellow), apply(same_color,x.o)), not[yellow])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:yellow
'λx.apply(blue,iota(filter(filter(filter(filter(x.s, and[triangle,yellow]), or[not[rectangle],circle]), nor[green,rectangle]), blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:yellow;4:or[%s,%s];4:not[%s];4:rectangle;4:circle;4:nor[%s,%s];4:green;4:rectangle;4:blue
'λx.forall(size3,filter(x.s, and[not[triangle],not[apply(same_size,iota(x.s))]]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:triangle;4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(x.s, apply(same_size,iota(filter(x.s, green)))))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(or[green,and[or[yellow,not[size3]],size2]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:and[%s,%s];4:or[%s,%s];4:yellow;4:not[%s];4:size3;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_size,x.o),iota(filter(filter(filter(x.s, yellow), green), not[size3])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green;4:not[%s];4:size3
'λx.apply(apply(size-lt,x.o),iota(filter(x.s, not[rectangle])))'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle
'λx.apply(blue,iota(filter(x.s, apply(size-gt,x.o))))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.apply(or[size3,rectangle],iota(filter(filter(x.s, blue), blue)))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue
'λx.apply(or[not[blue],and[size1,rectangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:blue;4:and[%s,%s];4:size1;4:rectangle;1:%s.o;2:x
'λx.apply(implies[blue,iff[size1,not[size3]]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:blue;4:iff[%s,%s];4:size1;4:not[%s];4:size3;1:iota(%s);3:%s.s;2:x
'λx.exists(or[nand[rectangle,yellow],and[nand[green,not[and[apply(size-lt,x.o),nand[apply(same_size,iota(x.s)),blue]]]],blue]], filter(filter(filter(x.s, size3), and[blue,nor[or[rectangle,or[or[yellow,triangle],size2]],apply(size-gt,iota(filter(x.s, and[implies[yellow,size1],size3])))]]), apply(size-lt,iota(x.s))))'	0:exists(%s, %s);4:or[%s,%s];4:nand[%s,%s];4:rectangle;4:yellow;4:and[%s,%s];4:nand[%s,%s];4:green;4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:nand[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:blue;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:blue;4:nor[%s,%s];4:or[%s,%s];4:rectangle;4:or[%s,%s];4:or[%s,%s];4:yellow;4:triangle;4:size2;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:implies[%s,%s];4:yellow;4:size1;4:size3;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(x.s, apply(size-gt,x.o))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.forall(triangle,filter(x.s, or[size2,not[size2]]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:not[%s];4:size2
'λx.apply(implies[triangle,apply(same_size,iota(x.s))],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.forall(and[circle,size2],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:circle;4:size2;3:%s.s;2:x
'λx.apply(and[size1,apply(size-geq,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(and[triangle,not[yellow]],iota(filter(filter(x.s, size1), size1)))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1
'λx.apply(and[or[not[triangle],blue],size2],iota(filter(filter(filter(filter(x.s, triangle), rectangle), not[blue]), size1)))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:not[%s];4:triangle;4:blue;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle;4:not[%s];4:blue;4:size1
'λx.apply(not[triangle],iota(filter(filter(filter(filter(x.s, not[not[circle]]), or[and[triangle,and[size2,green]],size1]), not[iff[or[size2,blue],triangle]]), implies[size2,and[or[apply(size-leq,x.o),not[size1]],size2]])))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:circle;4:or[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:size2;4:green;4:size1;4:not[%s];4:iff[%s,%s];4:or[%s,%s];4:size2;4:blue;4:triangle;4:implies[%s,%s];4:size2;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:not[%s];4:size1;4:size2
'λx.apply(triangle,iota(filter(filter(x.s, rectangle), and[and[and[and[blue,size2],and[and[size1,apply(same_shape,iota(filter(x.s, size3)))],green]],size1],size3])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:size2;4:and[%s,%s];4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green;4:size1;4:size3
'λx.forall(and[blue,size3],filter(x.s, size1))'	0:forall(%s,%s);4:and[%s,%s];4:blue;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(triangle, filter(x.s, blue))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(blue,iota(filter(filter(x.s, apply(same_color,iota(x.s))), green)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:green
'λx.apply(rectangle,iota(filter(filter(filter(filter(x.s, triangle), size3), or[yellow,yellow]), circle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3;4:or[%s,%s];4:yellow;4:yellow;4:circle
'λx.exists(triangle, filter(x.s, and[size2,size1]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:size1
'λx.forall(not[green],filter(x.s, or[green,and[blue,or[size3,size1]]]))'	0:forall(%s,%s);4:not[%s];4:green;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:and[%s,%s];4:blue;4:or[%s,%s];4:size3;4:size1
'λx.apply(and[rectangle,apply(same_size,x.o)],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size2,nand[blue,implies[blue,not[apply(size-geq,iota(x.s))]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:nand[%s,%s];4:blue;4:implies[%s,%s];4:blue;4:not[%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.exists(triangle, filter(filter(filter(x.s, triangle), green), and[size3,iff[size3,rectangle]]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green;4:and[%s,%s];4:size3;4:iff[%s,%s];4:size3;4:rectangle
'λx.contains(iota(filter(x.s, and[rectangle,yellow])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:yellow;3:%s.s;2:x
'λx.apply(or[blue,and[size3,or[yellow,circle]]],iota(filter(filter(filter(filter(x.s, blue), triangle), size2), not[green])))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:and[%s,%s];4:size3;4:or[%s,%s];4:yellow;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle;4:size2;4:not[%s];4:green
'λx.apply(and[apply(same_size,iota(filter(filter(filter(filter(x.s, blue), apply(same_color,x.o)), not[yellow]), size2))),size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:yellow;4:size2;4:size3;1:%s.o;2:x
'λx.apply(yellow,iota(filter(x.s, and[rectangle,size3])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:size3
'λx.apply(not[and[implies[size2,and[size3,size2]],and[not[not[and[green,circle]]],nor[triangle,and[rectangle,size1]]]]],iota(filter(x.s, apply(same_shape,iota(x.s)))))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:implies[%s,%s];4:size2;4:and[%s,%s];4:size3;4:size2;4:and[%s,%s];4:not[%s];4:not[%s];4:and[%s,%s];4:green;4:circle;4:nor[%s,%s];4:triangle;4:and[%s,%s];4:rectangle;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.exists(apply(size-leq,iota(x.s)), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.exists(not[nor[size3,blue]], x.s)'	0:exists(%s, %s);4:not[%s];4:nor[%s,%s];4:size3;4:blue;3:%s.s;2:x
'λx.contains(x.o, filter(x.s, nand[not[nor[size3,size2]],and[circle,apply(same_shape,x.o)]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:not[%s];4:nor[%s,%s];4:size3;4:size2;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.forall(not[size1],filter(x.s, circle))'	0:forall(%s,%s);4:not[%s];4:size1;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(not[blue],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(and[not[size1],or[or[implies[nand[circle,blue],and[green,or[triangle,not[blue]]]],and[implies[and[triangle,iff[triangle,circle]],apply(same_shape,iota(filter(x.s, or[and[not[circle],and[green,triangle]],or[rectangle,triangle]])))],size2]],apply(size-gt,x.o)]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size1;4:or[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:nand[%s,%s];4:circle;4:blue;4:and[%s,%s];4:green;4:or[%s,%s];4:triangle;4:not[%s];4:blue;4:and[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:triangle;4:iff[%s,%s];4:triangle;4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:circle;4:and[%s,%s];4:green;4:triangle;4:or[%s,%s];4:rectangle;4:triangle;4:size2;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(not[or[implies[or[nand[size1,yellow],blue],blue],blue]],iota(filter(x.s, not[and[size1,size3]])))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:nand[%s,%s];4:size1;4:yellow;4:blue;4:blue;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:size1;4:size3
'λx.apply(or[triangle,size3],iota(filter(filter(x.s, nor[iff[or[size1,triangle],yellow],not[blue]]), yellow)))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:size1;4:triangle;4:yellow;4:not[%s];4:blue;4:yellow
'λx.empty(filter(filter(filter(filter(x.s, size2), blue), size2), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue;4:size2;4:triangle
'λx.apply(apply(same_size,iota(x.s)),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size3,and[green,or[blue,iff[rectangle,rectangle]]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:and[%s,%s];4:green;4:or[%s,%s];4:blue;4:iff[%s,%s];4:rectangle;4:rectangle;1:%s.o;2:x
'λx.apply(nor[yellow,green],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:yellow;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(not[blue],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.contains(x.o, filter(filter(filter(filter(filter(filter(x.s, and[and[iff[size1,size3],not[and[blue,and[size2,green]]]],or[yellow,size3]]), apply(same_size,x.o)), and[size1,triangle]), size2), blue), rectangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:size1;4:size3;4:not[%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:size2;4:green;4:or[%s,%s];4:yellow;4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:size1;4:triangle;4:size2;4:blue;4:rectangle
'λx.exists(rectangle, filter(filter(filter(filter(filter(x.s, not[apply(same_shape,iota(x.s))]), triangle), yellow), blue), size1))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle;4:yellow;4:blue;4:size1
'λx.apply(not[iff[rectangle,or[size2,and[triangle,and[yellow,yellow]]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:iff[%s,%s];4:rectangle;4:or[%s,%s];4:size2;4:and[%s,%s];4:triangle;4:and[%s,%s];4:yellow;4:yellow;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, size1), and[size1,not[yellow]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:size1;4:not[%s];4:yellow;3:%s.s;2:x
'λx.apply(not[and[apply(same_size,iota(x.s)),and[and[apply(same_shape,x.o),blue],circle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue;4:circle;1:%s.o;2:x
'λx.apply(or[apply(same_size,iota(x.s)),blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(filter(filter(filter(x.s, triangle), not[green]), size1), rectangle), not[yellow]), triangle), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:not[%s];4:green;4:size1;4:rectangle;4:not[%s];4:yellow;4:triangle;4:size1
'λx.apply(or[size3,apply(size-gt,x.o)],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, and[implies[blue,circle],yellow]), and[and[circle,size1],nand[and[apply(size-leq,x.o),apply(same_color,iota(filter(x.s, yellow)))],rectangle]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:implies[%s,%s];4:blue;4:circle;4:yellow;4:and[%s,%s];4:and[%s,%s];4:circle;4:size1;4:nand[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle
'λx.apply(or[size2,yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:yellow;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(filter(x.s, size1), size2), yellow)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2;4:yellow
'λx.apply(size2,iota(filter(filter(filter(x.s, size1), size2), yellow)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2;4:yellow
'λx.apply(nor[iff[rectangle,rectangle],blue],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:iff[%s,%s];4:rectangle;4:rectangle;4:blue;1:%s.o;2:x
'λx.empty(filter(filter(x.s, yellow), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green
'λx.empty(filter(filter(x.s, yellow), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size3
'λx.empty(filter(filter(x.s, yellow), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1
'λx.empty(filter(filter(x.s, yellow), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2
'λx.apply(nand[circle,rectangle],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:nand[%s,%s];4:circle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(or[size1,size3],iota(filter(filter(filter(filter(x.s, green), not[size2]), not[and[size3,or[triangle,green]]]), apply(same_shape,iota(x.s)))))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:size2;4:not[%s];4:and[%s,%s];4:size3;4:or[%s,%s];4:triangle;4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(filter(filter(filter(filter(x.s, blue), blue), or[size2,circle]), not[and[triangle,nand[rectangle,triangle]]]), size3), circle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue;4:or[%s,%s];4:size2;4:circle;4:not[%s];4:and[%s,%s];4:triangle;4:nand[%s,%s];4:rectangle;4:triangle;4:size3;4:circle
'λx.apply(not[and[triangle,green]],iota(filter(x.s, and[green,nand[not[green],rectangle]])))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:triangle;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:nand[%s,%s];4:not[%s];4:green;4:rectangle
'λx.apply(nor[size1,size3],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:nor[%s,%s];4:size1;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(and[not[rectangle],circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:rectangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.forall(green,filter(x.s, and[blue,triangle]))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:triangle
'λx.apply(iff[rectangle,or[blue,size1]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:rectangle;4:or[%s,%s];4:blue;4:size1;1:%s.o;2:x
'λx.apply(iff[triangle,blue],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:triangle;4:blue;1:%s.o;2:x
'λx.exists(and[size1,circle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:size1;4:circle;3:%s.s;2:x
'λx.forall(circle,filter(x.s, and[size1,yellow]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:yellow
'λx.apply(or[size2,nor[size3,size1]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:nor[%s,%s];4:size3;4:size1;1:%s.o;2:x
'λx.apply(nor[size2,size1],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:nor[%s,%s];4:size2;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.forall(green,filter(filter(x.s, or[not[and[and[size1,and[and[nor[size3,size3],apply(size-geq,iota(filter(x.s, size2)))],triangle]],triangle]],green]), green))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:size3;4:size3;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:triangle;4:triangle;4:green;4:green
'λx.apply(yellow,iota(filter(filter(filter(filter(filter(filter(filter(filter(filter(filter(x.s, and[or[and[yellow,and[not[yellow],apply(same_shape,iota(x.s))]],size1],yellow]), size1), or[not[or[green,and[rectangle,size2]]],and[blue,or[size2,size3]]]), size1), circle), rectangle), not[size2]), rectangle), apply(same_color,iota(filter(filter(x.s, not[size3]), blue)))), circle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:not[%s];4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size1;4:yellow;4:size1;4:or[%s,%s];4:not[%s];4:or[%s,%s];4:green;4:and[%s,%s];4:rectangle;4:size2;4:and[%s,%s];4:blue;4:or[%s,%s];4:size2;4:size3;4:size1;4:circle;4:rectangle;4:not[%s];4:size2;4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;4:blue;4:circle
'λx.apply(and[circle,blue],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.forall(and[and[and[triangle,and[size3,circle]],size1],yellow],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:size3;4:circle;4:size1;4:yellow;3:%s.s;2:x
'λx.apply(apply(same_size,x.o),iota(filter(filter(x.s, and[and[triangle,not[not[and[size1,size3]]]],or[apply(same_color,x.o),size1]]), circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:triangle;4:not[%s];4:not[%s];4:and[%s,%s];4:size1;4:size3;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1;4:circle
'λx.apply(nand[and[size1,size1],blue],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:size1;4:size1;4:blue;1:%s.o;2:x
'λx.apply(apply(same_color,iota(x.s)),iota(filter(x.s, size3)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(and[green,or[apply(same_shape,x.o),green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green;1:%s.o;2:x
'λx.apply(and[and[size2,green],or[blue,triangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size2;4:green;4:or[%s,%s];4:blue;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.forall(yellow,x.s)'	0:forall(%s,%s);4:yellow;3:%s.s;2:x
'λx.exists(triangle, filter(filter(filter(x.s, or[and[green,size1],triangle]), and[not[and[circle,green]],blue]), apply(same_color,iota(x.s))))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:green;4:size1;4:triangle;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:circle;4:green;4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(not[size3],iota(filter(filter(x.s, and[circle,implies[size3,blue]]), apply(size-lt,iota(filter(filter(x.s, or[size3,triangle]), or[size2,size2]))))))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:implies[%s,%s];4:size3;4:blue;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:triangle;4:or[%s,%s];4:size2;4:size2
'λx.apply(and[circle,triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:triangle;1:%s.o;2:x
'λx.apply(and[size3,and[not[apply(size-gt,x.o)],and[apply(same_color,iota(x.s)),apply(same_color,iota(x.s))]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(and[and[blue,green],implies[iff[size2,yellow],or[blue,not[size3]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:green;4:implies[%s,%s];4:iff[%s,%s];4:size2;4:yellow;4:or[%s,%s];4:blue;4:not[%s];4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[not[and[yellow,apply(same_shape,iota(filter(x.s, size1)))]],apply(same_shape,iota(x.s))],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(x.s, circle), or[not[not[rectangle]],size2])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:not[%s];4:not[%s];4:rectangle;4:size2
'λx.apply(green,iota(filter(filter(x.s, circle), and[apply(same_size,x.o),not[nor[iff[circle,and[apply(same_size,iota(x.s)),green]],triangle]]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:not[%s];4:nor[%s,%s];4:iff[%s,%s];4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:green;4:triangle
'λx.apply(iff[yellow,nor[circle,or[yellow,size3]]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:yellow;4:nor[%s,%s];4:circle;4:or[%s,%s];4:yellow;4:size3;1:%s.o;2:x
'λx.apply(apply(same_color,iota(filter(x.s, and[triangle,green]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:green;1:%s.o;2:x
'λx.apply(not[nand[and[circle,yellow],not[not[size3]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:nand[%s,%s];4:and[%s,%s];4:circle;4:yellow;4:not[%s];4:not[%s];4:size3;1:%s.o;2:x
'λx.apply(not[triangle],x.o)'	0:apply(%s,%s);4:not[%s];4:triangle;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, or[apply(size-geq,iota(x.s)),nor[rectangle,size1]]), blue), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:nor[%s,%s];4:rectangle;4:size1;4:blue;4:blue
'λx.apply(apply(size-leq,iota(x.s)),iota(filter(x.s, apply(same_shape,x.o))))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.forall(not[triangle],filter(x.s, size3))'	0:forall(%s,%s);4:not[%s];4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.forall(not[triangle],filter(x.s, size2))'	0:forall(%s,%s);4:not[%s];4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.forall(yellow,filter(filter(x.s, not[not[blue]]), blue))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:blue;4:blue
'λx.apply(implies[and[not[nand[or[green,apply(size-geq,x.o)],yellow]],size1],green],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:not[%s];4:nand[%s,%s];4:or[%s,%s];4:green;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:yellow;4:size1;4:green;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(x.s, apply(same_shape,x.o)), or[size2,blue])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:size2;4:blue;3:%s.s;2:x
'λx.apply(not[not[apply(same_color,iota(x.s))]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(implies[apply(same_shape,x.o),blue],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(or[blue,size2],iota(filter(filter(filter(x.s, triangle), and[and[triangle,size1],triangle]), blue)))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:and[%s,%s];4:triangle;4:size1;4:triangle;4:blue
'λx.apply(rectangle,iota(filter(filter(x.s, triangle), not[circle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:not[%s];4:circle
'λx.apply(or[apply(same_color,iota(filter(filter(x.s, green), green))),blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:green;4:blue;1:%s.o;2:x
'λx.forall(yellow,filter(filter(filter(x.s, rectangle), and[blue,or[triangle,and[and[not[size1],size2],size1]]]), size1))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:blue;4:or[%s,%s];4:triangle;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size1;4:size2;4:size1;4:size1
'λx.apply(nor[not[and[green,triangle]],and[size1,green]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:not[%s];4:and[%s,%s];4:green;4:triangle;4:and[%s,%s];4:size1;4:green;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, size3), size3)), filter(filter(x.s, circle), not[green]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:green
'λx.apply(size3,iota(filter(filter(filter(filter(x.s, rectangle), not[blue]), nand[blue,apply(same_shape,x.o)]), implies[not[size3],and[and[and[rectangle,circle],triangle],size3]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:blue;4:nand[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:implies[%s,%s];4:not[%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:circle;4:triangle;4:size3
'λx.empty(filter(filter(x.s, blue), and[nor[apply(same_shape,iota(x.s)),green],size1]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:green;4:size1
'λx.apply(and[or[and[yellow,or[size3,and[green,nor[iff[rectangle,rectangle],blue]]]],size3],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:yellow;4:or[%s,%s];4:size3;4:and[%s,%s];4:green;4:nor[%s,%s];4:iff[%s,%s];4:rectangle;4:rectangle;4:blue;4:size3;4:green;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(x.s, and[and[green,or[size1,size3]],rectangle]), and[yellow,size3])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:green;4:or[%s,%s];4:size1;4:size3;4:rectangle;4:and[%s,%s];4:yellow;4:size3
'λx.apply(and[triangle,and[green,rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:green;4:rectangle;1:%s.o;2:x
'λx.exists(and[not[size1],size3], filter(x.s, and[size3,blue]))'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:size1;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:blue
'λx.apply(implies[yellow,blue],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:yellow;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[or[size1,yellow],not[rectangle]],iota(filter(x.s, iff[rectangle,rectangle])))'	0:apply(%s,%s);4:nand[%s,%s];4:or[%s,%s];4:size1;4:yellow;4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:rectangle;4:rectangle
'λx.forall(blue,filter(filter(filter(x.s, and[and[blue,apply(same_shape,iota(x.s))],circle]), and[blue,rectangle]), size2))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:blue;4:rectangle;4:size2
'λx.exists(size3, filter(filter(x.s, or[iff[and[not[blue],yellow],circle],or[green,nor[size1,triangle]]]), apply(same_size,iota(x.s))))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:not[%s];4:blue;4:yellow;4:circle;4:or[%s,%s];4:green;4:nor[%s,%s];4:size1;4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(x.s, apply(same_shape,iota(filter(x.s, or[yellow,rectangle]))))))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:rectangle
'λx.forall(and[triangle,iff[apply(same_color,x.o),green]],filter(filter(filter(x.s, and[yellow,size1]), and[and[yellow,circle],blue]), rectangle))'	0:forall(%s,%s);4:and[%s,%s];4:triangle;4:iff[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size1;4:and[%s,%s];4:and[%s,%s];4:yellow;4:circle;4:blue;4:rectangle
'λx.exists(and[and[and[blue,green],implies[nor[blue,rectangle],size2]],implies[rectangle,size1]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:green;4:implies[%s,%s];4:nor[%s,%s];4:blue;4:rectangle;4:size2;4:implies[%s,%s];4:rectangle;4:size1;3:%s.s;2:x
'λx.contains(iota(filter(x.s, implies[size3,circle])), filter(filter(filter(filter(filter(x.s, size3), not[green]), size1), blue), rectangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size3;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:green;4:size1;4:blue;4:rectangle
'λx.apply(and[iff[blue,and[blue,blue]],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:blue;4:and[%s,%s];4:blue;4:blue;4:yellow;1:%s.o;2:x
'λx.exists(and[size2,circle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:size2;4:circle;3:%s.s;2:x
'λx.empty(filter(filter(x.s, apply(same_shape,x.o)), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow
'λx.apply(not[triangle],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(or[triangle,size2],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(or[triangle,size1],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(filter(x.s, not[nor[yellow,or[size1,and[not[size1],rectangle]]]]), or[rectangle,blue]), triangle), and[not[size1],nand[size1,or[and[circle,yellow],circle]]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:nor[%s,%s];4:yellow;4:or[%s,%s];4:size1;4:and[%s,%s];4:not[%s];4:size1;4:rectangle;4:or[%s,%s];4:rectangle;4:blue;4:triangle;4:and[%s,%s];4:not[%s];4:size1;4:nand[%s,%s];4:size1;4:or[%s,%s];4:and[%s,%s];4:circle;4:yellow;4:circle
'λx.apply(yellow,iota(filter(x.s, apply(size-lt,x.o))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, apply(same_color,iota(filter(x.s, blue)))))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.exists(triangle, filter(x.s, implies[blue,triangle]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:blue;4:triangle
'λx.apply(and[blue,not[and[and[blue,triangle],yellow]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:triangle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.exists(rectangle, filter(filter(filter(filter(filter(filter(filter(filter(x.s, triangle), and[rectangle,size1]), green), triangle), and[implies[blue,size1],and[rectangle,nor[size3,blue]]]), size1), circle), circle))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:rectangle;4:size1;4:green;4:triangle;4:and[%s,%s];4:implies[%s,%s];4:blue;4:size1;4:and[%s,%s];4:rectangle;4:nor[%s,%s];4:size3;4:blue;4:size1;4:circle;4:circle
'λx.apply(not[and[and[apply(same_shape,iota(filter(x.s, or[or[size3,blue],green]))),size3],and[yellow,green]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:size3;4:blue;4:green;4:size3;4:and[%s,%s];4:yellow;4:green;1:%s.o;2:x
'λx.empty(filter(filter(x.s, not[iff[implies[rectangle,size2],size1]]), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:iff[%s,%s];4:implies[%s,%s];4:rectangle;4:size2;4:size1;4:size1
'λx.apply(apply(same_size,iota(filter(filter(x.s, size3), rectangle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle;1:%s.o;2:x
'λx.forall(yellow,filter(x.s, size2))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.forall(yellow,filter(x.s, size1))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(and[green,circle],iota(filter(x.s, and[and[or[not[apply(same_color,iota(x.s))],green],size1],size3])))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:green;4:size1;4:size3
'λx.apply(nor[size2,or[and[size1,or[size3,not[circle]]],triangle]],iota(filter(x.s, not[or[blue,or[apply(same_shape,iota(x.s)),circle]]])))'	0:apply(%s,%s);4:nor[%s,%s];4:size2;4:or[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:size3;4:not[%s];4:circle;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:blue;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle
'λx.contains(iota(filter(filter(filter(filter(filter(filter(x.s, size2), and[circle,and[circle,circle]]), rectangle), blue), apply(same_color,iota(x.s))), size3)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:circle;4:and[%s,%s];4:circle;4:circle;4:rectangle;4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size3;3:%s.s;2:x
'λx.apply(and[and[and[blue,not[yellow]],triangle],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:not[%s];4:yellow;4:triangle;4:triangle;1:%s.o;2:x
'λx.apply(implies[or[size3,apply(same_size,x.o)],nand[not[size1],green]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:nand[%s,%s];4:not[%s];4:size1;4:green;1:%s.o;2:x
'λx.forall(and[and[triangle,size3],implies[size2,rectangle]],filter(x.s, green))'	0:forall(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:size3;4:implies[%s,%s];4:size2;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.forall(triangle,filter(filter(filter(x.s, green), rectangle), size2))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle;4:size2
'λx.apply(not[and[apply(same_color,iota(filter(filter(x.s, and[triangle,triangle]), implies[circle,size1]))),circle]],iota(filter(x.s, green)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:triangle;4:implies[%s,%s];4:circle;4:size1;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.empty(filter(filter(x.s, rectangle), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle
'λx.apply(rectangle,iota(filter(filter(filter(filter(x.s, iff[yellow,and[rectangle,or[circle,blue]]]), not[nor[triangle,yellow]]), blue), not[rectangle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:yellow;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:circle;4:blue;4:not[%s];4:nor[%s,%s];4:triangle;4:yellow;4:blue;4:not[%s];4:rectangle
'λx.apply(and[and[not[rectangle],circle],or[size1,blue]],iota(filter(x.s, implies[size2,or[rectangle,or[apply(same_shape,x.o),blue]]])))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:rectangle;4:circle;4:or[%s,%s];4:size1;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size2;4:or[%s,%s];4:rectangle;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue
'λx.forall(not[triangle],x.s)'	0:forall(%s,%s);4:not[%s];4:triangle;3:%s.s;2:x
'λx.forall(size3,filter(filter(x.s, rectangle), circle))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle
'λx.apply(size2,iota(filter(filter(filter(x.s, rectangle), triangle), blue)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle;4:blue
'λx.apply(triangle,iota(filter(filter(filter(filter(x.s, or[and[size3,yellow],rectangle]), triangle), rectangle), iff[nand[triangle,blue],yellow])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size3;4:yellow;4:rectangle;4:triangle;4:rectangle;4:iff[%s,%s];4:nand[%s,%s];4:triangle;4:blue;4:yellow
'λx.apply(and[and[blue,and[size1,green]],apply(same_size,x.o)],iota(filter(filter(x.s, yellow), rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:size1;4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle
'λx.apply(and[circle,and[and[rectangle,not[not[apply(same_color,iota(filter(x.s, rectangle)))]]],nor[size1,size2]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:not[%s];4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:nor[%s,%s];4:size1;4:size2;1:%s.o;2:x
'λx.apply(iff[size1,nand[blue,green]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:size1;4:nand[%s,%s];4:blue;4:green;1:%s.o;2:x
'λx.apply(and[and[not[or[apply(size-gt,iota(x.s)),blue]],size3],apply(size-geq,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:blue;4:size3;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[nand[circle,implies[nor[iff[yellow,or[not[apply(same_size,iota(x.s))],rectangle]],not[circle]],or[green,circle]]],nand[size3,and[implies[and[circle,blue],implies[size1,size1]],triangle]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:circle;4:implies[%s,%s];4:nor[%s,%s];4:iff[%s,%s];4:yellow;4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:rectangle;4:not[%s];4:circle;4:or[%s,%s];4:green;4:circle;4:nand[%s,%s];4:size3;4:and[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:circle;4:blue;4:implies[%s,%s];4:size1;4:size1;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[or[and[yellow,green],and[size1,or[not[blue],triangle]]],size2],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:yellow;4:green;4:and[%s,%s];4:size1;4:or[%s,%s];4:not[%s];4:blue;4:triangle;4:size2;4:circle;1:%s.o;2:x
'λx.apply(and[and[or[and[yellow,size3],and[size1,rectangle]],size2],or[green,triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:yellow;4:size3;4:and[%s,%s];4:size1;4:rectangle;4:size2;4:or[%s,%s];4:green;4:triangle;1:%s.o;2:x
'λx.forall(apply(same_shape,x.o),filter(x.s, yellow))'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(yellow,iota(filter(filter(x.s, green), triangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:triangle
'λx.apply(triangle,iota(filter(filter(x.s, rectangle), size1)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1
'λx.contains(iota(filter(filter(x.s, circle), nand[not[nor[size3,size2]],and[apply(same_color,x.o),green]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:nand[%s,%s];4:not[%s];4:nor[%s,%s];4:size3;4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green;3:%s.s;2:x
'λx.contains(iota(filter(filter(filter(x.s, triangle), blue), rectangle)), filter(x.s, iff[rectangle,size2]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:rectangle;4:size2
'λx.apply(or[not[green],or[and[green,or[triangle,apply(same_shape,iota(x.s))]],nor[apply(same_shape,iota(filter(x.s, triangle))),and[and[rectangle,rectangle],or[apply(size-leq,x.o),circle]]]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:green;4:or[%s,%s];4:and[%s,%s];4:green;4:or[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:rectangle;4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:circle;1:%s.o;2:x
'λx.apply(and[blue,and[circle,rectangle]],iota(filter(filter(x.s, and[yellow,size1]), yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:circle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size1;4:yellow
'λx.apply(and[apply(same_shape,x.o),and[size1,size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:size1;4:size3;1:%s.o;2:x
'λx.exists(and[triangle,apply(same_color,iota(filter(x.s, circle)))], filter(filter(x.s, size2), apply(same_shape,iota(x.s))))'	0:exists(%s, %s);4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(x.s, size3), apply(size-leq,x.o))))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:apply(%s,%s);5:size-leq;1:%s.o;2:x
'λx.apply(not[blue],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(not[or[size3,apply(same_shape,x.o)]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.empty(filter(x.s, green))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.empty(filter(x.s, size1))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.empty(filter(x.s, size2))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.empty(filter(x.s, size3))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(size2,iota(filter(x.s, size2)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(size2,iota(filter(x.s, size1)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(size2,iota(filter(x.s, size3)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(size3,iota(filter(x.s, size2)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(size3,iota(filter(x.s, size1)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(size3,iota(filter(x.s, size3)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(size1,iota(filter(x.s, size2)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(size1,iota(filter(x.s, size1)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(size1,iota(filter(x.s, size3)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(size1,iota(filter(x.s, green)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(size3,iota(filter(x.s, green)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(size2,iota(filter(x.s, green)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(or[and[circle,and[iff[triangle,yellow],apply(size-lt,iota(filter(filter(filter(x.s, apply(size-gt,iota(x.s))), triangle), yellow)))]],circle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:iff[%s,%s];4:triangle;4:yellow;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:triangle;4:yellow;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[or[rectangle,and[and[iff[or[blue,and[size2,or[circle,not[size1]]]],and[yellow,size2]],not[and[implies[or[apply(same_size,iota(x.s)),apply(size-geq,x.o)],triangle],size1]]],circle]],not[rectangle]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:or[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:blue;4:and[%s,%s];4:size2;4:or[%s,%s];4:circle;4:not[%s];4:size1;4:and[%s,%s];4:yellow;4:size2;4:not[%s];4:and[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:triangle;4:size1;4:circle;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.forall(triangle,filter(x.s, yellow))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(nor[size2,implies[size2,green]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size2;4:implies[%s,%s];4:size2;4:green;1:%s.o;2:x
'λx.apply(nand[and[apply(same_size,iota(filter(x.s, nand[iff[size3,apply(size-gt,x.o)],blue]))),not[yellow]],or[size1,yellow]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:iff[%s,%s];4:size3;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:blue;4:not[%s];4:yellow;4:or[%s,%s];4:size1;4:yellow;1:%s.o;2:x
'λx.empty(filter(x.s, and[size3,and[or[yellow,and[yellow,apply(same_color,x.o)]],yellow]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:and[%s,%s];4:or[%s,%s];4:yellow;4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow
'λx.apply(and[and[not[apply(same_color,iota(x.s))],apply(same_color,x.o)],apply(same_shape,iota(x.s))],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[green,yellow],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:green;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[and[size2,and[blue,circle]],size2],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:blue;4:circle;4:size2;1:%s.o;2:x
'λx.apply(and[size3,circle],iota(filter(x.s, and[and[blue,size1],size2])))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:blue;4:size1;4:size2
'λx.apply(or[triangle,circle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, size3)), filter(filter(filter(x.s, apply(size-leq,x.o)), nor[or[implies[size3,rectangle],not[and[and[green,size1],blue]]],or[rectangle,circle]]), iff[blue,and[and[green,blue],nor[and[and[yellow,or[triangle,and[size1,and[and[blue,size1],green]]]],circle],nor[and[green,yellow],size2]]]]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:nor[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:size3;4:rectangle;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:green;4:size1;4:blue;4:or[%s,%s];4:rectangle;4:circle;4:iff[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:green;4:blue;4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:or[%s,%s];4:triangle;4:and[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:blue;4:size1;4:green;4:circle;4:nor[%s,%s];4:and[%s,%s];4:green;4:yellow;4:size2
'λx.exists(not[size2], filter(filter(x.s, iff[rectangle,size3]), size1))'	0:exists(%s, %s);4:not[%s];4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:rectangle;4:size3;4:size1
'λx.apply(and[yellow,circle],iota(filter(filter(filter(filter(x.s, size2), and[apply(same_size,iota(filter(x.s, size3))),blue]), and[nand[and[rectangle,size3],size2],size1]), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue;4:and[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:rectangle;4:size3;4:size2;4:size1;4:blue
'λx.apply(green,iota(filter(x.s, size1)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(green,iota(filter(x.s, size2)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(green,iota(filter(x.s, size3)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(green,iota(filter(x.s, green)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(or[rectangle,circle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.exists(size3, filter(filter(x.s, apply(same_color,iota(filter(filter(filter(filter(filter(filter(x.s, circle), yellow), or[and[and[or[and[triangle,apply(same_size,x.o)],or[size3,size3]],circle],or[size3,not[not[size2]]]],yellow]), green), or[size1,and[yellow,size3]]), size3)))), size2))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:size3;4:size3;4:circle;4:or[%s,%s];4:size3;4:not[%s];4:not[%s];4:size2;4:yellow;4:green;4:or[%s,%s];4:size1;4:and[%s,%s];4:yellow;4:size3;4:size3;4:size2
'λx.apply(and[rectangle,implies[and[blue,size1],size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:implies[%s,%s];4:and[%s,%s];4:blue;4:size1;4:size2;1:%s.o;2:x
'λx.apply(not[circle],iota(filter(x.s, and[rectangle,implies[implies[apply(size-geq,x.o),size2],and[and[size3,rectangle],nand[yellow,triangle]]]])))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:implies[%s,%s];4:implies[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:size2;4:and[%s,%s];4:and[%s,%s];4:size3;4:rectangle;4:nand[%s,%s];4:yellow;4:triangle
'λx.apply(apply(same_color,iota(filter(filter(filter(x.s, size3), and[size2,size3]), and[and[not[not[apply(same_size,x.o)]],not[or[green,rectangle]]],and[and[circle,size3],circle]]))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:size2;4:size3;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:not[%s];4:or[%s,%s];4:green;4:rectangle;4:and[%s,%s];4:and[%s,%s];4:circle;4:size3;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[not[or[size3,and[triangle,blue]]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:or[%s,%s];4:size3;4:and[%s,%s];4:triangle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[and[nand[size3,circle],yellow],size1],triangle],iota(filter(filter(x.s, apply(size-gt,x.o)), not[circle])))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:size3;4:circle;4:yellow;4:size1;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:not[%s];4:circle
'λx.apply(implies[blue,not[yellow]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:blue;4:not[%s];4:yellow;1:%s.o;2:x
'λx.apply(nor[size3,circle],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:size3;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(x.s, rectangle), apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(green,x.o)'	0:apply(%s,%s);4:green;1:%s.o;2:x
'λx.apply(or[rectangle,and[size3,or[size2,triangle]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:and[%s,%s];4:size3;4:or[%s,%s];4:size2;4:triangle;1:%s.o;2:x
'λx.exists(yellow, filter(filter(filter(filter(x.s, or[green,triangle]), circle), not[or[circle,rectangle]]), rectangle))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:triangle;4:circle;4:not[%s];4:or[%s,%s];4:circle;4:rectangle;4:rectangle
'λx.apply(or[and[size3,and[nand[green,or[apply(same_color,iota(filter(filter(filter(x.s, green), and[size1,and[apply(size-geq,iota(x.s)),triangle]]), not[green]))),circle]],green]],rectangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:nand[%s,%s];4:green;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:size1;4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:triangle;4:not[%s];4:green;4:circle;4:green;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[not[and[size3,and[not[blue],and[yellow,size2]]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:not[%s];4:blue;4:and[%s,%s];4:yellow;4:size2;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, and[circle,implies[size3,blue]]), apply(size-lt,iota(filter(filter(x.s, or[size3,triangle]), or[green,size2]))))), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:implies[%s,%s];4:size3;4:blue;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:triangle;4:or[%s,%s];4:green;4:size2;3:%s.s;2:x
'λx.apply(and[size1,rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:rectangle;1:%s.o;2:x
'λx.empty(filter(x.s, and[triangle,and[yellow,size1]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:and[%s,%s];4:yellow;4:size1
'λx.apply(apply(same_shape,iota(filter(x.s, or[triangle,triangle]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:triangle;1:%s.o;2:x
'λx.apply(and[implies[size2,and[rectangle,size3]],size3],iota(filter(filter(filter(x.s, rectangle), apply(same_color,x.o)), green)))'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:size2;4:and[%s,%s];4:rectangle;4:size3;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green
'λx.apply(not[nor[implies[and[apply(same_size,x.o),triangle],size2],size3]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:nor[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle;4:size2;4:size3;1:iota(%s);3:%s.s;2:x
'λx.forall(and[yellow,apply(size-gt,iota(filter(x.s, and[implies[or[apply(size-geq,x.o),or[triangle,size1]],triangle],yellow])))],filter(filter(x.s, rectangle), size3))'	0:forall(%s,%s);4:and[%s,%s];4:yellow;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:or[%s,%s];4:triangle;4:size1;4:triangle;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3
'λx.apply(and[circle,blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[size1,rectangle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:size1;4:rectangle;1:%s.o;2:x
'λx.apply(iff[apply(same_shape,iota(x.s)),green],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[size3,rectangle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:size3;4:rectangle;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, or[blue,size2])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:size2
'λx.apply(size2,x.o)'	0:apply(%s,%s);4:size2;1:%s.o;2:x
'λx.apply(size3,x.o)'	0:apply(%s,%s);4:size3;1:%s.o;2:x
'λx.apply(size1,x.o)'	0:apply(%s,%s);4:size1;1:%s.o;2:x
'λx.exists(implies[green,size3], filter(x.s, size2))'	0:exists(%s, %s);4:implies[%s,%s];4:green;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(green,iota(filter(filter(x.s, triangle), or[triangle,size3])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:or[%s,%s];4:triangle;4:size3
'λx.apply(not[circle],iota(filter(filter(filter(filter(filter(filter(x.s, and[and[iff[size1,size3],not[and[blue,and[size2,green]]]],implies[size3,circle]]), apply(same_size,x.o)), and[size1,triangle]), size2), blue), rectangle)))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:size1;4:size3;4:not[%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:size2;4:green;4:implies[%s,%s];4:size3;4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:size1;4:triangle;4:size2;4:blue;4:rectangle
'λx.apply(not[and[size2,not[size2]]],iota(filter(x.s, nor[size2,size3])))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size2;4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size2;4:size3
'λx.apply(not[and[or[triangle,triangle],apply(same_color,x.o)]],iota(filter(x.s, green)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:or[%s,%s];4:triangle;4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(or[yellow,circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:circle;1:%s.o;2:x
'λx.exists(size1, filter(filter(filter(filter(x.s, triangle), nand[and[and[or[size2,nand[size1,yellow]],and[green,size1]],blue],green]), iff[size3,and[size2,size1]]), and[and[rectangle,circle],apply(same_size,x.o)]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size2;4:nand[%s,%s];4:size1;4:yellow;4:and[%s,%s];4:green;4:size1;4:blue;4:green;4:iff[%s,%s];4:size3;4:and[%s,%s];4:size2;4:size1;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(apply(same_color,x.o),iota(filter(filter(filter(filter(filter(x.s, rectangle), rectangle), size3), not[size1]), nor[apply(same_size,x.o),size3])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle;4:size3;4:not[%s];4:size1;4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3
'λx.apply(and[apply(same_shape,iota(filter(filter(x.s, triangle), triangle))),blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:triangle;4:blue;1:%s.o;2:x
'λx.empty(filter(x.s, apply(size-gt,x.o)))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.empty(filter(x.s, apply(same_shape,iota(x.s))))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(x.s, apply(size-lt,x.o)))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.apply(apply(same_size,iota(filter(filter(filter(filter(x.s, blue), apply(same_color,x.o)), not[yellow]), size2))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:yellow;4:size2;1:%s.o;2:x
'λx.apply(implies[circle,rectangle],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:circle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(filter(x.s, yellow), not[triangle]), size3)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:triangle;4:size3
'λx.apply(circle,iota(filter(x.s, apply(same_shape,x.o))))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(and[or[size2,size1],green],iota(filter(filter(filter(x.s, blue), iff[or[apply(same_shape,iota(x.s)),circle],and[implies[apply(size-gt,iota(x.s)),green],size3]]), green)))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size2;4:size1;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:iff[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:implies[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:green;4:size3;4:green
'λx.exists(yellow, filter(x.s, size3))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(yellow, filter(x.s, size1))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(yellow, filter(x.s, green))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(rectangle,iota(filter(filter(x.s, nor[yellow,iff[yellow,size2]]), blue)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:yellow;4:iff[%s,%s];4:yellow;4:size2;4:blue
'λx.apply(circle,iota(filter(filter(filter(x.s, size3), triangle), size2)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle;4:size2
'λx.apply(rectangle,iota(filter(filter(x.s, or[apply(size-leq,iota(x.s)),rectangle]), green)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:rectangle;4:green
'λx.apply(apply(same_color,iota(filter(x.s, and[circle,size3]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size3;1:%s.o;2:x
'λx.apply(or[size1,and[rectangle,or[and[size2,apply(same_size,iota(filter(filter(x.s, yellow), or[circle,green])))],circle]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:circle;4:green;4:circle;1:%s.o;2:x
'λx.exists(or[size2,and[implies[not[circle],not[size1]],rectangle]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:size2;4:and[%s,%s];4:implies[%s,%s];4:not[%s];4:circle;4:not[%s];4:size1;4:rectangle;3:%s.s;2:x
'λx.apply(apply(same_color,iota(filter(filter(x.s, not[and[yellow,rectangle]]), green))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:yellow;4:rectangle;4:green;1:%s.o;2:x
'λx.forall(apply(same_size,iota(filter(x.s, yellow))),filter(x.s, and[yellow,size3]))'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size3
'λx.apply(and[size1,blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[blue,blue],iota(filter(filter(filter(x.s, and[rectangle,rectangle]), green), or[and[size1,yellow],and[size3,blue]])))'	0:apply(%s,%s);4:nand[%s,%s];4:blue;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:rectangle;4:green;4:or[%s,%s];4:and[%s,%s];4:size1;4:yellow;4:and[%s,%s];4:size3;4:blue
'λx.apply(or[green,yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:yellow;1:%s.o;2:x
'λx.exists(not[and[yellow,rectangle]], filter(x.s, and[and[and[triangle,rectangle],apply(same_shape,iota(x.s))],apply(same_color,x.o)]))'	0:exists(%s, %s);4:not[%s];4:and[%s,%s];4:yellow;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(not[not[apply(same_shape,iota(filter(x.s, size3)))]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_color,iota(filter(x.s, apply(same_color,x.o)))),iota(filter(filter(x.s, size2), blue)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue
'λx.apply(and[size2,blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(not[or[blue,and[rectangle,blue]]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:blue;1:%s.o;2:x
'λx.apply(and[rectangle,nand[triangle,green]],iota(filter(x.s, and[triangle,blue])))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:nand[%s,%s];4:triangle;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:blue
'λx.apply(size2,iota(filter(filter(x.s, and[size1,yellow]), green)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:yellow;4:green
'λx.apply(and[and[and[rectangle,or[apply(same_size,x.o),size3]],blue],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;4:blue;4:triangle;1:%s.o;2:x
'λx.forall(size2,filter(filter(x.s, not[apply(same_shape,iota(x.s))]), and[nand[size2,circle],green]))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:nand[%s,%s];4:size2;4:circle;4:green
'λx.apply(size2,iota(filter(filter(x.s, green), blue)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue
'λx.apply(or[blue,size2],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(or[blue,size3],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[green,nand[not[triangle],and[size3,rectangle]]],iota(filter(x.s, apply(size-geq,x.o))))'	0:apply(%s,%s);4:implies[%s,%s];4:green;4:nand[%s,%s];4:not[%s];4:triangle;4:and[%s,%s];4:size3;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.apply(and[size1,nor[and[yellow,implies[not[size2],yellow]],size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:nor[%s,%s];4:and[%s,%s];4:yellow;4:implies[%s,%s];4:not[%s];4:size2;4:yellow;4:size1;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(filter(x.s, nand[nor[and[apply(same_color,iota(filter(filter(x.s, nor[yellow,blue]), green))),size3],not[or[and[blue,triangle],and[yellow,green]]]],size2]), and[apply(same_color,x.o),green]), iff[or[yellow,green],size2])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:yellow;4:blue;4:green;4:size3;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:blue;4:triangle;4:and[%s,%s];4:yellow;4:green;4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green;4:iff[%s,%s];4:or[%s,%s];4:yellow;4:green;4:size2
'λx.apply(and[nor[not[triangle],and[yellow,size1]],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:not[%s];4:triangle;4:and[%s,%s];4:yellow;4:size1;4:triangle;1:%s.o;2:x
'λx.apply(not[not[size3]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(not[not[size2]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(x.s, not[size2]), and[blue,circle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:and[%s,%s];4:blue;4:circle
'λx.apply(apply(same_size,iota(filter(filter(filter(filter(x.s, size2), apply(same_color,x.o)), not[size1]), apply(same_size,iota(filter(x.s, triangle)))))),iota(filter(x.s, size2)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(not[and[implies[green,size2],rectangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:implies[%s,%s];4:green;4:size2;4:rectangle;1:%s.o;2:x
'λx.forall(apply(size-lt,x.o),filter(filter(x.s, not[size3]), rectangle))'	0:forall(%s,%s);4:apply(%s,%s);5:size-lt;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;4:rectangle
'λx.apply(or[apply(same_shape,iota(filter(x.s, green))),apply(same_shape,iota(filter(filter(x.s, and[and[triangle,size2],nor[triangle,yellow]]), not[size1])))],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:triangle;4:size2;4:nor[%s,%s];4:triangle;4:yellow;4:not[%s];4:size1;1:iota(%s);3:%s.s;2:x
'λx.exists(apply(size-leq,iota(filter(filter(filter(filter(x.s, size3), size2), size1), size2))), filter(filter(filter(x.s, size3), green), rectangle))'	0:exists(%s, %s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2;4:size1;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green;4:rectangle
'λx.apply(yellow,iota(filter(filter(x.s, circle), apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(x.s, not[blue]), or[or[and[size3,not[triangle]],and[size3,triangle]],size1])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size3;4:not[%s];4:triangle;4:and[%s,%s];4:size3;4:triangle;4:size1;3:%s.s;2:x
'λx.forall(iff[and[size1,triangle],circle],filter(x.s, rectangle))'	0:forall(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:size1;4:triangle;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.forall(apply(same_size,iota(filter(x.s, and[and[or[circle,and[rectangle,implies[or[green,not[triangle]],circle]]],apply(same_size,x.o)],size3]))),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:circle;4:and[%s,%s];4:rectangle;4:implies[%s,%s];4:or[%s,%s];4:green;4:not[%s];4:triangle;4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;3:%s.s;2:x
'λx.exists(nor[and[and[yellow,or[size3,nand[and[circle,triangle],blue]]],yellow],size3], x.s)'	0:exists(%s, %s);4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:or[%s,%s];4:size3;4:nand[%s,%s];4:and[%s,%s];4:circle;4:triangle;4:blue;4:yellow;4:size3;3:%s.s;2:x
'λx.apply(or[or[and[blue,apply(same_color,x.o)],rectangle],size1],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(and[yellow,size3],iota(filter(filter(filter(filter(x.s, yellow), rectangle), or[green,or[rectangle,triangle]]), apply(same_shape,x.o))))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle;4:or[%s,%s];4:green;4:or[%s,%s];4:rectangle;4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(or[not[triangle],size1],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:triangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_color,x.o),iota(filter(filter(filter(filter(filter(x.s, rectangle), rectangle), size3), not[size1]), nor[not[size2],size3])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle;4:size3;4:not[%s];4:size1;4:nor[%s,%s];4:not[%s];4:size2;4:size3
'λx.contains(x.o, filter(x.s, not[triangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.exists(not[and[triangle,rectangle]], x.s)'	0:exists(%s, %s);4:not[%s];4:and[%s,%s];4:triangle;4:rectangle;3:%s.s;2:x
'λx.apply(and[yellow,implies[blue,implies[and[circle,apply(same_color,iota(filter(x.s, not[circle])))],yellow]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:implies[%s,%s];4:blue;4:implies[%s,%s];4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:yellow;1:%s.o;2:x
'λx.apply(and[implies[yellow,apply(same_size,iota(x.s))],apply(same_shape,iota(x.s))],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(x.s, or[yellow,triangle]), or[green,rectangle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:triangle;4:or[%s,%s];4:green;4:rectangle
'λx.apply(or[or[size1,apply(size-geq,iota(filter(x.s, size2)))],yellow],iota(filter(x.s, apply(same_shape,iota(filter(filter(x.s, and[and[yellow,size2],circle]), size2))))))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:size1;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:yellow;4:size2;4:circle;4:size2
'λx.apply(and[size3,not[and[or[and[size1,size3],size1],size1]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:not[%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size1;4:size3;4:size1;4:size1;1:%s.o;2:x
'λx.apply(implies[triangle,and[circle,green]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:triangle;4:and[%s,%s];4:circle;4:green;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(x.s, yellow), size1), green), and[triangle,circle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;4:green;4:and[%s,%s];4:triangle;4:circle
'λx.apply(nor[and[green,rectangle],green],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:green;4:rectangle;4:green;1:%s.o;2:x
'λx.apply(size3,iota(filter(x.s, not[and[and[rectangle,or[size3,apply(same_size,iota(x.s))]],blue]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:blue
'λx.apply(size2,iota(filter(filter(x.s, rectangle), or[circle,rectangle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:or[%s,%s];4:circle;4:rectangle
'λx.forall(size1,filter(filter(x.s, apply(same_size,x.o)), and[or[apply(same_shape,iota(x.s)),size1],apply(same_shape,iota(filter(filter(x.s, and[nor[circle,nor[apply(size-geq,x.o),nor[circle,and[rectangle,nand[or[size3,and[triangle,size2]],size3]]]]],size1]), triangle)))]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:circle;4:nor[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:nor[%s,%s];4:circle;4:and[%s,%s];4:rectangle;4:nand[%s,%s];4:or[%s,%s];4:size3;4:and[%s,%s];4:triangle;4:size2;4:size3;4:size1;4:triangle
'λx.exists(size2, filter(filter(x.s, size3), and[apply(same_shape,x.o),implies[green,iff[or[apply(same_size,x.o),size3],rectangle]]]))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:implies[%s,%s];4:green;4:iff[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;4:rectangle
'λx.apply(not[yellow],iota(filter(x.s, or[triangle,green])))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:green
'λx.apply(and[yellow,and[and[yellow,size1],and[and[not[and[green,size2]],size1],or[blue,and[and[blue,green],or[yellow,triangle]]]]]],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:and[%s,%s];4:and[%s,%s];4:yellow;4:size1;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:green;4:size2;4:size1;4:or[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:blue;4:green;4:or[%s,%s];4:yellow;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(apply(size-geq,iota(filter(x.s, green))),iota(filter(filter(x.s, rectangle), size2)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2
'λx.contains(iota(filter(filter(filter(filter(filter(filter(x.s, blue), size3), blue), size2), or[apply(same_shape,x.o),triangle]), nor[implies[rectangle,nand[not[and[size3,green]],size1]],apply(same_size,iota(x.s))])), filter(filter(filter(filter(x.s, green), blue), yellow), size2))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3;4:blue;4:size2;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle;4:nor[%s,%s];4:implies[%s,%s];4:rectangle;4:nand[%s,%s];4:not[%s];4:and[%s,%s];4:size3;4:green;4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue;4:yellow;4:size2
'λx.contains(iota(filter(filter(x.s, circle), yellow)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow;3:%s.s;2:x
'λx.apply(and[green,not[and[and[yellow,blue],or[and[or[green,green],size3],and[green,green]]]]],iota(filter(filter(filter(x.s, size2), and[size3,yellow]), rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:blue;4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:green;4:green;4:size3;4:and[%s,%s];4:green;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:size3;4:yellow;4:rectangle
'λx.apply(green,iota(filter(filter(filter(filter(filter(x.s, size3), and[size3,circle]), blue), circle), size3)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:size3;4:circle;4:blue;4:circle;4:size3
'λx.apply(blue,iota(filter(filter(filter(x.s, apply(size-gt,iota(filter(filter(x.s, size2), triangle)))), green), size1)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:triangle;4:green;4:size1
'λx.exists(circle, filter(x.s, and[blue,blue]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:blue
'λx.apply(iff[size3,not[size3]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:size3;4:not[%s];4:size3;1:%s.o;2:x
'λx.apply(implies[rectangle,and[iff[blue,blue],apply(same_color,x.o)]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:rectangle;4:and[%s,%s];4:iff[%s,%s];4:blue;4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.exists(implies[not[or[size3,rectangle]],iff[rectangle,size3]], x.s)'	0:exists(%s, %s);4:implies[%s,%s];4:not[%s];4:or[%s,%s];4:size3;4:rectangle;4:iff[%s,%s];4:rectangle;4:size3;3:%s.s;2:x
'λx.apply(or[circle,triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:triangle;1:%s.o;2:x
'λx.apply(iff[and[and[size3,nand[apply(same_size,x.o),size3]],size1],circle],iota(filter(x.s, and[nor[circle,size2],blue])))'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:nand[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;4:size1;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:circle;4:size2;4:blue
'λx.apply(and[size1,and[blue,green]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:and[%s,%s];4:blue;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[circle,and[not[size2],size3]],iota(filter(filter(filter(x.s, size2), size1), nand[and[and[not[apply(same_size,iota(x.s))],yellow],yellow],size2])))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:and[%s,%s];4:not[%s];4:size2;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1;4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:yellow;4:yellow;4:size2
'λx.exists(and[circle,and[iff[triangle,yellow],apply(size-lt,iota(filter(filter(filter(x.s, green), triangle), yellow)))]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:circle;4:and[%s,%s];4:iff[%s,%s];4:triangle;4:yellow;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:triangle;4:yellow;3:%s.s;2:x
'λx.forall(and[green,and[or[triangle,yellow],or[blue,size2]]],filter(x.s, apply(same_color,x.o)))'	0:forall(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:or[%s,%s];4:triangle;4:yellow;4:or[%s,%s];4:blue;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(filter(x.s, size2), rectangle), circle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle;4:circle
'λx.apply(and[or[green,and[and[blue,yellow],or[rectangle,size2]]],apply(size-gt,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:blue;4:yellow;4:or[%s,%s];4:rectangle;4:size2;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.exists(yellow, filter(filter(x.s, size3), rectangle))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle
'λx.apply(circle,iota(filter(x.s, apply(same_size,x.o))))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.exists(and[green,and[size3,not[yellow]]], filter(x.s, or[size3,blue]))'	0:exists(%s, %s);4:and[%s,%s];4:green;4:and[%s,%s];4:size3;4:not[%s];4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:blue
'λx.apply(apply(same_color,iota(filter(x.s, size1))),iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.contains(iota(filter(x.s, not[triangle])), filter(filter(x.s, and[size2,blue]), size3))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:blue;4:size3
'λx.empty(filter(filter(x.s, green), apply(same_color,x.o)))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.exists(blue, filter(filter(x.s, rectangle), rectangle))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle
'λx.contains(x.o, filter(filter(filter(x.s, green), size3), nor[green,circle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size3;4:nor[%s,%s];4:green;4:circle
'λx.apply(blue,iota(filter(x.s, and[or[implies[nor[or[and[triangle,apply(same_shape,iota(x.s))],size1],size3],apply(same_size,x.o)],or[not[apply(same_size,x.o)],or[size3,size2]]],or[triangle,rectangle]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size1;4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:size3;4:size2;4:or[%s,%s];4:triangle;4:rectangle
'λx.apply(circle,iota(filter(x.s, apply(same_color,x.o))))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(x.s, yellow))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.forall(circle,filter(x.s, blue))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(size3,iota(filter(filter(filter(filter(x.s, circle), size2), iff[rectangle,size3]), not[yellow])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size2;4:iff[%s,%s];4:rectangle;4:size3;4:not[%s];4:yellow
'λx.apply(and[not[size1],circle],iota(filter(filter(x.s, blue), or[size1,triangle])))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size1;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:size1;4:triangle
'λx.apply(size1,iota(filter(filter(filter(filter(x.s, or[rectangle,size3]), yellow), green), or[size3,green])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:size3;4:yellow;4:green;4:or[%s,%s];4:size3;4:green
'λx.apply(nand[yellow,blue],iota(filter(filter(x.s, triangle), green)))'	0:apply(%s,%s);4:nand[%s,%s];4:yellow;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green
'λx.apply(or[size1,size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:size1;1:%s.o;2:x
'λx.apply(or[size1,size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:size3;1:%s.o;2:x
'λx.apply(or[size1,size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:size2;1:%s.o;2:x
'λx.apply(or[size2,size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:size1;1:%s.o;2:x
'λx.apply(or[size2,size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:size3;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, and[or[and[size3,size1],size1],rectangle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size3;4:size1;4:size1;4:rectangle
'λx.apply(size2,iota(filter(x.s, not[not[size1]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:size1
'λx.apply(size3,iota(filter(filter(filter(x.s, size2), and[not[triangle],and[apply(size-gt,iota(x.s)),not[not[iff[blue,rectangle]]]]]), size2)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:not[%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:not[%s];4:not[%s];4:iff[%s,%s];4:blue;4:rectangle;4:size2
'λx.apply(and[size1,and[size3,triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:and[%s,%s];4:size3;4:triangle;1:%s.o;2:x
'λx.exists(circle, filter(filter(x.s, triangle), circle))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle
'λx.apply(or[implies[size2,or[blue,rectangle]],size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:implies[%s,%s];4:size2;4:or[%s,%s];4:blue;4:rectangle;4:size1;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, size3)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(rectangle,iota(filter(x.s, size1)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(rectangle,iota(filter(x.s, size2)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.empty(filter(filter(filter(x.s, not[implies[apply(same_shape,x.o),green]]), rectangle), not[triangle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:implies[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green;4:rectangle;4:not[%s];4:triangle
'λx.apply(blue,iota(filter(x.s, and[rectangle,not[and[circle,circle]]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:not[%s];4:and[%s,%s];4:circle;4:circle
'λx.apply(rectangle,iota(filter(x.s, green)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(or[circle,and[size1,rectangle]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:and[%s,%s];4:size1;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(nor[blue,size1],iota(filter(filter(filter(x.s, size3), yellow), not[or[size3,size3]])))'	0:apply(%s,%s);4:nor[%s,%s];4:blue;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow;4:not[%s];4:or[%s,%s];4:size3;4:size3
'λx.apply(not[rectangle],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.exists(nand[not[yellow],green], x.s)'	0:exists(%s, %s);4:nand[%s,%s];4:not[%s];4:yellow;4:green;3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, blue), implies[and[not[size2],yellow],and[yellow,implies[size3,or[size2,blue]]]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:implies[%s,%s];4:and[%s,%s];4:not[%s];4:size2;4:yellow;4:and[%s,%s];4:yellow;4:implies[%s,%s];4:size3;4:or[%s,%s];4:size2;4:blue
'λx.contains(x.o, filter(filter(x.s, nand[apply(same_color,iota(x.s)),and[not[green],apply(same_size,iota(filter(filter(x.s, triangle), blue)))]]), yellow))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue;4:yellow
'λx.exists(not[green], filter(filter(x.s, apply(same_size,x.o)), or[triangle,triangle]))'	0:exists(%s, %s);4:not[%s];4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:triangle;4:triangle
'λx.contains(iota(filter(filter(x.s, not[iff[yellow,size1]]), blue)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:iff[%s,%s];4:yellow;4:size1;4:blue;3:%s.s;2:x
'λx.apply(nor[and[size3,size1],and[triangle,yellow]],iota(filter(x.s, apply(same_size,iota(filter(filter(filter(filter(x.s, and[apply(same_shape,iota(filter(x.s, size1))),and[or[size1,nand[not[not[green]],triangle]],rectangle]]), rectangle), circle), implies[blue,and[nand[and[size2,size3],and[size3,triangle]],and[size3,circle]]]))))))'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:size3;4:size1;4:and[%s,%s];4:triangle;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:or[%s,%s];4:size1;4:nand[%s,%s];4:not[%s];4:not[%s];4:green;4:triangle;4:rectangle;4:rectangle;4:circle;4:implies[%s,%s];4:blue;4:and[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:size2;4:size3;4:and[%s,%s];4:size3;4:triangle;4:and[%s,%s];4:size3;4:circle
'λx.apply(nor[and[and[or[blue,rectangle],triangle],circle],size3],iota(filter(filter(x.s, apply(size-lt,iota(filter(filter(x.s, size2), rectangle)))), not[blue])))'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:blue;4:rectangle;4:triangle;4:circle;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle;4:not[%s];4:blue
'λx.forall(and[triangle,apply(same_color,iota(x.s))],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(not[and[not[and[or[apply(size-geq,iota(filter(x.s, and[size1,size1]))),size1],rectangle]],or[not[or[size1,or[triangle,size3]]],size2]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size1;4:size1;4:rectangle;4:or[%s,%s];4:not[%s];4:or[%s,%s];4:size1;4:or[%s,%s];4:triangle;4:size3;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[blue,nand[rectangle,rectangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:nand[%s,%s];4:rectangle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.forall(size1,filter(x.s, and[size3,and[and[triangle,apply(same_size,iota(filter(x.s, green)))],green]]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:green
'λx.apply(apply(same_size,iota(filter(x.s, yellow))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;1:%s.o;2:x
'λx.apply(not[blue],iota(filter(filter(x.s, size3), size3)))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3
'λx.apply(nor[and[or[triangle,size1],apply(same_size,x.o)],not[size2]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:or[%s,%s];4:triangle;4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:not[%s];4:size2;1:%s.o;2:x
'λx.apply(implies[size1,or[size3,circle]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:size1;4:or[%s,%s];4:size3;4:circle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(x.s, and[size3,rectangle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:rectangle
'λx.apply(and[nor[apply(same_shape,iota(x.s)),green],size1],iota(filter(filter(x.s, size3), not[or[and[triangle,green],not[blue]]])))'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:green;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:triangle;4:green;4:not[%s];4:blue
'λx.apply(not[not[and[and[nand[and[not[green],green],not[size3]],triangle],yellow]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:not[%s];4:green;4:green;4:not[%s];4:size3;4:triangle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_size,iota(x.s)),iota(filter(x.s, or[yellow,and[triangle,not[size3]]])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:and[%s,%s];4:triangle;4:not[%s];4:size3
'λx.apply(not[apply(same_shape,x.o)],iota(filter(filter(filter(x.s, rectangle), blue), size1)))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue;4:size1
'λx.forall(size3,filter(x.s, yellow))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.forall(size1,filter(x.s, yellow))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.forall(size2,filter(x.s, yellow))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(nor[size2,apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[size1,size3],iota(filter(filter(filter(filter(x.s, size3), size3), blue), yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3;4:blue;4:yellow
'λx.apply(iff[and[not[size3],size1],nor[blue,apply(same_shape,iota(filter(x.s, not[rectangle])))]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:not[%s];4:size3;4:size1;4:nor[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.apply(apply(same_color,iota(filter(filter(filter(filter(filter(filter(x.s, yellow), size1), not[size3]), or[rectangle,and[not[size2],size2]]), rectangle), size2))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;4:not[%s];4:size3;4:or[%s,%s];4:rectangle;4:and[%s,%s];4:not[%s];4:size2;4:size2;4:rectangle;4:size2;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, yellow), circle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle;3:%s.s;2:x
'λx.apply(apply(size-gt,iota(filter(x.s, green))),iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(nor[and[circle,not[size3]],size2],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:circle;4:not[%s];4:size3;4:size2;1:%s.o;2:x
'λx.apply(blue,x.o)'	0:apply(%s,%s);4:blue;1:%s.o;2:x
'λx.apply(and[apply(same_color,iota(filter(x.s, or[yellow,nor[triangle,size2]]))),not[or[size2,size3]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:nor[%s,%s];4:triangle;4:size2;4:not[%s];4:or[%s,%s];4:size2;4:size3;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(filter(x.s, apply(size-lt,x.o)), blue), size1)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:blue;4:size1
'λx.apply(nor[size1,apply(same_size,x.o)],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(nand[blue,size1],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:blue;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[blue,size2],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:blue;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[nand[green,and[circle,triangle]],not[triangle]],iota(filter(x.s, not[blue])))'	0:apply(%s,%s);4:iff[%s,%s];4:nand[%s,%s];4:green;4:and[%s,%s];4:circle;4:triangle;4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.apply(and[triangle,and[circle,apply(same_shape,iota(x.s))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(and[not[apply(size-gt,x.o)],and[apply(same_color,iota(x.s)),apply(same_color,iota(x.s))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(apply(size-gt,x.o),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:%s.o;2:x
'λx.forall(triangle,filter(x.s, rectangle))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(or[size3,size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:size3;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, nor[green,size3]), size1)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:green;4:size3;4:size1
'λx.apply(iff[size2,triangle],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:size2;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[apply(same_shape,iota(filter(x.s, and[or[yellow,green],triangle]))),not[or[or[rectangle,nor[blue,size2]],yellow]]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:yellow;4:green;4:triangle;4:not[%s];4:or[%s,%s];4:or[%s,%s];4:rectangle;4:nor[%s,%s];4:blue;4:size2;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(green,iota(filter(filter(x.s, circle), rectangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle
'λx.apply(not[apply(same_shape,iota(x.s))],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_color,iota(x.s)),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(x.s, and[green,nor[and[apply(same_size,iota(x.s)),iff[and[rectangle,yellow],size1]],size2]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:nor[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:iff[%s,%s];4:and[%s,%s];4:rectangle;4:yellow;4:size1;4:size2
'λx.apply(and[apply(same_size,iota(filter(x.s, blue))),implies[size2,size3]],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:implies[%s,%s];4:size2;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(not[or[and[blue,and[size3,yellow]],size2]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:size3;4:yellow;4:size2;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, implies[and[not[rectangle],size2],and[triangle,size1]])), filter(filter(filter(filter(x.s, blue), apply(same_color,x.o)), blue), circle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:and[%s,%s];4:not[%s];4:rectangle;4:size2;4:and[%s,%s];4:triangle;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue;4:circle
'λx.exists(and[size1,rectangle], filter(filter(x.s, rectangle), and[size2,green]))'	0:exists(%s, %s);4:and[%s,%s];4:size1;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:size2;4:green
'λx.apply(or[circle,size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:size1;1:%s.o;2:x
'λx.apply(or[circle,size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:size3;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, or[and[green,size1],triangle]), and[not[and[circle,green]],blue])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:green;4:size1;4:triangle;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:circle;4:green;4:blue;3:%s.s;2:x
'λx.apply(and[yellow,triangle],iota(filter(filter(x.s, size3), circle)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle
'λx.apply(size3,iota(filter(filter(filter(x.s, apply(same_color,iota(x.s))), implies[yellow,triangle]), rectangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:implies[%s,%s];4:yellow;4:triangle;4:rectangle
'λx.contains(iota(filter(x.s, yellow)), filter(filter(x.s, and[size1,not[size2]]), triangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:not[%s];4:size2;4:triangle
'λx.forall(triangle,filter(x.s, and[size2,and[rectangle,or[apply(size-lt,iota(x.s)),blue]]]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:blue
'λx.apply(size2,iota(filter(x.s, and[and[triangle,rectangle],circle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:triangle;4:rectangle;4:circle
'λx.apply(and[rectangle,and[or[triangle,size3],green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:or[%s,%s];4:triangle;4:size3;4:green;1:%s.o;2:x
'λx.apply(or[rectangle,and[or[and[triangle,and[apply(same_shape,x.o),not[size2]]],apply(size-leq,iota(x.s))],not[and[and[or[size2,blue],rectangle],not[blue]]]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:size2;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size2;4:blue;4:rectangle;4:not[%s];4:blue;1:%s.o;2:x
'λx.exists(green, filter(filter(filter(x.s, nand[blue,and[and[size3,rectangle],size3]]), green), and[not[circle],and[size2,size2]]))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:size3;4:rectangle;4:size3;4:green;4:and[%s,%s];4:not[%s];4:circle;4:and[%s,%s];4:size2;4:size2
'λx.apply(and[green,size3],iota(filter(x.s, or[not[size3],green])))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:size3;4:green
'λx.apply(or[or[or[or[blue,or[apply(same_size,x.o),and[or[apply(same_shape,iota(x.s)),size1],apply(same_shape,iota(filter(filter(x.s, and[nor[circle,nor[apply(size-geq,x.o),nor[circle,and[rectangle,nand[or[size3,and[triangle,size2]],size3]]]]],size1]), triangle)))]]],green],size2],size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:blue;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:circle;4:nor[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:nor[%s,%s];4:circle;4:and[%s,%s];4:rectangle;4:nand[%s,%s];4:or[%s,%s];4:size3;4:and[%s,%s];4:triangle;4:size2;4:size3;4:size1;4:triangle;4:green;4:size2;4:size3;1:%s.o;2:x
'λx.apply(nand[or[and[and[and[not[not[size3]],not[green]],yellow],size3],and[blue,blue]],and[rectangle,or[size1,size2]]],iota(filter(filter(filter(x.s, or[size1,and[apply(same_color,iota(filter(filter(x.s, apply(size-lt,x.o)), size2))),blue]]), size3), rectangle)))'	0:apply(%s,%s);4:nand[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:not[%s];4:size3;4:not[%s];4:green;4:yellow;4:size3;4:and[%s,%s];4:blue;4:blue;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:size1;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:size2;4:blue;4:size3;4:rectangle
'λx.apply(yellow,iota(filter(filter(filter(filter(x.s, or[size1,size2]), rectangle), or[not[not[rectangle]],nand[rectangle,and[triangle,triangle]]]), yellow)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:size2;4:rectangle;4:or[%s,%s];4:not[%s];4:not[%s];4:rectangle;4:nand[%s,%s];4:rectangle;4:and[%s,%s];4:triangle;4:triangle;4:yellow
'λx.apply(rectangle,iota(filter(x.s, apply(same_shape,iota(filter(filter(x.s, size3), rectangle))))))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle
'λx.apply(and[green,blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:blue;1:iota(%s);3:%s.s;2:x
'λx.forall(and[or[rectangle,size1],apply(same_color,iota(x.s))],filter(filter(filter(x.s, triangle), nor[rectangle,triangle]), size2))'	0:forall(%s,%s);4:and[%s,%s];4:or[%s,%s];4:rectangle;4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:nor[%s,%s];4:rectangle;4:triangle;4:size2
'λx.apply(apply(same_color,iota(filter(x.s, and[circle,size3]))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[circle,apply(size-lt,x.o)],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[apply(same_size,x.o),circle],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(size1,iota(filter(filter(x.s, size3), rectangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle
'λx.apply(size3,iota(filter(filter(x.s, size3), rectangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle
'λx.apply(not[and[size3,blue]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size3;4:blue;1:%s.o;2:x
'λx.apply(iff[size1,or[size1,or[size3,size3]]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:size1;4:or[%s,%s];4:size1;4:or[%s,%s];4:size3;4:size3;1:%s.o;2:x
'λx.apply(nand[yellow,size2],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:yellow;4:size2;1:%s.o;2:x
'λx.apply(nand[yellow,size3],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:yellow;4:size3;1:%s.o;2:x
'λx.apply(apply(same_size,iota(filter(x.s, size2))),iota(filter(x.s, not[circle])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.exists(size2, filter(filter(x.s, blue), apply(same_size,x.o)))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.forall(green,filter(x.s, apply(same_shape,iota(filter(filter(filter(filter(filter(x.s, or[not[rectangle],or[size3,size3]]), size3), yellow), green), blue)))))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:rectangle;4:or[%s,%s];4:size3;4:size3;4:size3;4:yellow;4:green;4:blue
'λx.empty(filter(filter(x.s, not[circle]), and[and[not[apply(same_size,x.o)],blue],and[blue,rectangle]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;4:and[%s,%s];4:blue;4:rectangle
'λx.exists(or[and[and[and[or[green,not[triangle]],green],yellow],and[triangle,yellow]],not[size3]], filter(filter(filter(x.s, size3), yellow), green))'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:green;4:not[%s];4:triangle;4:green;4:yellow;4:and[%s,%s];4:triangle;4:yellow;4:not[%s];4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow;4:green
'λx.forall(and[green,apply(same_shape,x.o)],filter(filter(x.s, not[size1]), blue))'	0:forall(%s,%s);4:and[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:blue
'λx.contains(iota(filter(x.s, green)), filter(x.s, not[and[or[triangle,apply(same_size,iota(x.s))],and[blue,triangle]]]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:or[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:triangle
'λx.apply(or[blue,apply(size-lt,x.o)],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[and[or[size3,nand[size1,apply(same_shape,x.o)]],apply(same_color,iota(filter(filter(x.s, size3), blue)))],and[and[triangle,green],rectangle]],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size3;4:nand[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue;4:and[%s,%s];4:and[%s,%s];4:triangle;4:green;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[and[yellow,blue]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:yellow;4:blue;1:%s.o;2:x
'λx.apply(and[size3,and[blue,and[and[apply(same_size,x.o),size2],not[size1]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2;4:not[%s];4:size1;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(filter(filter(filter(filter(x.s, size2), rectangle), size2), and[yellow,size1]), blue), yellow)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle;4:size2;4:and[%s,%s];4:yellow;4:size1;4:blue;4:yellow
'λx.apply(or[rectangle,yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:yellow;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(x.s)),iota(filter(filter(x.s, circle), triangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle
'λx.empty(filter(x.s, and[rectangle,yellow]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:yellow
'λx.apply(blue,iota(filter(filter(x.s, triangle), yellow)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:yellow
'λx.apply(and[rectangle,and[apply(same_color,x.o),not[and[and[circle,rectangle],green]]]],iota(filter(filter(filter(x.s, rectangle), green), size2)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:rectangle;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green;4:size2
'λx.apply(nand[circle,and[triangle,green]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:circle;4:and[%s,%s];4:triangle;4:green;1:%s.o;2:x
'λx.exists(and[or[apply(same_size,iota(filter(filter(filter(x.s, not[not[green]]), rectangle), not[apply(same_shape,x.o)]))),size3],blue], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:green;4:rectangle;4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3;4:blue;3:%s.s;2:x
'λx.apply(implies[size1,or[rectangle,circle]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:size1;4:or[%s,%s];4:rectangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, circle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(filter(filter(filter(x.s, apply(same_shape,iota(x.s))), nor[size3,triangle]), circle), yellow), green)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:nor[%s,%s];4:size3;4:triangle;4:circle;4:yellow;4:green
'λx.forall(triangle,filter(filter(x.s, green), size1))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1
'λx.apply(or[or[yellow,size1],not[circle]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:yellow;4:size1;4:not[%s];4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[apply(same_color,x.o)],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, and[circle,rectangle])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:rectangle;3:%s.s;2:x
'λx.apply(or[and[size1,or[circle,not[circle]]],triangle],iota(filter(x.s, not[or[blue,or[apply(same_shape,iota(x.s)),circle]]])))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:circle;4:not[%s];4:circle;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:blue;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle
'λx.apply(and[size3,or[size1,triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:or[%s,%s];4:size1;4:triangle;1:%s.o;2:x
'λx.exists(green, filter(filter(filter(x.s, circle), and[green,and[and[size1,or[circle,triangle]],triangle]]), not[nand[apply(size-gt,iota(x.s)),size2]]))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:circle;4:triangle;4:triangle;4:not[%s];4:nand[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:size2
'λx.exists(and[not[triangle],and[size1,size3]], filter(x.s, size1))'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:triangle;4:and[%s,%s];4:size1;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.forall(rectangle,filter(x.s, and[size2,triangle]))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:triangle
'λx.apply(and[blue,blue],iota(filter(x.s, and[not[and[not[yellow],apply(same_size,x.o)]],triangle])))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:not[%s];4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle
'λx.apply(implies[not[apply(same_color,iota(filter(x.s, size1)))],green],iota(filter(x.s, and[and[apply(same_shape,iota(filter(x.s, and[or[yellow,green],triangle]))),not[yellow]],rectangle])))'	0:apply(%s,%s);4:implies[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:yellow;4:green;4:triangle;4:not[%s];4:yellow;4:rectangle
'λx.apply(blue,iota(filter(filter(filter(filter(filter(filter(filter(filter(x.s, green), triangle), yellow), yellow), circle), circle), iff[or[size1,and[size3,not[size3]]],size1]), apply(size-lt,x.o))))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:triangle;4:yellow;4:yellow;4:circle;4:circle;4:iff[%s,%s];4:or[%s,%s];4:size1;4:and[%s,%s];4:size3;4:not[%s];4:size3;4:size1;4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.apply(and[green,implies[or[size2,apply(same_size,iota(filter(filter(filter(x.s, blue), size1), size1)))],size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:implies[%s,%s];4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1;4:size1;4:size2;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(x.s, or[green,or[not[nand[size1,or[triangle,yellow]]],circle]]), and[nand[size3,and[triangle,and[and[implies[and[triangle,yellow],green],or[nor[apply(same_shape,x.o),or[and[circle,and[or[nand[blue,size2],blue],green]],size1]],circle]],size1]]],green])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:or[%s,%s];4:not[%s];4:nand[%s,%s];4:size1;4:or[%s,%s];4:triangle;4:yellow;4:circle;4:and[%s,%s];4:nand[%s,%s];4:size3;4:and[%s,%s];4:triangle;4:and[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:triangle;4:yellow;4:green;4:or[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:or[%s,%s];4:nand[%s,%s];4:blue;4:size2;4:blue;4:green;4:size1;4:circle;4:size1;4:green
'λx.empty(filter(filter(filter(x.s, circle), size2), and[size3,size3]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size2;4:and[%s,%s];4:size3;4:size3
'λx.contains(x.o, filter(filter(x.s, yellow), size2))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2
'λx.forall(or[size1,iff[green,rectangle]],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:size1;4:iff[%s,%s];4:green;4:rectangle;3:%s.s;2:x
'λx.forall(implies[circle,or[green,not[yellow]]],filter(x.s, yellow))'	0:forall(%s,%s);4:implies[%s,%s];4:circle;4:or[%s,%s];4:green;4:not[%s];4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.empty(filter(filter(x.s, green), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:green
'λx.empty(filter(filter(x.s, green), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size2
'λx.apply(size3,iota(filter(filter(filter(filter(filter(x.s, blue), nor[rectangle,size3]), and[triangle,green]), blue), rectangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:nor[%s,%s];4:rectangle;4:size3;4:and[%s,%s];4:triangle;4:green;4:blue;4:rectangle
'λx.apply(size1,iota(filter(filter(filter(filter(filter(x.s, or[green,and[implies[yellow,size1],not[green]]]), size2), triangle), and[triangle,apply(size-geq,x.o)]), yellow)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:and[%s,%s];4:implies[%s,%s];4:yellow;4:size1;4:not[%s];4:green;4:size2;4:triangle;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:yellow
'λx.forall(circle,filter(filter(x.s, circle), triangle))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle
'λx.apply(and[rectangle,nor[size3,size3]],iota(filter(filter(filter(x.s, apply(same_size,x.o)), yellow), not[size3])))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:nor[%s,%s];4:size3;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow;4:not[%s];4:size3
'λx.apply(rectangle,iota(filter(filter(filter(filter(x.s, size2), and[size2,blue]), size2), circle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:size2;4:blue;4:size2;4:circle
'λx.apply(rectangle,iota(filter(x.s, or[yellow,not[not[or[green,nand[and[nor[circle,circle],triangle],yellow]]]]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:not[%s];4:not[%s];4:or[%s,%s];4:green;4:nand[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:circle;4:circle;4:triangle;4:yellow
'λx.apply(and[and[or[size1,not[and[rectangle,or[size3,nor[not[yellow],circle]]]]],and[size1,not[size2]]],or[or[not[apply(same_color,x.o)],triangle],and[and[size2,circle],or[green,blue]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size1;4:not[%s];4:and[%s,%s];4:rectangle;4:or[%s,%s];4:size3;4:nor[%s,%s];4:not[%s];4:yellow;4:circle;4:and[%s,%s];4:size1;4:not[%s];4:size2;4:or[%s,%s];4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;4:and[%s,%s];4:and[%s,%s];4:size2;4:circle;4:or[%s,%s];4:green;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(or[rectangle,rectangle],iota(filter(filter(filter(filter(filter(x.s, yellow), implies[apply(same_shape,iota(filter(x.s, not[size2]))),or[yellow,size2]]), circle), rectangle), and[size1,rectangle])))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:implies[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:or[%s,%s];4:yellow;4:size2;4:circle;4:rectangle;4:and[%s,%s];4:size1;4:rectangle
'λx.apply(size1,iota(filter(filter(x.s, apply(size-geq,iota(filter(filter(filter(x.s, triangle), and[size3,green]), apply(size-gt,x.o))))), blue)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:size3;4:green;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:blue
'λx.apply(and[size3,rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:rectangle;1:%s.o;2:x
'λx.empty(filter(filter(x.s, blue), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle
'λx.forall(size1,filter(x.s, or[rectangle,green]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:green
'λx.apply(green,iota(filter(filter(filter(x.s, nor[and[blue,and[yellow,circle]],or[size2,blue]]), size2), circle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:yellow;4:circle;4:or[%s,%s];4:size2;4:blue;4:size2;4:circle
'λx.apply(and[size2,rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:rectangle;1:%s.o;2:x
'λx.apply(nand[size2,size2],iota(filter(x.s, not[size2])))'	0:apply(%s,%s);4:nand[%s,%s];4:size2;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2
'λx.apply(and[and[not[size3],size3],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size3;4:size3;4:green;1:%s.o;2:x
'λx.apply(nor[triangle,not[and[and[yellow,blue],and[apply(same_color,x.o),size2]]]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:triangle;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:blue;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size2;1:%s.o;2:x
'λx.exists(rectangle, filter(filter(x.s, blue), circle))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle
'λx.apply(or[yellow,and[apply(same_shape,iota(x.s)),apply(size-leq,x.o)]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(size1,iota(filter(x.s, or[rectangle,triangle])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:triangle
'λx.forall(size3,filter(x.s, circle))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.forall(size1,filter(x.s, circle))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[yellow,yellow],iota(filter(x.s, not[apply(same_color,iota(x.s))])))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(x.s, and[rectangle,circle]), rectangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:circle;4:rectangle
'λx.apply(or[size1,and[rectangle,blue]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:and[%s,%s];4:rectangle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.exists(size2, filter(filter(x.s, size1), size2))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2
'λx.exists(or[size3,green], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:size3;4:green;3:%s.s;2:x
'λx.exists(or[or[apply(size-leq,x.o),and[apply(same_size,iota(x.s)),not[triangle]]],green], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:not[%s];4:triangle;4:green;3:%s.s;2:x
'λx.exists(and[not[size1],circle], filter(x.s, triangle))'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:size1;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(and[size3,circle],iota(filter(filter(filter(filter(filter(filter(x.s, and[blue,size2]), blue), size2), circle), circle), or[size2,green])))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size2;4:blue;4:size2;4:circle;4:circle;4:or[%s,%s];4:size2;4:green
'λx.apply(nand[or[green,blue],size3],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:or[%s,%s];4:green;4:blue;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(or[blue,and[size2,or[blue,iff[rectangle,size1]]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:and[%s,%s];4:size2;4:or[%s,%s];4:blue;4:iff[%s,%s];4:rectangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(filter(filter(x.s, implies[apply(same_size,x.o),size1]), green), apply(size-leq,iota(x.s))), apply(size-leq,x.o)), nand[green,and[not[or[rectangle,rectangle]],rectangle]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1;4:green;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:nand[%s,%s];4:green;4:and[%s,%s];4:not[%s];4:or[%s,%s];4:rectangle;4:rectangle;4:rectangle
'λx.apply(size2,iota(filter(x.s, implies[triangle,and[size1,size2]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:triangle;4:and[%s,%s];4:size1;4:size2
'λx.apply(not[size2],iota(filter(filter(filter(filter(x.s, apply(same_shape,x.o)), rectangle), yellow), green)))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle;4:yellow;4:green
'λx.apply(not[and[green,triangle]],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:green;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(and[rectangle,and[blue,size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:blue;4:size2;1:%s.o;2:x
'λx.forall(yellow,filter(x.s, circle))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[nand[yellow,blue],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:yellow;4:blue;4:triangle;1:%s.o;2:x
'λx.apply(not[apply(same_shape,x.o)],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[rectangle,not[triangle]],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(nor[blue,size1],iota(filter(filter(filter(x.s, size3), yellow), not[and[green,size3]])))'	0:apply(%s,%s);4:nor[%s,%s];4:blue;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow;4:not[%s];4:and[%s,%s];4:green;4:size3
'λx.forall(or[blue,apply(same_shape,x.o)],filter(x.s, apply(size-lt,x.o)))'	0:forall(%s,%s);4:or[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.apply(not[yellow],iota(filter(filter(x.s, or[or[circle,blue],size3]), green)))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:circle;4:blue;4:size3;4:green
'λx.apply(not[not[not[yellow]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:not[%s];4:yellow;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, apply(same_color,x.o)))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.exists(and[blue,or[size3,apply(same_shape,x.o)]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:blue;4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.exists(or[and[triangle,blue],and[size2,size1]], filter(filter(filter(x.s, size3), triangle), not[size2]))'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:triangle;4:blue;4:and[%s,%s];4:size2;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle;4:not[%s];4:size2
'λx.contains(iota(x.s), filter(filter(x.s, size2), or[size1,yellow]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:size1;4:yellow
'λx.apply(apply(same_color,iota(filter(x.s, nand[size1,size1]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size1;4:size1;1:%s.o;2:x
'λx.apply(and[and[blue,not[blue]],apply(same_color,x.o)],iota(filter(filter(x.s, size3), rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:not[%s];4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle
'λx.forall(not[iff[apply(same_shape,iota(filter(filter(filter(filter(x.s, or[blue,circle]), yellow), size3), triangle))),size1]],filter(filter(filter(filter(x.s, apply(same_color,x.o)), and[implies[and[size1,triangle],size2],blue]), yellow), and[or[size1,circle],yellow]))'	0:forall(%s,%s);4:not[%s];4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:circle;4:yellow;4:size3;4:triangle;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:size1;4:triangle;4:size2;4:blue;4:yellow;4:and[%s,%s];4:or[%s,%s];4:size1;4:circle;4:yellow
'λx.forall(blue,filter(x.s, and[triangle,circle]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:circle
'λx.forall(apply(same_color,iota(filter(filter(x.s, size3), blue))),filter(filter(filter(x.s, rectangle), size1), triangle))'	0:forall(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1;4:triangle
'λx.apply(nand[or[size1,size1],yellow],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:nand[%s,%s];4:or[%s,%s];4:size1;4:size1;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[iff[size2,not[apply(same_size,x.o)]],size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:size2;4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(not[blue],iota(filter(filter(filter(x.s, circle), nor[yellow,nand[size2,triangle]]), size3)))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:nor[%s,%s];4:yellow;4:nand[%s,%s];4:size2;4:triangle;4:size3
'λx.exists(and[triangle,apply(same_color,iota(x.s))], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(and[circle,not[size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:not[%s];4:size1;1:%s.o;2:x
'λx.forall(size2,filter(filter(filter(filter(filter(filter(x.s, and[not[blue],size1]), green), green), green), yellow), size1))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:blue;4:size1;4:green;4:green;4:green;4:yellow;4:size1
'λx.apply(implies[circle,rectangle],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:implies[%s,%s];4:circle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(and[and[blue,triangle],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:triangle;4:rectangle;1:%s.o;2:x
'λx.apply(nand[and[circle,size3],green],iota(filter(filter(x.s, circle), blue)))'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:circle;4:size3;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue
'λx.apply(circle,iota(filter(filter(filter(x.s, blue), circle), size1)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle;4:size1
'λx.apply(nand[circle,rectangle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:circle;4:rectangle;1:%s.o;2:x
'λx.apply(implies[blue,size3],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:blue;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[blue,size1],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:blue;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(and[circle,not[blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:not[%s];4:blue;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, triangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(and[yellow,implies[blue,circle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:implies[%s,%s];4:blue;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_size,iota(filter(filter(filter(filter(filter(x.s, and[apply(size-leq,iota(x.s)),size3]), apply(same_shape,x.o)), rectangle), and[blue,yellow]), circle))),iota(filter(filter(filter(filter(filter(x.s, and[or[not[green],blue],or[not[not[green]],and[circle,size3]]]), green), size3), size1), circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle;4:and[%s,%s];4:blue;4:yellow;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:green;4:blue;4:or[%s,%s];4:not[%s];4:not[%s];4:green;4:and[%s,%s];4:circle;4:size3;4:green;4:size3;4:size1;4:circle
'λx.apply(not[and[green,triangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:green;4:triangle;1:%s.o;2:x
'λx.apply(or[yellow,circle],iota(filter(filter(x.s, or[green,green]), circle)))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:green;4:circle
'λx.exists(and[size1,blue], filter(x.s, or[implies[and[and[size3,size1],and[triangle,rectangle]],triangle],or[apply(size-leq,iota(filter(filter(filter(filter(x.s, iff[triangle,green]), and[green,and[rectangle,triangle]]), size1), or[and[or[triangle,yellow],triangle],not[or[circle,size1]]]))),and[green,circle]]]))'	0:exists(%s, %s);4:and[%s,%s];4:size1;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:size1;4:and[%s,%s];4:triangle;4:rectangle;4:triangle;4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:triangle;4:green;4:and[%s,%s];4:green;4:and[%s,%s];4:rectangle;4:triangle;4:size1;4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:triangle;4:yellow;4:triangle;4:not[%s];4:or[%s,%s];4:circle;4:size1;4:and[%s,%s];4:green;4:circle
'λx.forall(nor[size3,green],x.s)'	0:forall(%s,%s);4:nor[%s,%s];4:size3;4:green;3:%s.s;2:x
'λx.empty(filter(x.s, and[green,triangle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:triangle
'λx.exists(nor[nor[yellow,green],or[and[triangle,or[triangle,and[size2,size3]]],circle]], filter(filter(x.s, size2), nand[circle,green]))'	0:exists(%s, %s);4:nor[%s,%s];4:nor[%s,%s];4:yellow;4:green;4:or[%s,%s];4:and[%s,%s];4:triangle;4:or[%s,%s];4:triangle;4:and[%s,%s];4:size2;4:size3;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:nand[%s,%s];4:circle;4:green
'λx.apply(size1,iota(filter(filter(x.s, circle), size1)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1
'λx.apply(size1,iota(filter(filter(x.s, circle), and[or[size3,triangle],green])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:or[%s,%s];4:size3;4:triangle;4:green
'λx.apply(green,iota(filter(filter(x.s, size1), size1)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1
'λx.apply(green,iota(filter(filter(x.s, size3), size3)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3
'λx.apply(green,iota(filter(filter(x.s, size2), size1)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1
'λx.exists(rectangle, filter(x.s, nand[iff[size1,or[and[and[blue,blue],size3],blue]],apply(same_size,iota(filter(x.s, and[size1,apply(same_color,x.o)])))]))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:iff[%s,%s];4:size1;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:blue;4:size3;4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(iff[circle,and[circle,circle]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:circle;4:and[%s,%s];4:circle;4:circle;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, not[blue]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.apply(and[size2,not[circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:not[%s];4:circle;1:%s.o;2:x
'λx.exists(implies[apply(same_size,x.o),blue], filter(x.s, rectangle))'	0:exists(%s, %s);4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.contains(iota(x.s), filter(filter(filter(x.s, nor[circle,nor[or[or[not[green],or[circle,apply(size-leq,iota(filter(x.s, size2)))]],green],blue]]), triangle), green))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:circle;4:nor[%s,%s];4:or[%s,%s];4:or[%s,%s];4:not[%s];4:green;4:or[%s,%s];4:circle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green;4:blue;4:triangle;4:green
'λx.apply(nand[green,size3],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:green;4:size3;1:%s.o;2:x
'λx.forall(and[triangle,size1],filter(filter(filter(filter(x.s, triangle), size3), or[yellow,yellow]), circle))'	0:forall(%s,%s);4:and[%s,%s];4:triangle;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3;4:or[%s,%s];4:yellow;4:yellow;4:circle
'λx.apply(implies[size2,green],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size2;4:green;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, size1), green)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green
'λx.forall(or[triangle,not[apply(same_color,iota(x.s))]],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:triangle;4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(x.s, apply(same_color,iota(filter(filter(filter(x.s, triangle), circle), not[size3])))), yellow)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle;4:not[%s];4:size3;4:yellow
'λx.apply(green,iota(filter(x.s, or[apply(same_shape,iota(x.s)),yellow])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:yellow
'λx.apply(nand[green,not[apply(size-lt,iota(filter(filter(x.s, green), triangle)))]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:green;4:not[%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:triangle;1:%s.o;2:x
'λx.apply(or[apply(same_size,iota(filter(x.s, and[and[or[apply(same_color,x.o),circle],size1],apply(same_size,x.o)]))),green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;1:%s.o;2:x
'λx.apply(implies[size3,green],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size3;4:green;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(filter(x.s, size1), circle), size3)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle;4:size3
'λx.apply(size2,iota(filter(filter(x.s, and[and[or[size1,triangle],rectangle],and[not[circle],rectangle]]), size3)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size1;4:triangle;4:rectangle;4:and[%s,%s];4:not[%s];4:circle;4:rectangle;4:size3
'λx.apply(not[iff[rectangle,size2]],iota(filter(filter(x.s, rectangle), blue)))'	0:apply(%s,%s);4:not[%s];4:iff[%s,%s];4:rectangle;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue
'λx.apply(implies[green,apply(same_shape,iota(filter(x.s, or[or[triangle,not[green]],implies[and[and[size3,and[triangle,and[or[size1,not[or[nor[implies[implies[triangle,nand[blue,implies[triangle,blue]]],size2],and[blue,apply(size-lt,x.o)]],apply(size-gt,x.o)]]],nand[size1,blue]]]],not[not[not[size2]]]],triangle]])))],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:triangle;4:not[%s];4:green;4:implies[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:triangle;4:and[%s,%s];4:or[%s,%s];4:size1;4:not[%s];4:or[%s,%s];4:nor[%s,%s];4:implies[%s,%s];4:implies[%s,%s];4:triangle;4:nand[%s,%s];4:blue;4:implies[%s,%s];4:triangle;4:blue;4:size2;4:and[%s,%s];4:blue;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:nand[%s,%s];4:size1;4:blue;4:not[%s];4:not[%s];4:not[%s];4:size2;4:triangle;1:%s.o;2:x
'λx.forall(and[size3,yellow],filter(x.s, size2))'	0:forall(%s,%s);4:and[%s,%s];4:size3;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(and[iff[green,yellow],size1],iota(filter(filter(x.s, size3), not[green])))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:green;4:yellow;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:green
'λx.apply(size3,iota(filter(filter(x.s, size1), green)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green
'λx.forall(green,filter(filter(filter(x.s, size2), size3), size3))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3;4:size3
'λx.apply(iff[yellow,rectangle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:yellow;4:rectangle;1:%s.o;2:x
'λx.exists(yellow, filter(filter(x.s, triangle), size2))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2
'λx.exists(yellow, filter(filter(x.s, triangle), green))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green
'λx.apply(size2,iota(filter(filter(x.s, size1), size2)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2
'λx.apply(size2,iota(filter(filter(x.s, size1), size3)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size3
'λx.apply(size2,iota(filter(filter(x.s, size3), size3)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3
'λx.apply(size1,iota(filter(filter(x.s, size3), size3)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3
'λx.apply(size3,iota(filter(filter(x.s, size2), size1)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1
'λx.empty(filter(filter(x.s, yellow), and[rectangle,green]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:rectangle;4:green
'λx.apply(or[or[implies[iff[and[size1,circle],circle],size3],green],apply(same_size,x.o)],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:size1;4:circle;4:circle;4:size3;4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(not[not[green]],iota(filter(filter(filter(x.s, apply(same_shape,x.o)), not[blue]), size1)))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:blue;4:size1
'λx.apply(and[circle,or[iff[or[blue,and[not[or[iff[blue,size3],and[size1,apply(same_shape,iota(x.s))]]],triangle]],size1],and[apply(same_size,x.o),rectangle]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:or[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:blue;4:and[%s,%s];4:not[%s];4:or[%s,%s];4:iff[%s,%s];4:blue;4:size3;4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle;4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:rectangle;1:%s.o;2:x
'λx.empty(filter(x.s, and[size3,triangle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:triangle
'λx.apply(iff[circle,yellow],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:circle;4:yellow;1:%s.o;2:x
'λx.apply(or[green,and[blue,apply(same_color,iota(x.s))]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(triangle,iota(filter(x.s, apply(same_color,iota(filter(filter(x.s, circle), triangle))))))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle
'λx.apply(not[not[not[or[apply(same_size,iota(x.s)),size2]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:not[%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size2;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, circle), size2)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size2
'λx.apply(apply(same_color,x.o),iota(filter(filter(filter(filter(x.s, apply(same_shape,iota(filter(filter(filter(filter(x.s, or[not[size1],and[rectangle,triangle]]), size2), triangle), size2)))), size2), not[yellow]), rectangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:size1;4:and[%s,%s];4:rectangle;4:triangle;4:size2;4:triangle;4:size2;4:size2;4:not[%s];4:yellow;4:rectangle
'λx.empty(filter(filter(x.s, blue), nor[or[yellow,circle],not[rectangle]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:nor[%s,%s];4:or[%s,%s];4:yellow;4:circle;4:not[%s];4:rectangle
'λx.apply(and[and[size1,and[size1,circle]],not[triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:size1;4:circle;4:not[%s];4:triangle;1:%s.o;2:x
'λx.apply(and[nor[apply(same_size,x.o),and[rectangle,green]],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:rectangle;4:green;4:size2;1:%s.o;2:x
'λx.apply(and[not[rectangle],and[apply(same_color,iota(filter(x.s, apply(same_shape,x.o)))),size1]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(and[apply(same_size,iota(x.s)),rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:rectangle;1:%s.o;2:x
'λx.exists(or[rectangle,nor[blue,size2]], filter(filter(x.s, iff[not[or[size1,and[blue,and[rectangle,and[yellow,apply(size-leq,iota(x.s))]]]]],green]), not[size1]))'	0:exists(%s, %s);4:or[%s,%s];4:rectangle;4:nor[%s,%s];4:blue;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:not[%s];4:or[%s,%s];4:size1;4:and[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:yellow;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:green;4:not[%s];4:size1
'λx.apply(nand[yellow,rectangle],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:yellow;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(x.s), filter(x.s, and[rectangle,size3]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:size3
'λx.apply(nand[size2,nand[circle,apply(size-gt,iota(filter(x.s, apply(size-gt,iota(x.s)))))]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size2;4:nand[%s,%s];4:circle;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.exists(blue, filter(filter(x.s, and[blue,apply(same_shape,x.o)]), and[implies[and[rectangle,green],triangle],and[size1,apply(size-gt,iota(x.s))]]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:rectangle;4:green;4:triangle;4:and[%s,%s];4:size1;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, triangle), and[size3,rectangle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:size3;4:rectangle
'λx.apply(and[blue,circle],iota(filter(filter(x.s, not[size2]), yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:yellow
'λx.forall(and[size1,not[and[not[circle],not[size1]]]],filter(x.s, not[size3]))'	0:forall(%s,%s);4:and[%s,%s];4:size1;4:not[%s];4:and[%s,%s];4:not[%s];4:circle;4:not[%s];4:size1;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3
'λx.contains(iota(filter(filter(x.s, and[rectangle,rectangle]), green)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:rectangle;4:green;3:%s.s;2:x
'λx.apply(nand[or[circle,size3],size1],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:or[%s,%s];4:circle;4:size3;4:size1;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, size3), and[size3,yellow])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:size3;4:yellow
'λx.exists(implies[blue,nand[size2,green]], x.s)'	0:exists(%s, %s);4:implies[%s,%s];4:blue;4:nand[%s,%s];4:size2;4:green;3:%s.s;2:x
'λx.apply(green,iota(filter(x.s, iff[rectangle,yellow])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:rectangle;4:yellow
'λx.apply(or[green,apply(same_shape,iota(x.s))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(filter(x.s, blue), triangle))),iota(filter(filter(x.s, and[rectangle,size2]), yellow)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:size2;4:yellow
'λx.apply(rectangle,iota(filter(filter(x.s, rectangle), iff[blue,and[blue,blue]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:iff[%s,%s];4:blue;4:and[%s,%s];4:blue;4:blue
'λx.apply(triangle,iota(filter(x.s, and[size1,not[triangle]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:not[%s];4:triangle
'λx.apply(circle,iota(filter(x.s, blue)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.exists(or[and[blue,and[implies[triangle,and[circle,size2]],or[not[not[rectangle]],and[green,iff[apply(same_color,x.o),rectangle]]]]],blue], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:implies[%s,%s];4:triangle;4:and[%s,%s];4:circle;4:size2;4:or[%s,%s];4:not[%s];4:not[%s];4:rectangle;4:and[%s,%s];4:green;4:iff[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle;4:blue;3:%s.s;2:x
'λx.contains(iota(filter(x.s, apply(same_color,iota(filter(x.s, size3))))), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;3:%s.s;2:x
'λx.exists(not[size2], filter(filter(filter(filter(filter(x.s, size2), circle), circle), iff[or[size1,and[size3,not[size3]]],size1]), not[green]))'	0:exists(%s, %s);4:not[%s];4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle;4:circle;4:iff[%s,%s];4:or[%s,%s];4:size1;4:and[%s,%s];4:size3;4:not[%s];4:size3;4:size1;4:not[%s];4:green
'λx.apply(size3,iota(filter(x.s, and[size3,triangle])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:triangle
'λx.apply(or[or[green,size1],triangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:green;4:size1;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[green,rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:rectangle;1:%s.o;2:x
'λx.apply(not[or[rectangle,triangle]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:rectangle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[rectangle,or[green,size3]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:or[%s,%s];4:green;4:size3;1:%s.o;2:x
'λx.exists(size2, filter(filter(x.s, blue), green))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green
'λx.apply(size2,iota(filter(x.s, apply(same_shape,iota(filter(x.s, green))))))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(size2,iota(filter(x.s, not[rectangle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle
'λx.apply(size1,iota(filter(x.s, not[rectangle])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle
'λx.apply(not[apply(same_color,x.o)],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(and[and[not[size1],triangle],blue], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size1;4:triangle;4:blue;3:%s.s;2:x
'λx.apply(and[green,and[yellow,circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:yellow;4:circle;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(x.s, circle), or[not[not[rectangle]],nand[size3,apply(same_shape,x.o)]]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:not[%s];4:not[%s];4:rectangle;4:nand[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, not[rectangle])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle
'λx.apply(nor[size1,triangle],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:size1;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[or[apply(size-lt,iota(filter(x.s, rectangle))),green],not[rectangle]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.apply(not[or[or[blue,and[not[size1],triangle]],apply(same_size,iota(x.s))]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:or[%s,%s];4:blue;4:and[%s,%s];4:not[%s];4:size1;4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.exists(and[and[or[yellow,size2],size3],and[and[circle,apply(size-gt,iota(x.s))],size1]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:yellow;4:size2;4:size3;4:and[%s,%s];4:and[%s,%s];4:circle;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:size1;3:%s.s;2:x
'λx.exists(size1, filter(filter(x.s, size2), and[yellow,size1]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:yellow;4:size1
'λx.exists(size1, filter(filter(x.s, and[or[rectangle,not[or[and[triangle,rectangle],blue]]],or[triangle,triangle]]), nor[and[blue,not[triangle]],iff[rectangle,apply(same_size,x.o)]]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:triangle;4:rectangle;4:blue;4:or[%s,%s];4:triangle;4:triangle;4:nor[%s,%s];4:and[%s,%s];4:blue;4:not[%s];4:triangle;4:iff[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(or[implies[green,rectangle],size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:implies[%s,%s];4:green;4:rectangle;4:size3;1:%s.o;2:x
'λx.apply(iff[nand[size3,blue],yellow],iota(filter(filter(x.s, circle), rectangle)))'	0:apply(%s,%s);4:iff[%s,%s];4:nand[%s,%s];4:size3;4:blue;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle
'λx.forall(size3,filter(filter(filter(x.s, triangle), rectangle), green))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle;4:green
'λx.apply(rectangle,iota(filter(filter(filter(filter(x.s, not[blue]), or[size2,implies[triangle,apply(same_shape,iota(filter(filter(filter(filter(x.s, nand[rectangle,and[size2,yellow]]), green), nand[yellow,or[size1,nor[size2,triangle]]]), and[and[apply(same_shape,x.o),apply(same_color,iota(filter(x.s, size2)))],and[triangle,triangle]])))]]), triangle), yellow)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:or[%s,%s];4:size2;4:implies[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:rectangle;4:and[%s,%s];4:size2;4:yellow;4:green;4:nand[%s,%s];4:yellow;4:or[%s,%s];4:size1;4:nor[%s,%s];4:size2;4:triangle;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:triangle;4:triangle;4:triangle;4:yellow
'λx.apply(or[implies[size2,size3],size1],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:or[%s,%s];4:implies[%s,%s];4:size2;4:size3;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(blue,iota(filter(filter(x.s, size2), size1)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1
'λx.apply(blue,iota(filter(filter(x.s, size1), size3)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size3
'λx.apply(and[circle,not[green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:not[%s];4:green;1:%s.o;2:x
'λx.empty(filter(x.s, and[triangle,size2]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:size2
'λx.forall(apply(same_size,x.o),filter(filter(x.s, and[apply(same_shape,iota(x.s)),size1]), size3))'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size1;4:size3
'λx.apply(nand[nand[or[blue,triangle],or[size1,size2]],blue],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:blue;4:triangle;4:or[%s,%s];4:size1;4:size2;4:blue;1:%s.o;2:x
'λx.forall(and[size1,not[green]],filter(x.s, apply(same_size,iota(filter(filter(filter(filter(x.s, blue), apply(same_color,x.o)), not[yellow]), size2)))))'	0:forall(%s,%s);4:and[%s,%s];4:size1;4:not[%s];4:green;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:yellow;4:size2
'λx.contains(iota(filter(x.s, not[blue])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;3:%s.s;2:x
'λx.empty(filter(filter(x.s, triangle), nor[blue,or[rectangle,apply(same_size,iota(x.s))]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:nor[%s,%s];4:blue;4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(not[nor[size3,blue]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:nor[%s,%s];4:size3;4:blue;1:iota(%s);3:%s.s;2:x
'λx.forall(size1,filter(filter(filter(x.s, and[nor[blue,size3],apply(same_color,iota(filter(filter(filter(x.s, rectangle), yellow), yellow)))]), rectangle), and[circle,triangle]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:blue;4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:yellow;4:yellow;4:rectangle;4:and[%s,%s];4:circle;4:triangle
'λx.empty(filter(x.s, and[triangle,green]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:green
'λx.contains(x.o, filter(filter(x.s, size3), nand[not[apply(size-lt,iota(filter(x.s, rectangle)))],not[or[size1,not[or[blue,blue]]]]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:nand[%s,%s];4:not[%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:or[%s,%s];4:size1;4:not[%s];4:or[%s,%s];4:blue;4:blue
'λx.apply(apply(size-gt,iota(filter(filter(x.s, size1), size3))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size3,not[apply(same_shape,iota(filter(filter(filter(filter(filter(filter(x.s, blue), size2), apply(same_size,x.o)), circle), circle), rectangle)))]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;4:circle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.exists(apply(size-leq,x.o), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:size-leq;1:%s.o;2:x;3:%s.s;2:x
'λx.forall(triangle,filter(x.s, and[size2,size3]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:size3
'λx.apply(and[and[triangle,blue],yellow],iota(filter(filter(x.s, size3), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:blue;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue
'λx.exists(blue, filter(x.s, apply(same_shape,x.o)))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(and[rectangle,apply(same_size,iota(filter(x.s, size3)))],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;1:iota(%s);3:%s.s;2:x
'λx.forall(yellow,filter(x.s, not[triangle]))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.apply(or[implies[nor[or[and[triangle,apply(same_shape,iota(x.s))],size1],size3],apply(same_size,x.o)],or[not[apply(same_size,x.o)],or[size3,size2]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:implies[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size1;4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:size3;4:size2;1:iota(%s);3:%s.s;2:x
'λx.forall(and[not[size3],triangle],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:not[%s];4:size3;4:triangle;3:%s.s;2:x
'λx.apply(triangle,iota(filter(x.s, or[yellow,rectangle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:rectangle
'λx.apply(and[or[blue,rectangle],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:blue;4:rectangle;4:triangle;1:%s.o;2:x
'λx.apply(or[not[blue],green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:blue;4:green;1:%s.o;2:x
'λx.forall(not[apply(size-lt,iota(filter(x.s, rectangle)))],filter(x.s, iff[yellow,blue]))'	0:forall(%s,%s);4:not[%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:yellow;4:blue
'λx.apply(or[and[yellow,rectangle],not[rectangle]],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:yellow;4:rectangle;4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(and[or[or[circle,triangle],apply(same_shape,x.o)],iff[size2,size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:circle;4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:iff[%s,%s];4:size2;4:size2;1:%s.o;2:x
'λx.apply(and[rectangle,blue],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.exists(nor[blue,iff[apply(size-lt,iota(filter(filter(filter(filter(filter(filter(x.s, and[triangle,circle]), or[not[circle],iff[size2,apply(same_color,x.o)]]), size2), apply(same_color,iota(filter(x.s, blue)))), size3), triangle))),triangle]], x.s)'	0:exists(%s, %s);4:nor[%s,%s];4:blue;4:iff[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:circle;4:or[%s,%s];4:not[%s];4:circle;4:iff[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3;4:triangle;4:triangle;3:%s.s;2:x
'λx.exists(and[yellow,not[blue]], filter(x.s, green))'	0:exists(%s, %s);4:and[%s,%s];4:yellow;4:not[%s];4:blue;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.exists(rectangle, filter(x.s, blue))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.exists(green, filter(filter(filter(x.s, green), yellow), and[triangle,apply(same_color,iota(filter(x.s, circle)))]))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[not[and[not[and[size1,and[or[size1,size2],rectangle]]],or[not[not[rectangle]],nand[rectangle,yellow]]]],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:or[%s,%s];4:size1;4:size2;4:rectangle;4:or[%s,%s];4:not[%s];4:not[%s];4:rectangle;4:nand[%s,%s];4:rectangle;4:yellow;4:yellow;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(filter(filter(filter(x.s, and[size3,and[blue,size1]]), size3), nand[and[and[or[and[size3,blue],yellow],apply(same_size,x.o)],nand[circle,blue]],and[size2,triangle]]), and[blue,green]), apply(same_shape,iota(x.s)))))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:and[%s,%s];4:blue;4:size1;4:size3;4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size3;4:blue;4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:nand[%s,%s];4:circle;4:blue;4:and[%s,%s];4:size2;4:triangle;4:and[%s,%s];4:blue;4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, and[circle,size1]), rectangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size1;4:rectangle
'λx.contains(x.o, filter(filter(x.s, and[yellow,and[apply(same_color,x.o),size2]]), size2))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size2;4:size2
'λx.apply(and[yellow,green],iota(filter(filter(filter(filter(x.s, or[triangle,triangle]), apply(same_color,iota(x.s))), and[size2,size2]), and[size2,or[green,and[circle,or[size2,implies[size3,not[size2]]]]]])))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:size2;4:and[%s,%s];4:size2;4:or[%s,%s];4:green;4:and[%s,%s];4:circle;4:or[%s,%s];4:size2;4:implies[%s,%s];4:size3;4:not[%s];4:size2
'λx.apply(apply(size-lt,iota(x.s)),iota(filter(x.s, blue)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(not[size2],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(not[size1],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(not[size3],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(or[and[blue,triangle],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:blue;4:triangle;4:blue;1:%s.o;2:x
'λx.apply(not[apply(same_color,iota(filter(filter(x.s, or[or[triangle,rectangle],size2]), and[or[green,not[rectangle]],rectangle])))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:triangle;4:rectangle;4:size2;4:and[%s,%s];4:or[%s,%s];4:green;4:not[%s];4:rectangle;4:rectangle;1:%s.o;2:x
'λx.apply(not[not[size2]],iota(filter(x.s, and[size2,apply(same_color,x.o)])))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, green), blue), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue;4:triangle
'λx.apply(not[size2],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(or[and[or[circle,and[rectangle,circle]],yellow],size1],iota(filter(x.s, apply(size-geq,x.o))))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:circle;4:and[%s,%s];4:rectangle;4:circle;4:yellow;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.apply(and[blue,and[apply(same_size,x.o),and[apply(size-lt,x.o),size1]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:size1;1:%s.o;2:x
'λx.apply(iff[or[size3,apply(same_size,iota(x.s))],rectangle],iota(filter(x.s, and[yellow,not[nand[implies[size1,green],circle]]])))'	0:apply(%s,%s);4:iff[%s,%s];4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:not[%s];4:nand[%s,%s];4:implies[%s,%s];4:size1;4:green;4:circle
'λx.apply(nand[and[green,circle],blue],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:green;4:circle;4:blue;1:%s.o;2:x
'λx.forall(implies[and[green,circle],blue],filter(filter(x.s, size2), size2))'	0:forall(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:green;4:circle;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2
'λx.apply(and[circle,apply(same_size,iota(filter(filter(filter(x.s, not[triangle]), apply(same_size,x.o)), not[and[apply(same_color,iota(filter(filter(x.s, and[not[size1],rectangle]), size2))),yellow]])))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:size1;4:rectangle;4:size2;4:yellow;1:%s.o;2:x
'λx.apply(not[nor[and[blue,size3],implies[rectangle,apply(same_color,x.o)]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:nor[%s,%s];4:and[%s,%s];4:blue;4:size3;4:implies[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_size,iota(filter(x.s, circle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;1:%s.o;2:x
'λx.forall(not[size2],filter(x.s, blue))'	0:forall(%s,%s);4:not[%s];4:size2;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(not[iff[yellow,triangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:iff[%s,%s];4:yellow;4:triangle;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, or[size3,triangle])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:triangle
'λx.apply(or[circle,rectangle],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[size2,not[blue]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:not[%s];4:blue;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, or[apply(size-geq,iota(x.s)),nor[blue,size1]]), blue), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:nor[%s,%s];4:blue;4:size1;4:blue;4:blue
'λx.apply(rectangle,iota(filter(filter(filter(filter(x.s, circle), rectangle), nand[green,yellow]), yellow)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle;4:nand[%s,%s];4:green;4:yellow;4:yellow
'λx.apply(and[and[and[not[and[circle,or[size2,or[size1,nor[size2,size1]]]]],triangle],rectangle],not[and[rectangle,not[blue]]]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:circle;4:or[%s,%s];4:size2;4:or[%s,%s];4:size1;4:nor[%s,%s];4:size2;4:size1;4:triangle;4:rectangle;4:not[%s];4:and[%s,%s];4:rectangle;4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.contains(iota(x.s), filter(filter(filter(filter(x.s, triangle), size2), not[size2]), yellow))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2;4:not[%s];4:size2;4:yellow
'λx.apply(or[green,and[and[and[implies[size3,size3],size2],rectangle],iff[circle,blue]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:size3;4:size3;4:size2;4:rectangle;4:iff[%s,%s];4:circle;4:blue;1:%s.o;2:x
'λx.apply(nand[green,nand[nor[circle,rectangle],and[size2,yellow]]],iota(filter(filter(filter(filter(x.s, circle), size3), and[triangle,and[triangle,size1]]), blue)))'	0:apply(%s,%s);4:nand[%s,%s];4:green;4:nand[%s,%s];4:nor[%s,%s];4:circle;4:rectangle;4:and[%s,%s];4:size2;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3;4:and[%s,%s];4:triangle;4:and[%s,%s];4:triangle;4:size1;4:blue
'λx.apply(not[apply(same_shape,iota(filter(filter(x.s, and[green,not[apply(same_color,x.o)]]), blue)))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue;1:%s.o;2:x
'λx.empty(filter(filter(x.s, blue), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow
'λx.empty(filter(filter(x.s, blue), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle
'λx.empty(filter(x.s, or[not[or[size2,yellow]],rectangle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:or[%s,%s];4:size2;4:yellow;4:rectangle
'λx.apply(and[rectangle,triangle],iota(filter(filter(x.s, size3), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue
'λx.apply(and[apply(same_shape,iota(filter(x.s, and[yellow,or[size3,yellow]]))),and[apply(same_shape,iota(x.s)),circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:or[%s,%s];4:size3;4:yellow;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle;1:%s.o;2:x
'λx.apply(and[and[yellow,or[size3,rectangle]],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:or[%s,%s];4:size3;4:rectangle;4:size1;1:%s.o;2:x
'λx.apply(or[rectangle,nand[apply(same_shape,iota(filter(filter(filter(filter(filter(x.s, rectangle), and[size3,not[yellow]]), circle), green), nor[size3,size1]))),blue]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:size3;4:not[%s];4:yellow;4:circle;4:green;4:nor[%s,%s];4:size3;4:size1;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(not[and[apply(same_size,iota(filter(filter(x.s, size3), not[blue]))),rectangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:blue;4:rectangle;1:%s.o;2:x
'λx.exists(yellow, filter(filter(x.s, blue), size1))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1
'λx.apply(size2,iota(filter(x.s, or[size2,triangle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:triangle
'λx.contains(x.o, filter(filter(x.s, circle), circle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:circle
'λx.apply(size2,iota(filter(x.s, implies[nor[and[blue,and[green,green]],implies[and[apply(same_shape,iota(x.s)),circle],apply(size-leq,iota(x.s))]],blue])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:green;4:green;4:implies[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:blue
'λx.apply(triangle,iota(filter(filter(x.s, not[size3]), circle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;4:circle
'λx.apply(iff[size1,not[green]],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:size1;4:not[%s];4:green;1:iota(%s);3:%s.s;2:x
'λx.forall(and[rectangle,green],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:rectangle;4:green;3:%s.s;2:x
'λx.empty(filter(x.s, and[green,rectangle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:rectangle
'λx.apply(or[blue,size3],iota(filter(filter(filter(x.s, not[size3]), rectangle), yellow)))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;4:rectangle;4:yellow
'λx.contains(iota(x.s), filter(filter(filter(x.s, rectangle), triangle), circle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle;4:circle
'λx.exists(and[size1,green], filter(filter(filter(x.s, size2), nand[blue,not[size3]]), blue))'	0:exists(%s, %s);4:and[%s,%s];4:size1;4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:nand[%s,%s];4:blue;4:not[%s];4:size3;4:blue
'λx.apply(implies[circle,and[yellow,rectangle]],iota(filter(filter(x.s, not[apply(same_size,x.o)]), green)))'	0:apply(%s,%s);4:implies[%s,%s];4:circle;4:and[%s,%s];4:yellow;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green
'λx.apply(iff[size1,or[and[blue,or[size1,green]],or[size1,size3]]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:size1;4:or[%s,%s];4:and[%s,%s];4:blue;4:or[%s,%s];4:size1;4:green;4:or[%s,%s];4:size1;4:size3;1:%s.o;2:x
'λx.contains(iota(filter(x.s, apply(same_color,x.o))), filter(x.s, yellow))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(yellow,iota(filter(filter(x.s, size3), rectangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle
'λx.empty(filter(filter(x.s, or[and[size2,circle],yellow]), and[iff[and[size3,size2],green],and[green,green]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size2;4:circle;4:yellow;4:and[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:size3;4:size2;4:green;4:and[%s,%s];4:green;4:green
'λx.exists(and[green,yellow], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:green;4:yellow;3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, not[implies[not[triangle],triangle]]), size3)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:implies[%s,%s];4:not[%s];4:triangle;4:triangle;4:size3
'λx.apply(size3,iota(filter(filter(filter(x.s, size3), not[green]), not[circle])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:green;4:not[%s];4:circle
'λx.apply(or[circle,and[green,blue]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:and[%s,%s];4:green;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(x.s, and[nor[iff[yellow,and[blue,implies[not[size2],nand[green,nand[triangle,size2]]]]],size3],size1])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:iff[%s,%s];4:yellow;4:and[%s,%s];4:blue;4:implies[%s,%s];4:not[%s];4:size2;4:nand[%s,%s];4:green;4:nand[%s,%s];4:triangle;4:size2;4:size3;4:size1
'λx.apply(or[size2,green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:green;1:%s.o;2:x
'λx.apply(yellow,iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(or[rectangle,triangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[blue,size3],iota(filter(filter(filter(x.s, rectangle), rectangle), not[size2])))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle;4:not[%s];4:size2
'λx.apply(blue,iota(filter(x.s, and[size2,yellow])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:yellow
'λx.apply(size3,iota(filter(filter(filter(x.s, not[or[and[rectangle,triangle],or[triangle,and[apply(same_shape,iota(x.s)),triangle]]]]), not[blue]), size1)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:rectangle;4:triangle;4:or[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle;4:not[%s];4:blue;4:size1
'λx.apply(not[rectangle],iota(filter(filter(filter(filter(filter(x.s, not[rectangle]), and[not[not[apply(same_color,x.o)]],yellow]), and[blue,circle]), and[blue,rectangle]), size2)))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;4:and[%s,%s];4:not[%s];4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;4:and[%s,%s];4:blue;4:circle;4:and[%s,%s];4:blue;4:rectangle;4:size2
'λx.apply(size1,iota(filter(filter(filter(x.s, nand[rectangle,circle]), blue), or[and[and[size1,yellow],or[size2,and[not[green],or[green,iff[size1,green]]]]],not[iff[yellow,circle]]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:rectangle;4:circle;4:blue;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:yellow;4:or[%s,%s];4:size2;4:and[%s,%s];4:not[%s];4:green;4:or[%s,%s];4:green;4:iff[%s,%s];4:size1;4:green;4:not[%s];4:iff[%s,%s];4:yellow;4:circle
'λx.apply(implies[triangle,and[yellow,circle]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:triangle;4:and[%s,%s];4:yellow;4:circle;1:%s.o;2:x
'λx.apply(and[apply(same_size,iota(filter(x.s, blue))),not[size2]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(filter(x.s, size3), and[green,blue]), size3)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:green;4:blue;4:size3
'λx.apply(and[size3,size3],iota(filter(x.s, green)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(or[and[circle,and[size3,or[and[yellow,not[yellow]],apply(same_size,iota(x.s))]]],green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:size3;4:or[%s,%s];4:and[%s,%s];4:yellow;4:not[%s];4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:green;1:%s.o;2:x
'λx.apply(and[size1,size3],iota(filter(x.s, green)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[yellow,apply(same_size,iota(x.s))],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.forall(not[and[and[not[blue],and[apply(size-leq,iota(x.s)),rectangle]],not[or[size1,triangle]]]],x.s)'	0:forall(%s,%s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:blue;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:rectangle;4:not[%s];4:or[%s,%s];4:size1;4:triangle;3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(filter(x.s, size1), green), and[or[iff[triangle,and[not[nor[iff[not[and[not[not[not[rectangle]]],apply(same_color,x.o)]],yellow],not[and[circle,yellow]]]],or[and[apply(same_size,iota(x.s)),and[circle,and[rectangle,rectangle]]],or[size2,and[rectangle,triangle]]]]],green],green])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green;4:and[%s,%s];4:or[%s,%s];4:iff[%s,%s];4:triangle;4:and[%s,%s];4:not[%s];4:nor[%s,%s];4:iff[%s,%s];4:not[%s];4:and[%s,%s];4:not[%s];4:not[%s];4:not[%s];4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;4:not[%s];4:and[%s,%s];4:circle;4:yellow;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:and[%s,%s];4:rectangle;4:rectangle;4:or[%s,%s];4:size2;4:and[%s,%s];4:rectangle;4:triangle;4:green;4:green
'λx.contains(iota(filter(x.s, and[size3,triangle])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:triangle;3:%s.s;2:x
'λx.forall(implies[triangle,nand[implies[size1,iff[size1,apply(size-leq,x.o)]],and[blue,apply(size-gt,iota(filter(x.s, and[or[size1,or[yellow,blue]],green])))]]],x.s)'	0:forall(%s,%s);4:implies[%s,%s];4:triangle;4:nand[%s,%s];4:implies[%s,%s];4:size1;4:iff[%s,%s];4:size1;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:and[%s,%s];4:blue;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:size1;4:or[%s,%s];4:yellow;4:blue;4:green;3:%s.s;2:x
'λx.apply(nand[yellow,size3],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:yellow;4:size3;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, or[blue,green])), filter(x.s, or[and[nand[triangle,yellow],and[green,green]],or[not[size2],size3]]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:green;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:triangle;4:yellow;4:and[%s,%s];4:green;4:green;4:or[%s,%s];4:not[%s];4:size2;4:size3
'λx.apply(triangle,iota(filter(filter(filter(filter(filter(x.s, triangle), and[and[circle,size3],or[rectangle,triangle]]), size1), size3), not[circle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:and[%s,%s];4:circle;4:size3;4:or[%s,%s];4:rectangle;4:triangle;4:size1;4:size3;4:not[%s];4:circle
'λx.apply(size2,iota(filter(x.s, nand[triangle,rectangle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:triangle;4:rectangle
'λx.apply(apply(same_size,x.o),iota(filter(x.s, size3)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(apply(same_size,x.o),iota(filter(x.s, size2)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(apply(same_size,x.o),iota(filter(x.s, green)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.forall(not[nand[size2,size2]],x.s)'	0:forall(%s,%s);4:not[%s];4:nand[%s,%s];4:size2;4:size2;3:%s.s;2:x
'λx.apply(iff[and[blue,rectangle],yellow],iota(filter(x.s, apply(same_size,iota(x.s)))))'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:blue;4:rectangle;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(not[and[yellow,triangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:yellow;4:triangle;1:%s.o;2:x
'λx.apply(apply(same_size,iota(x.s)),iota(filter(filter(filter(x.s, blue), size1), circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1;4:circle
'λx.apply(triangle,iota(filter(filter(filter(x.s, yellow), size1), triangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;4:triangle
'λx.apply(and[apply(size-gt,iota(filter(x.s, yellow))),and[not[size1],or[not[and[and[size3,yellow],triangle]],yellow]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:not[%s];4:size1;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:yellow;4:triangle;4:yellow;1:%s.o;2:x
'λx.apply(and[size3,or[yellow,size1]],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:or[%s,%s];4:yellow;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.exists(iff[size1,size1], filter(x.s, not[not[and[and[nand[and[not[green],green],circle],triangle],yellow]]]))'	0:exists(%s, %s);4:iff[%s,%s];4:size1;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:not[%s];4:green;4:green;4:circle;4:triangle;4:yellow
'λx.apply(not[and[size2,nand[or[rectangle,apply(same_color,x.o)],blue]]],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size2;4:nand[%s,%s];4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.empty(filter(filter(filter(x.s, rectangle), circle), and[blue,circle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle;4:and[%s,%s];4:blue;4:circle
'λx.apply(and[apply(same_shape,x.o),size2],iota(filter(filter(x.s, blue), size3)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3
'λx.contains(iota(x.s), filter(x.s, or[not[size1],apply(same_shape,x.o)]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, and[circle,and[yellow,yellow]]), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:and[%s,%s];4:yellow;4:yellow;4:green
'λx.apply(yellow,iota(filter(filter(x.s, apply(same_shape,iota(filter(x.s, size3)))), nor[green,circle])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:nor[%s,%s];4:green;4:circle
'λx.apply(and[iff[nand[or[and[size1,and[apply(same_size,iota(x.s)),rectangle]],nand[blue,size1]],nor[not[green],yellow]],blue],nor[apply(same_shape,x.o),apply(same_color,x.o)]],iota(filter(filter(x.s, and[size2,size1]), not[size2])))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:rectangle;4:nand[%s,%s];4:blue;4:size1;4:nor[%s,%s];4:not[%s];4:green;4:yellow;4:blue;4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:size1;4:not[%s];4:size2
'λx.apply(and[apply(same_size,iota(x.s)),not[size2]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:not[%s];4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(x.s, or[yellow,yellow])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:yellow
'λx.apply(or[not[and[and[size3,and[or[yellow,size3],size1]],or[or[green,size2],circle]]],rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:or[%s,%s];4:yellow;4:size3;4:size1;4:or[%s,%s];4:or[%s,%s];4:green;4:size2;4:circle;4:rectangle;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, rectangle), and[nor[and[green,not[circle]],size2],apply(same_color,iota(filter(x.s, not[and[or[size1,blue],rectangle]])))]), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:green;4:not[%s];4:circle;4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:or[%s,%s];4:size1;4:blue;4:rectangle;4:triangle
'λx.forall(rectangle,filter(filter(x.s, yellow), apply(same_color,iota(x.s))))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(not[not[size2]],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(not[size1],iota(filter(filter(filter(x.s, blue), or[triangle,triangle]), and[green,and[green,apply(size-geq,iota(filter(x.s, not[rectangle])))]])))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:triangle;4:triangle;4:and[%s,%s];4:green;4:and[%s,%s];4:green;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle
'λx.apply(triangle,iota(filter(filter(filter(x.s, green), rectangle), rectangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle;4:rectangle
'λx.apply(or[size1,green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:green;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(filter(x.s, yellow), and[blue,yellow]), yellow)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:blue;4:yellow;4:yellow
'λx.apply(rectangle,iota(filter(filter(x.s, size3), size3)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3
'λx.apply(apply(same_color,iota(x.s)),iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(or[yellow,size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:size2;1:%s.o;2:x
'λx.contains(iota(filter(x.s, nand[size2,and[rectangle,circle]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size2;4:and[%s,%s];4:rectangle;4:circle;3:%s.s;2:x
'λx.apply(and[or[size1,circle],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size1;4:circle;4:rectangle;1:%s.o;2:x
'λx.apply(and[size3,and[not[implies[size3,apply(same_shape,x.o)]],and[apply(same_color,iota(x.s)),apply(same_color,iota(x.s))]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:not[%s];4:implies[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.empty(filter(x.s, not[or[and[green,blue],circle]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:green;4:blue;4:circle
'λx.exists(nor[or[green,rectangle],size2], filter(filter(x.s, apply(same_shape,iota(filter(filter(filter(x.s, size3), nor[green,not[circle]]), size3)))), blue))'	0:exists(%s, %s);4:nor[%s,%s];4:or[%s,%s];4:green;4:rectangle;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:nor[%s,%s];4:green;4:not[%s];4:circle;4:size3;4:blue
'λx.forall(size2,filter(x.s, or[size1,apply(same_size,iota(x.s))]))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(and[circle,apply(same_color,x.o)],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.exists(or[yellow,size2], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:yellow;4:size2;3:%s.s;2:x
'λx.apply(blue,iota(filter(x.s, and[or[implies[nor[or[and[triangle,apply(same_shape,iota(x.s))],size1],size3],apply(same_size,x.o)],or[not[apply(same_size,x.o)],or[size3,size2]]],circle])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size1;4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:size3;4:size2;4:circle
'λx.forall(not[implies[blue,size2]],x.s)'	0:forall(%s,%s);4:not[%s];4:implies[%s,%s];4:blue;4:size2;3:%s.s;2:x
'λx.apply(and[size3,and[size3,blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:size3;4:blue;1:%s.o;2:x
'λx.apply(iff[size1,apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, and[or[yellow,yellow],yellow])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:yellow;4:yellow;4:yellow
'λx.apply(apply(same_size,iota(filter(filter(filter(x.s, green), rectangle), and[apply(size-geq,x.o),not[nand[green,rectangle]]]))),iota(filter(filter(x.s, and[size1,and[blue,or[green,and[blue,and[rectangle,size2]]]]]), and[blue,circle])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:not[%s];4:nand[%s,%s];4:green;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:and[%s,%s];4:blue;4:or[%s,%s];4:green;4:and[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:size2;4:and[%s,%s];4:blue;4:circle
'λx.apply(and[size3,and[and[yellow,green],nor[and[circle,or[circle,blue]],size1]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:yellow;4:green;4:nor[%s,%s];4:and[%s,%s];4:circle;4:or[%s,%s];4:circle;4:blue;4:size1;1:%s.o;2:x
'λx.forall(blue,filter(filter(x.s, circle), apply(size-lt,iota(filter(x.s, apply(same_size,x.o))))))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(not[and[triangle,not[rectangle]]],iota(filter(x.s, apply(same_size,x.o))))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:triangle;4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(nor[blue,yellow],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:blue;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size2,and[not[apply(same_shape,iota(x.s))],green]],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.contains(iota(filter(x.s, not[blue])), filter(filter(x.s, and[yellow,size1]), green))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size1;4:green
'λx.apply(or[size1,size2],iota(filter(filter(x.s, blue), or[apply(same_color,iota(x.s)),nand[green,triangle]])))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:nand[%s,%s];4:green;4:triangle
'λx.empty(filter(filter(filter(filter(filter(filter(x.s, not[and[blue,rectangle]]), apply(same_shape,iota(x.s))), yellow), yellow), green), and[and[not[circle],not[yellow]],and[size3,yellow]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:blue;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:yellow;4:yellow;4:green;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:circle;4:not[%s];4:yellow;4:and[%s,%s];4:size3;4:yellow
'λx.apply(yellow,iota(filter(x.s, and[yellow,triangle])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:triangle
'λx.contains(iota(filter(x.s, triangle)), filter(x.s, circle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.forall(green,filter(filter(x.s, circle), or[green,and[triangle,triangle]]))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:green;4:and[%s,%s];4:triangle;4:triangle
'λx.apply(circle,iota(filter(filter(filter(filter(x.s, implies[triangle,triangle]), and[not[yellow],apply(size-leq,x.o)]), size1), or[nand[not[green],size1],apply(size-gt,x.o)])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:triangle;4:triangle;4:and[%s,%s];4:not[%s];4:yellow;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size1;4:or[%s,%s];4:nand[%s,%s];4:not[%s];4:green;4:size1;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.contains(iota(x.s), filter(x.s, or[size3,triangle]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:triangle
'λx.apply(and[or[size2,triangle],rectangle],iota(filter(filter(filter(x.s, or[green,yellow]), circle), implies[blue,circle])))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size2;4:triangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:yellow;4:circle;4:implies[%s,%s];4:blue;4:circle
'λx.apply(iff[blue,green],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:blue;4:green;1:iota(%s);3:%s.s;2:x
'λx.forall(yellow,filter(filter(x.s, and[and[green,triangle],green]), blue))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:green;4:triangle;4:green;4:blue
'λx.apply(nand[and[size1,size1],triangle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:size1;4:size1;4:triangle;1:%s.o;2:x
'λx.apply(not[implies[not[apply(size-lt,iota(x.s))],or[size2,or[circle,size3]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:implies[%s,%s];4:not[%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:or[%s,%s];4:circle;4:size3;1:%s.o;2:x
'λx.contains(iota(filter(x.s, or[and[rectangle,size1],circle])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:size1;4:circle;3:%s.s;2:x
'λx.apply(apply(same_shape,iota(filter(x.s, triangle))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(x.s, or[blue,yellow]), blue), nor[green,yellow]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:yellow;4:blue;4:nor[%s,%s];4:green;4:yellow
'λx.apply(apply(same_shape,iota(filter(x.s, yellow))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;1:%s.o;2:x
'λx.apply(and[not[not[apply(same_shape,iota(filter(x.s, size3)))]],not[green]],iota(filter(x.s, and[or[apply(same_color,iota(x.s)),not[apply(same_color,x.o)]],apply(same_size,x.o)])))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.contains(iota(filter(x.s, implies[nor[triangle,apply(same_color,x.o)],size1])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:nor[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1;3:%s.s;2:x
'λx.apply(and[size3,implies[and[size1,size3],green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:implies[%s,%s];4:and[%s,%s];4:size1;4:size3;4:green;1:%s.o;2:x
'λx.apply(triangle,iota(filter(x.s, implies[size2,yellow])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size2;4:yellow
'λx.contains(iota(x.s), filter(x.s, and[size1,nand[rectangle,and[size1,apply(same_shape,iota(x.s))]]]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:nand[%s,%s];4:rectangle;4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(or[apply(size-geq,iota(filter(x.s, and[size1,size1]))),size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size1;4:size1;1:%s.o;2:x
'λx.apply(and[and[and[nor[apply(same_size,x.o),and[rectangle,green]],size2],implies[apply(size-lt,x.o),and[and[nor[yellow,size1],not[size2]],yellow]]],apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:rectangle;4:green;4:size2;4:implies[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:and[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:yellow;4:size1;4:not[%s];4:size2;4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(not[apply(same_shape,x.o)],iota(filter(filter(filter(filter(x.s, yellow), triangle), size2), apply(same_shape,x.o))))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle;4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.empty(filter(x.s, or[green,and[or[not[rectangle],triangle],or[size3,size1]]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:rectangle;4:triangle;4:or[%s,%s];4:size3;4:size1
'λx.empty(filter(x.s, blue))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[circle,nor[and[blue,size3],implies[rectangle,apply(same_color,x.o)]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:nor[%s,%s];4:and[%s,%s];4:blue;4:size3;4:implies[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[rectangle,yellow],iota(filter(x.s, and[green,triangle])))'	0:apply(%s,%s);4:implies[%s,%s];4:rectangle;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:triangle
'λx.apply(rectangle,iota(filter(filter(filter(filter(filter(filter(filter(x.s, and[size1,triangle]), rectangle), nand[and[blue,circle],yellow]), rectangle), triangle), rectangle), rectangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:triangle;4:rectangle;4:nand[%s,%s];4:and[%s,%s];4:blue;4:circle;4:yellow;4:rectangle;4:triangle;4:rectangle;4:rectangle
'λx.apply(and[not[size1],rectangle],iota(filter(x.s, and[yellow,not[size3]])))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size1;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:not[%s];4:size3
'λx.apply(and[size1,implies[size2,size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:implies[%s,%s];4:size2;4:size3;1:%s.o;2:x
'λx.apply(or[size1,circle],iota(filter(filter(x.s, or[green,blue]), and[size2,size1])))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:blue;4:and[%s,%s];4:size2;4:size1
'λx.apply(or[and[triangle,size3],circle],iota(filter(filter(filter(x.s, size1), circle), not[green])))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:triangle;4:size3;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle;4:not[%s];4:green
'λx.apply(nor[and[blue,circle],not[size2]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:blue;4:circle;4:not[%s];4:size2;1:%s.o;2:x
'λx.apply(nand[implies[nand[and[size2,apply(same_color,iota(filter(x.s, green)))],yellow],size2],blue],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:implies[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow;4:size2;4:blue;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(filter(filter(filter(filter(filter(x.s, nand[size3,triangle]), size2), rectangle), or[apply(same_size,x.o),apply(size-gt,iota(x.s))]), size1), and[triangle,yellow]), nand[rectangle,triangle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size3;4:triangle;4:size2;4:rectangle;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:triangle;4:yellow;4:nand[%s,%s];4:rectangle;4:triangle
'λx.contains(iota(filter(filter(filter(x.s, triangle), rectangle), and[circle,blue])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle;4:and[%s,%s];4:circle;4:blue;3:%s.s;2:x
'λx.forall(circle,filter(filter(filter(x.s, circle), implies[size3,blue]), or[yellow,triangle]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:implies[%s,%s];4:size3;4:blue;4:or[%s,%s];4:yellow;4:triangle
'λx.apply(blue,iota(filter(filter(filter(filter(x.s, triangle), triangle), yellow), blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:triangle;4:yellow;4:blue
'λx.apply(implies[size1,not[apply(same_color,iota(x.s))]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size1;4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.contains(x.o, filter(filter(filter(filter(x.s, not[size3]), triangle), or[size3,size2]), yellow))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;4:triangle;4:or[%s,%s];4:size3;4:size2;4:yellow
'λx.apply(rectangle,iota(filter(filter(filter(x.s, green), circle), not[apply(size-geq,x.o)])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:circle;4:not[%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.apply(iff[size2,blue],iota(filter(filter(filter(filter(x.s, and[size2,size3]), green), apply(same_size,iota(x.s))), and[size2,and[size1,blue]])))'	0:apply(%s,%s);4:iff[%s,%s];4:size2;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:size3;4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:and[%s,%s];4:size1;4:blue
'λx.apply(or[size3,and[size2,apply(same_size,iota(filter(filter(x.s, not[circle]), triangle)))]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(filter(x.s, green), size1), size1)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1;4:size1
'λx.apply(rectangle,iota(filter(filter(x.s, yellow), yellow)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:yellow
'λx.apply(circle,iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(iff[not[not[size3]],or[size3,size1]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:not[%s];4:not[%s];4:size3;4:or[%s,%s];4:size3;4:size1;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(filter(filter(filter(x.s, circle), and[size2,or[apply(same_size,iota(x.s)),blue]]), and[size1,yellow]), apply(same_size,iota(filter(filter(filter(x.s, implies[or[and[triangle,circle],or[or[rectangle,circle],triangle]],and[iff[rectangle,size1],size1]]), rectangle), triangle)))), rectangle), yellow)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:size2;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:size1;4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:or[%s,%s];4:and[%s,%s];4:triangle;4:circle;4:or[%s,%s];4:or[%s,%s];4:rectangle;4:circle;4:triangle;4:and[%s,%s];4:iff[%s,%s];4:rectangle;4:size1;4:size1;4:rectangle;4:triangle;4:rectangle;4:yellow;3:%s.s;2:x
'λx.apply(or[size1,and[size3,and[and[size3,yellow],yellow]]],iota(filter(filter(filter(x.s, or[blue,nor[size1,rectangle]]), size3), nor[rectangle,implies[triangle,not[and[and[yellow,blue],circle]]]])))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:and[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:size3;4:yellow;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:nor[%s,%s];4:size1;4:rectangle;4:size3;4:nor[%s,%s];4:rectangle;4:implies[%s,%s];4:triangle;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:blue;4:circle
'λx.apply(or[not[green],size2],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:green;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[or[blue,apply(same_shape,iota(x.s))],apply(same_color,iota(filter(x.s, circle)))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;1:%s.o;2:x
'λx.apply(or[size3,and[size1,nor[and[size2,circle],size3]]],iota(filter(x.s, and[size2,not[triangle]])))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:and[%s,%s];4:size1;4:nor[%s,%s];4:and[%s,%s];4:size2;4:circle;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:not[%s];4:triangle
'λx.apply(and[not[blue],and[size1,apply(same_color,iota(x.s))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:blue;4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.exists(not[green], filter(filter(x.s, apply(size-lt,x.o)), or[triangle,triangle]))'	0:exists(%s, %s);4:not[%s];4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:or[%s,%s];4:triangle;4:triangle
'λx.apply(and[and[not[rectangle],circle],or[or[or[blue,nand[yellow,circle]],and[rectangle,rectangle]],blue]],iota(filter(x.s, implies[size2,or[rectangle,or[apply(same_shape,x.o),blue]]])))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:rectangle;4:circle;4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:blue;4:nand[%s,%s];4:yellow;4:circle;4:and[%s,%s];4:rectangle;4:rectangle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size2;4:or[%s,%s];4:rectangle;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue
'λx.contains(iota(x.s), filter(filter(filter(x.s, circle), and[size1,blue]), blue))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:size1;4:blue;4:blue
'λx.apply(size3,iota(filter(filter(filter(x.s, yellow), not[not[and[size3,circle]]]), size3)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:not[%s];4:and[%s,%s];4:size3;4:circle;4:size3
'λx.contains(iota(x.s), filter(x.s, not[blue]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.exists(size2, filter(filter(x.s, size3), yellow))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow
'λx.apply(yellow,iota(filter(filter(filter(filter(x.s, yellow), circle), size2), not[iff[or[yellow,size1],green]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle;4:size2;4:not[%s];4:iff[%s,%s];4:or[%s,%s];4:yellow;4:size1;4:green
'λx.forall(blue,filter(filter(filter(x.s, and[apply(same_shape,iota(filter(x.s, and[size1,triangle]))),not[blue]]), triangle), rectangle))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:triangle;4:not[%s];4:blue;4:triangle;4:rectangle
'λx.apply(nor[apply(same_size,x.o),size1],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1;1:%s.o;2:x
'λx.apply(not[apply(same_color,iota(filter(x.s, yellow)))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;1:%s.o;2:x
'λx.apply(not[not[or[and[size3,rectangle],circle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:or[%s,%s];4:and[%s,%s];4:size3;4:rectangle;4:circle;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[apply(same_color,iota(x.s)),or[size1,rectangle]],iota(filter(filter(x.s, rectangle), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue
'λx.apply(nor[and[green,and[apply(same_shape,x.o),circle]],triangle],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(filter(x.s, rectangle), green), triangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green;4:triangle
'λx.apply(not[and[not[triangle],size2]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:triangle;4:size2;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(filter(x.s, yellow), triangle), and[or[implies[blue,size1],size2],yellow]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle;4:and[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:blue;4:size1;4:size2;4:yellow
'λx.apply(green,iota(filter(x.s, and[not[and[green,size1]],and[size1,triangle]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:green;4:size1;4:and[%s,%s];4:size1;4:triangle
'λx.apply(or[rectangle,or[nand[triangle,size1],nand[size3,yellow]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:or[%s,%s];4:nand[%s,%s];4:triangle;4:size1;4:nand[%s,%s];4:size3;4:yellow;1:%s.o;2:x
'λx.apply(nand[yellow,or[size1,yellow]],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:yellow;4:or[%s,%s];4:size1;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.forall(apply(same_size,x.o),filter(x.s, implies[size2,rectangle]))'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size2;4:rectangle
'λx.exists(or[and[size1,rectangle],nor[triangle,size2]], filter(filter(filter(filter(x.s, rectangle), triangle), apply(same_size,x.o)), blue))'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:size1;4:rectangle;4:nor[%s,%s];4:triangle;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue
'λx.apply(and[rectangle,blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, blue)), filter(x.s, rectangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.forall(size1,filter(filter(filter(filter(filter(x.s, size2), green), size2), triangle), size3))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green;4:size2;4:triangle;4:size3
'λx.apply(not[or[circle,rectangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:circle;4:rectangle;1:%s.o;2:x
'λx.apply(and[apply(same_color,iota(filter(x.s, blue))),nand[rectangle,apply(same_shape,x.o)]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:nand[%s,%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(filter(filter(filter(filter(filter(x.s, or[circle,rectangle]), and[circle,rectangle]), apply(same_shape,x.o)), and[and[and[and[yellow,apply(size-gt,iota(filter(filter(filter(filter(filter(filter(filter(x.s, size1), size2), blue), circle), not[blue]), size3), not[rectangle])))],triangle],yellow],triangle]), size3), size2), size1)), filter(filter(filter(x.s, not[size3]), green), rectangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:rectangle;4:and[%s,%s];4:circle;4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2;4:blue;4:circle;4:not[%s];4:blue;4:size3;4:not[%s];4:rectangle;4:triangle;4:yellow;4:triangle;4:size3;4:size2;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;4:green;4:rectangle
'λx.exists(yellow, filter(x.s, circle))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.contains(iota(x.s), filter(x.s, not[or[yellow,green]]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:yellow;4:green
'λx.apply(and[circle,and[size2,yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:and[%s,%s];4:size2;4:yellow;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, implies[size2,size3]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size2;4:size3
'λx.apply(and[and[apply(same_size,iota(x.s)),rectangle],size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:rectangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(filter(x.s, or[rectangle,size2]), yellow), green)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:size2;4:yellow;4:green
'λx.apply(and[and[rectangle,triangle],implies[size3,size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:rectangle;4:triangle;4:implies[%s,%s];4:size3;4:size1;1:%s.o;2:x
'λx.apply(or[not[yellow],and[not[and[rectangle,size2]],not[or[not[or[or[size2,yellow],apply(same_size,x.o)]],not[triangle]]]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:yellow;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:rectangle;4:size2;4:not[%s];4:or[%s,%s];4:not[%s];4:or[%s,%s];4:or[%s,%s];4:size2;4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:not[%s];4:triangle;1:iota(%s);3:%s.s;2:x
'λx.exists(or[implies[and[and[apply(same_shape,x.o),apply(same_size,iota(x.s))],size1],or[yellow,size1]],and[nor[apply(size-geq,iota(filter(filter(x.s, green), not[rectangle]))),green],rectangle]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size1;4:or[%s,%s];4:yellow;4:size1;4:and[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:rectangle;4:green;4:rectangle;3:%s.s;2:x
'λx.apply(size3,iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(size2,iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(size1,iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(triangle,iota(filter(filter(x.s, rectangle), triangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle
'λx.apply(iff[triangle,size2],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:triangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[apply(same_size,iota(filter(x.s, or[and[circle,and[circle,not[and[size1,triangle]]]],and[size2,size3]]))),circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:circle;4:not[%s];4:and[%s,%s];4:size1;4:triangle;4:and[%s,%s];4:size2;4:size3;4:circle;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(filter(filter(filter(filter(filter(x.s, triangle), size3), yellow), circle), and[and[blue,green],size1]), size1), yellow)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3;4:yellow;4:circle;4:and[%s,%s];4:and[%s,%s];4:blue;4:green;4:size1;4:size1;4:yellow
'λx.apply(nand[circle,circle],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:circle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size3,apply(same_size,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, and[not[yellow],blue]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:yellow;4:blue
'λx.apply(apply(same_size,iota(x.s)),iota(filter(filter(filter(filter(x.s, size2), blue), iff[apply(same_shape,x.o),apply(same_size,iota(x.s))]), green)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue;4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:green
'λx.forall(rectangle,filter(x.s, yellow))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(and[yellow,blue],iota(filter(x.s, or[size2,apply(same_size,iota(filter(x.s, size2)))])))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(or[rectangle,iff[size1,apply(same_color,x.o)]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:iff[%s,%s];4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.empty(filter(filter(x.s, and[size3,circle]), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:circle;4:circle
'λx.apply(nor[size2,blue],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size2;4:blue;1:%s.o;2:x
'λx.apply(and[and[nand[not[rectangle],size2],green],and[apply(size-leq,iota(filter(x.s, circle))),size1]],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:not[%s];4:rectangle;4:size2;4:green;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(nor[blue,size2],iota(filter(x.s, not[blue])))'	0:apply(%s,%s);4:nor[%s,%s];4:blue;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.apply(and[and[size1,rectangle],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:rectangle;4:triangle;1:%s.o;2:x
'λx.apply(or[and[size2,triangle],triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size2;4:triangle;4:triangle;1:%s.o;2:x
'λx.apply(yellow,iota(filter(x.s, apply(same_size,iota(x.s)))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(filter(filter(x.s, size2), green), blue), and[apply(same_shape,iota(x.s)),size1])), filter(filter(x.s, size2), yellow))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green;4:blue;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:yellow
'λx.apply(and[rectangle,and[and[rectangle,rectangle],green]],iota(filter(x.s, and[size3,blue])))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:rectangle;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:blue
'λx.exists(size1, filter(filter(x.s, blue), yellow))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow
'λx.apply(or[circle,blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:blue;1:%s.o;2:x
'λx.apply(iff[blue,not[nor[iff[circle,apply(size-geq,x.o)],size1]]],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:blue;4:not[%s];4:nor[%s,%s];4:iff[%s,%s];4:circle;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[size3,blue],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size3;4:blue;1:%s.o;2:x
'λx.apply(and[size2,and[blue,and[green,size1]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:blue;4:and[%s,%s];4:green;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(x.s, blue), or[size3,or[yellow,or[and[circle,yellow],green]]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:size3;4:or[%s,%s];4:yellow;4:or[%s,%s];4:and[%s,%s];4:circle;4:yellow;4:green
'λx.forall(and[rectangle,yellow],filter(filter(x.s, and[and[or[size1,triangle],rectangle],size1]), size3))'	0:forall(%s,%s);4:and[%s,%s];4:rectangle;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size1;4:triangle;4:rectangle;4:size1;4:size3
'λx.apply(or[circle,circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:circle;1:%s.o;2:x
'λx.apply(not[and[apply(same_size,iota(filter(filter(x.s, size3), not[blue]))),green]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:blue;4:green;1:%s.o;2:x
'λx.exists(and[size3,or[or[circle,size2],or[and[size2,triangle],blue]]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:size3;4:or[%s,%s];4:or[%s,%s];4:circle;4:size2;4:or[%s,%s];4:and[%s,%s];4:size2;4:triangle;4:blue;3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(x.s, apply(same_shape,iota(filter(filter(x.s, or[apply(size-lt,x.o),yellow]), size3)))), nor[green,circle])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:yellow;4:size3;4:nor[%s,%s];4:green;4:circle
'λx.apply(nand[and[size2,rectangle],rectangle],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:size2;4:rectangle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[implies[size2,size1],rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:size2;4:size1;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[not[triangle],size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:triangle;4:size3;1:%s.o;2:x
'λx.empty(filter(filter(x.s, or[and[apply(same_shape,iota(x.s)),size2],blue]), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size2;4:blue;4:size1
'λx.apply(and[and[green,yellow],blue],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:green;4:yellow;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.empty(filter(filter(x.s, or[or[apply(size-gt,iota(x.s)),rectangle],and[triangle,size1]]), implies[and[size2,and[yellow,size1]],circle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:triangle;4:size1;4:implies[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:yellow;4:size1;4:circle
'λx.apply(and[apply(size-leq,x.o),not[rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(filter(filter(x.s, apply(same_shape,iota(filter(filter(x.s, circle), yellow)))), and[and[implies[size2,and[triangle,blue]],not[or[and[triangle,apply(same_color,iota(x.s))],apply(same_color,x.o)]]],green]), yellow), green)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow;4:and[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:size2;4:and[%s,%s];4:triangle;4:blue;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green;4:yellow;4:green
'λx.forall(size3,filter(filter(filter(x.s, apply(same_color,x.o)), yellow), not[green]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;4:not[%s];4:green
'λx.apply(or[and[rectangle,blue],circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:rectangle;4:blue;4:circle;1:%s.o;2:x
'λx.apply(nand[size1,triangle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size1;4:triangle;1:%s.o;2:x
'λx.exists(apply(same_size,iota(filter(filter(x.s, triangle), triangle))), filter(filter(x.s, or[implies[size2,green],not[yellow]]), not[rectangle]))'	0:exists(%s, %s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:implies[%s,%s];4:size2;4:green;4:not[%s];4:yellow;4:not[%s];4:rectangle
'λx.apply(and[yellow,apply(size-leq,iota(filter(x.s, rectangle)))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;1:%s.o;2:x
'λx.exists(yellow, filter(x.s, implies[size2,size2]))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size2;4:size2
'λx.exists(or[triangle,green], filter(x.s, size1))'	0:exists(%s, %s);4:or[%s,%s];4:triangle;4:green;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(nor[triangle,blue],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:triangle;4:blue;1:%s.o;2:x
'λx.apply(and[green,blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:blue;1:%s.o;2:x
'λx.empty(filter(x.s, and[and[rectangle,and[size1,circle]],not[size2]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:size1;4:circle;4:not[%s];4:size2
'λx.apply(rectangle,x.o)'	0:apply(%s,%s);4:rectangle;1:%s.o;2:x
'λx.apply(apply(same_shape,x.o),iota(filter(x.s, blue)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[green,green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:green;1:iota(%s);3:%s.s;2:x
'λx.forall(apply(same_color,x.o),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(or[yellow,green],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.contains(iota(filter(x.s, circle)), filter(x.s, blue))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.contains(iota(x.s), filter(filter(filter(filter(filter(x.s, not[circle]), not[iff[size3,size2]]), and[blue,size1]), not[circle]), apply(same_size,iota(filter(x.s, blue)))))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:not[%s];4:iff[%s,%s];4:size3;4:size2;4:and[%s,%s];4:blue;4:size1;4:not[%s];4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.contains(x.o, filter(filter(x.s, blue), size2))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2
'λx.contains(x.o, filter(filter(x.s, blue), size3))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3
'λx.contains(x.o, filter(filter(x.s, blue), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green
'λx.exists(not[size2], filter(x.s, triangle))'	0:exists(%s, %s);4:not[%s];4:size2;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.exists(not[size3], filter(x.s, triangle))'	0:exists(%s, %s);4:not[%s];4:size3;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(apply(size-gt,iota(x.s)),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, and[apply(same_size,iota(filter(x.s, yellow))),size3])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size3;3:%s.s;2:x
'λx.empty(filter(filter(x.s, apply(same_color,x.o)), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green
'λx.empty(filter(filter(filter(filter(filter(filter(x.s, size2), nand[circle,yellow]), apply(same_color,iota(filter(filter(filter(x.s, not[circle]), not[not[implies[circle,size3]]]), blue)))), yellow), size1), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:nand[%s,%s];4:circle;4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:not[%s];4:not[%s];4:implies[%s,%s];4:circle;4:size3;4:blue;4:yellow;4:size1;4:circle
'λx.apply(and[size1,or[or[size3,and[rectangle,green]],green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:or[%s,%s];4:or[%s,%s];4:size3;4:and[%s,%s];4:rectangle;4:green;4:green;1:%s.o;2:x
'λx.apply(or[blue,not[green]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:not[%s];4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[triangle,blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:blue;1:%s.o;2:x
'λx.apply(apply(same_color,iota(filter(x.s, circle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;1:%s.o;2:x
'λx.forall(yellow,filter(x.s, yellow))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.forall(and[and[iff[apply(same_color,x.o),size3],size2],rectangle],filter(filter(x.s, apply(same_shape,iota(filter(x.s, not[or[not[or[yellow,and[size3,size1]]],and[yellow,not[nor[yellow,circle]]]]])))), green))'	0:forall(%s,%s);4:and[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3;4:size2;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:not[%s];4:or[%s,%s];4:yellow;4:and[%s,%s];4:size3;4:size1;4:and[%s,%s];4:yellow;4:not[%s];4:nor[%s,%s];4:yellow;4:circle;4:green
'λx.apply(apply(size-gt,iota(x.s)),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(x.s, not[size2]))),iota(filter(x.s, size3)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(or[circle,or[and[and[green,or[size3,green]],size3],or[size1,blue]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:or[%s,%s];4:size3;4:green;4:size3;4:or[%s,%s];4:size1;4:blue;1:%s.o;2:x
'λx.apply(and[circle,nand[or[triangle,iff[yellow,not[and[size2,size1]]]],and[or[size1,apply(same_shape,iota(x.s))],size3]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:nand[%s,%s];4:or[%s,%s];4:triangle;4:iff[%s,%s];4:yellow;4:not[%s];4:and[%s,%s];4:size2;4:size1;4:and[%s,%s];4:or[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size3;1:%s.o;2:x
'λx.apply(or[blue,rectangle],iota(filter(filter(x.s, rectangle), circle)))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle
'λx.apply(not[and[and[and[yellow,and[not[or[circle,circle]],not[size3]]],nor[circle,or[triangle,or[or[not[and[triangle,size1]],size3],apply(same_size,x.o)]]]],rectangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:not[%s];4:or[%s,%s];4:circle;4:circle;4:not[%s];4:size3;4:nor[%s,%s];4:circle;4:or[%s,%s];4:triangle;4:or[%s,%s];4:or[%s,%s];4:not[%s];4:and[%s,%s];4:triangle;4:size1;4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:rectangle;1:%s.o;2:x
'λx.forall(nor[yellow,yellow],filter(filter(x.s, size2), triangle))'	0:forall(%s,%s);4:nor[%s,%s];4:yellow;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:triangle
'λx.apply(or[circle,nand[not[green],size1]],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:nand[%s,%s];4:not[%s];4:green;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(or[or[size3,not[rectangle]],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:size3;4:not[%s];4:rectangle;4:blue;1:%s.o;2:x
'λx.exists(circle, filter(filter(filter(x.s, green), and[rectangle,not[yellow]]), blue))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:rectangle;4:not[%s];4:yellow;4:blue
'λx.contains(iota(filter(filter(filter(filter(x.s, green), size1), green), or[size3,green])), filter(x.s, triangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1;4:green;4:or[%s,%s];4:size3;4:green;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(and[size2,implies[size3,size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:implies[%s,%s];4:size3;4:size1;1:%s.o;2:x
'λx.exists(and[apply(same_color,iota(filter(filter(filter(x.s, size1), yellow), size3))),and[nand[yellow,triangle],apply(same_shape,iota(x.s))]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow;4:size3;4:and[%s,%s];4:nand[%s,%s];4:yellow;4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.forall(or[blue,size3],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:blue;4:size3;3:%s.s;2:x
'λx.apply(and[green,apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, not[size1]), nand[yellow,size1])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:nand[%s,%s];4:yellow;4:size1
'λx.exists(size1, filter(x.s, not[yellow]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow
'λx.apply(or[and[rectangle,size1],or[and[triangle,circle],size3]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:rectangle;4:size1;4:or[%s,%s];4:and[%s,%s];4:triangle;4:circle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(filter(filter(x.s, and[green,blue]), not[and[apply(same_size,iota(filter(x.s, not[blue]))),rectangle]]), circle), blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:blue;4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:rectangle;4:circle;4:blue
'λx.apply(green,iota(filter(filter(x.s, not[or[green,green]]), circle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:green;4:green;4:circle
'λx.apply(iff[or[apply(same_color,x.o),triangle],yellow],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[and[yellow,iff[size1,blue]],blue],iota(filter(filter(filter(filter(x.s, blue), triangle), and[size2,circle]), and[size3,or[triangle,green]])))'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:yellow;4:iff[%s,%s];4:size1;4:blue;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle;4:and[%s,%s];4:size2;4:circle;4:and[%s,%s];4:size3;4:or[%s,%s];4:triangle;4:green
'λx.apply(size3,iota(filter(filter(x.s, blue), circle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle
'λx.apply(size1,iota(filter(filter(x.s, blue), circle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle
'λx.apply(blue,iota(filter(filter(filter(x.s, green), not[size2]), not[and[size3,or[triangle,green]]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:size2;4:not[%s];4:and[%s,%s];4:size3;4:or[%s,%s];4:triangle;4:green
'λx.forall(rectangle,filter(x.s, or[and[size2,rectangle],green]))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size2;4:rectangle;4:green
'λx.apply(iff[nand[rectangle,rectangle],size2],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:nand[%s,%s];4:rectangle;4:rectangle;4:size2;1:%s.o;2:x
'λx.exists(green, filter(x.s, size1))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(green, filter(x.s, size3))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(green, filter(x.s, green))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.exists(triangle, filter(filter(x.s, triangle), size1))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size1
'λx.apply(apply(size-leq,iota(x.s)),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.exists(size1, filter(x.s, green))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.exists(size3, filter(x.s, green))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.exists(size2, filter(x.s, green))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.exists(size1, filter(x.s, size2))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.exists(size1, filter(x.s, size3))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(size3, filter(x.s, size2))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.exists(size3, filter(x.s, size1))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(size2, filter(x.s, size2))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.exists(size2, filter(x.s, size1))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(not[and[size3,and[and[size3,apply(same_color,iota(filter(filter(filter(x.s, size2), size2), size1)))],size2]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2;4:size1;4:size2;1:%s.o;2:x
'λx.exists(green, filter(filter(filter(filter(x.s, green), apply(same_shape,x.o)), not[apply(same_color,iota(filter(x.s, rectangle)))]), blue))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue
'λx.contains(iota(filter(x.s, rectangle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;3:%s.s;2:x
'λx.empty(filter(filter(filter(filter(filter(x.s, green), circle), yellow), yellow), apply(same_size,x.o)))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:circle;4:yellow;4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(iff[and[circle,blue],triangle],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:circle;4:blue;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[rectangle,apply(same_size,iota(x.s))],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(or[apply(same_color,x.o),circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;1:%s.o;2:x
'λx.apply(and[and[size2,rectangle],green],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size2;4:rectangle;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(and[apply(same_color,iota(filter(x.s, size1))),apply(same_size,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.exists(green, filter(filter(x.s, circle), size3))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3
'λx.exists(green, filter(filter(x.s, circle), green))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green
'λx.forall(or[rectangle,size1],filter(x.s, triangle))'	0:forall(%s,%s);4:or[%s,%s];4:rectangle;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.empty(filter(filter(filter(filter(x.s, triangle), rectangle), and[green,or[circle,or[rectangle,green]]]), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle;4:and[%s,%s];4:green;4:or[%s,%s];4:circle;4:or[%s,%s];4:rectangle;4:green;4:size1
'λx.apply(or[and[rectangle,green],rectangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:rectangle;4:green;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(x.s, or[and[and[apply(size-gt,iota(x.s)),or[size1,blue]],nor[circle,rectangle]],not[green]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:blue;4:nor[%s,%s];4:circle;4:rectangle;4:not[%s];4:green
'λx.apply(or[nand[blue,size1],circle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:blue;4:size1;4:circle;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, apply(same_size,x.o)), triangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle
'λx.apply(triangle,iota(filter(filter(x.s, rectangle), apply(size-gt,x.o))))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.exists(size3, filter(filter(filter(x.s, triangle), not[rectangle]), apply(same_size,x.o)))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:not[%s];4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.contains(iota(x.s), filter(x.s, yellow))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(and[size1,size3],iota(filter(filter(filter(filter(x.s, or[apply(same_shape,x.o),size3]), size2), and[triangle,size2]), rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3;4:size2;4:and[%s,%s];4:triangle;4:size2;4:rectangle
'λx.empty(filter(filter(filter(x.s, size3), rectangle), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle;4:blue
'λx.apply(green,iota(filter(filter(x.s, nor[and[implies[size2,triangle],yellow],size2]), size1)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:size2;4:triangle;4:yellow;4:size2;4:size1
'λx.contains(iota(filter(filter(filter(x.s, triangle), or[triangle,and[apply(same_size,iota(x.s)),triangle]]), not[blue])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:or[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:triangle;4:not[%s];4:blue;3:%s.s;2:x
'λx.apply(and[blue,blue],iota(filter(x.s, and[not[and[not[apply(size-lt,x.o)],apply(same_size,x.o)]],triangle])))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle
'λx.apply(and[or[rectangle,and[size1,size1]],rectangle],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:rectangle;4:and[%s,%s];4:size1;4:size1;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.forall(rectangle,filter(x.s, circle))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(or[yellow,or[iff[blue,green],rectangle]],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:or[%s,%s];4:iff[%s,%s];4:blue;4:green;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.empty(filter(filter(x.s, circle), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle
'λx.apply(iff[and[blue,circle],rectangle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:blue;4:circle;4:rectangle;1:%s.o;2:x
'λx.apply(and[circle,size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:size3;1:%s.o;2:x
'λx.apply(and[circle,size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:size1;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(x.s, green))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;1:%s.o;2:x
'λx.exists(not[blue], filter(filter(x.s, nand[size1,size2]), rectangle))'	0:exists(%s, %s);4:not[%s];4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size1;4:size2;4:rectangle
'λx.apply(apply(same_shape,iota(filter(x.s, blue))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(x.s, and[implies[yellow,rectangle],or[and[size2,nor[implies[or[triangle,rectangle],size3],nor[circle,apply(size-gt,x.o)]]],or[size2,size3]]]), and[not[blue],size1])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:implies[%s,%s];4:yellow;4:rectangle;4:or[%s,%s];4:and[%s,%s];4:size2;4:nor[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:triangle;4:rectangle;4:size3;4:nor[%s,%s];4:circle;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:or[%s,%s];4:size2;4:size3;4:and[%s,%s];4:not[%s];4:blue;4:size1
'λx.contains(x.o, filter(x.s, apply(same_color,iota(filter(filter(x.s, rectangle), green)))))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green
'λx.apply(and[circle,green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:green;1:%s.o;2:x
'λx.forall(or[apply(same_size,x.o),nor[triangle,size2]],filter(x.s, triangle))'	0:forall(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:nor[%s,%s];4:triangle;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(or[or[blue,or[size2,yellow]],size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:blue;4:or[%s,%s];4:size2;4:yellow;4:size1;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, and[size1,circle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:circle
'λx.apply(and[circle,yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(x.s, size1), triangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle
'λx.empty(filter(filter(filter(x.s, blue), nor[size1,green]), or[and[and[size1,circle],triangle],not[and[green,size3]]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:nor[%s,%s];4:size1;4:green;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:circle;4:triangle;4:not[%s];4:and[%s,%s];4:green;4:size3
'λx.apply(size1,iota(filter(x.s, or[and[rectangle,size1],circle])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:size1;4:circle
'λx.forall(circle,filter(filter(filter(x.s, circle), yellow), triangle))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow;4:triangle
'λx.exists(size1, filter(x.s, triangle))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.exists(size3, filter(x.s, triangle))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.exists(size2, filter(x.s, triangle))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.contains(iota(filter(x.s, not[size3])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;3:%s.s;2:x
'λx.exists(green, filter(x.s, triangle))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.exists(implies[size3,green], filter(filter(filter(x.s, blue), or[rectangle,circle]), iff[blue,and[rectangle,not[rectangle]]]))'	0:exists(%s, %s);4:implies[%s,%s];4:size3;4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:rectangle;4:circle;4:iff[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:not[%s];4:rectangle
'λx.exists(and[circle,yellow], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:circle;4:yellow;3:%s.s;2:x
'λx.apply(and[circle,rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:rectangle;1:%s.o;2:x
'λx.exists(blue, filter(x.s, or[size2,apply(size-lt,x.o)]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.forall(circle,filter(x.s, apply(same_shape,iota(filter(x.s, size1)))))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(yellow, filter(filter(filter(x.s, or[implies[size3,not[green]],triangle]), blue), nand[blue,size2]))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:implies[%s,%s];4:size3;4:not[%s];4:green;4:triangle;4:blue;4:nand[%s,%s];4:blue;4:size2
'λx.apply(green,iota(filter(filter(x.s, apply(size-lt,x.o)), rectangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:rectangle
'λx.apply(or[apply(same_color,x.o),green],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[triangle,rectangle],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:rectangle;4:yellow;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, and[size3,blue]), circle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:blue;4:circle
'λx.apply(not[apply(same_size,iota(filter(x.s, apply(same_shape,x.o))))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, or[apply(same_shape,iota(x.s)),yellow])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:yellow
'λx.apply(or[circle,and[circle,circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:and[%s,%s];4:circle;4:circle;1:%s.o;2:x
'λx.apply(or[and[size3,yellow],green],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size3;4:yellow;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[or[size2,iff[size2,blue]],size2],iota(filter(x.s, apply(size-lt,iota(x.s)))))'	0:apply(%s,%s);4:iff[%s,%s];4:or[%s,%s];4:size2;4:iff[%s,%s];4:size2;4:blue;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x
'λx.apply(not[nand[triangle,nor[triangle,yellow]]],x.o)'	0:apply(%s,%s);4:not[%s];4:nand[%s,%s];4:triangle;4:nor[%s,%s];4:triangle;4:yellow;1:%s.o;2:x
'λx.exists(apply(same_shape,x.o), filter(filter(x.s, size2), circle))'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle
'λx.forall(apply(size-leq,iota(x.s)),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(and[not[iff[rectangle,nand[size3,rectangle]]],size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:iff[%s,%s];4:rectangle;4:nand[%s,%s];4:size3;4:rectangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.exists(size2, filter(filter(x.s, size1), implies[size2,and[implies[rectangle,and[yellow,circle]],size2]]))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:implies[%s,%s];4:size2;4:and[%s,%s];4:implies[%s,%s];4:rectangle;4:and[%s,%s];4:yellow;4:circle;4:size2
'λx.apply(apply(same_shape,iota(filter(filter(x.s, nand[size2,apply(size-gt,iota(x.s))]), triangle))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size2;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(filter(x.s, nor[circle,green]), and[size2,apply(same_color,iota(filter(x.s, size3)))]), apply(same_size,x.o)), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:circle;4:green;4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3
'λx.apply(yellow,iota(filter(filter(filter(filter(filter(filter(filter(x.s, triangle), and[yellow,size3]), apply(size-gt,iota(filter(x.s, rectangle)))), yellow), or[or[circle,size3],apply(same_shape,iota(x.s))]), circle), circle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:yellow;4:size3;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:yellow;4:or[%s,%s];4:or[%s,%s];4:circle;4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle;4:circle
'λx.apply(or[not[apply(same_shape,iota(filter(x.s, apply(same_color,x.o))))],apply(same_shape,iota(filter(filter(x.s, circle), nand[not[nor[size3,size2]],and[apply(same_color,x.o),green]])))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:nand[%s,%s];4:not[%s];4:nor[%s,%s];4:size3;4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, not[triangle]), yellow), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:yellow;4:blue
'λx.apply(or[size3,and[rectangle,and[blue,and[circle,yellow]]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:blue;4:and[%s,%s];4:circle;4:yellow;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(filter(x.s, apply(size-leq,iota(filter(filter(x.s, circle), yellow)))), size3), size1)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow;4:size3;4:size1
'λx.contains(x.o, filter(x.s, not[and[blue,triangle]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:blue;4:triangle
'λx.apply(apply(size-geq,iota(filter(filter(x.s, and[size3,green]), apply(size-gt,iota(x.s))))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:green;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(or[not[green],implies[green,triangle]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:green;4:implies[%s,%s];4:green;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, or[and[size1,size3],not[green]]), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size1;4:size3;4:not[%s];4:green;4:size1
'λx.apply(and[size1,apply(same_size,x.o)],iota(filter(filter(filter(x.s, size2), and[circle,circle]), nor[or[apply(same_shape,x.o),apply(same_size,x.o)],size2])))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:circle;4:circle;4:nor[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2
'λx.apply(not[and[and[or[blue,size3],and[yellow,not[and[and[size1,size2],or[yellow,and[green,and[size3,apply(same_color,x.o)]]]]]]],size3]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:blue;4:size3;4:and[%s,%s];4:yellow;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:size2;4:or[%s,%s];4:yellow;4:and[%s,%s];4:green;4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size3,rectangle],iota(filter(filter(filter(filter(x.s, blue), size2), apply(same_size,x.o)), circle)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle
'λx.apply(yellow,iota(filter(x.s, nor[circle,or[size2,blue]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:circle;4:or[%s,%s];4:size2;4:blue
'λx.apply(or[and[size3,size2],rectangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size3;4:size2;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(filter(filter(x.s, iff[triangle,and[yellow,yellow]]), blue), yellow), apply(same_size,iota(x.s))), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:triangle;4:and[%s,%s];4:yellow;4:yellow;4:blue;4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:yellow
'λx.empty(filter(filter(filter(filter(filter(x.s, size3), green), blue), and[size2,apply(same_size,iota(filter(x.s, and[size1,size2])))]), not[yellow]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green;4:blue;4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size2;4:not[%s];4:yellow
'λx.apply(or[size1,triangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[yellow,size3],iota(filter(x.s, implies[green,iff[or[apply(same_size,x.o),size3],rectangle]])))'	0:apply(%s,%s);4:nand[%s,%s];4:yellow;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:green;4:iff[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;4:rectangle
'λx.apply(blue,iota(filter(filter(filter(x.s, not[or[apply(same_size,iota(filter(filter(filter(x.s, iff[or[yellow,triangle],triangle]), not[yellow]), apply(same_shape,iota(filter(x.s, yellow)))))),and[and[iff[iff[implies[size2,green],blue],circle],yellow],and[circle,iff[size1,size2]]]]]), triangle), triangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:or[%s,%s];4:yellow;4:triangle;4:triangle;4:not[%s];4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:iff[%s,%s];4:implies[%s,%s];4:size2;4:green;4:blue;4:circle;4:yellow;4:and[%s,%s];4:circle;4:iff[%s,%s];4:size1;4:size2;4:triangle;4:triangle
'λx.apply(or[size2,triangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[yellow,size1],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.contains(x.o, filter(filter(x.s, circle), size3))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3
'λx.apply(apply(same_size,x.o),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, circle), circle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:circle;3:%s.s;2:x
'λx.apply(or[implies[triangle,circle],and[circle,size1]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:implies[%s,%s];4:triangle;4:circle;4:and[%s,%s];4:circle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(and[or[size1,size2],and[and[size1,triangle],size2]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size1;4:size2;4:and[%s,%s];4:and[%s,%s];4:size1;4:triangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(not[nand[nor[apply(same_shape,x.o),size1],yellow]],iota(filter(x.s, and[apply(same_shape,iota(x.s)),size1])))'	0:apply(%s,%s);4:not[%s];4:nand[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size1
'λx.apply(and[and[rectangle,size1],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size1;4:yellow;1:%s.o;2:x
'λx.apply(not[and[size3,circle]],iota(filter(x.s, apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size3;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[apply(same_color,x.o),or[blue,iff[and[and[or[and[rectangle,rectangle],rectangle],size3],circle],rectangle]]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:or[%s,%s];4:blue;4:iff[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:rectangle;4:rectangle;4:rectangle;4:size3;4:circle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[blue,and[or[not[triangle],green],nor[green,yellow]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:triangle;4:green;4:nor[%s,%s];4:green;4:yellow;1:%s.o;2:x
'λx.exists(triangle, filter(filter(x.s, and[yellow,not[circle]]), and[not[and[rectangle,and[rectangle,blue]]],green]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:not[%s];4:circle;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:rectangle;4:blue;4:green
'λx.apply(size2,iota(filter(x.s, or[green,size2])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:size2
'λx.apply(and[green,nor[triangle,rectangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:nor[%s,%s];4:triangle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(filter(filter(filter(filter(filter(x.s, circle), nand[circle,size3]), nand[yellow,size3]), blue), not[green]), or[size1,circle]), size3)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:nand[%s,%s];4:circle;4:size3;4:nand[%s,%s];4:yellow;4:size3;4:blue;4:not[%s];4:green;4:or[%s,%s];4:size1;4:circle;4:size3
'λx.apply(triangle,iota(filter(x.s, and[size1,size2])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size2
'λx.apply(iff[size1,not[not[and[size1,triangle]]]],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:iff[%s,%s];4:size1;4:not[%s];4:not[%s];4:and[%s,%s];4:size1;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(implies[blue,or[size3,triangle]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:blue;4:or[%s,%s];4:size3;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[or[apply(same_shape,iota(x.s)),and[triangle,or[size2,nand[size2,or[size3,and[size2,yellow]]]]]],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:or[%s,%s];4:size2;4:nand[%s,%s];4:size2;4:or[%s,%s];4:size3;4:and[%s,%s];4:size2;4:yellow;4:size1;1:%s.o;2:x
'λx.exists(nor[apply(size-leq,x.o),rectangle], x.s)'	0:exists(%s, %s);4:nor[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:rectangle;3:%s.s;2:x
'λx.apply(and[blue,apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[apply(same_color,iota(x.s)),circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:circle;1:%s.o;2:x
'λx.apply(and[circle,size1],iota(filter(filter(filter(x.s, blue), or[green,green]), iff[iff[size1,not[yellow]],size1])))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:green;4:green;4:iff[%s,%s];4:iff[%s,%s];4:size1;4:not[%s];4:yellow;4:size1
'λx.apply(and[triangle,green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:green;1:%s.o;2:x
'λx.apply(iff[green,circle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:green;4:circle;1:%s.o;2:x
'λx.forall(iff[or[size3,size1],triangle],x.s)'	0:forall(%s,%s);4:iff[%s,%s];4:or[%s,%s];4:size3;4:size1;4:triangle;3:%s.s;2:x
'λx.apply(or[and[rectangle,apply(same_color,iota(filter(x.s, rectangle)))],apply(same_shape,iota(x.s))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(and[not[size1],not[apply(size-gt,iota(x.s))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size1;4:not[%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.forall(triangle,filter(filter(x.s, blue), and[size1,circle]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:size1;4:circle
'λx.apply(circle,iota(filter(x.s, not[and[circle,size2]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:circle;4:size2
'λx.apply(rectangle,iota(filter(filter(filter(filter(x.s, circle), nand[green,rectangle]), size2), size2)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:nand[%s,%s];4:green;4:rectangle;4:size2;4:size2
'λx.apply(and[apply(same_shape,iota(x.s)),size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(and[apply(same_shape,iota(x.s)),size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[not[blue],or[not[or[size2,implies[yellow,not[or[size2,size2]]]]],rectangle]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:not[%s];4:blue;4:or[%s,%s];4:not[%s];4:or[%s,%s];4:size2;4:implies[%s,%s];4:yellow;4:not[%s];4:or[%s,%s];4:size2;4:size2;4:rectangle;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(x.s, size3), size3), not[circle])), filter(filter(x.s, size2), not[or[yellow,rectangle]]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3;4:not[%s];4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:not[%s];4:or[%s,%s];4:yellow;4:rectangle
'λx.forall(size3,filter(x.s, or[and[and[circle,apply(size-gt,iota(x.s))],size1],size2]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:size1;4:size2
'λx.apply(or[size1,and[blue,blue]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:and[%s,%s];4:blue;4:blue;1:%s.o;2:x
'λx.apply(implies[rectangle,size2],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:rectangle;4:size2;1:%s.o;2:x
'λx.exists(or[and[blue,size2],blue], filter(x.s, and[triangle,size3]))'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:blue;4:size2;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:size3
'λx.contains(x.o, filter(x.s, or[blue,rectangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:rectangle
'λx.exists(apply(same_shape,x.o), filter(x.s, size2))'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(rectangle,iota(filter(filter(x.s, triangle), yellow)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:yellow
'λx.apply(apply(same_shape,x.o),iota(filter(filter(x.s, triangle), green)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green
'λx.exists(size3, filter(filter(x.s, size3), and[and[size1,yellow],or[blue,triangle]]))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:and[%s,%s];4:size1;4:yellow;4:or[%s,%s];4:blue;4:triangle
'λx.apply(and[triangle,not[triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:not[%s];4:triangle;1:%s.o;2:x
'λx.forall(or[size2,size2],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:size2;4:size2;3:%s.s;2:x
'λx.apply(and[size3,iff[rectangle,circle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:iff[%s,%s];4:rectangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, yellow), green), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green;4:circle
'λx.contains(iota(x.s), filter(x.s, circle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(or[implies[apply(same_size,x.o),and[blue,circle]],implies[size2,rectangle]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:blue;4:circle;4:implies[%s,%s];4:size2;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(filter(filter(filter(x.s, nor[size2,green]), green), blue), or[rectangle,triangle]), not[triangle])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size2;4:green;4:green;4:blue;4:or[%s,%s];4:rectangle;4:triangle;4:not[%s];4:triangle
'λx.exists(and[not[green],or[or[yellow,blue],size1]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:green;4:or[%s,%s];4:or[%s,%s];4:yellow;4:blue;4:size1;3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, circle), green), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green;4:triangle
'λx.apply(nand[size2,and[triangle,not[not[apply(size-gt,iota(x.s))]]]],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:nand[%s,%s];4:size2;4:and[%s,%s];4:triangle;4:not[%s];4:not[%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(apply(same_color,x.o),iota(filter(x.s, and[size1,circle])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:circle
'λx.apply(apply(same_size,iota(x.s)),iota(filter(filter(filter(x.s, and[and[and[circle,not[green]],nand[size1,size2]],or[rectangle,size2]]), rectangle), and[or[and[size1,yellow],size3],green])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:not[%s];4:green;4:nand[%s,%s];4:size1;4:size2;4:or[%s,%s];4:rectangle;4:size2;4:rectangle;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size1;4:yellow;4:size3;4:green
'λx.exists(and[triangle,not[or[apply(size-geq,x.o),size2]]], filter(filter(x.s, iff[triangle,or[size3,and[size3,size3]]]), triangle))'	0:exists(%s, %s);4:and[%s,%s];4:triangle;4:not[%s];4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:triangle;4:or[%s,%s];4:size3;4:and[%s,%s];4:size3;4:size3;4:triangle
'λx.apply(green,iota(filter(x.s, or[or[blue,rectangle],green])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:blue;4:rectangle;4:green
'λx.forall(blue,filter(filter(x.s, green), circle))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:circle
'λx.apply(and[apply(size-gt,x.o),and[and[triangle,rectangle],blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:and[%s,%s];4:and[%s,%s];4:triangle;4:rectangle;4:blue;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, or[rectangle,size3]), not[nor[rectangle,triangle]]), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:size3;4:not[%s];4:nor[%s,%s];4:rectangle;4:triangle;4:size3
'λx.apply(and[nor[or[green,nor[circle,size1]],blue],apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:green;4:nor[%s,%s];4:circle;4:size1;4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, blue), implies[and[not[size2],yellow],and[yellow,implies[size3,or[size2,blue]]]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:implies[%s,%s];4:and[%s,%s];4:not[%s];4:size2;4:yellow;4:and[%s,%s];4:yellow;4:implies[%s,%s];4:size3;4:or[%s,%s];4:size2;4:blue;3:%s.s;2:x
'λx.forall(or[size3,size3],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:size3;4:size3;3:%s.s;2:x
'λx.apply(or[or[green,and[blue,apply(same_color,x.o)]],and[size2,blue]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:green;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:size2;4:blue;1:%s.o;2:x
'λx.apply(not[and[size3,green]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size3;4:green;1:%s.o;2:x
'λx.apply(nor[not[blue],or[not[or[size2,rectangle]],rectangle]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:not[%s];4:blue;4:or[%s,%s];4:not[%s];4:or[%s,%s];4:size2;4:rectangle;4:rectangle;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(x.s, circle), apply(same_size,iota(x.s))))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(or[yellow,or[green,circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:or[%s,%s];4:green;4:circle;1:%s.o;2:x
'λx.exists(and[yellow,or[rectangle,apply(same_color,x.o)]], filter(filter(filter(x.s, green), blue), implies[size3,green]))'	0:exists(%s, %s);4:and[%s,%s];4:yellow;4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue;4:implies[%s,%s];4:size3;4:green
'λx.apply(size2,iota(filter(filter(filter(x.s, rectangle), rectangle), yellow)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle;4:yellow
'λx.contains(x.o, filter(x.s, apply(same_color,iota(x.s))))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[and[not[and[and[size3,yellow],apply(same_shape,x.o)]],blue],size3],iota(filter(x.s, implies[green,yellow])))'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:yellow;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:green;4:yellow
'λx.empty(filter(filter(filter(filter(x.s, size1), nor[or[blue,not[not[iff[apply(same_size,iota(filter(x.s, circle))),size2]]]],green]), and[green,rectangle]), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:nor[%s,%s];4:or[%s,%s];4:blue;4:not[%s];4:not[%s];4:iff[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size2;4:green;4:and[%s,%s];4:green;4:rectangle;4:rectangle
'λx.exists(and[size2,and[size1,nand[yellow,size3]]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:size2;4:and[%s,%s];4:size1;4:nand[%s,%s];4:yellow;4:size3;3:%s.s;2:x
'λx.apply(or[and[apply(same_size,iota(x.s)),green],and[size3,nor[iff[blue,blue],size1]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:green;4:and[%s,%s];4:size3;4:nor[%s,%s];4:iff[%s,%s];4:blue;4:blue;4:size1;1:iota(%s);3:%s.s;2:x
'λx.forall(not[and[size1,yellow]],x.s)'	0:forall(%s,%s);4:not[%s];4:and[%s,%s];4:size1;4:yellow;3:%s.s;2:x
'λx.apply(implies[apply(same_color,iota(x.s)),size2],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(filter(filter(x.s, and[green,implies[and[size1,size2],iff[and[not[or[or[and[and[not[rectangle],and[size2,blue]],size2],nor[blue,not[not[and[and[size2,apply(same_size,iota(filter(filter(x.s, circle), green)))],circle]]]]],blue]],rectangle],triangle]]]), circle), yellow), blue)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:implies[%s,%s];4:and[%s,%s];4:size1;4:size2;4:iff[%s,%s];4:and[%s,%s];4:not[%s];4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:rectangle;4:and[%s,%s];4:size2;4:blue;4:size2;4:nor[%s,%s];4:blue;4:not[%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green;4:circle;4:blue;4:rectangle;4:triangle;4:circle;4:yellow;4:blue
'λx.apply(rectangle,iota(filter(x.s, and[apply(same_color,iota(x.s)),or[and[blue,and[implies[apply(same_color,x.o),and[circle,size2]],or[not[not[blue]],and[green,iff[triangle,rectangle]]]]],blue]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:circle;4:size2;4:or[%s,%s];4:not[%s];4:not[%s];4:blue;4:and[%s,%s];4:green;4:iff[%s,%s];4:triangle;4:rectangle;4:blue
'λx.exists(size2, filter(filter(x.s, yellow), and[iff[and[size3,size2],green],and[green,green]]))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:size3;4:size2;4:green;4:and[%s,%s];4:green;4:green
'λx.apply(and[and[and[nand[size3,circle],yellow],size1],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:size3;4:circle;4:yellow;4:size1;4:triangle;1:%s.o;2:x
'λx.apply(and[nor[yellow,green],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:yellow;4:green;4:triangle;1:%s.o;2:x
'λx.forall(or[and[apply(size-lt,x.o),green],and[circle,apply(same_color,iota(filter(x.s, apply(same_shape,x.o))))]],filter(x.s, rectangle))'	0:forall(%s,%s);4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:green;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[size1,green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(x.s, and[triangle,and[rectangle,and[triangle,size1]]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:triangle;4:size1
'λx.apply(and[and[triangle,nand[yellow,size2]],apply(same_color,x.o)],iota(filter(filter(filter(x.s, rectangle), apply(same_color,iota(filter(filter(filter(x.s, green), nor[apply(same_shape,x.o),triangle]), blue)))), and[iff[yellow,nor[circle,size3]],size2])))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:nand[%s,%s];4:yellow;4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle;4:blue;4:and[%s,%s];4:iff[%s,%s];4:yellow;4:nor[%s,%s];4:circle;4:size3;4:size2
'λx.apply(nor[size3,circle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size3;4:circle;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, triangle), triangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:triangle
'λx.forall(green,filter(filter(filter(filter(filter(x.s, size2), size2), yellow), or[circle,not[not[triangle]]]), and[size3,size3]))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2;4:yellow;4:or[%s,%s];4:circle;4:not[%s];4:not[%s];4:triangle;4:and[%s,%s];4:size3;4:size3
'λx.empty(filter(filter(x.s, triangle), apply(same_color,iota(filter(filter(x.s, size1), nand[not[and[yellow,and[rectangle,not[circle]]]],size1])))))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:nand[%s,%s];4:not[%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:rectangle;4:not[%s];4:circle;4:size1
'λx.apply(not[apply(same_shape,x.o)],iota(filter(filter(filter(filter(filter(filter(filter(x.s, and[circle,size2]), rectangle), size2), rectangle), rectangle), blue), size1)))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size2;4:rectangle;4:size2;4:rectangle;4:rectangle;4:blue;4:size1
'λx.apply(green,iota(filter(filter(x.s, blue), and[nor[size3,yellow],and[size1,size3]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:nor[%s,%s];4:size3;4:yellow;4:and[%s,%s];4:size1;4:size3
'λx.apply(yellow,iota(filter(filter(filter(x.s, circle), or[blue,and[and[not[yellow],and[rectangle,and[size2,green]]],green]]), size2)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:yellow;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:size2;4:green;4:green;4:size2
'λx.apply(not[not[implies[blue,and[blue,and[blue,triangle]]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:implies[%s,%s];4:blue;4:and[%s,%s];4:blue;4:and[%s,%s];4:blue;4:triangle;1:%s.o;2:x
'λx.apply(and[rectangle,rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:rectangle;1:%s.o;2:x
'λx.apply(size1,iota(filter(x.s, apply(same_shape,iota(filter(x.s, circle))))))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.forall(triangle,filter(filter(filter(filter(filter(x.s, not[not[size3]]), apply(same_size,x.o)), size3), size1), yellow))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;4:size1;4:yellow
'λx.apply(and[or[or[yellow,nand[circle,apply(same_color,x.o)]],triangle],or[size3,green]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:yellow;4:nand[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;4:or[%s,%s];4:size3;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(x.s, nor[green,rectangle]), blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:green;4:rectangle;4:blue
'λx.apply(apply(same_shape,iota(filter(filter(x.s, and[rectangle,or[size3,nor[not[yellow],circle]]]), and[size1,not[size2]]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:size3;4:nor[%s,%s];4:not[%s];4:yellow;4:circle;4:and[%s,%s];4:size1;4:not[%s];4:size2;1:%s.o;2:x
'λx.apply(implies[iff[rectangle,yellow],circle],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:iff[%s,%s];4:rectangle;4:yellow;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[apply(same_shape,iota(x.s)),green],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:green;1:%s.o;2:x
'λx.apply(iff[rectangle,not[triangle]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:rectangle;4:not[%s];4:triangle;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, size3), or[not[or[size1,or[triangle,size3]]],size2])), filter(x.s, rectangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:not[%s];4:or[%s,%s];4:size1;4:or[%s,%s];4:triangle;4:size3;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[rectangle,green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[size2,green],nand[nor[circle,and[not[not[circle]],apply(same_shape,x.o)]],and[nand[green,triangle],apply(same_color,iota(filter(filter(x.s, iff[size3,apply(same_color,iota(filter(filter(filter(filter(x.s, and[apply(same_shape,x.o),green]), apply(size-leq,iota(x.s))), not[blue]), circle)))]), yellow)))]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size2;4:green;4:nand[%s,%s];4:nor[%s,%s];4:circle;4:and[%s,%s];4:not[%s];4:not[%s];4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:nand[%s,%s];4:green;4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:not[%s];4:blue;4:circle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[rectangle,apply(size-leq,x.o)],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:rectangle;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(apply(same_shape,x.o),iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.forall(not[apply(size-lt,x.o)],x.s)'	0:forall(%s,%s);4:not[%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;3:%s.s;2:x
'λx.exists(or[circle,size3], filter(x.s, apply(same_size,iota(filter(x.s, rectangle)))))'	0:exists(%s, %s);4:or[%s,%s];4:circle;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.contains(x.o, filter(x.s, implies[size2,nand[circle,apply(same_color,iota(x.s))]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size2;4:nand[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.exists(rectangle, filter(filter(x.s, size2), and[not[triangle],and[apply(size-gt,iota(x.s)),green]]))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:not[%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:green
'λx.apply(or[green,green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:green;1:%s.o;2:x
'λx.apply(and[and[size1,size2],yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:size2;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.exists(nor[rectangle,or[apply(size-geq,iota(x.s)),size3]], x.s)'	0:exists(%s, %s);4:nor[%s,%s];4:rectangle;4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:size3;3:%s.s;2:x
'λx.exists(not[apply(same_size,iota(filter(filter(x.s, and[or[blue,size3],size2]), rectangle)))], filter(filter(x.s, circle), apply(same_shape,iota(x.s))))'	0:exists(%s, %s);4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:blue;4:size3;4:size2;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, size1), and[apply(same_size,x.o),size1]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1
'λx.apply(green,iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(or[rectangle,and[nor[not[implies[circle,not[apply(size-leq,x.o)]]],size1],size1]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:and[%s,%s];4:nor[%s,%s];4:not[%s];4:implies[%s,%s];4:circle;4:not[%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size1;4:size1;1:%s.o;2:x
'λx.empty(filter(filter(x.s, nor[size2,green]), or[size3,circle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size2;4:green;4:or[%s,%s];4:size3;4:circle
'λx.empty(filter(filter(x.s, not[yellow]), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:yellow
'λx.empty(filter(x.s, and[not[size3],and[or[yellow,rectangle],green]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:size3;4:and[%s,%s];4:or[%s,%s];4:yellow;4:rectangle;4:green
'λx.apply(blue,iota(filter(filter(filter(filter(filter(x.s, size1), rectangle), implies[not[green],triangle]), triangle), size1)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle;4:implies[%s,%s];4:not[%s];4:green;4:triangle;4:triangle;4:size1
'λx.contains(x.o, filter(filter(x.s, rectangle), and[apply(same_shape,iota(x.s)),and[size3,size3]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:size3
'λx.contains(iota(filter(filter(filter(filter(filter(x.s, not[implies[and[apply(same_color,x.o),size2],and[rectangle,green]]]), not[and[size1,triangle]]), not[triangle]), blue), size3)), filter(filter(x.s, blue), rectangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:implies[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size2;4:and[%s,%s];4:rectangle;4:green;4:not[%s];4:and[%s,%s];4:size1;4:triangle;4:not[%s];4:triangle;4:blue;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle
'λx.contains(iota(filter(x.s, apply(same_size,iota(filter(x.s, implies[and[green,yellow],or[and[implies[green,not[rectangle]],triangle],and[circle,and[not[triangle],or[implies[circle,yellow],size3]]]]]))))), filter(filter(x.s, yellow), blue))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:and[%s,%s];4:green;4:yellow;4:or[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:green;4:not[%s];4:rectangle;4:triangle;4:and[%s,%s];4:circle;4:and[%s,%s];4:not[%s];4:triangle;4:or[%s,%s];4:implies[%s,%s];4:circle;4:yellow;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:blue
'λx.apply(or[apply(size-lt,iota(filter(x.s, implies[size3,or[or[size1,size1],blue]]))),circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size3;4:or[%s,%s];4:or[%s,%s];4:size1;4:size1;4:blue;4:circle;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(filter(filter(x.s, green), size3), and[not[and[triangle,size2]],not[yellow]]), rectangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size3;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:triangle;4:size2;4:not[%s];4:yellow;4:rectangle
'λx.apply(iff[and[and[rectangle,nand[apply(same_size,x.o),size3]],size1],circle],iota(filter(x.s, and[nor[circle,size2],blue])))'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:nand[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;4:size1;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:circle;4:size2;4:blue
'λx.apply(not[and[implies[triangle,rectangle],size2]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:implies[%s,%s];4:triangle;4:rectangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(x.s, blue))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.exists(and[and[and[size3,apply(size-geq,iota(filter(x.s, or[not[and[and[rectangle,and[not[and[blue,size1]],circle]],apply(same_color,iota(filter(x.s, and[yellow,circle])))]],not[rectangle]])))],size3],green], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:blue;4:size1;4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:circle;4:not[%s];4:rectangle;4:size3;4:green;3:%s.s;2:x
'λx.apply(nand[size1,yellow],iota(filter(filter(filter(filter(filter(x.s, blue), size2), size1), size1), size1)))'	0:apply(%s,%s);4:nand[%s,%s];4:size1;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2;4:size1;4:size1;4:size1
'λx.apply(circle,iota(filter(filter(filter(filter(x.s, triangle), size3), blue), green)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3;4:blue;4:green
'λx.empty(filter(filter(filter(x.s, and[blue,and[rectangle,circle]]), not[size1]), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:circle;4:not[%s];4:size1;4:triangle
'λx.apply(not[size1],iota(filter(filter(filter(filter(x.s, not[green]), yellow), and[not[size3],rectangle]), size2)))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:yellow;4:and[%s,%s];4:not[%s];4:size3;4:rectangle;4:size2
'λx.apply(size2,iota(filter(filter(x.s, or[and[and[circle,triangle],yellow],and[rectangle,and[size1,rectangle]]]), size3)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:triangle;4:yellow;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:size1;4:rectangle;4:size3
'λx.exists(iff[size1,size1], filter(x.s, circle))'	0:exists(%s, %s);4:iff[%s,%s];4:size1;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(green,iota(filter(filter(x.s, yellow), rectangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle
'λx.apply(nand[implies[blue,or[not[size3],triangle]],and[size3,rectangle]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:implies[%s,%s];4:blue;4:or[%s,%s];4:not[%s];4:size3;4:triangle;4:and[%s,%s];4:size3;4:rectangle;1:%s.o;2:x
'λx.apply(or[and[circle,size1],size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:circle;4:size1;4:size1;1:%s.o;2:x
'λx.apply(and[and[and[and[or[green,not[triangle]],rectangle],yellow],and[rectangle,green]],green],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:green;4:not[%s];4:triangle;4:rectangle;4:yellow;4:and[%s,%s];4:rectangle;4:green;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.empty(filter(filter(x.s, triangle), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size1
'λx.empty(filter(filter(x.s, triangle), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green
'λx.apply(not[green],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[triangle,size2],iota(filter(x.s, not[triangle])))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.apply(or[size3,apply(same_size,x.o)],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(filter(x.s, triangle), or[not[yellow],triangle]), blue)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:or[%s,%s];4:not[%s];4:yellow;4:triangle;4:blue;3:%s.s;2:x
'λx.forall(yellow,filter(filter(x.s, triangle), circle))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle
'λx.apply(and[size3,or[and[yellow,circle],circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:or[%s,%s];4:and[%s,%s];4:yellow;4:circle;4:circle;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(x.s, yellow), rectangle), blue)), filter(x.s, triangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(nand[circle,blue],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:circle;4:blue;1:%s.o;2:x
'λx.exists(green, filter(filter(x.s, yellow), triangle))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle
'λx.apply(and[blue,and[rectangle,and[not[rectangle],triangle]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:not[%s];4:rectangle;4:triangle;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, nand[and[apply(size-leq,x.o),apply(same_color,iota(filter(x.s, yellow)))],rectangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle
'λx.apply(not[yellow],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(implies[triangle,size3],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:triangle;4:size3;1:%s.o;2:x
'λx.apply(implies[triangle,size1],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:triangle;4:size1;1:%s.o;2:x
'λx.apply(not[and[circle,yellow]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:circle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(x.s, not[not[green]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:green
'λx.apply(apply(same_size,iota(filter(x.s, apply(same_shape,iota(x.s))))),iota(filter(x.s, and[green,or[yellow,size1]])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:or[%s,%s];4:yellow;4:size1
'λx.exists(apply(same_shape,iota(filter(x.s, implies[apply(size-leq,iota(filter(filter(filter(filter(filter(x.s, green), rectangle), rectangle), iff[and[implies[not[implies[blue,size1]],size3],iff[rectangle,circle]],and[yellow,blue]]), green))),implies[rectangle,yellow]]))), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle;4:rectangle;4:iff[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:not[%s];4:implies[%s,%s];4:blue;4:size1;4:size3;4:iff[%s,%s];4:rectangle;4:circle;4:and[%s,%s];4:yellow;4:blue;4:green;4:implies[%s,%s];4:rectangle;4:yellow;3:%s.s;2:x
'λx.apply(nor[circle,green],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:circle;4:green;1:iota(%s);3:%s.s;2:x
'λx.forall(triangle,filter(filter(x.s, or[circle,yellow]), or[or[apply(same_size,x.o),circle],or[rectangle,and[circle,yellow]]]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:yellow;4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;4:or[%s,%s];4:rectangle;4:and[%s,%s];4:circle;4:yellow
'λx.apply(nor[triangle,size2],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:triangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[triangle,size3],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:triangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(filter(x.s, rectangle), and[blue,circle]), yellow)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:blue;4:circle;4:yellow
'λx.apply(apply(same_shape,iota(filter(filter(filter(x.s, or[size3,apply(same_shape,x.o)]), size1), blue))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(or[green,blue],iota(filter(filter(filter(x.s, rectangle), size3), green)))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3;4:green
'λx.forall(or[size1,circle],filter(x.s, nand[triangle,blue]))'	0:forall(%s,%s);4:or[%s,%s];4:size1;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:triangle;4:blue
'λx.apply(and[and[or[and[yellow,green],and[size2,or[not[blue],triangle]]],size2],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:yellow;4:green;4:and[%s,%s];4:size2;4:or[%s,%s];4:not[%s];4:blue;4:triangle;4:size2;4:circle;1:%s.o;2:x
'λx.apply(or[and[apply(same_shape,iota(filter(x.s, size1))),size1],triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1;4:triangle;1:%s.o;2:x
'λx.apply(implies[apply(same_size,iota(x.s)),size1],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size1;1:%s.o;2:x
'λx.forall(apply(same_shape,iota(filter(filter(x.s, apply(same_shape,x.o)), and[size2,size1]))),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:size2;4:size1;3:%s.s;2:x
'λx.apply(apply(same_shape,iota(filter(filter(filter(x.s, yellow), apply(same_color,iota(filter(filter(x.s, rectangle), rectangle)))), blue))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle;4:blue;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, circle), nand[circle,triangle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:nand[%s,%s];4:circle;4:triangle
'λx.apply(implies[size2,yellow],iota(filter(x.s, nor[or[yellow,not[and[yellow,apply(same_size,x.o)]]],and[or[and[or[not[and[and[size3,rectangle],yellow]],not[apply(same_shape,iota(x.s))]],circle],blue],apply(same_shape,iota(filter(filter(x.s, or[apply(same_color,iota(filter(filter(filter(x.s, rectangle), green), green))),size1]), blue)))]])))'	0:apply(%s,%s);4:implies[%s,%s];4:size2;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:or[%s,%s];4:yellow;4:not[%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:rectangle;4:yellow;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle;4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green;4:green;4:size1;4:blue
'λx.forall(triangle,filter(filter(filter(filter(x.s, and[implies[blue,apply(size-leq,x.o)],apply(same_shape,iota(filter(filter(filter(x.s, triangle), nor[green,and[green,size3]]), and[green,and[not[or[rectangle,apply(same_size,iota(x.s))]],and[rectangle,and[blue,or[blue,and[not[size1],triangle]]]]]])))]), and[yellow,and[not[or[green,yellow]],or[nand[size3,circle],circle]]]), size1), green))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:implies[%s,%s];4:blue;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:nor[%s,%s];4:green;4:and[%s,%s];4:green;4:size3;4:and[%s,%s];4:green;4:and[%s,%s];4:not[%s];4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:blue;4:or[%s,%s];4:blue;4:and[%s,%s];4:not[%s];4:size1;4:triangle;4:and[%s,%s];4:yellow;4:and[%s,%s];4:not[%s];4:or[%s,%s];4:green;4:yellow;4:or[%s,%s];4:nand[%s,%s];4:size3;4:circle;4:circle;4:size1;4:green
'λx.apply(nor[size2,iff[nor[blue,green],size2]],iota(filter(x.s, not[or[blue,or[apply(same_shape,iota(x.s)),circle]]])))'	0:apply(%s,%s);4:nor[%s,%s];4:size2;4:iff[%s,%s];4:nor[%s,%s];4:blue;4:green;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:blue;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle
'λx.exists(size3, filter(filter(x.s, size1), and[and[size1,rectangle],and[and[size1,size2],and[green,nor[and[apply(same_size,iota(x.s)),blue],size2]]]]))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:and[%s,%s];4:size1;4:rectangle;4:and[%s,%s];4:and[%s,%s];4:size1;4:size2;4:and[%s,%s];4:green;4:nor[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:blue;4:size2
'λx.apply(and[and[yellow,size3],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:size3;4:size1;1:%s.o;2:x
'λx.apply(and[or[size2,blue],rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size2;4:blue;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[yellow,rectangle],iota(filter(filter(x.s, or[green,green]), circle)))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:green;4:circle
'λx.contains(x.o, filter(filter(x.s, and[implies[not[green],green],blue]), blue))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:implies[%s,%s];4:not[%s];4:green;4:green;4:blue;4:blue
'λx.apply(size2,iota(filter(filter(filter(filter(x.s, rectangle), or[size1,circle]), iff[size2,not[circle]]), circle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:or[%s,%s];4:size1;4:circle;4:iff[%s,%s];4:size2;4:not[%s];4:circle;4:circle
'λx.apply(or[and[apply(same_shape,x.o),size1],not[size2]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;4:not[%s];4:size2;1:%s.o;2:x
'λx.forall(blue,filter(filter(filter(filter(filter(x.s, circle), size2), and[circle,size3]), and[triangle,yellow]), apply(same_color,x.o)))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size2;4:and[%s,%s];4:circle;4:size3;4:and[%s,%s];4:triangle;4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(and[size2,green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(filter(x.s, or[yellow,triangle]), or[green,rectangle]), size3)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:triangle;4:or[%s,%s];4:green;4:rectangle;4:size3
'λx.apply(and[size3,green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:green;1:iota(%s);3:%s.s;2:x
'λx.exists(triangle, filter(x.s, not[rectangle]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle
'λx.apply(or[blue,green],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(not[and[yellow,apply(same_shape,iota(filter(x.s, rectangle)))]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[apply(same_color,iota(filter(filter(filter(filter(x.s, and[and[rectangle,triangle],green]), blue), or[blue,not[and[green,yellow]]]), size2))),and[circle,or[and[blue,size2],yellow]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:triangle;4:green;4:blue;4:or[%s,%s];4:blue;4:not[%s];4:and[%s,%s];4:green;4:yellow;4:size2;4:and[%s,%s];4:circle;4:or[%s,%s];4:and[%s,%s];4:blue;4:size2;4:yellow;1:%s.o;2:x
'λx.exists(nor[yellow,iff[blue,triangle]], filter(filter(x.s, apply(same_size,iota(filter(x.s, size3)))), blue))'	0:exists(%s, %s);4:nor[%s,%s];4:yellow;4:iff[%s,%s];4:blue;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue
'λx.contains(iota(filter(x.s, or[size2,circle])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:circle;3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, implies[blue,size1]), rectangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:blue;4:size1;4:rectangle
'λx.contains(x.o, filter(filter(filter(x.s, apply(size-lt,iota(x.s))), or[triangle,blue]), or[size2,iff[size2,blue]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:blue;4:or[%s,%s];4:size2;4:iff[%s,%s];4:size2;4:blue
'λx.apply(and[triangle,size1],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.forall(and[circle,not[size3]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:circle;4:not[%s];4:size3;3:%s.s;2:x
'λx.exists(green, x.s)'	0:exists(%s, %s);4:green;3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(x.s, circle), size1)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1
'λx.apply(iff[green,and[yellow,or[rectangle,green]]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:green;4:and[%s,%s];4:yellow;4:or[%s,%s];4:rectangle;4:green;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(x.s, green), blue), iff[blue,circle]), not[triangle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue;4:iff[%s,%s];4:blue;4:circle;4:not[%s];4:triangle
'λx.apply(yellow,iota(filter(filter(x.s, size2), size1)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1
'λx.exists(size1, x.s)'	0:exists(%s, %s);4:size1;3:%s.s;2:x
'λx.exists(size2, x.s)'	0:exists(%s, %s);4:size2;3:%s.s;2:x
'λx.exists(size3, x.s)'	0:exists(%s, %s);4:size3;3:%s.s;2:x
'λx.forall(nand[green,not[not[size2]]],filter(x.s, and[size3,nor[size1,or[not[and[apply(same_size,iota(filter(x.s, size1))),rectangle]],iff[rectangle,iff[triangle,triangle]]]]]))'	0:forall(%s,%s);4:nand[%s,%s];4:green;4:not[%s];4:not[%s];4:size2;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:nor[%s,%s];4:size1;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle;4:iff[%s,%s];4:rectangle;4:iff[%s,%s];4:triangle;4:triangle
'λx.apply(size3,iota(filter(filter(filter(x.s, not[size1]), green), size3)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:green;4:size3
'λx.forall(or[yellow,blue],filter(filter(filter(x.s, implies[and[rectangle,yellow],yellow]), apply(same_size,x.o)), size2))'	0:forall(%s,%s);4:or[%s,%s];4:yellow;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:and[%s,%s];4:rectangle;4:yellow;4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2
'λx.apply(apply(size-geq,x.o),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(x.s, or[triangle,blue])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:blue
'λx.empty(x.s)'	0:empty(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(filter(x.s, rectangle), size2), apply(same_shape,iota(x.s)))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.forall(apply(size-lt,x.o),filter(x.s, and[and[size2,not[triangle]],size1]))'	0:forall(%s,%s);4:apply(%s,%s);5:size-lt;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size2;4:not[%s];4:triangle;4:size1
'λx.empty(filter(filter(x.s, or[green,apply(same_size,iota(filter(filter(x.s, and[size3,size1]), circle)))]), and[size2,and[and[circle,green],triangle]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:size1;4:circle;4:and[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:circle;4:green;4:triangle
'λx.apply(and[or[green,and[not[size2],or[apply(same_shape,iota(x.s)),not[and[size1,apply(same_shape,iota(x.s))]]]]],and[blue,and[and[size2,and[nand[green,rectangle],yellow]],blue]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:green;4:and[%s,%s];4:not[%s];4:size2;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:nand[%s,%s];4:green;4:rectangle;4:yellow;4:blue;1:%s.o;2:x
'λx.apply(and[apply(size-gt,iota(filter(filter(x.s, triangle), and[not[circle],green]))),green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:not[%s];4:circle;4:green;4:green;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, apply(size-leq,iota(filter(x.s, apply(same_size,iota(filter(x.s, nor[and[green,not[size3]],green]))))))), and[not[size2],green])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:and[%s,%s];4:green;4:not[%s];4:size3;4:green;4:and[%s,%s];4:not[%s];4:size2;4:green
'λx.apply(not[apply(same_shape,x.o)],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, green), green)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:green
'λx.apply(green,iota(filter(filter(filter(x.s, not[rectangle]), nand[and[iff[yellow,size1],circle],nor[rectangle,size2]]), or[green,size2])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;4:nand[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:yellow;4:size1;4:circle;4:nor[%s,%s];4:rectangle;4:size2;4:or[%s,%s];4:green;4:size2
'λx.apply(or[nor[apply(size-leq,x.o),rectangle],size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:rectangle;4:size3;1:%s.o;2:x
'λx.apply(iff[yellow,green],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:yellow;4:green;1:%s.o;2:x
'λx.apply(apply(size-leq,iota(x.s)),iota(filter(filter(filter(x.s, iff[rectangle,size1]), size2), yellow)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:rectangle;4:size1;4:size2;4:yellow
'λx.apply(blue,iota(filter(filter(filter(filter(x.s, green), not[triangle]), circle), yellow)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:triangle;4:circle;4:yellow
'λx.apply(nand[rectangle,triangle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:rectangle;4:triangle;1:%s.o;2:x
'λx.apply(and[and[rectangle,rectangle],apply(same_shape,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:rectangle;4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(apply(same_color,x.o),iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(rectangle,iota(filter(x.s, not[rectangle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle
'λx.apply(implies[yellow,and[size3,green]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:yellow;4:and[%s,%s];4:size3;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_shape,iota(x.s)),iota(filter(filter(x.s, size3), blue)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue
'λx.exists(circle, filter(filter(x.s, rectangle), and[apply(size-leq,iota(filter(filter(x.s, nand[yellow,iff[size3,triangle]]), nor[blue,yellow]))),size3]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:yellow;4:iff[%s,%s];4:size3;4:triangle;4:nor[%s,%s];4:blue;4:yellow;4:size3
'λx.apply(circle,iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(nand[iff[size1,or[and[size1,implies[blue,apply(size-leq,x.o)]],blue]],apply(same_size,iota(filter(filter(filter(filter(x.s, rectangle), size3), size2), and[blue,blue])))],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:nand[%s,%s];4:iff[%s,%s];4:size1;4:or[%s,%s];4:and[%s,%s];4:size1;4:implies[%s,%s];4:blue;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3;4:size2;4:and[%s,%s];4:blue;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(circle,iota(filter(filter(x.s, and[triangle,not[triangle]]), or[green,size3])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:not[%s];4:triangle;4:or[%s,%s];4:green;4:size3
'λx.apply(green,iota(filter(filter(x.s, and[rectangle,and[green,green]]), size3)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:green;4:green;4:size3
'λx.apply(or[and[apply(same_color,x.o),yellow],yellow],iota(filter(filter(x.s, size3), and[and[circle,size3],circle])))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:and[%s,%s];4:circle;4:size3;4:circle
'λx.apply(and[and[size1,rectangle],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:rectangle;4:circle;1:%s.o;2:x
'λx.apply(and[blue,or[blue,circle]],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:or[%s,%s];4:blue;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.contains(iota(filter(filter(x.s, blue), nor[nand[rectangle,size1],nor[triangle,blue]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:nor[%s,%s];4:nand[%s,%s];4:rectangle;4:size1;4:nor[%s,%s];4:triangle;4:blue;3:%s.s;2:x
'λx.apply(circle,iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.empty(filter(filter(x.s, rectangle), and[circle,size2]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:circle;4:size2
'λx.apply(yellow,iota(filter(filter(x.s, circle), yellow)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow
'λx.apply(apply(same_shape,iota(x.s)),iota(filter(filter(x.s, size1), apply(same_shape,iota(x.s)))))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(x.s, and[and[apply(same_shape,x.o),or[not[apply(same_color,iota(x.s))],green]],size3])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:green;4:size3
'λx.contains(iota(filter(filter(filter(filter(filter(x.s, size2), apply(same_color,x.o)), not[size1]), apply(same_size,iota(filter(filter(x.s, and[and[green,or[rectangle,or[size1,and[and[rectangle,rectangle],apply(same_shape,iota(x.s))]]]],not[and[not[apply(same_size,iota(filter(x.s, blue)))],or[not[size3],circle]]]]), size2)))), yellow)), filter(x.s, size2))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:green;4:or[%s,%s];4:rectangle;4:or[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:not[%s];4:size3;4:circle;4:size2;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(nor[rectangle,blue],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:rectangle;4:blue;1:%s.o;2:x
'λx.forall(blue,filter(filter(filter(x.s, circle), yellow), size2))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow;4:size2
'λx.apply(size3,iota(filter(filter(x.s, circle), circle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:circle
'λx.forall(and[triangle,apply(size-lt,iota(x.s))],filter(filter(x.s, blue), size2))'	0:forall(%s,%s);4:and[%s,%s];4:triangle;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2
'λx.apply(iff[apply(same_shape,iota(filter(filter(filter(filter(x.s, nor[yellow,iff[yellow,size2]]), blue), blue), and[size2,yellow]))),or[yellow,yellow]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:yellow;4:iff[%s,%s];4:yellow;4:size2;4:blue;4:blue;4:and[%s,%s];4:size2;4:yellow;4:or[%s,%s];4:yellow;4:yellow;1:%s.o;2:x
'λx.apply(and[implies[blue,size1],and[rectangle,nor[size3,blue]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:blue;4:size1;4:and[%s,%s];4:rectangle;4:nor[%s,%s];4:size3;4:blue;1:%s.o;2:x
'λx.forall(blue,filter(x.s, rectangle))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(size1,iota(filter(filter(filter(filter(x.s, yellow), triangle), size3), size2)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle;4:size3;4:size2
'λx.forall(apply(same_color,iota(x.s)),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(nor[yellow,and[yellow,apply(size-geq,iota(x.s))]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:yellow;4:and[%s,%s];4:yellow;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(and[and[green,rectangle],size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:green;4:rectangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(filter(filter(x.s, nor[or[not[yellow],yellow],circle]), and[yellow,size3]), yellow), size3)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:or[%s,%s];4:not[%s];4:yellow;4:yellow;4:circle;4:and[%s,%s];4:yellow;4:size3;4:yellow;4:size3
'λx.apply(nand[circle,apply(same_shape,x.o)],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, triangle)), filter(filter(x.s, and[not[and[circle,size2]],size3]), triangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:circle;4:size2;4:size3;4:triangle
'λx.apply(size3,iota(filter(x.s, and[size3,or[circle,circle]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:or[%s,%s];4:circle;4:circle
'λx.apply(circle,iota(x.s))'	0:apply(%s,%s);4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[and[apply(same_color,x.o),or[size3,iff[yellow,yellow]]]],iota(filter(filter(x.s, not[blue]), size1)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:or[%s,%s];4:size3;4:iff[%s,%s];4:yellow;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:size1
'λx.forall(triangle,x.s)'	0:forall(%s,%s);4:triangle;3:%s.s;2:x
'λx.apply(or[and[green,blue],not[triangle]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:green;4:blue;4:not[%s];4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[apply(same_color,iota(x.s)),or[yellow,size3]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:size3;1:%s.o;2:x
'λx.apply(implies[size1,not[and[implies[size1,not[and[and[triangle,blue],triangle]]],blue]]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size1;4:not[%s];4:and[%s,%s];4:implies[%s,%s];4:size1;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:blue;4:triangle;4:blue;1:%s.o;2:x
'λx.apply(or[implies[yellow,size3],size1],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:or[%s,%s];4:implies[%s,%s];4:yellow;4:size3;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.empty(filter(x.s, implies[triangle,size3]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:triangle;4:size3
'λx.apply(or[and[blue,yellow],and[green,blue]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:blue;4:yellow;4:and[%s,%s];4:green;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(or[and[and[green,and[triangle,or[rectangle,triangle]]],and[not[size1],and[not[apply(same_size,iota(x.s))],size1]]],triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:triangle;4:or[%s,%s];4:rectangle;4:triangle;4:and[%s,%s];4:not[%s];4:size1;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size1;4:triangle;1:%s.o;2:x
'λx.apply(and[green,and[implies[circle,green],or[not[blue],triangle]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:implies[%s,%s];4:circle;4:green;4:or[%s,%s];4:not[%s];4:blue;4:triangle;1:%s.o;2:x
'λx.contains(x.o, filter(filter(filter(filter(x.s, yellow), green), and[iff[triangle,green],size3]), iff[green,green]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green;4:and[%s,%s];4:iff[%s,%s];4:triangle;4:green;4:size3;4:iff[%s,%s];4:green;4:green
'λx.apply(size2,iota(filter(x.s, and[blue,size2])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size2
'λx.apply(and[size3,size1],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(yellow,iota(filter(filter(x.s, circle), nand[circle,triangle])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:nand[%s,%s];4:circle;4:triangle
'λx.apply(not[nor[size2,size1]],iota(filter(x.s, apply(size-gt,x.o))))'	0:apply(%s,%s);4:not[%s];4:nor[%s,%s];4:size2;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.apply(or[circle,implies[circle,rectangle]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:implies[%s,%s];4:circle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[iff[yellow,yellow],triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:yellow;4:yellow;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[blue,rectangle],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:blue;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[not[size2],or[not[and[yellow,nor[size1,size1]]],not[not[triangle]]]],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size2;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:yellow;4:nor[%s,%s];4:size1;4:size1;4:not[%s];4:not[%s];4:triangle;4:green;1:%s.o;2:x
'λx.apply(size1,iota(filter(x.s, and[not[not[apply(same_shape,iota(filter(x.s, green)))]],yellow])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow
'λx.apply(nor[yellow,size1],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:yellow;4:size1;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(filter(x.s, size1), size2), size1)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2;4:size1
'λx.apply(iff[green,and[yellow,circle]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:green;4:and[%s,%s];4:yellow;4:circle;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(filter(filter(filter(x.s, and[triangle,green]), nand[circle,and[green,size2]]), circle), or[or[blue,rectangle],iff[size3,size2]]), apply(same_shape,x.o))))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:green;4:nand[%s,%s];4:circle;4:and[%s,%s];4:green;4:size2;4:circle;4:or[%s,%s];4:or[%s,%s];4:blue;4:rectangle;4:iff[%s,%s];4:size3;4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.forall(yellow,filter(filter(x.s, or[size3,iff[size1,blue]]), not[circle]))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:iff[%s,%s];4:size1;4:blue;4:not[%s];4:circle
'λx.apply(nand[blue,and[size1,blue]],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:blue;4:and[%s,%s];4:size1;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(x.s, not[or[size1,rectangle]]), not[or[size2,not[and[yellow,size1]]]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:size1;4:rectangle;4:not[%s];4:or[%s,%s];4:size2;4:not[%s];4:and[%s,%s];4:yellow;4:size1
'λx.apply(and[triangle,or[rectangle,rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:or[%s,%s];4:rectangle;4:rectangle;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, not[apply(same_size,iota(filter(filter(x.s, size2), green)))]), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green;4:green
'λx.apply(nor[iff[blue,size2],size1],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:iff[%s,%s];4:blue;4:size2;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(or[apply(same_color,x.o),size1],iota(filter(filter(x.s, circle), yellow)))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow
'λx.contains(x.o, filter(filter(x.s, or[rectangle,green]), not[yellow]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:green;4:not[%s];4:yellow
'λx.apply(and[size1,or[or[size3,and[green,circle]],green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:or[%s,%s];4:or[%s,%s];4:size3;4:and[%s,%s];4:green;4:circle;4:green;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(x.s, or[circle,yellow]), rectangle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:yellow;4:rectangle
'λx.apply(or[circle,size1],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(x.s, or[triangle,yellow]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:yellow
'λx.exists(size2, filter(filter(x.s, yellow), triangle))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle
'λx.apply(iff[size1,not[size3]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:size1;4:not[%s];4:size3;1:%s.o;2:x
'λx.apply(and[apply(size-gt,iota(x.s)),circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:circle;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(filter(filter(x.s, size3), blue), not[rectangle]), circle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue;4:not[%s];4:rectangle;4:circle
'λx.apply(apply(size-geq,iota(filter(x.s, not[rectangle]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.apply(apply(same_size,iota(filter(filter(x.s, triangle), rectangle))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(x.s, iff[or[circle,size1],size2])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:or[%s,%s];4:circle;4:size1;4:size2
'λx.apply(or[apply(same_shape,x.o),rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle;1:%s.o;2:x
'λx.apply(nor[yellow,apply(same_shape,x.o)],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:yellow;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(not[size3],iota(filter(x.s, not[apply(same_shape,iota(filter(x.s, circle)))])))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(yellow,iota(filter(x.s, and[or[or[yellow,nand[size3,apply(same_color,x.o)]],triangle],or[size3,green]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:yellow;4:nand[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;4:or[%s,%s];4:size3;4:green
'λx.forall(and[and[apply(same_shape,iota(filter(x.s, size2))),size3],green],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3;4:green;3:%s.s;2:x
'λx.apply(implies[and[size2,size1],iff[apply(size-geq,x.o),blue]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:size2;4:size1;4:iff[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:blue;1:iota(%s);3:%s.s;2:x
'λx.exists(or[size1,and[or[blue,or[and[apply(size-lt,iota(filter(filter(filter(filter(x.s, not[and[circle,circle]]), rectangle), triangle), and[blue,size2]))),not[nor[not[implies[and[circle,blue],green]],rectangle]]],size1]],rectangle]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:size1;4:and[%s,%s];4:or[%s,%s];4:blue;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:circle;4:circle;4:rectangle;4:triangle;4:and[%s,%s];4:blue;4:size2;4:not[%s];4:nor[%s,%s];4:not[%s];4:implies[%s,%s];4:and[%s,%s];4:circle;4:blue;4:green;4:rectangle;4:size1;4:rectangle;3:%s.s;2:x
'λx.empty(filter(filter(x.s, triangle), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue
'λx.forall(green,filter(filter(x.s, yellow), rectangle))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle
'λx.apply(and[not[and[size2,yellow]],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:size2;4:yellow;4:yellow;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(filter(x.s, size3), circle), or[nand[and[size1,or[blue,implies[or[not[triangle],size3],size3]]],circle],size2])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle;4:or[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:blue;4:implies[%s,%s];4:or[%s,%s];4:not[%s];4:triangle;4:size3;4:size3;4:circle;4:size2
'λx.apply(green,iota(filter(filter(filter(x.s, yellow), yellow), size1)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:yellow;4:size1
'λx.apply(rectangle,iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(iff[rectangle,and[green,rectangle]],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:iff[%s,%s];4:rectangle;4:and[%s,%s];4:green;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(not[and[green,apply(same_shape,iota(x.s))]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_shape,iota(x.s)),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, nand[size2,apply(size-gt,iota(x.s))]), triangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size2;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:triangle
'λx.apply(size3,iota(filter(filter(x.s, rectangle), iff[size1,size3])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:iff[%s,%s];4:size1;4:size3
'λx.apply(or[and[size2,apply(same_color,iota(x.s))],or[size1,rectangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:rectangle;1:%s.o;2:x
'λx.apply(and[and[triangle,size1],not[blue]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:size1;4:not[%s];4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(x.s, implies[not[yellow],yellow])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:not[%s];4:yellow;4:yellow
'λx.apply(blue,iota(filter(x.s, and[rectangle,triangle])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:triangle
'λx.apply(or[or[circle,circle],not[yellow]],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:circle;4:circle;4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(or[size2,and[triangle,and[yellow,yellow]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:and[%s,%s];4:triangle;4:and[%s,%s];4:yellow;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, not[green])), filter(x.s, apply(same_shape,x.o)))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.exists(or[or[blue,or[apply(same_size,x.o),and[or[apply(same_shape,iota(x.s)),size1],apply(same_shape,iota(filter(filter(x.s, and[nor[circle,nor[apply(size-geq,x.o),nor[circle,and[rectangle,nand[or[size3,and[triangle,size2]],size3]]]]],size1]), triangle)))]]],and[yellow,blue]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:or[%s,%s];4:blue;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:circle;4:nor[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:nor[%s,%s];4:circle;4:and[%s,%s];4:rectangle;4:nand[%s,%s];4:or[%s,%s];4:size3;4:and[%s,%s];4:triangle;4:size2;4:size3;4:size1;4:triangle;4:and[%s,%s];4:yellow;4:blue;3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(x.s, circle), and[and[implies[size2,yellow],yellow],implies[triangle,not[circle]]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:size2;4:yellow;4:yellow;4:implies[%s,%s];4:triangle;4:not[%s];4:circle
'λx.apply(apply(same_shape,iota(filter(x.s, and[blue,size3]))),iota(filter(filter(filter(x.s, size3), rectangle), circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle;4:circle
'λx.apply(nand[size2,apply(same_shape,x.o)],iota(filter(filter(x.s, triangle), and[and[circle,or[and[not[rectangle],nand[not[and[yellow,not[and[and[blue,size3],triangle]]]],blue]],and[apply(size-lt,iota(filter(filter(x.s, apply(same_size,x.o)), yellow))),not[size1]]]],not[blue]])))'	0:apply(%s,%s);4:nand[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:and[%s,%s];4:circle;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:rectangle;4:nand[%s,%s];4:not[%s];4:and[%s,%s];4:yellow;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:size3;4:triangle;4:blue;4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow;4:not[%s];4:size1;4:not[%s];4:blue
'λx.apply(or[and[green,implies[rectangle,circle]],apply(same_size,iota(x.s))],iota(filter(filter(filter(x.s, size3), green), and[size2,circle])))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:green;4:implies[%s,%s];4:rectangle;4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green;4:and[%s,%s];4:size2;4:circle
'λx.apply(apply(same_shape,iota(x.s)),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(and[triangle,triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:triangle;1:%s.o;2:x
'λx.forall(and[size2,size1],filter(filter(x.s, apply(same_shape,x.o)), nor[and[rectangle,green],and[size1,and[and[blue,apply(same_shape,iota(x.s))],or[and[nand[green,size3],green],or[size2,or[triangle,or[or[rectangle,circle],green]]]]]]]))'	0:forall(%s,%s);4:and[%s,%s];4:size2;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:nor[%s,%s];4:and[%s,%s];4:rectangle;4:green;4:and[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:green;4:size3;4:green;4:or[%s,%s];4:size2;4:or[%s,%s];4:triangle;4:or[%s,%s];4:or[%s,%s];4:rectangle;4:circle;4:green
'λx.exists(size1, filter(filter(x.s, yellow), green))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green
'λx.apply(or[rectangle,triangle],iota(filter(filter(x.s, and[apply(size-geq,x.o),size3]), circle)))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:size3;4:circle
'λx.forall(green,filter(x.s, and[size1,and[green,or[implies[and[green,circle],rectangle],rectangle]]]))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:and[%s,%s];4:green;4:or[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:green;4:circle;4:rectangle;4:rectangle
'λx.exists(not[apply(same_size,x.o)], filter(filter(x.s, triangle), yellow))'	0:exists(%s, %s);4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:yellow
'λx.apply(and[size3,blue],iota(filter(filter(filter(filter(x.s, and[size2,or[or[nor[or[and[apply(same_color,x.o),rectangle],size2],triangle],not[not[triangle]]],iff[and[and[not[blue],rectangle],apply(same_size,x.o)],circle]]]), triangle), apply(size-gt,iota(filter(filter(x.s, implies[yellow,and[blue,yellow]]), rectangle)))), and[circle,blue])))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:or[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle;4:size2;4:triangle;4:not[%s];4:not[%s];4:triangle;4:iff[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:blue;4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;4:triangle;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:yellow;4:and[%s,%s];4:blue;4:yellow;4:rectangle;4:and[%s,%s];4:circle;4:blue
'λx.forall(yellow,filter(x.s, blue))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.contains(iota(filter(x.s, or[size2,not[size3]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:not[%s];4:size3;3:%s.s;2:x
'λx.apply(or[green,and[blue,apply(same_size,iota(x.s))]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.exists(implies[size3,rectangle], filter(filter(filter(x.s, blue), or[rectangle,circle]), iff[blue,and[and[green,blue],nor[and[and[yellow,or[triangle,and[size1,and[and[blue,size1],green]]]],circle],not[rectangle]]]]))'	0:exists(%s, %s);4:implies[%s,%s];4:size3;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:rectangle;4:circle;4:iff[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:green;4:blue;4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:or[%s,%s];4:triangle;4:and[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:blue;4:size1;4:green;4:circle;4:not[%s];4:rectangle
'λx.empty(filter(filter(filter(filter(filter(filter(x.s, size2), size3), apply(same_size,x.o)), blue), and[and[size3,apply(size-lt,x.o)],green]), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;4:and[%s,%s];4:and[%s,%s];4:size3;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:green;4:size2
'λx.empty(filter(filter(x.s, blue), implies[blue,size3]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:implies[%s,%s];4:blue;4:size3
'λx.apply(yellow,iota(filter(x.s, iff[circle,implies[size1,circle]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:circle;4:implies[%s,%s];4:size1;4:circle
'λx.apply(nor[size2,apply(same_color,iota(x.s))],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(not[implies[size1,or[size2,or[yellow,size3]]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:implies[%s,%s];4:size1;4:or[%s,%s];4:size2;4:or[%s,%s];4:yellow;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size2,rectangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(size-geq,iota(filter(filter(x.s, apply(same_shape,x.o)), apply(same_color,iota(filter(x.s, triangle)))))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.forall(nor[size1,size1],x.s)'	0:forall(%s,%s);4:nor[%s,%s];4:size1;4:size1;3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(filter(x.s, size3), apply(size-gt,x.o)), yellow)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:yellow
'λx.apply(size1,iota(filter(x.s, implies[nor[triangle,apply(same_color,x.o)],size1])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:nor[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1
'λx.exists(yellow, filter(filter(filter(x.s, circle), size3), or[size1,yellow]))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3;4:or[%s,%s];4:size1;4:yellow
'λx.apply(and[apply(same_size,x.o),and[size2,yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:size2;4:yellow;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, and[size2,or[apply(same_color,x.o),size1]]), circle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1;4:circle
'λx.apply(circle,iota(filter(filter(filter(x.s, blue), green), size3)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green;4:size3
'λx.empty(filter(filter(x.s, size3), and[green,blue]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:green;4:blue
'λx.apply(or[not[yellow],and[not[apply(size-gt,iota(filter(filter(filter(filter(x.s, triangle), nand[circle,green]), and[and[yellow,size2],blue]), circle)))],circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:yellow;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:nand[%s,%s];4:circle;4:green;4:and[%s,%s];4:and[%s,%s];4:yellow;4:size2;4:blue;4:circle;4:circle;1:%s.o;2:x
'λx.apply(or[size1,rectangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(filter(filter(x.s, apply(same_size,iota(filter(filter(x.s, or[or[size1,triangle],nand[size2,rectangle]]), size3)))), size3), yellow), size2)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:size1;4:triangle;4:nand[%s,%s];4:size2;4:rectangle;4:size3;4:size3;4:yellow;4:size2
'λx.apply(and[rectangle,triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[triangle,or[nand[and[size3,circle],size3],blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:or[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:size3;4:circle;4:size3;4:blue;1:%s.o;2:x
'λx.exists(size1, filter(x.s, apply(same_color,iota(x.s))))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.forall(and[blue,yellow],filter(filter(x.s, triangle), apply(size-gt,iota(x.s))))'	0:forall(%s,%s);4:and[%s,%s];4:blue;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size3,circle],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.exists(and[and[and[triangle,blue],apply(size-lt,iota(x.s))],size2], filter(filter(x.s, apply(same_shape,x.o)), yellow))'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:blue;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow
'λx.apply(not[and[rectangle,triangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:rectangle;4:triangle;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(x.s, rectangle), triangle), or[and[and[size2,triangle],implies[size2,not[rectangle]]],size2])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:triangle;4:implies[%s,%s];4:size2;4:not[%s];4:rectangle;4:size2;3:%s.s;2:x
'λx.apply(and[and[or[and[yellow,size3],and[rectangle,rectangle]],size2],or[green,triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:yellow;4:size3;4:and[%s,%s];4:rectangle;4:rectangle;4:size2;4:or[%s,%s];4:green;4:triangle;1:%s.o;2:x
'λx.exists(implies[size1,circle], filter(x.s, size1))'	0:exists(%s, %s);4:implies[%s,%s];4:size1;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.contains(iota(filter(filter(x.s, size2), blue)), filter(x.s, circle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.exists(or[size3,triangle], filter(x.s, size1))'	0:exists(%s, %s);4:or[%s,%s];4:size3;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.empty(filter(filter(x.s, yellow), or[size1,apply(same_color,x.o)]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.forall(triangle,filter(filter(filter(x.s, and[or[blue,yellow],implies[size2,size3]]), rectangle), rectangle))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:blue;4:yellow;4:implies[%s,%s];4:size2;4:size3;4:rectangle;4:rectangle
'λx.empty(filter(filter(x.s, blue), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2
'λx.empty(filter(filter(x.s, blue), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3
'λx.apply(size1,iota(filter(filter(x.s, green), size1)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1
'λx.empty(filter(filter(filter(x.s, circle), blue), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue;4:yellow
'λx.apply(blue,iota(filter(x.s, or[or[or[or[apply(same_color,iota(x.s)),triangle],apply(same_color,x.o)],triangle],yellow])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;4:yellow
'λx.apply(and[size3,or[size3,not[green]]],iota(filter(filter(x.s, yellow), yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:or[%s,%s];4:size3;4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:yellow
'λx.apply(or[size1,not[apply(size-lt,iota(filter(filter(x.s, size2), rectangle)))]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:not[%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[not[and[green,circle]],apply(size-geq,iota(filter(x.s, green)))],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:not[%s];4:and[%s,%s];4:green;4:circle;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, or[size3,size3]), or[yellow,and[triangle,size3]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:size3;4:or[%s,%s];4:yellow;4:and[%s,%s];4:triangle;4:size3
'λx.exists(and[and[size2,triangle],implies[apply(size-gt,x.o),green]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:size2;4:triangle;4:implies[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:green;3:%s.s;2:x
'λx.apply(not[apply(same_shape,iota(filter(x.s, green)))],iota(filter(filter(x.s, green), green)))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:green
'λx.apply(and[size2,apply(size-gt,iota(filter(x.s, triangle)))],iota(filter(x.s, green)))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(or[and[or[apply(same_size,iota(filter(filter(filter(x.s, not[not[green]]), rectangle), apply(same_shape,iota(x.s))))),size3],blue],size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:green;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size3;4:blue;4:size2;1:%s.o;2:x
'λx.apply(and[blue,size3],iota(filter(filter(x.s, rectangle), size3)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3
'λx.apply(or[triangle,apply(same_size,iota(filter(x.s, iff[triangle,and[yellow,yellow]])))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:triangle;4:and[%s,%s];4:yellow;4:yellow;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, and[or[triangle,and[triangle,rectangle]],circle]), size3)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:triangle;4:and[%s,%s];4:triangle;4:rectangle;4:circle;4:size3
'λx.forall(and[triangle,or[triangle,size3]],filter(filter(x.s, size3), and[size3,triangle]))'	0:forall(%s,%s);4:and[%s,%s];4:triangle;4:or[%s,%s];4:triangle;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:size3;4:triangle
'λx.apply(size1,iota(filter(filter(x.s, triangle), rectangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle
'λx.apply(rectangle,iota(filter(filter(x.s, triangle), nor[rectangle,apply(size-geq,x.o)])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:nor[%s,%s];4:rectangle;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.exists(not[nand[and[blue,or[iff[and[size1,or[and[yellow,triangle],and[green,circle]]],and[size3,iff[size2,size2]]],size3]],or[rectangle,circle]]], filter(x.s, blue))'	0:exists(%s, %s);4:not[%s];4:nand[%s,%s];4:and[%s,%s];4:blue;4:or[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:and[%s,%s];4:yellow;4:triangle;4:and[%s,%s];4:green;4:circle;4:and[%s,%s];4:size3;4:iff[%s,%s];4:size2;4:size2;4:size3;4:or[%s,%s];4:rectangle;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(or[iff[size2,nor[not[implies[size2,and[and[triangle,implies[iff[yellow,nor[rectangle,green]],size3]],rectangle]]],size1]],yellow],iota(filter(filter(filter(filter(x.s, not[apply(same_shape,x.o)]), rectangle), or[not[and[triangle,circle]],not[yellow]]), nor[yellow,rectangle])))'	0:apply(%s,%s);4:or[%s,%s];4:iff[%s,%s];4:size2;4:nor[%s,%s];4:not[%s];4:implies[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:triangle;4:implies[%s,%s];4:iff[%s,%s];4:yellow;4:nor[%s,%s];4:rectangle;4:green;4:size3;4:rectangle;4:size1;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:triangle;4:circle;4:not[%s];4:yellow;4:nor[%s,%s];4:yellow;4:rectangle
'λx.apply(or[size1,and[circle,or[size2,size2]]],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:and[%s,%s];4:circle;4:or[%s,%s];4:size2;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(and[or[size1,not[green]],and[size1,not[size2]]],iota(filter(filter(filter(x.s, yellow), triangle), and[and[size2,circle],green])))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size1;4:not[%s];4:green;4:and[%s,%s];4:size1;4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle;4:and[%s,%s];4:and[%s,%s];4:size2;4:circle;4:green
'λx.exists(apply(same_shape,iota(filter(x.s, circle))), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;3:%s.s;2:x
'λx.apply(and[apply(same_size,iota(x.s)),not[apply(same_shape,iota(x.s))]],iota(filter(x.s, green)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[triangle,size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[triangle,size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[iff[rectangle,size2],size1],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:iff[%s,%s];4:rectangle;4:size2;4:size1;1:%s.o;2:x
'λx.apply(or[and[blue,and[size3,and[blue,and[and[apply(same_size,x.o),size2],not[yellow]]]]],rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:size3;4:and[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2;4:not[%s];4:yellow;4:rectangle;1:%s.o;2:x
'λx.apply(or[and[nor[yellow,triangle],size3],triangle],iota(filter(x.s, or[rectangle,triangle])))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:yellow;4:triangle;4:size3;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:triangle
'λx.forall(and[and[size1,or[implies[size3,not[green]],and[not[circle],green]]],and[blue,triangle]],filter(x.s, and[size2,or[apply(same_color,iota(filter(filter(filter(x.s, green), yellow), size1))),green]]))'	0:forall(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:implies[%s,%s];4:size3;4:not[%s];4:green;4:and[%s,%s];4:not[%s];4:circle;4:green;4:and[%s,%s];4:blue;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow;4:size1;4:green
'λx.apply(or[size1,and[circle,blue]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:and[%s,%s];4:circle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.forall(not[and[size2,triangle]],x.s)'	0:forall(%s,%s);4:not[%s];4:and[%s,%s];4:size2;4:triangle;3:%s.s;2:x
'λx.apply(and[apply(same_size,x.o),nand[and[circle,and[and[green,rectangle],blue]],size2]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:nand[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:green;4:rectangle;4:blue;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[nand[and[and[size1,not[triangle]],not[rectangle]],and[circle,blue]],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:not[%s];4:triangle;4:not[%s];4:rectangle;4:and[%s,%s];4:circle;4:blue;4:size1;1:%s.o;2:x
'λx.empty(filter(x.s, rectangle))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(or[not[yellow],rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:yellow;4:rectangle;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, or[circle,green]), nor[green,size1]), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:green;4:nor[%s,%s];4:green;4:size1;4:rectangle
'λx.apply(or[nor[rectangle,not[iff[blue,size3]]],yellow],iota(filter(filter(filter(filter(x.s, rectangle), size3), size1), iff[yellow,rectangle])))'	0:apply(%s,%s);4:or[%s,%s];4:nor[%s,%s];4:rectangle;4:not[%s];4:iff[%s,%s];4:blue;4:size3;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3;4:size1;4:iff[%s,%s];4:yellow;4:rectangle
'λx.apply(or[size1,size2],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size1,size3],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[apply(size-geq,x.o),yellow],iota(filter(filter(x.s, blue), circle)))'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle
'λx.apply(or[yellow,apply(same_size,x.o)],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.forall(and[green,rectangle],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:green;4:rectangle;3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(x.s, triangle), green)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green
'λx.apply(or[size2,size2],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(x.s, or[size3,blue])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:blue
'λx.apply(triangle,iota(filter(x.s, or[size2,blue])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:blue
'λx.apply(nand[size3,not[and[triangle,or[blue,and[or[circle,not[blue]],and[and[apply(same_size,x.o),not[size3]],or[not[apply(same_size,iota(x.s))],yellow]]]]]]],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:size3;4:not[%s];4:and[%s,%s];4:triangle;4:or[%s,%s];4:blue;4:and[%s,%s];4:or[%s,%s];4:circle;4:not[%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:not[%s];4:size3;4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(not[not[circle]],iota(filter(filter(filter(filter(x.s, triangle), rectangle), blue), green)))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle;4:blue;4:green
'λx.apply(apply(size-geq,iota(x.s)),iota(filter(x.s, apply(same_color,x.o))))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, or[triangle,size1])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:size1
'λx.contains(x.o, filter(x.s, and[green,nand[size2,not[rectangle]]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:nand[%s,%s];4:size2;4:not[%s];4:rectangle
'λx.apply(yellow,iota(filter(x.s, apply(same_size,iota(filter(x.s, size3))))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.forall(or[blue,circle],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:blue;4:circle;3:%s.s;2:x
'λx.apply(implies[and[and[blue,yellow],or[green,rectangle]],size2],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:yellow;4:or[%s,%s];4:green;4:rectangle;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(triangle,iota(filter(filter(filter(filter(filter(x.s, or[nand[green,and[and[rectangle,or[and[triangle,circle],rectangle]],green]],blue]), green), yellow), triangle), size3)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:nand[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:triangle;4:circle;4:rectangle;4:green;4:blue;4:green;4:yellow;4:triangle;4:size3
'λx.apply(and[apply(size-lt,iota(x.s)),size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:size1;1:%s.o;2:x
'λx.forall(and[size3,circle],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:size3;4:circle;3:%s.s;2:x
'λx.apply(not[size2],iota(filter(x.s, or[circle,nor[triangle,not[circle]]])))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:nor[%s,%s];4:triangle;4:not[%s];4:circle
'λx.apply(not[apply(size-gt,iota(x.s))],iota(filter(filter(filter(x.s, size2), blue), size1)))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue;4:size1
'λx.apply(or[green,yellow],iota(filter(x.s, green)))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(size1,iota(filter(x.s, and[size3,not[and[rectangle,yellow]]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:not[%s];4:and[%s,%s];4:rectangle;4:yellow
'λx.empty(filter(filter(filter(filter(filter(x.s, triangle), size3), size3), yellow), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3;4:size3;4:yellow;4:size1
'λx.apply(and[and[circle,nand[or[triangle,iff[yellow,not[size1]]],and[or[size1,apply(same_shape,iota(x.s))],size3]]],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:nand[%s,%s];4:or[%s,%s];4:triangle;4:iff[%s,%s];4:yellow;4:not[%s];4:size1;4:and[%s,%s];4:or[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size3;4:size1;1:%s.o;2:x
'λx.apply(not[circle],iota(filter(x.s, apply(same_color,x.o))))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(apply(same_shape,x.o),iota(filter(x.s, not[and[blue,green]])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:blue;4:green
'λx.apply(green,iota(filter(filter(filter(x.s, circle), apply(size-geq,x.o)), or[and[apply(same_color,x.o),size1],size2])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1;4:size2
'λx.apply(triangle,iota(filter(filter(filter(x.s, and[green,triangle]), size2), nor[blue,circle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:triangle;4:size2;4:nor[%s,%s];4:blue;4:circle
'λx.apply(size2,iota(filter(filter(filter(x.s, green), not[green]), size3)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:green;4:size3
'λx.forall(nand[triangle,or[size3,not[circle]]],x.s)'	0:forall(%s,%s);4:nand[%s,%s];4:triangle;4:or[%s,%s];4:size3;4:not[%s];4:circle;3:%s.s;2:x
'λx.apply(apply(size-geq,iota(filter(filter(filter(filter(filter(filter(filter(x.s, rectangle), size3), size1), iff[yellow,rectangle]), blue), nor[rectangle,not[iff[blue,size3]]]), rectangle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3;4:size1;4:iff[%s,%s];4:yellow;4:rectangle;4:blue;4:nor[%s,%s];4:rectangle;4:not[%s];4:iff[%s,%s];4:blue;4:size3;4:rectangle;1:%s.o;2:x
'λx.apply(yellow,iota(filter(x.s, apply(size-lt,iota(x.s)))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(x.s), filter(filter(x.s, not[apply(size-lt,x.o)]), rectangle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:rectangle
'λx.contains(x.o, filter(x.s, and[size1,nand[rectangle,and[size1,apply(same_shape,iota(x.s))]]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:nand[%s,%s];4:rectangle;4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.forall(green,filter(filter(x.s, triangle), rectangle))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle
'λx.exists(or[yellow,circle], filter(x.s, blue))'	0:exists(%s, %s);4:or[%s,%s];4:yellow;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(nor[rectangle,not[rectangle]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:rectangle;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(filter(filter(x.s, green), and[size3,nor[iff[blue,size2],size1]]), and[size1,and[triangle,blue]]), triangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:size3;4:nor[%s,%s];4:iff[%s,%s];4:blue;4:size2;4:size1;4:and[%s,%s];4:size1;4:and[%s,%s];4:triangle;4:blue;4:triangle
'λx.empty(filter(filter(x.s, yellow), or[size1,apply(same_shape,x.o)]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(and[or[circle,green],circle],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:circle;4:green;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[yellow,and[size2,size2]],iota(filter(filter(x.s, nor[and[and[or[circle,and[green,nor[circle,and[rectangle,size2]]]],size1],blue],size2]), green)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:and[%s,%s];4:size2;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:circle;4:and[%s,%s];4:green;4:nor[%s,%s];4:circle;4:and[%s,%s];4:rectangle;4:size2;4:size1;4:blue;4:size2;4:green
'λx.apply(or[or[nor[not[circle],size2],green],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:not[%s];4:circle;4:size2;4:green;4:blue;1:%s.o;2:x
'λx.exists(not[size2], x.s)'	0:exists(%s, %s);4:not[%s];4:size2;3:%s.s;2:x
'λx.exists(not[size1], x.s)'	0:exists(%s, %s);4:not[%s];4:size1;3:%s.s;2:x
'λx.exists(not[size3], x.s)'	0:exists(%s, %s);4:not[%s];4:size3;3:%s.s;2:x
'λx.forall(size2,filter(filter(x.s, nor[or[blue,yellow],blue]), blue))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:or[%s,%s];4:blue;4:yellow;4:blue;4:blue
'λx.exists(apply(size-leq,x.o), filter(filter(x.s, rectangle), size2))'	0:exists(%s, %s);4:apply(%s,%s);5:size-leq;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2
'λx.apply(blue,iota(filter(filter(filter(x.s, size3), and[or[green,nand[size3,not[green]]],and[yellow,or[or[apply(same_shape,iota(x.s)),green],apply(same_shape,x.o)]]]), triangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:or[%s,%s];4:green;4:nand[%s,%s];4:size3;4:not[%s];4:green;4:and[%s,%s];4:yellow;4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle
'λx.forall(size3,filter(filter(filter(x.s, green), apply(same_color,iota(filter(filter(x.s, rectangle), size3)))), size3))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3;4:size3
'λx.empty(filter(filter(filter(filter(filter(x.s, and[blue,and[rectangle,blue]]), and[circle,blue]), not[and[triangle,apply(same_shape,iota(x.s))]]), or[and[size3,and[size1,size1]],triangle]), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:blue;4:and[%s,%s];4:circle;4:blue;4:not[%s];4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:size1;4:size1;4:triangle;4:size2
'λx.apply(not[nand[size3,green]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:nand[%s,%s];4:size3;4:green;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(filter(x.s, not[iff[yellow,size1]]), blue), size1)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:iff[%s,%s];4:yellow;4:size1;4:blue;4:size1;3:%s.s;2:x
'λx.contains(iota(x.s), x.s)'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(or[size1,yellow],iota(filter(filter(filter(filter(x.s, circle), rectangle), implies[blue,and[apply(same_color,iota(filter(filter(filter(x.s, green), size2), or[or[and[blue,size3],and[size1,apply(same_shape,x.o)]],green]))),and[nand[triangle,yellow],and[nand[triangle,yellow],not[size3]]]]]), yellow)))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle;4:implies[%s,%s];4:blue;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size2;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:blue;4:size3;4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green;4:and[%s,%s];4:nand[%s,%s];4:triangle;4:yellow;4:and[%s,%s];4:nand[%s,%s];4:triangle;4:yellow;4:not[%s];4:size3;4:yellow
'λx.apply(yellow,iota(filter(x.s, apply(size-gt,iota(x.s)))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[size3,green],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size3;4:green;1:%s.o;2:x
'λx.exists(and[blue,not[size2]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:blue;4:not[%s];4:size2;3:%s.s;2:x
'λx.apply(apply(size-leq,x.o),iota(filter(filter(x.s, apply(same_size,x.o)), circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle
'λx.apply(apply(same_size,iota(x.s)),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(and[size2,apply(same_size,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[circle,green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:green;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, nor[and[triangle,yellow],apply(same_color,x.o)]), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:and[%s,%s];4:triangle;4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle
'λx.apply(and[implies[not[or[rectangle,and[not[size3],and[rectangle,size2]]]],nor[and[size2,yellow],or[circle,circle]]],nor[green,green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:not[%s];4:or[%s,%s];4:rectangle;4:and[%s,%s];4:not[%s];4:size3;4:and[%s,%s];4:rectangle;4:size2;4:nor[%s,%s];4:and[%s,%s];4:size2;4:yellow;4:or[%s,%s];4:circle;4:circle;4:nor[%s,%s];4:green;4:green;1:%s.o;2:x
'λx.apply(not[not[and[size2,apply(same_size,x.o)]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(filter(x.s, triangle), size3), and[or[green,nor[circle,apply(same_shape,iota(filter(filter(filter(filter(filter(filter(filter(x.s, yellow), and[triangle,or[blue,green]]), triangle), apply(size-leq,iota(filter(filter(x.s, size1), blue)))), size2), triangle), size1)))]],yellow])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3;4:and[%s,%s];4:or[%s,%s];4:green;4:nor[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:triangle;4:or[%s,%s];4:blue;4:green;4:triangle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue;4:size2;4:triangle;4:size1;4:yellow
'λx.apply(and[yellow,blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:blue;1:iota(%s);3:%s.s;2:x
'λx.forall(apply(same_color,iota(x.s)),filter(filter(x.s, and[or[not[and[size1,size2]],triangle],blue]), rectangle))'	0:forall(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:and[%s,%s];4:size1;4:size2;4:triangle;4:blue;4:rectangle
'λx.forall(or[nand[size1,yellow],blue],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:size1;4:yellow;4:blue;3:%s.s;2:x
'λx.empty(filter(x.s, not[blue]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.apply(and[rectangle,implies[and[size1,apply(size-geq,x.o)],circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:implies[%s,%s];4:and[%s,%s];4:size1;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:circle;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(filter(x.s, size2), rectangle), blue)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle;4:blue
'λx.apply(implies[or[size2,implies[rectangle,nand[nor[and[size2,green],circle],not[blue]]]],circle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:or[%s,%s];4:size2;4:implies[%s,%s];4:rectangle;4:nand[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:size2;4:green;4:circle;4:not[%s];4:blue;4:circle;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(x.s, rectangle), and[size3,size1])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:size3;4:size1
'λx.exists(size1, filter(x.s, and[apply(same_size,iota(x.s)),nor[rectangle,rectangle]]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:nor[%s,%s];4:rectangle;4:rectangle
'λx.apply(apply(size-geq,iota(filter(x.s, or[rectangle,size2]))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.exists(implies[blue,triangle], x.s)'	0:exists(%s, %s);4:implies[%s,%s];4:blue;4:triangle;3:%s.s;2:x
'λx.apply(nor[and[yellow,or[yellow,size1]],triangle],iota(filter(x.s, implies[apply(size-lt,x.o),rectangle])))'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:yellow;4:or[%s,%s];4:yellow;4:size1;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:rectangle
'λx.contains(iota(filter(filter(filter(x.s, circle), apply(same_color,iota(x.s))), green)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:green;3:%s.s;2:x
'λx.empty(filter(filter(filter(filter(filter(filter(filter(filter(x.s, yellow), triangle), size3), rectangle), rectangle), not[iff[rectangle,rectangle]]), blue), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle;4:size3;4:rectangle;4:rectangle;4:not[%s];4:iff[%s,%s];4:rectangle;4:rectangle;4:blue;4:triangle
'λx.apply(and[size3,implies[circle,or[and[rectangle,and[yellow,or[circle,apply(same_size,iota(x.s))]]],size2]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:implies[%s,%s];4:circle;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:yellow;4:or[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size2;1:%s.o;2:x
'λx.apply(and[or[yellow,and[yellow,size1]],green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:yellow;4:and[%s,%s];4:yellow;4:size1;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[green,and[not[and[or[and[triangle,yellow],and[yellow,blue]],or[triangle,green]]],and[circle,size2]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:triangle;4:yellow;4:and[%s,%s];4:yellow;4:blue;4:or[%s,%s];4:triangle;4:green;4:and[%s,%s];4:circle;4:size2;1:%s.o;2:x
'λx.apply(or[size2,apply(same_size,iota(filter(x.s, size2)))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;1:%s.o;2:x
'λx.apply(and[and[and[nor[apply(same_color,x.o),and[rectangle,green]],size2],implies[apply(size-lt,x.o),and[and[nor[yellow,size1],not[size2]],yellow]]],apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:rectangle;4:green;4:size2;4:implies[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:and[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:yellow;4:size1;4:not[%s];4:size2;4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, and[and[triangle,green],size1])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:triangle;4:green;4:size1
'λx.apply(nor[triangle,circle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:triangle;4:circle;1:%s.o;2:x
'λx.apply(not[nand[triangle,circle]],iota(filter(x.s, not[apply(same_color,iota(x.s))])))'	0:apply(%s,%s);4:not[%s];4:nand[%s,%s];4:triangle;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(and[or[not[and[green,not[and[green,yellow]]]],not[size1]],size1],iota(filter(x.s, and[circle,apply(same_shape,iota(filter(filter(filter(x.s, size2), size1), or[blue,circle])))])))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:not[%s];4:and[%s,%s];4:green;4:not[%s];4:and[%s,%s];4:green;4:yellow;4:not[%s];4:size1;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1;4:or[%s,%s];4:blue;4:circle
'λx.apply(not[nand[green,green]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:nand[%s,%s];4:green;4:green;1:iota(%s);3:%s.s;2:x
'λx.exists(green, filter(filter(x.s, blue), and[and[iff[green,size2],size3],triangle]))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:green;4:size2;4:size3;4:triangle
'λx.apply(nor[not[triangle],yellow],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:not[%s];4:triangle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(and[or[green,size2],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:green;4:size2;4:blue;1:%s.o;2:x
'λx.exists(apply(same_shape,x.o), filter(filter(filter(x.s, rectangle), circle), and[triangle,blue]))'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle;4:and[%s,%s];4:triangle;4:blue
'λx.apply(yellow,iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(apply(same_color,x.o),iota(filter(x.s, or[and[and[circle,yellow],size1],circle])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:yellow;4:size1;4:circle
'λx.apply(implies[yellow,size1],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:yellow;4:size1;1:%s.o;2:x
'λx.exists(triangle, filter(x.s, not[size1]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1
'λx.apply(apply(same_color,iota(filter(filter(x.s, yellow), rectangle))),iota(filter(filter(filter(filter(filter(x.s, apply(same_shape,iota(filter(filter(x.s, apply(same_color,iota(filter(x.s, or[circle,triangle])))), rectangle)))), and[triangle,and[blue,not[or[implies[rectangle,and[size1,not[not[not[not[not[size1]]]]]]],size1]]]]), blue), circle), size1)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:triangle;4:rectangle;4:and[%s,%s];4:triangle;4:and[%s,%s];4:blue;4:not[%s];4:or[%s,%s];4:implies[%s,%s];4:rectangle;4:and[%s,%s];4:size1;4:not[%s];4:not[%s];4:not[%s];4:not[%s];4:not[%s];4:size1;4:size1;4:blue;4:circle;4:size1
'λx.apply(not[size3],iota(filter(x.s, or[triangle,size3])))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:size3
'λx.contains(iota(filter(x.s, size2)), filter(filter(x.s, circle), circle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:circle
'λx.apply(nand[implies[blue,or[not[not[nor[size2,blue]]],triangle]],and[size3,rectangle]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:implies[%s,%s];4:blue;4:or[%s,%s];4:not[%s];4:not[%s];4:nor[%s,%s];4:size2;4:blue;4:triangle;4:and[%s,%s];4:size3;4:rectangle;1:%s.o;2:x
'λx.contains(iota(filter(x.s, not[rectangle])), filter(x.s, blue))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(circle,iota(filter(x.s, not[rectangle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle
'λx.apply(nand[size1,green],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size1;4:green;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, blue), apply(same_color,x.o))))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(filter(x.s, circle), yellow), blue)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow;4:blue
'λx.exists(or[green,rectangle], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:green;4:rectangle;3:%s.s;2:x
'λx.apply(and[circle,and[rectangle,yellow]],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:and[%s,%s];4:rectangle;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(size2,iota(filter(filter(x.s, apply(same_color,x.o)), size3)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3
'λx.forall(nor[yellow,green],filter(filter(filter(x.s, size3), circle), and[yellow,apply(same_color,x.o)]))'	0:forall(%s,%s);4:nor[%s,%s];4:yellow;4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle;4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(and[size3,not[apply(same_size,iota(x.s))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(and[triangle,and[size2,green]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:size2;4:green;1:iota(%s);3:%s.s;2:x
'λx.forall(size2,filter(filter(x.s, green), or[and[blue,triangle],and[circle,iff[or[nand[green,size3],or[size2,and[green,nor[apply(same_shape,iota(x.s)),size1]]]],green]]]))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:and[%s,%s];4:blue;4:triangle;4:and[%s,%s];4:circle;4:iff[%s,%s];4:or[%s,%s];4:nand[%s,%s];4:green;4:size3;4:or[%s,%s];4:size2;4:and[%s,%s];4:green;4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size1;4:green
'λx.apply(and[apply(size-lt,x.o),size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:size2;1:%s.o;2:x
'λx.forall(and[triangle,size3],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:triangle;4:size3;3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(filter(x.s, implies[iff[yellow,not[size1]],not[iff[rectangle,size1]]]), size2), yellow)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:iff[%s,%s];4:yellow;4:not[%s];4:size1;4:not[%s];4:iff[%s,%s];4:rectangle;4:size1;4:size2;4:yellow
'λx.forall(apply(same_size,x.o),filter(filter(filter(filter(filter(filter(x.s, yellow), size3), apply(size-lt,iota(filter(filter(filter(filter(x.s, circle), blue), yellow), size2)))), rectangle), size1), triangle))'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size3;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue;4:yellow;4:size2;4:rectangle;4:size1;4:triangle
'λx.apply(iff[and[not[blue],apply(same_shape,iota(filter(x.s, not[and[or[green,circle],apply(size-lt,x.o)]])))],size3],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:not[%s];4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:or[%s,%s];4:green;4:circle;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:size3;1:%s.o;2:x
'λx.apply(not[and[size3,yellow]],iota(filter(filter(x.s, blue), or[not[not[green]],and[circle,size3]])))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size3;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:not[%s];4:not[%s];4:green;4:and[%s,%s];4:circle;4:size3
'λx.exists(size2, filter(x.s, not[rectangle]))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle
'λx.exists(size1, filter(x.s, not[rectangle]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle
'λx.forall(apply(same_size,x.o),filter(x.s, and[not[rectangle],apply(same_shape,iota(filter(filter(x.s, rectangle), apply(same_size,iota(x.s)))))]))'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, rectangle), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:yellow
'λx.apply(not[yellow],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(x.s, nand[circle,size1]), and[circle,apply(same_color,iota(filter(filter(x.s, size1), blue)))])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:circle;4:size1;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue
'λx.apply(not[and[and[and[green,circle],rectangle],and[circle,size1]]],iota(filter(x.s, green)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:circle;4:rectangle;4:and[%s,%s];4:circle;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(circle,iota(filter(x.s, apply(same_shape,iota(x.s)))))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[rectangle,rectangle],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:rectangle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(x.s), filter(x.s, nor[nor[or[yellow,and[circle,circle]],or[rectangle,nor[green,size3]]],blue]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:yellow;4:and[%s,%s];4:circle;4:circle;4:or[%s,%s];4:rectangle;4:nor[%s,%s];4:green;4:size3;4:blue
'λx.apply(or[or[not[size1],not[rectangle]],apply(same_shape,x.o)],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:not[%s];4:size1;4:not[%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(or[and[or[green,green],size3],and[green,green]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:green;4:green;4:size3;4:and[%s,%s];4:green;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(filter(x.s, size1), size1), yellow)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1;4:yellow
'λx.apply(implies[size2,and[rectangle,size3]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size2;4:and[%s,%s];4:rectangle;4:size3;1:%s.o;2:x
'λx.apply(or[yellow,blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:blue;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(filter(x.s, triangle), triangle), yellow)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:triangle;4:yellow
'λx.empty(filter(filter(filter(x.s, triangle), size2), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2;4:circle
'λx.apply(not[not[or[green,nand[and[nor[circle,circle],triangle],yellow]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:or[%s,%s];4:green;4:nand[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:circle;4:circle;4:triangle;4:yellow;1:%s.o;2:x
'λx.forall(triangle,filter(filter(filter(x.s, or[circle,rectangle]), size3), size3))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:rectangle;4:size3;4:size3
'λx.apply(apply(same_color,x.o),iota(filter(filter(filter(filter(x.s, apply(same_color,x.o)), blue), size2), size2)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue;4:size2;4:size2
'λx.apply(not[or[or[blue,triangle],yellow]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:or[%s,%s];4:blue;4:triangle;4:yellow;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, nor[blue,size1]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:blue;4:size1
'λx.apply(or[iff[size1,not[green]],yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:iff[%s,%s];4:size1;4:not[%s];4:green;4:yellow;1:%s.o;2:x
'λx.apply(or[size3,size2],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size3,size3],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(not[not[nor[or[yellow,circle],not[rectangle]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:nor[%s,%s];4:or[%s,%s];4:yellow;4:circle;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(filter(x.s, size1), rectangle), implies[not[green],and[triangle,triangle]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle;4:implies[%s,%s];4:not[%s];4:green;4:and[%s,%s];4:triangle;4:triangle
'λx.forall(and[yellow,and[iff[blue,or[apply(size-gt,iota(x.s)),triangle]],size1]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:yellow;4:and[%s,%s];4:iff[%s,%s];4:blue;4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:triangle;4:size1;3:%s.s;2:x
'λx.contains(iota(filter(filter(x.s, rectangle), size3)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3;3:%s.s;2:x
'λx.exists(and[size1,yellow], filter(filter(x.s, and[not[not[triangle]],blue]), not[and[and[blue,not[green]],circle]]))'	0:exists(%s, %s);4:and[%s,%s];4:size1;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:not[%s];4:triangle;4:blue;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:not[%s];4:green;4:circle
'λx.apply(size3,iota(filter(x.s, and[size2,and[nor[size1,circle],rectangle]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:and[%s,%s];4:nor[%s,%s];4:size1;4:circle;4:rectangle
'λx.forall(apply(same_color,x.o),filter(x.s, blue))'	0:forall(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.contains(x.o, filter(filter(x.s, or[or[triangle,rectangle],size2]), and[or[circle,not[rectangle]],rectangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:triangle;4:rectangle;4:size2;4:and[%s,%s];4:or[%s,%s];4:circle;4:not[%s];4:rectangle;4:rectangle
'λx.contains(x.o, filter(x.s, and[size2,nor[blue,circle]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:nor[%s,%s];4:blue;4:circle
'λx.contains(x.o, filter(x.s, or[size2,not[circle]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:not[%s];4:circle
'λx.apply(or[and[nor[yellow,triangle],iff[circle,yellow]],triangle],iota(filter(x.s, or[rectangle,triangle])))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:yellow;4:triangle;4:iff[%s,%s];4:circle;4:yellow;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:triangle
'λx.apply(and[yellow,or[rectangle,triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:or[%s,%s];4:rectangle;4:triangle;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, green), circle), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:circle;4:yellow
'λx.forall(and[size1,not[circle]],filter(x.s, size1))'	0:forall(%s,%s);4:and[%s,%s];4:size1;4:not[%s];4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.forall(size3,filter(filter(filter(x.s, size1), green), size3))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green;4:size3
'λx.empty(filter(filter(filter(filter(filter(x.s, size2), blue), size2), or[circle,size3]), and[size2,triangle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue;4:size2;4:or[%s,%s];4:circle;4:size3;4:and[%s,%s];4:size2;4:triangle
'λx.apply(or[not[green],yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:green;4:yellow;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(x.s, rectangle), apply(same_color,iota(filter(filter(filter(x.s, green), nor[apply(same_size,x.o),iff[yellow,nor[circle,size3]]]), blue))))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:iff[%s,%s];4:yellow;4:nor[%s,%s];4:circle;4:size3;4:blue
'λx.exists(not[size3], filter(filter(x.s, not[and[size1,yellow]]), rectangle))'	0:exists(%s, %s);4:not[%s];4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:size1;4:yellow;4:rectangle
'λx.apply(or[and[and[yellow,blue],not[rectangle]],size1],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:blue;4:not[%s];4:rectangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(x.s, iff[triangle,size3]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:triangle;4:size3
'λx.apply(not[or[green,yellow]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:green;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(x.s, blue), green)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green
'λx.apply(or[size3,iff[apply(same_color,iota(x.s)),rectangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:iff[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:rectangle;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, nand[yellow,implies[blue,nand[size3,nor[yellow,apply(same_shape,iota(filter(filter(filter(filter(filter(filter(x.s, size3), triangle), size3), not[triangle]), nand[circle,circle]), green)))]]]]), blue)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:yellow;4:implies[%s,%s];4:blue;4:nand[%s,%s];4:size3;4:nor[%s,%s];4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle;4:size3;4:not[%s];4:triangle;4:nand[%s,%s];4:circle;4:circle;4:green;4:blue
'λx.apply(implies[circle,size3],iota(filter(filter(x.s, triangle), yellow)))'	0:apply(%s,%s);4:implies[%s,%s];4:circle;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:yellow
'λx.apply(blue,iota(filter(filter(x.s, size1), circle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle
'λx.apply(or[not[size1],apply(same_shape,x.o)],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, yellow))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(not[size2],iota(filter(filter(filter(x.s, not[triangle]), and[yellow,and[blue,triangle]]), circle)))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:and[%s,%s];4:yellow;4:and[%s,%s];4:blue;4:triangle;4:circle
'λx.apply(or[triangle,implies[or[not[triangle],not[triangle]],apply(same_color,x.o)]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:implies[%s,%s];4:or[%s,%s];4:not[%s];4:triangle;4:not[%s];4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size1,implies[rectangle,apply(same_size,x.o)]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:implies[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(x.s, circle), blue)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue
'λx.apply(green,iota(filter(filter(x.s, blue), size1)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1
'λx.apply(size2,iota(filter(filter(x.s, rectangle), green)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green
'λx.apply(size1,iota(filter(filter(x.s, rectangle), green)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green
'λx.apply(size3,iota(filter(filter(x.s, rectangle), size2)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2
'λx.apply(size2,iota(filter(filter(x.s, rectangle), size3)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3
'λx.apply(size3,iota(filter(filter(x.s, rectangle), size3)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3
'λx.apply(and[not[not[size1]],not[size1]],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:not[%s];4:size1;4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(not[rectangle],x.o)'	0:apply(%s,%s);4:not[%s];4:rectangle;1:%s.o;2:x
'λx.apply(size3,iota(filter(x.s, or[and[blue,apply(same_shape,x.o)],and[size2,rectangle]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:size2;4:rectangle
'λx.apply(and[circle,and[or[size2,iff[size3,apply(same_size,iota(filter(x.s, size3)))]],not[and[triangle,yellow]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:and[%s,%s];4:or[%s,%s];4:size2;4:iff[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:and[%s,%s];4:triangle;4:yellow;1:%s.o;2:x
'λx.exists(not[rectangle], x.s)'	0:exists(%s, %s);4:not[%s];4:rectangle;3:%s.s;2:x
'λx.apply(or[not[yellow],not[size3]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:yellow;4:not[%s];4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(not[circle],x.o)'	0:apply(%s,%s);4:not[%s];4:circle;1:%s.o;2:x
'λx.forall(size2,filter(x.s, and[green,or[size3,triangle]]))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:or[%s,%s];4:size3;4:triangle
'λx.apply(or[blue,not[or[apply(size-leq,iota(filter(filter(filter(filter(x.s, triangle), not[green]), not[blue]), rectangle))),not[yellow]]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:not[%s];4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:not[%s];4:green;4:not[%s];4:blue;4:rectangle;4:not[%s];4:yellow;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, apply(same_size,iota(x.s)))))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.exists(nor[circle,and[size3,circle]], x.s)'	0:exists(%s, %s);4:nor[%s,%s];4:circle;4:and[%s,%s];4:size3;4:circle;3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(filter(filter(filter(x.s, green), green), size1), triangle), rectangle), yellow))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:green;4:size1;4:triangle;4:rectangle;4:yellow
'λx.apply(and[yellow,circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[circle,circle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:circle;4:circle;1:%s.o;2:x
'λx.apply(not[rectangle],iota(filter(filter(x.s, yellow), size3)))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size3
'λx.apply(blue,iota(filter(filter(x.s, and[yellow,size1]), yellow)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size1;4:yellow
'λx.exists(and[and[apply(same_shape,iota(filter(x.s, or[or[size3,blue],green]))),size3],and[yellow,green]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:size3;4:blue;4:green;4:size3;4:and[%s,%s];4:yellow;4:green;3:%s.s;2:x
'λx.forall(and[size1,blue],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:size1;4:blue;3:%s.s;2:x
'λx.contains(iota(filter(filter(filter(x.s, not[nand[triangle,rectangle]]), not[rectangle]), iff[yellow,size1])), filter(x.s, nand[not[and[apply(same_shape,x.o),yellow]],not[iff[green,or[rectangle,size2]]]]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:nand[%s,%s];4:triangle;4:rectangle;4:not[%s];4:rectangle;4:iff[%s,%s];4:yellow;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow;4:not[%s];4:iff[%s,%s];4:green;4:or[%s,%s];4:rectangle;4:size2
'λx.apply(or[rectangle,size1],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[circle,apply(same_shape,iota(x.s))],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(and[nor[rectangle,triangle],yellow],iota(filter(x.s, apply(size-geq,iota(filter(filter(filter(filter(x.s, green), size3), not[or[not[size1],not[apply(same_shape,x.o)]]]), not[apply(size-gt,iota(x.s))]))))))'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:rectangle;4:triangle;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size3;4:not[%s];4:or[%s,%s];4:not[%s];4:size1;4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x
'λx.forall(implies[yellow,size2],filter(filter(x.s, size3), blue))'	0:forall(%s,%s);4:implies[%s,%s];4:yellow;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue
'λx.apply(or[blue,iff[and[and[or[and[or[or[triangle,size2],green],rectangle],rectangle],size3],circle],rectangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:iff[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:triangle;4:size2;4:green;4:rectangle;4:rectangle;4:size3;4:circle;4:rectangle;1:%s.o;2:x
'λx.apply(or[size3,size3],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.forall(circle,filter(filter(x.s, size3), apply(same_shape,iota(x.s))))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(x.s, or[and[blue,nand[and[size3,triangle],circle]],triangle])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:blue;4:nand[%s,%s];4:and[%s,%s];4:size3;4:triangle;4:circle;4:triangle
'λx.apply(and[triangle,yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:yellow;1:%s.o;2:x
'λx.exists(and[blue,size2], filter(filter(filter(x.s, rectangle), apply(same_size,iota(filter(filter(x.s, size1), size2)))), rectangle))'	0:exists(%s, %s);4:and[%s,%s];4:blue;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2;4:rectangle
'λx.apply(or[apply(same_size,iota(filter(filter(filter(x.s, not[not[green]]), rectangle), apply(same_shape,iota(x.s))))),size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:green;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size3;1:%s.o;2:x
'λx.apply(or[or[circle,triangle],implies[not[yellow],apply(same_shape,x.o)]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:circle;4:triangle;4:implies[%s,%s];4:not[%s];4:yellow;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, and[blue,or[rectangle,implies[size3,size2]]]), not[size2]), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:or[%s,%s];4:rectangle;4:implies[%s,%s];4:size3;4:size2;4:not[%s];4:size2;4:triangle
'λx.apply(or[rectangle,rectangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(x.s, or[apply(size-geq,iota(x.s)),not[size3]]), and[or[triangle,and[green,circle]],green])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:not[%s];4:size3;4:and[%s,%s];4:or[%s,%s];4:triangle;4:and[%s,%s];4:green;4:circle;4:green
'λx.forall(blue,filter(x.s, or[blue,not[not[iff[apply(same_size,iota(filter(x.s, circle))),size2]]]]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:not[%s];4:not[%s];4:iff[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size2
'λx.contains(iota(filter(filter(filter(x.s, size1), blue), apply(same_shape,iota(x.s)))), filter(x.s, green))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.contains(iota(filter(x.s, circle)), filter(filter(x.s, blue), green))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green
'λx.forall(not[yellow],filter(filter(x.s, apply(size-geq,iota(x.s))), not[and[size2,size1]]))'	0:forall(%s,%s);4:not[%s];4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:size2;4:size1
'λx.apply(not[nand[and[blue,size2],size1]],x.o)'	0:apply(%s,%s);4:not[%s];4:nand[%s,%s];4:and[%s,%s];4:blue;4:size2;4:size1;1:%s.o;2:x
'λx.apply(and[and[or[rectangle,or[apply(same_shape,iota(filter(filter(filter(filter(x.s, or[not[size1],and[size2,triangle]]), size2), triangle), size2))),size2]],rectangle],not[size1]],iota(filter(filter(x.s, size3), green)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:rectangle;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:size1;4:and[%s,%s];4:size2;4:triangle;4:size2;4:triangle;4:size2;4:size2;4:rectangle;4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green
'λx.apply(rectangle,iota(filter(x.s, apply(same_shape,iota(x.s)))))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(filter(filter(filter(filter(filter(x.s, size1), or[size1,size1]), implies[yellow,size1]), implies[yellow,size3]), apply(size-gt,iota(filter(filter(filter(filter(filter(filter(x.s, blue), triangle), not[not[iff[nand[apply(same_color,iota(x.s)),or[nand[or[size2,rectangle],triangle],size2]],size1]]]), triangle), iff[implies[circle,triangle],or[triangle,size1]]), size1)))), yellow), circle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:or[%s,%s];4:size1;4:size1;4:implies[%s,%s];4:yellow;4:size1;4:implies[%s,%s];4:yellow;4:size3;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle;4:not[%s];4:not[%s];4:iff[%s,%s];4:nand[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:size2;4:rectangle;4:triangle;4:size2;4:size1;4:triangle;4:iff[%s,%s];4:implies[%s,%s];4:circle;4:triangle;4:or[%s,%s];4:triangle;4:size1;4:size1;4:yellow;4:circle
'λx.apply(or[size3,not[green]],iota(filter(filter(x.s, yellow), rectangle)))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle
'λx.apply(apply(size-lt,iota(filter(x.s, apply(same_color,iota(x.s))))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, not[size3]), size1)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;4:size1
'λx.apply(or[and[circle,size1],green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:circle;4:size1;4:green;1:%s.o;2:x
'λx.apply(or[and[circle,size1],triangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:circle;4:size1;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size2,size1],iota(filter(x.s, green)))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.exists(iff[yellow,or[size3,apply(same_color,iota(filter(filter(x.s, not[nor[iff[circle,and[apply(same_size,iota(x.s)),green]],triangle]]), yellow)))]], x.s)'	0:exists(%s, %s);4:iff[%s,%s];4:yellow;4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:nor[%s,%s];4:iff[%s,%s];4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:green;4:triangle;4:yellow;3:%s.s;2:x
'λx.forall(green,filter(filter(filter(filter(x.s, triangle), not[triangle]), triangle), or[triangle,apply(size-gt,x.o)]))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:not[%s];4:triangle;4:triangle;4:or[%s,%s];4:triangle;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.apply(size2,iota(filter(x.s, and[yellow,yellow])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:yellow
'λx.apply(and[and[or[blue,apply(same_shape,x.o)],apply(same_size,iota(filter(filter(x.s, apply(same_shape,x.o)), and[size1,not[rectangle]])))],and[green,green]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:size1;4:not[%s];4:rectangle;4:and[%s,%s];4:green;4:green;1:iota(%s);3:%s.s;2:x
'λx.forall(size1,filter(filter(x.s, rectangle), size3))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3
'λx.exists(blue, filter(x.s, apply(same_size,x.o)))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(filter(filter(x.s, size2), green), or[nand[green,and[not[implies[size1,nand[blue,yellow]]],triangle]],green]), size3)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green;4:or[%s,%s];4:nand[%s,%s];4:green;4:and[%s,%s];4:not[%s];4:implies[%s,%s];4:size1;4:nand[%s,%s];4:blue;4:yellow;4:triangle;4:green;4:size3
'λx.exists(rectangle, filter(x.s, and[yellow,and[or[not[and[green,not[and[green,yellow]]]],and[triangle,nor[and[circle,apply(same_shape,iota(filter(x.s, or[blue,circle])))],and[not[yellow],blue]]]],size1]]))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:and[%s,%s];4:green;4:not[%s];4:and[%s,%s];4:green;4:yellow;4:and[%s,%s];4:triangle;4:nor[%s,%s];4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:circle;4:and[%s,%s];4:not[%s];4:yellow;4:blue;4:size1
'λx.apply(or[apply(same_size,iota(x.s)),triangle],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(triangle,iota(filter(filter(x.s, size3), circle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle
'λx.apply(triangle,iota(filter(filter(x.s, size2), circle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle
'λx.empty(filter(filter(x.s, triangle), and[rectangle,and[yellow,size1]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:yellow;4:size1
'λx.apply(or[size3,apply(same_color,iota(x.s))],iota(filter(x.s, not[size3])))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3
'λx.apply(and[implies[not[or[rectangle,and[not[size3],and[rectangle,size2]]]],nor[and[size2,yellow],circle]],nor[green,green]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:not[%s];4:or[%s,%s];4:rectangle;4:and[%s,%s];4:not[%s];4:size3;4:and[%s,%s];4:rectangle;4:size2;4:nor[%s,%s];4:and[%s,%s];4:size2;4:yellow;4:circle;4:nor[%s,%s];4:green;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_size,iota(filter(filter(x.s, not[nand[triangle,rectangle]]), not[rectangle]))),iota(filter(x.s, and[size2,not[nand[not[and[size1,yellow]],not[iff[green,or[rectangle,size2]]]]]])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:nand[%s,%s];4:triangle;4:rectangle;4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:not[%s];4:nand[%s,%s];4:not[%s];4:and[%s,%s];4:size1;4:yellow;4:not[%s];4:iff[%s,%s];4:green;4:or[%s,%s];4:rectangle;4:size2
'λx.exists(rectangle, filter(filter(x.s, green), yellow))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow
'λx.apply(and[apply(same_shape,x.o),and[apply(size-gt,x.o),size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:size1;1:%s.o;2:x
'λx.apply(and[yellow,triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:triangle;1:%s.o;2:x
'λx.apply(size3,iota(filter(x.s, apply(same_size,iota(x.s)))))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(x.s, apply(same_size,iota(x.s)))))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.exists(green, filter(filter(filter(x.s, size2), circle), green))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle;4:green
'λx.contains(x.o, filter(filter(x.s, not[and[yellow,size3]]), apply(same_shape,iota(x.s))))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:yellow;4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(x.s, or[blue,nand[yellow,blue]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:nand[%s,%s];4:yellow;4:blue
'λx.forall(or[size2,green],filter(x.s, and[and[circle,implies[apply(same_size,iota(filter(x.s, size3))),blue]],circle]))'	0:forall(%s,%s);4:or[%s,%s];4:size2;4:green;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:circle;4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue;4:circle
'λx.apply(triangle,iota(filter(x.s, and[and[and[green,rectangle],and[rectangle,blue]],triangle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:rectangle;4:and[%s,%s];4:rectangle;4:blue;4:triangle
'λx.exists(and[circle,size3], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:circle;4:size3;3:%s.s;2:x
'λx.exists(and[size1,blue], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:size1;4:blue;3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(x.s, and[and[size2,rectangle],circle]), circle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size2;4:rectangle;4:circle;4:circle
'λx.contains(x.o, filter(filter(filter(x.s, rectangle), green), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green;4:green
'λx.apply(and[rectangle,or[triangle,apply(same_size,iota(filter(filter(x.s, and[triangle,apply(size-leq,iota(x.s))]), and[and[size3,and[not[apply(size-gt,x.o)],and[apply(same_color,iota(x.s)),apply(same_color,iota(x.s))]]],yellow])))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:or[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:yellow;1:%s.o;2:x
'λx.apply(and[yellow,and[yellow,green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:and[%s,%s];4:yellow;4:green;1:%s.o;2:x
'λx.apply(iff[blue,size3],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:blue;4:size3;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(x.s, and[not[triangle],apply(same_size,iota(filter(x.s, size1)))]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(or[and[apply(same_color,x.o),size2],blue], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size2;4:blue;3:%s.s;2:x
'λx.apply(implies[yellow,green],iota(filter(filter(x.s, not[and[green,size1]]), and[green,triangle])))'	0:apply(%s,%s);4:implies[%s,%s];4:yellow;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:green;4:size1;4:and[%s,%s];4:green;4:triangle
'λx.apply(apply(same_size,iota(filter(filter(x.s, and[triangle,and[apply(same_color,x.o),yellow]]), rectangle))),iota(filter(filter(filter(filter(filter(filter(x.s, size3), size1), size1), green), rectangle), size3)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size1;4:size1;4:green;4:rectangle;4:size3
'λx.contains(x.o, filter(filter(filter(x.s, implies[and[apply(same_shape,iota(x.s)),size3],blue]), circle), apply(same_shape,x.o)))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size3;4:blue;4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(iff[or[or[and[yellow,rectangle],or[or[or[size2,triangle],apply(size-lt,iota(x.s))],size1]],triangle],yellow],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:yellow;4:rectangle;4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:size2;4:triangle;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:size1;4:triangle;4:yellow;1:%s.o;2:x
'λx.forall(rectangle,filter(filter(x.s, green), yellow))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow
'λx.exists(or[apply(same_shape,x.o),size1], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;3:%s.s;2:x
'λx.apply(or[and[blue,size2],yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:blue;4:size2;4:yellow;1:%s.o;2:x
'λx.apply(not[rectangle],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(x.s, and[and[blue,iff[and[size2,size1],and[green,not[size2]]]],triangle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:blue;4:iff[%s,%s];4:and[%s,%s];4:size2;4:size1;4:and[%s,%s];4:green;4:not[%s];4:size2;4:triangle
'λx.contains(iota(filter(filter(filter(filter(x.s, triangle), green), green), size1)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green;4:green;4:size1;3:%s.s;2:x
'λx.apply(size1,iota(filter(x.s, or[yellow,apply(same_size,iota(filter(filter(filter(x.s, blue), triangle), not[not[iff[nand[apply(same_color,iota(x.s)),or[nand[or[iff[implies[circle,triangle],or[triangle,size1]],rectangle],triangle],size2]],size1]]])))])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle;4:not[%s];4:not[%s];4:iff[%s,%s];4:nand[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:iff[%s,%s];4:implies[%s,%s];4:circle;4:triangle;4:or[%s,%s];4:triangle;4:size1;4:rectangle;4:triangle;4:size2;4:size1
'λx.apply(and[apply(same_size,x.o),circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[size2,green],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:size2;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(or[circle,circle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.exists(or[circle,green], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:circle;4:green;3:%s.s;2:x
'λx.apply(not[nor[green,blue]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:nor[%s,%s];4:green;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size2,size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:size2;1:%s.o;2:x
'λx.apply(and[size2,size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:size3;1:%s.o;2:x
'λx.apply(and[size2,size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:size1;1:%s.o;2:x
'λx.apply(nand[green,nand[nor[circle,rectangle],and[size2,yellow]]],iota(filter(filter(filter(x.s, apply(same_color,iota(filter(x.s, size3)))), size3), blue)))'	0:apply(%s,%s);4:nand[%s,%s];4:green;4:nand[%s,%s];4:nor[%s,%s];4:circle;4:rectangle;4:and[%s,%s];4:size2;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3;4:blue
'λx.apply(green,iota(filter(filter(x.s, size3), and[rectangle,blue])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:rectangle;4:blue
'λx.apply(and[size1,size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:size2;1:%s.o;2:x
'λx.apply(and[size1,size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:size1;1:%s.o;2:x
'λx.apply(and[size1,size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:size3;1:%s.o;2:x
'λx.apply(and[size3,size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:size1;1:%s.o;2:x
'λx.apply(and[size3,size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:size2;1:%s.o;2:x
'λx.apply(and[size3,size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:size3;1:%s.o;2:x
'λx.forall(yellow,filter(filter(x.s, size1), blue))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue
'λx.forall(yellow,filter(filter(x.s, size3), blue))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue
'λx.apply(and[and[blue,size1],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:size1;4:blue;1:%s.o;2:x
'λx.apply(not[implies[size1,and[rectangle,apply(same_size,iota(x.s))]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:implies[%s,%s];4:size1;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(x.s, circle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.empty(filter(filter(x.s, blue), and[triangle,yellow]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:triangle;4:yellow
'λx.apply(green,iota(filter(filter(x.s, and[nand[triangle,apply(same_size,iota(filter(x.s, size1)))],nor[size3,blue]]), size1)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nand[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:nor[%s,%s];4:size3;4:blue;4:size1
'λx.apply(not[and[not[triangle],or[size3,size3]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:triangle;4:or[%s,%s];4:size3;4:size3;1:%s.o;2:x
'λx.empty(filter(x.s, or[apply(size-lt,iota(x.s)),yellow]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:yellow
'λx.contains(x.o, filter(filter(x.s, nand[rectangle,and[or[not[size2],size3],green]]), and[green,triangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:rectangle;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:size2;4:size3;4:green;4:and[%s,%s];4:green;4:triangle
'λx.empty(filter(filter(filter(x.s, apply(size-lt,x.o)), size1), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:size1;4:blue
'λx.apply(and[triangle,and[apply(same_shape,iota(x.s)),size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size1;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(filter(x.s, yellow), not[not[triangle]]), apply(size-gt,x.o))))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:not[%s];4:triangle;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.apply(and[size1,apply(same_color,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(or[and[yellow,circle],and[and[size2,implies[size3,apply(same_color,x.o)]],blue]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:yellow;4:circle;4:and[%s,%s];4:and[%s,%s];4:size2;4:implies[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue;1:%s.o;2:x
'λx.apply(or[not[size2],rectangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:size2;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(x.s, or[triangle,yellow]), size2)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:yellow;4:size2
'λx.apply(size1,iota(filter(filter(x.s, blue), size1)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1
'λx.apply(size2,iota(filter(filter(x.s, blue), green)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green
'λx.apply(and[size3,blue],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.exists(not[yellow], filter(filter(filter(x.s, rectangle), and[yellow,yellow]), apply(same_shape,x.o)))'	0:exists(%s, %s);4:not[%s];4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:yellow;4:yellow;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.exists(and[and[size2,triangle],implies[size2,not[rectangle]]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:size2;4:triangle;4:implies[%s,%s];4:size2;4:not[%s];4:rectangle;3:%s.s;2:x
'λx.apply(and[triangle,and[circle,or[apply(same_color,x.o),apply(same_size,x.o)]]],iota(filter(filter(x.s, blue), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:circle;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue
'λx.contains(iota(x.s), filter(filter(filter(filter(x.s, not[triangle]), or[triangle,green]), blue), rectangle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:or[%s,%s];4:triangle;4:green;4:blue;4:rectangle
'λx.exists(nor[blue,iff[not[iff[size3,and[size1,circle]]],triangle]], x.s)'	0:exists(%s, %s);4:nor[%s,%s];4:blue;4:iff[%s,%s];4:not[%s];4:iff[%s,%s];4:size3;4:and[%s,%s];4:size1;4:circle;4:triangle;3:%s.s;2:x
'λx.apply(and[not[size3],circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size3;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(x.s, or[size2,iff[size2,and[or[implies[circle,green],and[iff[size2,size1],apply(same_shape,x.o)]],circle]]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:iff[%s,%s];4:size2;4:and[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:circle;4:green;4:and[%s,%s];4:iff[%s,%s];4:size2;4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle
'λx.apply(yellow,iota(filter(filter(x.s, not[size1]), rectangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:rectangle
'λx.exists(size1, filter(x.s, rectangle))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(or[green,and[nand[yellow,circle],triangle]],iota(filter(x.s, green)))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:and[%s,%s];4:nand[%s,%s];4:yellow;4:circle;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[apply(same_color,iota(filter(filter(x.s, size1), green))),rectangle],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.exists(green, filter(filter(x.s, or[and[triangle,not[or[apply(same_shape,x.o),size2]]],iff[apply(same_color,x.o),triangle]]), or[size3,and[size3,size3]]))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:triangle;4:not[%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2;4:iff[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;4:or[%s,%s];4:size3;4:and[%s,%s];4:size3;4:size3
'λx.apply(not[and[size2,rectangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size2;4:rectangle;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(filter(x.s, apply(same_shape,x.o)), blue), rectangle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue;4:rectangle
'λx.exists(circle, filter(x.s, and[circle,triangle]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:triangle
'λx.apply(not[size2],iota(filter(filter(filter(x.s, or[apply(same_shape,iota(x.s)),blue]), or[size3,and[apply(size-leq,iota(filter(x.s, size1))),apply(same_size,iota(x.s))]]), blue)))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:size3;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:blue
'λx.apply(triangle,iota(filter(x.s, apply(same_color,x.o))))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.exists(not[and[circle,or[circle,and[and[triangle,green],circle]]]], filter(x.s, yellow))'	0:exists(%s, %s);4:not[%s];4:and[%s,%s];4:circle;4:or[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:triangle;4:green;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(iff[yellow,size1],iota(filter(filter(x.s, nor[rectangle,size2]), or[green,size2])))'	0:apply(%s,%s);4:iff[%s,%s];4:yellow;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:rectangle;4:size2;4:or[%s,%s];4:green;4:size2
'λx.apply(triangle,iota(filter(x.s, not[yellow])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow
'λx.empty(filter(x.s, not[size3]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3
'λx.apply(or[triangle,apply(same_size,x.o)],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(filter(filter(filter(filter(filter(filter(filter(filter(x.s, or[and[not[and[not[size3],green]],size3],triangle]), and[triangle,and[size3,implies[rectangle,or[circle,or[size3,circle]]]]]), and[size3,nand[not[blue],yellow]]), not[blue]), yellow), rectangle), not[rectangle]), apply(same_size,iota(filter(x.s, and[and[size2,size3],apply(same_shape,x.o)])))), rectangle), size1)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:not[%s];4:size3;4:green;4:size3;4:triangle;4:and[%s,%s];4:triangle;4:and[%s,%s];4:size3;4:implies[%s,%s];4:rectangle;4:or[%s,%s];4:circle;4:or[%s,%s];4:size3;4:circle;4:and[%s,%s];4:size3;4:nand[%s,%s];4:not[%s];4:blue;4:yellow;4:not[%s];4:blue;4:yellow;4:rectangle;4:not[%s];4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size2;4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle;4:size1
'λx.apply(size2,iota(filter(filter(filter(x.s, not[not[green]]), yellow), size2)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:green;4:yellow;4:size2
'λx.apply(implies[nand[circle,rectangle],size1],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:nand[%s,%s];4:circle;4:rectangle;4:size1;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(filter(x.s, circle), size3), and[size1,rectangle])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3;4:and[%s,%s];4:size1;4:rectangle
'λx.forall(or[size3,circle],filter(filter(filter(x.s, size2), size1), size2))'	0:forall(%s,%s);4:or[%s,%s];4:size3;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1;4:size2
'λx.forall(apply(size-gt,x.o),filter(x.s, size1))'	0:forall(%s,%s);4:apply(%s,%s);5:size-gt;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(or[triangle,and[rectangle,triangle]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:triangle;4:and[%s,%s];4:rectangle;4:triangle;3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, and[triangle,green]), and[apply(same_shape,iota(x.s)),and[size3,size3]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:green;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:size3
'λx.apply(nor[rectangle,apply(same_shape,iota(x.s))],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(iff[triangle,circle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:triangle;4:circle;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(filter(x.s, blue), yellow), apply(size-lt,x.o))))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow;4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(filter(filter(x.s, green), nor[circle,and[green,size2]]), size1), blue)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:nor[%s,%s];4:circle;4:and[%s,%s];4:green;4:size2;4:size1;4:blue
'λx.forall(rectangle,x.s)'	0:forall(%s,%s);4:rectangle;3:%s.s;2:x
'λx.apply(nand[or[rectangle,green],and[green,not[apply(same_shape,x.o)]]],iota(filter(x.s, green)))'	0:apply(%s,%s);4:nand[%s,%s];4:or[%s,%s];4:rectangle;4:green;4:and[%s,%s];4:green;4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[size3,circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size1,circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[circle,rectangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[size2],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(not[and[yellow,or[size2,or[size1,green]]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:yellow;4:or[%s,%s];4:size2;4:or[%s,%s];4:size1;4:green;1:iota(%s);3:%s.s;2:x
'λx.exists(and[green,or[yellow,size1]], filter(x.s, implies[size1,and[size2,green]]))'	0:exists(%s, %s);4:and[%s,%s];4:green;4:or[%s,%s];4:yellow;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size1;4:and[%s,%s];4:size2;4:green
'λx.apply(not[or[not[or[or[or[and[not[nor[or[or[size2,and[size2,not[size1]]],or[size1,nand[and[apply(same_color,x.o),or[circle,yellow]],rectangle]]],size3]],green],rectangle],rectangle],size3]],and[blue,or[not[triangle],size3]]]],iota(filter(filter(x.s, nand[yellow,circle]), triangle)))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:not[%s];4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:not[%s];4:nor[%s,%s];4:or[%s,%s];4:or[%s,%s];4:size2;4:and[%s,%s];4:size2;4:not[%s];4:size1;4:or[%s,%s];4:size1;4:nand[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:or[%s,%s];4:circle;4:yellow;4:rectangle;4:size3;4:green;4:rectangle;4:rectangle;4:size3;4:and[%s,%s];4:blue;4:or[%s,%s];4:not[%s];4:triangle;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:yellow;4:circle;4:triangle
'λx.apply(or[or[size1,yellow],size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:size1;4:yellow;4:size3;1:%s.o;2:x
'λx.apply(apply(size-gt,iota(x.s)),iota(filter(filter(x.s, triangle), and[yellow,implies[apply(same_size,x.o),or[not[size2],and[size2,yellow]]]])))'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:yellow;4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:not[%s];4:size2;4:and[%s,%s];4:size2;4:yellow
'λx.empty(filter(filter(x.s, and[apply(same_shape,iota(x.s)),size1]), not[size2]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size1;4:not[%s];4:size2
'λx.apply(implies[or[green,size1],and[iff[size1,circle],rectangle]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:or[%s,%s];4:green;4:size1;4:and[%s,%s];4:iff[%s,%s];4:size1;4:circle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[triangle,and[green,triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:green;4:triangle;1:%s.o;2:x
'λx.exists(green, filter(x.s, or[size3,and[size3,size3]]))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:and[%s,%s];4:size3;4:size3
'λx.apply(apply(size-geq,iota(filter(x.s, size3))),iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.exists(green, filter(x.s, blue))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(or[rectangle,circle],iota(filter(x.s, and[rectangle,size3])))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:size3
'λx.exists(size2, filter(x.s, blue))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.exists(size3, filter(x.s, blue))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.exists(size1, filter(x.s, blue))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.exists(and[green,green], filter(x.s, blue))'	0:exists(%s, %s);4:and[%s,%s];4:green;4:green;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(triangle,iota(filter(filter(filter(filter(x.s, and[yellow,size2]), size1), triangle), and[and[size1,size3],or[size1,blue]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size2;4:size1;4:triangle;4:and[%s,%s];4:and[%s,%s];4:size1;4:size3;4:or[%s,%s];4:size1;4:blue
'λx.apply(apply(same_color,x.o),iota(filter(filter(filter(filter(x.s, and[size3,green]), blue), size2), size2)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:green;4:blue;4:size2;4:size2
'λx.forall(size3,filter(x.s, rectangle))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.forall(or[size2,and[green,iff[size2,triangle]]],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:size2;4:and[%s,%s];4:green;4:iff[%s,%s];4:size2;4:triangle;3:%s.s;2:x
'λx.contains(iota(x.s), filter(filter(x.s, triangle), size1))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size1
'λx.empty(filter(x.s, and[or[yellow,circle],yellow]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:yellow;4:circle;4:yellow
'λx.forall(size2,filter(filter(filter(x.s, rectangle), triangle), size1))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle;4:size1
'λx.exists(green, filter(x.s, rectangle))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[blue,triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.exists(size1, filter(filter(filter(x.s, not[and[blue,yellow]]), size2), rectangle))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:blue;4:yellow;4:size2;4:rectangle
'λx.apply(size2,iota(filter(filter(x.s, apply(same_size,x.o)), and[not[size1],rectangle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:not[%s];4:size1;4:rectangle
'λx.apply(apply(same_color,x.o),iota(filter(filter(x.s, size2), triangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:triangle
'λx.exists(or[or[or[rectangle,and[size2,or[and[rectangle,yellow],circle]]],triangle],or[apply(size-geq,x.o),or[nand[and[and[circle,size3],and[and[blue,or[and[or[triangle,apply(same_shape,x.o)],not[and[size3,size2]]],and[yellow,nand[rectangle,yellow]]]],and[size1,circle]]],circle],yellow]]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:rectangle;4:and[%s,%s];4:size2;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:yellow;4:circle;4:triangle;4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:or[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:size3;4:and[%s,%s];4:and[%s,%s];4:blue;4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:size3;4:size2;4:and[%s,%s];4:yellow;4:nand[%s,%s];4:rectangle;4:yellow;4:and[%s,%s];4:size1;4:circle;4:circle;4:yellow;3:%s.s;2:x
'λx.exists(rectangle, filter(filter(x.s, or[and[blue,not[size1]],yellow]), rectangle))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:blue;4:not[%s];4:size1;4:yellow;4:rectangle
'λx.apply(green,iota(filter(filter(filter(filter(x.s, triangle), rectangle), green), and[size3,green])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle;4:green;4:and[%s,%s];4:size3;4:green
'λx.apply(or[rectangle,not[or[green,size3]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:not[%s];4:or[%s,%s];4:green;4:size3;1:%s.o;2:x
'λx.apply(size3,iota(filter(x.s, and[circle,or[green,nor[triangle,apply(same_size,iota(filter(x.s, blue)))]]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:or[%s,%s];4:green;4:nor[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.exists(and[circle,nand[triangle,circle]], filter(filter(x.s, size3), apply(same_color,x.o)))'	0:exists(%s, %s);4:and[%s,%s];4:circle;4:nand[%s,%s];4:triangle;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.forall(circle,filter(filter(filter(x.s, yellow), circle), or[rectangle,and[yellow,size2]]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle;4:or[%s,%s];4:rectangle;4:and[%s,%s];4:yellow;4:size2
'λx.apply(size2,iota(filter(filter(filter(filter(filter(x.s, nand[size3,triangle]), size2), rectangle), or[apply(same_size,x.o),yellow]), size1)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size3;4:triangle;4:size2;4:rectangle;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow;4:size1
'λx.empty(filter(x.s, apply(same_color,iota(filter(filter(filter(x.s, rectangle), rectangle), and[apply(same_size,iota(x.s)),size1])))))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size1
'λx.apply(and[rectangle,and[and[circle,size2],apply(same_color,x.o)]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:circle;4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[and[rectangle,blue],or[or[and[not[size3],yellow],rectangle],yellow]],iota(filter(filter(filter(filter(x.s, triangle), size1), blue), green)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:rectangle;4:blue;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:not[%s];4:size3;4:yellow;4:rectangle;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size1;4:blue;4:green
'λx.apply(and[and[implies[blue,circle],size3],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:blue;4:circle;4:size3;4:blue;1:%s.o;2:x
'λx.empty(filter(x.s, or[or[and[not[apply(same_size,x.o)],rectangle],yellow],size3]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:rectangle;4:yellow;4:size3
'λx.contains(iota(x.s), filter(filter(filter(x.s, triangle), circle), implies[and[size2,and[size3,and[size3,triangle]]],green]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle;4:implies[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:size3;4:and[%s,%s];4:size3;4:triangle;4:green
'λx.apply(and[size1,and[and[apply(size-geq,iota(filter(filter(x.s, triangle), size3))),or[yellow,yellow]],circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3;4:or[%s,%s];4:yellow;4:yellow;4:circle;1:%s.o;2:x
'λx.apply(and[apply(size-gt,iota(filter(filter(filter(x.s, not[yellow]), size1), or[green,rectangle]))),triangle],iota(filter(filter(filter(filter(filter(filter(x.s, rectangle), size2), blue), and[circle,iff[apply(same_shape,iota(x.s)),blue]]), yellow), green)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:size1;4:or[%s,%s];4:green;4:rectangle;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2;4:blue;4:and[%s,%s];4:circle;4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:blue;4:yellow;4:green
'λx.apply(and[or[size2,not[not[yellow]]],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size2;4:not[%s];4:not[%s];4:yellow;4:triangle;1:%s.o;2:x
'λx.exists(yellow, filter(filter(filter(filter(filter(filter(x.s, rectangle), size3), size1), iff[yellow,rectangle]), blue), nor[rectangle,not[iff[blue,size3]]]))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3;4:size1;4:iff[%s,%s];4:yellow;4:rectangle;4:blue;4:nor[%s,%s];4:rectangle;4:not[%s];4:iff[%s,%s];4:blue;4:size3
'λx.apply(circle,iota(filter(x.s, circle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.forall(circle,filter(filter(filter(filter(x.s, yellow), yellow), not[and[circle,rectangle]]), rectangle))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:yellow;4:not[%s];4:and[%s,%s];4:circle;4:rectangle;4:rectangle
'λx.apply(nand[size2,blue],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size2;4:blue;1:%s.o;2:x
'λx.exists(size1, filter(filter(x.s, size2), rectangle))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle
'λx.contains(x.o, filter(filter(x.s, apply(same_shape,iota(x.s))), yellow))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:yellow
'λx.contains(iota(x.s), filter(x.s, or[or[blue,and[triangle,or[blue,triangle]]],green]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:blue;4:and[%s,%s];4:triangle;4:or[%s,%s];4:blue;4:triangle;4:green
'λx.apply(and[rectangle,not[apply(same_size,x.o)]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.exists(implies[blue,apply(size-gt,iota(filter(filter(x.s, circle), size2)))], filter(x.s, and[triangle,green]))'	0:exists(%s, %s);4:implies[%s,%s];4:blue;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:green
'λx.exists(size1, filter(filter(filter(filter(filter(filter(x.s, size3), yellow), or[rectangle,triangle]), size1), apply(same_color,x.o)), blue))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow;4:or[%s,%s];4:rectangle;4:triangle;4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue
'λx.exists(size1, filter(filter(filter(x.s, rectangle), rectangle), and[triangle,blue]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle;4:and[%s,%s];4:triangle;4:blue
'λx.apply(circle,iota(filter(filter(x.s, circle), triangle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle
'λx.exists(apply(same_shape,x.o), filter(filter(x.s, size2), size2))'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2
'λx.exists(and[blue,and[yellow,or[apply(size-leq,iota(filter(x.s, green))),size1]]], filter(x.s, not[or[size3,implies[rectangle,yellow]]]))'	0:exists(%s, %s);4:and[%s,%s];4:blue;4:and[%s,%s];4:yellow;4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:size3;4:implies[%s,%s];4:rectangle;4:yellow
'λx.apply(and[and[green,and[and[or[green,circle],blue],circle]],blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:green;4:circle;4:blue;4:circle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(or[yellow,rectangle],iota(filter(filter(filter(filter(filter(filter(filter(filter(x.s, blue), size1), or[apply(same_color,iota(filter(x.s, triangle))),rectangle]), size1), size1), blue), green), implies[size2,size1])))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle;4:size1;4:size1;4:blue;4:green;4:implies[%s,%s];4:size2;4:size1
'λx.apply(triangle,iota(filter(filter(x.s, green), and[size3,triangle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:size3;4:triangle
'λx.apply(blue,iota(filter(x.s, iff[size3,size1])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size3;4:size1
'λx.exists(green, filter(x.s, nor[not[and[circle,apply(size-lt,x.o)]],or[and[not[size1],size1],triangle]]))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:not[%s];4:and[%s,%s];4:circle;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:size1;4:size1;4:triangle
'λx.apply(and[size2,not[apply(same_color,iota(x.s))]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.exists(apply(same_size,iota(filter(filter(x.s, not[triangle]), size3))), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:size3;3:%s.s;2:x
'λx.apply(and[triangle,not[and[yellow,yellow]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:not[%s];4:and[%s,%s];4:yellow;4:yellow;1:%s.o;2:x
'λx.forall(yellow,filter(filter(filter(x.s, size2), or[yellow,size1]), iff[rectangle,size2]))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:yellow;4:size1;4:iff[%s,%s];4:rectangle;4:size2
'λx.apply(size3,iota(filter(x.s, circle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(size2,iota(filter(x.s, circle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(size1,iota(filter(x.s, circle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(blue,iota(filter(filter(filter(filter(x.s, yellow), not[rectangle]), or[and[not[size2],size1],iff[rectangle,size3]]), circle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:size2;4:size1;4:iff[%s,%s];4:rectangle;4:size3;4:circle
'λx.apply(nand[size3,not[green]],iota(filter(filter(x.s, nand[and[circle,and[and[green,rectangle],blue]],size2]), and[yellow,or[rectangle,green]])))'	0:apply(%s,%s);4:nand[%s,%s];4:size3;4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:green;4:rectangle;4:blue;4:size2;4:and[%s,%s];4:yellow;4:or[%s,%s];4:rectangle;4:green
'λx.apply(and[size1,and[circle,green]],iota(filter(filter(x.s, apply(same_size,iota(filter(x.s, and[size2,triangle])))), size1)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:and[%s,%s];4:circle;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:triangle;4:size1
'λx.apply(and[circle,and[nor[green,green],iff[apply(same_shape,iota(filter(x.s, not[size3]))),not[size3]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:and[%s,%s];4:nor[%s,%s];4:green;4:green;4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;4:not[%s];4:size3;1:%s.o;2:x
'λx.apply(or[and[or[and[yellow,and[or[blue,size3],triangle]],not[yellow]],size3],blue],iota(filter(filter(x.s, nor[yellow,green]), size3)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:or[%s,%s];4:blue;4:size3;4:triangle;4:not[%s];4:yellow;4:size3;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:yellow;4:green;4:size3
'λx.apply(or[blue,circle],iota(filter(x.s, not[apply(same_size,x.o)])))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.contains(iota(filter(x.s, not[size2])), filter(x.s, rectangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(size1,iota(filter(x.s, nand[apply(size-lt,iota(x.s)),circle])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:circle
'λx.apply(not[apply(same_size,iota(filter(filter(x.s, apply(size-geq,iota(x.s))), size1)))],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(x.s, and[yellow,size3]), and[green,circle])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size3;4:and[%s,%s];4:green;4:circle
'λx.exists(and[or[triangle,and[and[blue,yellow],and[and[triangle,apply(same_size,x.o)],apply(same_size,iota(filter(x.s, and[not[apply(same_color,x.o)],yellow])))]]],size1], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:or[%s,%s];4:triangle;4:and[%s,%s];4:and[%s,%s];4:blue;4:yellow;4:and[%s,%s];4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;4:size1;3:%s.s;2:x
'λx.apply(apply(same_color,iota(filter(x.s, apply(same_size,x.o)))),iota(filter(filter(x.s, yellow), or[or[size1,yellow],size1])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:or[%s,%s];4:size1;4:yellow;4:size1
'λx.apply(nand[circle,size1],iota(filter(filter(x.s, and[triangle,not[circle]]), blue)))'	0:apply(%s,%s);4:nand[%s,%s];4:circle;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:not[%s];4:circle;4:blue
'λx.apply(size3,iota(filter(filter(x.s, and[and[size2,rectangle],circle]), circle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size2;4:rectangle;4:circle;4:circle
'λx.apply(size3,iota(filter(filter(filter(x.s, or[size3,apply(size-lt,iota(filter(x.s, blue)))]), yellow), apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(and[blue,and[rectangle,green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:green;1:%s.o;2:x
'λx.apply(nor[and[implies[circle,green],or[and[triangle,size1],triangle]],not[and[triangle,size2]]],iota(filter(filter(x.s, blue), yellow)))'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:circle;4:green;4:or[%s,%s];4:and[%s,%s];4:triangle;4:size1;4:triangle;4:not[%s];4:and[%s,%s];4:triangle;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow
'λx.contains(iota(x.s), filter(filter(x.s, iff[and[not[apply(size-lt,iota(x.s))],and[and[or[and[and[apply(size-lt,iota(x.s)),and[size2,size2]],yellow],size3],or[triangle,size3]],green]],and[size3,circle]]), rectangle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:size2;4:yellow;4:size3;4:or[%s,%s];4:triangle;4:size3;4:green;4:and[%s,%s];4:size3;4:circle;4:rectangle
'λx.apply(and[and[size3,yellow],or[size3,or[blue,apply(same_color,iota(x.s))]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size3;4:yellow;4:or[%s,%s];4:size3;4:or[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.forall(not[rectangle],x.s)'	0:forall(%s,%s);4:not[%s];4:rectangle;3:%s.s;2:x
'λx.apply(and[size3,and[size3,and[or[triangle,size3],size3]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:size3;4:and[%s,%s];4:or[%s,%s];4:triangle;4:size3;4:size3;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, or[yellow,not[circle]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:not[%s];4:circle
'λx.apply(blue,iota(filter(filter(x.s, not[size2]), size2)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:size2
'λx.apply(triangle,iota(filter(filter(x.s, and[size3,implies[size3,yellow]]), or[rectangle,size3])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:implies[%s,%s];4:size3;4:yellow;4:or[%s,%s];4:rectangle;4:size3
'λx.exists(or[circle,not[and[nand[size3,size3],blue]]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:circle;4:not[%s];4:and[%s,%s];4:nand[%s,%s];4:size3;4:size3;4:blue;3:%s.s;2:x
'λx.exists(and[or[blue,not[size3]],and[rectangle,rectangle]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:or[%s,%s];4:blue;4:not[%s];4:size3;4:and[%s,%s];4:rectangle;4:rectangle;3:%s.s;2:x
'λx.apply(or[and[size1,blue],size3],iota(filter(filter(x.s, not[and[and[rectangle,or[size3,apply(same_size,iota(x.s))]],blue]]), rectangle)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size1;4:blue;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:blue;4:rectangle
'λx.apply(triangle,iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.forall(yellow,filter(filter(filter(x.s, circle), size3), or[green,size3]))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3;4:or[%s,%s];4:green;4:size3
'λx.apply(and[yellow,rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.forall(and[size2,yellow],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:size2;4:yellow;3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, rectangle), apply(same_size,iota(x.s))), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:triangle
'λx.exists(yellow, filter(filter(x.s, rectangle), yellow))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:yellow
'λx.apply(or[and[and[or[nand[green,apply(same_shape,iota(x.s))],or[size1,green]],triangle],size1],green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:nand[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:green;4:triangle;4:size1;4:green;1:%s.o;2:x
'λx.contains(iota(filter(x.s, circle)), filter(x.s, or[or[nand[circle,nand[size2,blue]],triangle],yellow]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:nand[%s,%s];4:circle;4:nand[%s,%s];4:size2;4:blue;4:triangle;4:yellow
'λx.exists(and[triangle,apply(same_size,iota(x.s))], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(x.s, size1), triangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle
'λx.apply(and[size3,nor[green,yellow]],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:nor[%s,%s];4:green;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(or[triangle,circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:circle;1:%s.o;2:x
'λx.apply(apply(same_size,iota(filter(filter(filter(filter(filter(filter(x.s, yellow), apply(same_size,x.o)), rectangle), size3), size3), or[or[blue,circle],triangle]))),iota(filter(x.s, size2)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:rectangle;4:size3;4:size3;4:or[%s,%s];4:or[%s,%s];4:blue;4:circle;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(circle,iota(filter(x.s, and[or[apply(size-lt,iota(filter(filter(filter(filter(x.s, and[circle,size2]), rectangle), size2), rectangle))),rectangle],blue])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size2;4:rectangle;4:size2;4:rectangle;4:rectangle;4:blue
'λx.apply(iff[and[not[size3],size1],blue],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:not[%s];4:size3;4:size1;4:blue;1:%s.o;2:x
'λx.forall(or[and[or[nand[size3,apply(same_shape,x.o)],and[and[and[green,rectangle],yellow],circle]],iff[size1,size2]],size3],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:nand[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:rectangle;4:yellow;4:circle;4:iff[%s,%s];4:size1;4:size2;4:size3;3:%s.s;2:x
'λx.apply(blue,iota(filter(x.s, iff[size3,apply(same_size,iota(filter(x.s, not[and[rectangle,or[size1,implies[size3,size2]]]])))])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:rectangle;4:or[%s,%s];4:size1;4:implies[%s,%s];4:size3;4:size2
'λx.apply(apply(size-lt,iota(x.s)),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(or[blue,iff[rectangle,and[size1,and[not[apply(same_color,iota(x.s))],and[circle,apply(same_size,x.o)]]]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:iff[%s,%s];4:rectangle;4:and[%s,%s];4:size1;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, and[size3,green])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:green
'λx.apply(size1,iota(filter(x.s, and[and[apply(same_size,iota(x.s)),circle],implies[size1,green]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:circle;4:implies[%s,%s];4:size1;4:green
'λx.contains(iota(filter(filter(x.s, size1), size2)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2;3:%s.s;2:x
'λx.exists(size3, filter(filter(x.s, size3), circle))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle
'λx.apply(rectangle,iota(filter(filter(filter(x.s, green), size2), and[triangle,or[blue,size1]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size2;4:and[%s,%s];4:triangle;4:or[%s,%s];4:blue;4:size1
'λx.apply(implies[or[apply(size-lt,iota(filter(filter(filter(x.s, size3), triangle), rectangle))),green],not[rectangle]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle;4:rectangle;4:green;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.exists(triangle, filter(x.s, triangle))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.forall(triangle,filter(x.s, size2))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.forall(triangle,filter(x.s, green))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.exists(circle, filter(filter(filter(filter(filter(x.s, triangle), size3), and[apply(same_size,x.o),not[triangle]]), yellow), green))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:not[%s];4:triangle;4:yellow;4:green
'λx.contains(iota(filter(filter(filter(filter(filter(filter(x.s, rectangle), size1), blue), nand[and[size2,size2],circle]), or[size2,triangle]), triangle)), filter(x.s, green))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1;4:blue;4:nand[%s,%s];4:and[%s,%s];4:size2;4:size2;4:circle;4:or[%s,%s];4:size2;4:triangle;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(implies[circle,rectangle],iota(filter(x.s, not[circle])))'	0:apply(%s,%s);4:implies[%s,%s];4:circle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.apply(and[yellow,yellow],iota(filter(x.s, or[size2,size3])))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:size3
'λx.apply(circle,iota(filter(x.s, and[size1,green])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:green
'λx.apply(not[apply(same_size,iota(filter(x.s, yellow)))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;1:%s.o;2:x
'λx.apply(and[rectangle,or[not[apply(size-gt,x.o)],nor[triangle,green]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:nor[%s,%s];4:triangle;4:green;1:%s.o;2:x
'λx.forall(not[triangle],filter(x.s, or[green,apply(size-geq,x.o)]))'	0:forall(%s,%s);4:not[%s];4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.apply(not[circle],iota(filter(filter(x.s, size3), size3)))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3
'λx.apply(apply(size-leq,iota(filter(x.s, and[blue,size1]))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size1;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, green), not[and[apply(same_size,iota(filter(x.s, not[blue]))),rectangle]]), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:rectangle;4:circle
'λx.forall(yellow,filter(filter(x.s, blue), apply(same_shape,iota(x.s))))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(filter(filter(filter(filter(x.s, blue), and[size3,triangle]), rectangle), yellow), apply(same_size,x.o)), size3)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:size3;4:triangle;4:rectangle;4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3
'λx.apply(not[or[triangle,size2]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:triangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(not[and[blue,blue]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:blue;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(and[blue,circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(x.s, apply(same_color,iota(x.s))), apply(same_color,x.o))))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.exists(and[green,size2], filter(filter(x.s, size3), green))'	0:exists(%s, %s);4:and[%s,%s];4:green;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green
'λx.empty(filter(x.s, or[or[or[or[rectangle,and[size2,or[and[rectangle,yellow],circle]]],triangle],or[apply(size-geq,x.o),or[nand[and[and[circle,size3],and[and[blue,or[and[or[triangle,apply(same_shape,x.o)],not[and[or[yellow,iff[green,or[not[size3],size3]]],size2]]],and[yellow,nand[rectangle,yellow]]]],and[size1,circle]]],circle],yellow]]],size3]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:rectangle;4:and[%s,%s];4:size2;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:yellow;4:circle;4:triangle;4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:or[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:size3;4:and[%s,%s];4:and[%s,%s];4:blue;4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:or[%s,%s];4:yellow;4:iff[%s,%s];4:green;4:or[%s,%s];4:not[%s];4:size3;4:size3;4:size2;4:and[%s,%s];4:yellow;4:nand[%s,%s];4:rectangle;4:yellow;4:and[%s,%s];4:size1;4:circle;4:circle;4:yellow;4:size3
'λx.apply(and[rectangle,triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:triangle;1:%s.o;2:x
'λx.apply(or[and[size1,yellow],size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size1;4:yellow;4:size3;1:%s.o;2:x
'λx.apply(or[apply(same_color,x.o),or[or[apply(same_size,iota(x.s)),apply(same_size,x.o)],and[size2,size3]]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:size2;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.contains(iota(x.s), filter(x.s, apply(size-lt,iota(x.s))))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(filter(filter(filter(x.s, triangle), and[green,and[size2,size3]]), rectangle), not[not[circle]]), green)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:green;4:and[%s,%s];4:size2;4:size3;4:rectangle;4:not[%s];4:not[%s];4:circle;4:green
'λx.contains(iota(filter(filter(filter(x.s, size3), not[green]), size1)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:green;4:size1;3:%s.s;2:x
'λx.apply(not[rectangle],iota(filter(filter(filter(filter(filter(x.s, triangle), and[apply(same_shape,iota(x.s)),green]), circle), size3), size2)))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:green;4:circle;4:size3;4:size2
'λx.apply(or[triangle,or[or[and[size3,not[size2]],and[size3,triangle]],size1]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size3;4:not[%s];4:size2;4:and[%s,%s];4:size3;4:triangle;4:size1;1:%s.o;2:x
'λx.forall(green,filter(x.s, nor[and[and[or[blue,rectangle],triangle],circle],size3]))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:blue;4:rectangle;4:triangle;4:circle;4:size3
'λx.apply(green,iota(filter(filter(filter(x.s, apply(same_size,x.o)), or[blue,or[and[apply(size-lt,iota(filter(filter(filter(filter(x.s, not[and[circle,circle]]), rectangle), triangle), and[blue,size2]))),not[nor[not[implies[and[circle,blue],green]],rectangle]]],size1]]), rectangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:blue;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:circle;4:circle;4:rectangle;4:triangle;4:and[%s,%s];4:blue;4:size2;4:not[%s];4:nor[%s,%s];4:not[%s];4:implies[%s,%s];4:and[%s,%s];4:circle;4:blue;4:green;4:rectangle;4:size1;4:rectangle
'λx.apply(triangle,iota(filter(x.s, and[not[yellow],blue])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:yellow;4:blue
'λx.apply(and[iff[size3,not[and[apply(same_size,x.o),size3]]],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:size3;4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;4:size3;1:%s.o;2:x
'λx.forall(iff[and[yellow,apply(size-gt,x.o)],blue],filter(filter(filter(x.s, nand[blue,blue]), rectangle), implies[and[size3,iff[blue,implies[triangle,size3]]],nor[or[size3,circle],and[or[triangle,triangle],nor[and[rectangle,apply(same_size,iota(x.s))],size1]]]]))'	0:forall(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:blue;4:blue;4:rectangle;4:implies[%s,%s];4:and[%s,%s];4:size3;4:iff[%s,%s];4:blue;4:implies[%s,%s];4:triangle;4:size3;4:nor[%s,%s];4:or[%s,%s];4:size3;4:circle;4:and[%s,%s];4:or[%s,%s];4:triangle;4:triangle;4:nor[%s,%s];4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size1
'λx.apply(or[green,green],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.forall(or[and[and[nand[circle,size2],apply(size-lt,x.o)],circle],size3],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:circle;4:size2;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:circle;4:size3;3:%s.s;2:x
'λx.apply(and[nor[and[apply(same_shape,iota(filter(x.s, circle))),nor[and[nand[size1,blue],yellow],green]],green],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:nor[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:size1;4:blue;4:yellow;4:green;4:green;4:blue;1:%s.o;2:x
'λx.apply(and[iff[size2,circle],and[and[nand[size1,rectangle],apply(same_color,x.o)],and[triangle,green]]],iota(filter(filter(x.s, yellow), yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:size2;4:circle;4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:size1;4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:triangle;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:yellow
'λx.forall(size3,filter(filter(x.s, apply(same_shape,x.o)), size2))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2
'λx.apply(apply(size-lt,x.o),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size2,not[blue]],iota(filter(x.s, nand[nor[circle,and[not[not[circle]],apply(same_shape,x.o)]],and[nand[green,triangle],apply(same_color,iota(filter(filter(x.s, iff[size3,apply(same_color,iota(filter(filter(filter(filter(x.s, and[apply(same_shape,x.o),green]), apply(size-gt,iota(x.s))), not[blue]), circle)))]), yellow)))]])))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:nor[%s,%s];4:circle;4:and[%s,%s];4:not[%s];4:not[%s];4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:nand[%s,%s];4:green;4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:not[%s];4:blue;4:circle;4:yellow
'λx.contains(iota(x.s), filter(filter(filter(x.s, triangle), size3), not[size3]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3;4:not[%s];4:size3
'λx.apply(and[iff[and[yellow,size2],and[size2,not[nor[rectangle,size1]]]],or[rectangle,circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:yellow;4:size2;4:and[%s,%s];4:size2;4:not[%s];4:nor[%s,%s];4:rectangle;4:size1;4:or[%s,%s];4:rectangle;4:circle;1:%s.o;2:x
'λx.forall(rectangle,filter(x.s, size1))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.forall(rectangle,filter(x.s, size3))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(and[size1,size2],iota(filter(filter(x.s, and[not[yellow],circle]), size1)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:yellow;4:circle;4:size1
'λx.exists(and[triangle,yellow], filter(x.s, rectangle))'	0:exists(%s, %s);4:and[%s,%s];4:triangle;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(apply(same_color,x.o),iota(filter(filter(filter(x.s, not[size3]), triangle), or[size3,size2])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;4:triangle;4:or[%s,%s];4:size3;4:size2
'λx.apply(implies[not[apply(same_color,iota(filter(x.s, size1)))],green],iota(filter(x.s, and[and[size2,not[yellow]],rectangle])))'	0:apply(%s,%s);4:implies[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size2;4:not[%s];4:yellow;4:rectangle
'λx.apply(not[and[or[apply(same_size,x.o),apply(same_color,x.o)],size1]],iota(filter(x.s, or[size3,circle])))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:circle
'λx.apply(yellow,iota(filter(filter(filter(x.s, size1), apply(same_size,x.o)), nand[yellow,or[not[nand[size3,apply(same_shape,x.o)]],and[and[rectangle,iff[circle,size1]],blue]]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:nand[%s,%s];4:yellow;4:or[%s,%s];4:not[%s];4:nand[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:iff[%s,%s];4:circle;4:size1;4:blue
'λx.empty(filter(filter(filter(filter(x.s, apply(same_color,x.o)), and[size1,yellow]), rectangle), or[size2,and[and[size3,nor[blue,and[nor[circle,rectangle],triangle]]],rectangle]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:size1;4:yellow;4:rectangle;4:or[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:size3;4:nor[%s,%s];4:blue;4:and[%s,%s];4:nor[%s,%s];4:circle;4:rectangle;4:triangle;4:rectangle
'λx.apply(and[size1,and[yellow,green]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:and[%s,%s];4:yellow;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(not[apply(same_size,iota(filter(filter(x.s, triangle), apply(size-geq,x.o))))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(filter(x.s, or[triangle,blue]), triangle), not[size2])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:blue;4:triangle;4:not[%s];4:size2
'λx.empty(filter(filter(filter(x.s, size2), blue), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue;4:size3
'λx.forall(blue,filter(x.s, green))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.forall(blue,filter(x.s, size2))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.forall(blue,filter(x.s, size3))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(size1, filter(filter(x.s, apply(same_color,iota(x.s))), size2))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size2
'λx.apply(rectangle,iota(filter(x.s, blue)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[green,and[circle,size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:circle;4:size2;1:%s.o;2:x
'λx.exists(or[and[circle,size2],blue], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:circle;4:size2;4:blue;3:%s.s;2:x
'λx.forall(not[circle],filter(filter(filter(filter(x.s, implies[green,and[green,blue]]), triangle), and[and[size1,and[green,yellow]],rectangle]), rectangle))'	0:forall(%s,%s);4:not[%s];4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:green;4:and[%s,%s];4:green;4:blue;4:triangle;4:and[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:green;4:yellow;4:rectangle;4:rectangle
'λx.apply(or[iff[blue,green],rectangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:iff[%s,%s];4:blue;4:green;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.exists(apply(same_shape,x.o), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(and[yellow,size2],iota(filter(x.s, green)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(nor[blue,blue],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:nor[%s,%s];4:blue;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(size3,iota(filter(filter(filter(x.s, green), apply(same_size,x.o)), green)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green
'λx.forall(triangle,filter(x.s, triangle))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.contains(iota(filter(filter(x.s, rectangle), circle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle;3:%s.s;2:x
'λx.apply(nor[not[size1],size1],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:not[%s];4:size1;4:size1;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, and[and[blue,and[or[size3,nor[triangle,circle]],size3]],rectangle]), apply(same_shape,iota(x.s))))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:or[%s,%s];4:size3;4:nor[%s,%s];4:triangle;4:circle;4:size3;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(and[apply(same_color,x.o),rectangle],iota(filter(x.s, implies[and[blue,triangle],rectangle])))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:and[%s,%s];4:blue;4:triangle;4:rectangle
'λx.forall(and[yellow,yellow],filter(filter(x.s, nand[triangle,yellow]), apply(size-leq,iota(x.s))))'	0:forall(%s,%s);4:and[%s,%s];4:yellow;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:triangle;4:yellow;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(x.s, implies[circle,yellow]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:circle;4:yellow
'λx.apply(and[rectangle,implies[and[blue,size1],triangle]],iota(filter(filter(x.s, rectangle), or[or[and[blue,and[implies[apply(same_color,x.o),and[circle,size2]],or[not[not[blue]],and[green,iff[triangle,rectangle]]]]],blue],size3])))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:implies[%s,%s];4:and[%s,%s];4:blue;4:size1;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:circle;4:size2;4:or[%s,%s];4:not[%s];4:not[%s];4:blue;4:and[%s,%s];4:green;4:iff[%s,%s];4:triangle;4:rectangle;4:blue;4:size3
'λx.apply(apply(same_shape,iota(x.s)),iota(filter(filter(x.s, nand[apply(size-gt,x.o),triangle]), size1)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:triangle;4:size1
'λx.apply(and[and[circle,green],triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:green;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[and[size2,rectangle],triangle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:size2;4:rectangle;4:triangle;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(filter(filter(filter(filter(filter(filter(x.s, triangle), nand[circle,green]), and[and[yellow,size2],blue]), circle), circle), and[or[blue,green],circle]), not[triangle]), size3), size3), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:nand[%s,%s];4:circle;4:green;4:and[%s,%s];4:and[%s,%s];4:yellow;4:size2;4:blue;4:circle;4:circle;4:and[%s,%s];4:or[%s,%s];4:blue;4:green;4:circle;4:not[%s];4:triangle;4:size3;4:size3;4:circle
'λx.apply(apply(same_color,x.o),iota(filter(filter(filter(x.s, and[and[size1,apply(same_shape,iota(filter(x.s, size3)))],green]), size1), size3)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green;4:size1;4:size3
'λx.apply(nor[yellow,size3],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:yellow;4:size3;1:iota(%s);3:%s.s;2:x
'λx.exists(and[green,size2], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:green;4:size2;3:%s.s;2:x
'λx.contains(iota(x.s), filter(filter(filter(filter(x.s, and[green,and[circle,green]]), size1), circle), yellow))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:and[%s,%s];4:circle;4:green;4:size1;4:circle;4:yellow
'λx.apply(or[triangle,nor[size3,circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:nor[%s,%s];4:size3;4:circle;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, not[green]), and[or[yellow,triangle],green])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:and[%s,%s];4:or[%s,%s];4:yellow;4:triangle;4:green;3:%s.s;2:x
'λx.exists(not[and[and[yellow,apply(same_size,iota(x.s))],and[size3,blue]]], x.s)'	0:exists(%s, %s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:blue;3:%s.s;2:x
'λx.apply(triangle,iota(x.s))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, green), iff[size2,and[apply(same_size,iota(filter(filter(filter(filter(x.s, blue), apply(same_color,x.o)), or[size1,triangle]), size2))),size3]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:iff[%s,%s];4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:or[%s,%s];4:size1;4:triangle;4:size2;4:size3
'λx.exists(apply(same_shape,x.o), filter(filter(filter(x.s, yellow), size2), size2))'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2;4:size2
'λx.apply(nand[green,circle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:green;4:circle;1:%s.o;2:x
'λx.exists(implies[green,or[green,and[iff[circle,apply(same_shape,x.o)],size1]]], filter(filter(filter(filter(x.s, size3), not[or[rectangle,circle]]), size2), size2))'	0:exists(%s, %s);4:implies[%s,%s];4:green;4:or[%s,%s];4:green;4:and[%s,%s];4:iff[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:or[%s,%s];4:rectangle;4:circle;4:size2;4:size2
'λx.apply(blue,iota(filter(filter(x.s, not[triangle]), circle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:circle
'λx.apply(size1,iota(filter(filter(x.s, size3), yellow)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow
'λx.apply(implies[not[triangle],yellow],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:not[%s];4:triangle;4:yellow;1:%s.o;2:x
'λx.forall(and[green,apply(same_shape,x.o)],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.exists(iff[or[iff[apply(same_shape,iota(filter(filter(filter(x.s, not[or[apply(same_color,x.o),circle]]), circle), and[green,or[apply(size-geq,x.o),green]]))),blue],rectangle],or[size2,size3]], x.s)'	0:exists(%s, %s);4:iff[%s,%s];4:or[%s,%s];4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;4:circle;4:and[%s,%s];4:green;4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:green;4:blue;4:rectangle;4:or[%s,%s];4:size2;4:size3;3:%s.s;2:x
'λx.empty(filter(x.s, and[and[not[size1],size2],size2]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size1;4:size2;4:size2
'λx.apply(iff[yellow,circle],iota(filter(x.s, not[size3])))'	0:apply(%s,%s);4:iff[%s,%s];4:yellow;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3
'λx.apply(nand[not[nor[yellow,triangle]],and[size3,rectangle]],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:not[%s];4:nor[%s,%s];4:yellow;4:triangle;4:and[%s,%s];4:size3;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[size2,circle],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size2;4:circle;4:rectangle;1:%s.o;2:x
'λx.apply(and[size3,size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size3,size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(not[not[triangle]],iota(filter(filter(x.s, rectangle), apply(same_size,iota(x.s)))))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.forall(not[apply(same_shape,iota(filter(filter(x.s, nand[rectangle,and[or[not[size2],size3],green]]), and[green,triangle])))],x.s)'	0:forall(%s,%s);4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:rectangle;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:size2;4:size3;4:green;4:and[%s,%s];4:green;4:triangle;3:%s.s;2:x
'λx.apply(and[blue,apply(size-lt,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, and[iff[size1,circle],size2]), circle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:iff[%s,%s];4:size1;4:circle;4:size2;4:circle
'λx.apply(nand[green,rectangle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:green;4:rectangle;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(filter(x.s, iff[triangle,rectangle]), and[triangle,triangle]), rectangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:triangle;4:rectangle;4:and[%s,%s];4:triangle;4:triangle;4:rectangle
'λx.apply(and[size1,size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size1,size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size1,size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:size3;1:iota(%s);3:%s.s;2:x
'λx.forall(and[rectangle,size1],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:rectangle;4:size1;3:%s.s;2:x
'λx.apply(green,iota(filter(filter(x.s, size2), yellow)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:yellow
'λx.apply(circle,iota(filter(filter(filter(x.s, size3), yellow), green)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow;4:green
'λx.apply(rectangle,iota(filter(x.s, apply(size-geq,x.o))))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.apply(or[not[blue],circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:blue;4:circle;1:%s.o;2:x
'λx.apply(and[and[size3,or[green,size3]],not[and[not[size2],green]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size3;4:or[%s,%s];4:green;4:size3;4:not[%s];4:and[%s,%s];4:not[%s];4:size2;4:green;1:%s.o;2:x
'λx.exists(and[and[nor[iff[and[size1,green],size2],rectangle],green],apply(same_shape,iota(filter(x.s, size2)))], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:size1;4:green;4:size2;4:rectangle;4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;3:%s.s;2:x
'λx.apply(nand[triangle,size1],iota(filter(filter(filter(x.s, yellow), green), size2)))'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green;4:size2
'λx.contains(iota(filter(filter(filter(filter(filter(x.s, not[green]), green), size2), and[nor[rectangle,triangle],yellow]), not[yellow])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:green;4:size2;4:and[%s,%s];4:nor[%s,%s];4:rectangle;4:triangle;4:yellow;4:not[%s];4:yellow;3:%s.s;2:x
'λx.apply(and[green,triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:triangle;1:%s.o;2:x
'λx.apply(and[size2,size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size2,size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[or[size2,and[or[blue,size1],size1]],size2],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:nor[%s,%s];4:or[%s,%s];4:size2;4:and[%s,%s];4:or[%s,%s];4:blue;4:size1;4:size1;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(or[size2,circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:circle;1:%s.o;2:x
'λx.apply(or[size1,circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:circle;1:%s.o;2:x
'λx.apply(and[size2,and[and[size3,rectangle],size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:size3;4:rectangle;4:size3;1:%s.o;2:x
'λx.apply(or[iff[blue,and[or[apply(size-leq,iota(filter(filter(x.s, not[and[or[apply(same_size,x.o),rectangle],or[green,rectangle]]]), green))),rectangle],circle]],circle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:iff[%s,%s];4:blue;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:rectangle;4:or[%s,%s];4:green;4:rectangle;4:green;4:rectangle;4:circle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[blue,not[and[size1,circle]]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:blue;4:not[%s];4:and[%s,%s];4:size1;4:circle;1:%s.o;2:x
'λx.exists(circle, x.s)'	0:exists(%s, %s);4:circle;3:%s.s;2:x
'λx.apply(and[implies[rectangle,size3],circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:rectangle;4:size3;4:circle;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, and[size3,yellow]), not[and[size2,rectangle]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:yellow;4:not[%s];4:and[%s,%s];4:size2;4:rectangle
'λx.apply(and[size3,apply(size-gt,iota(filter(x.s, green)))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, circle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(or[and[size2,and[rectangle,green]],size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:rectangle;4:green;4:size3;1:%s.o;2:x
'λx.forall(triangle,filter(x.s, not[apply(same_color,x.o)]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(not[or[size2,blue]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:size2;4:blue;1:%s.o;2:x
'λx.exists(yellow, filter(filter(filter(filter(x.s, not[yellow]), not[not[triangle]]), and[and[blue,rectangle],or[blue,circle]]), and[not[size1],green]))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:not[%s];4:not[%s];4:triangle;4:and[%s,%s];4:and[%s,%s];4:blue;4:rectangle;4:or[%s,%s];4:blue;4:circle;4:and[%s,%s];4:not[%s];4:size1;4:green
'λx.apply(nor[implies[size3,and[nand[size2,size2],and[yellow,triangle]]],size2],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:nor[%s,%s];4:implies[%s,%s];4:size3;4:and[%s,%s];4:nand[%s,%s];4:size2;4:size2;4:and[%s,%s];4:yellow;4:triangle;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(or[blue,green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:green;1:%s.o;2:x
'λx.exists(not[blue], x.s)'	0:exists(%s, %s);4:not[%s];4:blue;3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(filter(x.s, iff[rectangle,size1]), size2), yellow), rectangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:rectangle;4:size1;4:size2;4:yellow;4:rectangle
'λx.apply(apply(same_shape,iota(filter(x.s, size3))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(x.s, blue), or[apply(same_color,iota(filter(filter(filter(x.s, or[rectangle,size2]), yellow), green))),circle])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:size2;4:yellow;4:green;4:circle
'λx.empty(filter(filter(x.s, and[iff[yellow,triangle],green]), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:iff[%s,%s];4:yellow;4:triangle;4:green;4:size1
'λx.apply(iff[apply(same_size,x.o),and[blue,size2]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:blue;4:size2;1:%s.o;2:x
'λx.exists(and[iff[or[not[circle],and[not[size3],apply(same_shape,iota(x.s))]],triangle],not[triangle]], filter(filter(x.s, and[or[size1,and[size2,green]],size3]), triangle))'	0:exists(%s, %s);4:and[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:not[%s];4:circle;4:and[%s,%s];4:not[%s];4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle;4:not[%s];4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:size1;4:and[%s,%s];4:size2;4:green;4:size3;4:triangle
'λx.apply(triangle,iota(filter(filter(x.s, triangle), and[size3,triangle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:size3;4:triangle
'λx.contains(x.o, filter(x.s, or[size1,triangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:triangle
'λx.apply(nor[yellow,or[apply(size-leq,iota(x.s)),triangle]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:yellow;4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:triangle;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, apply(same_shape,iota(x.s)))))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.forall(apply(same_color,x.o),filter(x.s, apply(same_shape,x.o)))'	0:forall(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(yellow,iota(filter(x.s, apply(size-lt,iota(filter(x.s, nor[rectangle,yellow]))))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:rectangle;4:yellow
'λx.apply(and[not[size2],or[apply(same_shape,iota(x.s)),not[and[size1,apply(same_shape,iota(x.s))]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size2;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, size1), triangle), or[blue,or[size1,nand[size2,and[apply(same_size,iota(filter(x.s, or[and[circle,and[circle,not[and[size1,triangle]]]],and[size2,size3]]))),circle]]]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle;4:or[%s,%s];4:blue;4:or[%s,%s];4:size1;4:nand[%s,%s];4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:circle;4:not[%s];4:and[%s,%s];4:size1;4:triangle;4:and[%s,%s];4:size2;4:size3;4:circle
'λx.apply(not[iff[or[circle,yellow],yellow]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:iff[%s,%s];4:or[%s,%s];4:circle;4:yellow;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size3,circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:circle;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(filter(filter(filter(filter(x.s, blue), size1), size1), and[size1,rectangle]), and[apply(same_color,x.o),and[rectangle,not[and[and[size1,size1],triangle]]]]), blue)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1;4:size1;4:and[%s,%s];4:size1;4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:rectangle;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:size1;4:triangle;4:blue
'λx.apply(or[yellow,implies[size2,and[yellow,nor[triangle,and[and[triangle,not[apply(same_size,iota(x.s))]],size3]]]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:implies[%s,%s];4:size2;4:and[%s,%s];4:yellow;4:nor[%s,%s];4:triangle;4:and[%s,%s];4:and[%s,%s];4:triangle;4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size3;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(filter(filter(filter(x.s, and[implies[and[apply(size-lt,iota(x.s)),and[yellow,implies[green,apply(same_color,x.o)]]],size1],implies[size1,or[apply(same_shape,x.o),not[and[circle,and[and[rectangle,apply(size-leq,x.o)],yellow]]]]]]), size1), rectangle), and[nand[size2,yellow],apply(size-lt,x.o)]), and[size2,blue])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:implies[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1;4:implies[%s,%s];4:size1;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:yellow;4:size1;4:rectangle;4:and[%s,%s];4:nand[%s,%s];4:size2;4:yellow;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:and[%s,%s];4:size2;4:blue
'λx.apply(not[and[not[size3],and[yellow,size3]]],iota(filter(filter(x.s, size1), blue)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:size3;4:and[%s,%s];4:yellow;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue
'λx.exists(blue, filter(filter(x.s, triangle), not[size1]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:not[%s];4:size1
'λx.apply(and[apply(same_size,x.o),triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle;1:%s.o;2:x
'λx.forall(triangle,filter(filter(filter(x.s, nor[green,or[not[implies[green,and[size2,nor[not[iff[green,not[green]]],circle]]]],green]]), and[blue,triangle]), or[nor[circle,size1],rectangle]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:green;4:or[%s,%s];4:not[%s];4:implies[%s,%s];4:green;4:and[%s,%s];4:size2;4:nor[%s,%s];4:not[%s];4:iff[%s,%s];4:green;4:not[%s];4:green;4:circle;4:green;4:and[%s,%s];4:blue;4:triangle;4:or[%s,%s];4:nor[%s,%s];4:circle;4:size1;4:rectangle
'λx.apply(and[iff[circle,apply(same_shape,x.o)],size1],iota(filter(filter(filter(x.s, size3), not[or[rectangle,circle]]), size2)))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:or[%s,%s];4:rectangle;4:circle;4:size2
'λx.apply(and[size1,and[not[and[yellow,size1]],size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:yellow;4:size1;4:size2;1:%s.o;2:x
'λx.apply(or[iff[blue,green],rectangle],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:or[%s,%s];4:iff[%s,%s];4:blue;4:green;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.exists(or[yellow,and[and[size2,apply(same_shape,iota(x.s))],size1]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:yellow;4:and[%s,%s];4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size1;3:%s.s;2:x
'λx.exists(size2, filter(x.s, and[nor[not[size1],size1],or[not[blue],and[triangle,not[and[size2,rectangle]]]]]))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:not[%s];4:size1;4:size1;4:or[%s,%s];4:not[%s];4:blue;4:and[%s,%s];4:triangle;4:not[%s];4:and[%s,%s];4:size2;4:rectangle
'λx.exists(and[and[circle,size3],circle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:circle;4:size3;4:circle;3:%s.s;2:x
'λx.apply(triangle,iota(filter(x.s, and[rectangle,nor[size3,blue]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:nor[%s,%s];4:size3;4:blue
'λx.apply(not[nor[and[green,rectangle],not[size1]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:nor[%s,%s];4:and[%s,%s];4:green;4:rectangle;4:not[%s];4:size1;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, iff[yellow,size3]), apply(size-gt,x.o)))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:yellow;4:size3;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.forall(or[implies[size3,green],not[and[and[green,size1],blue]]],filter(x.s, iff[blue,and[and[green,rectangle],nor[and[and[yellow,or[triangle,and[size1,and[and[blue,size1],green]]]],circle],not[rectangle]]]]))'	0:forall(%s,%s);4:or[%s,%s];4:implies[%s,%s];4:size3;4:green;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:green;4:size1;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:green;4:rectangle;4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:or[%s,%s];4:triangle;4:and[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:blue;4:size1;4:green;4:circle;4:not[%s];4:rectangle
'λx.apply(nand[size2,and[and[and[green,triangle],size1],blue]],iota(filter(filter(x.s, circle), and[blue,size2])))'	0:apply(%s,%s);4:nand[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:triangle;4:size1;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:blue;4:size2
'λx.forall(and[triangle,and[triangle,size1]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:triangle;4:size1;3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(filter(filter(filter(x.s, apply(same_shape,x.o)), blue), apply(size-lt,iota(filter(filter(filter(filter(x.s, triangle), and[implies[rectangle,nor[nor[size1,size2],size3]],iff[circle,size2]]), rectangle), size2)))), not[or[size1,circle]]), and[or[blue,blue],size2])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:implies[%s,%s];4:rectangle;4:nor[%s,%s];4:nor[%s,%s];4:size1;4:size2;4:size3;4:iff[%s,%s];4:circle;4:size2;4:rectangle;4:size2;4:not[%s];4:or[%s,%s];4:size1;4:circle;4:and[%s,%s];4:or[%s,%s];4:blue;4:blue;4:size2
'λx.contains(iota(filter(filter(filter(filter(filter(x.s, and[circle,size2]), rectangle), size2), rectangle), rectangle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size2;4:rectangle;4:size2;4:rectangle;4:rectangle;3:%s.s;2:x
'λx.apply(rectangle,iota(filter(x.s, not[and[triangle,or[blue,nor[green,rectangle]]]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:triangle;4:or[%s,%s];4:blue;4:nor[%s,%s];4:green;4:rectangle
'λx.apply(iff[apply(same_shape,iota(x.s)),blue],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(and[not[apply(same_shape,iota(x.s))],size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(x.s, yellow), size2)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2
'λx.apply(iff[and[blue,implies[and[green,yellow],triangle]],and[nor[and[and[or[blue,and[and[implies[size1,rectangle],size2],rectangle]],and[nor[not[circle],apply(size-lt,iota(filter(x.s, size3)))],or[circle,size2]]],circle],apply(same_shape,iota(x.s))],not[apply(size-geq,x.o)]]],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:blue;4:implies[%s,%s];4:and[%s,%s];4:green;4:yellow;4:triangle;4:and[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:size1;4:rectangle;4:size2;4:rectangle;4:and[%s,%s];4:nor[%s,%s];4:not[%s];4:circle;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:circle;4:size2;4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.contains(x.o, filter(filter(filter(x.s, triangle), circle), implies[green,green]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle;4:implies[%s,%s];4:green;4:green
'λx.contains(iota(filter(filter(x.s, size2), circle)), filter(x.s, rectangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(not[apply(same_size,iota(x.s))],iota(filter(x.s, apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(and[or[and[not[size1],not[yellow]],triangle],not[apply(same_color,x.o)]],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:not[%s];4:size1;4:not[%s];4:yellow;4:triangle;4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(and[nand[green,green],blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:green;4:green;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(x.s, apply(same_size,iota(filter(filter(filter(filter(x.s, not[blue]), size1), circle), and[triangle,or[or[and[size3,not[triangle]],and[size3,triangle]],size1]]))))))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:size1;4:circle;4:and[%s,%s];4:triangle;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size3;4:not[%s];4:triangle;4:and[%s,%s];4:size3;4:triangle;4:size1
'λx.apply(yellow,iota(filter(filter(filter(filter(x.s, size2), size1), size1), size1)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1;4:size1;4:size1
'λx.exists(apply(size-leq,iota(x.s)), filter(filter(filter(x.s, size1), blue), circle))'	0:exists(%s, %s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue;4:circle
'λx.apply(and[rectangle,blue],iota(filter(filter(x.s, yellow), size2)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2
'λx.apply(implies[apply(same_size,iota(x.s)),blue],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(x.s, yellow), size2)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2
'λx.apply(size2,iota(filter(filter(x.s, yellow), size3)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size3
'λx.apply(size1,iota(filter(filter(x.s, yellow), green)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green
'λx.apply(and[blue,and[not[triangle],and[yellow,size3]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:not[%s];4:triangle;4:and[%s,%s];4:yellow;4:size3;1:%s.o;2:x
'λx.exists(and[iff[or[size1,and[not[rectangle],and[nor[apply(same_size,x.o),circle],not[and[blue,size1]]]]],triangle],not[rectangle]], filter(filter(filter(filter(filter(filter(x.s, and[or[size2,rectangle],green]), rectangle), and[size3,and[triangle,green]]), size2), and[yellow,yellow]), triangle))'	0:exists(%s, %s);4:and[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:size1;4:and[%s,%s];4:not[%s];4:rectangle;4:and[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;4:not[%s];4:and[%s,%s];4:blue;4:size1;4:triangle;4:not[%s];4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:size2;4:rectangle;4:green;4:rectangle;4:and[%s,%s];4:size3;4:and[%s,%s];4:triangle;4:green;4:size2;4:and[%s,%s];4:yellow;4:yellow;4:triangle
'λx.apply(rectangle,iota(filter(x.s, and[or[blue,rectangle],blue])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:blue;4:rectangle;4:blue
'λx.apply(rectangle,iota(filter(filter(filter(filter(filter(x.s, implies[size3,rectangle]), rectangle), yellow), rectangle), yellow)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size3;4:rectangle;4:rectangle;4:yellow;4:rectangle;4:yellow
'λx.apply(and[yellow,rectangle],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.exists(triangle, filter(filter(filter(x.s, triangle), apply(same_color,x.o)), and[size3,green]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:size3;4:green
'λx.exists(not[not[apply(same_shape,x.o)]], filter(x.s, blue))'	0:exists(%s, %s);4:not[%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(or[blue,and[not[and[size2,blue]],green]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:size2;4:blue;4:green;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(filter(x.s, rectangle), or[size1,circle]), iff[size2,not[circle]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:or[%s,%s];4:size1;4:circle;4:iff[%s,%s];4:size2;4:not[%s];4:circle
'λx.apply(not[iff[nor[apply(same_size,x.o),nor[circle,size2]],apply(size-gt,iota(filter(filter(filter(filter(x.s, size3), and[rectangle,nand[circle,or[size1,size3]]]), nor[circle,and[size3,size1]]), yellow)))]],iota(filter(filter(x.s, rectangle), size2)))'	0:apply(%s,%s);4:not[%s];4:iff[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:nor[%s,%s];4:circle;4:size2;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:rectangle;4:nand[%s,%s];4:circle;4:or[%s,%s];4:size1;4:size3;4:nor[%s,%s];4:circle;4:and[%s,%s];4:size3;4:size1;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2
'λx.exists(blue, filter(filter(x.s, or[yellow,and[yellow,size3]]), blue))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:and[%s,%s];4:yellow;4:size3;4:blue
'λx.apply(iff[not[not[green]],size3],iota(filter(filter(filter(x.s, and[apply(same_size,x.o),apply(size-lt,iota(filter(x.s, rectangle)))]), or[blue,blue]), apply(same_size,x.o))))'	0:apply(%s,%s);4:iff[%s,%s];4:not[%s];4:not[%s];4:green;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:or[%s,%s];4:blue;4:blue;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.exists(nand[blue,not[circle]], x.s)'	0:exists(%s, %s);4:nand[%s,%s];4:blue;4:not[%s];4:circle;3:%s.s;2:x
'λx.apply(iff[size3,nor[size1,and[blue,triangle]]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:size3;4:nor[%s,%s];4:size1;4:and[%s,%s];4:blue;4:triangle;1:%s.o;2:x
'λx.apply(nand[circle,and[not[and[size3,triangle]],rectangle]],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:circle;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:size3;4:triangle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_size,iota(filter(filter(x.s, rectangle), apply(same_color,iota(x.s))))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(yellow,iota(filter(x.s, apply(same_size,x.o))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(and[not[implies[yellow,or[nand[not[and[size1,apply(size-gt,iota(filter(x.s, green)))]],apply(same_size,iota(x.s))],triangle]]],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:implies[%s,%s];4:yellow;4:or[%s,%s];4:nand[%s,%s];4:not[%s];4:and[%s,%s];4:size1;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:triangle;4:size1;1:%s.o;2:x
'λx.apply(nor[blue,yellow],iota(filter(filter(x.s, and[circle,size2]), size1)))'	0:apply(%s,%s);4:nor[%s,%s];4:blue;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size2;4:size1
'λx.apply(triangle,iota(filter(x.s, not[green])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green
'λx.apply(green,iota(filter(filter(filter(filter(filter(x.s, or[and[size3,yellow],rectangle]), triangle), or[size2,green]), iff[nand[triangle,blue],yellow]), yellow)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size3;4:yellow;4:rectangle;4:triangle;4:or[%s,%s];4:size2;4:green;4:iff[%s,%s];4:nand[%s,%s];4:triangle;4:blue;4:yellow;4:yellow
'λx.apply(and[apply(size-geq,iota(filter(x.s, or[rectangle,size2]))),yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:size2;4:yellow;1:%s.o;2:x
'λx.forall(blue,filter(x.s, apply(size-gt,iota(filter(x.s, yellow)))))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(not[rectangle],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(and[yellow,yellow], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:yellow;4:yellow;3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(filter(filter(filter(x.s, blue), size3), triangle), green), not[or[yellow,rectangle]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3;4:triangle;4:green;4:not[%s];4:or[%s,%s];4:yellow;4:rectangle
'λx.apply(and[apply(same_size,x.o),yellow],iota(filter(filter(filter(x.s, rectangle), not[circle]), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:circle;4:blue
'λx.forall(and[apply(same_shape,iota(filter(x.s, apply(same_size,iota(x.s))))),rectangle],filter(x.s, blue))'	0:forall(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(size2,iota(filter(filter(filter(x.s, size2), green), rectangle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green;4:rectangle
'λx.apply(and[blue,circle],iota(filter(x.s, not[iff[size3,rectangle]])))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:iff[%s,%s];4:size3;4:rectangle
'λx.apply(nor[rectangle,triangle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:rectangle;4:triangle;1:%s.o;2:x
'λx.apply(iff[size2,size1],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:size2;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[size2,blue],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:size2;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(or[and[green,size3],not[and[and[or[triangle,not[circle]],yellow],blue]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:green;4:size3;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:triangle;4:not[%s];4:circle;4:yellow;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(and[triangle,nand[or[and[and[or[size2,nor[and[or[triangle,size1],apply(size-geq,x.o)],not[size2]]],nor[size3,size3]],and[and[apply(same_size,x.o),apply(same_size,x.o)],yellow]],not[size3]],and[size2,and[rectangle,green]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:nand[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size2;4:nor[%s,%s];4:and[%s,%s];4:or[%s,%s];4:triangle;4:size1;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:not[%s];4:size2;4:nor[%s,%s];4:size3;4:size3;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow;4:not[%s];4:size3;4:and[%s,%s];4:size2;4:and[%s,%s];4:rectangle;4:green;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(x.s, apply(same_color,iota(filter(x.s, or[yellow,nor[triangle,size2]])))))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:nor[%s,%s];4:triangle;4:size2
'λx.empty(filter(filter(filter(filter(filter(x.s, size3), or[circle,circle]), apply(same_shape,iota(x.s))), blue), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:circle;4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:blue;4:rectangle
'λx.apply(nand[iff[circle,not[apply(size-lt,x.o)]],not[blue]],iota(filter(x.s, not[blue])))'	0:apply(%s,%s);4:nand[%s,%s];4:iff[%s,%s];4:circle;4:not[%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.empty(filter(filter(x.s, implies[nor[and[blue,and[green,green]],implies[and[apply(same_shape,iota(x.s)),circle],apply(size-leq,iota(x.s))]],blue]), not[size2]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:green;4:green;4:implies[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:blue;4:not[%s];4:size2
'λx.apply(and[or[and[triangle,implies[and[size3,implies[size3,yellow]],or[rectangle,size3]]],circle],green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:triangle;4:implies[%s,%s];4:and[%s,%s];4:size3;4:implies[%s,%s];4:size3;4:yellow;4:or[%s,%s];4:rectangle;4:size3;4:circle;4:green;1:iota(%s);3:%s.s;2:x
'λx.forall(blue,filter(filter(filter(x.s, yellow), size3), rectangle))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size3;4:rectangle
'λx.apply(implies[circle,and[and[green,green],green]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:green;4:green;4:green;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, and[apply(same_color,x.o),and[size2,or[or[circle,apply(same_size,x.o)],size3]]])), filter(filter(x.s, triangle), circle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:size2;4:or[%s,%s];4:or[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle
'λx.apply(or[rectangle,size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:size2;1:%s.o;2:x
'λx.apply(or[rectangle,size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:size3;1:%s.o;2:x
'λx.apply(or[rectangle,size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:size1;1:%s.o;2:x
'λx.apply(and[size2,circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:circle;1:%s.o;2:x
'λx.apply(and[yellow,size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[yellow,size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(and[yellow,size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[or[blue,or[size1,nand[size2,and[apply(same_size,iota(filter(x.s, or[and[circle,and[circle,not[and[size1,triangle]]]],and[size2,size3]]))),circle]]]],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:blue;4:or[%s,%s];4:size1;4:nand[%s,%s];4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:circle;4:not[%s];4:and[%s,%s];4:size1;4:triangle;4:and[%s,%s];4:size2;4:size3;4:circle;4:size2;1:%s.o;2:x
'λx.forall(rectangle,filter(x.s, triangle))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(or[size1,rectangle],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(not[not[not[and[apply(same_color,iota(x.s)),not[not[size2]]]]]],iota(filter(x.s, green)))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:not[%s];4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.contains(x.o, filter(filter(filter(x.s, triangle), apply(size-leq,iota(filter(x.s, triangle)))), triangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:triangle
'λx.contains(x.o, filter(x.s, or[yellow,or[and[triangle,triangle],or[or[apply(size-gt,iota(x.s)),and[or[and[yellow,and[size1,apply(same_shape,iota(x.s))]],size1],yellow]],size1]]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:or[%s,%s];4:and[%s,%s];4:triangle;4:triangle;4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size1;4:yellow;4:size1
'λx.apply(not[green],iota(filter(filter(filter(x.s, blue), green), circle)))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green;4:circle
'λx.contains(iota(x.s), filter(x.s, implies[and[size2,and[size3,and[size3,triangle]]],green]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:size3;4:and[%s,%s];4:size3;4:triangle;4:green
'λx.apply(apply(size-lt,iota(x.s)),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(or[rectangle,or[or[apply(size-gt,iota(x.s)),and[or[and[yellow,and[not[yellow],apply(same_shape,iota(x.s))]],size1],yellow]],size1]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:not[%s];4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size1;4:yellow;4:size1;1:%s.o;2:x
'λx.forall(and[size3,triangle],filter(filter(x.s, not[or[size1,not[yellow]]]), and[triangle,apply(size-gt,x.o)]))'	0:forall(%s,%s);4:and[%s,%s];4:size3;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:size1;4:not[%s];4:yellow;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.apply(yellow,iota(filter(x.s, and[size3,apply(size-geq,x.o)])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.apply(or[blue,circle],iota(filter(x.s, and[size2,size3])))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:size3
'λx.exists(and[and[size3,circle],not[size3]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:size3;4:circle;4:not[%s];4:size3;3:%s.s;2:x
'λx.empty(filter(x.s, nor[size2,implies[green,circle]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size2;4:implies[%s,%s];4:green;4:circle
'λx.contains(x.o, filter(filter(x.s, or[triangle,rectangle]), apply(same_size,x.o)))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(nor[size2,apply(same_shape,iota(filter(filter(filter(x.s, circle), yellow), apply(same_color,iota(x.s)))))],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(not[and[apply(same_shape,iota(filter(x.s, and[or[size3,rectangle],size1]))),and[rectangle,apply(same_size,x.o)]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:size3;4:rectangle;4:size1;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.forall(and[green,and[or[and[blue,apply(same_shape,x.o)],and[size2,rectangle]],size3]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:size2;4:rectangle;4:size3;3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(filter(x.s, and[rectangle,size1]), and[and[blue,and[green,nand[triangle,size1]]],blue]), or[size3,circle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:size1;4:and[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:green;4:nand[%s,%s];4:triangle;4:size1;4:blue;4:or[%s,%s];4:size3;4:circle
'λx.apply(or[size3,green],iota(filter(x.s, and[triangle,size1])))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:size1
'λx.contains(x.o, filter(x.s, apply(same_shape,iota(x.s))))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(filter(filter(filter(x.s, size3), or[circle,circle]), apply(same_shape,iota(x.s))), size3), rectangle), apply(same_color,iota(filter(x.s, yellow)))))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:circle;4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size3;4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(not[or[size3,and[blue,triangle]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:size3;4:and[%s,%s];4:blue;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[and[or[yellow,size2],size3],size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:yellow;4:size2;4:size3;4:size3;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, and[triangle,blue])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:blue
'λx.contains(iota(x.s), filter(filter(x.s, nand[rectangle,and[or[not[size2],size3],green]]), and[green,triangle]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:rectangle;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:size2;4:size3;4:green;4:and[%s,%s];4:green;4:triangle
'λx.empty(filter(filter(filter(x.s, rectangle), and[blue,not[rectangle]]), and[blue,yellow]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:blue;4:not[%s];4:rectangle;4:and[%s,%s];4:blue;4:yellow
'λx.apply(iff[and[rectangle,triangle],size1],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:rectangle;4:triangle;4:size1;1:%s.o;2:x
'λx.apply(implies[circle,and[size3,green]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:circle;4:and[%s,%s];4:size3;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(size-leq,x.o),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(x.s, and[green,yellow]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:yellow
'λx.apply(triangle,iota(filter(x.s, not[size3])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3
'λx.apply(not[and[size2,blue]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size2;4:blue;1:%s.o;2:x
'λx.exists(or[green,nor[yellow,blue]], filter(filter(x.s, triangle), yellow))'	0:exists(%s, %s);4:or[%s,%s];4:green;4:nor[%s,%s];4:yellow;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:yellow
'λx.apply(nand[not[and[size1,rectangle]],blue],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:not[%s];4:and[%s,%s];4:size1;4:rectangle;4:blue;1:%s.o;2:x
'λx.exists(triangle, filter(x.s, nand[nor[and[size2,not[or[size3,green]]],not[blue]],or[size2,apply(same_color,iota(x.s))]]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:size2;4:not[%s];4:or[%s,%s];4:size3;4:green;4:not[%s];4:blue;4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[iff[triangle,not[size1]],not[yellow]],not[size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:triangle;4:not[%s];4:size1;4:not[%s];4:yellow;4:not[%s];4:size3;1:%s.o;2:x
'λx.apply(and[triangle,apply(same_color,x.o)],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, size3), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle
'λx.empty(filter(filter(x.s, size1), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle
'λx.empty(filter(filter(x.s, size2), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:triangle
'λx.apply(or[triangle,green],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:green;1:iota(%s);3:%s.s;2:x
'λx.exists(and[green,apply(same_size,x.o)], filter(filter(x.s, circle), green))'	0:exists(%s, %s);4:and[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green
'λx.apply(green,iota(filter(x.s, and[triangle,rectangle])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:rectangle
'λx.empty(filter(filter(x.s, green), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue
'λx.exists(blue, filter(filter(x.s, size3), circle))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle
'λx.contains(iota(filter(x.s, triangle)), filter(x.s, or[size3,size3]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:size3
'λx.apply(and[size1,not[triangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:not[%s];4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(filter(filter(x.s, triangle), and[green,and[size2,size3]]), rectangle), not[not[circle]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:green;4:and[%s,%s];4:size2;4:size3;4:rectangle;4:not[%s];4:not[%s];4:circle
'λx.apply(rectangle,iota(filter(x.s, not[green])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green
'λx.contains(iota(filter(filter(filter(x.s, or[and[green,blue],apply(size-geq,x.o)]), green), triangle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:green;4:blue;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:green;4:triangle;3:%s.s;2:x
'λx.contains(x.o, filter(x.s, iff[or[size1,and[or[size2,size3],circle]],and[yellow,yellow]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:or[%s,%s];4:size1;4:and[%s,%s];4:or[%s,%s];4:size2;4:size3;4:circle;4:and[%s,%s];4:yellow;4:yellow
'λx.contains(iota(filter(x.s, blue)), filter(x.s, apply(size-geq,iota(filter(filter(filter(x.s, triangle), apply(same_color,iota(filter(filter(filter(x.s, rectangle), yellow), size3)))), rectangle)))))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:yellow;4:size3;4:rectangle
'λx.apply(or[not[implies[circle,not[size1]]],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:implies[%s,%s];4:circle;4:not[%s];4:size1;4:blue;1:%s.o;2:x
'λx.apply(and[size1,or[or[green,not[not[not[size2]]]],apply(same_shape,x.o)]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:or[%s,%s];4:or[%s,%s];4:green;4:not[%s];4:not[%s];4:not[%s];4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[triangle,rectangle],iota(filter(filter(filter(filter(x.s, rectangle), or[size1,circle]), iff[size2,not[circle]]), circle)))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:or[%s,%s];4:size1;4:circle;4:iff[%s,%s];4:size2;4:not[%s];4:circle;4:circle
'λx.forall(green,filter(filter(x.s, size2), implies[circle,not[size3]]))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:implies[%s,%s];4:circle;4:not[%s];4:size3
'λx.apply(iff[and[implies[or[apply(size-lt,iota(filter(filter(filter(x.s, size3), triangle), rectangle))),green],not[size3]],size3],rectangle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle;4:rectangle;4:green;4:not[%s];4:size3;4:size3;4:rectangle;1:%s.o;2:x
'λx.apply(or[yellow,triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:triangle;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, not[size3])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3
'λx.exists(blue, filter(x.s, size2))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.exists(blue, filter(x.s, size3))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(blue, filter(x.s, size1))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(blue, filter(x.s, green))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(not[apply(same_color,iota(x.s))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(iff[circle,or[not[and[size1,size3]],size2]],iota(filter(x.s, not[triangle])))'	0:apply(%s,%s);4:iff[%s,%s];4:circle;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:size1;4:size3;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.forall(size1,filter(x.s, and[and[green,nor[green,size1]],green]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:green;4:nor[%s,%s];4:green;4:size1;4:green
'λx.exists(and[circle,not[rectangle]], filter(filter(x.s, green), not[size2]))'	0:exists(%s, %s);4:and[%s,%s];4:circle;4:not[%s];4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:size2
'λx.apply(rectangle,iota(filter(filter(filter(filter(x.s, implies[size3,or[or[size1,size1],blue]]), apply(same_size,x.o)), size2), nor[apply(same_color,iota(x.s)),green])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size3;4:or[%s,%s];4:or[%s,%s];4:size1;4:size1;4:blue;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2;4:nor[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:green
'λx.apply(or[size1,and[blue,blue]],iota(filter(x.s, green)))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:and[%s,%s];4:blue;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.exists(apply(size-leq,iota(filter(x.s, and[not[circle],and[circle,triangle]]))), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:circle;4:and[%s,%s];4:circle;4:triangle;3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(filter(filter(x.s, blue), or[and[or[or[green,size2],not[nor[triangle,rectangle]]],and[apply(same_shape,x.o),yellow]],and[size2,or[not[circle],circle]]]), green), circle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:green;4:size2;4:not[%s];4:nor[%s,%s];4:triangle;4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow;4:and[%s,%s];4:size2;4:or[%s,%s];4:not[%s];4:circle;4:circle;4:green;4:circle
'λx.apply(not[and[and[and[yellow,and[not[or[circle,circle]],not[size3]]],nor[circle,or[triangle,or[or[not[and[triangle,size1]],size3],apply(same_size,iota(filter(x.s, triangle)))]]]],rectangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:not[%s];4:or[%s,%s];4:circle;4:circle;4:not[%s];4:size3;4:nor[%s,%s];4:circle;4:or[%s,%s];4:triangle;4:or[%s,%s];4:or[%s,%s];4:not[%s];4:and[%s,%s];4:triangle;4:size1;4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle;1:%s.o;2:x
'λx.apply(implies[apply(same_shape,iota(filter(filter(filter(filter(x.s, blue), size3), apply(same_size,iota(filter(filter(filter(filter(filter(x.s, size3), size2), size2), or[blue,rectangle]), or[not[or[size3,apply(same_size,x.o)]],triangle])))), yellow))),triangle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2;4:size2;4:or[%s,%s];4:blue;4:rectangle;4:or[%s,%s];4:not[%s];4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle;4:yellow;4:triangle;1:%s.o;2:x
'λx.empty(filter(x.s, and[and[not[and[size2,and[size2,green]]],or[nand[green,and[not[implies[size2,nand[blue,yellow]]],triangle]],green]],size3]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:size2;4:green;4:or[%s,%s];4:nand[%s,%s];4:green;4:and[%s,%s];4:not[%s];4:implies[%s,%s];4:size2;4:nand[%s,%s];4:blue;4:yellow;4:triangle;4:green;4:size3
'λx.apply(and[blue,and[size3,blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:size3;4:blue;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, apply(same_color,x.o)), size3)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3
'λx.apply(size1,iota(filter(x.s, and[triangle,yellow])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:yellow
'λx.exists(and[apply(same_size,iota(filter(x.s, size2))),nor[nor[circle,size3],not[circle]]], filter(filter(x.s, rectangle), blue))'	0:exists(%s, %s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:nor[%s,%s];4:nor[%s,%s];4:circle;4:size3;4:not[%s];4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue
'λx.apply(and[and[blue,size3],nand[and[size3,triangle],circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:size3;4:nand[%s,%s];4:and[%s,%s];4:size3;4:triangle;4:circle;1:%s.o;2:x
'λx.apply(iff[size3,and[green,triangle]],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:size3;4:and[%s,%s];4:green;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[apply(same_shape,x.o),or[blue,blue]],iota(filter(x.s, or[yellow,size2])))'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:blue;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:size2
'λx.empty(filter(filter(x.s, not[size3]), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;4:size1
'λx.apply(yellow,iota(filter(x.s, and[and[blue,and[or[size3,nor[triangle,circle]],size3]],rectangle])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:or[%s,%s];4:size3;4:nor[%s,%s];4:triangle;4:circle;4:size3;4:rectangle
'λx.apply(blue,iota(filter(x.s, apply(same_color,x.o))))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(not[nor[and[yellow,not[green]],iff[size2,and[apply(same_size,iota(filter(filter(filter(filter(x.s, blue), apply(same_color,x.o)), not[yellow]), size2))),size3]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:nor[%s,%s];4:and[%s,%s];4:yellow;4:not[%s];4:green;4:iff[%s,%s];4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:yellow;4:size2;4:size3;1:%s.o;2:x
'λx.forall(green,filter(x.s, yellow))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.contains(iota(x.s), filter(filter(x.s, size3), rectangle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle
'λx.apply(green,iota(filter(filter(filter(filter(x.s, not[size3]), not[and[blue,size1]]), size2), triangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;4:not[%s];4:and[%s,%s];4:blue;4:size1;4:size2;4:triangle
'λx.contains(iota(filter(filter(x.s, circle), apply(same_size,iota(filter(x.s, rectangle))))), filter(filter(x.s, size1), blue))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue
'λx.apply(and[and[triangle,size3],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:size3;4:yellow;1:%s.o;2:x
'λx.apply(implies[blue,and[not[not[size3]],nor[triangle,iff[apply(same_size,x.o),and[or[triangle,blue],not[circle]]]]]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:blue;4:and[%s,%s];4:not[%s];4:not[%s];4:size3;4:nor[%s,%s];4:triangle;4:iff[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:or[%s,%s];4:triangle;4:blue;4:not[%s];4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[green,rectangle],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(and[or[or[circle,triangle],implies[not[yellow],size2]],iff[size2,size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:circle;4:triangle;4:implies[%s,%s];4:not[%s];4:yellow;4:size2;4:iff[%s,%s];4:size2;4:size2;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(x.s, and[circle,size3]), or[or[size3,blue],yellow])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size3;4:or[%s,%s];4:or[%s,%s];4:size3;4:blue;4:yellow
'λx.exists(size1, filter(filter(filter(filter(filter(filter(x.s, size1), implies[circle,and[and[yellow,yellow],size2]]), blue), size2), size1), and[and[size2,rectangle],triangle]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:implies[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:yellow;4:yellow;4:size2;4:blue;4:size2;4:size1;4:and[%s,%s];4:and[%s,%s];4:size2;4:rectangle;4:triangle
'λx.apply(size3,iota(filter(filter(filter(filter(filter(x.s, triangle), nand[triangle,apply(same_shape,iota(x.s))]), yellow), triangle), or[not[blue],circle])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:nand[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:yellow;4:triangle;4:or[%s,%s];4:not[%s];4:blue;4:circle
'λx.apply(and[or[apply(same_shape,x.o),or[or[green,triangle],or[size2,apply(same_color,x.o)]]],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:or[%s,%s];4:green;4:triangle;4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3;1:%s.o;2:x
'λx.empty(filter(filter(x.s, and[blue,and[rectangle,blue]]), and[circle,blue]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:blue;4:and[%s,%s];4:circle;4:blue
'λx.contains(iota(x.s), filter(x.s, not[size3]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3
'λx.apply(nand[rectangle,size3],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:rectangle;4:size3;1:%s.o;2:x
'λx.apply(and[or[and[yellow,size1],size3],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:yellow;4:size1;4:size3;4:triangle;1:%s.o;2:x
'λx.apply(or[or[size2,or[yellow,size3]],blue],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:size2;4:or[%s,%s];4:yellow;4:size3;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(or[yellow,yellow],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(or[size2,and[circle,blue]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:and[%s,%s];4:circle;4:blue;1:%s.o;2:x
'λx.apply(and[size2,triangle],iota(filter(filter(filter(filter(filter(filter(filter(filter(x.s, not[yellow]), size1), or[green,rectangle]), triangle), not[and[not[yellow],yellow]]), not[or[rectangle,blue]]), rectangle), size2)))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:size1;4:or[%s,%s];4:green;4:rectangle;4:triangle;4:not[%s];4:and[%s,%s];4:not[%s];4:yellow;4:yellow;4:not[%s];4:or[%s,%s];4:rectangle;4:blue;4:rectangle;4:size2
'λx.apply(and[apply(size-gt,iota(filter(filter(x.s, rectangle), apply(same_size,x.o)))),apply(same_shape,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(or[rectangle,not[or[green,size3]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:not[%s];4:or[%s,%s];4:green;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[circle,and[circle,or[triangle,not[blue]]]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:circle;4:and[%s,%s];4:circle;4:or[%s,%s];4:triangle;4:not[%s];4:blue;1:%s.o;2:x
'λx.apply(and[rectangle,blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:blue;1:%s.o;2:x
'λx.forall(and[blue,size3],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:blue;4:size3;3:%s.s;2:x
'λx.forall(and[blue,size2],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:blue;4:size2;3:%s.s;2:x
'λx.empty(filter(x.s, and[rectangle,and[yellow,size1]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:yellow;4:size1
'λx.apply(or[implies[nor[triangle,apply(same_color,x.o)],size1],green],iota(filter(filter(x.s, triangle), size2)))'	0:apply(%s,%s);4:or[%s,%s];4:implies[%s,%s];4:nor[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2
'λx.apply(and[blue,or[blue,yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:or[%s,%s];4:blue;4:yellow;1:%s.o;2:x
'λx.apply(nand[and[yellow,not[and[or[blue,size2],triangle]]],or[yellow,implies[yellow,apply(same_size,x.o)]]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:yellow;4:not[%s];4:and[%s,%s];4:or[%s,%s];4:blue;4:size2;4:triangle;4:or[%s,%s];4:yellow;4:implies[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(apply(same_color,x.o),iota(filter(x.s, green)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.empty(filter(filter(x.s, size1), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1
'λx.empty(filter(filter(x.s, size2), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2
'λx.empty(filter(filter(x.s, size2), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1
'λx.empty(filter(filter(x.s, size2), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3
'λx.empty(filter(filter(x.s, size3), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2
'λx.empty(filter(filter(x.s, size3), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green
'λx.empty(filter(filter(x.s, size2), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green
'λx.apply(circle,iota(filter(filter(filter(filter(filter(x.s, blue), rectangle), green), size2), triangle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle;4:green;4:size2;4:triangle
'λx.apply(not[iff[apply(same_color,iota(filter(x.s, and[size2,rectangle]))),triangle]],iota(filter(filter(x.s, and[size3,blue]), or[or[green,triangle],and[size3,blue]])))'	0:apply(%s,%s);4:not[%s];4:iff[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:rectangle;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:blue;4:or[%s,%s];4:or[%s,%s];4:green;4:triangle;4:and[%s,%s];4:size3;4:blue
'λx.exists(not[not[size3]], filter(x.s, or[rectangle,yellow]))'	0:exists(%s, %s);4:not[%s];4:not[%s];4:size3;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:yellow
'λx.contains(iota(filter(filter(x.s, apply(same_shape,iota(x.s))), triangle)), filter(x.s, and[green,or[yellow,size1]]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:or[%s,%s];4:yellow;4:size1
'λx.apply(not[not[blue]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:blue;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(filter(x.s, circle), rectangle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(filter(x.s, and[rectangle,yellow]), rectangle), triangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:yellow;4:rectangle;4:triangle
'λx.exists(not[nand[and[circle,rectangle],circle]], filter(x.s, size3))'	0:exists(%s, %s);4:not[%s];4:nand[%s,%s];4:and[%s,%s];4:circle;4:rectangle;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(not[size1],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.contains(iota(filter(filter(x.s, apply(same_color,iota(x.s))), blue)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:blue;3:%s.s;2:x
'λx.apply(implies[and[size2,apply(same_color,iota(filter(x.s, size1)))],blue],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue;1:%s.o;2:x
'λx.exists(and[green,blue], filter(x.s, rectangle))'	0:exists(%s, %s);4:and[%s,%s];4:green;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(apply(same_color,iota(filter(x.s, or[size1,triangle]))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.exists(not[circle], x.s)'	0:exists(%s, %s);4:not[%s];4:circle;3:%s.s;2:x
'λx.apply(and[rectangle,and[triangle,size1]],iota(filter(filter(filter(filter(filter(x.s, and[and[or[apply(same_color,x.o),circle],size1],apply(same_size,x.o)]), green), green), or[rectangle,or[and[not[size2],yellow],nand[apply(size-leq,x.o),size3]]]), triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:triangle;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;4:green;4:or[%s,%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:size2;4:yellow;4:nand[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size3;4:triangle
'λx.exists(blue, filter(filter(x.s, not[size1]), apply(size-lt,iota(x.s))))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(x.s, implies[size1,size2])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size1;4:size2
'λx.apply(yellow,iota(filter(filter(filter(x.s, apply(same_color,iota(filter(x.s, size3)))), size3), not[yellow])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3;4:not[%s];4:yellow
'λx.exists(and[size3,triangle], filter(filter(x.s, triangle), apply(same_color,x.o)))'	0:exists(%s, %s);4:and[%s,%s];4:size3;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(apply(same_size,x.o),iota(filter(filter(filter(filter(x.s, size1), size2), and[yellow,rectangle]), blue)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2;4:and[%s,%s];4:yellow;4:rectangle;4:blue
'λx.apply(implies[size1,and[apply(size-geq,iota(x.s)),blue]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size1;4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.apply(apply(size-lt,iota(filter(filter(x.s, and[size2,implies[triangle,not[and[circle,yellow]]]]), or[not[size3],size3]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:implies[%s,%s];4:triangle;4:not[%s];4:and[%s,%s];4:circle;4:yellow;4:or[%s,%s];4:not[%s];4:size3;4:size3;1:%s.o;2:x
'λx.empty(filter(filter(x.s, blue), apply(same_color,x.o)))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(and[and[green,and[rectangle,circle]],blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:rectangle;4:circle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_size,iota(filter(filter(filter(filter(filter(x.s, triangle), nor[size2,apply(same_color,iota(x.s))]), rectangle), not[yellow]), size2))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:nor[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:rectangle;4:not[%s];4:yellow;4:size2;1:%s.o;2:x
'λx.exists(not[and[size3,green]], x.s)'	0:exists(%s, %s);4:not[%s];4:and[%s,%s];4:size3;4:green;3:%s.s;2:x
'λx.apply(size1,iota(filter(x.s, not[yellow])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow
'λx.apply(circle,iota(filter(x.s, not[size3])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3
'λx.exists(circle, filter(filter(filter(x.s, and[blue,yellow]), size1), yellow))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:yellow;4:size1;4:yellow
'λx.apply(or[and[rectangle,blue],size2],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:rectangle;4:blue;4:size2;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(x.s, or[or[and[size2,triangle],size2],size3]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size2;4:triangle;4:size2;4:size3
'λx.apply(implies[circle,blue],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:circle;4:blue;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(x.s, yellow), circle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle
'λx.apply(triangle,iota(filter(x.s, apply(size-lt,iota(filter(x.s, nor[rectangle,yellow]))))))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:rectangle;4:yellow
'λx.contains(x.o, filter(x.s, nand[not[nor[size3,size2]],and[apply(same_color,x.o),green]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:not[%s];4:nor[%s,%s];4:size3;4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green
'λx.apply(apply(same_color,x.o),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(filter(filter(filter(x.s, apply(same_size,iota(x.s))), green), size1), size2), triangle), or[or[and[blue,and[iff[nor[yellow,green],blue],circle]],not[rectangle]],or[and[size3,and[size1,size1]],triangle]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:green;4:size1;4:size2;4:triangle;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:iff[%s,%s];4:nor[%s,%s];4:yellow;4:green;4:blue;4:circle;4:not[%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:size1;4:size1;4:triangle;3:%s.s;2:x
'λx.forall(yellow,filter(filter(filter(filter(x.s, size1), size2), circle), or[or[apply(same_size,iota(x.s)),rectangle],size3]))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2;4:circle;4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:rectangle;4:size3
'λx.apply(and[rectangle,apply(same_shape,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(filter(x.s, rectangle), nand[nand[and[and[and[circle,rectangle],yellow],size1],green],or[and[or[apply(same_shape,iota(filter(filter(x.s, triangle), apply(same_size,iota(filter(x.s, blue)))))),green],size2],yellow]]), size2)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:nand[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:rectangle;4:yellow;4:size1;4:green;4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green;4:size2;4:yellow;4:size2
'λx.apply(nand[and[circle,size1],yellow],iota(filter(filter(filter(x.s, rectangle), size1), circle)))'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:circle;4:size1;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1;4:circle
'λx.exists(iff[and[not[size3],triangle],rectangle], filter(filter(x.s, implies[circle,and[size1,size3]]), size3))'	0:exists(%s, %s);4:iff[%s,%s];4:and[%s,%s];4:not[%s];4:size3;4:triangle;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:circle;4:and[%s,%s];4:size1;4:size3;4:size3
'λx.forall(circle,filter(x.s, and[circle,size2]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size2
'λx.exists(apply(same_color,iota(x.s)), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.exists(green, filter(filter(filter(x.s, and[size1,not[triangle]]), size2), and[size1,yellow]))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:not[%s];4:triangle;4:size2;4:and[%s,%s];4:size1;4:yellow
'λx.apply(nor[triangle,and[size3,or[yellow,circle]]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:triangle;4:and[%s,%s];4:size3;4:or[%s,%s];4:yellow;4:circle;1:%s.o;2:x
'λx.exists(circle, filter(filter(x.s, rectangle), yellow))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:yellow
'λx.empty(filter(x.s, and[nor[blue,size3],apply(same_color,iota(x.s))]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:blue;4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[circle,size3],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:circle;4:size3;1:%s.o;2:x
'λx.apply(or[or[green,size3],and[and[not[yellow],yellow],and[apply(same_size,iota(x.s)),rectangle]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:green;4:size3;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:yellow;4:yellow;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:rectangle;1:%s.o;2:x
'λx.apply(nand[green,and[or[and[and[and[size3,or[apply(same_color,x.o),size3]],implies[apply(size-leq,iota(x.s)),not[blue]]],size2],triangle],and[rectangle,nor[size3,yellow]]]],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:green;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3;4:implies[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:not[%s];4:blue;4:size2;4:triangle;4:and[%s,%s];4:rectangle;4:nor[%s,%s];4:size3;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(x.s, implies[size1,rectangle]), size1), yellow))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size1;4:rectangle;4:size1;4:yellow
'λx.contains(iota(x.s), filter(x.s, and[size1,and[green,apply(same_size,x.o)]]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:and[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, not[yellow])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow
'λx.apply(and[not[and[or[nor[implies[triangle,nand[implies[size1,iff[size1,apply(size-leq,x.o)]],and[blue,apply(size-gt,iota(filter(x.s, and[or[size1,or[yellow,blue]],green])))]]],size3],triangle],size2]],yellow],iota(filter(filter(x.s, blue), yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:implies[%s,%s];4:triangle;4:nand[%s,%s];4:implies[%s,%s];4:size1;4:iff[%s,%s];4:size1;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:and[%s,%s];4:blue;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:size1;4:or[%s,%s];4:yellow;4:blue;4:green;4:size3;4:triangle;4:size2;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow
'λx.apply(blue,iota(filter(filter(x.s, apply(same_size,x.o)), not[or[size2,and[and[size3,implies[green,and[yellow,size3]]],size2]]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:not[%s];4:or[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:size3;4:implies[%s,%s];4:green;4:and[%s,%s];4:yellow;4:size3;4:size2
'λx.apply(size1,iota(filter(filter(x.s, yellow), and[or[size2,or[rectangle,green]],green])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:or[%s,%s];4:size2;4:or[%s,%s];4:rectangle;4:green;4:green
'λx.contains(iota(x.s), filter(filter(x.s, triangle), blue))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue
'λx.apply(or[triangle,triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:triangle;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(filter(x.s, triangle), and[circle,circle]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:circle;4:circle;1:%s.o;2:x
'λx.apply(nor[or[or[or[not[implies[apply(same_size,x.o),blue]],and[and[size3,size2],or[and[yellow,and[yellow,size1]],size3]]],circle],size1],yellow],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:not[%s];4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;4:and[%s,%s];4:and[%s,%s];4:size3;4:size2;4:or[%s,%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:yellow;4:size1;4:size3;4:circle;4:size1;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(and[triangle,or[apply(same_size,iota(filter(x.s, apply(same_color,x.o)))),size1]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(x.s, and[size2,apply(same_shape,iota(filter(filter(x.s, size1), triangle)))])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle
'λx.exists(apply(same_color,iota(filter(x.s, rectangle))), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, triangle), apply(size-geq,x.o)))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.apply(and[circle,circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(x.s, apply(same_size,iota(x.s)))))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.forall(apply(size-lt,x.o),filter(filter(x.s, size2), or[green,yellow]))'	0:forall(%s,%s);4:apply(%s,%s);5:size-lt;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:green;4:yellow
'λx.forall(or[not[or[size2,size3]],and[green,triangle]],filter(x.s, green))'	0:forall(%s,%s);4:or[%s,%s];4:not[%s];4:or[%s,%s];4:size2;4:size3;4:and[%s,%s];4:green;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.exists(not[and[or[apply(size-lt,iota(filter(filter(x.s, and[size2,rectangle]), or[not[size3],blue]))),green],circle]], x.s)'	0:exists(%s, %s);4:not[%s];4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:rectangle;4:or[%s,%s];4:not[%s];4:size3;4:blue;4:green;4:circle;3:%s.s;2:x
'λx.apply(nand[rectangle,blue],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:rectangle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(or[rectangle,rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:rectangle;1:%s.o;2:x
'λx.apply(not[triangle],iota(filter(filter(x.s, size1), rectangle)))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle
'λx.apply(or[or[size2,green],rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:size2;4:green;4:rectangle;1:%s.o;2:x
'λx.apply(size3,iota(filter(x.s, and[and[green,and[triangle,apply(size-geq,x.o)]],circle])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:circle
'λx.apply(circle,iota(filter(filter(x.s, implies[and[blue,size2],and[triangle,not[size1]]]), and[yellow,circle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:and[%s,%s];4:blue;4:size2;4:and[%s,%s];4:triangle;4:not[%s];4:size1;4:and[%s,%s];4:yellow;4:circle
'λx.apply(nand[circle,triangle],iota(filter(x.s, and[nor[size1,size3],green])))'	0:apply(%s,%s);4:nand[%s,%s];4:circle;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:size1;4:size3;4:green
'λx.apply(size3,iota(filter(filter(filter(x.s, circle), not[and[blue,size3]]), size3)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:and[%s,%s];4:blue;4:size3;4:size3
'λx.apply(and[size1,blue],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.empty(filter(x.s, or[rectangle,iff[green,green]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:iff[%s,%s];4:green;4:green
'λx.contains(x.o, filter(x.s, and[green,size1]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:size1
'λx.apply(and[yellow,blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:blue;1:%s.o;2:x
'λx.apply(and[rectangle,and[apply(same_shape,iota(filter(x.s, size1))),green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green;1:%s.o;2:x
'λx.apply(and[and[and[blue,and[rectangle,circle]],or[green,circle]],apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:circle;4:or[%s,%s];4:green;4:circle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(filter(x.s, size2), or[size1,size1]), blue)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:size1;4:size1;4:blue
'λx.exists(not[rectangle], filter(x.s, and[and[or[not[green],implies[green,green]],triangle],circle]))'	0:exists(%s, %s);4:not[%s];4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:not[%s];4:green;4:implies[%s,%s];4:green;4:green;4:triangle;4:circle
'λx.apply(and[circle,apply(same_size,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(or[blue,and[size2,size1]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:and[%s,%s];4:size2;4:size1;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, blue), and[triangle,yellow]), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:triangle;4:yellow;4:rectangle
'λx.apply(and[green,not[yellow]],iota(filter(filter(x.s, size1), circle)))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle
'λx.apply(circle,iota(filter(x.s, not[green])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green
'λx.apply(and[apply(same_shape,iota(x.s)),rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:rectangle;1:%s.o;2:x
'λx.apply(nor[blue,apply(same_shape,iota(filter(x.s, not[rectangle])))],iota(filter(x.s, green)))'	0:apply(%s,%s);4:nor[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[or[and[yellow,or[size3,and[not[triangle],nor[iff[rectangle,rectangle],size1]]]],size1],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:yellow;4:or[%s,%s];4:size3;4:and[%s,%s];4:not[%s];4:triangle;4:nor[%s,%s];4:iff[%s,%s];4:rectangle;4:rectangle;4:size1;4:size1;4:rectangle;1:%s.o;2:x
'λx.apply(iff[yellow,rectangle],iota(filter(x.s, not[apply(same_color,iota(x.s))])))'	0:apply(%s,%s);4:iff[%s,%s];4:yellow;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(and[not[rectangle],size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:rectangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(and[not[rectangle],size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:rectangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, green), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow
'λx.apply(blue,iota(filter(filter(filter(x.s, size1), triangle), or[blue,or[size1,nand[size2,and[apply(same_size,iota(filter(x.s, or[and[circle,and[circle,not[and[size1,triangle]]]],and[size2,size3]]))),circle]]]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle;4:or[%s,%s];4:blue;4:or[%s,%s];4:size1;4:nand[%s,%s];4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:circle;4:not[%s];4:and[%s,%s];4:size1;4:triangle;4:and[%s,%s];4:size2;4:size3;4:circle
'λx.exists(or[and[and[circle,size3],green],green], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:size3;4:green;4:green;3:%s.s;2:x
'λx.empty(filter(x.s, and[implies[or[nor[or[size1,blue],size1],nand[not[nand[yellow,size3]],iff[and[triangle,and[blue,apply(same_shape,x.o)]],and[apply(size-leq,iota(filter(x.s, size1))),rectangle]]]],not[triangle]],green]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:size1;4:blue;4:size1;4:nand[%s,%s];4:not[%s];4:nand[%s,%s];4:yellow;4:size3;4:iff[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle;4:not[%s];4:triangle;4:green
'λx.apply(apply(same_size,iota(filter(x.s, green))),iota(filter(x.s, not[iff[and[triangle,size1],size1]])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:iff[%s,%s];4:and[%s,%s];4:triangle;4:size1;4:size1
'λx.apply(and[blue,circle],iota(filter(x.s, apply(same_size,x.o))))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.forall(size2,filter(filter(x.s, circle), not[circle]))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:circle
'λx.forall(blue,x.s)'	0:forall(%s,%s);4:blue;3:%s.s;2:x
'λx.exists(yellow, filter(x.s, not[size2]))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2
'λx.apply(size1,iota(filter(x.s, or[triangle,apply(same_color,iota(x.s))])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size2,triangle],iota(filter(x.s, green)))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.empty(filter(filter(filter(filter(x.s, green), rectangle), size1), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle;4:size1;4:rectangle
'λx.apply(and[size3,circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:circle;1:%s.o;2:x
'λx.exists(size2, filter(filter(filter(filter(x.s, rectangle), and[nor[and[green,not[circle]],size2],apply(same_color,iota(filter(x.s, not[and[or[size1,blue],rectangle]])))]), triangle), nand[triangle,implies[and[not[rectangle],or[green,rectangle]],size2]]))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:green;4:not[%s];4:circle;4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:or[%s,%s];4:size1;4:blue;4:rectangle;4:triangle;4:nand[%s,%s];4:triangle;4:implies[%s,%s];4:and[%s,%s];4:not[%s];4:rectangle;4:or[%s,%s];4:green;4:rectangle;4:size2
'λx.forall(and[apply(same_size,x.o),not[size1]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:not[%s];4:size1;3:%s.s;2:x
'λx.apply(and[size1,circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:circle;1:%s.o;2:x
'λx.apply(and[rectangle,apply(same_size,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(not[triangle],iota(filter(x.s, or[apply(same_color,x.o),circle])))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle
'λx.apply(and[or[triangle,size3],and[and[nor[size3,rectangle],rectangle],rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:triangle;4:size3;4:and[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:size3;4:rectangle;4:rectangle;4:rectangle;1:%s.o;2:x
'λx.exists(and[iff[green,not[and[iff[green,triangle],apply(same_size,x.o)]]],blue], filter(filter(filter(filter(filter(x.s, size2), circle), size2), blue), circle))'	0:exists(%s, %s);4:and[%s,%s];4:iff[%s,%s];4:green;4:not[%s];4:and[%s,%s];4:iff[%s,%s];4:green;4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle;4:size2;4:blue;4:circle
'λx.contains(iota(x.s), filter(x.s, or[or[blue,and[triangle,or[blue,and[not[size3],or[size2,apply(same_color,iota(filter(filter(filter(x.s, size3), and[size2,size3]), and[and[not[not[apply(same_size,x.o)]],not[or[green,and[circle,or[circle,rectangle]]]]],and[and[circle,size3],circle]])))]]]]],green]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:blue;4:and[%s,%s];4:triangle;4:or[%s,%s];4:blue;4:and[%s,%s];4:not[%s];4:size3;4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:size2;4:size3;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:not[%s];4:or[%s,%s];4:green;4:and[%s,%s];4:circle;4:or[%s,%s];4:circle;4:rectangle;4:and[%s,%s];4:and[%s,%s];4:circle;4:size3;4:circle;4:green
'λx.apply(circle,iota(filter(filter(x.s, blue), size3)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3
'λx.apply(and[not[and[circle,rectangle]],triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:circle;4:rectangle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(x.s, and[not[and[apply(same_shape,x.o),rectangle]],triangle]), green), not[blue]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle;4:triangle;4:green;4:not[%s];4:blue
'λx.apply(and[circle,green],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.exists(and[apply(same_color,iota(filter(filter(x.s, and[size2,implies[size3,size1]]), or[not[size3],size3]))),size2], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:implies[%s,%s];4:size3;4:size1;4:or[%s,%s];4:not[%s];4:size3;4:size3;4:size2;3:%s.s;2:x
'λx.forall(and[and[circle,triangle],and[apply(size-lt,iota(x.s)),and[not[green],nand[green,and[nor[circle,size3],green]]]]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:triangle;4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:green;4:nand[%s,%s];4:green;4:and[%s,%s];4:nor[%s,%s];4:circle;4:size3;4:green;3:%s.s;2:x
'λx.apply(or[and[and[size1,yellow],triangle],green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:yellow;4:triangle;4:green;1:%s.o;2:x
'λx.apply(or[or[yellow,circle],yellow],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:yellow;4:circle;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(or[circle,or[size1,size3]],iota(filter(x.s, and[or[size2,triangle],apply(same_size,x.o)])))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:or[%s,%s];4:size1;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:size2;4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(filter(x.s, yellow), or[size1,apply(same_shape,x.o)]), or[size2,yellow])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:size2;4:yellow
'λx.apply(implies[triangle,apply(size-leq,iota(x.s))],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:triangle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.contains(iota(filter(x.s, triangle)), filter(x.s, apply(same_size,iota(x.s))))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size3,not[size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:not[%s];4:size1;1:%s.o;2:x
'λx.apply(not[and[blue,or[size3,size3]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:blue;4:or[%s,%s];4:size3;4:size3;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(x.s), filter(x.s, iff[size1,green]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size1;4:green
'λx.empty(filter(filter(filter(x.s, size1), triangle), and[nor[green,size3],circle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle;4:and[%s,%s];4:nor[%s,%s];4:green;4:size3;4:circle
'λx.apply(nand[green,triangle],iota(filter(filter(filter(x.s, or[nor[green,blue],rectangle]), and[rectangle,apply(same_color,x.o)]), size2)))'	0:apply(%s,%s);4:nand[%s,%s];4:green;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:nor[%s,%s];4:green;4:blue;4:rectangle;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size2
'λx.empty(filter(filter(filter(filter(filter(x.s, size3), and[circle,size3]), rectangle), triangle), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:circle;4:size3;4:rectangle;4:triangle;4:triangle
'λx.apply(yellow,iota(filter(filter(filter(x.s, implies[triangle,triangle]), and[not[yellow],apply(size-leq,x.o)]), size1)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:triangle;4:triangle;4:and[%s,%s];4:not[%s];4:yellow;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size1
'λx.apply(and[size3,triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size1,triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(x.s, nand[not[size1],size1])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:not[%s];4:size1;4:size1
'λx.apply(and[blue,and[blue,and[blue,circle]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:blue;4:and[%s,%s];4:blue;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[circle,not[or[size3,rectangle]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:not[%s];4:or[%s,%s];4:size3;4:rectangle;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, size3), not[or[and[triangle,green],not[blue]]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:triangle;4:green;4:not[%s];4:blue
'λx.apply(or[blue,blue],iota(filter(x.s, and[apply(same_shape,x.o),apply(same_size,x.o)])))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(filter(filter(x.s, size1), size1), triangle), blue)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1;4:triangle;4:blue
'λx.empty(filter(filter(filter(filter(x.s, nor[circle,size2]), apply(same_color,iota(filter(filter(filter(filter(x.s, size3), and[rectangle,nand[circle,or[size1,size3]]]), nor[circle,and[size3,rectangle]]), yellow)))), green), and[yellow,rectangle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:circle;4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:rectangle;4:nand[%s,%s];4:circle;4:or[%s,%s];4:size1;4:size3;4:nor[%s,%s];4:circle;4:and[%s,%s];4:size3;4:rectangle;4:yellow;4:green;4:and[%s,%s];4:yellow;4:rectangle
'λx.apply(implies[implies[rectangle,circle],size1],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:implies[%s,%s];4:rectangle;4:circle;4:size1;1:%s.o;2:x
'λx.apply(and[and[size3,or[yellow,nand[blue,implies[apply(same_size,iota(x.s)),circle]]]],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size3;4:or[%s,%s];4:yellow;4:nand[%s,%s];4:blue;4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:circle;4:yellow;1:%s.o;2:x
'λx.apply(and[size2,triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(x.s, iff[or[size1,rectangle],triangle]), green)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:or[%s,%s];4:size1;4:rectangle;4:triangle;4:green
'λx.empty(filter(x.s, iff[or[size2,nor[nor[apply(same_color,iota(filter(filter(x.s, and[nor[and[size1,and[size2,blue]],size1],or[not[blue],and[triangle,not[and[or[blue,blue],triangle]]]]]), nor[and[green,circle],apply(same_shape,x.o)]))),size1],rectangle]],or[green,rectangle]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:or[%s,%s];4:size2;4:nor[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:size2;4:blue;4:size1;4:or[%s,%s];4:not[%s];4:blue;4:and[%s,%s];4:triangle;4:not[%s];4:and[%s,%s];4:or[%s,%s];4:blue;4:blue;4:triangle;4:nor[%s,%s];4:and[%s,%s];4:green;4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;4:rectangle;4:or[%s,%s];4:green;4:rectangle
'λx.forall(not[triangle],filter(filter(filter(filter(x.s, or[not[apply(same_color,iota(filter(x.s, and[green,or[size2,and[size2,circle]]])))],not[green]]), nand[size1,size2]), or[rectangle,size2]), rectangle))'	0:forall(%s,%s);4:not[%s];4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:or[%s,%s];4:size2;4:and[%s,%s];4:size2;4:circle;4:not[%s];4:green;4:nand[%s,%s];4:size1;4:size2;4:or[%s,%s];4:rectangle;4:size2;4:rectangle
'λx.apply(size3,iota(filter(x.s, and[green,triangle])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:triangle
'λx.contains(iota(filter(x.s, and[apply(same_shape,x.o),not[green]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:green;3:%s.s;2:x
'λx.exists(and[not[blue],size3], filter(x.s, yellow))'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:blue;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(circle,iota(filter(x.s, nor[iff[size1,yellow],blue])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:iff[%s,%s];4:size1;4:yellow;4:blue
'λx.apply(nand[green,triangle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:green;4:triangle;1:%s.o;2:x
'λx.apply(and[not[size1],or[size2,nand[green,size1]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size1;4:or[%s,%s];4:size2;4:nand[%s,%s];4:green;4:size1;1:%s.o;2:x
'λx.apply(and[size1,or[apply(same_color,iota(filter(filter(x.s, size1), apply(size-gt,iota(x.s))))),rectangle]],iota(filter(filter(x.s, blue), yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow
'λx.apply(and[nor[green,green],apply(same_shape,iota(filter(x.s, circle)))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:green;4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;1:%s.o;2:x
'λx.apply(and[yellow,circle],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[not[not[size2]],and[nor[circle,green],and[size2,apply(same_color,iota(filter(x.s, size3)))]]],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:not[%s];4:size2;4:and[%s,%s];4:nor[%s,%s];4:circle;4:green;4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(apply(same_size,x.o),iota(filter(filter(x.s, size3), blue)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue
'λx.apply(or[rectangle,not[or[rectangle,size3]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:not[%s];4:or[%s,%s];4:rectangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(filter(x.s, or[iff[rectangle,triangle],nand[blue,size2]]), blue), and[green,or[size2,or[size3,blue]]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:iff[%s,%s];4:rectangle;4:triangle;4:nand[%s,%s];4:blue;4:size2;4:blue;4:and[%s,%s];4:green;4:or[%s,%s];4:size2;4:or[%s,%s];4:size3;4:blue
'λx.apply(and[size1,or[yellow,and[nand[apply(same_color,x.o),apply(same_size,iota(filter(x.s, triangle)))],blue]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:or[%s,%s];4:yellow;4:and[%s,%s];4:nand[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, implies[iff[or[apply(same_size,iota(filter(x.s, and[circle,triangle]))),and[size3,green]],size1],blue])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:triangle;4:and[%s,%s];4:size3;4:green;4:size1;4:blue
'λx.contains(iota(filter(x.s, and[size2,not[size3]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:not[%s];4:size3;3:%s.s;2:x
'λx.apply(apply(same_shape,iota(x.s)),iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(and[size3,size2],iota(filter(x.s, not[or[size2,rectangle]])))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:size2;4:rectangle
'λx.apply(and[yellow,and[apply(same_shape,iota(filter(filter(x.s, apply(size-gt,iota(filter(x.s, or[size2,and[and[apply(same_shape,iota(x.s)),and[rectangle,size2]],triangle]])))), yellow))),or[triangle,apply(same_size,x.o)]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:size2;4:triangle;4:yellow;4:or[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.contains(x.o, filter(filter(filter(filter(filter(filter(x.s, or[green,blue]), yellow), apply(same_size,iota(filter(x.s, nand[and[rectangle,rectangle],or[and[rectangle,size2],or[blue,circle]]])))), circle), circle), and[rectangle,and[rectangle,blue]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:blue;4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:and[%s,%s];4:rectangle;4:rectangle;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:size2;4:or[%s,%s];4:blue;4:circle;4:circle;4:circle;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:rectangle;4:blue
'λx.contains(iota(x.s), filter(filter(x.s, blue), and[circle,blue]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:circle;4:blue
'λx.apply(and[and[apply(same_color,iota(filter(filter(x.s, yellow), size2))),blue],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2;4:blue;4:rectangle;1:%s.o;2:x
'λx.forall(triangle,filter(x.s, apply(same_color,iota(filter(x.s, rectangle)))))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(or[not[size1],size1],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:size1;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[size3,apply(same_shape,x.o)],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[apply(size-gt,x.o),yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:yellow;1:%s.o;2:x
'λx.apply(or[nand[and[size1,iff[and[yellow,or[not[size3],size3]],and[rectangle,apply(size-lt,x.o)]]],iff[iff[not[or[not[blue],size2]],green],size3]],size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:size1;4:iff[%s,%s];4:and[%s,%s];4:yellow;4:or[%s,%s];4:not[%s];4:size3;4:size3;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:iff[%s,%s];4:iff[%s,%s];4:not[%s];4:or[%s,%s];4:not[%s];4:blue;4:size2;4:green;4:size3;4:size1;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(x.s, triangle), size1)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size1
'λx.forall(and[size1,yellow],filter(x.s, yellow))'	0:forall(%s,%s);4:and[%s,%s];4:size1;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.exists(rectangle, filter(x.s, or[size2,apply(size-lt,x.o)]))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.apply(nor[triangle,size3],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:triangle;4:size3;1:%s.o;2:x
'λx.apply(nor[triangle,size1],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:triangle;4:size1;1:%s.o;2:x
'λx.apply(implies[size3,triangle],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:size3;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(x.s, not[blue])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.exists(implies[or[size3,size3],blue], x.s)'	0:exists(%s, %s);4:implies[%s,%s];4:or[%s,%s];4:size3;4:size3;4:blue;3:%s.s;2:x
'λx.exists(or[and[blue,and[triangle,yellow]],not[size3]], filter(filter(x.s, rectangle), green))'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:triangle;4:yellow;4:not[%s];4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green
'λx.apply(and[and[size2,circle],implies[rectangle,size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size2;4:circle;4:implies[%s,%s];4:rectangle;4:size3;1:%s.o;2:x
'λx.apply(or[rectangle,not[and[green,size2]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:not[%s];4:and[%s,%s];4:green;4:size2;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(x.s, size1), blue), circle)), filter(x.s, green))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.forall(not[green],filter(x.s, not[yellow]))'	0:forall(%s,%s);4:not[%s];4:green;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow
'λx.empty(filter(filter(filter(filter(x.s, or[not[blue],blue]), size1), triangle), implies[blue,green]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:blue;4:blue;4:size1;4:triangle;4:implies[%s,%s];4:blue;4:green
'λx.exists(apply(same_shape,iota(filter(x.s, size1))), filter(x.s, not[blue]))'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.exists(green, filter(filter(x.s, not[circle]), not[size1]))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:not[%s];4:size1
'λx.forall(circle,filter(filter(filter(filter(filter(x.s, triangle), or[not[and[size3,iff[circle,rectangle]]],or[and[size2,apply(size-lt,iota(filter(x.s, rectangle)))],circle]]), triangle), and[size1,blue]), and[size1,not[nand[triangle,green]]]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:size3;4:iff[%s,%s];4:circle;4:rectangle;4:or[%s,%s];4:and[%s,%s];4:size2;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle;4:triangle;4:and[%s,%s];4:size1;4:blue;4:and[%s,%s];4:size1;4:not[%s];4:nand[%s,%s];4:triangle;4:green
'λx.apply(and[size2,blue],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(size3,iota(filter(filter(filter(filter(x.s, and[and[triangle,apply(same_shape,x.o)],green]), not[rectangle]), and[green,apply(same_shape,iota(x.s))]), rectangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green;4:not[%s];4:rectangle;4:and[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:rectangle
'λx.apply(iff[rectangle,not[triangle]],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:rectangle;4:not[%s];4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[yellow,yellow],iota(filter(filter(filter(filter(x.s, triangle), size2), size3), rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2;4:size3;4:rectangle
'λx.contains(iota(filter(filter(filter(x.s, green), and[size1,blue]), yellow)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:size1;4:blue;4:yellow;3:%s.s;2:x
'λx.empty(filter(filter(filter(filter(x.s, rectangle), and[apply(size-geq,x.o),not[nand[green,rectangle]]]), apply(size-leq,iota(x.s))), and[size1,and[blue,or[green,and[blue,and[rectangle,size2]]]]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:not[%s];4:nand[%s,%s];4:green;4:rectangle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:and[%s,%s];4:blue;4:or[%s,%s];4:green;4:and[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:size2
'λx.apply(and[size1,blue],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.empty(filter(x.s, or[and[size2,size3],apply(size-gt,x.o)]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size2;4:size3;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.apply(iff[nand[circle,triangle],circle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:nand[%s,%s];4:circle;4:triangle;4:circle;1:%s.o;2:x
'λx.apply(implies[size2,triangle],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:size2;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(x.s, triangle), size3)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3
'λx.apply(or[size2,rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:rectangle;1:%s.o;2:x
'λx.forall(rectangle,filter(x.s, blue))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.empty(filter(x.s, and[nor[blue,size3],apply(same_color,iota(filter(filter(filter(x.s, rectangle), yellow), yellow)))]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:blue;4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:yellow;4:yellow
'λx.apply(or[size1,rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:rectangle;1:%s.o;2:x
'λx.forall(triangle,filter(filter(filter(x.s, nor[green,or[not[implies[green,and[size2,nor[not[iff[green,not[green]]],circle]]]],green]]), or[iff[implies[and[circle,size1],and[green,size1]],apply(size-leq,x.o)],circle]), or[nor[circle,size1],rectangle]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:green;4:or[%s,%s];4:not[%s];4:implies[%s,%s];4:green;4:and[%s,%s];4:size2;4:nor[%s,%s];4:not[%s];4:iff[%s,%s];4:green;4:not[%s];4:green;4:circle;4:green;4:or[%s,%s];4:iff[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:circle;4:size1;4:and[%s,%s];4:green;4:size1;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:circle;4:or[%s,%s];4:nor[%s,%s];4:circle;4:size1;4:rectangle
'λx.apply(and[apply(same_color,x.o),apply(same_size,iota(x.s))],iota(filter(filter(x.s, size3), and[not[and[size2,and[rectangle,apply(same_color,x.o)]]],rectangle])))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle
'λx.forall(or[apply(size-geq,iota(x.s)),blue],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:blue;3:%s.s;2:x
'λx.apply(apply(size-geq,iota(filter(x.s, rectangle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;1:%s.o;2:x
'λx.apply(and[nand[rectangle,triangle],apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:rectangle;4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.forall(and[apply(same_color,iota(filter(filter(x.s, nor[yellow,triangle]), green))),size3],filter(filter(filter(x.s, and[yellow,green]), size2), circle))'	0:forall(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:yellow;4:triangle;4:green;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:green;4:size2;4:circle
'λx.forall(green,filter(filter(filter(filter(filter(x.s, and[size2,blue]), green), implies[green,or[rectangle,rectangle]]), or[nand[and[and[circle,and[and[and[apply(size-gt,iota(x.s)),size3],and[size3,blue]],yellow]],circle],yellow],size3]), size3))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:blue;4:green;4:implies[%s,%s];4:green;4:or[%s,%s];4:rectangle;4:rectangle;4:or[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:size3;4:blue;4:yellow;4:circle;4:yellow;4:size3;4:size3
'λx.apply(and[and[iff[triangle,green],apply(same_size,x.o)],rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:triangle;4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[apply(same_color,iota(filter(filter(filter(x.s, apply(size-gt,iota(x.s))), triangle), size3))),or[size1,rectangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:triangle;4:size3;4:or[%s,%s];4:size1;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(filter(x.s, and[green,and[size2,green]]), size3), size2)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:and[%s,%s];4:size2;4:green;4:size3;4:size2
'λx.exists(green, filter(filter(x.s, iff[green,not[rectangle]]), size2))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:green;4:not[%s];4:rectangle;4:size2
'λx.apply(or[triangle,not[size3]],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.forall(and[blue,rectangle],filter(filter(filter(filter(x.s, not[and[blue,size1]]), green), apply(same_color,iota(filter(x.s, and[yellow,circle])))), not[rectangle]))'	0:forall(%s,%s);4:and[%s,%s];4:blue;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:blue;4:size1;4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:circle;4:not[%s];4:rectangle
'λx.exists(or[circle,size1], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:circle;4:size1;3:%s.s;2:x
'λx.forall(and[size3,size1],filter(filter(filter(x.s, triangle), apply(size-geq,x.o)), circle))'	0:forall(%s,%s);4:and[%s,%s];4:size3;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:circle
'λx.exists(green, filter(filter(filter(filter(x.s, yellow), yellow), blue), size3))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:yellow;4:blue;4:size3
'λx.apply(implies[triangle,not[size2]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:triangle;4:not[%s];4:size2;1:iota(%s);3:%s.s;2:x
'λx.forall(blue,filter(filter(x.s, size1), apply(same_size,x.o)))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(apply(same_shape,x.o),iota(filter(filter(x.s, yellow), size1)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1
'λx.exists(blue, filter(filter(x.s, yellow), apply(same_shape,iota(filter(filter(x.s, and[triangle,apply(same_color,x.o)]), triangle)))))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle
'λx.contains(x.o, filter(filter(x.s, or[triangle,green]), apply(same_size,x.o)))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.contains(x.o, filter(filter(filter(x.s, not[size3]), rectangle), yellow))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;4:rectangle;4:yellow
'λx.apply(and[triangle,size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:size3;1:%s.o;2:x
'λx.apply(and[triangle,size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:size2;1:%s.o;2:x
'λx.apply(and[triangle,size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:size1;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(filter(filter(x.s, circle), yellow), apply(same_color,iota(x.s))))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(and[triangle,green],iota(filter(x.s, and[blue,rectangle])))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:rectangle
'λx.apply(not[not[triangle]],iota(filter(filter(filter(filter(filter(filter(filter(filter(filter(x.s, size2), circle), apply(same_color,x.o)), or[size3,yellow]), nor[and[size3,apply(same_size,x.o)],triangle]), circle), yellow), rectangle), size2)))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:or[%s,%s];4:size3;4:yellow;4:nor[%s,%s];4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle;4:circle;4:yellow;4:rectangle;4:size2
'λx.apply(size3,iota(filter(filter(filter(filter(filter(x.s, not[rectangle]), not[rectangle]), rectangle), circle), size1)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;4:not[%s];4:rectangle;4:rectangle;4:circle;4:size1
'λx.empty(filter(filter(filter(x.s, yellow), circle), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle;4:green
'λx.empty(filter(filter(filter(x.s, yellow), circle), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle;4:size3
'λx.empty(filter(filter(filter(filter(filter(x.s, iff[triangle,and[yellow,yellow]]), blue), yellow), apply(same_size,iota(filter(filter(x.s, and[rectangle,green]), green)))), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:triangle;4:and[%s,%s];4:yellow;4:yellow;4:blue;4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:green;4:green;4:yellow
'λx.apply(triangle,iota(filter(x.s, or[yellow,triangle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:triangle
'λx.forall(rectangle,filter(filter(filter(x.s, rectangle), and[and[and[apply(same_size,x.o),blue],blue],and[triangle,yellow]]), not[blue]))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;4:blue;4:and[%s,%s];4:triangle;4:yellow;4:not[%s];4:blue
'λx.apply(or[iff[triangle,blue],blue],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:iff[%s,%s];4:triangle;4:blue;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(filter(filter(filter(x.s, and[or[size2,apply(size-leq,iota(filter(x.s, green)))],yellow]), green), blue), not[and[size1,yellow]]), apply(same_size,x.o))))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:size2;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow;4:green;4:blue;4:not[%s];4:and[%s,%s];4:size1;4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(size2,iota(filter(x.s, and[green,yellow])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:yellow
'λx.apply(size2,iota(filter(filter(filter(x.s, rectangle), green), not[circle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green;4:not[%s];4:circle
'λx.apply(nor[circle,circle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:circle;4:circle;1:%s.o;2:x
'λx.apply(and[size2,and[apply(same_shape,x.o),and[apply(size-leq,x.o),size1]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size1;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(filter(filter(x.s, not[apply(same_color,iota(x.s))]), nor[size3,green]), blue), nand[size2,size2]), yellow), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:nor[%s,%s];4:size3;4:green;4:blue;4:nand[%s,%s];4:size2;4:size2;4:yellow;4:yellow
'λx.apply(size3,iota(filter(filter(x.s, not[and[green,size1]]), and[green,triangle])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:green;4:size1;4:and[%s,%s];4:green;4:triangle
'λx.apply(size2,iota(filter(filter(filter(x.s, blue), and[size3,and[blue,circle]]), nand[rectangle,rectangle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:size3;4:and[%s,%s];4:blue;4:circle;4:nand[%s,%s];4:rectangle;4:rectangle
'λx.apply(and[size2,size3],iota(filter(filter(filter(x.s, rectangle), iff[yellow,size3]), or[or[size1,size3],blue])))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:iff[%s,%s];4:yellow;4:size3;4:or[%s,%s];4:or[%s,%s];4:size1;4:size3;4:blue
'λx.exists(apply(same_size,x.o), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(iff[circle,size2],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:circle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[not[not[blue]],not[size2]],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:not[%s];4:blue;4:not[%s];4:size2;4:yellow;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, green), or[size3,green])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:size3;4:green
'λx.apply(size3,iota(filter(filter(filter(filter(filter(x.s, not[or[green,and[circle,or[circle,or[apply(same_size,x.o),green]]]]]), and[and[circle,size3],circle]), yellow), blue), or[size2,rectangle])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:green;4:and[%s,%s];4:circle;4:or[%s,%s];4:circle;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;4:and[%s,%s];4:and[%s,%s];4:circle;4:size3;4:circle;4:yellow;4:blue;4:or[%s,%s];4:size2;4:rectangle
'λx.apply(not[and[size1,size2]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size1;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[green,apply(size-leq,x.o)],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(filter(x.s, and[blue,not[rectangle]]), size2), yellow)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:not[%s];4:rectangle;4:size2;4:yellow
'λx.exists(circle, filter(x.s, circle))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[triangle,not[not[green]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:not[%s];4:not[%s];4:green;1:%s.o;2:x
'λx.apply(and[blue,and[size3,size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:size3;4:size1;1:%s.o;2:x
'λx.apply(or[and[or[size1,triangle],green],not[rectangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size1;4:triangle;4:green;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(x.s, circle), rectangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle
'λx.apply(size2,iota(filter(filter(x.s, circle), rectangle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle
'λx.contains(x.o, filter(filter(x.s, triangle), rectangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle
'λx.exists(green, filter(filter(x.s, and[circle,blue]), size2))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:blue;4:size2
'λx.forall(and[and[rectangle,green],or[apply(same_shape,x.o),or[blue,circle]]],filter(x.s, and[not[triangle],green]))'	0:forall(%s,%s);4:and[%s,%s];4:and[%s,%s];4:rectangle;4:green;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:blue;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:triangle;4:green
'λx.exists(apply(same_size,iota(x.s)), filter(filter(x.s, yellow), size2))'	0:exists(%s, %s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2
'λx.contains(x.o, filter(filter(x.s, not[implies[not[triangle],triangle]]), size3))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:implies[%s,%s];4:not[%s];4:triangle;4:triangle;4:size3
'λx.apply(and[and[size3,size2],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size3;4:size2;4:triangle;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(x.s, not[nor[yellow,or[size1,and[not[size1],rectangle]]]]), or[rectangle,blue]), triangle), and[not[size1],nand[size1,or[and[yellow,yellow],circle]]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:nor[%s,%s];4:yellow;4:or[%s,%s];4:size1;4:and[%s,%s];4:not[%s];4:size1;4:rectangle;4:or[%s,%s];4:rectangle;4:blue;4:triangle;4:and[%s,%s];4:not[%s];4:size1;4:nand[%s,%s];4:size1;4:or[%s,%s];4:and[%s,%s];4:yellow;4:yellow;4:circle
'λx.forall(green,filter(filter(x.s, green), size1))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1
'λx.apply(nand[size2,size3],iota(filter(x.s, and[green,triangle])))'	0:apply(%s,%s);4:nand[%s,%s];4:size2;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:triangle
'λx.apply(iff[and[rectangle,size2],size3],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:rectangle;4:size2;4:size3;1:%s.o;2:x
'λx.apply(not[size2],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(not[size1],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(not[size3],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(size1,iota(filter(x.s, implies[or[or[size1,size2],rectangle],circle])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:or[%s,%s];4:or[%s,%s];4:size1;4:size2;4:rectangle;4:circle
'λx.apply(apply(same_shape,iota(filter(x.s, and[yellow,or[size3,circle]]))),iota(filter(x.s, size3)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:or[%s,%s];4:size3;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(and[yellow,blue],iota(filter(filter(x.s, size2), green)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green
'λx.apply(size1,iota(filter(filter(x.s, size1), and[and[triangle,size1],triangle])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:and[%s,%s];4:triangle;4:size1;4:triangle
'λx.apply(and[and[not[circle],and[circle,rectangle]],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:circle;4:and[%s,%s];4:circle;4:rectangle;4:triangle;1:%s.o;2:x
'λx.exists(apply(same_shape,iota(filter(x.s, yellow))), filter(filter(filter(x.s, green), yellow), size2))'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow;4:size2
'λx.apply(or[or[and[and[size2,triangle],implies[triangle,green]],green],and[rectangle,size1]],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:triangle;4:implies[%s,%s];4:triangle;4:green;4:green;4:and[%s,%s];4:rectangle;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(size3,iota(filter(x.s, or[green,and[green,or[size2,green]]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:and[%s,%s];4:green;4:or[%s,%s];4:size2;4:green
'λx.empty(filter(x.s, or[nand[green,size2],not[green]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:nand[%s,%s];4:green;4:size2;4:not[%s];4:green
'λx.apply(yellow,iota(filter(filter(x.s, or[green,and[implies[yellow,size1],not[nand[size2,apply(same_color,iota(x.s))]]]]), size2)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:and[%s,%s];4:implies[%s,%s];4:yellow;4:size1;4:not[%s];4:nand[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size2
'λx.apply(and[size1,green],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(apply(same_color,x.o),iota(filter(filter(x.s, circle), rectangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle
'λx.apply(or[and[size3,not[rectangle]],apply(same_color,iota(filter(x.s, iff[green,rectangle])))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size3;4:not[%s];4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:green;4:rectangle;1:%s.o;2:x
'λx.exists(rectangle, filter(filter(filter(filter(filter(filter(x.s, size3), and[yellow,triangle]), blue), triangle), and[apply(same_color,x.o),and[yellow,yellow]]), triangle))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:yellow;4:triangle;4:blue;4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:yellow;4:yellow;4:triangle
'λx.empty(filter(filter(filter(x.s, blue), rectangle), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle;4:size2
'λx.empty(filter(filter(x.s, circle), and[blue,size1]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:blue;4:size1
'λx.apply(and[not[apply(size-lt,iota(x.s))],and[and[or[and[and[apply(size-lt,iota(x.s)),and[size2,size2]],yellow],size3],or[triangle,size3]],green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:size2;4:yellow;4:size3;4:or[%s,%s];4:triangle;4:size3;4:green;1:%s.o;2:x
'λx.apply(not[nor[and[and[size1,blue],yellow],or[size2,and[triangle,size3]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:blue;4:yellow;4:or[%s,%s];4:size2;4:and[%s,%s];4:triangle;4:size3;1:%s.o;2:x
'λx.apply(size2,iota(filter(x.s, apply(same_color,iota(filter(x.s, nor[and[rectangle,rectangle],triangle]))))))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:and[%s,%s];4:rectangle;4:rectangle;4:triangle
'λx.apply(blue,iota(filter(filter(x.s, or[triangle,nor[or[or[blue,and[triangle,or[blue,triangle]]],green],triangle]]), and[not[size3],or[size2,apply(same_color,iota(filter(filter(filter(x.s, size3), and[size2,size3]), and[and[blue,not[or[green,and[circle,or[circle,or[apply(same_size,x.o),green]]]]]],and[and[circle,size3],circle]])))]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:nor[%s,%s];4:or[%s,%s];4:or[%s,%s];4:blue;4:and[%s,%s];4:triangle;4:or[%s,%s];4:blue;4:triangle;4:green;4:triangle;4:and[%s,%s];4:not[%s];4:size3;4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:size2;4:size3;4:and[%s,%s];4:and[%s,%s];4:blue;4:not[%s];4:or[%s,%s];4:green;4:and[%s,%s];4:circle;4:or[%s,%s];4:circle;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;4:and[%s,%s];4:and[%s,%s];4:circle;4:size3;4:circle
'λx.exists(apply(same_size,iota(x.s)), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, size2), nor[blue,size1]), and[or[size3,size3],size3]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:nor[%s,%s];4:blue;4:size1;4:and[%s,%s];4:or[%s,%s];4:size3;4:size3;4:size3
'λx.apply(blue,iota(filter(filter(x.s, or[size2,and[green,size1]]), blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:and[%s,%s];4:green;4:size1;4:blue
'λx.apply(and[size3,green],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(and[size3,green],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(rectangle, filter(x.s, circle))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(size2,iota(filter(filter(x.s, circle), and[and[and[blue,blue],rectangle],not[green]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:blue;4:rectangle;4:not[%s];4:green
'λx.contains(iota(filter(x.s, blue)), filter(x.s, circle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.empty(filter(x.s, apply(same_shape,x.o)))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(implies[green,size3],iota(filter(filter(filter(x.s, apply(size-geq,iota(filter(filter(x.s, circle), apply(same_size,iota(filter(x.s, rectangle))))))), or[not[yellow],size3]), apply(same_shape,x.o))))'	0:apply(%s,%s);4:implies[%s,%s];4:green;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:or[%s,%s];4:not[%s];4:yellow;4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.empty(filter(filter(x.s, size2), apply(same_color,iota(filter(x.s, apply(same_size,x.o))))))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.forall(and[size2,and[apply(same_size,iota(x.s)),green]],filter(x.s, nand[size2,not[circle]]))'	0:forall(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:green;3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size2;4:not[%s];4:circle
'λx.apply(circle,iota(filter(x.s, implies[size1,size1])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size1;4:size1
'λx.exists(not[rectangle], filter(filter(filter(x.s, green), and[size1,size1]), not[rectangle]))'	0:exists(%s, %s);4:not[%s];4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:size1;4:size1;4:not[%s];4:rectangle
'λx.forall(size1,x.s)'	0:forall(%s,%s);4:size1;3:%s.s;2:x
'λx.forall(size2,x.s)'	0:forall(%s,%s);4:size2;3:%s.s;2:x
'λx.forall(size3,x.s)'	0:forall(%s,%s);4:size3;3:%s.s;2:x
'λx.exists(not[triangle], x.s)'	0:exists(%s, %s);4:not[%s];4:triangle;3:%s.s;2:x
'λx.apply(and[and[size2,not[yellow]],rectangle],iota(filter(x.s, or[circle,or[yellow,green]])))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size2;4:not[%s];4:yellow;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:or[%s,%s];4:yellow;4:green
'λx.apply(yellow,iota(filter(x.s, or[apply(same_shape,iota(filter(x.s, and[size2,size2]))),apply(same_size,iota(filter(filter(filter(filter(x.s, size2), triangle), and[rectangle,circle]), size1)))])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:triangle;4:and[%s,%s];4:rectangle;4:circle;4:size1
'λx.empty(filter(filter(x.s, or[size1,not[triangle]]), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:not[%s];4:triangle;4:size3
'λx.apply(circle,iota(filter(filter(filter(x.s, and[not[and[and[blue,not[green]],circle]],size3]), green), or[and[size1,yellow],and[size3,blue]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:not[%s];4:green;4:circle;4:size3;4:green;4:or[%s,%s];4:and[%s,%s];4:size1;4:yellow;4:and[%s,%s];4:size3;4:blue
'λx.apply(or[yellow,not[triangle]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:not[%s];4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[apply(same_shape,x.o),blue],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue;1:%s.o;2:x
'λx.apply(and[rectangle,circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:circle;1:%s.o;2:x
'λx.empty(filter(x.s, apply(same_color,iota(filter(filter(x.s, circle), triangle)))))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle
'λx.apply(blue,iota(filter(filter(x.s, yellow), or[rectangle,not[size2]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:rectangle;4:not[%s];4:size2
'λx.contains(iota(x.s), filter(filter(filter(x.s, rectangle), circle), and[size1,blue]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle;4:and[%s,%s];4:size1;4:blue
'λx.apply(and[size3,nor[implies[apply(size-gt,x.o),triangle],circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:nor[%s,%s];4:implies[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:triangle;4:circle;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, rectangle), apply(same_size,iota(filter(x.s, blue)))), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle
'λx.apply(and[nor[not[size3],blue],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:not[%s];4:size3;4:blue;4:circle;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(x.s, yellow), blue)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:blue
'λx.apply(green,iota(filter(filter(x.s, triangle), or[and[green,triangle],not[iff[rectangle,and[and[size2,size3],yellow]]]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:or[%s,%s];4:and[%s,%s];4:green;4:triangle;4:not[%s];4:iff[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:size2;4:size3;4:yellow
'λx.empty(filter(filter(filter(filter(x.s, and[and[or[apply(same_color,x.o),circle],size1],apply(same_size,x.o)]), circle), circle), or[rectangle,or[and[not[size2],yellow],nand[apply(size-leq,x.o),size3]]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;4:circle;4:or[%s,%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:size2;4:yellow;4:nand[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size3
'λx.apply(and[not[implies[and[apply(same_color,iota(filter(filter(x.s, size2), blue))),rectangle],green]],and[and[iff[size1,size3],not[and[blue,and[size2,green]]]],implies[size3,circle]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:implies[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue;4:rectangle;4:green;4:and[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:size1;4:size3;4:not[%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:size2;4:green;4:implies[%s,%s];4:size3;4:circle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, yellow), green), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green;4:triangle
'λx.apply(and[circle,blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:blue;1:%s.o;2:x
'λx.apply(or[or[rectangle,size3],not[green]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:rectangle;4:size3;4:not[%s];4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(or[blue,circle],iota(filter(x.s, or[and[implies[green,not[rectangle]],triangle],or[blue,rectangle]])))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:green;4:not[%s];4:rectangle;4:triangle;4:or[%s,%s];4:blue;4:rectangle
'λx.contains(iota(filter(x.s, blue)), filter(x.s, yellow))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(or[triangle,blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:blue;1:%s.o;2:x
'λx.apply(implies[green,blue],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:green;4:blue;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(filter(filter(x.s, circle), rectangle), circle), size1)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle;4:circle;4:size1
'λx.apply(or[not[size1],yellow],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:size1;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.forall(circle,filter(filter(filter(filter(filter(x.s, blue), circle), apply(same_color,x.o)), nand[and[size3,size3],blue]), and[green,blue]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:nand[%s,%s];4:and[%s,%s];4:size3;4:size3;4:blue;4:and[%s,%s];4:green;4:blue
'λx.contains(iota(x.s), filter(x.s, or[yellow,and[triangle,size3]]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:and[%s,%s];4:triangle;4:size3
'λx.apply(and[green,apply(same_shape,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(or[size2,or[not[size2],nor[and[triangle,yellow],and[size3,size3]]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:or[%s,%s];4:not[%s];4:size2;4:nor[%s,%s];4:and[%s,%s];4:triangle;4:yellow;4:and[%s,%s];4:size3;4:size3;1:%s.o;2:x
'λx.exists(size1, filter(x.s, and[apply(same_size,iota(x.s)),apply(same_size,x.o)]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(and[yellow,implies[blue,implies[yellow,yellow]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:implies[%s,%s];4:blue;4:implies[%s,%s];4:yellow;4:yellow;1:%s.o;2:x
'λx.forall(circle,filter(x.s, and[or[size1,green],circle]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:size1;4:green;4:circle
'λx.apply(iff[iff[circle,rectangle],and[yellow,apply(size-gt,iota(filter(x.s, apply(same_size,iota(x.s)))))]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:iff[%s,%s];4:circle;4:rectangle;4:and[%s,%s];4:yellow;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(not[and[blue,size2]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:blue;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[or[size1,implies[or[rectangle,apply(same_shape,iota(x.s))],triangle]],size1],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:or[%s,%s];4:size1;4:implies[%s,%s];4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle;4:size1;1:%s.o;2:x
'λx.forall(blue,filter(filter(filter(filter(filter(x.s, rectangle), circle), yellow), rectangle), size3))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle;4:yellow;4:rectangle;4:size3
'λx.apply(triangle,iota(filter(x.s, blue)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(nand[triangle,implies[and[not[and[blue,yellow]],or[green,rectangle]],size2]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:implies[%s,%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:blue;4:yellow;4:or[%s,%s];4:green;4:rectangle;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.exists(rectangle, filter(x.s, yellow))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.forall(or[iff[apply(same_shape,iota(filter(filter(filter(x.s, not[and[and[not[nand[or[apply(same_color,x.o),not[green]],nand[iff[rectangle,or[size2,blue]],or[size3,apply(same_size,iota(x.s))]]]],rectangle],triangle]]), circle), and[green,or[apply(size-geq,x.o),green]]))),blue],rectangle],filter(filter(x.s, triangle), triangle))'	0:forall(%s,%s);4:or[%s,%s];4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:nand[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:green;4:nand[%s,%s];4:iff[%s,%s];4:rectangle;4:or[%s,%s];4:size2;4:blue;4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:rectangle;4:triangle;4:circle;4:and[%s,%s];4:green;4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:green;4:blue;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:triangle
'λx.apply(and[apply(size-leq,iota(filter(x.s, size1))),apply(same_size,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(apply(same_color,x.o),iota(filter(x.s, iff[circle,and[green,size3]])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:circle;4:and[%s,%s];4:green;4:size3
'λx.apply(and[blue,blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:blue;1:iota(%s);3:%s.s;2:x
'λx.exists(circle, filter(filter(x.s, green), and[and[and[size1,and[apply(same_size,x.o),circle]],size1],blue]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;4:size1;4:blue
'λx.exists(apply(same_shape,iota(filter(x.s, green))), filter(x.s, triangle))'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(rectangle,iota(filter(filter(filter(filter(filter(filter(filter(filter(filter(filter(x.s, apply(same_shape,iota(filter(x.s, not[triangle])))), size2), green), not[triangle]), and[or[size3,green],circle]), not[size1]), circle), green), triangle), green)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:size2;4:green;4:not[%s];4:triangle;4:and[%s,%s];4:or[%s,%s];4:size3;4:green;4:circle;4:not[%s];4:size1;4:circle;4:green;4:triangle;4:green
'λx.apply(implies[circle,or[size1,blue]],iota(filter(filter(filter(x.s, or[circle,yellow]), apply(same_color,iota(x.s))), size3)))'	0:apply(%s,%s);4:implies[%s,%s];4:circle;4:or[%s,%s];4:size1;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size3
'λx.exists(rectangle, filter(x.s, nand[circle,apply(same_color,iota(filter(x.s, and[size1,apply(same_color,x.o)])))]))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(and[blue,yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:yellow;1:%s.o;2:x
'λx.apply(implies[green,nand[not[nor[yellow,triangle]],and[size3,rectangle]]],iota(filter(x.s, apply(size-geq,x.o))))'	0:apply(%s,%s);4:implies[%s,%s];4:green;4:nand[%s,%s];4:not[%s];4:nor[%s,%s];4:yellow;4:triangle;4:and[%s,%s];4:size3;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.exists(nor[size3,or[or[rectangle,apply(same_color,x.o)],not[green]]], x.s)'	0:exists(%s, %s);4:nor[%s,%s];4:size3;4:or[%s,%s];4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:green;3:%s.s;2:x
'λx.empty(filter(filter(x.s, yellow), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle
'λx.apply(size2,iota(filter(x.s, apply(same_size,iota(filter(x.s, size1))))))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(size1,iota(filter(filter(filter(filter(filter(filter(filter(x.s, nor[apply(same_shape,x.o),nand[implies[circle,and[circle,and[triangle,green]]],triangle]]), green), size2), and[yellow,size2]), size1), and[yellow,or[size2,apply(size-lt,x.o)]]), size2)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:nand[%s,%s];4:implies[%s,%s];4:circle;4:and[%s,%s];4:circle;4:and[%s,%s];4:triangle;4:green;4:triangle;4:green;4:size2;4:and[%s,%s];4:yellow;4:size2;4:size1;4:and[%s,%s];4:yellow;4:or[%s,%s];4:size2;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:size2
'λx.contains(x.o, filter(x.s, apply(same_color,iota(filter(x.s, green)))))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(size2,iota(filter(filter(x.s, nor[apply(same_size,x.o),yellow]), size3)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow;4:size3
'λx.empty(filter(filter(x.s, triangle), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle
'λx.forall(not[size2],filter(filter(x.s, and[green,circle]), size1))'	0:forall(%s,%s);4:not[%s];4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:circle;4:size1
'λx.apply(and[apply(same_color,x.o),not[triangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, triangle), implies[green,or[rectangle,circle]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:implies[%s,%s];4:green;4:or[%s,%s];4:rectangle;4:circle
'λx.apply(and[blue,triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:triangle;1:%s.o;2:x
'λx.empty(filter(x.s, and[size3,green]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:green
'λx.forall(and[nor[and[or[and[rectangle,apply(same_color,iota(filter(x.s, rectangle)))],apply(same_shape,iota(x.s))],blue],green],triangle],filter(x.s, green))'	0:forall(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:blue;4:green;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(triangle,iota(filter(filter(filter(filter(filter(filter(filter(x.s, and[size2,or[green,or[size1,or[triangle,circle]]]]), and[yellow,size1]), blue), triangle), blue), and[blue,circle]), size1)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:or[%s,%s];4:green;4:or[%s,%s];4:size1;4:or[%s,%s];4:triangle;4:circle;4:and[%s,%s];4:yellow;4:size1;4:blue;4:triangle;4:blue;4:and[%s,%s];4:blue;4:circle;4:size1
'λx.apply(not[yellow],iota(filter(filter(x.s, circle), or[triangle,green])))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:triangle;4:green
'λx.exists(and[or[apply(same_size,iota(filter(filter(filter(x.s, not[not[green]]), rectangle), apply(same_shape,iota(x.s))))),size3],blue], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:green;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size3;4:blue;3:%s.s;2:x
'λx.apply(and[size3,size3],iota(filter(filter(x.s, and[size2,nor[size1,size2]]), and[nand[apply(size-lt,x.o),triangle],blue])))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:nor[%s,%s];4:size1;4:size2;4:and[%s,%s];4:nand[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:triangle;4:blue
'λx.apply(nor[green,apply(same_shape,x.o)],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, size3), and[size1,apply(size-leq,iota(filter(filter(filter(filter(filter(x.s, nor[apply(same_shape,x.o),nand[implies[circle,and[circle,and[triangle,green]]],triangle]]), green), size2), and[yellow,size2]), size1)))])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:size1;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:nand[%s,%s];4:implies[%s,%s];4:circle;4:and[%s,%s];4:circle;4:and[%s,%s];4:triangle;4:green;4:triangle;4:green;4:size2;4:and[%s,%s];4:yellow;4:size2;4:size1
'λx.forall(apply(same_shape,iota(filter(x.s, yellow))),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;3:%s.s;2:x
'λx.forall(and[triangle,and[iff[triangle,not[size3]],iff[not[green],implies[green,circle]]]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:iff[%s,%s];4:triangle;4:not[%s];4:size3;4:iff[%s,%s];4:not[%s];4:green;4:implies[%s,%s];4:green;4:circle;3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, yellow), or[size1,not[triangle]]), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:size1;4:not[%s];4:triangle;4:size3
'λx.apply(or[apply(size-leq,iota(x.s)),triangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[apply(same_color,iota(x.s)),yellow],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:yellow;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(x.s, size1), yellow), size1)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow;4:size1;3:%s.s;2:x
'λx.apply(apply(same_size,x.o),iota(filter(filter(filter(x.s, triangle), size1), size2)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size1;4:size2
'λx.apply(rectangle,iota(filter(filter(x.s, circle), size3)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3
'λx.apply(not[not[size3]],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(green,iota(filter(filter(x.s, and[size3,blue]), and[triangle,or[size3,rectangle]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:blue;4:and[%s,%s];4:triangle;4:or[%s,%s];4:size3;4:rectangle
'λx.contains(iota(filter(filter(x.s, circle), and[yellow,size1])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:yellow;4:size1;3:%s.s;2:x
'λx.apply(implies[size3,circle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size3;4:circle;1:%s.o;2:x
'λx.exists(size2, filter(x.s, and[nor[or[and[size1,and[size2,blue]],rectangle],size1],or[not[blue],and[triangle,not[and[or[blue,blue],triangle]]]]]))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:size2;4:blue;4:rectangle;4:size1;4:or[%s,%s];4:not[%s];4:blue;4:and[%s,%s];4:triangle;4:not[%s];4:and[%s,%s];4:or[%s,%s];4:blue;4:blue;4:triangle
'λx.apply(nor[blue,size1],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:blue;4:size1;1:%s.o;2:x
'λx.exists(nor[or[size1,blue],size1], filter(filter(filter(filter(x.s, and[triangle,and[blue,apply(same_shape,x.o)]]), and[apply(size-leq,iota(filter(x.s, size1))),rectangle]), not[triangle]), blue))'	0:exists(%s, %s);4:nor[%s,%s];4:or[%s,%s];4:size1;4:blue;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle;4:not[%s];4:triangle;4:blue
'λx.apply(nor[size2,and[yellow,blue]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size2;4:and[%s,%s];4:yellow;4:blue;1:%s.o;2:x
'λx.exists(implies[size3,not[green]], filter(filter(filter(x.s, or[size1,green]), green), apply(same_color,iota(x.s))))'	0:exists(%s, %s);4:implies[%s,%s];4:size3;4:not[%s];4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:green;4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_color,iota(filter(filter(filter(filter(filter(x.s, nand[triangle,implies[and[apply(same_shape,x.o),or[size3,yellow]],rectangle]]), apply(same_shape,iota(filter(filter(filter(x.s, circle), circle), not[size1])))), rectangle), rectangle), circle))),iota(filter(x.s, or[yellow,apply(same_color,x.o)])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:triangle;4:implies[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:size3;4:yellow;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:circle;4:not[%s];4:size1;4:rectangle;4:rectangle;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.forall(or[and[and[size1,blue],or[and[and[size3,size3],and[yellow,size3]],rectangle]],circle],filter(x.s, size1))'	0:forall(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:blue;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:size3;4:and[%s,%s];4:yellow;4:size3;4:rectangle;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(apply(same_size,iota(filter(x.s, size3))),iota(filter(filter(filter(x.s, triangle), green), apply(same_shape,iota(x.s)))))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(filter(filter(filter(x.s, apply(same_shape,x.o)), not[triangle]), size3), triangle), green)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:triangle;4:size3;4:triangle;4:green
'λx.apply(or[and[green,iff[and[yellow,blue],and[size1,size1]]],nor[yellow,blue]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:green;4:iff[%s,%s];4:and[%s,%s];4:yellow;4:blue;4:and[%s,%s];4:size1;4:size1;4:nor[%s,%s];4:yellow;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[or[apply(same_color,iota(filter(x.s, rectangle))),size1],size3],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1;4:size3;4:circle;1:%s.o;2:x
'λx.apply(and[not[and[apply(same_shape,iota(x.s)),yellow]],green],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:yellow;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(not[triangle],iota(filter(x.s, nand[circle,triangle])))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:circle;4:triangle
'λx.apply(or[green,blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:blue;1:%s.o;2:x
'λx.apply(and[or[rectangle,size3],iff[size2,size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:rectangle;4:size3;4:iff[%s,%s];4:size2;4:size2;1:%s.o;2:x
'λx.apply(or[size3,rectangle],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.exists(and[iff[circle,green],circle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:iff[%s,%s];4:circle;4:green;4:circle;3:%s.s;2:x
'λx.contains(iota(filter(x.s, implies[iff[implies[rectangle,yellow],triangle],size3])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:iff[%s,%s];4:implies[%s,%s];4:rectangle;4:yellow;4:triangle;4:size3;3:%s.s;2:x
'λx.apply(triangle,iota(filter(x.s, circle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[size3,or[size3,not[green]]],iota(filter(filter(x.s, yellow), rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:or[%s,%s];4:size3;4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle
'λx.apply(size3,iota(filter(filter(x.s, yellow), and[circle,apply(same_color,x.o)])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(and[apply(same_size,x.o),and[yellow,not[size1]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:yellow;4:not[%s];4:size1;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(filter(filter(filter(x.s, size1), or[size1,size1]), implies[yellow,size1]), implies[yellow,size3]), apply(size-gt,iota(filter(filter(filter(filter(filter(filter(x.s, blue), triangle), not[not[iff[nand[apply(same_color,iota(x.s)),or[nand[or[size2,rectangle],triangle],size2]],size1]]]), triangle), iff[implies[circle,triangle],or[triangle,size1]]), size1))))))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:or[%s,%s];4:size1;4:size1;4:implies[%s,%s];4:yellow;4:size1;4:implies[%s,%s];4:yellow;4:size3;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle;4:not[%s];4:not[%s];4:iff[%s,%s];4:nand[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:size2;4:rectangle;4:triangle;4:size2;4:size1;4:triangle;4:iff[%s,%s];4:implies[%s,%s];4:circle;4:triangle;4:or[%s,%s];4:triangle;4:size1;4:size1
'λx.forall(apply(same_shape,iota(x.s)),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(not[and[yellow,rectangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:yellow;4:rectangle;1:%s.o;2:x
'λx.forall(or[and[green,yellow],green],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:and[%s,%s];4:green;4:yellow;4:green;3:%s.s;2:x
'λx.apply(or[not[blue],triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:blue;4:triangle;1:%s.o;2:x
'λx.apply(or[or[triangle,size1],triangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:triangle;4:size1;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(x.s, and[and[size2,size1],size2]), blue)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size2;4:size1;4:size2;4:blue
'λx.apply(and[nor[implies[size2,triangle],size3],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:implies[%s,%s];4:size2;4:triangle;4:size3;4:size1;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, blue), size1), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1;4:green
'λx.contains(x.o, filter(filter(x.s, circle), apply(same_shape,iota(x.s))))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(size-lt,iota(filter(filter(filter(filter(x.s, green), iff[or[rectangle,size1],yellow]), circle), apply(same_shape,iota(x.s))))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:iff[%s,%s];4:or[%s,%s];4:rectangle;4:size1;4:yellow;4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(filter(filter(x.s, size1), apply(same_color,x.o)), green), yellow)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green;4:yellow
'λx.contains(iota(filter(x.s, circle)), filter(filter(x.s, apply(same_size,iota(x.s))), yellow))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:yellow
'λx.apply(nor[green,and[size3,circle]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:green;4:and[%s,%s];4:size3;4:circle;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, size3), blue)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue
'λx.forall(and[triangle,and[apply(same_size,iota(filter(filter(filter(x.s, triangle), and[size2,apply(size-lt,x.o)]), rectangle))),size1]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:size2;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:rectangle;4:size1;3:%s.s;2:x
'λx.contains(iota(filter(x.s, size3)), filter(filter(x.s, circle), and[triangle,rectangle]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:triangle;4:rectangle
'λx.apply(and[size1,triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:triangle;1:%s.o;2:x
'λx.apply(and[size3,triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:triangle;1:%s.o;2:x
'λx.apply(not[size3],iota(filter(x.s, or[apply(size-leq,iota(filter(filter(x.s, not[and[or[apply(same_size,x.o),rectangle],or[green,size2]]]), green))),rectangle])))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:rectangle;4:or[%s,%s];4:green;4:size2;4:green;4:rectangle
'λx.apply(or[size3,rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:rectangle;1:%s.o;2:x
'λx.apply(or[size1,circle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:circle;1:iota(%s);3:%s.s;2:x
'λx.forall(and[yellow,apply(same_color,iota(filter(x.s, and[implies[or[apply(size-geq,x.o),or[triangle,size1]],triangle],yellow])))],filter(filter(x.s, rectangle), size3))'	0:forall(%s,%s);4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:or[%s,%s];4:triangle;4:size1;4:triangle;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3
'λx.apply(or[yellow,not[rectangle]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:not[%s];4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.exists(or[blue,apply(same_color,iota(x.s))], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(nor[size2,not[yellow]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:nor[%s,%s];4:size2;4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[size2,blue],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(or[size3,circle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[triangle,or[green,and[and[or[apply(same_shape,x.o),or[size2,size1]],size2],triangle]]],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:or[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:size2;4:size1;4:size2;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(or[green,rectangle],iota(filter(x.s, not[and[or[size1,nor[triangle,and[apply(same_color,x.o),not[and[and[triangle,and[apply(same_shape,iota(x.s)),size1]],circle]]]]],and[size3,blue]]])))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:or[%s,%s];4:size1;4:nor[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size1;4:circle;4:and[%s,%s];4:size3;4:blue
'λx.apply(and[size3,and[size3,apply(size-gt,iota(filter(x.s, green)))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:size3;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;1:%s.o;2:x
'λx.apply(apply(same_size,x.o),iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(nand[triangle,apply(same_size,iota(filter(x.s, size1)))],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;1:%s.o;2:x
'λx.forall(size2,filter(filter(filter(x.s, size1), size3), circle))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size3;4:circle
'λx.apply(or[rectangle,yellow],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(not[circle],iota(filter(filter(filter(filter(filter(filter(x.s, yellow), apply(same_size,x.o)), and[size1,triangle]), size2), blue), rectangle)))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:size1;4:triangle;4:size2;4:blue;4:rectangle
'λx.forall(green,filter(x.s, and[blue,apply(same_shape,iota(x.s))]))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(filter(x.s, rectangle), size3), blue), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3;4:blue;4:circle
'λx.apply(size2,iota(filter(filter(x.s, green), or[triangle,triangle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:triangle;4:triangle
'λx.apply(or[and[apply(size-leq,x.o),not[apply(same_size,iota(filter(x.s, yellow)))]],size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;1:%s.o;2:x
'λx.apply(nor[size1,and[size3,yellow]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size1;4:and[%s,%s];4:size3;4:yellow;1:%s.o;2:x
'λx.apply(and[and[or[size2,apply(size-leq,iota(filter(filter(x.s, circle), or[green,nor[size1,triangle]])))],apply(same_size,iota(x.s))],apply(same_color,x.o)],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size2;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:green;4:nor[%s,%s];4:size1;4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.forall(implies[not[triangle],apply(size-geq,iota(x.s))],x.s)'	0:forall(%s,%s);4:implies[%s,%s];4:not[%s];4:triangle;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(iff[green,size1],iota(filter(filter(x.s, green), blue)))'	0:apply(%s,%s);4:iff[%s,%s];4:green;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue
'λx.exists(apply(same_size,iota(filter(x.s, size1))), filter(x.s, yellow))'	0:exists(%s, %s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.exists(circle, filter(filter(x.s, green), blue))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue
'λx.apply(blue,iota(filter(filter(x.s, blue), not[not[yellow]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:not[%s];4:yellow
'λx.apply(and[size2,triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:triangle;1:%s.o;2:x
'λx.empty(filter(x.s, not[iff[and[size3,yellow],size1]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:iff[%s,%s];4:and[%s,%s];4:size3;4:yellow;4:size1
'λx.apply(and[or[rectangle,size2],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:rectangle;4:size2;4:size3;1:%s.o;2:x
'λx.apply(size2,iota(filter(x.s, and[green,or[green,green]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:or[%s,%s];4:green;4:green
'λx.apply(size3,iota(filter(x.s, and[circle,and[circle,and[size1,triangle]]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:and[%s,%s];4:circle;4:and[%s,%s];4:size1;4:triangle
'λx.apply(or[green,nand[size3,yellow]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:nand[%s,%s];4:size3;4:yellow;1:%s.o;2:x
'λx.apply(and[yellow,triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[yellow,green],iota(filter(x.s, or[triangle,and[not[blue],size2]])))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:and[%s,%s];4:not[%s];4:blue;4:size2
'λx.apply(not[blue],x.o)'	0:apply(%s,%s);4:not[%s];4:blue;1:%s.o;2:x
'λx.apply(not[size1],iota(filter(filter(x.s, and[not[size3],rectangle]), size2)))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:size3;4:rectangle;4:size2
'λx.contains(x.o, filter(x.s, iff[or[size1,and[or[and[yellow,size2],size3],circle]],and[yellow,yellow]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:or[%s,%s];4:size1;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:yellow;4:size2;4:size3;4:circle;4:and[%s,%s];4:yellow;4:yellow
'λx.contains(x.o, filter(filter(filter(filter(x.s, size3), green), apply(same_shape,iota(filter(filter(filter(x.s, and[size2,size2]), green), or[triangle,triangle])))), triangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:size2;4:green;4:or[%s,%s];4:triangle;4:triangle;4:triangle
'λx.apply(implies[not[and[circle,rectangle]],green],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:not[%s];4:and[%s,%s];4:circle;4:rectangle;4:green;1:%s.o;2:x
'λx.forall(apply(same_shape,x.o),filter(filter(x.s, green), yellow))'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow
'λx.contains(x.o, filter(filter(x.s, or[rectangle,green]), apply(same_size,x.o)))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(or[apply(same_shape,x.o),size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3;1:%s.o;2:x
'λx.apply(iff[not[green],not[green]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:not[%s];4:green;4:not[%s];4:green;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, size2), size1)), filter(filter(x.s, rectangle), and[and[size3,not[apply(same_color,iota(x.s))]],green]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:and[%s,%s];4:size3;4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:green
'λx.forall(and[triangle,green],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:triangle;4:green;3:%s.s;2:x
'λx.contains(iota(filter(x.s, yellow)), filter(x.s, nor[and[size3,and[or[nand[and[circle,yellow],blue],and[size2,size2]],green]],yellow]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:or[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:circle;4:yellow;4:blue;4:and[%s,%s];4:size2;4:size2;4:green;4:yellow
'λx.contains(iota(filter(x.s, not[size1])), filter(x.s, apply(same_shape,x.o)))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(and[nor[rectangle,size1],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:rectangle;4:size1;4:circle;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, and[size2,triangle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:triangle
'λx.apply(size3,iota(filter(filter(filter(filter(filter(x.s, green), size1), implies[size3,circle]), and[apply(same_color,x.o),size2]), apply(same_color,iota(filter(x.s, apply(same_shape,x.o)))))))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1;4:implies[%s,%s];4:size3;4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(not[implies[circle,and[and[nor[size3,blue],green],green]]],x.o)'	0:apply(%s,%s);4:not[%s];4:implies[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:size3;4:blue;4:green;4:green;1:%s.o;2:x
'λx.apply(or[iff[yellow,or[size3,apply(same_color,iota(filter(filter(x.s, not[nor[iff[circle,and[apply(same_size,iota(x.s)),green]],triangle]]), yellow)))]],size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:iff[%s,%s];4:yellow;4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:nor[%s,%s];4:iff[%s,%s];4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:green;4:triangle;4:yellow;4:size3;1:%s.o;2:x
'λx.apply(and[size2,and[and[rectangle,yellow],triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:yellow;4:triangle;1:%s.o;2:x
'λx.contains(iota(x.s), filter(x.s, rectangle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.exists(green, filter(x.s, or[size2,and[and[blue,and[and[circle,and[size1,apply(same_color,x.o)]],nand[apply(size-lt,iota(filter(x.s, circle))),size2]]],nor[triangle,blue]]]))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:nand[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size2;4:nor[%s,%s];4:triangle;4:blue
'λx.apply(size1,iota(filter(filter(filter(x.s, implies[size3,triangle]), size1), green)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size3;4:triangle;4:size1;4:green
'λx.apply(not[size3],iota(filter(filter(filter(filter(filter(x.s, and[nor[not[size3],size2],circle]), size1), size1), yellow), nor[rectangle,green])))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:not[%s];4:size3;4:size2;4:circle;4:size1;4:size1;4:yellow;4:nor[%s,%s];4:rectangle;4:green
'λx.exists(not[or[and[green,size1],triangle]], x.s)'	0:exists(%s, %s);4:not[%s];4:or[%s,%s];4:and[%s,%s];4:green;4:size1;4:triangle;3:%s.s;2:x
'λx.apply(and[iff[size1,size1],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:size1;4:size1;4:green;1:%s.o;2:x
'λx.apply(apply(size-gt,iota(x.s)),iota(filter(filter(x.s, rectangle), and[not[circle],rectangle])))'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:not[%s];4:circle;4:rectangle
'λx.apply(nor[circle,and[triangle,green]],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:circle;4:and[%s,%s];4:triangle;4:green;1:iota(%s);3:%s.s;2:x
'λx.exists(or[or[size1,yellow],not[nand[not[size2],and[rectangle,nor[size3,green]]]]], filter(x.s, rectangle))'	0:exists(%s, %s);4:or[%s,%s];4:or[%s,%s];4:size1;4:yellow;4:not[%s];4:nand[%s,%s];4:not[%s];4:size2;4:and[%s,%s];4:rectangle;4:nor[%s,%s];4:size3;4:green;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(not[size3],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(not[size2],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(not[size1],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[size1,rectangle],iota(filter(filter(filter(filter(filter(x.s, size1), or[size2,size3]), yellow), blue), or[circle,rectangle])))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:or[%s,%s];4:size2;4:size3;4:yellow;4:blue;4:or[%s,%s];4:circle;4:rectangle
'λx.contains(iota(filter(filter(filter(x.s, apply(same_color,x.o)), size2), apply(same_size,iota(filter(x.s, size2))))), filter(x.s, triangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(yellow,iota(filter(filter(filter(filter(filter(filter(filter(x.s, yellow), size1), size1), triangle), and[size1,rectangle]), rectangle), triangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;4:size1;4:triangle;4:and[%s,%s];4:size1;4:rectangle;4:rectangle;4:triangle
'λx.exists(size1, filter(filter(x.s, blue), apply(size-gt,iota(filter(filter(x.s, and[triangle,size3]), and[circle,and[blue,circle]])))))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:size3;4:and[%s,%s];4:circle;4:and[%s,%s];4:blue;4:circle
'λx.forall(size3,filter(x.s, not[or[rectangle,nor[and[or[iff[and[and[circle,and[size3,triangle]],blue],triangle],rectangle],yellow],rectangle]]]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:rectangle;4:nor[%s,%s];4:and[%s,%s];4:or[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:size3;4:triangle;4:blue;4:triangle;4:rectangle;4:yellow;4:rectangle
'λx.exists(yellow, filter(x.s, and[nor[circle,not[and[size2,circle]]],triangle]))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:circle;4:not[%s];4:and[%s,%s];4:size2;4:circle;4:triangle
'λx.apply(or[or[and[apply(same_size,x.o),iff[blue,blue]],green],yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:iff[%s,%s];4:blue;4:blue;4:green;4:yellow;1:%s.o;2:x
'λx.contains(iota(filter(x.s, not[and[rectangle,or[triangle,yellow]]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:rectangle;4:or[%s,%s];4:triangle;4:yellow;3:%s.s;2:x
'λx.apply(and[not[size3],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size3;4:blue;1:%s.o;2:x
'λx.apply(not[and[apply(same_shape,iota(x.s)),and[rectangle,apply(same_size,x.o)]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(x.s, triangle), rectangle), and[green,size1])), filter(filter(filter(x.s, and[apply(same_shape,x.o),not[green]]), blue), blue))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle;4:and[%s,%s];4:green;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:green;4:blue;4:blue
'λx.exists(rectangle, filter(filter(x.s, rectangle), green))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green
'λx.apply(or[size2,implies[and[green,and[size1,triangle]],yellow]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:implies[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:size1;4:triangle;4:yellow;1:%s.o;2:x
'λx.apply(and[or[nand[size1,not[apply(size-geq,iota(filter(x.s, and[size3,size3])))]],blue],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:nand[%s,%s];4:size1;4:not[%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:size3;4:blue;4:size1;1:%s.o;2:x
'λx.apply(not[and[and[nand[size3,and[triangle,and[green,yellow]]],apply(same_size,x.o)],yellow]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:size3;4:and[%s,%s];4:triangle;4:and[%s,%s];4:green;4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow;1:%s.o;2:x
'λx.apply(size1,iota(filter(x.s, and[and[circle,apply(same_size,iota(x.s))],and[size3,yellow]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:yellow

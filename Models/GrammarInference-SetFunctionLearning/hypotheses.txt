'λx.apply(or[and[rectangle,not[apply(same_color,x.o)]],and[or[not[triangle],and[yellow,yellow]],size2]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:rectangle;4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:triangle;4:and[%s,%s];4:yellow;4:yellow;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size3,or[and[triangle,size2],apply(same_shape,x.o)]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:or[%s,%s];4:and[%s,%s];4:triangle;4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.forall(blue,filter(filter(x.s, circle), triangle))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle
'λx.apply(rectangle,iota(filter(x.s, nor[or[size3,apply(same_shape,iota(filter(x.s, not[blue])))],blue])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:blue
'λx.apply(not[or[or[and[blue,or[yellow,not[rectangle]]],blue],circle]],iota(filter(filter(filter(x.s, iff[rectangle,size3]), triangle), blue)))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:blue;4:or[%s,%s];4:yellow;4:not[%s];4:rectangle;4:blue;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:rectangle;4:size3;4:triangle;4:blue
'λx.apply(apply(same_size,x.o),iota(filter(x.s, and[circle,size1])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size1
'λx.apply(rectangle,iota(filter(filter(filter(filter(filter(filter(filter(filter(filter(filter(filter(filter(x.s, or[rectangle,size2]), triangle), circle), triangle), blue), rectangle), apply(same_size,x.o)), rectangle), yellow), triangle), rectangle), rectangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:size2;4:triangle;4:circle;4:triangle;4:blue;4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:rectangle;4:yellow;4:triangle;4:rectangle;4:rectangle
'λx.apply(nand[apply(same_shape,x.o),size1],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;1:%s.o;2:x
'λx.true'	0:true
'λx.apply(or[circle,not[green]],iota(filter(filter(filter(x.s, triangle), apply(same_size,iota(filter(filter(x.s, and[circle,nor[or[rectangle,size1],iff[and[not[size1],apply(same_color,x.o)],apply(same_size,iota(x.s))]]]), yellow)))), triangle)))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:nor[%s,%s];4:or[%s,%s];4:rectangle;4:size1;4:iff[%s,%s];4:and[%s,%s];4:not[%s];4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:yellow;4:triangle
'λx.apply(size3,iota(filter(filter(x.s, blue), blue)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue
'λx.contains(x.o, filter(x.s, not[or[or[size2,yellow],size1]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:or[%s,%s];4:size2;4:yellow;4:size1
'λx.apply(iff[rectangle,yellow],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:rectangle;4:yellow;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(x.s, triangle), blue), size1), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue;4:size1;4:size3
'λx.apply(or[size2,apply(same_size,iota(filter(x.s, and[or[size3,not[apply(same_size,iota(x.s))]],triangle])))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:size3;4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:triangle;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(x.s, rectangle), apply(size-gt,iota(filter(filter(filter(x.s, green), blue), or[or[or[apply(size-leq,iota(filter(x.s, circle))),and[circle,rectangle]],yellow],and[and[or[not[apply(size-lt,iota(x.s))],and[or[green,circle],size2]],and[not[nand[and[size3,blue],circle]],yellow]],size2]])))), size3), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue;4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:circle;4:rectangle;4:yellow;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:green;4:circle;4:size2;4:and[%s,%s];4:not[%s];4:nand[%s,%s];4:and[%s,%s];4:size3;4:blue;4:circle;4:yellow;4:size2;4:size3;4:size3
'λx.apply(and[size1,blue],iota(filter(x.s, or[and[size3,green],or[size2,rectangle]])))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size3;4:green;4:or[%s,%s];4:size2;4:rectangle
'λx.forall(nor[and[or[size1,size2],triangle],blue],filter(filter(filter(filter(x.s, not[blue]), nor[size1,nor[size3,or[or[triangle,blue],size3]]]), circle), circle))'	0:forall(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size1;4:size2;4:triangle;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:nor[%s,%s];4:size1;4:nor[%s,%s];4:size3;4:or[%s,%s];4:or[%s,%s];4:triangle;4:blue;4:size3;4:circle;4:circle
'λx.exists(or[apply(size-leq,iota(filter(x.s, triangle))),nand[triangle,apply(same_shape,iota(x.s))]], filter(filter(filter(filter(x.s, green), yellow), triangle), apply(same_shape,x.o)))'	0:exists(%s, %s);4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:nand[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow;4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.forall(apply(same_size,iota(x.s)),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(and[yellow,and[and[implies[triangle,and[size1,green]],and[green,size1]],and[circle,yellow]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:and[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:triangle;4:and[%s,%s];4:size1;4:green;4:and[%s,%s];4:green;4:size1;4:and[%s,%s];4:circle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(or[yellow,size1],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(and[rectangle,and[triangle,size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:triangle;4:size3;1:%s.o;2:x
'λx.apply(and[not[size2],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size2;4:size3;1:%s.o;2:x
'λx.apply(iff[size2,green],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:size2;4:green;1:%s.o;2:x
'λx.apply(apply(same_color,x.o),iota(filter(x.s, apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.forall(rectangle,filter(x.s, rectangle))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(yellow,iota(filter(x.s, and[nor[triangle,rectangle],apply(same_size,iota(filter(filter(filter(filter(x.s, size3), size1), not[and[or[or[nor[triangle,rectangle],nor[and[apply(same_color,iota(filter(filter(x.s, size3), not[rectangle]))),blue],apply(same_color,x.o)]],not[apply(size-lt,x.o)]],green]]), or[rectangle,and[yellow,and[rectangle,yellow]]])))])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:triangle;4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size1;4:not[%s];4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:triangle;4:rectangle;4:nor[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:rectangle;4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:green;4:or[%s,%s];4:rectangle;4:and[%s,%s];4:yellow;4:and[%s,%s];4:rectangle;4:yellow
'λx.forall(blue,filter(filter(filter(filter(filter(filter(filter(filter(x.s, and[yellow,size1]), not[green]), size2), rectangle), circle), yellow), rectangle), size3))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size1;4:not[%s];4:green;4:size2;4:rectangle;4:circle;4:yellow;4:rectangle;4:size3
'λx.apply(nand[triangle,and[apply(same_shape,iota(filter(x.s, not[size2]))),yellow]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:yellow;1:%s.o;2:x
'λx.apply(not[and[and[blue,or[or[rectangle,size2],circle]],size2]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:or[%s,%s];4:or[%s,%s];4:rectangle;4:size2;4:circle;4:size2;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, circle), size2)), filter(x.s, size2))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(green,iota(filter(filter(filter(x.s, size2), rectangle), blue)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle;4:blue
'λx.apply(not[triangle],iota(filter(filter(x.s, size1), green)))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green
'λx.contains(x.o, filter(x.s, apply(same_shape,iota(filter(x.s, triangle)))))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.exists(and[apply(size-geq,iota(x.s)),size2], filter(x.s, green))'	0:exists(%s, %s);4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.contains(iota(x.s), filter(filter(filter(x.s, rectangle), rectangle), circle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle;4:circle
'λx.apply(yellow,iota(filter(filter(x.s, triangle), blue)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue
'λx.apply(and[blue,and[circle,apply(same_shape,iota(filter(filter(filter(x.s, apply(same_color,x.o)), not[and[or[blue,size1],size3]]), circle)))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:or[%s,%s];4:blue;4:size1;4:size3;4:circle;1:%s.o;2:x
'λx.apply(or[rectangle,size3],iota(filter(x.s, not[not[and[yellow,circle]]])))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:and[%s,%s];4:yellow;4:circle
'λx.apply(yellow,iota(filter(x.s, apply(same_shape,x.o))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(and[not[size3],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size3;4:green;1:%s.o;2:x
'λx.apply(nor[size3,size2],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size3;4:size2;1:%s.o;2:x
'λx.contains(iota(filter(x.s, or[and[size1,triangle],size3])), filter(x.s, rectangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size1;4:triangle;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(or[and[not[size1],not[yellow]],triangle],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:not[%s];4:size1;4:not[%s];4:yellow;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.empty(filter(x.s, or[size3,nand[apply(same_shape,x.o),size1]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1
'λx.apply(triangle,iota(filter(filter(filter(x.s, size1), size1), yellow)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1;4:yellow
'λx.apply(not[size2],iota(filter(filter(x.s, rectangle), blue)))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue
'λx.apply(size2,iota(filter(x.s, or[rectangle,size3])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:size3
'λx.apply(size2,iota(filter(x.s, or[rectangle,size1])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:size1
'λx.forall(yellow,filter(x.s, nand[size1,blue]))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size1;4:blue
'λx.contains(iota(x.s), filter(x.s, or[and[not[size3],not[size2]],and[size3,apply(same_size,iota(filter(filter(x.s, green), blue)))]]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:size3;4:not[%s];4:size2;4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue
'λx.apply(iff[and[yellow,blue],yellow],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:yellow;4:blue;4:yellow;1:%s.o;2:x
'λx.forall(circle,filter(filter(x.s, green), size1))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1
'λx.apply(or[or[circle,blue],nor[not[size3],blue]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:circle;4:blue;4:nor[%s,%s];4:not[%s];4:size3;4:blue;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(x.s, green), apply(size-lt,x.o))))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.apply(and[and[blue,rectangle],yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:rectangle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(filter(filter(filter(filter(filter(x.s, size2), and[and[size1,iff[triangle,size3]],or[rectangle,rectangle]]), green), size1), size2), circle), blue)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:and[%s,%s];4:size1;4:iff[%s,%s];4:triangle;4:size3;4:or[%s,%s];4:rectangle;4:rectangle;4:green;4:size1;4:size2;4:circle;4:blue
'λx.apply(not[not[green]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:green;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(filter(filter(filter(filter(filter(x.s, nor[size3,size2]), green), blue), apply(size-gt,x.o)), or[yellow,green]), yellow), triangle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size3;4:size2;4:green;4:blue;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:or[%s,%s];4:yellow;4:green;4:yellow;4:triangle
'λx.exists(yellow, filter(x.s, nand[and[not[blue],size1],yellow]))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:and[%s,%s];4:not[%s];4:blue;4:size1;4:yellow
'λx.exists(nand[and[apply(same_size,x.o),circle],size1], x.s)'	0:exists(%s, %s);4:nand[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;4:size1;3:%s.s;2:x
'λx.apply(and[and[green,green],apply(size-leq,x.o)],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:green;4:green;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(x.s, nor[size1,yellow])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size1;4:yellow
'λx.apply(blue,iota(filter(x.s, size3)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(blue,iota(filter(x.s, size2)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(blue,iota(filter(x.s, size1)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(rectangle,iota(filter(filter(filter(filter(filter(x.s, not[rectangle]), and[triangle,size3]), implies[triangle,yellow]), size2), apply(size-geq,iota(x.s)))))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;4:and[%s,%s];4:triangle;4:size3;4:implies[%s,%s];4:triangle;4:yellow;4:size2;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x
'λx.apply(or[apply(same_shape,x.o),triangle],iota(filter(filter(filter(x.s, apply(size-lt,x.o)), rectangle), yellow)))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:rectangle;4:yellow
'λx.apply(blue,iota(filter(x.s, green)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[triangle,rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:rectangle;1:%s.o;2:x
'λx.apply(and[yellow,not[size1]],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.exists(size3, filter(filter(filter(x.s, size1), apply(same_size,x.o)), size3))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3
'λx.contains(iota(filter(x.s, yellow)), filter(filter(x.s, not[blue]), yellow))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:yellow
'λx.exists(or[yellow,yellow], filter(x.s, not[yellow]))'	0:exists(%s, %s);4:or[%s,%s];4:yellow;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow
'λx.exists(and[not[and[size1,green]],triangle], filter(x.s, apply(same_shape,iota(x.s))))'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:size1;4:green;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.forall(not[not[yellow]],x.s)'	0:forall(%s,%s);4:not[%s];4:not[%s];4:yellow;3:%s.s;2:x
'λx.apply(not[and[rectangle,size1]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:rectangle;4:size1;1:%s.o;2:x
'λx.apply(not[and[rectangle,size2]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:rectangle;4:size2;1:%s.o;2:x
'λx.forall(triangle,filter(filter(filter(x.s, nor[green,iff[iff[circle,blue],blue]]), and[blue,triangle]), or[nor[circle,size1],rectangle]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:green;4:iff[%s,%s];4:iff[%s,%s];4:circle;4:blue;4:blue;4:and[%s,%s];4:blue;4:triangle;4:or[%s,%s];4:nor[%s,%s];4:circle;4:size1;4:rectangle
'λx.apply(iff[and[rectangle,rectangle],and[triangle,and[size3,green]]],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:rectangle;4:rectangle;4:and[%s,%s];4:triangle;4:and[%s,%s];4:size3;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.exists(circle, filter(filter(x.s, rectangle), and[rectangle,size3]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:rectangle;4:size3
'λx.apply(not[not[or[nand[size2,blue],not[size1]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:or[%s,%s];4:nand[%s,%s];4:size2;4:blue;4:not[%s];4:size1;1:%s.o;2:x
'λx.forall(circle,filter(x.s, rectangle))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(apply(same_size,x.o),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.forall(size2,filter(x.s, size2))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.forall(size3,filter(x.s, size1))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.forall(size3,filter(x.s, size3))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.forall(size3,filter(x.s, green))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.forall(size2,filter(x.s, green))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.forall(size1,filter(x.s, green))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(implies[blue,nand[apply(same_color,x.o),yellow]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:blue;4:nand[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;1:%s.o;2:x
'λx.apply(or[nor[triangle,and[size1,not[yellow]]],rectangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:nor[%s,%s];4:triangle;4:and[%s,%s];4:size1;4:not[%s];4:yellow;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[yellow,and[size2,green]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:and[%s,%s];4:size2;4:green;1:%s.o;2:x
'λx.apply(implies[or[yellow,green],size3],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:or[%s,%s];4:yellow;4:green;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[green,triangle],and[not[circle],and[circle,and[and[yellow,not[size1]],apply(same_color,x.o)]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:green;4:triangle;4:and[%s,%s];4:not[%s];4:circle;4:and[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:yellow;4:not[%s];4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(apply(same_color,iota(filter(x.s, rectangle))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(size-leq,iota(x.s)),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(x.s, and[apply(same_shape,iota(x.s)),and[blue,yellow]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:yellow
'λx.apply(and[blue,blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:blue;1:%s.o;2:x
'λx.exists(circle, filter(filter(filter(x.s, size3), circle), and[or[not[size2],rectangle],nor[rectangle,blue]]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:size2;4:rectangle;4:nor[%s,%s];4:rectangle;4:blue
'λx.apply(or[or[apply(same_color,iota(filter(x.s, and[size1,blue]))),or[size2,green]],apply(same_shape,x.o)],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:blue;4:or[%s,%s];4:size2;4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_size,iota(x.s)),iota(filter(x.s, circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(not[and[blue,and[triangle,circle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:triangle;4:circle;1:%s.o;2:x
'λx.apply(or[or[apply(same_shape,x.o),yellow],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow;4:blue;1:%s.o;2:x
'λx.apply(or[not[iff[or[and[circle,nor[rectangle,green]],apply(same_size,x.o)],triangle]],or[circle,circle]],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:iff[%s,%s];4:or[%s,%s];4:and[%s,%s];4:circle;4:nor[%s,%s];4:rectangle;4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle;4:or[%s,%s];4:circle;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(triangle,iota(filter(x.s, or[size1,and[rectangle,apply(same_size,iota(filter(x.s, green)))]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(size3,iota(filter(filter(filter(x.s, circle), rectangle), nand[green,yellow])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle;4:nand[%s,%s];4:green;4:yellow
'λx.apply(iff[and[apply(size-geq,iota(x.s)),size1],rectangle],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:size1;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(x.s, apply(same_size,iota(x.s))), and[apply(same_color,x.o),blue])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue
'λx.apply(implies[size3,not[size2]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size3;4:not[%s];4:size2;1:%s.o;2:x
'λx.forall(or[size2,apply(size-gt,iota(x.s))],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:size2;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.forall(blue,filter(x.s, or[and[size3,rectangle],and[rectangle,and[and[and[size2,apply(same_size,x.o)],size1],or[and[rectangle,or[green,circle]],rectangle]]]]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size3;4:rectangle;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:or[%s,%s];4:green;4:circle;4:rectangle
'λx.apply(and[yellow,or[rectangle,size1]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:or[%s,%s];4:rectangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(x.s, blue), blue)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue
'λx.apply(and[blue,and[and[size3,size3],circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:size3;4:size3;4:circle;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(filter(filter(filter(x.s, nand[rectangle,and[implies[green,and[size3,or[green,or[not[blue],circle]]]],triangle]]), apply(size-leq,iota(filter(x.s, or[and[size2,size1],or[triangle,apply(same_size,x.o)]])))), apply(same_size,iota(x.s))), not[apply(same_shape,iota(x.s))]), triangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:rectangle;4:and[%s,%s];4:implies[%s,%s];4:green;4:and[%s,%s];4:size3;4:or[%s,%s];4:green;4:or[%s,%s];4:not[%s];4:blue;4:circle;4:triangle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size2;4:size1;4:or[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle
'λx.apply(apply(same_size,iota(filter(x.s, size2))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(filter(x.s, size1), rectangle), size2)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle;4:size2
'λx.contains(iota(x.s), filter(x.s, and[size2,size1]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:size1
'λx.forall(blue,filter(x.s, and[triangle,apply(same_size,iota(x.s))]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, and[apply(same_shape,x.o),size2]), blue))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2;4:blue
'λx.apply(and[and[and[or[green,blue],nor[size3,yellow]],blue],triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:green;4:blue;4:nor[%s,%s];4:size3;4:yellow;4:blue;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[green,green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:green;1:%s.o;2:x
'λx.apply(or[nand[triangle,nor[size3,size1]],circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:triangle;4:nor[%s,%s];4:size3;4:size1;4:circle;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, and[rectangle,and[and[size3,or[size3,size3]],blue]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:size3;4:or[%s,%s];4:size3;4:size3;4:blue
'λx.apply(and[rectangle,green],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[green,yellow],iota(filter(x.s, apply(size-gt,x.o))))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.contains(iota(x.s), filter(x.s, and[not[yellow],or[size1,size1]]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:yellow;4:or[%s,%s];4:size1;4:size1
'λx.apply(blue,iota(filter(x.s, apply(same_shape,x.o))))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, apply(same_color,iota(x.s))), apply(same_shape,x.o))), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(and[size3,nand[nand[blue,not[circle]],green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:nand[%s,%s];4:nand[%s,%s];4:blue;4:not[%s];4:circle;4:green;1:%s.o;2:x
'λx.apply(nor[and[circle,circle],size2],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:circle;4:circle;4:size2;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, size1), and[blue,size2]), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:blue;4:size2;4:blue
'λx.apply(or[and[size2,triangle],rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size2;4:triangle;4:rectangle;1:%s.o;2:x
'λx.exists(not[size2], filter(filter(x.s, circle), nor[apply(same_color,iota(x.s)),green]))'	0:exists(%s, %s);4:not[%s];4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:nor[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:green
'λx.apply(apply(same_shape,iota(filter(x.s, and[green,green]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:green;1:%s.o;2:x
'λx.apply(and[blue,green],iota(filter(filter(x.s, size2), green)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green
'λx.forall(rectangle,filter(filter(x.s, apply(same_size,iota(x.s))), size1))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size1
'λx.apply(or[or[triangle,triangle],size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:triangle;4:triangle;4:size2;1:%s.o;2:x
'λx.apply(or[or[triangle,triangle],size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:triangle;4:triangle;4:size1;1:%s.o;2:x
'λx.exists(and[rectangle,yellow], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:rectangle;4:yellow;3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, implies[yellow,not[or[size3,not[and[apply(same_color,iota(x.s)),triangle]]]]]), size2)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:yellow;4:not[%s];4:or[%s,%s];4:size3;4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:triangle;4:size2
'λx.apply(size2,iota(filter(filter(filter(filter(x.s, size2), yellow), size3), size1)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:yellow;4:size3;4:size1
'λx.apply(not[and[rectangle,and[or[blue,circle],size3]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:or[%s,%s];4:blue;4:circle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, rectangle), rectangle), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle;4:blue
'λx.apply(or[blue,and[and[iff[size2,rectangle],and[blue,blue]],not[blue]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:size2;4:rectangle;4:and[%s,%s];4:blue;4:blue;4:not[%s];4:blue;1:%s.o;2:x
'λx.apply(or[apply(size-gt,x.o),not[and[circle,green]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:circle;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(x.s, or[not[triangle],and[circle,triangle]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:triangle;4:and[%s,%s];4:circle;4:triangle
'λx.apply(or[not[or[size3,or[size2,circle]]],apply(same_color,iota(filter(x.s, and[yellow,and[blue,size2]])))],iota(filter(filter(filter(filter(x.s, not[or[not[or[or[size3,size1],and[or[blue,green],and[size3,rectangle]]]],blue]]), or[green,yellow]), apply(same_size,iota(x.s))), size2)))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:or[%s,%s];4:size3;4:or[%s,%s];4:size2;4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:and[%s,%s];4:blue;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:not[%s];4:or[%s,%s];4:or[%s,%s];4:size3;4:size1;4:and[%s,%s];4:or[%s,%s];4:blue;4:green;4:and[%s,%s];4:size3;4:rectangle;4:blue;4:or[%s,%s];4:green;4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size2
'λx.apply(and[size2,size1],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.contains(iota(filter(x.s, rectangle)), filter(x.s, rectangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(or[blue,or[size1,or[not[yellow],yellow]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:or[%s,%s];4:size1;4:or[%s,%s];4:not[%s];4:yellow;4:yellow;1:%s.o;2:x
'λx.apply(iff[blue,size3],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:blue;4:size3;1:%s.o;2:x
'λx.apply(iff[blue,size1],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:blue;4:size1;1:%s.o;2:x
'λx.apply(iff[blue,size2],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:blue;4:size2;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(filter(x.s, green), circle), and[apply(size-geq,x.o),blue])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:circle;4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:blue
'λx.apply(size3,iota(filter(filter(filter(filter(x.s, and[size1,size1]), green), or[yellow,triangle]), iff[implies[green,implies[circle,size3]],green])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size1;4:green;4:or[%s,%s];4:yellow;4:triangle;4:iff[%s,%s];4:implies[%s,%s];4:green;4:implies[%s,%s];4:circle;4:size3;4:green
'λx.apply(implies[or[not[apply(same_shape,x.o)],not[green]],size1],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:green;4:size1;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(filter(filter(filter(filter(filter(x.s, size1), blue), rectangle), size3), and[size3,triangle]), rectangle), iff[triangle,or[blue,size1]]), circle)), filter(filter(filter(filter(x.s, yellow), size1), size2), size1))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue;4:rectangle;4:size3;4:and[%s,%s];4:size3;4:triangle;4:rectangle;4:iff[%s,%s];4:triangle;4:or[%s,%s];4:blue;4:size1;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;4:size2;4:size1
'λx.apply(or[circle,and[size3,triangle]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:and[%s,%s];4:size3;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.exists(nor[and[yellow,and[and[nand[and[not[triangle],apply(same_color,x.o)],and[blue,green]],size1],yellow]],size1], x.s)'	0:exists(%s, %s);4:nor[%s,%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:not[%s];4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:blue;4:green;4:size1;4:yellow;4:size1;3:%s.s;2:x
'λx.apply(size2,iota(filter(x.s, or[circle,triangle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:triangle
'λx.apply(or[not[nor[and[blue,blue],or[size2,not[size3]]]],size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:nor[%s,%s];4:and[%s,%s];4:blue;4:blue;4:or[%s,%s];4:size2;4:not[%s];4:size3;4:size3;1:%s.o;2:x
'λx.apply(and[blue,not[size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:not[%s];4:size3;1:%s.o;2:x
'λx.exists(iff[not[triangle],blue], x.s)'	0:exists(%s, %s);4:iff[%s,%s];4:not[%s];4:triangle;4:blue;3:%s.s;2:x
'λx.apply(not[not[size3]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:size3;1:%s.o;2:x
'λx.apply(apply(same_color,x.o),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[size2,or[size2,size1]],iota(filter(filter(filter(filter(x.s, and[and[triangle,not[rectangle]],and[circle,or[triangle,or[green,circle]]]]), not[size3]), and[circle,and[circle,size1]]), size3)))'	0:apply(%s,%s);4:implies[%s,%s];4:size2;4:or[%s,%s];4:size2;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:triangle;4:not[%s];4:rectangle;4:and[%s,%s];4:circle;4:or[%s,%s];4:triangle;4:or[%s,%s];4:green;4:circle;4:not[%s];4:size3;4:and[%s,%s];4:circle;4:and[%s,%s];4:circle;4:size1;4:size3
'λx.exists(apply(same_shape,iota(x.s)), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(x.s, and[and[yellow,not[size2]],yellow]), blue)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:yellow;4:not[%s];4:size2;4:yellow;4:blue
'λx.apply(rectangle,iota(filter(x.s, apply(same_shape,x.o))))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(iff[apply(same_size,x.o),circle],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[yellow,not[yellow]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:yellow;4:not[%s];4:yellow;1:%s.o;2:x
'λx.apply(and[size3,size2],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(or[apply(same_color,x.o),size1],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(or[size1,and[and[circle,and[or[not[not[size1]],not[size2]],or[and[rectangle,not[green]],triangle]]],rectangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:not[%s];4:size1;4:not[%s];4:size2;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:not[%s];4:green;4:triangle;4:rectangle;1:%s.o;2:x
'λx.apply(and[and[or[not[circle],rectangle],yellow],apply(same_shape,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:not[%s];4:circle;4:rectangle;4:yellow;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(not[size2],iota(filter(filter(x.s, apply(same_shape,iota(filter(x.s, rectangle)))), and[rectangle,and[circle,iff[yellow,size3]]])))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:circle;4:iff[%s,%s];4:yellow;4:size3
'λx.apply(triangle,iota(filter(x.s, apply(same_size,x.o))))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.exists(and[apply(same_color,x.o),triangle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;3:%s.s;2:x
'λx.apply(iff[rectangle,size1],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:rectangle;4:size1;1:%s.o;2:x
'λx.forall(and[blue,rectangle],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:blue;4:rectangle;3:%s.s;2:x
'λx.apply(or[size2,not[size2]],iota(filter(filter(x.s, and[green,yellow]), not[and[triangle,and[green,and[yellow,or[not[size3],yellow]]]]])))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:yellow;4:not[%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:green;4:and[%s,%s];4:yellow;4:or[%s,%s];4:not[%s];4:size3;4:yellow
'λx.apply(and[size3,and[not[apply(size-gt,x.o)],rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:rectangle;1:%s.o;2:x
'λx.exists(or[circle,blue], filter(x.s, and[triangle,not[rectangle]]))'	0:exists(%s, %s);4:or[%s,%s];4:circle;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:not[%s];4:rectangle
'λx.apply(nor[and[iff[and[size1,circle],and[and[and[blue,and[circle,circle]],blue],not[circle]]],blue],size3],iota(filter(filter(x.s, triangle), blue)))'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:size1;4:circle;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:circle;4:circle;4:blue;4:not[%s];4:circle;4:blue;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue
'λx.empty(filter(filter(filter(x.s, circle), apply(size-leq,x.o)), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size2
'λx.apply(size1,iota(filter(filter(x.s, iff[blue,and[size1,or[triangle,size1]]]), yellow)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:blue;4:and[%s,%s];4:size1;4:or[%s,%s];4:triangle;4:size1;4:yellow
'λx.empty(filter(x.s, apply(same_shape,iota(filter(filter(x.s, and[blue,green]), not[triangle])))))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:green;4:not[%s];4:triangle
'λx.apply(or[apply(same_size,x.o),size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(filter(x.s, size2), and[circle,yellow]), size3)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:circle;4:yellow;4:size3
'λx.apply(not[nand[not[and[apply(same_shape,x.o),yellow]],circle]],x.o)'	0:apply(%s,%s);4:not[%s];4:nand[%s,%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow;4:circle;1:%s.o;2:x
'λx.apply(and[rectangle,and[circle,and[and[not[green],green],apply(same_size,iota(filter(x.s, size2)))]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:green;4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(x.s, rectangle), blue))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue
'λx.forall(not[circle],x.s)'	0:forall(%s,%s);4:not[%s];4:circle;3:%s.s;2:x
'λx.apply(and[apply(same_shape,x.o),yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow;1:%s.o;2:x
'λx.forall(or[apply(size-gt,iota(x.s)),circle],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:circle;3:%s.s;2:x
'λx.apply(nor[and[apply(same_shape,x.o),size3],size2],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3;4:size2;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(x.s, apply(same_size,x.o)), not[rectangle])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:not[%s];4:rectangle;3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, circle), size2), not[not[triangle]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size2;4:not[%s];4:not[%s];4:triangle
'λx.apply(circle,iota(filter(x.s, and[rectangle,size1])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:size1
'λx.exists(and[size2,green], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:size2;4:green;3:%s.s;2:x
'λx.apply(green,iota(filter(x.s, and[green,size1])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:size1
'λx.apply(not[nor[or[or[size3,size2],nand[and[size3,rectangle],size1]],apply(same_size,iota(filter(filter(x.s, implies[apply(same_color,iota(filter(filter(filter(x.s, green), size2), not[size3]))),not[size3]]), implies[rectangle,and[green,size3]])))]],x.o)'	0:apply(%s,%s);4:not[%s];4:nor[%s,%s];4:or[%s,%s];4:or[%s,%s];4:size3;4:size2;4:nand[%s,%s];4:and[%s,%s];4:size3;4:rectangle;4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size2;4:not[%s];4:size3;4:not[%s];4:size3;4:implies[%s,%s];4:rectangle;4:and[%s,%s];4:green;4:size3;1:%s.o;2:x
'λx.apply(or[circle,yellow],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(not[size3],iota(filter(filter(x.s, and[size3,or[size3,nand[not[and[circle,size1]],size1]]]), circle)))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:or[%s,%s];4:size3;4:nand[%s,%s];4:not[%s];4:and[%s,%s];4:circle;4:size1;4:size1;4:circle
'λx.exists(nand[apply(same_size,x.o),size3], x.s)'	0:exists(%s, %s);4:nand[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;3:%s.s;2:x
'λx.apply(and[apply(same_color,iota(x.s)),size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size1;1:%s.o;2:x
'λx.empty(filter(x.s, and[yellow,blue]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:blue
'λx.apply(apply(size-geq,iota(x.s)),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(not[and[size2,yellow]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size2;4:yellow;1:%s.o;2:x
'λx.forall(or[not[yellow],size1],filter(x.s, triangle))'	0:forall(%s,%s);4:or[%s,%s];4:not[%s];4:yellow;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(or[rectangle,implies[green,nand[not[nor[yellow,triangle]],and[size3,rectangle]]]],iota(filter(x.s, apply(size-geq,x.o))))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:implies[%s,%s];4:green;4:nand[%s,%s];4:not[%s];4:nor[%s,%s];4:yellow;4:triangle;4:and[%s,%s];4:size3;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.contains(x.o, filter(filter(filter(filter(x.s, blue), size1), rectangle), rectangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1;4:rectangle;4:rectangle
'λx.contains(x.o, filter(filter(x.s, apply(same_size,iota(x.s))), and[rectangle,green]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:green
'λx.apply(and[size2,not[green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:not[%s];4:green;1:%s.o;2:x
'λx.apply(not[and[rectangle,size1]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:rectangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(not[and[rectangle,size3]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:rectangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(or[green,and[blue,not[size1]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:and[%s,%s];4:blue;4:not[%s];4:size1;1:iota(%s);3:%s.s;2:x
'λx.exists(circle, filter(filter(x.s, and[and[green,and[size2,yellow]],apply(same_color,x.o)]), blue))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:size2;4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue
'λx.contains(x.o, filter(filter(x.s, or[blue,size2]), circle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:size2;4:circle
'λx.apply(implies[or[apply(size-lt,iota(x.s)),not[triangle]],green],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:not[%s];4:triangle;4:green;1:iota(%s);3:%s.s;2:x
'λx.exists(size2, filter(filter(x.s, green), circle))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:circle
'λx.apply(apply(size-geq,x.o),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:%s.o;2:x
'λx.exists(and[not[circle],not[not[apply(size-lt,x.o)]]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:circle;4:not[%s];4:not[%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(triangle,iota(filter(x.s, not[triangle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.empty(filter(filter(filter(filter(filter(filter(x.s, and[green,not[blue]]), size3), yellow), apply(same_color,iota(x.s))), or[size1,circle]), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:not[%s];4:blue;4:size3;4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:circle;4:circle
'λx.apply(apply(same_color,iota(filter(x.s, triangle))),iota(filter(x.s, circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(iff[and[size1,size3],rectangle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:size1;4:size3;4:rectangle;1:%s.o;2:x
'λx.contains(iota(filter(x.s, triangle)), filter(filter(x.s, blue), triangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle
'λx.apply(or[or[or[triangle,yellow],size1],not[and[green,implies[implies[green,circle],circle]]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:triangle;4:yellow;4:size1;4:not[%s];4:and[%s,%s];4:green;4:implies[%s,%s];4:implies[%s,%s];4:green;4:circle;4:circle;1:%s.o;2:x
'λx.apply(or[blue,circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:circle;1:%s.o;2:x
'λx.apply(and[and[not[blue],circle],apply(same_size,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:blue;4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(iff[iff[not[circle],and[blue,circle]],or[size2,size1]],iota(filter(filter(filter(x.s, triangle), and[and[size1,and[green,and[and[circle,rectangle],or[rectangle,or[green,or[yellow,iff[and[blue,rectangle],size3]]]]]]],rectangle]), rectangle)))'	0:apply(%s,%s);4:iff[%s,%s];4:iff[%s,%s];4:not[%s];4:circle;4:and[%s,%s];4:blue;4:circle;4:or[%s,%s];4:size2;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:circle;4:rectangle;4:or[%s,%s];4:rectangle;4:or[%s,%s];4:green;4:or[%s,%s];4:yellow;4:iff[%s,%s];4:and[%s,%s];4:blue;4:rectangle;4:size3;4:rectangle;4:rectangle
'λx.apply(apply(size-geq,iota(filter(x.s, yellow))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[green,not[blue]],iota(filter(filter(x.s, size3), triangle)))'	0:apply(%s,%s);4:iff[%s,%s];4:green;4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle
'λx.apply(not[nand[triangle,nor[green,yellow]]],x.o)'	0:apply(%s,%s);4:not[%s];4:nand[%s,%s];4:triangle;4:nor[%s,%s];4:green;4:yellow;1:%s.o;2:x
'λx.apply(not[size2],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(not[size1],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(not[size3],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(not[size3],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(not[size3],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(or[blue,size3],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(or[blue,size1],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.exists(green, filter(x.s, and[and[and[and[triangle,circle],apply(same_color,iota(filter(x.s, size2)))],size2],and[or[green,yellow],or[size1,green]]]))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2;4:and[%s,%s];4:or[%s,%s];4:green;4:yellow;4:or[%s,%s];4:size1;4:green
'λx.apply(iff[or[triangle,iff[and[size1,and[and[blue,or[rectangle,implies[size3,size2]]],not[size2]]],triangle]],circle],iota(filter(x.s, apply(same_shape,x.o))))'	0:apply(%s,%s);4:iff[%s,%s];4:or[%s,%s];4:triangle;4:iff[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:blue;4:or[%s,%s];4:rectangle;4:implies[%s,%s];4:size3;4:size2;4:not[%s];4:size2;4:triangle;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(or[rectangle,or[and[size2,blue],circle]],iota(filter(x.s, apply(same_color,x.o))))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:size2;4:blue;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(x.s, or[and[size1,size2],rectangle]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size1;4:size2;4:rectangle;1:%s.o;2:x
'λx.apply(or[and[and[rectangle,size1],not[yellow]],rectangle],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size1;4:not[%s];4:yellow;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.contains(iota(filter(x.s, and[and[yellow,not[size2]],yellow])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:yellow;4:not[%s];4:size2;4:yellow;3:%s.s;2:x
'λx.exists(triangle, filter(filter(x.s, and[blue,size2]), blue))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size2;4:blue
'λx.apply(and[and[nor[apply(size-lt,iota(x.s)),not[green]],or[apply(same_shape,x.o),and[not[size3],size2]]],rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:not[%s];4:green;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:not[%s];4:size3;4:size2;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.forall(size2,filter(filter(filter(x.s, and[yellow,green]), blue), and[yellow,apply(same_color,x.o)]))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:green;4:blue;4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.forall(nor[green,and[size1,circle]],x.s)'	0:forall(%s,%s);4:nor[%s,%s];4:green;4:and[%s,%s];4:size1;4:circle;3:%s.s;2:x
'λx.contains(iota(filter(x.s, apply(same_size,x.o))), filter(x.s, and[rectangle,apply(size-lt,x.o)]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.exists(blue, filter(x.s, triangle))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(iff[size2,and[size1,yellow]],iota(filter(filter(x.s, circle), yellow)))'	0:apply(%s,%s);4:iff[%s,%s];4:size2;4:and[%s,%s];4:size1;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow
'λx.exists(and[size2,size1], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:size2;4:size1;3:%s.s;2:x
'λx.apply(yellow,iota(filter(x.s, and[green,green])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:green
'λx.apply(size1,iota(filter(filter(x.s, or[size2,size3]), circle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:size3;4:circle
'λx.apply(and[not[apply(same_size,iota(x.s))],yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(not[blue],iota(filter(filter(x.s, and[size1,green]), apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.forall(and[and[green,or[apply(same_size,x.o),size1]],or[apply(same_color,iota(x.s)),or[size3,nor[and[and[and[and[yellow,blue],triangle],nor[rectangle,iff[or[not[apply(same_color,x.o)],size1],or[not[not[triangle]],or[and[triangle,size1],and[not[apply(same_shape,x.o)],circle]]]]]],green],size2]]]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:and[%s,%s];4:green;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:blue;4:triangle;4:nor[%s,%s];4:rectangle;4:iff[%s,%s];4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1;4:or[%s,%s];4:not[%s];4:not[%s];4:triangle;4:or[%s,%s];4:and[%s,%s];4:triangle;4:size1;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;4:green;4:size2;3:%s.s;2:x
'λx.exists(and[yellow,not[yellow]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:yellow;4:not[%s];4:yellow;3:%s.s;2:x
'λx.exists(or[and[and[size3,apply(same_shape,iota(x.s))],size2],apply(size-geq,iota(filter(filter(filter(filter(x.s, triangle), size3), yellow), rectangle)))], filter(x.s, or[size1,circle]))'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3;4:yellow;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:circle
'λx.contains(iota(filter(x.s, and[or[blue,rectangle],apply(same_size,x.o)])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:blue;4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:%s.s;2:x
'λx.empty(filter(filter(filter(filter(x.s, size2), green), size2), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green;4:size2;4:triangle
'λx.forall(not[nor[yellow,triangle]],filter(x.s, or[and[green,blue],blue]))'	0:forall(%s,%s);4:not[%s];4:nor[%s,%s];4:yellow;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:green;4:blue;4:blue
'λx.forall(green,x.s)'	0:forall(%s,%s);4:green;3:%s.s;2:x
'λx.apply(yellow,iota(filter(x.s, not[or[not[or[or[size3,size1],and[or[blue,green],and[size3,rectangle]]]],blue]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:not[%s];4:or[%s,%s];4:or[%s,%s];4:size3;4:size1;4:and[%s,%s];4:or[%s,%s];4:blue;4:green;4:and[%s,%s];4:size3;4:rectangle;4:blue
'λx.apply(and[size1,and[rectangle,or[green,circle]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:green;4:circle;1:%s.o;2:x
'λx.exists(or[or[and[yellow,or[nand[nor[triangle,or[size3,circle]],and[rectangle,and[yellow,green]]],triangle]],and[circle,and[and[size1,green],blue]]],size2], filter(filter(filter(x.s, triangle), circle), blue))'	0:exists(%s, %s);4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:yellow;4:or[%s,%s];4:nand[%s,%s];4:nor[%s,%s];4:triangle;4:or[%s,%s];4:size3;4:circle;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:yellow;4:green;4:triangle;4:and[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:size1;4:green;4:blue;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle;4:blue
'λx.apply(circle,iota(filter(filter(x.s, blue), iff[green,yellow])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:iff[%s,%s];4:green;4:yellow
'λx.contains(iota(filter(filter(x.s, size1), rectangle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle;3:%s.s;2:x
'λx.apply(and[and[and[yellow,size3],and[and[yellow,apply(same_shape,iota(filter(filter(x.s, size2), green)))],iff[size1,and[not[circle],yellow]]]],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:size3;4:and[%s,%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green;4:iff[%s,%s];4:size1;4:and[%s,%s];4:not[%s];4:circle;4:yellow;4:blue;1:%s.o;2:x
'λx.exists(and[size1,and[apply(same_color,iota(x.s)),triangle]], filter(filter(x.s, yellow), blue))'	0:exists(%s, %s);4:and[%s,%s];4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:blue
'λx.forall(circle,filter(x.s, and[blue,green]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:green
'λx.apply(or[and[or[circle,and[nor[size3,rectangle],circle]],yellow],size1],iota(filter(x.s, apply(size-geq,x.o))))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:circle;4:and[%s,%s];4:nor[%s,%s];4:size3;4:rectangle;4:circle;4:yellow;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, yellow), and[nand[size2,circle],or[rectangle,blue]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:nand[%s,%s];4:size2;4:circle;4:or[%s,%s];4:rectangle;4:blue
'λx.apply(blue,iota(filter(filter(filter(x.s, size1), or[and[triangle,not[green]],and[size2,size1]]), not[size2])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:or[%s,%s];4:and[%s,%s];4:triangle;4:not[%s];4:green;4:and[%s,%s];4:size2;4:size1;4:not[%s];4:size2
'λx.exists(iff[blue,or[triangle,and[apply(same_shape,iota(x.s)),size2]]], x.s)'	0:exists(%s, %s);4:iff[%s,%s];4:blue;4:or[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size2;3:%s.s;2:x
'λx.apply(and[circle,and[iff[not[and[green,or[green,not[apply(same_shape,iota(filter(filter(filter(filter(filter(x.s, iff[circle,size1]), green), nor[size1,size2]), not[triangle]), nand[yellow,triangle])))]]]],or[size3,size1]],not[size1]]],iota(filter(filter(x.s, size3), and[rectangle,blue])))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:and[%s,%s];4:iff[%s,%s];4:not[%s];4:and[%s,%s];4:green;4:or[%s,%s];4:green;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:circle;4:size1;4:green;4:nor[%s,%s];4:size1;4:size2;4:not[%s];4:triangle;4:nand[%s,%s];4:yellow;4:triangle;4:or[%s,%s];4:size3;4:size1;4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:rectangle;4:blue
'λx.contains(x.o, filter(filter(x.s, and[green,circle]), iff[circle,green]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:circle;4:iff[%s,%s];4:circle;4:green
'λx.apply(and[and[blue,rectangle],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:rectangle;4:rectangle;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(x.s, not[yellow]), triangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:triangle
'λx.apply(or[blue,rectangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.forall(and[size1,triangle],filter(x.s, nor[triangle,triangle]))'	0:forall(%s,%s);4:and[%s,%s];4:size1;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:triangle;4:triangle
'λx.exists(or[and[size1,and[rectangle,triangle]],size3], filter(filter(filter(x.s, and[and[size2,size1],iff[triangle,rectangle]]), rectangle), green))'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:rectangle;4:triangle;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size2;4:size1;4:iff[%s,%s];4:triangle;4:rectangle;4:rectangle;4:green
'λx.apply(nand[iff[size1,or[and[and[green,blue],green],size1]],not[and[apply(same_color,x.o),rectangle]]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:iff[%s,%s];4:size1;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:blue;4:green;4:size1;4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle;1:%s.o;2:x
'λx.apply(and[rectangle,size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:size2;1:%s.o;2:x
'λx.apply(and[rectangle,size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:size3;1:%s.o;2:x
'λx.apply(and[rectangle,size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:size1;1:%s.o;2:x
'λx.exists(size2, filter(x.s, and[rectangle,triangle]))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:triangle
'λx.exists(size1, filter(x.s, and[rectangle,triangle]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:triangle
'λx.apply(or[blue,blue],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:blue;1:iota(%s);3:%s.s;2:x
'λx.exists(apply(size-lt,iota(x.s)), filter(x.s, and[and[size1,size3],apply(same_size,x.o)]))'	0:exists(%s, %s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size1;4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.exists(circle, filter(filter(filter(filter(filter(filter(filter(x.s, and[size3,yellow]), and[yellow,rectangle]), apply(same_shape,iota(x.s))), circle), blue), green), apply(same_color,x.o)))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:yellow;4:and[%s,%s];4:yellow;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle;4:blue;4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(not[and[size2,blue]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size2;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[triangle,apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(or[rectangle,blue],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(filter(x.s, size3), triangle), blue)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle;4:blue;3:%s.s;2:x
'λx.apply(apply(size-leq,iota(filter(filter(x.s, rectangle), implies[blue,size2]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:implies[%s,%s];4:blue;4:size2;1:%s.o;2:x
'λx.apply(and[size3,green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:green;1:%s.o;2:x
'λx.contains(iota(filter(x.s, rectangle)), filter(filter(x.s, size3), size2))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2
'λx.apply(circle,iota(filter(filter(x.s, rectangle), green)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green
'λx.apply(or[size2,size2],iota(filter(x.s, or[and[implies[green,circle],blue],size2])))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:green;4:circle;4:blue;4:size2
'λx.apply(not[or[size1,or[not[yellow],triangle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:size1;4:or[%s,%s];4:not[%s];4:yellow;4:triangle;1:%s.o;2:x
'λx.exists(and[triangle,triangle], filter(filter(x.s, and[or[size3,and[blue,nor[or[size1,yellow],implies[implies[and[yellow,and[apply(same_shape,iota(filter(x.s, size1))),size3]],circle],size1]]]],size2]), blue))'	0:exists(%s, %s);4:and[%s,%s];4:triangle;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:size3;4:and[%s,%s];4:blue;4:nor[%s,%s];4:or[%s,%s];4:size1;4:yellow;4:implies[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size3;4:circle;4:size1;4:size2;4:blue
'λx.apply(and[green,size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(and[green,size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size1,blue],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(x.s, size2), rectangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle
'λx.apply(and[rectangle,yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:yellow;1:%s.o;2:x
'λx.exists(and[or[triangle,and[and[blue,not[or[circle,size3]]],and[and[triangle,apply(same_size,x.o)],apply(same_size,iota(filter(x.s, and[not[apply(same_color,x.o)],yellow])))]]],size1], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:or[%s,%s];4:triangle;4:and[%s,%s];4:and[%s,%s];4:blue;4:not[%s];4:or[%s,%s];4:circle;4:size3;4:and[%s,%s];4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;4:size1;3:%s.s;2:x
'λx.empty(filter(x.s, not[and[rectangle,apply(same_shape,iota(x.s))]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.forall(not[apply(same_shape,x.o)],x.s)'	0:forall(%s,%s);4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(or[yellow,circle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:circle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, size2), apply(same_size,x.o)))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.forall(and[yellow,blue],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:yellow;4:blue;3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(filter(x.s, triangle), rectangle), size1)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle;4:size1
'λx.contains(x.o, filter(filter(x.s, size3), triangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle
'λx.apply(and[rectangle,not[nor[size3,and[and[not[apply(size-gt,iota(x.s))],not[circle]],circle]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:not[%s];4:nor[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:not[%s];4:circle;4:circle;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(filter(filter(filter(x.s, and[circle,size2]), rectangle), or[and[size2,and[yellow,green]],rectangle]), and[rectangle,apply(same_color,x.o)]), yellow)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size2;4:rectangle;4:or[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:yellow;4:green;4:rectangle;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow
'λx.apply(nand[blue,green],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:blue;4:green;1:%s.o;2:x
'λx.exists(rectangle, filter(filter(filter(x.s, and[rectangle,size3]), circle), circle))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:size3;4:circle;4:circle
'λx.apply(green,iota(filter(x.s, apply(same_shape,iota(filter(x.s, size1))))))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.contains(iota(filter(filter(filter(x.s, and[triangle,and[rectangle,and[triangle,size1]]]), not[size1]), blue)), filter(filter(x.s, size3), not[or[and[triangle,green],not[blue]]]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:triangle;4:size1;4:not[%s];4:size1;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:triangle;4:green;4:not[%s];4:blue
'λx.apply(iff[or[and[not[triangle],apply(same_size,iota(filter(x.s, size2)))],size2],circle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:or[%s,%s];4:and[%s,%s];4:not[%s];4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2;4:circle;1:%s.o;2:x
'λx.apply(apply(same_color,iota(filter(x.s, size3))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[not[green],yellow],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:not[%s];4:green;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size1,green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:green;1:%s.o;2:x
'λx.apply(and[and[nand[size1,green],size2],triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:size1;4:green;4:size2;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, triangle), iff[rectangle,and[rectangle,size3]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:iff[%s,%s];4:rectangle;4:and[%s,%s];4:rectangle;4:size3
'λx.forall(and[and[or[blue,and[not[apply(size-geq,x.o)],rectangle]],and[nor[not[circle],apply(size-lt,iota(filter(x.s, size3)))],or[circle,size2]]],circle],filter(x.s, triangle))'	0:forall(%s,%s);4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:blue;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:rectangle;4:and[%s,%s];4:nor[%s,%s];4:not[%s];4:circle;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:circle;4:size2;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(apply(same_color,iota(filter(filter(x.s, triangle), yellow))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:yellow;1:%s.o;2:x
'λx.apply(and[and[size3,size3],rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size3;4:size3;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[apply(same_size,iota(x.s))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(and[nor[yellow,or[yellow,size3]],size1],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:yellow;4:or[%s,%s];4:yellow;4:size3;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(and[or[and[blue,or[circle,size2]],circle],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:blue;4:or[%s,%s];4:circle;4:size2;4:circle;4:yellow;1:%s.o;2:x
'λx.apply(nand[yellow,rectangle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:yellow;4:rectangle;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(filter(x.s, green), and[blue,rectangle]), apply(same_size,iota(x.s)))))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:blue;4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.exists(or[triangle,blue], filter(filter(x.s, size2), size2))'	0:exists(%s, %s);4:or[%s,%s];4:triangle;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2
'λx.apply(and[size2,green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:green;1:%s.o;2:x
'λx.apply(and[or[and[or[circle,green],green],apply(same_color,iota(filter(filter(x.s, and[yellow,or[circle,or[not[yellow],circle]]]), triangle)))],apply(same_color,x.o)],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:circle;4:green;4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:or[%s,%s];4:circle;4:or[%s,%s];4:not[%s];4:yellow;4:circle;4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, size2)), filter(filter(x.s, size1), iff[and[apply(same_shape,x.o),and[size1,green]],green]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:iff[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:size1;4:green;4:green
'λx.apply(nand[nor[not[green],or[or[rectangle,and[circle,size2]],apply(size-lt,x.o)]],yellow],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:nor[%s,%s];4:not[%s];4:green;4:or[%s,%s];4:or[%s,%s];4:rectangle;4:and[%s,%s];4:circle;4:size2;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:yellow;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, or[rectangle,triangle]), circle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:triangle;4:circle
'λx.apply(and[apply(same_shape,iota(x.s)),nand[green,blue]],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:nand[%s,%s];4:green;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.contains(iota(x.s), filter(filter(x.s, circle), apply(same_size,x.o)))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(not[not[nor[and[or[not[or[yellow,blue]],yellow],or[apply(same_size,x.o),size3]],apply(size-gt,x.o)]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:nor[%s,%s];4:and[%s,%s];4:or[%s,%s];4:not[%s];4:or[%s,%s];4:yellow;4:blue;4:yellow;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:%s.o;2:x
'λx.forall(and[circle,rectangle],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:circle;4:rectangle;3:%s.s;2:x
'λx.contains(iota(x.s), filter(filter(x.s, or[circle,green]), and[and[not[circle],size2],triangle]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:green;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:circle;4:size2;4:triangle
'λx.apply(yellow,iota(filter(x.s, apply(same_shape,iota(x.s)))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, blue), or[apply(same_color,iota(filter(x.s, yellow))),green]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green
'λx.forall(circle,filter(x.s, and[or[green,yellow],and[or[size2,and[and[not[nor[triangle,triangle]],or[rectangle,yellow]],iff[size2,and[circle,circle]]]],and[size3,not[and[iff[size1,size2],blue]]]]]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:green;4:yellow;4:and[%s,%s];4:or[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:nor[%s,%s];4:triangle;4:triangle;4:or[%s,%s];4:rectangle;4:yellow;4:iff[%s,%s];4:size2;4:and[%s,%s];4:circle;4:circle;4:and[%s,%s];4:size3;4:not[%s];4:and[%s,%s];4:iff[%s,%s];4:size1;4:size2;4:blue
'λx.forall(not[size3],filter(filter(x.s, implies[and[size2,size3],and[and[size3,green],and[nor[size1,triangle],apply(size-gt,iota(x.s))]]]), size1))'	0:forall(%s,%s);4:not[%s];4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:and[%s,%s];4:size2;4:size3;4:and[%s,%s];4:and[%s,%s];4:size3;4:green;4:and[%s,%s];4:nor[%s,%s];4:size1;4:triangle;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:size1
'λx.apply(size2,iota(filter(filter(x.s, blue), and[green,circle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:green;4:circle
'λx.forall(green,filter(x.s, size3))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.forall(green,filter(x.s, size2))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.forall(green,filter(x.s, green))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(rectangle,iota(filter(filter(filter(x.s, triangle), rectangle), triangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle;4:triangle
'λx.apply(size3,iota(filter(x.s, iff[not[and[circle,and[triangle,and[and[circle,size1],blue]]]],apply(same_color,x.o)])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:not[%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:triangle;4:and[%s,%s];4:and[%s,%s];4:circle;4:size1;4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, size2), and[apply(size-geq,iota(x.s)),size3])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:size3;3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, green), circle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:circle
'λx.apply(and[and[and[or[rectangle,not[or[size3,apply(size-leq,iota(x.s))]]],or[circle,size1]],size1],blue],iota(filter(filter(x.s, green), triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:rectangle;4:not[%s];4:or[%s,%s];4:size3;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:size1;4:size1;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:triangle
'λx.apply(implies[not[green],or[size1,size1]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:not[%s];4:green;4:or[%s,%s];4:size1;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(filter(x.s, triangle), not[iff[iff[triangle,apply(same_size,x.o)],implies[size1,blue]]]), triangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:not[%s];4:iff[%s,%s];4:iff[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:implies[%s,%s];4:size1;4:blue;4:triangle
'λx.apply(and[green,yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:yellow;1:%s.o;2:x
'λx.forall(rectangle,filter(x.s, nand[circle,rectangle]))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:circle;4:rectangle
'λx.apply(green,iota(filter(filter(x.s, size1), circle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle
'λx.forall(green,filter(filter(filter(filter(filter(filter(x.s, and[and[or[rectangle,not[size1]],rectangle],size1]), or[blue,size2]), rectangle), not[triangle]), implies[blue,and[rectangle,or[or[size1,not[or[and[not[and[apply(same_size,x.o),rectangle]],and[or[circle,blue],circle]],blue]]],and[size3,blue]]]]), nor[and[size1,size1],and[circle,circle]]))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:rectangle;4:not[%s];4:size1;4:rectangle;4:size1;4:or[%s,%s];4:blue;4:size2;4:rectangle;4:not[%s];4:triangle;4:implies[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:or[%s,%s];4:size1;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:rectangle;4:and[%s,%s];4:or[%s,%s];4:circle;4:blue;4:circle;4:blue;4:and[%s,%s];4:size3;4:blue;4:nor[%s,%s];4:and[%s,%s];4:size1;4:size1;4:and[%s,%s];4:circle;4:circle
'λx.apply(size3,iota(filter(x.s, not[size3])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3
'λx.apply(size3,iota(filter(x.s, not[size2])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2
'λx.apply(size1,iota(filter(x.s, not[size1])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1
'λx.apply(size1,iota(filter(x.s, not[size2])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2
'λx.empty(filter(x.s, implies[or[green,size1],and[size3,rectangle]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:or[%s,%s];4:green;4:size1;4:and[%s,%s];4:size3;4:rectangle
'λx.apply(not[apply(size-lt,x.o)],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(not[implies[yellow,or[nand[not[and[size1,apply(same_color,iota(filter(x.s, green)))]],apply(same_size,iota(x.s))],triangle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:implies[%s,%s];4:yellow;4:or[%s,%s];4:nand[%s,%s];4:not[%s];4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:triangle;1:%s.o;2:x
'λx.exists(nor[blue,and[size3,blue]], x.s)'	0:exists(%s, %s);4:nor[%s,%s];4:blue;4:and[%s,%s];4:size3;4:blue;3:%s.s;2:x
'λx.contains(iota(filter(filter(filter(filter(filter(x.s, nand[blue,size1]), not[rectangle]), blue), size1), apply(same_size,x.o))), filter(x.s, and[implies[size1,yellow],apply(same_color,x.o)]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:blue;4:size1;4:not[%s];4:rectangle;4:blue;4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:implies[%s,%s];4:size1;4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(and[rectangle,or[rectangle,yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:or[%s,%s];4:rectangle;4:yellow;1:%s.o;2:x
'λx.apply(or[yellow,not[yellow]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:not[%s];4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(and[yellow,not[or[triangle,not[triangle]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:not[%s];4:or[%s,%s];4:triangle;4:not[%s];4:triangle;1:%s.o;2:x
'λx.apply(apply(same_size,iota(filter(filter(x.s, blue), and[rectangle,size3]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:rectangle;4:size3;1:%s.o;2:x
'λx.empty(filter(filter(x.s, size1), not[rectangle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:not[%s];4:rectangle
'λx.empty(filter(x.s, not[circle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.contains(iota(filter(filter(x.s, yellow), size2)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2;3:%s.s;2:x
'λx.contains(iota(filter(filter(x.s, yellow), size3)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size3;3:%s.s;2:x
'λx.contains(iota(filter(filter(x.s, yellow), size1)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;3:%s.s;2:x
'λx.apply(apply(same_color,iota(filter(x.s, and[green,rectangle]))),iota(filter(x.s, blue)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(rectangle,iota(filter(filter(filter(filter(x.s, or[apply(same_color,iota(x.s)),iff[apply(same_shape,iota(filter(filter(x.s, size3), triangle))),size2]]), triangle), size1), triangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle;4:size2;4:triangle;4:size1;4:triangle
'λx.apply(size2,iota(filter(filter(filter(x.s, blue), and[size3,blue]), nand[rectangle,rectangle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:size3;4:blue;4:nand[%s,%s];4:rectangle;4:rectangle
'λx.forall(apply(size-gt,iota(filter(x.s, rectangle))),filter(x.s, blue))'	0:forall(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(nand[blue,triangle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:blue;4:triangle;1:%s.o;2:x
'λx.apply(nor[green,circle],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:green;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_color,x.o),iota(filter(filter(filter(x.s, circle), not[or[triangle,circle]]), and[and[not[or[and[not[rectangle],size2],rectangle]],apply(same_size,x.o)],triangle])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:or[%s,%s];4:triangle;4:circle;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:or[%s,%s];4:and[%s,%s];4:not[%s];4:rectangle;4:size2;4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle
'λx.contains(x.o, filter(filter(filter(filter(filter(x.s, and[circle,blue]), blue), not[yellow]), and[rectangle,implies[not[rectangle],and[rectangle,size1]]]), rectangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:blue;4:blue;4:not[%s];4:yellow;4:and[%s,%s];4:rectangle;4:implies[%s,%s];4:not[%s];4:rectangle;4:and[%s,%s];4:rectangle;4:size1;4:rectangle
'λx.exists(nor[not[circle],size2], x.s)'	0:exists(%s, %s);4:nor[%s,%s];4:not[%s];4:circle;4:size2;3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(x.s, size2), circle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle
'λx.contains(x.o, filter(filter(filter(filter(filter(x.s, apply(same_size,iota(filter(filter(x.s, blue), circle)))), not[size2]), size2), rectangle), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle;4:not[%s];4:size2;4:size2;4:rectangle;4:green
'λx.apply(implies[circle,size3],iota(filter(filter(x.s, size1), circle)))'	0:apply(%s,%s);4:implies[%s,%s];4:circle;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle
'λx.apply(or[blue,size2],iota(filter(filter(x.s, size2), rectangle)))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle
'λx.apply(circle,iota(filter(filter(x.s, apply(same_color,x.o)), blue)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue
'λx.apply(size1,iota(filter(x.s, or[yellow,triangle])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:triangle
'λx.apply(yellow,iota(x.s))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(x.s, nand[size2,yellow]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size2;4:yellow
'λx.contains(iota(filter(filter(x.s, apply(same_color,x.o)), rectangle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle;3:%s.s;2:x
'λx.apply(not[apply(same_color,iota(x.s))],iota(filter(filter(x.s, circle), and[not[yellow],size1])))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:not[%s];4:yellow;4:size1
'λx.exists(size2, filter(filter(x.s, apply(size-lt,x.o)), circle))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:circle
'λx.apply(and[and[blue,and[rectangle,green]],green],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:green;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[triangle,and[blue,and[triangle,apply(same_color,x.o)]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:blue;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[triangle,blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[or[or[size3,size2],nand[and[size3,rectangle],size1]],apply(same_size,iota(filter(filter(x.s, implies[apply(same_color,iota(filter(filter(filter(x.s, green), size2), not[size3]))),green]), implies[rectangle,and[green,size3]])))],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:or[%s,%s];4:or[%s,%s];4:size3;4:size2;4:nand[%s,%s];4:and[%s,%s];4:size3;4:rectangle;4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size2;4:not[%s];4:size3;4:green;4:implies[%s,%s];4:rectangle;4:and[%s,%s];4:green;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_shape,x.o),iota(filter(x.s, implies[apply(same_shape,x.o),not[apply(same_color,x.o)]])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, and[green,apply(same_shape,x.o)]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.empty(filter(x.s, implies[size3,apply(same_color,iota(x.s))]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(or[and[yellow,triangle],and[blue,green]],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:yellow;4:triangle;4:and[%s,%s];4:blue;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(and[and[size2,apply(same_shape,iota(x.s))],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:green;1:%s.o;2:x
'λx.apply(and[triangle,not[size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:not[%s];4:size2;1:%s.o;2:x
'λx.apply(circle,x.o)'	0:apply(%s,%s);4:circle;1:%s.o;2:x
'λx.apply(and[and[blue,blue],size1],iota(filter(filter(filter(filter(filter(filter(filter(x.s, triangle), size1), apply(size-lt,x.o)), size1), size2), circle), apply(same_size,x.o))))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:blue;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size1;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:size1;4:size2;4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(and[and[not[size3],rectangle],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size3;4:rectangle;4:size3;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, blue), size3), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3;4:rectangle
'λx.apply(and[blue,nand[apply(same_color,x.o),circle]],iota(filter(x.s, and[triangle,circle])))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:nand[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:circle
'λx.apply(rectangle,iota(filter(filter(filter(x.s, green), and[and[or[and[triangle,and[and[not[green],apply(size-gt,x.o)],apply(same_color,x.o)]],or[not[triangle],or[yellow,size3]]],green],or[not[iff[rectangle,or[circle,nor[and[and[and[size2,size1],rectangle],rectangle],triangle]]]],size2]]), or[size1,and[apply(same_size,x.o),green]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:green;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:or[%s,%s];4:not[%s];4:triangle;4:or[%s,%s];4:yellow;4:size3;4:green;4:or[%s,%s];4:not[%s];4:iff[%s,%s];4:rectangle;4:or[%s,%s];4:circle;4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:size1;4:rectangle;4:rectangle;4:triangle;4:size2;4:or[%s,%s];4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green
'λx.apply(size2,iota(filter(x.s, apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(x.s, apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(filter(x.s, size3), yellow), size3)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow;4:size3
'λx.exists(size2, filter(filter(filter(x.s, circle), apply(size-lt,x.o)), apply(same_size,iota(filter(filter(x.s, size2), and[blue,triangle])))))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:blue;4:triangle
'λx.apply(not[not[and[size3,size1]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:and[%s,%s];4:size3;4:size1;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, apply(size-gt,x.o))))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, size3), yellow)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow
'λx.apply(and[and[yellow,not[circle]],and[implies[circle,and[circle,circle]],triangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:not[%s];4:circle;4:and[%s,%s];4:implies[%s,%s];4:circle;4:and[%s,%s];4:circle;4:circle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[triangle,triangle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:triangle;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(filter(x.s, blue), size2), green))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2;4:green
'λx.apply(apply(same_shape,x.o),iota(filter(filter(x.s, apply(same_shape,iota(filter(filter(x.s, blue), iff[rectangle,green])))), yellow)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:iff[%s,%s];4:rectangle;4:green;4:yellow
'λx.contains(iota(filter(x.s, yellow)), filter(x.s, size3))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(or[yellow,circle], filter(x.s, circle))'	0:exists(%s, %s);4:or[%s,%s];4:yellow;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(triangle,iota(filter(filter(x.s, and[not[and[size1,rectangle]],green]), green)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:size1;4:rectangle;4:green;4:green
'λx.apply(and[or[triangle,size3],apply(same_shape,iota(filter(x.s, blue)))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:triangle;4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.apply(or[blue,and[green,yellow]],iota(filter(filter(filter(x.s, rectangle), apply(same_shape,iota(x.s))), iff[circle,or[size3,triangle]])))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:and[%s,%s];4:green;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:iff[%s,%s];4:circle;4:or[%s,%s];4:size3;4:triangle
'λx.apply(rectangle,iota(filter(x.s, implies[size3,implies[and[rectangle,and[rectangle,size3]],yellow]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size3;4:implies[%s,%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:rectangle;4:size3;4:yellow
'λx.apply(apply(same_shape,x.o),iota(filter(filter(x.s, yellow), nor[size3,triangle])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:nor[%s,%s];4:size3;4:triangle
'λx.apply(not[size3],iota(filter(filter(x.s, apply(size-leq,iota(filter(filter(x.s, and[rectangle,size2]), or[not[size3],not[green]])))), and[blue,and[circle,apply(size-lt,iota(filter(x.s, green)))]])))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:size2;4:or[%s,%s];4:not[%s];4:size3;4:not[%s];4:green;4:and[%s,%s];4:blue;4:and[%s,%s];4:circle;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.exists(not[nand[or[size1,triangle],apply(same_shape,x.o)]], filter(filter(filter(filter(x.s, blue), rectangle), blue), rectangle))'	0:exists(%s, %s);4:not[%s];4:nand[%s,%s];4:or[%s,%s];4:size1;4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle;4:blue;4:rectangle
'λx.apply(apply(same_shape,x.o),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(or[yellow,rectangle],iota(filter(x.s, not[circle])))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.apply(triangle,iota(filter(x.s, nor[green,triangle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:green;4:triangle
'λx.apply(and[apply(same_color,iota(filter(filter(filter(x.s, apply(same_color,iota(x.s))), triangle), size3))),or[size1,rectangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:triangle;4:size3;4:or[%s,%s];4:size1;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, size1)), filter(filter(filter(x.s, apply(same_size,iota(x.s))), yellow), rectangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:yellow;4:rectangle
'λx.apply(or[and[and[and[triangle,not[green]],apply(size-lt,iota(filter(x.s, circle)))],size2],apply(size-gt,x.o)],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:not[%s];4:green;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size2;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(not[blue],iota(filter(filter(x.s, or[not[and[green,blue]],green]), size3)))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:green;4:blue;4:green;4:size3
'λx.apply(size2,iota(filter(filter(x.s, blue), triangle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle
'λx.apply(iff[apply(same_shape,x.o),apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(nor[and[rectangle,yellow],and[size1,and[and[blue,apply(size-lt,iota(x.s))],or[and[nand[green,size3],green],or[size2,or[triangle,or[or[rectangle,circle],green]]]]]]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:rectangle;4:yellow;4:and[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:blue;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:green;4:size3;4:green;4:or[%s,%s];4:size2;4:or[%s,%s];4:triangle;4:or[%s,%s];4:or[%s,%s];4:rectangle;4:circle;4:green;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, and[circle,size3]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size3
'λx.exists(triangle, filter(filter(filter(filter(x.s, iff[size3,apply(size-geq,x.o)]), yellow), and[not[apply(same_size,iota(filter(x.s, apply(same_color,x.o))))],rectangle]), apply(same_color,x.o)))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size3;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:yellow;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(or[blue,size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:size3;1:%s.o;2:x
'λx.apply(or[blue,size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:size1;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, and[nor[and[not[yellow],or[not[iff[green,and[size3,apply(same_size,x.o)]]],or[blue,size1]]],and[yellow,not[blue]]],blue]), yellow)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:not[%s];4:yellow;4:or[%s,%s];4:not[%s];4:iff[%s,%s];4:green;4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:blue;4:size1;4:and[%s,%s];4:yellow;4:not[%s];4:blue;4:blue;4:yellow
'λx.apply(apply(size-geq,x.o),iota(filter(filter(x.s, or[size1,apply(size-geq,x.o)]), blue)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:blue
'λx.apply(nor[triangle,blue],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:nor[%s,%s];4:triangle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(size1,iota(filter(filter(x.s, not[or[blue,or[apply(same_shape,iota(x.s)),circle]]]), triangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:blue;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle;4:triangle
'λx.apply(apply(same_shape,x.o),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.forall(green,filter(filter(x.s, yellow), size2))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2
'λx.apply(blue,iota(filter(filter(filter(x.s, circle), triangle), size2)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle;4:size2
'λx.apply(or[triangle,not[size3]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:not[%s];4:size3;1:%s.o;2:x
'λx.apply(or[size2,and[triangle,and[yellow,yellow]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:and[%s,%s];4:triangle;4:and[%s,%s];4:yellow;4:yellow;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, circle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(or[rectangle,circle],iota(filter(x.s, or[size2,size2])))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:size2
'λx.apply(and[blue,yellow],iota(filter(filter(x.s, size3), apply(same_size,iota(filter(x.s, nand[circle,apply(size-leq,x.o)]))))))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:circle;4:apply(%s,%s);5:size-leq;1:%s.o;2:x
'λx.forall(and[not[and[green,apply(same_shape,x.o)]],blue],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue;3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(filter(x.s, yellow), blue), rectangle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:blue;4:rectangle
'λx.apply(and[and[size3,apply(size-gt,x.o)],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size3;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:size1;1:%s.o;2:x
'λx.contains(iota(x.s), filter(x.s, green))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.contains(iota(x.s), filter(x.s, size1))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.contains(iota(x.s), filter(x.s, size2))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.contains(iota(x.s), filter(x.s, size3))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(and[size3,or[size3,green]],iota(filter(filter(x.s, yellow), rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:or[%s,%s];4:size3;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle
'λx.apply(not[iff[iff[rectangle,apply(size-lt,iota(filter(filter(x.s, not[green]), or[rectangle,rectangle])))],or[blue,not[size2]]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:iff[%s,%s];4:iff[%s,%s];4:rectangle;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:or[%s,%s];4:rectangle;4:rectangle;4:or[%s,%s];4:blue;4:not[%s];4:size2;1:iota(%s);3:%s.s;2:x
'λx.forall(implies[and[circle,circle],or[not[and[apply(same_color,x.o),size3]],and[apply(same_color,x.o),and[nor[circle,rectangle],and[apply(same_size,iota(x.s)),not[size1]]]]]],filter(filter(filter(x.s, green), rectangle), triangle))'	0:forall(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:circle;4:circle;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:nor[%s,%s];4:circle;4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:not[%s];4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle;4:triangle
'λx.exists(apply(same_size,x.o), filter(x.s, size3))'	0:exists(%s, %s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(green, filter(x.s, circle))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.forall(or[or[blue,green],apply(size-leq,iota(filter(filter(x.s, size3), green)))],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:or[%s,%s];4:blue;4:green;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green;3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, and[yellow,size1]), circle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size1;4:circle
'λx.apply(apply(size-lt,iota(filter(filter(x.s, yellow), and[not[not[apply(same_shape,x.o)]],circle]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:not[%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;1:%s.o;2:x
'λx.forall(size1,filter(filter(filter(x.s, circle), blue), size3))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue;4:size3
'λx.apply(nand[triangle,size1],iota(filter(x.s, and[apply(same_size,iota(x.s)),size1])))'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size1
'λx.exists(size2, filter(x.s, circle))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(or[and[apply(same_shape,iota(filter(filter(x.s, triangle), apply(size-geq,iota(x.s))))),size2],and[implies[size1,triangle],or[rectangle,size3]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:implies[%s,%s];4:size1;4:triangle;4:or[%s,%s];4:rectangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(x.s, and[and[or[and[size3,circle],not[green]],or[not[green],and[rectangle,yellow]]],not[rectangle]]), and[triangle,green])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size3;4:circle;4:not[%s];4:green;4:or[%s,%s];4:not[%s];4:green;4:and[%s,%s];4:rectangle;4:yellow;4:not[%s];4:rectangle;4:and[%s,%s];4:triangle;4:green
'λx.apply(apply(size-gt,iota(filter(x.s, yellow))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;1:%s.o;2:x
'λx.apply(and[rectangle,green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:green;1:%s.o;2:x
'λx.apply(or[size1,and[rectangle,triangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:and[%s,%s];4:rectangle;4:triangle;1:%s.o;2:x
'λx.apply(size3,iota(filter(x.s, nor[nor[green,circle],or[green,and[and[circle,and[size3,green]],circle]]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:nor[%s,%s];4:green;4:circle;4:or[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:size3;4:green;4:circle
'λx.apply(nor[nor[green,circle],not[implies[not[circle],and[and[and[size3,rectangle],yellow],green]]]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:nor[%s,%s];4:green;4:circle;4:not[%s];4:implies[%s,%s];4:not[%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:rectangle;4:yellow;4:green;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(filter(filter(filter(filter(x.s, size2), and[size3,green]), size1), blue), blue), circle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:size3;4:green;4:size1;4:blue;4:blue;4:circle
'λx.apply(and[size3,nand[not[not[green]],size2]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:nand[%s,%s];4:not[%s];4:not[%s];4:green;4:size2;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(filter(filter(filter(filter(filter(x.s, green), and[size3,not[and[size1,circle]]]), green), circle), size2), and[nor[size2,apply(same_color,iota(x.s))],or[size2,blue]]), circle), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:size3;4:not[%s];4:and[%s,%s];4:size1;4:circle;4:green;4:circle;4:size2;4:and[%s,%s];4:nor[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:blue;4:circle;4:green
'λx.contains(iota(filter(filter(filter(filter(x.s, not[circle]), apply(size-geq,x.o)), size2), and[blue,size2])), filter(filter(x.s, or[green,green]), blue))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:size2;4:and[%s,%s];4:blue;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:green;4:blue
'λx.apply(triangle,iota(filter(filter(filter(filter(filter(x.s, and[green,and[size2,green]]), size3), size2), or[yellow,or[size3,size2]]), green)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:and[%s,%s];4:size2;4:green;4:size3;4:size2;4:or[%s,%s];4:yellow;4:or[%s,%s];4:size3;4:size2;4:green
'λx.exists(blue, filter(filter(x.s, size1), rectangle))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle
'λx.exists(rectangle, filter(x.s, triangle))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.contains(iota(x.s), filter(filter(x.s, green), yellow))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow
'λx.apply(and[or[apply(same_shape,x.o),blue],nor[triangle,green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue;4:nor[%s,%s];4:triangle;4:green;1:%s.o;2:x
'λx.forall(size2,filter(filter(x.s, size1), apply(same_size,x.o)))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(iff[and[size1,rectangle],green],iota(filter(filter(x.s, apply(same_size,x.o)), blue)))'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:size1;4:rectangle;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue
'λx.exists(circle, filter(filter(x.s, blue), circle))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle
'λx.apply(and[triangle,green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size3,or[and[blue,triangle],yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:or[%s,%s];4:and[%s,%s];4:blue;4:triangle;4:yellow;1:%s.o;2:x
'λx.apply(not[and[rectangle,and[iff[or[triangle,and[blue,triangle]],or[yellow,not[apply(same_color,x.o)]]],triangle]]],iota(filter(filter(x.s, green), apply(same_size,x.o))))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:triangle;4:and[%s,%s];4:blue;4:triangle;4:or[%s,%s];4:yellow;4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(not[and[size3,size1]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size3;4:size1;1:%s.o;2:x
'λx.apply(iff[apply(same_size,x.o),blue],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;1:%s.o;2:x
'λx.apply(or[circle,triangle],iota(filter(x.s, apply(same_shape,iota(filter(x.s, implies[apply(size-leq,iota(filter(x.s, apply(same_size,iota(x.s))))),and[yellow,blue]]))))))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:blue
'λx.empty(filter(x.s, and[circle,not[apply(same_color,iota(x.s))]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(or[yellow,circle],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[nand[green,size1],not[yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:green;4:size1;4:not[%s];4:yellow;1:%s.o;2:x
'λx.forall(rectangle,filter(filter(filter(x.s, or[rectangle,apply(same_size,iota(x.s))]), green), not[size1]))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:green;4:not[%s];4:size1
'λx.apply(and[and[yellow,or[apply(same_color,iota(filter(x.s, and[size3,not[rectangle]]))),yellow]],and[yellow,and[blue,not[circle]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:not[%s];4:rectangle;4:yellow;4:and[%s,%s];4:yellow;4:and[%s,%s];4:blue;4:not[%s];4:circle;1:%s.o;2:x
'λx.apply(implies[size3,blue],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size3;4:blue;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, size1), yellow)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow
'λx.apply(and[iff[size2,size3],not[and[green,blue]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:size2;4:size3;4:not[%s];4:and[%s,%s];4:green;4:blue;1:%s.o;2:x
'λx.apply(nand[size2,size1],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size2;4:size1;1:%s.o;2:x
'λx.apply(nand[size2,size3],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size2;4:size3;1:%s.o;2:x
'λx.apply(nand[size3,size1],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size3;4:size1;1:%s.o;2:x
'λx.apply(nand[size3,size2],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size3;4:size2;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(filter(filter(x.s, size1), apply(same_size,iota(filter(x.s, size2)))), rectangle), size2)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle;4:size2
'λx.empty(filter(filter(x.s, size1), and[apply(size-lt,x.o),size2]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:size2
'λx.apply(iff[size2,and[size1,apply(same_size,x.o)]],iota(filter(filter(x.s, circle), yellow)))'	0:apply(%s,%s);4:iff[%s,%s];4:size2;4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow
'λx.exists(size2, filter(filter(filter(x.s, or[not[size3],green]), apply(same_color,x.o)), rectangle))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:size3;4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle
'λx.apply(implies[size2,blue],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size2;4:blue;1:%s.o;2:x
'λx.apply(size3,iota(filter(x.s, or[rectangle,nand[nand[circle,yellow],iff[and[yellow,green],size1]]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:nand[%s,%s];4:nand[%s,%s];4:circle;4:yellow;4:iff[%s,%s];4:and[%s,%s];4:yellow;4:green;4:size1
'λx.exists(blue, filter(x.s, rectangle))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(iff[yellow,yellow],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:yellow;4:yellow;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(filter(filter(filter(filter(x.s, apply(same_size,iota(x.s))), green), size1), size2), triangle), or[or[and[blue,rectangle],not[rectangle]],or[and[and[size2,rectangle],and[size1,size1]],triangle]]), size2), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:green;4:size1;4:size2;4:triangle;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:blue;4:rectangle;4:not[%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:rectangle;4:and[%s,%s];4:size1;4:size1;4:triangle;4:size2;4:rectangle
'λx.apply(and[size1,or[and[blue,circle],and[green,and[apply(same_color,iota(filter(filter(x.s, green), and[size2,size2]))),apply(same_size,iota(filter(x.s, rectangle)))]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:or[%s,%s];4:and[%s,%s];4:blue;4:circle;4:and[%s,%s];4:green;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:size2;4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(filter(x.s, rectangle), green), size1)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green;4:size1
'λx.exists(green, filter(filter(x.s, and[size1,size2]), rectangle))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size2;4:rectangle
'λx.apply(size1,iota(filter(filter(filter(x.s, circle), or[and[size3,and[triangle,nor[green,not[yellow]]]],size1]), triangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:triangle;4:nor[%s,%s];4:green;4:not[%s];4:yellow;4:size1;4:triangle
'λx.apply(and[and[nor[blue,triangle],size1],triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:blue;4:triangle;4:size1;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(x.s, apply(same_size,x.o)), size2)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2
'λx.apply(nor[size2,size3],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:size2;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(not[and[apply(size-leq,iota(filter(x.s, size3))),rectangle]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.exists(or[size3,and[apply(size-lt,iota(filter(x.s, and[blue,and[triangle,circle]]))),size2]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:size3;4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:and[%s,%s];4:triangle;4:circle;4:size2;3:%s.s;2:x
'λx.apply(and[or[apply(same_color,x.o),and[rectangle,implies[yellow,circle]]],apply(same_size,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:rectangle;4:implies[%s,%s];4:yellow;4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.forall(apply(same_shape,iota(filter(x.s, not[size2]))),filter(filter(x.s, or[blue,size1]), size2))'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:size1;4:size2
'λx.apply(circle,iota(filter(filter(x.s, or[triangle,not[rectangle]]), or[yellow,size2])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:not[%s];4:rectangle;4:or[%s,%s];4:yellow;4:size2
'λx.apply(apply(same_color,iota(filter(x.s, triangle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;1:%s.o;2:x
'λx.apply(iff[green,and[green,size3]],iota(filter(filter(x.s, apply(same_size,iota(x.s))), green)))'	0:apply(%s,%s);4:iff[%s,%s];4:green;4:and[%s,%s];4:green;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:green
'λx.apply(and[circle,nand[circle,size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:nand[%s,%s];4:circle;4:size1;1:%s.o;2:x
'λx.apply(apply(size-lt,x.o),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:%s.o;2:x
'λx.contains(x.o, filter(filter(filter(x.s, yellow), size1), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;4:green
'λx.apply(and[and[blue,green],implies[iff[size2,yellow],green]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:green;4:implies[%s,%s];4:iff[%s,%s];4:size2;4:yellow;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[not[or[and[or[blue,nand[rectangle,not[blue]]],size1],implies[not[size3],and[and[and[rectangle,circle],triangle],size3]]]],size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:blue;4:nand[%s,%s];4:rectangle;4:not[%s];4:blue;4:size1;4:implies[%s,%s];4:not[%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:circle;4:triangle;4:size3;4:size2;1:iota(%s);3:%s.s;2:x
'λx.forall(size2,filter(filter(x.s, blue), or[or[circle,circle],blue]))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:or[%s,%s];4:circle;4:circle;4:blue
'λx.apply(implies[size1,or[and[blue,or[circle,triangle]],circle]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size1;4:or[%s,%s];4:and[%s,%s];4:blue;4:or[%s,%s];4:circle;4:triangle;4:circle;1:%s.o;2:x
'λx.forall(or[blue,circle],filter(filter(filter(x.s, green), and[or[and[size3,size3],size1],not[and[green,triangle]]]), size1))'	0:forall(%s,%s);4:or[%s,%s];4:blue;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size3;4:size3;4:size1;4:not[%s];4:and[%s,%s];4:green;4:triangle;4:size1
'λx.apply(or[rectangle,circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:circle;1:%s.o;2:x
'λx.exists(or[nand[size3,size1],yellow], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:nand[%s,%s];4:size3;4:size1;4:yellow;3:%s.s;2:x
'λx.forall(or[size2,blue],filter(filter(filter(filter(filter(x.s, blue), green), size1), implies[triangle,size3]), blue))'	0:forall(%s,%s);4:or[%s,%s];4:size2;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green;4:size1;4:implies[%s,%s];4:triangle;4:size3;4:blue
'λx.contains(iota(filter(filter(x.s, blue), circle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle;3:%s.s;2:x
'λx.apply(and[or[not[implies[green,circle]],apply(same_shape,x.o)],size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:not[%s];4:implies[%s,%s];4:green;4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_color,iota(filter(filter(filter(x.s, not[size1]), yellow), blue))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:yellow;4:blue;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, or[circle,or[triangle,yellow]]), triangle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:or[%s,%s];4:triangle;4:yellow;4:triangle;3:%s.s;2:x
'λx.apply(blue,iota(filter(x.s, or[yellow,triangle])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:triangle
'λx.apply(triangle,iota(filter(filter(x.s, or[yellow,yellow]), apply(same_color,x.o))))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(and[yellow,apply(same_shape,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.contains(iota(x.s), filter(x.s, or[green,size2]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:size2
'λx.apply(blue,iota(filter(x.s, iff[green,apply(same_size,iota(filter(x.s, blue)))])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(or[size3,not[yellow]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:not[%s];4:yellow;1:%s.o;2:x
'λx.forall(size3,filter(x.s, or[yellow,size2]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:size2
'λx.apply(and[triangle,not[size3]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:not[%s];4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[rectangle,and[blue,size2]],iota(filter(filter(x.s, size3), and[size2,size3])))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:blue;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:size2;4:size3
'λx.apply(and[not[size1],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size1;4:rectangle;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(filter(x.s, implies[not[yellow],size3]), size2), triangle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:not[%s];4:yellow;4:size3;4:size2;4:triangle
'λx.apply(and[yellow,green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:green;1:%s.o;2:x
'λx.apply(and[and[yellow,apply(same_color,iota(filter(filter(filter(x.s, size2), triangle), green)))],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:triangle;4:green;4:yellow;1:%s.o;2:x
'λx.apply(and[rectangle,size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[rectangle,size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[rectangle,size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[and[not[nor[green,blue]],size2],size3],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:not[%s];4:nor[%s,%s];4:green;4:blue;4:size2;4:size3;1:%s.o;2:x
'λx.exists(and[blue,apply(same_size,x.o)], filter(x.s, not[size2]))'	0:exists(%s, %s);4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2
'λx.apply(apply(same_shape,iota(filter(filter(x.s, size2), apply(same_size,x.o)))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[not[size3],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size3;4:rectangle;1:%s.o;2:x
'λx.apply(and[blue,yellow],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.forall(or[size2,implies[size2,apply(same_shape,iota(filter(filter(filter(x.s, size1), circle), size2)))]],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:size2;4:implies[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle;4:size2;3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(filter(filter(x.s, circle), iff[size3,nor[circle,green]]), implies[blue,iff[and[not[rectangle],size1],or[apply(same_size,iota(x.s)),apply(same_shape,x.o)]]]), yellow)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:iff[%s,%s];4:size3;4:nor[%s,%s];4:circle;4:green;4:implies[%s,%s];4:blue;4:iff[%s,%s];4:and[%s,%s];4:not[%s];4:rectangle;4:size1;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow
'λx.apply(apply(size-leq,iota(filter(x.s, apply(size-leq,iota(filter(x.s, circle)))))),iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(circle,iota(filter(filter(x.s, blue), or[yellow,size2])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:yellow;4:size2
'λx.exists(nand[size2,rectangle], x.s)'	0:exists(%s, %s);4:nand[%s,%s];4:size2;4:rectangle;3:%s.s;2:x
'λx.apply(iff[size3,or[or[rectangle,and[size3,apply(same_shape,x.o)]],size3]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:size3;4:or[%s,%s];4:or[%s,%s];4:rectangle;4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(filter(filter(x.s, rectangle), apply(same_shape,iota(x.s))), triangle), yellow)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle;4:yellow
'λx.apply(or[and[not[and[and[and[yellow,rectangle],rectangle],triangle]],or[and[triangle,triangle],and[rectangle,and[apply(size-gt,iota(x.s)),rectangle]]]],and[blue,size1]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:rectangle;4:rectangle;4:triangle;4:or[%s,%s];4:and[%s,%s];4:triangle;4:triangle;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:blue;4:size1;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, blue), green)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green
'λx.apply(or[size1,apply(same_size,iota(filter(filter(x.s, and[not[triangle],size1]), blue)))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:triangle;4:size1;4:blue;1:%s.o;2:x
'λx.apply(apply(same_color,iota(filter(x.s, apply(same_size,x.o)))),iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(apply(same_size,iota(filter(x.s, and[and[size3,and[green,circle]],circle]))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:green;4:circle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, and[nor[iff[size2,circle],size2],size3])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:iff[%s,%s];4:size2;4:circle;4:size2;4:size3;3:%s.s;2:x
'λx.apply(or[rectangle,blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:blue;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, and[and[implies[triangle,size3],size3],blue]), and[and[yellow,yellow],triangle])), filter(x.s, yellow))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:triangle;4:size3;4:size3;4:blue;4:and[%s,%s];4:and[%s,%s];4:yellow;4:yellow;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(or[size2,triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:triangle;1:%s.o;2:x
'λx.apply(triangle,iota(filter(x.s, and[rectangle,size2])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:size2
'λx.apply(iff[and[and[size3,circle],and[and[triangle,rectangle],apply(size-geq,iota(filter(filter(filter(x.s, and[and[size3,size3],implies[green,size3]]), triangle), and[size3,yellow])))]],size1],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:circle;4:and[%s,%s];4:and[%s,%s];4:triangle;4:rectangle;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size3;4:size3;4:implies[%s,%s];4:green;4:size3;4:triangle;4:and[%s,%s];4:size3;4:yellow;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(x.s, not[apply(same_color,x.o)])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, and[triangle,and[rectangle,or[size1,apply(same_shape,iota(x.s))]]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(size-geq,iota(x.s)),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(x.s), filter(x.s, nor[or[size1,and[rectangle,and[not[yellow],or[circle,not[and[yellow,and[blue,or[size2,circle]]]]]]]],and[nor[yellow,size1],or[yellow,size1]]]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:or[%s,%s];4:size1;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:not[%s];4:yellow;4:or[%s,%s];4:circle;4:not[%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:blue;4:or[%s,%s];4:size2;4:circle;4:and[%s,%s];4:nor[%s,%s];4:yellow;4:size1;4:or[%s,%s];4:yellow;4:size1
'λx.apply(size3,iota(filter(filter(x.s, and[triangle,blue]), size3)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:blue;4:size3
'λx.contains(iota(filter(filter(filter(x.s, blue), iff[not[yellow],and[size3,triangle]]), and[and[and[size3,size3],size2],circle])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:iff[%s,%s];4:not[%s];4:yellow;4:and[%s,%s];4:size3;4:triangle;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:size3;4:size2;4:circle;3:%s.s;2:x
'λx.exists(and[blue,green], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:blue;4:green;3:%s.s;2:x
'λx.apply(or[triangle,green],iota(filter(x.s, apply(same_size,x.o))))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, nor[blue,size2]), nand[and[or[not[size2],triangle],rectangle],blue])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:blue;4:size2;4:nand[%s,%s];4:and[%s,%s];4:or[%s,%s];4:not[%s];4:size2;4:triangle;4:rectangle;4:blue
'λx.apply(and[nor[iff[size3,blue],triangle],and[apply(size-geq,x.o),size3]],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:iff[%s,%s];4:size3;4:blue;4:triangle;4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.empty(filter(x.s, and[iff[yellow,or[rectangle,triangle]],or[not[implies[size3,not[and[yellow,apply(same_shape,iota(filter(x.s, size1)))]]]],size1]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:iff[%s,%s];4:yellow;4:or[%s,%s];4:rectangle;4:triangle;4:or[%s,%s];4:not[%s];4:implies[%s,%s];4:size3;4:not[%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1
'λx.apply(circle,iota(filter(filter(x.s, rectangle), yellow)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:yellow
'λx.apply(not[not[not[circle]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:not[%s];4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[blue,blue],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:blue;4:blue;1:%s.o;2:x
'λx.exists(size1, filter(x.s, yellow))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(nand[apply(same_size,x.o),size3],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(or[apply(same_size,x.o),circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;1:%s.o;2:x
'λx.exists(or[not[or[rectangle,green]],triangle], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:not[%s];4:or[%s,%s];4:rectangle;4:green;4:triangle;3:%s.s;2:x
'λx.apply(and[circle,or[not[and[green,circle]],circle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:green;4:circle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[green,and[rectangle,rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:rectangle;4:rectangle;1:%s.o;2:x
'λx.forall(apply(size-gt,iota(x.s)),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.forall(iff[green,rectangle],x.s)'	0:forall(%s,%s);4:iff[%s,%s];4:green;4:rectangle;3:%s.s;2:x
'λx.exists(apply(size-lt,iota(x.s)), filter(filter(x.s, size1), rectangle))'	0:exists(%s, %s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle
'λx.exists(or[blue,size3], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:blue;4:size3;3:%s.s;2:x
'λx.apply(and[circle,iff[size2,rectangle]],iota(filter(filter(x.s, or[size2,size1]), or[size3,implies[circle,circle]])))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:iff[%s,%s];4:size2;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:size1;4:or[%s,%s];4:size3;4:implies[%s,%s];4:circle;4:circle
'λx.apply(nor[size2,size1],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size2;4:size1;1:%s.o;2:x
'λx.apply(nor[size2,size2],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size2;4:size2;1:%s.o;2:x
'λx.forall(not[implies[circle,size2]],x.s)'	0:forall(%s,%s);4:not[%s];4:implies[%s,%s];4:circle;4:size2;3:%s.s;2:x
'λx.apply(nor[apply(same_shape,iota(x.s)),triangle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle;1:%s.o;2:x
'λx.apply(and[size2,and[or[blue,or[triangle,yellow]],size2]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:or[%s,%s];4:blue;4:or[%s,%s];4:triangle;4:yellow;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size1,not[triangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:not[%s];4:triangle;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(filter(filter(x.s, size3), size2), triangle), rectangle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2;4:triangle;4:rectangle
'λx.contains(iota(filter(x.s, not[green])), filter(x.s, size1))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(apply(size-leq,iota(filter(filter(filter(filter(x.s, iff[triangle,green]), and[green,and[rectangle,triangle]]), size1), or[and[or[triangle,yellow],triangle],not[or[circle,size1]]]))), filter(x.s, size1))'	0:exists(%s, %s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:triangle;4:green;4:and[%s,%s];4:green;4:and[%s,%s];4:rectangle;4:triangle;4:size1;4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:triangle;4:yellow;4:triangle;4:not[%s];4:or[%s,%s];4:circle;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(and[triangle,iff[implies[rectangle,size2],rectangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:iff[%s,%s];4:implies[%s,%s];4:rectangle;4:size2;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[or[size1,blue],and[triangle,not[circle]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size1;4:blue;4:and[%s,%s];4:triangle;4:not[%s];4:circle;1:%s.o;2:x
'λx.apply(and[not[rectangle],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:rectangle;4:blue;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(filter(filter(filter(filter(x.s, blue), blue), or[size2,circle]), not[and[triangle,nand[rectangle,triangle]]]), green), circle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue;4:or[%s,%s];4:size2;4:circle;4:not[%s];4:and[%s,%s];4:triangle;4:nand[%s,%s];4:rectangle;4:triangle;4:green;4:circle
'λx.empty(filter(filter(filter(filter(filter(x.s, and[size1,rectangle]), rectangle), size1), apply(size-lt,iota(filter(filter(x.s, or[size1,or[size2,size3]]), yellow)))), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:rectangle;4:rectangle;4:size1;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:or[%s,%s];4:size2;4:size3;4:yellow;4:size3
'λx.apply(and[size3,and[green,yellow]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:green;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, green), or[yellow,and[apply(same_color,iota(filter(x.s, and[nor[size2,and[and[green,triangle],yellow]],size3]))),yellow]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:yellow;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:green;4:triangle;4:yellow;4:size3;4:yellow
'λx.apply(not[circle],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size1,not[size3]],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.empty(filter(x.s, and[iff[yellow,size2],rectangle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:iff[%s,%s];4:yellow;4:size2;4:rectangle
'λx.apply(and[size3,and[blue,and[green,circle]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:blue;4:and[%s,%s];4:green;4:circle;1:iota(%s);3:%s.s;2:x
'λx.forall(apply(same_size,x.o),filter(filter(x.s, triangle), size3))'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3
'λx.apply(and[green,triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, size2)), filter(filter(x.s, or[size1,yellow]), green))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:yellow;4:green
'λx.forall(size3,filter(x.s, apply(same_color,iota(x.s))))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(or[green,size2],iota(filter(filter(x.s, and[circle,yellow]), and[rectangle,size1])))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:yellow;4:and[%s,%s];4:rectangle;4:size1
'λx.forall(apply(same_shape,iota(filter(x.s, green))),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;3:%s.s;2:x
'λx.apply(and[size1,nor[rectangle,circle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:nor[%s,%s];4:rectangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(filter(x.s, yellow), blue), size1)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:blue;4:size1
'λx.apply(apply(same_size,iota(x.s)),iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.exists(nor[rectangle,rectangle], filter(filter(x.s, blue), or[not[iff[apply(same_shape,iota(x.s)),size2]],size3]))'	0:exists(%s, %s);4:nor[%s,%s];4:rectangle;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:not[%s];4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size2;4:size3
'λx.exists(rectangle, filter(x.s, nor[implies[and[blue,green],yellow],yellow]))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:blue;4:green;4:yellow;4:yellow
'λx.exists(and[and[not[blue],circle],green], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:blue;4:circle;4:green;3:%s.s;2:x
'λx.apply(nand[size1,not[apply(same_color,x.o)]],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:size1;4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.forall(not[not[rectangle]],x.s)'	0:forall(%s,%s);4:not[%s];4:not[%s];4:rectangle;3:%s.s;2:x
'λx.exists(apply(same_color,x.o), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(or[size3,nand[not[and[circle,size1]],size1]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:nand[%s,%s];4:not[%s];4:and[%s,%s];4:circle;4:size1;4:size1;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, size2), or[yellow,triangle])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:yellow;4:triangle;3:%s.s;2:x
'λx.apply(apply(same_size,iota(filter(filter(x.s, not[and[size2,circle]]), circle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:size2;4:circle;4:circle;1:%s.o;2:x
'λx.exists(or[implies[yellow,not[not[and[yellow,yellow]]]],apply(same_size,iota(filter(x.s, size1)))], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:implies[%s,%s];4:yellow;4:not[%s];4:not[%s];4:and[%s,%s];4:yellow;4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;3:%s.s;2:x
'λx.exists(not[size1], filter(filter(x.s, green), and[circle,apply(size-gt,iota(filter(x.s, yellow)))]))'	0:exists(%s, %s);4:not[%s];4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:circle;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(or[size1,and[size2,and[not[yellow],yellow]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:and[%s,%s];4:size2;4:and[%s,%s];4:not[%s];4:yellow;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, green)), filter(x.s, nand[apply(same_shape,x.o),size2]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2
'λx.forall(size3,filter(x.s, and[rectangle,green]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:green
'λx.forall(not[blue],x.s)'	0:forall(%s,%s);4:not[%s];4:blue;3:%s.s;2:x
'λx.apply(and[or[implies[nor[or[and[triangle,apply(same_shape,iota(x.s))],size1],size3],apply(same_size,x.o)],or[not[apply(same_size,x.o)],or[size3,size2]]],or[triangle,rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size1;4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:size3;4:size2;4:or[%s,%s];4:triangle;4:rectangle;1:%s.o;2:x
'λx.apply(and[green,size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:size1;1:%s.o;2:x
'λx.apply(and[green,size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:size3;1:%s.o;2:x
'λx.apply(and[green,size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:size2;1:%s.o;2:x
'λx.apply(and[or[rectangle,iff[and[size3,blue],and[yellow,rectangle]]],or[rectangle,or[or[not[size3],size2],yellow]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:rectangle;4:iff[%s,%s];4:and[%s,%s];4:size3;4:blue;4:and[%s,%s];4:yellow;4:rectangle;4:or[%s,%s];4:rectangle;4:or[%s,%s];4:or[%s,%s];4:not[%s];4:size3;4:size2;4:yellow;1:%s.o;2:x
'λx.exists(blue, filter(filter(x.s, yellow), nor[not[and[green,rectangle]],size3]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:nor[%s,%s];4:not[%s];4:and[%s,%s];4:green;4:rectangle;4:size3
'λx.apply(size3,iota(filter(x.s, apply(same_size,x.o))))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(size2,iota(filter(x.s, apply(same_size,x.o))))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(size1,iota(filter(x.s, apply(same_size,x.o))))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(or[apply(size-geq,iota(filter(filter(x.s, size2), size3))),nand[green,rectangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3;4:nand[%s,%s];4:green;4:rectangle;1:%s.o;2:x
'λx.apply(apply(same_size,x.o),iota(filter(filter(x.s, size1), yellow)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow
'λx.apply(iff[green,triangle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:green;4:triangle;1:%s.o;2:x
'λx.apply(and[and[circle,or[green,iff[rectangle,circle]]],and[rectangle,circle]],iota(filter(filter(filter(x.s, green), or[rectangle,triangle]), size1)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:or[%s,%s];4:green;4:iff[%s,%s];4:rectangle;4:circle;4:and[%s,%s];4:rectangle;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:rectangle;4:triangle;4:size1
'λx.apply(and[and[size3,and[not[apply(size-lt,iota(filter(x.s, yellow)))],apply(same_size,x.o)]],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;1:%s.o;2:x
'λx.empty(filter(x.s, implies[circle,not[yellow]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:circle;4:not[%s];4:yellow
'λx.apply(not[and[or[and[size1,size3],size1],size1]],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size1;4:size3;4:size1;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(apply(same_color,iota(filter(filter(filter(x.s, triangle), apply(same_shape,x.o)), and[apply(same_size,x.o),size1]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(filter(filter(filter(x.s, rectangle), circle), nand[triangle,green]), yellow), or[and[and[green,green],nand[green,not[green]]],rectangle])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle;4:nand[%s,%s];4:triangle;4:green;4:yellow;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:green;4:nand[%s,%s];4:green;4:not[%s];4:green;4:rectangle
'λx.apply(circle,iota(filter(filter(filter(filter(x.s, implies[and[yellow,or[and[triangle,green],rectangle]],apply(same_shape,x.o)]), circle), and[and[or[circle,nand[green,iff[green,not[size2]]]],and[rectangle,and[blue,rectangle]]],size1]), and[rectangle,and[not[yellow],yellow]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:and[%s,%s];4:yellow;4:or[%s,%s];4:and[%s,%s];4:triangle;4:green;4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:circle;4:nand[%s,%s];4:green;4:iff[%s,%s];4:green;4:not[%s];4:size2;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:blue;4:rectangle;4:size1;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:not[%s];4:yellow;4:yellow
'λx.forall(triangle,filter(filter(x.s, triangle), blue))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue
'λx.apply(and[rectangle,or[size3,apply(same_size,iota(x.s))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(size3,iota(filter(x.s, or[size3,size1])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:size1
'λx.apply(and[not[and[apply(same_shape,x.o),yellow]],triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, not[and[size1,triangle]]), and[or[rectangle,rectangle],not[apply(same_color,x.o)]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:size1;4:triangle;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:rectangle;4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, nand[and[rectangle,rectangle],triangle])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:and[%s,%s];4:rectangle;4:rectangle;4:triangle
'λx.apply(not[circle],iota(filter(x.s, not[triangle])))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.exists(yellow, filter(x.s, and[apply(same_shape,iota(filter(filter(x.s, circle), blue))),circle]))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue;4:circle
'λx.apply(and[yellow,green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:green;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(x.s), filter(x.s, not[yellow]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow
'λx.apply(not[and[yellow,and[rectangle,or[or[size1,yellow],not[blue]]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:or[%s,%s];4:size1;4:yellow;4:not[%s];4:blue;1:%s.o;2:x
'λx.contains(iota(filter(x.s, blue)), filter(filter(x.s, triangle), and[triangle,size3]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:triangle;4:size3
'λx.apply(and[not[and[yellow,apply(same_size,x.o)]],size1],iota(filter(filter(filter(x.s, size3), size3), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3;4:blue
'λx.apply(and[or[size2,size1],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size2;4:size1;4:green;1:%s.o;2:x
'λx.apply(apply(same_color,x.o),iota(filter(filter(x.s, size2), rectangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle
'λx.apply(apply(same_color,x.o),iota(filter(filter(x.s, size3), rectangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle
'λx.apply(apply(same_shape,iota(filter(filter(x.s, nor[yellow,blue]), and[yellow,yellow]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:yellow;4:blue;4:and[%s,%s];4:yellow;4:yellow;1:%s.o;2:x
'λx.apply(or[size2,or[green,rectangle]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:or[%s,%s];4:green;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[blue,triangle],not[not[not[yellow]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:triangle;4:not[%s];4:not[%s];4:not[%s];4:yellow;1:%s.o;2:x
'λx.empty(filter(filter(x.s, or[circle,apply(size-leq,iota(filter(x.s, size1)))]), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle
'λx.apply(size2,iota(filter(filter(filter(x.s, size2), not[blue]), yellow)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:not[%s];4:blue;4:yellow
'λx.apply(size1,iota(filter(filter(filter(filter(x.s, green), size1), green), or[size3,green])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1;4:green;4:or[%s,%s];4:size3;4:green
'λx.apply(size1,iota(filter(filter(x.s, size1), triangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle
'λx.apply(size2,iota(filter(filter(x.s, size3), triangle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle
'λx.empty(filter(filter(filter(x.s, size1), and[apply(same_size,x.o),green]), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;4:green
'λx.apply(and[blue,not[apply(same_color,x.o)]],iota(filter(filter(x.s, not[triangle]), rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:rectangle
'λx.apply(and[and[and[size1,blue],and[size1,green]],and[and[circle,nand[triangle,circle]],green]],iota(filter(filter(filter(filter(filter(x.s, and[yellow,not[or[not[not[apply(size-lt,iota(x.s))]],and[not[triangle],green]]]]), size3), implies[blue,yellow]), and[and[and[size1,size2],or[yellow,and[green,and[size3,apply(same_color,x.o)]]]],and[blue,rectangle]]), size3)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:blue;4:and[%s,%s];4:size1;4:green;4:and[%s,%s];4:and[%s,%s];4:circle;4:nand[%s,%s];4:triangle;4:circle;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:not[%s];4:or[%s,%s];4:not[%s];4:not[%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:triangle;4:green;4:size3;4:implies[%s,%s];4:blue;4:yellow;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:size2;4:or[%s,%s];4:yellow;4:and[%s,%s];4:green;4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:blue;4:rectangle;4:size3
'λx.apply(yellow,iota(filter(filter(filter(x.s, and[yellow,size2]), rectangle), not[iff[and[size2,size2],apply(same_size,x.o)]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size2;4:rectangle;4:not[%s];4:iff[%s,%s];4:and[%s,%s];4:size2;4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.exists(or[rectangle,or[circle,yellow]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:rectangle;4:or[%s,%s];4:circle;4:yellow;3:%s.s;2:x
'λx.apply(or[size1,blue],iota(filter(filter(filter(x.s, yellow), circle), size1)))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle;4:size1
'λx.apply(apply(same_shape,iota(filter(filter(filter(x.s, green), green), implies[and[apply(same_shape,iota(x.s)),circle],apply(size-leq,iota(x.s))]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:green;4:implies[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(or[circle,and[and[or[yellow,size1],green],not[blue]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:yellow;4:size1;4:green;4:not[%s];4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(x.s, not[or[blue,yellow]]), size1)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:blue;4:yellow;4:size1
'λx.apply(and[circle,size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[circle,size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(not[and[size1,triangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size1;4:triangle;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, apply(size-gt,iota(x.s))))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(x.s, size2), triangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:triangle
'λx.apply(and[and[size3,and[size1,and[or[apply(same_color,x.o),yellow],or[yellow,size1]]]],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:size1;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;4:or[%s,%s];4:yellow;4:size1;4:green;1:%s.o;2:x
'λx.apply(size3,iota(filter(x.s, and[not[size1],and[blue,apply(same_shape,iota(filter(filter(filter(x.s, size1), or[and[green,not[and[rectangle,circle]]],size1]), triangle)))]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:size1;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:or[%s,%s];4:and[%s,%s];4:green;4:not[%s];4:and[%s,%s];4:rectangle;4:circle;4:size1;4:triangle
'λx.apply(or[green,size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:size2;1:%s.o;2:x
'λx.apply(or[green,size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:size1;1:%s.o;2:x
'λx.apply(or[apply(same_color,x.o),circle],iota(filter(x.s, apply(size-leq,iota(x.s)))))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x
'λx.apply(or[blue,not[triangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:not[%s];4:triangle;1:%s.o;2:x
'λx.exists(yellow, filter(x.s, apply(size-leq,iota(x.s))))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(filter(filter(x.s, circle), size1), size1), green)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1;4:size1;4:green
'λx.apply(and[or[apply(same_shape,x.o),rectangle],and[rectangle,yellow]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle;4:and[%s,%s];4:rectangle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(and[nand[blue,and[rectangle,circle]],iff[size2,rectangle]],iota(filter(filter(x.s, yellow), not[size2])))'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:circle;4:iff[%s,%s];4:size2;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:size2
'λx.forall(and[blue,apply(size-lt,iota(filter(filter(filter(filter(x.s, apply(same_shape,x.o)), circle), and[and[size3,and[rectangle,and[blue,apply(same_shape,x.o)]]],size1]), and[rectangle,and[not[yellow],yellow]])))],filter(x.s, size2))'	0:forall(%s,%s);4:and[%s,%s];4:blue;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;4:and[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:not[%s];4:yellow;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.empty(filter(filter(x.s, rectangle), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2
'λx.apply(or[implies[not[apply(same_color,iota(x.s))],blue],size3],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:implies[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:blue;4:size3;1:iota(%s);3:%s.s;2:x
'λx.exists(iff[circle,yellow], x.s)'	0:exists(%s, %s);4:iff[%s,%s];4:circle;4:yellow;3:%s.s;2:x
'λx.exists(rectangle, filter(x.s, nand[and[not[size3],green],and[apply(size-leq,x.o),not[or[triangle,triangle]]]]))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:and[%s,%s];4:not[%s];4:size3;4:green;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:not[%s];4:or[%s,%s];4:triangle;4:triangle
'λx.apply(or[and[blue,green],not[size3]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:blue;4:green;4:not[%s];4:size3;1:%s.o;2:x
'λx.exists(or[not[size2],nand[rectangle,apply(same_size,iota(x.s))]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:not[%s];4:size2;4:nand[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.exists(or[rectangle,size1], filter(x.s, green))'	0:exists(%s, %s);4:or[%s,%s];4:rectangle;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(implies[yellow,and[and[apply(same_shape,x.o),blue],size2]],iota(filter(x.s, and[and[or[rectangle,and[size1,and[blue,green]]],blue],size2])))'	0:apply(%s,%s);4:implies[%s,%s];4:yellow;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:rectangle;4:and[%s,%s];4:size1;4:and[%s,%s];4:blue;4:green;4:blue;4:size2
'λx.apply(apply(same_shape,iota(filter(filter(x.s, nand[iff[yellow,and[circle,and[not[green],apply(same_shape,x.o)]]],size2]), and[size1,yellow]))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:iff[%s,%s];4:yellow;4:and[%s,%s];4:circle;4:and[%s,%s];4:not[%s];4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2;4:and[%s,%s];4:size1;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(and[blue,yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(x.s, or[or[and[size1,blue],not[triangle]],apply(size-leq,iota(filter(filter(x.s, and[triangle,rectangle]), and[triangle,rectangle])))]), or[apply(size-leq,iota(x.s)),and[green,circle]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size1;4:blue;4:not[%s];4:triangle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:rectangle;4:and[%s,%s];4:triangle;4:rectangle;4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:green;4:circle
'λx.apply(implies[not[nor[rectangle,green]],and[circle,and[blue,circle]]],iota(filter(filter(x.s, yellow), or[and[or[triangle,not[circle]],implies[circle,triangle]],circle])))'	0:apply(%s,%s);4:implies[%s,%s];4:not[%s];4:nor[%s,%s];4:rectangle;4:green;4:and[%s,%s];4:circle;4:and[%s,%s];4:blue;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:triangle;4:not[%s];4:circle;4:implies[%s,%s];4:circle;4:triangle;4:circle
'λx.apply(and[triangle,nand[size3,circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:nand[%s,%s];4:size3;4:circle;1:%s.o;2:x
'λx.apply(nor[and[blue,rectangle],size3],iota(filter(x.s, iff[size1,green])))'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:blue;4:rectangle;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size1;4:green
'λx.apply(green,iota(filter(filter(x.s, green), or[iff[size2,not[rectangle]],size1])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:iff[%s,%s];4:size2;4:not[%s];4:rectangle;4:size1
'λx.apply(or[size3,yellow],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, size1), rectangle), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle;4:size1
'λx.apply(and[rectangle,green],iota(filter(filter(filter(filter(filter(x.s, rectangle), circle), size3), green), triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle;4:size3;4:green;4:triangle
'λx.forall(size2,filter(x.s, apply(same_size,x.o)))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.forall(size3,filter(x.s, apply(same_size,x.o)))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(filter(filter(filter(filter(x.s, and[blue,rectangle]), apply(same_color,x.o)), and[size3,and[and[size1,and[size3,yellow]],size1]]), triangle), circle))),iota(filter(filter(x.s, not[or[size3,not[triangle]]]), green)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:size3;4:yellow;4:size1;4:triangle;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:size3;4:not[%s];4:triangle;4:green
'λx.forall(size2,filter(filter(filter(x.s, rectangle), apply(same_shape,x.o)), rectangle))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle
'λx.apply(nand[and[or[and[rectangle,size3],and[and[not[blue],or[or[rectangle,or[triangle,size3]],yellow]],yellow]],apply(same_size,x.o)],size3],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:rectangle;4:size3;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:blue;4:or[%s,%s];4:or[%s,%s];4:rectangle;4:or[%s,%s];4:triangle;4:size3;4:yellow;4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, green), size1), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1;4:yellow
'λx.apply(nand[yellow,or[circle,iff[nand[size2,and[size2,and[circle,circle]]],apply(same_shape,iota(filter(x.s, apply(same_size,x.o))))]]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:yellow;4:or[%s,%s];4:circle;4:iff[%s,%s];4:nand[%s,%s];4:size2;4:and[%s,%s];4:size2;4:and[%s,%s];4:circle;4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[iff[size1,circle],triangle],iota(filter(filter(filter(filter(filter(x.s, and[not[yellow],rectangle]), size1), apply(same_color,iota(filter(x.s, blue)))), apply(same_color,iota(x.s))), size2)))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:size1;4:circle;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:yellow;4:rectangle;4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size2
'λx.apply(and[and[yellow,nor[blue,and[circle,size1]]],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:nor[%s,%s];4:blue;4:and[%s,%s];4:circle;4:size1;4:green;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, nand[triangle,yellow])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:triangle;4:yellow
'λx.empty(filter(filter(filter(x.s, and[size1,size3]), size3), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size3;4:size3;4:size1
'λx.apply(and[rectangle,not[apply(same_color,x.o)]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(or[rectangle,green],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(not[rectangle],iota(filter(filter(x.s, not[rectangle]), and[blue,yellow])))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;4:and[%s,%s];4:blue;4:yellow
'λx.exists(and[triangle,blue], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:triangle;4:blue;3:%s.s;2:x
'λx.apply(apply(size-geq,iota(x.s)),iota(filter(x.s, size3)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(apply(size-geq,iota(x.s)),iota(filter(x.s, size1)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(or[not[nand[size3,size2]],circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:nand[%s,%s];4:size3;4:size2;4:circle;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, size1), yellow)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow
'λx.forall(not[not[and[and[and[circle,triangle],size2],blue]]],x.s)'	0:forall(%s,%s);4:not[%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:triangle;4:size2;4:blue;3:%s.s;2:x
'λx.contains(iota(filter(x.s, apply(size-leq,x.o))), filter(filter(x.s, size1), rectangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle
'λx.forall(size1,filter(x.s, or[blue,apply(same_shape,x.o)]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(x.s, green), yellow)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow
'λx.exists(size1, filter(filter(x.s, size2), triangle))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:triangle
'λx.empty(filter(filter(x.s, size1), or[size3,circle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:or[%s,%s];4:size3;4:circle
'λx.apply(size2,iota(filter(filter(x.s, and[size3,triangle]), circle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:triangle;4:circle
'λx.apply(blue,iota(filter(x.s, implies[size3,triangle])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size3;4:triangle
'λx.apply(apply(same_size,x.o),iota(filter(filter(filter(filter(filter(x.s, triangle), green), yellow), triangle), blue)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green;4:yellow;4:triangle;4:blue
'λx.apply(blue,iota(filter(x.s, apply(same_size,x.o))))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.forall(circle,filter(x.s, size3))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.forall(circle,filter(x.s, size1))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.forall(circle,filter(x.s, size2))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.forall(circle,filter(x.s, green))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.forall(triangle,filter(filter(x.s, or[nand[triangle,size1],and[triangle,apply(same_shape,iota(filter(filter(x.s, size1), and[rectangle,or[not[circle],not[and[size2,triangle]]]])))]]), and[nand[green,nand[triangle,circle]],or[or[rectangle,and[green,blue]],blue]]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:nand[%s,%s];4:triangle;4:size1;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:not[%s];4:circle;4:not[%s];4:and[%s,%s];4:size2;4:triangle;4:and[%s,%s];4:nand[%s,%s];4:green;4:nand[%s,%s];4:triangle;4:circle;4:or[%s,%s];4:or[%s,%s];4:rectangle;4:and[%s,%s];4:green;4:blue;4:blue
'λx.contains(x.o, filter(x.s, not[size3]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3
'λx.forall(apply(same_shape,x.o),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(rectangle,iota(filter(x.s, and[size1,rectangle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:rectangle
'λx.forall(size2,filter(x.s, apply(same_shape,iota(x.s))))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(and[green,and[implies[rectangle,and[circle,triangle]],apply(size-geq,x.o)]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:implies[%s,%s];4:rectangle;4:and[%s,%s];4:circle;4:triangle;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.forall(apply(size-geq,x.o),filter(x.s, green))'	0:forall(%s,%s);4:apply(%s,%s);5:size-geq;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[size1,and[and[apply(same_size,iota(x.s)),green],apply(size-gt,x.o)]],iota(filter(filter(filter(filter(filter(filter(x.s, blue), size3), or[and[size3,blue],or[implies[rectangle,not[blue]],size2]]), green), yellow), size1)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3;4:or[%s,%s];4:and[%s,%s];4:size3;4:blue;4:or[%s,%s];4:implies[%s,%s];4:rectangle;4:not[%s];4:blue;4:size2;4:green;4:yellow;4:size1
'λx.exists(yellow, filter(filter(filter(x.s, rectangle), and[size1,green]), or[implies[size1,and[size2,and[size2,blue]]],circle]))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:size1;4:green;4:or[%s,%s];4:implies[%s,%s];4:size1;4:and[%s,%s];4:size2;4:and[%s,%s];4:size2;4:blue;4:circle
'λx.apply(size1,iota(filter(filter(filter(x.s, nand[blue,and[size3,yellow]]), blue), size2)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:blue;4:and[%s,%s];4:size3;4:yellow;4:blue;4:size2
'λx.apply(and[blue,nor[rectangle,size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:nor[%s,%s];4:rectangle;4:size3;1:%s.o;2:x
'λx.forall(size2,filter(x.s, and[and[triangle,triangle],circle]))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:triangle;4:triangle;4:circle
'λx.empty(filter(x.s, iff[or[size2,nor[nor[apply(same_color,iota(filter(filter(x.s, and[nor[not[size1],size1],or[not[blue],and[triangle,not[and[or[blue,blue],triangle]]]]]), nor[and[green,circle],apply(same_shape,x.o)]))),size1],rectangle]],or[green,rectangle]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:or[%s,%s];4:size2;4:nor[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:not[%s];4:size1;4:size1;4:or[%s,%s];4:not[%s];4:blue;4:and[%s,%s];4:triangle;4:not[%s];4:and[%s,%s];4:or[%s,%s];4:blue;4:blue;4:triangle;4:nor[%s,%s];4:and[%s,%s];4:green;4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;4:rectangle;4:or[%s,%s];4:green;4:rectangle
'λx.apply(size1,iota(filter(filter(filter(x.s, triangle), and[nor[nor[apply(same_size,iota(filter(filter(x.s, size3), size1))),green],size3],apply(same_shape,iota(x.s))]), rectangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:nor[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size1;4:green;4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:rectangle
'λx.apply(and[and[blue,or[size3,size1]],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:or[%s,%s];4:size3;4:size1;4:circle;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(filter(filter(x.s, implies[nand[not[size3],size3],blue]), triangle), yellow), yellow), circle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:nand[%s,%s];4:not[%s];4:size3;4:size3;4:blue;4:triangle;4:yellow;4:yellow;4:circle;3:%s.s;2:x
'λx.apply(or[apply(same_size,x.o),green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;1:%s.o;2:x
'λx.forall(blue,filter(filter(filter(filter(filter(x.s, green), or[apply(same_size,x.o),rectangle]), and[not[and[triangle,size2]],circle]), green), size2))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:rectangle;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:triangle;4:size2;4:circle;4:green;4:size2
'λx.exists(apply(size-lt,iota(x.s)), filter(x.s, rectangle))'	0:exists(%s, %s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(yellow,iota(filter(filter(filter(x.s, and[size3,circle]), apply(same_size,iota(filter(x.s, size2)))), blue)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue
'λx.apply(rectangle,iota(filter(filter(filter(x.s, iff[not[apply(same_shape,x.o)],circle]), or[not[size2],or[or[and[rectangle,or[apply(same_size,x.o),apply(same_color,iota(filter(x.s, circle)))]],size1],green]]), apply(same_color,x.o))))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;4:or[%s,%s];4:not[%s];4:size2;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:rectangle;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1;4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.forall(nand[size2,and[apply(same_shape,iota(x.s)),or[size1,blue]]],x.s)'	0:forall(%s,%s);4:nand[%s,%s];4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:blue;3:%s.s;2:x
'λx.apply(and[triangle,not[blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:not[%s];4:blue;1:%s.o;2:x
'λx.apply(implies[size3,and[and[apply(same_size,iota(x.s)),and[size2,not[rectangle]]],size1]],iota(filter(filter(x.s, and[rectangle,size3]), size1)))'	0:apply(%s,%s);4:implies[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:not[%s];4:rectangle;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:size3;4:size1
'λx.contains(x.o, filter(x.s, and[not[triangle],and[or[rectangle,green],triangle]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:triangle;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:green;4:triangle
'λx.apply(yellow,iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.forall(and[implies[or[apply(size-lt,iota(filter(filter(filter(x.s, size3), triangle), rectangle))),green],not[rectangle]],size3],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle;4:rectangle;4:green;4:not[%s];4:rectangle;4:size3;3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(x.s, or[green,and[blue,or[size3,size1]]]), size1)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:and[%s,%s];4:blue;4:or[%s,%s];4:size3;4:size1;4:size1
'λx.apply(apply(same_size,iota(filter(filter(filter(x.s, blue), and[and[nand[and[nand[size1,rectangle],size1],triangle],and[size2,circle]],and[size3,or[triangle,green]]]), and[size3,size2]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:size1;4:rectangle;4:size1;4:triangle;4:and[%s,%s];4:size2;4:circle;4:and[%s,%s];4:size3;4:or[%s,%s];4:triangle;4:green;4:and[%s,%s];4:size3;4:size2;1:%s.o;2:x
'λx.forall(circle,filter(filter(x.s, circle), green))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green
'λx.false'	0:false
'λx.apply(size2,iota(filter(filter(x.s, circle), not[size3])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:size3
'λx.apply(iff[circle,size3],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:iff[%s,%s];4:circle;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.empty(filter(filter(filter(filter(filter(x.s, or[not[not[apply(same_color,iota(x.s))]],and[and[size1,and[yellow,or[size2,size2]]],not[triangle]]]), or[size3,not[yellow]]), blue), or[circle,size1]), and[circle,and[green,green]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:yellow;4:or[%s,%s];4:size2;4:size2;4:not[%s];4:triangle;4:or[%s,%s];4:size3;4:not[%s];4:yellow;4:blue;4:or[%s,%s];4:circle;4:size1;4:and[%s,%s];4:circle;4:and[%s,%s];4:green;4:green
'λx.apply(and[and[size3,yellow],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size3;4:yellow;4:rectangle;1:%s.o;2:x
'λx.exists(iff[rectangle,and[green,rectangle]], filter(x.s, iff[blue,size2]))'	0:exists(%s, %s);4:iff[%s,%s];4:rectangle;4:and[%s,%s];4:green;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:blue;4:size2
'λx.apply(circle,iota(filter(filter(filter(filter(x.s, blue), green), and[yellow,size2]), blue)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green;4:and[%s,%s];4:yellow;4:size2;4:blue
'λx.forall(size2,filter(filter(filter(x.s, rectangle), size1), implies[and[green,and[nand[green,and[apply(same_color,iota(filter(filter(filter(filter(x.s, or[apply(size-gt,iota(filter(filter(x.s, yellow), nor[and[and[yellow,apply(size-leq,x.o)],and[size1,circle]],or[yellow,yellow]]))),or[green,nand[yellow,yellow]]]), apply(size-leq,x.o)), and[size1,yellow]), size1))),blue]],triangle]],size2]))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1;4:implies[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:nand[%s,%s];4:green;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:and[%s,%s];4:size1;4:circle;4:or[%s,%s];4:yellow;4:yellow;4:or[%s,%s];4:green;4:nand[%s,%s];4:yellow;4:yellow;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:and[%s,%s];4:size1;4:yellow;4:size1;4:blue;4:triangle;4:size2
'λx.apply(or[or[blue,triangle],or[green,or[nor[iff[size1,size1],size2],size2]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:blue;4:triangle;4:or[%s,%s];4:green;4:or[%s,%s];4:nor[%s,%s];4:iff[%s,%s];4:size1;4:size1;4:size2;4:size2;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, iff[size3,not[size3]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size3;4:not[%s];4:size3
'λx.exists(and[or[or[or[size1,size3],or[nand[yellow,rectangle],circle]],and[not[rectangle],or[yellow,not[not[nor[yellow,yellow]]]]]],and[and[size3,yellow],triangle]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:size1;4:size3;4:or[%s,%s];4:nand[%s,%s];4:yellow;4:rectangle;4:circle;4:and[%s,%s];4:not[%s];4:rectangle;4:or[%s,%s];4:yellow;4:not[%s];4:not[%s];4:nor[%s,%s];4:yellow;4:yellow;4:and[%s,%s];4:and[%s,%s];4:size3;4:yellow;4:triangle;3:%s.s;2:x
'λx.apply(size3,iota(filter(x.s, not[not[blue]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:blue
'λx.apply(size2,iota(filter(x.s, not[not[blue]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:blue
'λx.apply(size1,iota(filter(filter(x.s, and[apply(same_shape,x.o),size3]), rectangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3;4:rectangle
'λx.apply(triangle,iota(filter(x.s, and[apply(size-lt,x.o),triangle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:triangle
'λx.contains(x.o, filter(filter(x.s, circle), and[or[size2,nor[or[and[size3,blue],green],triangle]],rectangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:or[%s,%s];4:size2;4:nor[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size3;4:blue;4:green;4:triangle;4:rectangle
'λx.forall(nor[rectangle,circle],filter(filter(x.s, triangle), apply(size-geq,x.o)))'	0:forall(%s,%s);4:nor[%s,%s];4:rectangle;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.apply(or[rectangle,and[yellow,green]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:and[%s,%s];4:yellow;4:green;1:%s.o;2:x
'λx.apply(implies[green,size3],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:implies[%s,%s];4:green;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(green,iota(filter(filter(x.s, and[green,circle]), triangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:circle;4:triangle
'λx.apply(apply(size-leq,iota(x.s)),iota(filter(filter(x.s, or[blue,circle]), and[implies[circle,apply(same_color,iota(filter(filter(filter(filter(filter(filter(filter(filter(x.s, size1), size2), and[triangle,size2]), rectangle), size3), iff[circle,or[yellow,nor[apply(same_shape,x.o),circle]]]), size2), blue)))],and[or[size3,not[size3]],blue]])))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:circle;4:and[%s,%s];4:implies[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2;4:and[%s,%s];4:triangle;4:size2;4:rectangle;4:size3;4:iff[%s,%s];4:circle;4:or[%s,%s];4:yellow;4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;4:size2;4:blue;4:and[%s,%s];4:or[%s,%s];4:size3;4:not[%s];4:size3;4:blue
'λx.apply(nand[blue,nand[triangle,circle]],iota(filter(x.s, green)))'	0:apply(%s,%s);4:nand[%s,%s];4:blue;4:nand[%s,%s];4:triangle;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[apply(same_shape,iota(filter(x.s, circle))),size3],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(green,iota(filter(x.s, not[green])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green
'λx.apply(and[implies[green,not[circle]],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:green;4:not[%s];4:circle;4:circle;1:%s.o;2:x
'λx.apply(or[blue,and[size2,or[size1,or[rectangle,or[size3,size2]]]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:and[%s,%s];4:size2;4:or[%s,%s];4:size1;4:or[%s,%s];4:rectangle;4:or[%s,%s];4:size3;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(filter(filter(x.s, triangle), triangle), blue), circle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:triangle;4:blue;4:circle
'λx.apply(yellow,iota(filter(x.s, or[yellow,triangle])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:triangle
'λx.apply(not[triangle],iota(filter(x.s, and[size1,size2])))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size2
'λx.apply(or[iff[rectangle,apply(same_shape,iota(x.s))],yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:iff[%s,%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:yellow;1:%s.o;2:x
'λx.apply(nor[and[not[size1],size2],and[apply(same_color,iota(filter(filter(filter(x.s, implies[yellow,and[yellow,circle]]), or[circle,triangle]), rectangle))),green]],iota(filter(x.s, green)))'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:not[%s];4:size1;4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:yellow;4:and[%s,%s];4:yellow;4:circle;4:or[%s,%s];4:circle;4:triangle;4:rectangle;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(apply(same_color,iota(x.s)),iota(filter(x.s, circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.contains(x.o, filter(filter(filter(x.s, apply(same_size,iota(filter(filter(x.s, size1), triangle)))), iff[green,rectangle]), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle;4:iff[%s,%s];4:green;4:rectangle;4:green
'λx.apply(and[green,or[yellow,rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:or[%s,%s];4:yellow;4:rectangle;1:%s.o;2:x
'λx.exists(blue, x.s)'	0:exists(%s, %s);4:blue;3:%s.s;2:x
'λx.apply(not[blue],iota(filter(filter(x.s, iff[size3,yellow]), size2)))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size3;4:yellow;4:size2
'λx.forall(and[and[and[green,yellow],size1],size1],filter(x.s, rectangle))'	0:forall(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:yellow;4:size1;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(triangle,iota(filter(x.s, green)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(triangle,iota(filter(x.s, size3)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(triangle,iota(filter(x.s, size2)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(triangle,iota(filter(x.s, size1)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(not[circle],iota(filter(filter(x.s, size2), blue)))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue
'λx.apply(nor[and[implies[circle,green],or[and[green,size1],triangle]],not[and[circle,size2]]],iota(filter(filter(x.s, blue), yellow)))'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:circle;4:green;4:or[%s,%s];4:and[%s,%s];4:green;4:size1;4:triangle;4:not[%s];4:and[%s,%s];4:circle;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow
'λx.apply(yellow,iota(filter(filter(x.s, size3), and[or[implies[and[size2,blue],blue],and[and[or[yellow,size3],yellow],or[rectangle,triangle]]],and[circle,size2]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:size2;4:blue;4:blue;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:yellow;4:size3;4:yellow;4:or[%s,%s];4:rectangle;4:triangle;4:and[%s,%s];4:circle;4:size2
'λx.apply(not[nand[or[size2,not[rectangle]],not[rectangle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:nand[%s,%s];4:or[%s,%s];4:size2;4:not[%s];4:rectangle;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.forall(or[size3,green],filter(x.s, size1))'	0:forall(%s,%s);4:or[%s,%s];4:size3;4:green;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(rectangle,iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(or[rectangle,green],iota(filter(filter(filter(filter(x.s, blue), rectangle), circle), circle)))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle;4:circle;4:circle
'λx.apply(or[triangle,blue],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.exists(blue, filter(filter(filter(x.s, apply(same_color,iota(x.s))), circle), triangle))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:circle;4:triangle
'λx.apply(or[and[implies[size2,size2],not[size1]],nor[size3,and[size1,not[size3]]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:size2;4:size2;4:not[%s];4:size1;4:nor[%s,%s];4:size3;4:and[%s,%s];4:size1;4:not[%s];4:size3;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(filter(x.s, yellow), blue), size2)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:blue;4:size2
'λx.contains(x.o, filter(x.s, not[not[triangle]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:triangle
'λx.contains(iota(x.s), filter(filter(x.s, blue), size3))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3
'λx.apply(size3,iota(filter(x.s, nand[and[nand[apply(same_shape,iota(filter(x.s, size3))),yellow],circle],and[green,and[apply(same_color,x.o),implies[size1,green]]]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow;4:circle;4:and[%s,%s];4:green;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:implies[%s,%s];4:size1;4:green
'λx.exists(circle, filter(x.s, triangle))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(and[circle,apply(size-leq,x.o)],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(not[or[circle,blue]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:circle;4:blue;1:%s.o;2:x
'λx.forall(apply(size-lt,x.o),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:size-lt;1:%s.o;2:x;3:%s.s;2:x
'λx.contains(iota(filter(x.s, implies[apply(same_size,iota(filter(filter(x.s, size3), size3))),size1])), filter(filter(filter(x.s, yellow), blue), or[not[and[nor[blue,not[triangle]],and[green,rectangle]]],iff[apply(size-lt,x.o),size3]]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:blue;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:nor[%s,%s];4:blue;4:not[%s];4:triangle;4:and[%s,%s];4:green;4:rectangle;4:iff[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:size3
'λx.apply(apply(size-lt,x.o),iota(filter(filter(filter(filter(x.s, nor[size3,green]), green), rectangle), size2)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size3;4:green;4:green;4:rectangle;4:size2
'λx.contains(iota(filter(x.s, and[blue,rectangle])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:rectangle;3:%s.s;2:x
'λx.apply(blue,iota(filter(x.s, or[and[and[or[green,size1],apply(same_shape,x.o)],nand[triangle,nor[iff[yellow,size1],and[not[yellow],blue]]]],yellow])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:green;4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:nand[%s,%s];4:triangle;4:nor[%s,%s];4:iff[%s,%s];4:yellow;4:size1;4:and[%s,%s];4:not[%s];4:yellow;4:blue;4:yellow
'λx.apply(apply(size-gt,x.o),iota(filter(filter(x.s, rectangle), not[size2])))'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:size2
'λx.apply(and[or[apply(size-gt,iota(filter(x.s, size2))),yellow],size1],iota(filter(filter(filter(filter(x.s, and[size2,triangle]), and[size1,green]), rectangle), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:yellow;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:triangle;4:and[%s,%s];4:size1;4:green;4:rectangle;4:blue
'λx.apply(blue,iota(filter(filter(x.s, or[and[size3,yellow],and[nand[size2,yellow],green]]), and[and[size3,apply(same_size,iota(x.s))],size1])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size3;4:yellow;4:and[%s,%s];4:nand[%s,%s];4:size2;4:yellow;4:green;4:and[%s,%s];4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size1
'λx.apply(nor[yellow,circle],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:yellow;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(filter(x.s, triangle), size3), rectangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3;4:rectangle
'λx.apply(apply(same_shape,iota(filter(filter(x.s, circle), green))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green;1:%s.o;2:x
'λx.empty(filter(x.s, and[and[green,rectangle],apply(same_color,x.o)]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:green;4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(and[apply(same_color,iota(x.s)),not[triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:not[%s];4:triangle;1:%s.o;2:x
'λx.apply(not[or[and[green,and[nor[size3,iff[blue,blue]],and[rectangle,size3]]],circle]],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:nor[%s,%s];4:size3;4:iff[%s,%s];4:blue;4:blue;4:and[%s,%s];4:rectangle;4:size3;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(and[circle,iff[circle,apply(same_color,x.o)]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:iff[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, and[apply(same_shape,iota(x.s)),and[not[yellow],blue]]), and[yellow,size2])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:yellow;4:blue;4:and[%s,%s];4:yellow;4:size2
'λx.apply(implies[and[and[rectangle,size2],or[not[apply(same_shape,iota(x.s))],yellow]],circle],iota(filter(x.s, green)))'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size2;4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:yellow;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[and[rectangle,apply(same_color,x.o)],blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(filter(x.s, blue), circle), and[and[and[size3,size3],size2],and[size1,green]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:size3;4:size2;4:and[%s,%s];4:size1;4:green;3:%s.s;2:x
'λx.forall(circle,x.s)'	0:forall(%s,%s);4:circle;3:%s.s;2:x
'λx.apply(iff[green,and[size3,size2]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:green;4:and[%s,%s];4:size3;4:size2;1:%s.o;2:x
'λx.apply(or[circle,and[size3,yellow]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:and[%s,%s];4:size3;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size1,and[and[yellow,yellow],apply(same_size,iota(x.s))]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:yellow;4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, rectangle), not[rectangle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:rectangle
'λx.contains(iota(filter(filter(x.s, and[and[or[iff[nand[size3,triangle],blue],rectangle],triangle],and[implies[rectangle,triangle],yellow]]), size2)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:iff[%s,%s];4:nand[%s,%s];4:size3;4:triangle;4:blue;4:rectangle;4:triangle;4:and[%s,%s];4:implies[%s,%s];4:rectangle;4:triangle;4:yellow;4:size2;3:%s.s;2:x
'λx.forall(apply(size-geq,iota(filter(x.s, size3))),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;3:%s.s;2:x
'λx.exists(not[not[size2]], x.s)'	0:exists(%s, %s);4:not[%s];4:not[%s];4:size2;3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, apply(size-geq,x.o)), apply(same_size,x.o)), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle
'λx.apply(iff[rectangle,iff[nor[and[yellow,size2],or[size1,triangle]],not[and[circle,and[triangle,blue]]]]],iota(filter(x.s, not[and[triangle,size3]])))'	0:apply(%s,%s);4:iff[%s,%s];4:rectangle;4:iff[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:yellow;4:size2;4:or[%s,%s];4:size1;4:triangle;4:not[%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:triangle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:triangle;4:size3
'λx.apply(and[and[blue,and[circle,apply(same_color,iota(filter(x.s, blue)))]],green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[not[and[size2,rectangle]],size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:size2;4:rectangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(or[and[nand[apply(same_shape,x.o),triangle],circle],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle;4:circle;4:blue;1:%s.o;2:x
'λx.apply(size2,iota(filter(x.s, and[and[or[circle,blue],not[blue]],blue])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:circle;4:blue;4:not[%s];4:blue;4:blue
'λx.apply(and[size1,and[not[apply(same_size,x.o)],and[yellow,apply(same_size,iota(x.s))]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(and[size3,and[yellow,green]],iota(filter(filter(filter(filter(filter(filter(filter(x.s, size1), and[nor[apply(size-geq,x.o),circle],and[circle,size1]]), nor[size2,circle]), size1), blue), blue), circle)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:yellow;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:circle;4:and[%s,%s];4:circle;4:size1;4:nor[%s,%s];4:size2;4:circle;4:size1;4:blue;4:blue;4:circle
'λx.apply(and[triangle,implies[or[apply(size-geq,iota(x.s)),green],circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:implies[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:green;4:circle;1:%s.o;2:x
'λx.apply(yellow,iota(filter(x.s, not[size2])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2
'λx.apply(not[and[not[green],and[or[size3,yellow],or[circle,or[circle,size2]]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:green;4:and[%s,%s];4:or[%s,%s];4:size3;4:yellow;4:or[%s,%s];4:circle;4:or[%s,%s];4:circle;4:size2;1:%s.o;2:x
'λx.apply(not[or[green,nor[yellow,or[or[blue,apply(same_shape,x.o)],rectangle]]]],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:green;4:nor[%s,%s];4:yellow;4:or[%s,%s];4:or[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(size1, filter(x.s, or[apply(same_color,iota(filter(filter(x.s, size1), rectangle))),green]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle;4:green
'λx.forall(triangle,filter(filter(x.s, and[and[size1,or[implies[and[green,circle],size3],rectangle]],circle]), circle))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:green;4:circle;4:size3;4:rectangle;4:circle;4:circle
'λx.apply(yellow,iota(filter(filter(x.s, blue), or[apply(same_color,iota(filter(x.s, and[or[blue,rectangle],blue]))),circle])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:blue;4:rectangle;4:blue;4:circle
'λx.apply(or[or[and[and[and[not[and[size3,triangle]],apply(size-gt,iota(filter(filter(x.s, not[green]), size3)))],size3],circle],apply(same_color,x.o)],size1],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:size3;4:triangle;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:size3;4:size3;4:circle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1;1:iota(%s);3:%s.s;2:x
'λx.forall(not[not[nor[apply(same_color,x.o),and[apply(same_size,x.o),green]]]],x.s)'	0:forall(%s,%s);4:not[%s];4:not[%s];4:nor[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(filter(filter(filter(x.s, green), size3), size2), blue), triangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size3;4:size2;4:blue;4:triangle
'λx.apply(apply(same_color,iota(filter(x.s, rectangle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;1:%s.o;2:x
'λx.apply(and[iff[size3,rectangle],rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:size3;4:rectangle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(filter(filter(filter(x.s, size3), and[size2,rectangle]), not[blue]), implies[and[and[apply(size-lt,x.o),size3],green],size3]), blue)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:size2;4:rectangle;4:not[%s];4:blue;4:implies[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:size3;4:green;4:size3;4:blue
'λx.contains(iota(filter(filter(x.s, and[not[not[apply(same_shape,x.o)]],triangle]), green)), filter(x.s, size3))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle;4:green;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(and[and[blue,and[size1,green]],apply(same_size,x.o)],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:size1;4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(x.s, yellow), and[nor[size2,size1],circle])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:nor[%s,%s];4:size2;4:size1;4:circle
'λx.apply(apply(same_shape,iota(filter(filter(x.s, yellow), apply(size-lt,x.o)))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:%s.o;2:x
'λx.contains(iota(filter(x.s, nor[and[rectangle,size1],and[triangle,green]])), filter(filter(x.s, blue), yellow))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:and[%s,%s];4:rectangle;4:size1;4:and[%s,%s];4:triangle;4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow
'λx.apply(blue,iota(filter(x.s, not[size3])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3
'λx.apply(or[apply(same_shape,x.o),iff[yellow,not[size1]]],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:iff[%s,%s];4:yellow;4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(not[green],x.o)'	0:apply(%s,%s);4:not[%s];4:green;1:%s.o;2:x
'λx.exists(apply(same_shape,x.o), filter(filter(filter(x.s, blue), yellow), triangle))'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow;4:triangle
'λx.apply(implies[circle,triangle],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:circle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(filter(x.s, size1), circle), not[and[and[and[circle,triangle],size2],blue]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:triangle;4:size2;4:blue
'λx.apply(apply(same_shape,x.o),iota(filter(filter(filter(x.s, apply(same_shape,iota(x.s))), nand[or[circle,blue],rectangle]), circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:nand[%s,%s];4:or[%s,%s];4:circle;4:blue;4:rectangle;4:circle
'λx.apply(nand[triangle,circle],iota(filter(filter(x.s, green), blue)))'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue
'λx.apply(nand[circle,triangle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:circle;4:triangle;1:%s.o;2:x
'λx.apply(and[not[and[size2,size2]],circle],iota(filter(filter(filter(filter(x.s, size1), yellow), green), green)))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:size2;4:size2;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow;4:green;4:green
'λx.apply(and[and[size1,size3],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:size3;4:yellow;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(filter(filter(x.s, triangle), size3), rectangle))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(filter(filter(x.s, apply(same_size,x.o)), and[apply(same_color,x.o),circle]), rectangle), size2)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;4:rectangle;4:size2
'λx.apply(blue,iota(filter(filter(x.s, yellow), blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:blue
'λx.contains(iota(filter(x.s, size3)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;3:%s.s;2:x
'λx.contains(iota(filter(x.s, size2)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;3:%s.s;2:x
'λx.contains(iota(filter(x.s, size1)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;3:%s.s;2:x
'λx.exists(and[not[size1],iff[size1,apply(size-lt,x.o)]], filter(x.s, and[size3,blue]))'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:size1;4:iff[%s,%s];4:size1;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:blue
'λx.apply(or[triangle,triangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_size,x.o),iota(filter(x.s, circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(apply(same_color,iota(x.s)),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(filter(x.s, and[and[size2,triangle],size1]), apply(size-lt,iota(filter(filter(filter(x.s, triangle), and[and[implies[and[or[and[green,size3],not[green]],or[and[blue,and[and[triangle,green],rectangle]],rectangle]],rectangle],iff[yellow,blue]],and[circle,not[size3]]]), green)))), and[iff[rectangle,or[blue,size1]],blue]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size2;4:triangle;4:size1;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:green;4:size3;4:not[%s];4:green;4:or[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:triangle;4:green;4:rectangle;4:rectangle;4:rectangle;4:iff[%s,%s];4:yellow;4:blue;4:and[%s,%s];4:circle;4:not[%s];4:size3;4:green;4:and[%s,%s];4:iff[%s,%s];4:rectangle;4:or[%s,%s];4:blue;4:size1;4:blue
'λx.exists(and[rectangle,triangle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:rectangle;4:triangle;3:%s.s;2:x
'λx.apply(and[or[size2,apply(same_color,iota(x.s))],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:rectangle;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, and[nor[size1,and[size3,blue]],triangle]), size3)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:size1;4:and[%s,%s];4:size3;4:blue;4:triangle;4:size3
'λx.apply(blue,iota(filter(filter(filter(x.s, apply(same_color,x.o)), and[size2,size2]), size2)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:size2;4:size2;4:size2
'λx.apply(rectangle,iota(filter(filter(filter(filter(x.s, size1), triangle), and[green,rectangle]), green)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle;4:and[%s,%s];4:green;4:rectangle;4:green
'λx.apply(implies[size3,rectangle],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:implies[%s,%s];4:size3;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.exists(not[circle], filter(filter(x.s, size2), size2))'	0:exists(%s, %s);4:not[%s];4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2
'λx.apply(apply(same_color,iota(filter(x.s, green))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;1:iota(%s);3:%s.s;2:x
'λx.forall(apply(size-geq,iota(x.s)),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(filter(filter(x.s, green), blue), nor[nand[size2,rectangle],green]), or[circle,triangle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue;4:nor[%s,%s];4:nand[%s,%s];4:size2;4:rectangle;4:green;4:or[%s,%s];4:circle;4:triangle
'λx.exists(rectangle, filter(x.s, green))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.exists(rectangle, filter(x.s, size1))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(rectangle, filter(x.s, size3))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(and[size1,nor[yellow,triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:nor[%s,%s];4:yellow;4:triangle;1:%s.o;2:x
'λx.exists(circle, filter(x.s, not[green]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green
'λx.apply(and[circle,triangle],iota(filter(filter(filter(x.s, circle), size1), not[green])))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1;4:not[%s];4:green
'λx.apply(size3,iota(filter(filter(x.s, and[yellow,size2]), green)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size2;4:green
'λx.apply(or[circle,and[size3,and[apply(same_size,x.o),green]]],iota(filter(filter(x.s, blue), size3)))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:and[%s,%s];4:size3;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3
'λx.apply(and[apply(same_shape,x.o),green],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(nand[and[and[nand[nand[size2,or[or[triangle,triangle],triangle]],size1],nor[yellow,and[blue,and[not[size2],size1]]]],or[triangle,circle]],apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:nand[%s,%s];4:size2;4:or[%s,%s];4:or[%s,%s];4:triangle;4:triangle;4:triangle;4:size1;4:nor[%s,%s];4:yellow;4:and[%s,%s];4:blue;4:and[%s,%s];4:not[%s];4:size2;4:size1;4:or[%s,%s];4:triangle;4:circle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(apply(same_size,x.o),iota(filter(filter(filter(filter(x.s, and[rectangle,green]), size1), yellow), size1)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:green;4:size1;4:yellow;4:size1
'λx.contains(iota(filter(filter(x.s, and[rectangle,blue]), or[triangle,nand[blue,size3]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:blue;4:or[%s,%s];4:triangle;4:nand[%s,%s];4:blue;4:size3;3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(x.s, not[size3]), blue)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;4:blue
'λx.apply(not[and[yellow,not[rectangle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:yellow;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.apply(nor[size2,size2],iota(filter(filter(filter(x.s, apply(same_color,x.o)), rectangle), yellow)))'	0:apply(%s,%s);4:nor[%s,%s];4:size2;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle;4:yellow
'λx.exists(circle, filter(x.s, rectangle))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(not[size2],iota(filter(filter(filter(x.s, size2), blue), rectangle)))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue;4:rectangle
'λx.apply(or[blue,circle],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(apply(size-lt,iota(filter(x.s, green))),iota(filter(x.s, green)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[size3,blue],iota(filter(filter(filter(filter(x.s, and[size2,or[or[nor[size2,triangle],not[not[triangle]]],iff[and[and[not[blue],rectangle],apply(same_size,x.o)],circle]]]), triangle), apply(size-gt,iota(filter(x.s, rectangle)))), and[circle,blue])))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:or[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:size2;4:triangle;4:not[%s];4:not[%s];4:triangle;4:iff[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:blue;4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;4:triangle;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:circle;4:blue
'λx.contains(iota(filter(x.s, rectangle)), filter(filter(filter(x.s, triangle), and[triangle,and[size2,green]]), yellow))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:triangle;4:and[%s,%s];4:size2;4:green;4:yellow
'λx.exists(and[and[apply(same_shape,iota(filter(filter(filter(x.s, apply(same_color,iota(filter(x.s, blue)))), apply(same_color,iota(x.s))), size2))),green],size2], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size2;4:green;4:size2;3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(x.s, size1), apply(same_size,x.o))))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(and[green,size2],iota(filter(x.s, not[not[and[and[and[and[and[apply(size-leq,x.o),apply(size-geq,x.o)],green],rectangle],and[yellow,circle]],nand[green,size3]]]])))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:green;4:rectangle;4:and[%s,%s];4:yellow;4:circle;4:nand[%s,%s];4:green;4:size3
'λx.apply(size2,iota(filter(x.s, or[size2,yellow])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:yellow
'λx.exists(iff[triangle,size3], filter(x.s, and[apply(same_color,x.o),blue]))'	0:exists(%s, %s);4:iff[%s,%s];4:triangle;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue
'λx.apply(and[blue,and[rectangle,size2]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.exists(size2, filter(x.s, nor[and[size2,triangle],size1]))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:and[%s,%s];4:size2;4:triangle;4:size1
'λx.apply(nand[or[nand[yellow,triangle],nand[or[apply(size-gt,x.o),and[size1,size1]],size2]],rectangle],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:or[%s,%s];4:nand[%s,%s];4:yellow;4:triangle;4:nand[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:and[%s,%s];4:size1;4:size1;4:size2;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.forall(implies[circle,yellow],filter(x.s, size3))'	0:forall(%s,%s);4:implies[%s,%s];4:circle;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(yellow,iota(filter(filter(x.s, yellow), circle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle
'λx.apply(not[blue],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(green,iota(filter(x.s, not[nand[and[blue,size3],yellow]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:nand[%s,%s];4:and[%s,%s];4:blue;4:size3;4:yellow
'λx.apply(and[implies[blue,and[and[size2,and[blue,triangle]],apply(same_shape,x.o)]],not[and[and[triangle,blue],not[rectangle]]]],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:blue;4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:blue;4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(nand[yellow,green],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:yellow;4:green;1:iota(%s);3:%s.s;2:x
'λx.exists(size2, filter(x.s, apply(same_size,iota(x.s))))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.exists(triangle, x.s)'	0:exists(%s, %s);4:triangle;3:%s.s;2:x
'λx.contains(iota(filter(filter(x.s, implies[or[implies[iff[and[and[apply(size-lt,iota(filter(filter(x.s, and[triangle,green]), and[rectangle,rectangle]))),blue],apply(same_size,iota(x.s))],rectangle],circle],and[or[and[not[nand[size2,yellow]],not[triangle]],yellow],blue]],and[circle,apply(same_size,iota(x.s))]]), and[and[triangle,not[and[rectangle,and[circle,blue]]]],green])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:green;4:and[%s,%s];4:rectangle;4:rectangle;4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:rectangle;4:circle;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:not[%s];4:nand[%s,%s];4:size2;4:yellow;4:not[%s];4:triangle;4:yellow;4:blue;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:triangle;4:not[%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:circle;4:blue;4:green;3:%s.s;2:x
'λx.apply(not[and[green,and[circle,circle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:green;4:and[%s,%s];4:circle;4:circle;1:%s.o;2:x
'λx.apply(rectangle,iota(x.s))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[blue,and[rectangle,not[size2]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:not[%s];4:size2;1:%s.o;2:x
'λx.forall(and[circle,blue],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:circle;4:blue;3:%s.s;2:x
'λx.apply(and[green,yellow],iota(filter(filter(filter(filter(filter(x.s, and[and[size3,size2],blue]), green), and[rectangle,and[size2,and[and[size2,size1],blue]]]), iff[green,size1]), circle)))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size3;4:size2;4:blue;4:green;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:size2;4:size1;4:blue;4:iff[%s,%s];4:green;4:size1;4:circle
'λx.apply(triangle,iota(filter(filter(x.s, size1), or[rectangle,size3])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:or[%s,%s];4:rectangle;4:size3
'λx.apply(size2,iota(filter(filter(filter(filter(x.s, blue), iff[triangle,circle]), and[size3,implies[yellow,size2]]), not[nor[yellow,size2]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:iff[%s,%s];4:triangle;4:circle;4:and[%s,%s];4:size3;4:implies[%s,%s];4:yellow;4:size2;4:not[%s];4:nor[%s,%s];4:yellow;4:size2
'λx.apply(or[green,circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:circle;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(filter(filter(filter(filter(filter(filter(filter(x.s, blue), triangle), blue), nor[size3,and[blue,rectangle]]), size1), size1), blue), apply(size-lt,x.o)), size1)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle;4:blue;4:nor[%s,%s];4:size3;4:and[%s,%s];4:blue;4:rectangle;4:size1;4:size1;4:blue;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:size1
'λx.apply(or[not[apply(same_shape,x.o)],or[size2,and[triangle,size3]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:size2;4:and[%s,%s];4:triangle;4:size3;1:%s.o;2:x
'λx.contains(iota(filter(x.s, and[and[triangle,rectangle],iff[and[rectangle,apply(same_color,iota(x.s))],rectangle]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:triangle;4:rectangle;4:iff[%s,%s];4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:rectangle;3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(filter(filter(filter(x.s, and[circle,size2]), rectangle), triangle), and[green,and[or[green,circle],rectangle]]), yellow), rectangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size2;4:rectangle;4:triangle;4:and[%s,%s];4:green;4:and[%s,%s];4:or[%s,%s];4:green;4:circle;4:rectangle;4:yellow;4:rectangle
'λx.apply(or[nand[size3,apply(same_shape,x.o)],and[and[and[green,rectangle],yellow],circle]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:rectangle;4:yellow;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[green,rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[and[yellow,apply(same_color,iota(filter(filter(filter(x.s, size1), circle), rectangle)))],circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle;4:rectangle;4:circle;1:%s.o;2:x
'λx.apply(and[yellow,or[size2,not[or[size3,circle]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:or[%s,%s];4:size2;4:not[%s];4:or[%s,%s];4:size3;4:circle;1:%s.o;2:x
'λx.exists(and[green,or[size1,size2]], filter(x.s, triangle))'	0:exists(%s, %s);4:and[%s,%s];4:green;4:or[%s,%s];4:size1;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.forall(size1,filter(filter(filter(filter(x.s, size1), green), rectangle), size1))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green;4:rectangle;4:size1
'λx.contains(iota(x.s), filter(x.s, triangle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.contains(iota(x.s), filter(x.s, or[green,blue]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:blue
'λx.apply(size2,iota(filter(filter(x.s, and[size2,size1]), rectangle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:size1;4:rectangle
'λx.apply(and[triangle,apply(same_color,iota(filter(x.s, apply(same_color,x.o))))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(not[apply(same_shape,iota(x.s))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(triangle,iota(filter(x.s, iff[or[size2,nor[nor[apply(same_color,iota(filter(filter(x.s, and[nor[and[size1,and[size2,blue]],size1],or[not[blue],and[triangle,not[and[or[blue,blue],triangle]]]]]), nor[and[green,circle],apply(same_shape,x.o)]))),size1],rectangle]],or[green,rectangle]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:or[%s,%s];4:size2;4:nor[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:size2;4:blue;4:size1;4:or[%s,%s];4:not[%s];4:blue;4:and[%s,%s];4:triangle;4:not[%s];4:and[%s,%s];4:or[%s,%s];4:blue;4:blue;4:triangle;4:nor[%s,%s];4:and[%s,%s];4:green;4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;4:rectangle;4:or[%s,%s];4:green;4:rectangle
'λx.apply(not[or[green,yellow]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:green;4:yellow;1:%s.o;2:x
'λx.apply(or[size3,apply(same_shape,x.o)],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.exists(yellow, x.s)'	0:exists(%s, %s);4:yellow;3:%s.s;2:x
'λx.contains(iota(filter(x.s, not[implies[circle,apply(size-gt,x.o)]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:implies[%s,%s];4:circle;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(and[circle,nor[yellow,blue]],iota(filter(filter(filter(filter(filter(x.s, size2), circle), size2), blue), circle)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:nor[%s,%s];4:yellow;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle;4:size2;4:blue;4:circle
'λx.apply(apply(same_color,iota(filter(x.s, apply(same_color,x.o)))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, not[blue])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.apply(and[circle,not[size2]],iota(filter(x.s, nor[rectangle,circle])))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:rectangle;4:circle
'λx.apply(or[blue,triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:triangle;1:%s.o;2:x
'λx.apply(apply(same_size,iota(filter(filter(filter(filter(filter(x.s, not[not[apply(size-leq,iota(x.s))]]), size2), apply(same_shape,x.o)), rectangle), size3))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle;4:size3;1:%s.o;2:x
'λx.apply(and[yellow,size3],iota(filter(x.s, apply(same_size,iota(filter(x.s, circle))))))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[size3,or[and[circle,triangle],blue]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:or[%s,%s];4:and[%s,%s];4:circle;4:triangle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(filter(filter(filter(filter(filter(x.s, triangle), or[blue,green]), green), apply(same_size,iota(filter(filter(filter(x.s, yellow), circle), circle)))), blue), size2), nand[or[triangle,green],blue])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:or[%s,%s];4:blue;4:green;4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle;4:circle;4:blue;4:size2;4:nand[%s,%s];4:or[%s,%s];4:triangle;4:green;4:blue
'λx.empty(filter(filter(x.s, blue), or[size1,apply(size-leq,iota(filter(x.s, circle)))]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:size1;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.empty(filter(filter(x.s, rectangle), and[green,and[size2,and[triangle,apply(same_size,iota(filter(x.s, green)))]]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:green;4:and[%s,%s];4:size2;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.forall(or[blue,rectangle],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:blue;4:rectangle;3:%s.s;2:x
'λx.apply(nand[apply(same_size,x.o),triangle],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(filter(filter(filter(filter(x.s, rectangle), not[size1]), blue), blue), size2), size3)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:size1;4:blue;4:blue;4:size2;4:size3
'λx.exists(triangle, filter(filter(x.s, size2), not[not[yellow]]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:not[%s];4:not[%s];4:yellow
'λx.apply(circle,iota(filter(filter(x.s, green), rectangle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle
'λx.apply(triangle,iota(filter(filter(filter(filter(x.s, nand[circle,size1]), size2), green), size3)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:circle;4:size1;4:size2;4:green;4:size3
'λx.exists(and[or[apply(same_size,x.o),circle],apply(size-leq,x.o)], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;3:%s.s;2:x
'λx.forall(circle,filter(x.s, triangle))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(or[apply(size-leq,x.o),size1],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(size3,iota(filter(filter(x.s, rectangle), apply(same_shape,iota(x.s)))))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(or[and[and[size2,rectangle],nand[and[triangle,yellow],or[apply(size-lt,iota(x.s)),or[apply(size-gt,iota(filter(filter(filter(filter(filter(filter(filter(filter(filter(x.s, circle), size1), triangle), yellow), and[size2,or[size3,size1]]), green), green), blue), circle))),and[triangle,and[rectangle,not[rectangle]]]]]]],rectangle],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:rectangle;4:nand[%s,%s];4:and[%s,%s];4:triangle;4:yellow;4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1;4:triangle;4:yellow;4:and[%s,%s];4:size2;4:or[%s,%s];4:size3;4:size1;4:green;4:green;4:blue;4:circle;4:and[%s,%s];4:triangle;4:and[%s,%s];4:rectangle;4:not[%s];4:rectangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(and[circle,and[and[green,size2],or[or[blue,size2],blue]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:green;4:size2;4:or[%s,%s];4:or[%s,%s];4:blue;4:size2;4:blue;1:%s.o;2:x
'λx.exists(and[apply(same_size,iota(x.s)),circle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:circle;3:%s.s;2:x
'λx.apply(and[apply(size-leq,iota(x.s)),rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:rectangle;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(x.s, or[triangle,and[or[yellow,or[blue,and[nor[rectangle,and[apply(size-gt,iota(filter(filter(x.s, rectangle), apply(same_size,x.o)))),green]],size1]]],and[yellow,or[blue,size1]]]]), size2)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:and[%s,%s];4:or[%s,%s];4:yellow;4:or[%s,%s];4:blue;4:and[%s,%s];4:nor[%s,%s];4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;4:size1;4:and[%s,%s];4:yellow;4:or[%s,%s];4:blue;4:size1;4:size2
'λx.apply(not[and[triangle,size1]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:triangle;4:size1;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(filter(x.s, apply(same_shape,x.o)), and[size1,yellow]), rectangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:size1;4:yellow;4:rectangle
'λx.apply(and[and[triangle,blue],or[size1,and[and[rectangle,triangle],rectangle]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:blue;4:or[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:triangle;4:rectangle;1:%s.o;2:x
'λx.empty(filter(x.s, and[circle,apply(same_shape,x.o)]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.exists(and[size3,and[yellow,and[or[nor[circle,size2],blue],green]]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:size3;4:and[%s,%s];4:yellow;4:and[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:circle;4:size2;4:blue;4:green;3:%s.s;2:x
'λx.apply(green,iota(filter(x.s, or[size2,blue])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:blue
'λx.apply(or[size3,green],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(x.s, not[blue])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.apply(iff[size3,circle],iota(filter(filter(filter(filter(filter(filter(filter(filter(filter(x.s, size3), triangle), rectangle), green), not[rectangle]), size3), rectangle), size1), circle)))'	0:apply(%s,%s);4:iff[%s,%s];4:size3;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle;4:rectangle;4:green;4:not[%s];4:rectangle;4:size3;4:rectangle;4:size1;4:circle
'λx.apply(size3,iota(filter(filter(x.s, triangle), circle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle
'λx.exists(triangle, filter(x.s, nand[nor[and[size2,not[or[size3,green]]],not[blue]],or[not[size3],green]]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:size2;4:not[%s];4:or[%s,%s];4:size3;4:green;4:not[%s];4:blue;4:or[%s,%s];4:not[%s];4:size3;4:green
'λx.forall(and[triangle,and[apply(same_size,iota(filter(filter(filter(x.s, triangle), and[size2,apply(same_size,x.o)]), rectangle))),size1]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:rectangle;4:size1;3:%s.s;2:x
'λx.apply(not[yellow],x.o)'	0:apply(%s,%s);4:not[%s];4:yellow;1:%s.o;2:x
'λx.apply(or[yellow,or[rectangle,not[green]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:or[%s,%s];4:rectangle;4:not[%s];4:green;1:%s.o;2:x
'λx.apply(apply(same_size,x.o),iota(filter(filter(filter(filter(x.s, blue), green), triangle), and[rectangle,not[and[blue,size1]]])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green;4:triangle;4:and[%s,%s];4:rectangle;4:not[%s];4:and[%s,%s];4:blue;4:size1
'λx.apply(and[circle,not[not[size3]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:not[%s];4:not[%s];4:size3;1:%s.o;2:x
'λx.apply(apply(same_shape,x.o),iota(filter(filter(x.s, blue), and[and[yellow,rectangle],size3])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:and[%s,%s];4:yellow;4:rectangle;4:size3
'λx.apply(or[size3,circle],iota(filter(filter(filter(x.s, yellow), size1), triangle)))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;4:triangle
'λx.apply(or[and[and[apply(same_shape,iota(x.s)),green],circle],triangle],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:green;4:circle;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.empty(filter(filter(filter(x.s, yellow), apply(same_size,x.o)), nor[rectangle,not[size2]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:nor[%s,%s];4:rectangle;4:not[%s];4:size2
'λx.empty(filter(filter(x.s, nand[size2,blue]), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size2;4:blue;4:rectangle
'λx.apply(triangle,iota(filter(filter(filter(filter(x.s, not[size3]), triangle), or[size3,size2]), yellow)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;4:triangle;4:or[%s,%s];4:size3;4:size2;4:yellow
'λx.apply(nand[size2,not[size2]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size2;4:not[%s];4:size2;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.contains(iota(filter(x.s, nor[apply(same_shape,iota(x.s)),size2])), filter(x.s, blue))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.exists(and[apply(same_color,x.o),and[circle,green]], filter(filter(filter(filter(x.s, size3), triangle), or[blue,size2]), or[not[size1],apply(same_shape,x.o)]))'	0:exists(%s, %s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:circle;4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle;4:or[%s,%s];4:blue;4:size2;4:or[%s,%s];4:not[%s];4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(and[yellow,size1],iota(filter(filter(x.s, size3), apply(same_shape,x.o))))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(or[triangle,and[and[size1,apply(same_shape,x.o)],apply(same_color,iota(filter(x.s, blue)))]],iota(filter(filter(x.s, size2), apply(same_shape,iota(filter(filter(filter(filter(x.s, implies[nand[triangle,size2],size3]), or[green,size2]), or[or[and[apply(size-gt,iota(filter(filter(x.s, size1), and[triangle,green]))),blue],and[triangle,rectangle]],circle]), circle))))))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:and[%s,%s];4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:nand[%s,%s];4:triangle;4:size2;4:size3;4:or[%s,%s];4:green;4:size2;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:triangle;4:green;4:blue;4:and[%s,%s];4:triangle;4:rectangle;4:circle;4:circle
'λx.apply(and[triangle,circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:circle;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, and[rectangle,size2]), circle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:size2;4:circle
'λx.apply(and[size3,green],iota(filter(filter(filter(filter(x.s, size1), iff[circle,triangle]), circle), and[circle,apply(same_size,x.o)])))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:iff[%s,%s];4:circle;4:triangle;4:circle;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, and[rectangle,circle]), nand[yellow,size2]), or[size3,circle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:circle;4:nand[%s,%s];4:yellow;4:size2;4:or[%s,%s];4:size3;4:circle
'λx.apply(or[circle,rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:rectangle;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(x.s, nor[and[not[green],implies[iff[circle,and[green,size3]],and[triangle,not[not[and[nor[size1,iff[blue,size2]],implies[rectangle,size3]]]]]]],blue]), not[or[or[size1,triangle],size3]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:and[%s,%s];4:not[%s];4:green;4:implies[%s,%s];4:iff[%s,%s];4:circle;4:and[%s,%s];4:green;4:size3;4:and[%s,%s];4:triangle;4:not[%s];4:not[%s];4:and[%s,%s];4:nor[%s,%s];4:size1;4:iff[%s,%s];4:blue;4:size2;4:implies[%s,%s];4:rectangle;4:size3;4:blue;4:not[%s];4:or[%s,%s];4:or[%s,%s];4:size1;4:triangle;4:size3
'λx.apply(implies[blue,size1],iota(filter(filter(filter(filter(filter(x.s, circle), triangle), blue), triangle), rectangle)))'	0:apply(%s,%s);4:implies[%s,%s];4:blue;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle;4:blue;4:triangle;4:rectangle
'λx.forall(apply(same_color,iota(x.s)),filter(x.s, size1))'	0:forall(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(apply(same_color,iota(filter(x.s, rectangle))),iota(filter(x.s, and[green,blue])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:blue
'λx.apply(size1,iota(filter(filter(x.s, blue), or[not[iff[apply(same_shape,iota(x.s)),size2]],size3])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:not[%s];4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size2;4:size3
'λx.forall(rectangle,filter(filter(filter(filter(filter(filter(x.s, implies[and[circle,and[not[size3],size3]],yellow]), nor[size1,and[and[blue,green],green]]), yellow), size3), circle), green))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:not[%s];4:size3;4:size3;4:yellow;4:nor[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:blue;4:green;4:green;4:yellow;4:size3;4:circle;4:green
'λx.apply(and[rectangle,rectangle],iota(filter(x.s, green)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(not[size1],iota(filter(filter(filter(filter(filter(filter(x.s, yellow), size2), apply(same_size,x.o)), yellow), green), size1)))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow;4:green;4:size1
'λx.exists(rectangle, x.s)'	0:exists(%s, %s);4:rectangle;3:%s.s;2:x
'λx.apply(and[and[size3,size1],nand[triangle,rectangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size3;4:size1;4:nand[%s,%s];4:triangle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(x.s, triangle), circle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle
'λx.apply(size2,iota(filter(filter(filter(filter(filter(filter(x.s, yellow), triangle), size3), rectangle), rectangle), not[iff[rectangle,rectangle]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle;4:size3;4:rectangle;4:rectangle;4:not[%s];4:iff[%s,%s];4:rectangle;4:rectangle
'λx.apply(and[and[size2,and[size1,size3]],size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:size1;4:size3;4:size3;1:iota(%s);3:%s.s;2:x
'λx.forall(green,filter(x.s, rectangle))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(yellow,iota(filter(filter(filter(x.s, implies[circle,blue]), not[yellow]), and[circle,apply(same_shape,iota(filter(x.s, triangle)))])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:circle;4:blue;4:not[%s];4:yellow;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.exists(apply(same_size,iota(filter(x.s, size1))), filter(x.s, rectangle))'	0:exists(%s, %s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[size1,yellow],iota(filter(x.s, green)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(iff[size3,nand[rectangle,size1]],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:size3;4:nand[%s,%s];4:rectangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.exists(and[size1,not[green]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:size1;4:not[%s];4:green;3:%s.s;2:x
'λx.apply(green,iota(filter(x.s, or[nor[blue,size3],size1])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:nor[%s,%s];4:blue;4:size3;4:size1
'λx.apply(or[not[blue],implies[triangle,triangle]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:blue;4:implies[%s,%s];4:triangle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[rectangle,and[green,circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:and[%s,%s];4:green;4:circle;1:%s.o;2:x
'λx.apply(nand[size1,yellow],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size1;4:yellow;1:%s.o;2:x
'λx.apply(nor[blue,apply(same_shape,iota(x.s))],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(nand[implies[nand[and[size2,apply(same_color,iota(filter(x.s, green)))],yellow],size2],triangle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:implies[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow;4:size2;4:triangle;1:%s.o;2:x
'λx.forall(size3,filter(filter(x.s, triangle), apply(same_color,x.o)))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(yellow,iota(filter(x.s, blue)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[apply(same_shape,x.o),blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, and[and[yellow,blue],size2])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:yellow;4:blue;4:size2
'λx.empty(filter(x.s, apply(same_color,x.o)))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(x.s, and[size1,and[green,circle]]), yellow)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:and[%s,%s];4:green;4:circle;4:yellow
'λx.apply(blue,iota(filter(filter(filter(filter(x.s, green), and[or[and[blue,or[circle,size2]],circle],yellow]), blue), size3)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:blue;4:or[%s,%s];4:circle;4:size2;4:circle;4:yellow;4:blue;4:size3
'λx.forall(not[size3],x.s)'	0:forall(%s,%s);4:not[%s];4:size3;3:%s.s;2:x
'λx.forall(not[size1],x.s)'	0:forall(%s,%s);4:not[%s];4:size1;3:%s.s;2:x
'λx.forall(not[size2],x.s)'	0:forall(%s,%s);4:not[%s];4:size2;3:%s.s;2:x
'λx.exists(and[triangle,and[and[and[and[green,size1],size1],iff[circle,blue]],iff[and[and[apply(same_shape,iota(x.s)),or[yellow,not[size3]]],yellow],and[size2,rectangle]]]], filter(x.s, yellow))'	0:exists(%s, %s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:size1;4:size1;4:iff[%s,%s];4:circle;4:blue;4:iff[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:not[%s];4:size3;4:yellow;4:and[%s,%s];4:size2;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(and[yellow,and[or[nor[yellow,circle],circle],green]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:and[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:yellow;4:circle;4:circle;4:green;1:iota(%s);3:%s.s;2:x
'λx.exists(size2, filter(filter(x.s, not[apply(same_color,x.o)]), yellow))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow
'λx.exists(size1, filter(filter(x.s, nor[apply(same_size,x.o),circle]), not[and[blue,size1]]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;4:not[%s];4:and[%s,%s];4:blue;4:size1
'λx.apply(nor[blue,green],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:blue;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(x.s, green), apply(same_size,x.o))))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(not[or[and[size3,and[circle,green]],size1]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:circle;4:green;4:size1;1:%s.o;2:x
'λx.apply(or[blue,and[green,yellow]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:and[%s,%s];4:green;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(rectangle,iota(filter(filter(x.s, and[and[rectangle,and[apply(same_shape,x.o),circle]],or[green,size3]]), green)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;4:or[%s,%s];4:green;4:size3;4:green
'λx.apply(nor[size2,green],iota(filter(x.s, or[size2,or[or[size2,nand[blue,triangle]],not[and[circle,circle]]]])))'	0:apply(%s,%s);4:nor[%s,%s];4:size2;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:or[%s,%s];4:or[%s,%s];4:size2;4:nand[%s,%s];4:blue;4:triangle;4:not[%s];4:and[%s,%s];4:circle;4:circle
'λx.exists(green, filter(x.s, and[and[apply(size-geq,iota(filter(x.s, green))),or[apply(same_color,iota(filter(x.s, and[size3,size1]))),yellow]],and[yellow,and[blue,not[circle]]]]))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:size1;4:yellow;4:and[%s,%s];4:yellow;4:and[%s,%s];4:blue;4:not[%s];4:circle
'λx.apply(rectangle,iota(filter(x.s, and[circle,rectangle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:rectangle
'λx.apply(and[size3,yellow],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.forall(not[and[size1,yellow]],filter(x.s, size3))'	0:forall(%s,%s);4:not[%s];4:and[%s,%s];4:size1;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(and[nand[apply(size-leq,iota(filter(x.s, green))),nor[apply(same_shape,iota(x.s)),blue]],blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:blue;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[green,rectangle],and[not[not[apply(same_size,x.o)]],or[and[apply(same_color,x.o),size2],size3]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:green;4:rectangle;4:and[%s,%s];4:not[%s];4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size2;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[size1,not[triangle]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size1;4:not[%s];4:triangle;1:%s.o;2:x
'λx.apply(apply(size-lt,iota(filter(x.s, and[blue,and[triangle,circle]]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:and[%s,%s];4:triangle;4:circle;1:%s.o;2:x
'λx.apply(size3,iota(filter(x.s, not[and[and[yellow,size1],green]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:size1;4:green
'λx.exists(size2, filter(filter(x.s, triangle), yellow))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:yellow
'λx.apply(apply(size-gt,iota(filter(x.s, rectangle))),iota(filter(x.s, nand[apply(same_shape,x.o),implies[size3,apply(size-leq,iota(filter(x.s, size1)))]])))'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:implies[%s,%s];4:size3;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(or[green,green],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:green;1:iota(%s);3:%s.s;2:x
'λx.forall(apply(same_size,x.o),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:%s.s;2:x
'λx.contains(iota(x.s), filter(x.s, and[green,not[circle]]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:not[%s];4:circle
'λx.apply(size2,iota(filter(filter(filter(x.s, and[size3,blue]), blue), size2)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:blue;4:blue;4:size2
'λx.apply(or[size2,circle],iota(filter(filter(filter(x.s, yellow), triangle), green)))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle;4:green
'λx.apply(nand[circle,not[blue]],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:circle;4:not[%s];4:blue;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, size2), and[and[size1,iff[green,size1]],size1]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:and[%s,%s];4:size1;4:iff[%s,%s];4:green;4:size1;4:size1
'λx.apply(apply(same_size,x.o),iota(filter(filter(filter(x.s, rectangle), circle), or[and[green,blue],rectangle])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle;4:or[%s,%s];4:and[%s,%s];4:green;4:blue;4:rectangle
'λx.exists(blue, filter(filter(filter(x.s, triangle), and[and[not[apply(same_color,iota(x.s))],apply(same_size,x.o)],apply(same_shape,iota(x.s))]), not[size1]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:not[%s];4:size1
'λx.apply(and[green,or[apply(same_size,x.o),size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1;1:%s.o;2:x
'λx.apply(or[and[triangle,circle],apply(size-lt,x.o)],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:triangle;4:circle;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(x.s, size2), circle), and[not[not[yellow]],size2])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle;4:and[%s,%s];4:not[%s];4:not[%s];4:yellow;4:size2;3:%s.s;2:x
'λx.apply(and[and[yellow,apply(same_color,x.o)],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;1:%s.o;2:x
'λx.apply(and[apply(same_shape,iota(x.s)),circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[circle,and[apply(same_size,iota(x.s)),and[green,rectangle]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:green;4:rectangle;1:%s.o;2:x
'λx.apply(and[green,apply(same_size,iota(x.s))],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[yellow,triangle],iota(filter(filter(filter(filter(x.s, and[or[triangle,blue],apply(same_shape,iota(x.s))]), blue), size3), size3)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:triangle;4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:blue;4:size3;4:size3
'λx.contains(iota(filter(x.s, and[or[rectangle,triangle],size3])), filter(x.s, green))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:triangle;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.empty(filter(filter(filter(x.s, apply(same_color,x.o)), apply(same_size,x.o)), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2
'λx.forall(rectangle,filter(x.s, implies[rectangle,rectangle]))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:rectangle;4:rectangle
'λx.apply(or[apply(same_shape,x.o),blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue;1:%s.o;2:x
'λx.forall(or[green,blue],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:green;4:blue;3:%s.s;2:x
'λx.exists(size1, filter(filter(filter(filter(filter(filter(filter(x.s, circle), yellow), apply(same_size,iota(x.s))), size2), nand[not[apply(same_shape,iota(x.s))],green]), size2), yellow))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size2;4:nand[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:green;4:size2;4:yellow
'λx.forall(implies[size3,or[size3,size1]],x.s)'	0:forall(%s,%s);4:implies[%s,%s];4:size3;4:or[%s,%s];4:size3;4:size1;3:%s.s;2:x
'λx.apply(or[yellow,size2],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(or[yellow,size3],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(or[yellow,size1],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(not[not[circle]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:circle;1:%s.o;2:x
'λx.exists(or[triangle,blue], filter(x.s, size1))'	0:exists(%s, %s);4:or[%s,%s];4:triangle;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(green,iota(filter(filter(x.s, not[and[apply(same_size,iota(x.s)),size2]]), circle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size2;4:circle
'λx.apply(not[not[yellow]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[apply(size-lt,iota(filter(filter(x.s, apply(same_size,x.o)), green))),circle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;4:circle;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, and[rectangle,yellow])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:yellow
'λx.apply(size1,iota(filter(x.s, apply(same_color,x.o))))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(not[and[circle,yellow]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:circle;4:yellow;1:%s.o;2:x
'λx.apply(not[apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(blue,iota(x.s))'	0:apply(%s,%s);4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(and[triangle,or[size1,yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:or[%s,%s];4:size1;4:yellow;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, and[rectangle,blue]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:blue
'λx.apply(nand[size2,yellow],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size2;4:yellow;1:%s.o;2:x
'λx.forall(and[yellow,apply(size-geq,iota(x.s))],filter(filter(x.s, triangle), yellow))'	0:forall(%s,%s);4:and[%s,%s];4:yellow;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:yellow
'λx.apply(or[triangle,apply(size-leq,iota(filter(filter(x.s, blue), blue)))],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(x.s, or[size1,size3]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:size3
'λx.empty(filter(x.s, or[size3,size3]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:size3
'λx.apply(and[rectangle,blue],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(and[rectangle,not[blue]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:rectangle;4:not[%s];4:blue;3:%s.s;2:x
'λx.forall(and[yellow,nor[not[green],rectangle]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:yellow;4:nor[%s,%s];4:not[%s];4:green;4:rectangle;3:%s.s;2:x
'λx.empty(filter(filter(filter(filter(x.s, nor[circle,green]), and[size2,apply(same_color,x.o)]), apply(same_size,x.o)), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:circle;4:green;4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3
'λx.apply(rectangle,iota(filter(filter(x.s, triangle), blue)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue
'λx.forall(and[circle,and[rectangle,blue]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:circle;4:and[%s,%s];4:rectangle;4:blue;3:%s.s;2:x
'λx.contains(x.o, filter(x.s, and[apply(same_color,iota(x.s)),and[or[rectangle,or[size2,apply(same_shape,x.o)]],size3]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3
'λx.empty(filter(filter(filter(x.s, size2), size3), or[size1,yellow]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3;4:or[%s,%s];4:size1;4:yellow
'λx.apply(size1,iota(filter(x.s, apply(same_shape,x.o))))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(size2,iota(filter(x.s, apply(same_shape,x.o))))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(size3,iota(filter(x.s, apply(same_shape,x.o))))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, or[triangle,size3]), and[rectangle,or[yellow,and[apply(same_color,x.o),circle]]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:size3;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:yellow;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;3:%s.s;2:x
'λx.exists(apply(same_size,iota(filter(x.s, green))), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;3:%s.s;2:x
'λx.contains(iota(filter(x.s, size3)), filter(x.s, triangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(iff[not[or[apply(same_color,x.o),and[size2,or[apply(same_size,iota(x.s)),blue]]]],and[size1,yellow]],iota(filter(filter(filter(x.s, triangle), rectangle), not[size2])))'	0:apply(%s,%s);4:iff[%s,%s];4:not[%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:size2;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:size1;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle;4:not[%s];4:size2
'λx.apply(or[blue,apply(same_color,x.o)],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.forall(size2,filter(filter(x.s, size3), size3))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3
'λx.forall(size1,filter(filter(x.s, size3), size3))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3
'λx.forall(size1,filter(filter(x.s, size3), size2))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2
'λx.contains(iota(x.s), filter(filter(x.s, yellow), triangle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle
'λx.contains(x.o, filter(filter(filter(x.s, rectangle), rectangle), or[blue,green]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle;4:or[%s,%s];4:blue;4:green
'λx.apply(and[yellow,yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(and[or[size1,triangle],circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size1;4:triangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size2,or[size2,triangle]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:or[%s,%s];4:size2;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(filter(filter(x.s, circle), size1), size1), size2)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1;4:size1;4:size2;3:%s.s;2:x
'λx.apply(apply(size-gt,x.o),iota(filter(x.s, and[size2,blue])))'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:blue
'λx.apply(apply(size-gt,x.o),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(not[not[and[size3,yellow]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:and[%s,%s];4:size3;4:yellow;1:%s.o;2:x
'λx.apply(and[or[yellow,size3],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:yellow;4:size3;4:size3;1:%s.o;2:x
'λx.apply(iff[apply(size-gt,x.o),and[apply(same_size,iota(filter(x.s, size1))),triangle]],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(and[apply(same_shape,iota(x.s)),size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size3;1:%s.o;2:x
'λx.apply(and[apply(same_shape,iota(x.s)),size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size2;1:%s.o;2:x
'λx.forall(apply(same_shape,iota(filter(filter(x.s, not[blue]), size1))),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:size1;3:%s.s;2:x
'λx.apply(not[apply(size-gt,iota(filter(filter(filter(filter(x.s, size2), and[or[and[triangle,apply(size-geq,x.o)],rectangle],yellow]), circle), apply(size-leq,iota(x.s)))))],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:triangle;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:rectangle;4:yellow;4:circle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, nand[triangle,rectangle]), rectangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:triangle;4:rectangle;4:rectangle
'λx.apply(not[not[and[apply(same_size,x.o),circle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;1:%s.o;2:x
'λx.contains(iota(filter(x.s, size3)), filter(x.s, green))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.contains(iota(filter(x.s, size2)), filter(x.s, size3))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.contains(x.o, filter(x.s, and[nor[and[circle,green],size3],size1]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:circle;4:green;4:size3;4:size1
'λx.contains(iota(filter(filter(x.s, yellow), rectangle)), filter(filter(x.s, size1), implies[implies[or[blue,size3],size2],rectangle]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:implies[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:blue;4:size3;4:size2;4:rectangle
'λx.apply(not[nor[rectangle,or[blue,or[iff[size2,blue],size1]]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:nor[%s,%s];4:rectangle;4:or[%s,%s];4:blue;4:or[%s,%s];4:iff[%s,%s];4:size2;4:blue;4:size1;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, and[size1,not[size2]]), triangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:not[%s];4:size2;4:triangle
'λx.forall(circle,filter(filter(x.s, size3), yellow))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow
'λx.apply(and[apply(same_size,iota(filter(filter(x.s, triangle), and[blue,circle]))),green],iota(filter(x.s, green)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:blue;4:circle;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(or[and[size2,and[green,not[size3]]],yellow],iota(filter(filter(x.s, or[apply(size-geq,x.o),yellow]), and[not[blue],green])))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:green;4:not[%s];4:size3;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:yellow;4:and[%s,%s];4:not[%s];4:blue;4:green
'λx.forall(rectangle,filter(filter(filter(x.s, or[yellow,size2]), not[size3]), blue))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:size2;4:not[%s];4:size3;4:blue
'λx.apply(nor[and[size1,or[nand[and[size3,circle],blue],not[size1]]],size3],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:size3;4:circle;4:blue;4:not[%s];4:size1;4:size3;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, and[size2,rectangle]), green)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:rectangle;4:green
'λx.contains(iota(filter(x.s, iff[nand[green,circle],not[yellow]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:nand[%s,%s];4:green;4:circle;4:not[%s];4:yellow;3:%s.s;2:x
'λx.forall(and[size3,rectangle],filter(x.s, and[circle,and[or[rectangle,apply(same_color,iota(filter(filter(x.s, and[apply(same_shape,iota(x.s)),and[or[apply(same_size,iota(filter(x.s, size2))),and[nand[and[and[and[green,yellow],triangle],not[green]],size3],apply(same_color,x.o)]],yellow]]), circle)))],yellow]]))'	0:forall(%s,%s);4:and[%s,%s];4:size3;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:yellow;4:triangle;4:not[%s];4:green;4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;4:circle;4:yellow
'λx.apply(not[implies[circle,and[or[rectangle,size3],rectangle]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:implies[%s,%s];4:circle;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:size3;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[and[size3,and[green,green]],and[size2,size3]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:green;4:green;4:and[%s,%s];4:size2;4:size3;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(x.s), filter(filter(x.s, or[and[and[nand[blue,not[rectangle]],not[and[blue,apply(same_shape,x.o)]]],not[rectangle]],blue]), nor[not[or[size3,triangle]],size3]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:blue;4:not[%s];4:rectangle;4:not[%s];4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:rectangle;4:blue;4:nor[%s,%s];4:not[%s];4:or[%s,%s];4:size3;4:triangle;4:size3
'λx.apply(nand[or[blue,iff[and[green,apply(same_color,iota(x.s))],yellow]],triangle],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:or[%s,%s];4:blue;4:iff[%s,%s];4:and[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:yellow;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[circle,and[or[triangle,size2],and[implies[not[size1],circle],nor[and[circle,or[or[circle,size3],blue]],yellow]]]],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:circle;4:and[%s,%s];4:or[%s,%s];4:triangle;4:size2;4:and[%s,%s];4:implies[%s,%s];4:not[%s];4:size1;4:circle;4:nor[%s,%s];4:and[%s,%s];4:circle;4:or[%s,%s];4:or[%s,%s];4:circle;4:size3;4:blue;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(x.s, nand[triangle,rectangle]), yellow)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:triangle;4:rectangle;4:yellow
'λx.apply(rectangle,iota(filter(filter(x.s, and[size2,yellow]), size2)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:yellow;4:size2
'λx.apply(size3,iota(filter(x.s, not[not[circle]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:circle
'λx.apply(size1,iota(filter(filter(x.s, blue), yellow)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow
'λx.exists(blue, filter(filter(x.s, size3), size2))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2
'λx.exists(blue, filter(filter(x.s, size2), size2))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2
'λx.exists(blue, filter(filter(x.s, size2), green))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green
'λx.apply(not[or[not[size2],size3]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:not[%s];4:size2;4:size3;1:%s.o;2:x
'λx.contains(iota(filter(x.s, green)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;3:%s.s;2:x
'λx.forall(or[blue,apply(size-geq,x.o)],filter(filter(filter(x.s, triangle), triangle), blue))'	0:forall(%s,%s);4:or[%s,%s];4:blue;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:triangle;4:blue
'λx.apply(implies[nand[yellow,green],size3],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:nand[%s,%s];4:yellow;4:green;4:size3;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(filter(x.s, size3), and[triangle,and[not[nand[yellow,or[rectangle,size1]]],apply(size-geq,x.o)]]), apply(same_size,x.o))))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:triangle;4:and[%s,%s];4:not[%s];4:nand[%s,%s];4:yellow;4:or[%s,%s];4:rectangle;4:size1;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(or[not[size1],yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:size1;4:yellow;1:%s.o;2:x
'λx.exists(or[rectangle,triangle], filter(filter(filter(filter(filter(x.s, size1), and[green,circle]), apply(same_size,iota(filter(filter(x.s, yellow), green)))), not[size3]), not[size1]))'	0:exists(%s, %s);4:or[%s,%s];4:rectangle;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:green;4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green;4:not[%s];4:size3;4:not[%s];4:size1
'λx.contains(iota(filter(filter(x.s, apply(same_size,iota(x.s))), and[apply(same_color,x.o),size2])), filter(x.s, size1))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.empty(filter(filter(x.s, yellow), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle
'λx.apply(blue,iota(filter(x.s, or[triangle,triangle])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:triangle
'λx.apply(yellow,iota(filter(x.s, circle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[implies[size2,rectangle],not[size3]],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:size2;4:rectangle;4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.exists(blue, filter(x.s, and[triangle,apply(same_color,iota(x.s))]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(and[rectangle,not[rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.empty(filter(filter(x.s, not[circle]), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:size1
'λx.apply(and[circle,circle],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(circle,iota(filter(filter(x.s, apply(size-gt,iota(filter(x.s, triangle)))), rectangle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle
'λx.apply(yellow,iota(filter(filter(x.s, blue), size1)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1
'λx.forall(not[and[rectangle,triangle]],filter(filter(x.s, green), size3))'	0:forall(%s,%s);4:not[%s];4:and[%s,%s];4:rectangle;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size3
'λx.apply(apply(same_shape,iota(filter(filter(filter(x.s, not[yellow]), circle), green))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:circle;4:green;1:%s.o;2:x
'λx.exists(triangle, filter(filter(filter(x.s, triangle), size3), size3))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3;4:size3
'λx.forall(apply(same_color,iota(filter(x.s, and[yellow,apply(size-gt,iota(x.s))]))),filter(filter(x.s, circle), triangle))'	0:forall(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle
'λx.apply(or[not[triangle],rectangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:triangle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size1,blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:blue;1:%s.o;2:x
'λx.forall(not[green],x.s)'	0:forall(%s,%s);4:not[%s];4:green;3:%s.s;2:x
'λx.exists(or[rectangle,size3], filter(filter(x.s, size1), triangle))'	0:exists(%s, %s);4:or[%s,%s];4:rectangle;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle
'λx.contains(x.o, filter(filter(x.s, triangle), size3))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3
'λx.contains(x.o, filter(filter(x.s, triangle), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green
'λx.exists(apply(same_shape,iota(x.s)), filter(filter(filter(x.s, green), or[nand[circle,yellow],triangle]), apply(same_size,x.o)))'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:nand[%s,%s];4:circle;4:yellow;4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(size2,iota(filter(x.s, and[size2,circle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:circle
'λx.forall(apply(same_color,x.o),filter(x.s, and[or[triangle,implies[size2,yellow]],size3]))'	0:forall(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:triangle;4:implies[%s,%s];4:size2;4:yellow;4:size3
'λx.apply(apply(same_shape,iota(filter(x.s, or[not[apply(same_size,x.o)],green]))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(x.s, yellow), circle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle
'λx.apply(not[or[and[yellow,triangle],yellow]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:and[%s,%s];4:yellow;4:triangle;4:yellow;1:%s.o;2:x
'λx.exists(implies[circle,triangle], filter(filter(x.s, yellow), circle))'	0:exists(%s, %s);4:implies[%s,%s];4:circle;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle
'λx.apply(not[and[blue,yellow]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:blue;4:yellow;1:%s.o;2:x
'λx.apply(apply(same_size,iota(filter(x.s, size3))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_size,iota(filter(x.s, size1))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(filter(x.s, and[triangle,size3]), apply(size-leq,x.o)), iff[circle,blue])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:size3;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:iff[%s,%s];4:circle;4:blue;3:%s.s;2:x
'λx.apply(and[apply(same_size,x.o),not[size3]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:not[%s];4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(filter(filter(x.s, and[iff[triangle,apply(same_size,iota(filter(x.s, circle)))],circle]), size1), and[blue,size1]), not[apply(same_shape,iota(filter(x.s, yellow)))])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:iff[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:circle;4:size1;4:and[%s,%s];4:blue;4:size1;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(and[yellow,not[or[size1,or[apply(size-geq,x.o),yellow]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:not[%s];4:or[%s,%s];4:size1;4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:yellow;1:%s.o;2:x
'λx.apply(and[rectangle,apply(same_size,iota(filter(x.s, size2)))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, or[or[yellow,circle],or[nor[size3,yellow],circle]]), nand[size2,and[blue,size1]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:yellow;4:circle;4:or[%s,%s];4:nor[%s,%s];4:size3;4:yellow;4:circle;4:nand[%s,%s];4:size2;4:and[%s,%s];4:blue;4:size1
'λx.exists(and[and[size1,size3],apply(size-gt,x.o)], filter(x.s, size3))'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:size1;4:size3;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.forall(iff[green,size3],filter(x.s, not[blue]))'	0:forall(%s,%s);4:iff[%s,%s];4:green;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.contains(iota(x.s), filter(filter(x.s, size1), size1))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1
'λx.contains(iota(x.s), filter(filter(x.s, size2), green))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green
'λx.contains(iota(x.s), filter(filter(x.s, size3), green))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green
'λx.contains(iota(x.s), filter(filter(x.s, size2), size2))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2
'λx.contains(iota(x.s), filter(filter(x.s, size2), size3))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3
'λx.contains(iota(x.s), filter(filter(x.s, size3), size2))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2
'λx.apply(green,iota(filter(x.s, and[size2,and[triangle,green]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:and[%s,%s];4:triangle;4:green
'λx.apply(implies[apply(same_size,iota(filter(x.s, apply(size-leq,x.o)))),size3],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size3;1:%s.o;2:x
'λx.apply(nor[size2,triangle],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:nor[%s,%s];4:size2;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.forall(and[implies[not[and[circle,rectangle]],green],size2],filter(x.s, rectangle))'	0:forall(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:not[%s];4:and[%s,%s];4:circle;4:rectangle;4:green;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(iff[size3,and[yellow,size2]],iota(filter(x.s, and[size2,size2])))'	0:apply(%s,%s);4:iff[%s,%s];4:size3;4:and[%s,%s];4:yellow;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:size2
'λx.apply(or[blue,nand[green,rectangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:nand[%s,%s];4:green;4:rectangle;1:%s.o;2:x
'λx.apply(and[triangle,implies[and[size3,or[and[triangle,rectangle],and[nor[circle,rectangle],circle]]],triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:implies[%s,%s];4:and[%s,%s];4:size3;4:or[%s,%s];4:and[%s,%s];4:triangle;4:rectangle;4:and[%s,%s];4:nor[%s,%s];4:circle;4:rectangle;4:circle;4:triangle;1:%s.o;2:x
'λx.exists(or[not[triangle],size2], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:not[%s];4:triangle;4:size2;3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(filter(x.s, yellow), rectangle), triangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle;4:triangle
'λx.apply(apply(same_color,iota(filter(x.s, and[apply(same_size,x.o),size2]))),iota(filter(filter(filter(filter(x.s, and[circle,size3]), green), triangle), or[triangle,triangle])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size3;4:green;4:triangle;4:or[%s,%s];4:triangle;4:triangle
'λx.apply(not[triangle],iota(filter(filter(filter(filter(x.s, circle), yellow), blue), implies[nand[green,not[not[size2]]],apply(same_color,x.o)])))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow;4:blue;4:implies[%s,%s];4:nand[%s,%s];4:green;4:not[%s];4:not[%s];4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(apply(size-leq,x.o),iota(filter(filter(x.s, green), size1)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1
'λx.apply(circle,iota(filter(filter(x.s, apply(same_shape,x.o)), apply(same_shape,x.o))))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(or[green,circle],iota(filter(filter(filter(filter(x.s, rectangle), or[size1,not[green]]), size3), iff[and[circle,and[size3,size1]],triangle])))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:or[%s,%s];4:size1;4:not[%s];4:green;4:size3;4:iff[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:size3;4:size1;4:triangle
'λx.apply(and[size3,nand[and[yellow,apply(same_color,x.o)],rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:nand[%s,%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle;1:%s.o;2:x
'λx.exists(size3, filter(x.s, and[blue,size3]))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size3
'λx.apply(implies[rectangle,and[implies[and[blue,or[blue,blue]],or[not[or[rectangle,not[size1]]],not[size2]]],not[size1]]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:rectangle;4:and[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:blue;4:or[%s,%s];4:blue;4:blue;4:or[%s,%s];4:not[%s];4:or[%s,%s];4:rectangle;4:not[%s];4:size1;4:not[%s];4:size2;4:not[%s];4:size1;1:%s.o;2:x
'λx.apply(implies[yellow,and[apply(size-gt,x.o),green]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:yellow;4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:green;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, not[and[blue,and[implies[or[rectangle,and[triangle,triangle]],size2],blue]]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:rectangle;4:and[%s,%s];4:triangle;4:triangle;4:size2;4:blue
'λx.apply(size3,iota(filter(filter(filter(x.s, rectangle), blue), and[green,size1])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue;4:and[%s,%s];4:green;4:size1
'λx.exists(circle, filter(x.s, apply(same_color,iota(x.s))))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, size3), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow
'λx.apply(and[size3,apply(same_color,x.o)],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(x.s, yellow), green)), filter(x.s, triangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(yellow,iota(filter(x.s, apply(size-geq,x.o))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.apply(and[size2,yellow],iota(filter(filter(filter(x.s, size2), circle), size3)))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle;4:size3
'λx.apply(and[size1,yellow],iota(filter(x.s, iff[blue,blue])))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:blue;4:blue
'λx.apply(size1,iota(filter(filter(x.s, yellow), not[size3])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:size3
'λx.contains(iota(filter(x.s, triangle)), filter(x.s, rectangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(green,iota(filter(x.s, apply(same_shape,iota(x.s)))))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(not[and[apply(same_shape,x.o),circle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;1:%s.o;2:x
'λx.forall(iff[green,apply(size-leq,iota(x.s))],filter(x.s, triangle))'	0:forall(%s,%s);4:iff[%s,%s];4:green;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(or[triangle,yellow],iota(filter(filter(filter(x.s, rectangle), size1), circle)))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1;4:circle
'λx.exists(circle, filter(x.s, or[and[not[nor[and[and[or[yellow,circle],rectangle],size2],size3]],triangle],apply(size-gt,x.o)]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:yellow;4:circle;4:rectangle;4:size2;4:size3;4:triangle;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.empty(filter(filter(x.s, rectangle), not[and[rectangle,blue]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:and[%s,%s];4:rectangle;4:blue
'λx.apply(and[blue,apply(same_shape,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.exists(green, filter(filter(x.s, triangle), rectangle))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle
'λx.apply(and[and[size1,circle],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:circle;4:size1;1:%s.o;2:x
'λx.empty(filter(filter(x.s, yellow), or[and[circle,apply(same_size,iota(x.s))],and[and[size3,yellow],circle]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size3;4:yellow;4:circle
'λx.apply(and[size1,implies[yellow,rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:implies[%s,%s];4:yellow;4:rectangle;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, size3), nor[nand[rectangle,size1],nor[triangle,blue]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:nor[%s,%s];4:nand[%s,%s];4:rectangle;4:size1;4:nor[%s,%s];4:triangle;4:blue;3:%s.s;2:x
'λx.forall(circle,filter(x.s, nand[size3,yellow]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size3;4:yellow
'λx.apply(and[or[size3,circle],not[not[nand[rectangle,size3]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size3;4:circle;4:not[%s];4:not[%s];4:nand[%s,%s];4:rectangle;4:size3;1:%s.o;2:x
'λx.empty(filter(filter(x.s, circle), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow
'λx.apply(triangle,iota(filter(filter(filter(filter(filter(filter(x.s, size3), and[iff[circle,size2],nor[apply(same_shape,iota(filter(x.s, size3))),or[nor[size1,blue],blue]]]), implies[not[size2],green]), not[and[apply(same_color,iota(x.s)),or[size2,and[circle,green]]]]), implies[triangle,size3]), size2)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:iff[%s,%s];4:circle;4:size2;4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:nor[%s,%s];4:size1;4:blue;4:blue;4:implies[%s,%s];4:not[%s];4:size2;4:green;4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:and[%s,%s];4:circle;4:green;4:implies[%s,%s];4:triangle;4:size3;4:size2
'λx.apply(or[triangle,and[and[rectangle,or[size3,blue]],green]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:or[%s,%s];4:size3;4:blue;4:green;1:%s.o;2:x
'λx.apply(and[not[and[apply(same_size,x.o),not[and[not[apply(same_size,x.o)],size2]]]],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2;4:size3;1:%s.o;2:x
'λx.apply(and[circle,or[rectangle,not[size2]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:or[%s,%s];4:rectangle;4:not[%s];4:size2;1:%s.o;2:x
'λx.apply(not[triangle],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(or[circle,circle],iota(filter(x.s, and[green,or[blue,not[yellow]]])))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:or[%s,%s];4:blue;4:not[%s];4:yellow
'λx.forall(apply(size-leq,iota(filter(filter(filter(filter(filter(filter(x.s, size2), yellow), size2), and[size1,size2]), yellow), or[blue,not[size1]]))),filter(x.s, or[circle,not[circle]]))'	0:forall(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:yellow;4:size2;4:and[%s,%s];4:size1;4:size2;4:yellow;4:or[%s,%s];4:blue;4:not[%s];4:size1;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:not[%s];4:circle
'λx.apply(apply(same_size,iota(filter(x.s, and[yellow,triangle]))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[yellow,or[green,circle]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:or[%s,%s];4:green;4:circle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(x.s, and[rectangle,and[yellow,not[and[green,not[nor[circle,or[circle,blue]]]]]]]), not[apply(same_color,iota(filter(x.s, not[and[not[or[iff[size3,triangle],apply(same_shape,iota(x.s))]],size2]])))])), filter(x.s, and[blue,green]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:yellow;4:not[%s];4:and[%s,%s];4:green;4:not[%s];4:nor[%s,%s];4:circle;4:or[%s,%s];4:circle;4:blue;4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:not[%s];4:or[%s,%s];4:iff[%s,%s];4:size3;4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:green
'λx.exists(and[size2,not[not[size1]]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:size2;4:not[%s];4:not[%s];4:size1;3:%s.s;2:x
'λx.apply(and[and[size3,green],size3],iota(filter(filter(x.s, iff[size3,triangle]), not[circle])))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size3;4:green;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size3;4:triangle;4:not[%s];4:circle
'λx.apply(apply(same_color,iota(filter(filter(filter(x.s, and[rectangle,triangle]), nor[yellow,and[circle,apply(same_size,iota(filter(x.s, apply(same_color,x.o))))]]), size3))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:triangle;4:nor[%s,%s];4:yellow;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(x.s, apply(same_color,x.o)), yellow)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow
'λx.apply(or[apply(same_color,x.o),size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size2;1:%s.o;2:x
'λx.apply(or[apply(same_size,iota(filter(x.s, apply(size-leq,x.o)))),size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size1;1:%s.o;2:x
'λx.apply(not[not[green]],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(and[blue,circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:circle;1:%s.o;2:x
'λx.apply(size1,iota(x.s))'	0:apply(%s,%s);4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(x.s))'	0:apply(%s,%s);4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(x.s))'	0:apply(%s,%s);4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(x.s, apply(size-geq,iota(filter(x.s, rectangle))))))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(size2,iota(filter(filter(filter(filter(x.s, size2), green), circle), circle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green;4:circle;4:circle
'λx.apply(and[size2,blue],iota(filter(filter(x.s, triangle), yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:yellow
'λx.apply(or[and[green,not[or[triangle,triangle]]],not[rectangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:green;4:not[%s];4:or[%s,%s];4:triangle;4:triangle;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.apply(and[not[not[size2]],blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:not[%s];4:size2;4:blue;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, and[size1,size1])), filter(filter(x.s, size3), and[green,or[size3,not[size2]]]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:green;4:or[%s,%s];4:size3;4:not[%s];4:size2
'λx.apply(or[nor[size3,yellow],blue],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:nor[%s,%s];4:size3;4:yellow;4:blue;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, nor[size1,and[not[size1],rectangle]]), or[yellow,circle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size1;4:and[%s,%s];4:not[%s];4:size1;4:rectangle;4:or[%s,%s];4:yellow;4:circle
'λx.apply(and[and[and[size1,blue],and[size1,green]],and[and[circle,nand[triangle,circle]],green]],iota(filter(filter(filter(x.s, green), and[blue,or[and[triangle,size3],size1]]), size3)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:blue;4:and[%s,%s];4:size1;4:green;4:and[%s,%s];4:and[%s,%s];4:circle;4:nand[%s,%s];4:triangle;4:circle;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:blue;4:or[%s,%s];4:and[%s,%s];4:triangle;4:size3;4:size1;4:size3
'λx.apply(not[and[size1,size2]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size1;4:size2;1:%s.o;2:x
'λx.apply(not[nand[triangle,or[size3,rectangle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:nand[%s,%s];4:triangle;4:or[%s,%s];4:size3;4:rectangle;1:%s.o;2:x
'λx.apply(and[nand[circle,implies[nor[size2,not[circle]],or[green,circle]]],nand[size3,and[implies[and[circle,blue],implies[size1,size1]],triangle]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:circle;4:implies[%s,%s];4:nor[%s,%s];4:size2;4:not[%s];4:circle;4:or[%s,%s];4:green;4:circle;4:nand[%s,%s];4:size3;4:and[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:circle;4:blue;4:implies[%s,%s];4:size1;4:size1;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[not[apply(same_size,iota(filter(filter(filter(filter(filter(x.s, not[not[size1]]), green), yellow), circle), yellow)))],rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:size1;4:green;4:yellow;4:circle;4:yellow;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[and[apply(size-geq,x.o),green],size3],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:green;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(x.s))'	0:apply(%s,%s);4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(x.s, green)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(circle,iota(filter(x.s, size3)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(circle,iota(filter(x.s, size1)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(circle,iota(filter(x.s, size2)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.contains(iota(filter(filter(filter(filter(filter(filter(x.s, triangle), triangle), size2), size2), not[size3]), and[green,size3])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:triangle;4:size2;4:size2;4:not[%s];4:size3;4:and[%s,%s];4:green;4:size3;3:%s.s;2:x
'λx.apply(or[not[blue],and[yellow,circle]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:blue;4:and[%s,%s];4:yellow;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[apply(same_size,iota(filter(x.s, or[apply(same_color,iota(x.s)),iff[apply(same_shape,iota(filter(filter(x.s, size3), triangle))),size2]])))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle;4:size2;1:%s.o;2:x
'λx.apply(size2,iota(filter(x.s, apply(same_shape,iota(x.s)))))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(or[iff[rectangle,apply(same_color,iota(x.s))],circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:iff[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:circle;1:%s.o;2:x
'λx.apply(or[green,size1],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(filter(filter(x.s, blue), blue), circle), iff[rectangle,and[or[and[size2,blue],rectangle],implies[iff[not[rectangle],or[rectangle,triangle]],apply(same_color,iota(x.s))]]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue;4:circle;4:iff[%s,%s];4:rectangle;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size2;4:blue;4:rectangle;4:implies[%s,%s];4:iff[%s,%s];4:not[%s];4:rectangle;4:or[%s,%s];4:rectangle;4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.exists(circle, filter(filter(x.s, size1), and[circle,rectangle]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:circle;4:rectangle
'λx.forall(apply(same_size,iota(filter(filter(x.s, circle), size3))),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3;3:%s.s;2:x
'λx.apply(and[or[size3,yellow],green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size3;4:yellow;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size2,not[circle]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:not[%s];4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(x.s, green)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(yellow,iota(filter(x.s, size3)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(yellow,iota(filter(x.s, size2)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(yellow,iota(filter(x.s, size1)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(or[rectangle,nand[size3,yellow]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:nand[%s,%s];4:size3;4:yellow;1:%s.o;2:x
'λx.apply(apply(same_shape,x.o),iota(filter(x.s, not[size1])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1
'λx.apply(apply(same_size,x.o),iota(filter(x.s, iff[and[implies[not[and[circle,rectangle]],green],size2],and[size3,circle]])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:not[%s];4:and[%s,%s];4:circle;4:rectangle;4:green;4:size2;4:and[%s,%s];4:size3;4:circle
'λx.apply(and[size2,and[and[and[circle,nor[and[rectangle,apply(same_shape,x.o)],green]],blue],size1]],iota(filter(filter(filter(x.s, size3), green), size2)))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:nor[%s,%s];4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green;4:blue;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green;4:size2
'λx.apply(not[or[or[blue,apply(same_size,iota(x.s))],size1]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:or[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size1;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, and[green,rectangle]), size3)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:rectangle;4:size3
'λx.empty(filter(x.s, and[and[and[yellow,not[triangle]],and[nand[not[nand[rectangle,size2]],and[circle,size3]],and[not[and[blue,and[blue,and[nor[rectangle,rectangle],circle]]]],green]]],not[blue]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:not[%s];4:triangle;4:and[%s,%s];4:nand[%s,%s];4:not[%s];4:nand[%s,%s];4:rectangle;4:size2;4:and[%s,%s];4:circle;4:size3;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:blue;4:and[%s,%s];4:nor[%s,%s];4:rectangle;4:rectangle;4:circle;4:green;4:not[%s];4:blue
'λx.apply(triangle,iota(filter(x.s, not[apply(size-geq,x.o)])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.forall(and[and[circle,blue],green],filter(x.s, blue))'	0:forall(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:blue;4:green;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[blue,rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:rectangle;1:%s.o;2:x
'λx.apply(or[triangle,nor[rectangle,not[and[size2,not[rectangle]]]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:nor[%s,%s];4:rectangle;4:not[%s];4:and[%s,%s];4:size2;4:not[%s];4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[and[triangle,and[apply(same_size,iota(filter(filter(filter(filter(x.s, and[rectangle,not[apply(same_shape,iota(filter(filter(x.s, blue), size1)))]]), triangle), and[size2,apply(size-lt,x.o)]), rectangle))),size1]],circle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1;4:triangle;4:and[%s,%s];4:size2;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:rectangle;4:size1;4:circle;1:%s.o;2:x
'λx.apply(or[and[and[apply(same_color,iota(filter(filter(filter(filter(filter(x.s, and[rectangle,circle]), and[size3,and[circle,yellow]]), size1), not[not[apply(same_shape,x.o)]]), circle))),blue],implies[size3,triangle]],yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:circle;4:and[%s,%s];4:size3;4:and[%s,%s];4:circle;4:yellow;4:size1;4:not[%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;4:blue;4:implies[%s,%s];4:size3;4:triangle;4:yellow;1:%s.o;2:x
'λx.exists(circle, filter(x.s, size1))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(circle, filter(x.s, size2))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.exists(circle, filter(x.s, green))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(or[green,not[size3]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:not[%s];4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[size3,rectangle],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:iff[%s,%s];4:size3;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(apply(same_shape,x.o),iota(filter(x.s, size1)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(apply(same_shape,x.o),iota(filter(x.s, green)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[or[yellow,or[and[yellow,size1],rectangle]],rectangle],iota(filter(filter(filter(x.s, yellow), size1), and[rectangle,size2])))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:yellow;4:or[%s,%s];4:and[%s,%s];4:yellow;4:size1;4:rectangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;4:and[%s,%s];4:rectangle;4:size2
'λx.apply(and[and[yellow,blue],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:blue;4:size3;1:%s.o;2:x
'λx.apply(yellow,iota(filter(x.s, and[implies[or[apply(same_shape,iota(x.s)),triangle],and[size1,not[rectangle]]],size1])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:size1;4:not[%s];4:rectangle;4:size1
'λx.apply(size2,iota(filter(x.s, not[or[yellow,not[and[rectangle,and[and[size1,size3],size3]]]]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:yellow;4:not[%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:size1;4:size3;4:size3
'λx.apply(not[nand[green,and[green,rectangle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:nand[%s,%s];4:green;4:and[%s,%s];4:green;4:rectangle;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, triangle), blue), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue;4:size1
'λx.apply(and[or[blue,size1],not[rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:blue;4:size1;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.apply(and[nor[or[rectangle,size2],not[yellow]],and[and[circle,circle],and[blue,not[circle]]]],iota(filter(x.s, not[size1])))'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:rectangle;4:size2;4:not[%s];4:yellow;4:and[%s,%s];4:and[%s,%s];4:circle;4:circle;4:and[%s,%s];4:blue;4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1
'λx.contains(x.o, filter(filter(filter(x.s, circle), and[apply(size-lt,iota(filter(filter(filter(filter(x.s, triangle), nand[triangle,rectangle]), size3), apply(same_color,iota(x.s))))),blue]), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:nand[%s,%s];4:triangle;4:rectangle;4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:blue;4:green
'λx.forall(apply(size-leq,iota(filter(x.s, triangle))),filter(x.s, size1))'	0:forall(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(or[blue,rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:rectangle;1:%s.o;2:x
'λx.apply(nand[and[and[size2,or[triangle,yellow]],green],size1],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:or[%s,%s];4:triangle;4:yellow;4:green;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[rectangle,circle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:rectangle;4:circle;1:%s.o;2:x
'λx.apply(and[and[not[size3],green],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size3;4:green;4:blue;1:%s.o;2:x
'λx.apply(and[size1,or[and[yellow,iff[green,rectangle]],and[apply(size-gt,x.o),iff[apply(same_shape,x.o),yellow]]]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:or[%s,%s];4:and[%s,%s];4:yellow;4:iff[%s,%s];4:green;4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.forall(rectangle,filter(filter(filter(x.s, size2), yellow), apply(same_shape,x.o)))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:yellow;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(or[size1,size3],iota(filter(x.s, and[size2,size2])))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:size2
'λx.forall(and[green,nand[and[and[and[apply(same_color,x.o),not[circle]],nor[size2,green]],green],blue]],filter(x.s, not[triangle]))'	0:forall(%s,%s);4:and[%s,%s];4:green;4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:circle;4:nor[%s,%s];4:size2;4:green;4:green;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.contains(x.o, filter(x.s, or[not[rectangle],size1]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:rectangle;4:size1
'λx.apply(and[apply(same_shape,iota(x.s)),blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(filter(x.s, size1), yellow), and[rectangle,apply(same_shape,iota(x.s))])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.exists(rectangle, filter(filter(filter(filter(x.s, apply(same_shape,iota(x.s))), triangle), size1), or[apply(same_size,iota(filter(x.s, size1))),rectangle]))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle;4:size1;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle
'λx.empty(filter(filter(x.s, and[circle,apply(size-gt,iota(x.s))]), iff[size1,not[size1]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:iff[%s,%s];4:size1;4:not[%s];4:size1
'λx.apply(and[size2,and[blue,and[green,size1]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:blue;4:and[%s,%s];4:green;4:size1;1:%s.o;2:x
'λx.forall(size3,filter(filter(filter(filter(x.s, not[circle]), triangle), apply(same_shape,iota(x.s))), blue))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:blue
'λx.empty(filter(x.s, apply(same_color,iota(filter(filter(filter(x.s, triangle), and[not[size2],and[triangle,circle]]), triangle)))))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:not[%s];4:size2;4:and[%s,%s];4:triangle;4:circle;4:triangle
'λx.apply(or[green,and[and[and[implies[size3,size3],size2],apply(same_color,iota(filter(filter(x.s, size3), circle)))],iff[circle,blue]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:size3;4:size3;4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle;4:iff[%s,%s];4:circle;4:blue;1:%s.o;2:x
'λx.contains(iota(filter(x.s, or[and[rectangle,not[size2]],yellow])), filter(x.s, size3))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:not[%s];4:size2;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(and[rectangle,size1],iota(filter(filter(x.s, yellow), apply(size-lt,iota(filter(filter(x.s, size2), rectangle))))))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle
'λx.apply(yellow,iota(filter(filter(filter(x.s, and[circle,size3]), triangle), and[circle,size1])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size3;4:triangle;4:and[%s,%s];4:circle;4:size1
'λx.apply(not[and[size3,circle]],iota(filter(filter(x.s, green), yellow)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size3;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow
'λx.apply(apply(same_color,iota(filter(filter(x.s, size3), not[not[and[yellow,and[yellow,and[rectangle,yellow]]]]]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:not[%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:yellow;4:and[%s,%s];4:rectangle;4:yellow;1:%s.o;2:x
'λx.apply(apply(size-lt,iota(filter(filter(filter(x.s, or[and[and[circle,and[nor[not[implies[triangle,rectangle]],not[or[iff[apply(same_color,x.o),green],blue]]],implies[or[apply(same_size,iota(x.s)),size2],apply(same_color,x.o)]]],rectangle],or[size2,size3]]), blue), circle))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:nor[%s,%s];4:not[%s];4:implies[%s,%s];4:triangle;4:rectangle;4:not[%s];4:or[%s,%s];4:iff[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green;4:blue;4:implies[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle;4:or[%s,%s];4:size2;4:size3;4:blue;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[triangle,triangle],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:triangle;4:rectangle;1:%s.o;2:x
'λx.apply(size2,iota(filter(x.s, nor[circle,green])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:circle;4:green
'λx.apply(or[apply(size-leq,iota(filter(filter(x.s, yellow), size1))),not[implies[rectangle,iff[green,and[rectangle,size3]]]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;4:not[%s];4:implies[%s,%s];4:rectangle;4:iff[%s,%s];4:green;4:and[%s,%s];4:rectangle;4:size3;1:%s.o;2:x
'λx.apply(nor[not[triangle],and[circle,yellow]],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:not[%s];4:triangle;4:and[%s,%s];4:circle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.forall(and[green,rectangle],filter(filter(filter(filter(x.s, and[size3,circle]), triangle), or[size1,blue]), and[green,and[or[circle,not[size3]],and[not[and[or[and[not[not[green]],nand[or[triangle,green],size2]],and[implies[blue,size2],and[size2,apply(same_color,x.o)]]],and[or[size3,size3],green]]],rectangle]]]))'	0:forall(%s,%s);4:and[%s,%s];4:green;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:circle;4:triangle;4:or[%s,%s];4:size1;4:blue;4:and[%s,%s];4:green;4:and[%s,%s];4:or[%s,%s];4:circle;4:not[%s];4:size3;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:not[%s];4:not[%s];4:green;4:nand[%s,%s];4:or[%s,%s];4:triangle;4:green;4:size2;4:and[%s,%s];4:implies[%s,%s];4:blue;4:size2;4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:or[%s,%s];4:size3;4:size3;4:green;4:rectangle
'λx.apply(circle,iota(filter(filter(x.s, triangle), circle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle
'λx.apply(apply(same_size,iota(filter(filter(filter(filter(x.s, triangle), yellow), or[and[not[yellow],not[rectangle]],triangle]), size1))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:yellow;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:yellow;4:not[%s];4:rectangle;4:triangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_color,iota(filter(x.s, blue))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(filter(x.s, and[and[iff[circle,size2],size1],apply(same_size,x.o)]), size1), nor[not[size2],yellow]), size3)), filter(x.s, not[rectangle]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:circle;4:size2;4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1;4:nor[%s,%s];4:not[%s];4:size2;4:yellow;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle
'λx.apply(triangle,iota(filter(x.s, or[and[rectangle,size3],triangle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:size3;4:triangle
'λx.apply(and[iff[blue,size1],yellow],iota(filter(x.s, or[apply(same_color,iota(filter(filter(x.s, iff[and[size3,blue],blue]), size3))),yellow])))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:blue;4:size1;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:and[%s,%s];4:size3;4:blue;4:blue;4:size3;4:yellow
'λx.apply(not[yellow],iota(filter(filter(filter(filter(filter(x.s, not[and[and[or[and[not[green],size2],circle],green],circle]]), apply(same_shape,iota(filter(filter(x.s, nor[size2,apply(same_shape,iota(x.s))]), rectangle)))), rectangle), blue), blue)))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:not[%s];4:green;4:size2;4:circle;4:green;4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:rectangle;4:rectangle;4:blue;4:blue
'λx.apply(blue,iota(filter(x.s, apply(size-leq,iota(x.s)))))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x
'λx.forall(size2,filter(x.s, blue))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(or[triangle,size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:size2;1:%s.o;2:x
'λx.apply(or[triangle,size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:size1;1:%s.o;2:x
'λx.apply(nand[not[size1],not[size2]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:not[%s];4:size1;4:not[%s];4:size2;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, or[apply(same_color,iota(filter(filter(x.s, and[blue,and[triangle,blue]]), not[not[size1]]))),circle]), blue), nor[size3,triangle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:and[%s,%s];4:triangle;4:blue;4:not[%s];4:not[%s];4:size1;4:circle;4:blue;4:nor[%s,%s];4:size3;4:triangle
'λx.apply(or[iff[size3,and[green,not[not[and[apply(size-leq,iota(x.s)),blue]]]]],and[not[triangle],rectangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:iff[%s,%s];4:size3;4:and[%s,%s];4:green;4:not[%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:not[%s];4:triangle;4:rectangle;1:%s.o;2:x
'λx.apply(size1,iota(filter(x.s, or[or[blue,and[green,and[size1,rectangle]]],apply(same_shape,x.o)])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:blue;4:and[%s,%s];4:green;4:and[%s,%s];4:size1;4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.exists(iff[green,triangle], filter(x.s, circle))'	0:exists(%s, %s);4:iff[%s,%s];4:green;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(not[size1],iota(filter(filter(x.s, size1), size2)))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2
'λx.contains(x.o, filter(filter(filter(x.s, circle), iff[or[not[yellow],size2],and[size2,size1]]), triangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:iff[%s,%s];4:or[%s,%s];4:not[%s];4:yellow;4:size2;4:and[%s,%s];4:size2;4:size1;4:triangle
'λx.apply(blue,iota(filter(filter(x.s, not[circle]), circle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:circle
'λx.apply(and[not[rectangle],size1],iota(filter(filter(x.s, yellow), size2)))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:rectangle;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2
'λx.contains(x.o, filter(x.s, and[blue,green]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:green
'λx.contains(x.o, filter(filter(x.s, or[triangle,and[apply(same_color,x.o),iff[rectangle,triangle]]]), or[iff[size3,apply(size-geq,x.o)],size1]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:iff[%s,%s];4:rectangle;4:triangle;4:or[%s,%s];4:iff[%s,%s];4:size3;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:size1
'λx.forall(circle,filter(x.s, circle))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(nor[rectangle,rectangle],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:rectangle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[circle,yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:yellow;1:%s.o;2:x
'λx.apply(not[and[yellow,size2]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:yellow;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size3,implies[nand[iff[rectangle,and[nor[and[and[triangle,blue],triangle],triangle],size2]],nand[circle,nand[apply(same_color,x.o),apply(same_shape,iota(filter(x.s, circle)))]]],yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:implies[%s,%s];4:nand[%s,%s];4:iff[%s,%s];4:rectangle;4:and[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:blue;4:triangle;4:triangle;4:size2;4:nand[%s,%s];4:circle;4:nand[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(filter(x.s, triangle), and[apply(same_color,iota(x.s)),rectangle]), apply(same_size,iota(filter(x.s, and[iff[not[size1],blue],yellow])))))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:iff[%s,%s];4:not[%s];4:size1;4:blue;4:yellow
'λx.apply(size1,iota(filter(filter(filter(filter(filter(filter(filter(x.s, nor[apply(same_size,x.o),circle]), size2), apply(size-gt,x.o)), apply(same_shape,x.o)), yellow), blue), nor[and[size3,size3],or[triangle,triangle]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;4:size2;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow;4:blue;4:nor[%s,%s];4:and[%s,%s];4:size3;4:size3;4:or[%s,%s];4:triangle;4:triangle
'λx.empty(filter(filter(x.s, or[size3,apply(same_color,iota(x.s))]), not[nor[size1,not[or[blue,triangle]]]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:not[%s];4:nor[%s,%s];4:size1;4:not[%s];4:or[%s,%s];4:blue;4:triangle
'λx.forall(and[green,size1],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:green;4:size1;3:%s.s;2:x
'λx.exists(size2, filter(x.s, or[and[blue,size1],size2]))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:blue;4:size1;4:size2
'λx.contains(iota(filter(x.s, rectangle)), filter(x.s, circle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[not[green],nand[green,or[circle,green]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:green;4:nand[%s,%s];4:green;4:or[%s,%s];4:circle;4:green;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, yellow), not[nor[green,and[yellow,not[circle]]]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:nor[%s,%s];4:green;4:and[%s,%s];4:yellow;4:not[%s];4:circle
'λx.exists(and[size2,rectangle], filter(filter(x.s, not[yellow]), nand[and[or[blue,or[size1,or[not[apply(same_shape,iota(filter(filter(x.s, or[size2,size3]), green)))],yellow]]],size1],not[triangle]]))'	0:exists(%s, %s);4:and[%s,%s];4:size2;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:nand[%s,%s];4:and[%s,%s];4:or[%s,%s];4:blue;4:or[%s,%s];4:size1;4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:size3;4:green;4:yellow;4:size1;4:not[%s];4:triangle
'λx.contains(x.o, filter(x.s, or[apply(same_shape,iota(x.s)),yellow]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:yellow
'λx.apply(iff[and[or[size1,size3],blue],size2],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size1;4:size3;4:blue;4:size2;1:iota(%s);3:%s.s;2:x
'λx.forall(rectangle,filter(filter(filter(filter(filter(filter(x.s, nor[iff[yellow,size1],and[and[nor[blue,triangle],size1],circle]]), size3), blue), rectangle), circle), size1))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:iff[%s,%s];4:yellow;4:size1;4:and[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:blue;4:triangle;4:size1;4:circle;4:size3;4:blue;4:rectangle;4:circle;4:size1
'λx.apply(and[or[green,blue],triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:green;4:blue;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.exists(and[or[size1,not[or[yellow,yellow]]],apply(same_color,x.o)], filter(filter(x.s, green), yellow))'	0:exists(%s, %s);4:and[%s,%s];4:or[%s,%s];4:size1;4:not[%s];4:or[%s,%s];4:yellow;4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow
'λx.apply(rectangle,iota(filter(filter(x.s, triangle), and[rectangle,green])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:rectangle;4:green
'λx.apply(or[blue,circle],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(size1,iota(filter(filter(filter(x.s, yellow), circle), size2)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle;4:size2
'λx.apply(size3,iota(filter(x.s, and[yellow,green])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:green
'λx.apply(nor[apply(same_color,x.o),size2],iota(filter(filter(filter(filter(filter(x.s, rectangle), and[yellow,and[and[or[circle,size2],triangle],size3]]), blue), iff[size3,and[and[blue,size3],circle]]), triangle)))'	0:apply(%s,%s);4:nor[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:yellow;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:circle;4:size2;4:triangle;4:size3;4:blue;4:iff[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:blue;4:size3;4:circle;4:triangle
'λx.apply(blue,iota(filter(filter(filter(filter(filter(x.s, blue), or[apply(size-geq,iota(x.s)),blue]), apply(same_color,iota(x.s))), triangle), size1)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:triangle;4:size1
'λx.exists(or[yellow,not[or[apply(same_color,iota(filter(filter(filter(x.s, apply(same_color,x.o)), rectangle), and[size3,triangle]))),iff[rectangle,size1]]]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:yellow;4:not[%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle;4:and[%s,%s];4:size3;4:triangle;4:iff[%s,%s];4:rectangle;4:size1;3:%s.s;2:x
'λx.contains(iota(filter(x.s, or[size2,triangle])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:triangle;3:%s.s;2:x
'λx.apply(or[circle,nand[triangle,size3]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:nand[%s,%s];4:triangle;4:size3;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, not[size1]), size1)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:size1
'λx.empty(filter(filter(filter(x.s, apply(same_shape,iota(x.s))), size2), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size2;4:triangle
'λx.apply(not[yellow],iota(filter(filter(filter(filter(filter(filter(x.s, or[not[not[blue]],yellow]), green), size3), green), not[blue]), apply(size-geq,x.o))))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:not[%s];4:blue;4:yellow;4:green;4:size3;4:green;4:not[%s];4:blue;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.apply(implies[apply(same_shape,iota(filter(filter(filter(filter(filter(filter(filter(filter(x.s, size3), green), size2), rectangle), size2), apply(size-geq,x.o)), size1), circle))),blue],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green;4:size2;4:rectangle;4:size2;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:size1;4:circle;4:blue;1:%s.o;2:x
'λx.apply(not[and[implies[green,size3],rectangle]],iota(filter(filter(x.s, size2), apply(same_shape,iota(x.s)))))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:implies[%s,%s];4:green;4:size3;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[green,not[triangle]],iota(filter(filter(filter(x.s, triangle), not[circle]), and[and[yellow,not[triangle]],size2])))'	0:apply(%s,%s);4:nor[%s,%s];4:green;4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:not[%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:yellow;4:not[%s];4:triangle;4:size2
'λx.forall(apply(size-lt,iota(x.s)),filter(x.s, iff[rectangle,circle]))'	0:forall(%s,%s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:rectangle;4:circle
'λx.apply(size1,iota(filter(x.s, and[triangle,size3])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:size3
'λx.apply(and[yellow,and[yellow,size1]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:and[%s,%s];4:yellow;4:size1;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(x.s), filter(x.s, apply(same_size,x.o)))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(x.s, size1))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(x.s, size3))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(filter(x.s, green), nand[triangle,rectangle]), size2)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:nand[%s,%s];4:triangle;4:rectangle;4:size2
'λx.apply(or[triangle,rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:rectangle;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, triangle), yellow))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:yellow
'λx.exists(yellow, filter(filter(x.s, nor[yellow,size1]), rectangle))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:yellow;4:size1;4:rectangle
'λx.apply(blue,iota(filter(filter(filter(x.s, apply(same_shape,x.o)), size3), circle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3;4:circle
'λx.apply(green,iota(filter(x.s, nor[or[not[blue],green],blue])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:or[%s,%s];4:not[%s];4:blue;4:green;4:blue
'λx.forall(and[green,green],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:green;4:green;3:%s.s;2:x
'λx.exists(green, filter(filter(filter(filter(filter(x.s, triangle), and[or[nor[size1,size1],and[apply(same_color,iota(filter(filter(x.s, size3), nor[blue,size2]))),blue]],implies[iff[or[circle,green],size3],yellow]]), and[triangle,rectangle]), green), circle))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:size1;4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:nor[%s,%s];4:blue;4:size2;4:blue;4:implies[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:circle;4:green;4:size3;4:yellow;4:and[%s,%s];4:triangle;4:rectangle;4:green;4:circle
'λx.apply(triangle,iota(filter(x.s, not[or[blue,and[blue,size2]]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:blue;4:and[%s,%s];4:blue;4:size2
'λx.contains(iota(filter(x.s, and[rectangle,green])), filter(x.s, yellow))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:green;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(iff[apply(same_color,iota(x.s)),circle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:circle;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(filter(x.s, blue), rectangle), green)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle;4:green
'λx.apply(nand[size2,size2],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:nand[%s,%s];4:size2;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.contains(x.o, filter(filter(x.s, apply(same_color,iota(filter(filter(x.s, and[or[or[yellow,yellow],size2],yellow]), or[triangle,triangle])))), size1))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:yellow;4:yellow;4:size2;4:yellow;4:or[%s,%s];4:triangle;4:triangle;4:size1
'λx.exists(implies[size2,triangle], filter(filter(filter(filter(filter(filter(x.s, yellow), nand[iff[size3,blue],apply(size-lt,x.o)]), rectangle), not[rectangle]), nand[not[size1],size1]), triangle))'	0:exists(%s, %s);4:implies[%s,%s];4:size2;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:nand[%s,%s];4:iff[%s,%s];4:size3;4:blue;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:rectangle;4:not[%s];4:rectangle;4:nand[%s,%s];4:not[%s];4:size1;4:size1;4:triangle
'λx.apply(and[green,size1],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.exists(iff[circle,green], filter(filter(x.s, size3), green))'	0:exists(%s, %s);4:iff[%s,%s];4:circle;4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green
'λx.empty(filter(x.s, and[or[yellow,rectangle],circle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:yellow;4:rectangle;4:circle
'λx.apply(nor[not[blue],not[circle]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:not[%s];4:blue;4:not[%s];4:circle;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, size3), not[apply(same_color,iota(x.s))])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[size1,yellow],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:size1;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(not[and[green,yellow]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:green;4:yellow;1:%s.o;2:x
'λx.apply(apply(size-geq,iota(filter(filter(filter(filter(x.s, rectangle), blue), or[size1,size1]), green))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue;4:or[%s,%s];4:size1;4:size1;4:green;1:iota(%s);3:%s.s;2:x
'λx.exists(apply(same_color,iota(filter(filter(x.s, yellow), size1))), filter(filter(x.s, not[green]), size1))'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:size1
'λx.empty(filter(filter(x.s, not[rectangle]), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;4:rectangle
'λx.exists(size2, filter(x.s, apply(size-gt,iota(x.s))))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[blue,size2],iota(filter(filter(filter(x.s, circle), rectangle), rectangle)))'	0:apply(%s,%s);4:nor[%s,%s];4:blue;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle;4:rectangle
'λx.contains(iota(x.s), filter(filter(filter(filter(filter(x.s, not[blue]), size1), size1), yellow), triangle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:size1;4:size1;4:yellow;4:triangle
'λx.apply(not[nor[green,blue]],x.o)'	0:apply(%s,%s);4:not[%s];4:nor[%s,%s];4:green;4:blue;1:%s.o;2:x
'λx.exists(yellow, filter(x.s, implies[size2,triangle]))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size2;4:triangle
'λx.apply(or[size1,or[size2,and[green,blue]]],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:or[%s,%s];4:size2;4:and[%s,%s];4:green;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(size2,iota(filter(filter(filter(filter(x.s, circle), size1), yellow), iff[size2,size3])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1;4:yellow;4:iff[%s,%s];4:size2;4:size3
'λx.exists(and[iff[apply(size-geq,x.o),and[size1,or[and[and[green,or[implies[size2,and[triangle,and[or[blue,and[not[green],yellow]],circle]]],circle]],size1],size2]]],not[nand[apply(same_size,iota(x.s)),rectangle]]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:iff[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:and[%s,%s];4:size1;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:or[%s,%s];4:implies[%s,%s];4:size2;4:and[%s,%s];4:triangle;4:and[%s,%s];4:or[%s,%s];4:blue;4:and[%s,%s];4:not[%s];4:green;4:yellow;4:circle;4:circle;4:size1;4:size2;4:not[%s];4:nand[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:rectangle;3:%s.s;2:x
'λx.exists(and[triangle,not[and[nand[size2,not[size3]],blue]]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:triangle;4:not[%s];4:and[%s,%s];4:nand[%s,%s];4:size2;4:not[%s];4:size3;4:blue;3:%s.s;2:x
'λx.forall(blue,filter(filter(x.s, size2), blue))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue
'λx.forall(blue,filter(filter(x.s, size3), blue))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue
'λx.apply(not[apply(size-leq,x.o)],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[or[apply(same_size,x.o),size3],apply(same_size,x.o)],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, rectangle)), filter(x.s, yellow))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.contains(iota(x.s), filter(x.s, or[rectangle,rectangle]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:rectangle
'λx.apply(triangle,iota(filter(filter(x.s, blue), nor[blue,and[green,rectangle]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:nor[%s,%s];4:blue;4:and[%s,%s];4:green;4:rectangle
'λx.empty(filter(filter(filter(x.s, blue), yellow), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow;4:size2
'λx.apply(or[implies[or[nor[not[blue],not[circle]],size2],and[triangle,triangle]],green],iota(filter(filter(x.s, circle), triangle)))'	0:apply(%s,%s);4:or[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:not[%s];4:blue;4:not[%s];4:circle;4:size2;4:and[%s,%s];4:triangle;4:triangle;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle
'λx.apply(and[size3,triangle],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(nor[and[blue,circle],size3],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:blue;4:circle;4:size3;1:%s.o;2:x
'λx.forall(triangle,filter(filter(x.s, green), circle))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:circle
'λx.apply(or[and[apply(size-lt,x.o),not[blue]],and[green,size1]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:not[%s];4:blue;4:and[%s,%s];4:green;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(x.s, blue), rectangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle
'λx.apply(not[nand[and[blue,yellow],size1]],iota(filter(filter(x.s, rectangle), blue)))'	0:apply(%s,%s);4:not[%s];4:nand[%s,%s];4:and[%s,%s];4:blue;4:yellow;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue
'λx.empty(filter(filter(x.s, size1), and[and[and[blue,size1],iff[blue,not[apply(same_color,iota(x.s))]]],blue]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:size1;4:iff[%s,%s];4:blue;4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:blue
'λx.apply(size3,iota(filter(filter(x.s, blue), rectangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle
'λx.apply(apply(same_shape,iota(filter(x.s, and[size3,green]))),iota(filter(x.s, and[apply(same_size,iota(x.s)),apply(same_size,iota(filter(x.s, yellow)))])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(iff[size3,apply(size-lt,x.o)],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:size3;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:%s.o;2:x
'λx.exists(not[yellow], x.s)'	0:exists(%s, %s);4:not[%s];4:yellow;3:%s.s;2:x
'λx.forall(and[green,and[or[circle,yellow],or[blue,green]]],filter(x.s, green))'	0:forall(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:or[%s,%s];4:circle;4:yellow;4:or[%s,%s];4:blue;4:green;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[size2,size2],iota(filter(x.s, apply(same_color,x.o))))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, nand[not[blue],circle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:not[%s];4:blue;4:circle
'λx.apply(or[size1,size3],iota(filter(x.s, and[not[size1],and[blue,apply(same_shape,iota(filter(filter(filter(x.s, size1), or[and[green,not[and[rectangle,circle]]],size1]), implies[size1,size1])))]])))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:size1;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:or[%s,%s];4:and[%s,%s];4:green;4:not[%s];4:and[%s,%s];4:rectangle;4:circle;4:size1;4:implies[%s,%s];4:size1;4:size1
'λx.apply(not[yellow],iota(filter(filter(x.s, green), not[rectangle])))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:rectangle
'λx.exists(size1, filter(filter(x.s, blue), rectangle))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle
'λx.contains(iota(filter(filter(x.s, rectangle), rectangle)), filter(filter(x.s, circle), rectangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle
'λx.apply(yellow,iota(filter(filter(filter(filter(x.s, circle), or[blue,and[iff[yellow,and[rectangle,implies[and[size1,apply(size-geq,x.o)],circle]]],green]]), size2), and[and[not[yellow],and[rectangle,and[size2,green]]],not[and[size1,apply(same_shape,iota(filter(filter(filter(filter(x.s, not[and[size1,triangle]]), yellow), size2), and[yellow,size3])))]]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:blue;4:and[%s,%s];4:iff[%s,%s];4:yellow;4:and[%s,%s];4:rectangle;4:implies[%s,%s];4:and[%s,%s];4:size1;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:circle;4:green;4:size2;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:yellow;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:size2;4:green;4:not[%s];4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:size1;4:triangle;4:yellow;4:size2;4:and[%s,%s];4:yellow;4:size3
'λx.apply(yellow,iota(filter(filter(x.s, or[triangle,triangle]), apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(not[not[blue]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:blue;1:iota(%s);3:%s.s;2:x
'λx.forall(or[rectangle,green],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:rectangle;4:green;3:%s.s;2:x
'λx.apply(not[or[green,size2]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:green;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(or[circle,and[size3,apply(same_color,x.o)]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.forall(circle,filter(x.s, yellow))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(yellow,iota(filter(x.s, nor[or[yellow,not[and[yellow,apply(same_size,x.o)]]],and[green,apply(same_shape,iota(filter(filter(x.s, or[apply(same_color,iota(filter(filter(filter(x.s, rectangle), green), green))),size1]), blue)))]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:or[%s,%s];4:yellow;4:not[%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green;4:green;4:size1;4:blue
'λx.apply(and[circle,apply(size-gt,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, triangle), yellow)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:yellow
'λx.apply(and[triangle,rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[circle],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(apply(same_shape,iota(filter(x.s, and[green,not[apply(same_size,x.o)]]))),iota(filter(x.s, and[not[and[nor[green,blue],not[size3]]],apply(same_color,iota(filter(x.s, size1)))])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:nor[%s,%s];4:green;4:blue;4:not[%s];4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(or[triangle,not[and[blue,not[green]]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:not[%s];4:and[%s,%s];4:blue;4:not[%s];4:green;1:%s.o;2:x
'λx.contains(iota(filter(x.s, and[green,size1])), filter(filter(x.s, not[yellow]), and[yellow,green]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:and[%s,%s];4:yellow;4:green
'λx.apply(nor[apply(same_color,iota(filter(filter(x.s, rectangle), and[yellow,triangle]))),not[rectangle]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:yellow;4:triangle;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.apply(apply(size-lt,iota(filter(x.s, size3))),iota(filter(x.s, and[blue,size1])))'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size1
'λx.exists(and[size1,green], filter(x.s, and[apply(size-geq,x.o),blue]))'	0:exists(%s, %s);4:and[%s,%s];4:size1;4:green;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:blue
'λx.apply(rectangle,iota(filter(filter(x.s, not[green]), apply(same_color,x.o))))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, size1), circle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle
'λx.apply(not[blue],iota(filter(filter(filter(filter(x.s, and[blue,yellow]), blue), size1), rectangle)))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:yellow;4:blue;4:size1;4:rectangle
'λx.exists(and[or[and[circle,and[yellow,green]],size1],triangle], filter(x.s, or[size1,triangle]))'	0:exists(%s, %s);4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:yellow;4:green;4:size1;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:triangle
'λx.apply(or[and[green,size1],green],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:green;4:size1;4:green;1:iota(%s);3:%s.s;2:x
'λx.forall(and[and[circle,not[circle]],implies[and[green,size1],triangle]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:not[%s];4:circle;4:implies[%s,%s];4:and[%s,%s];4:green;4:size1;4:triangle;3:%s.s;2:x
'λx.contains(iota(filter(x.s, yellow)), filter(filter(x.s, and[size2,blue]), apply(same_size,iota(x.s))))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(not[and[not[nand[green,and[and[green,circle],blue]]],triangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:nand[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:green;4:circle;4:blue;4:triangle;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(x.s, and[size1,implies[or[apply(same_shape,x.o),size2],yellow]]), not[apply(size-leq,x.o)])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:implies[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2;4:yellow;4:not[%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x
'λx.apply(or[apply(same_color,iota(x.s)),size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size2;1:%s.o;2:x
'λx.apply(and[blue,size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[blue,size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:size1;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(x.s), filter(x.s, apply(same_color,x.o)))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(filter(x.s, triangle), triangle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:triangle;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, size3), blue)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue
'λx.forall(size1,filter(x.s, or[blue,yellow]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:yellow
'λx.apply(and[rectangle,and[not[not[and[size1,and[size1,green]]]],circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:not[%s];4:not[%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:size1;4:green;4:circle;1:%s.o;2:x
'λx.apply(not[circle],iota(filter(x.s, not[circle])))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.empty(filter(x.s, yellow))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(triangle,iota(filter(x.s, iff[size3,size1])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size3;4:size1
'λx.apply(triangle,iota(filter(x.s, and[size1,triangle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:triangle
'λx.apply(not[size3],x.o)'	0:apply(%s,%s);4:not[%s];4:size3;1:%s.o;2:x
'λx.apply(not[size1],x.o)'	0:apply(%s,%s);4:not[%s];4:size1;1:%s.o;2:x
'λx.apply(not[size2],x.o)'	0:apply(%s,%s);4:not[%s];4:size2;1:%s.o;2:x
'λx.apply(and[nor[or[size1,circle],blue],or[size3,size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:size1;4:circle;4:blue;4:or[%s,%s];4:size3;4:size2;1:%s.o;2:x
'λx.forall(iff[and[green,not[not[not[green]]]],size1],filter(filter(x.s, not[size3]), nor[yellow,apply(same_size,iota(x.s))]))'	0:forall(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:green;4:not[%s];4:not[%s];4:not[%s];4:green;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;4:nor[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(x.s, and[yellow,size3])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size3
'λx.contains(x.o, filter(filter(x.s, apply(size-geq,iota(x.s))), circle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:circle
'λx.contains(iota(filter(filter(x.s, not[or[yellow,and[size1,and[blue,size1]]]]), and[blue,apply(same_size,x.o)])), filter(filter(x.s, and[size1,nor[size2,nand[and[circle,or[blue,blue]],apply(size-geq,x.o)]]]), not[size1]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:yellow;4:and[%s,%s];4:size1;4:and[%s,%s];4:blue;4:size1;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:nor[%s,%s];4:size2;4:nand[%s,%s];4:and[%s,%s];4:circle;4:or[%s,%s];4:blue;4:blue;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:not[%s];4:size1
'λx.apply(implies[green,size2],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:green;4:size2;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(x.s, triangle), blue)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue
'λx.apply(size3,iota(filter(filter(x.s, triangle), blue)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue
'λx.apply(size2,iota(filter(filter(x.s, triangle), blue)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue
'λx.apply(yellow,x.o)'	0:apply(%s,%s);4:yellow;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, not[circle]), yellow))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:yellow
'λx.apply(iff[not[not[size1]],and[size1,or[and[apply(same_shape,x.o),or[blue,nor[yellow,and[size2,and[green,triangle]]]]],yellow]]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:not[%s];4:not[%s];4:size1;4:and[%s,%s];4:size1;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:blue;4:nor[%s,%s];4:yellow;4:and[%s,%s];4:size2;4:and[%s,%s];4:green;4:triangle;4:yellow;1:%s.o;2:x
'λx.apply(nand[size3,circle],iota(filter(filter(filter(x.s, size2), or[size2,blue]), rectangle)))'	0:apply(%s,%s);4:nand[%s,%s];4:size3;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:size2;4:blue;4:rectangle
'λx.contains(x.o, filter(x.s, and[size3,apply(same_color,x.o)]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.empty(filter(x.s, apply(same_color,iota(x.s))))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.exists(and[circle,apply(same_shape,iota(filter(filter(x.s, size1), green)))], filter(x.s, not[green]))'	0:exists(%s, %s);4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green
'λx.apply(rectangle,iota(filter(filter(filter(x.s, and[blue,circle]), blue), and[rectangle,green])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:circle;4:blue;4:and[%s,%s];4:rectangle;4:green
'λx.exists(or[size2,size2], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:size2;4:size2;3:%s.s;2:x
'λx.apply(circle,iota(filter(x.s, iff[blue,green])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:blue;4:green
'λx.apply(blue,iota(filter(x.s, circle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.empty(filter(filter(filter(filter(filter(x.s, triangle), rectangle), size1), green), not[rectangle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle;4:size1;4:green;4:not[%s];4:rectangle
'λx.apply(triangle,iota(filter(filter(x.s, not[circle]), apply(same_color,x.o))))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(x.s, size3), circle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle
'λx.contains(iota(x.s), filter(filter(x.s, size2), circle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle
'λx.forall(implies[nor[or[apply(same_size,iota(x.s)),apply(same_size,iota(x.s))],not[or[circle,blue]]],and[iff[size1,apply(same_shape,x.o)],size3]],filter(filter(x.s, nor[rectangle,and[blue,rectangle]]), size1))'	0:forall(%s,%s);4:implies[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:circle;4:blue;4:and[%s,%s];4:iff[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:rectangle;4:and[%s,%s];4:blue;4:rectangle;4:size1
'λx.apply(not[and[blue,size1]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:blue;4:size1;1:%s.o;2:x
'λx.apply(not[and[blue,size3]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:blue;4:size3;1:%s.o;2:x
'λx.apply(iff[and[green,implies[rectangle,or[and[green,size3],not[and[and[or[triangle,not[circle]],yellow],blue]]]]],nor[rectangle,size3]],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:green;4:implies[%s,%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:green;4:size3;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:triangle;4:not[%s];4:circle;4:yellow;4:blue;4:nor[%s,%s];4:rectangle;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(nand[nor[size2,yellow],circle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:nor[%s,%s];4:size2;4:yellow;4:circle;1:%s.o;2:x
'λx.apply(apply(same_color,x.o),iota(filter(filter(filter(x.s, size2), size3), green)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3;4:green
'λx.apply(nand[size3,blue],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:nand[%s,%s];4:size3;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.exists(blue, filter(x.s, yellow))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(or[and[apply(same_shape,x.o),blue],and[size3,not[size2]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue;4:and[%s,%s];4:size3;4:not[%s];4:size2;1:%s.o;2:x
'λx.apply(not[apply(same_shape,iota(filter(filter(x.s, yellow), size2)))],iota(filter(filter(x.s, size1), and[size2,or[green,yellow]])))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:size2;4:or[%s,%s];4:green;4:yellow
'λx.apply(iff[yellow,nor[circle,or[blue,size3]]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:yellow;4:nor[%s,%s];4:circle;4:or[%s,%s];4:blue;4:size3;1:%s.o;2:x
'λx.apply(and[yellow,yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:yellow;1:%s.o;2:x
'λx.apply(not[implies[yellow,and[circle,rectangle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:implies[%s,%s];4:yellow;4:and[%s,%s];4:circle;4:rectangle;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, size3), size2), and[circle,apply(same_shape,iota(filter(filter(x.s, size2), or[triangle,not[green]])))]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:triangle;4:not[%s];4:green
'λx.apply(and[and[nor[and[nor[green,or[size2,apply(same_shape,iota(filter(x.s, size3)))]],size1],size1],blue],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:green;4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size1;4:size1;4:blue;4:green;1:%s.o;2:x
'λx.apply(apply(size-gt,iota(filter(x.s, and[apply(same_color,iota(filter(filter(x.s, and[apply(same_size,x.o),not[rectangle]]), size2))),yellow]))),iota(filter(filter(x.s, size2), triangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:not[%s];4:rectangle;4:size2;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:triangle
'λx.apply(triangle,iota(filter(x.s, and[size1,yellow])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:yellow
'λx.forall(triangle,filter(filter(filter(x.s, size2), size1), size3))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1;4:size3
'λx.apply(and[not[green],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:green;4:size2;1:%s.o;2:x
'λx.empty(filter(x.s, circle))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(implies[size1,apply(same_size,iota(x.s))],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(x.s, and[yellow,green])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:green
'λx.apply(blue,iota(filter(filter(filter(filter(x.s, green), not[and[apply(same_size,iota(filter(x.s, not[blue]))),rectangle]]), circle), blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:rectangle;4:circle;4:blue
'λx.apply(not[circle],iota(filter(filter(filter(x.s, yellow), apply(same_color,x.o)), size1)))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1
'λx.exists(nand[and[rectangle,not[iff[and[apply(same_shape,iota(x.s)),size3],rectangle]]],not[and[size3,size1]]], filter(filter(x.s, size2), apply(same_shape,x.o)))'	0:exists(%s, %s);4:nand[%s,%s];4:and[%s,%s];4:rectangle;4:not[%s];4:iff[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size3;4:rectangle;4:not[%s];4:and[%s,%s];4:size3;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(and[apply(same_size,x.o),or[circle,and[size1,green]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:circle;4:and[%s,%s];4:size1;4:green;1:%s.o;2:x
'λx.exists(circle, filter(x.s, not[and[triangle,rectangle]]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:triangle;4:rectangle
'λx.apply(triangle,iota(filter(filter(x.s, triangle), rectangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle
'λx.apply(or[and[nand[apply(same_shape,iota(x.s)),not[blue]],circle],and[and[and[triangle,blue],rectangle],rectangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:not[%s];4:blue;4:circle;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:blue;4:rectangle;4:rectangle;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(x.s, size1), blue)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue
'λx.apply(or[yellow,or[iff[blue,green],rectangle]],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:or[%s,%s];4:iff[%s,%s];4:blue;4:green;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(not[and[and[and[circle,and[circle,circle]],nand[and[size3,size1],apply(same_color,iota(x.s))]],size3]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:circle;4:circle;4:nand[%s,%s];4:and[%s,%s];4:size3;4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size3;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(filter(filter(x.s, size3), circle), triangle), and[size3,yellow])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle;4:triangle;4:and[%s,%s];4:size3;4:yellow
'λx.apply(nand[triangle,implies[blue,blue]],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:implies[%s,%s];4:blue;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.contains(iota(x.s), filter(filter(filter(x.s, blue), blue), size2))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue;4:size2
'λx.apply(not[and[apply(same_color,x.o),yellow]],iota(filter(filter(filter(filter(x.s, size1), size2), triangle), circle)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2;4:triangle;4:circle
'λx.apply(apply(size-leq,iota(filter(x.s, and[not[yellow],size3]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:yellow;4:size3;1:%s.o;2:x
'λx.apply(size3,iota(filter(x.s, and[blue,nand[size1,size3]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:nand[%s,%s];4:size1;4:size3
'λx.forall(yellow,filter(filter(x.s, size1), apply(same_color,iota(x.s))))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_color,iota(x.s)),iota(filter(filter(x.s, size2), rectangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle
'λx.apply(and[apply(same_shape,x.o),rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle;1:%s.o;2:x
'λx.apply(and[implies[triangle,and[size1,not[or[and[size2,rectangle],apply(size-lt,iota(x.s))]]]],nor[yellow,rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:triangle;4:and[%s,%s];4:size1;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:size2;4:rectangle;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:nor[%s,%s];4:yellow;4:rectangle;1:%s.o;2:x
'λx.apply(nand[apply(same_size,x.o),nor[and[nand[apply(same_shape,x.o),or[blue,size2]],circle],triangle]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:nor[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:blue;4:size2;4:circle;4:triangle;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(filter(x.s, size3), blue), circle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue;4:circle
'λx.apply(and[apply(same_size,iota(filter(x.s, size2))),size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2;1:%s.o;2:x
'λx.exists(triangle, filter(filter(filter(x.s, size1), not[blue]), yellow))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:not[%s];4:blue;4:yellow
'λx.apply(and[and[and[rectangle,iff[apply(same_shape,iota(filter(x.s, apply(same_shape,iota(filter(filter(filter(x.s, and[and[or[circle,circle],size1],green]), blue), rectangle)))))),and[circle,size2]]],size2],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:circle;4:circle;4:size1;4:green;4:blue;4:rectangle;4:and[%s,%s];4:circle;4:size2;4:size2;4:green;1:%s.o;2:x
'λx.apply(and[size3,green],iota(filter(filter(filter(filter(x.s, and[size1,apply(same_color,iota(filter(x.s, size2)))]), or[and[circle,and[green,triangle]],size3]), size2), yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:green;4:triangle;4:size3;4:size2;4:yellow
'λx.apply(circle,iota(filter(x.s, and[rectangle,apply(same_shape,x.o)])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(x.s, green), or[not[implies[yellow,yellow]],not[blue]]), yellow), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:not[%s];4:implies[%s,%s];4:yellow;4:yellow;4:not[%s];4:blue;4:yellow;4:rectangle
'λx.exists(circle, filter(filter(x.s, size3), and[yellow,green]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:yellow;4:green
'λx.apply(or[or[rectangle,circle],and[apply(same_shape,iota(filter(filter(filter(x.s, circle), or[nor[yellow,or[or[size2,not[size3]],not[rectangle]]],nor[size2,nand[and[and[yellow,and[triangle,triangle]],green],green]]]), size2))),and[green,iff[yellow,circle]]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:rectangle;4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:nor[%s,%s];4:yellow;4:or[%s,%s];4:or[%s,%s];4:size2;4:not[%s];4:size3;4:not[%s];4:rectangle;4:nor[%s,%s];4:size2;4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:triangle;4:triangle;4:green;4:green;4:size2;4:and[%s,%s];4:green;4:iff[%s,%s];4:yellow;4:circle;1:%s.o;2:x
'λx.apply(implies[and[blue,rectangle],yellow],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:blue;4:rectangle;4:yellow;1:%s.o;2:x
'λx.forall(size3,filter(x.s, apply(same_color,x.o)))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.exists(green, filter(filter(filter(filter(filter(filter(filter(x.s, blue), and[rectangle,and[rectangle,blue]]), circle), or[size3,triangle]), apply(size-leq,iota(x.s))), rectangle), triangle))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:rectangle;4:blue;4:circle;4:or[%s,%s];4:size3;4:triangle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:rectangle;4:triangle
'λx.apply(apply(same_size,x.o),iota(filter(filter(x.s, rectangle), size2)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2
'λx.apply(and[blue,size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:size2;1:%s.o;2:x
'λx.apply(and[blue,size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:size1;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, blue), size3)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3
'λx.empty(filter(x.s, apply(size-geq,x.o)))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(x.s, yellow), green))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green
'λx.exists(green, filter(filter(filter(filter(filter(x.s, triangle), and[or[nor[size1,size1],and[apply(same_color,iota(filter(filter(x.s, size3), nor[blue,size2]))),blue]],implies[iff[or[circle,green],size3],yellow]]), yellow), green), circle))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:size1;4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:nor[%s,%s];4:blue;4:size2;4:blue;4:implies[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:circle;4:green;4:size3;4:yellow;4:yellow;4:green;4:circle
'λx.apply(size1,iota(filter(x.s, not[not[and[nand[size1,size1],and[or[iff[green,yellow],size2],circle]]]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:and[%s,%s];4:nand[%s,%s];4:size1;4:size1;4:and[%s,%s];4:or[%s,%s];4:iff[%s,%s];4:green;4:yellow;4:size2;4:circle
'λx.empty(filter(filter(filter(x.s, and[rectangle,triangle]), size1), or[not[not[apply(same_size,x.o)]],or[or[size3,and[green,blue]],green]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:triangle;4:size1;4:or[%s,%s];4:not[%s];4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:or[%s,%s];4:size3;4:and[%s,%s];4:green;4:blue;4:green
'λx.apply(circle,iota(filter(filter(filter(filter(filter(filter(filter(x.s, rectangle), rectangle), rectangle), green), size1), triangle), and[implies[green,rectangle],yellow])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle;4:rectangle;4:green;4:size1;4:triangle;4:and[%s,%s];4:implies[%s,%s];4:green;4:rectangle;4:yellow
'λx.exists(rectangle, filter(x.s, apply(same_size,x.o)))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(nor[not[apply(same_size,iota(x.s))],not[rectangle]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(filter(filter(x.s, and[size2,size3]), circle), blue), and[and[triangle,triangle],green])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:size3;4:circle;4:blue;4:and[%s,%s];4:and[%s,%s];4:triangle;4:triangle;4:green
'λx.contains(iota(x.s), filter(filter(x.s, and[and[or[triangle,and[circle,and[rectangle,triangle]]],yellow],and[apply(size-geq,iota(filter(x.s, size2))),green]]), yellow))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:triangle;4:and[%s,%s];4:circle;4:and[%s,%s];4:rectangle;4:triangle;4:yellow;4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green;4:yellow
'λx.apply(and[or[size2,and[green,triangle]],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size2;4:and[%s,%s];4:green;4:triangle;4:green;1:%s.o;2:x
'λx.apply(apply(size-geq,iota(filter(x.s, not[and[yellow,triangle]]))),iota(filter(filter(x.s, triangle), blue)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:yellow;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue
'λx.exists(implies[size1,nand[apply(same_shape,iota(filter(x.s, rectangle))),and[rectangle,and[circle,iff[yellow,size3]]]]], x.s)'	0:exists(%s, %s);4:implies[%s,%s];4:size1;4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:circle;4:iff[%s,%s];4:yellow;4:size3;3:%s.s;2:x
'λx.apply(implies[circle,triangle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:circle;4:triangle;1:%s.o;2:x
'λx.apply(or[rectangle,apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, and[not[nor[and[size1,not[size1]],iff[size2,and[apply(same_size,iota(filter(filter(x.s, triangle), size2))),size3]]]],blue]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:nor[%s,%s];4:and[%s,%s];4:size1;4:not[%s];4:size1;4:iff[%s,%s];4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2;4:size3;4:blue
'λx.apply(size2,iota(filter(x.s, and[rectangle,size1])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:size1
'λx.apply(iff[apply(size-gt,iota(filter(x.s, circle))),rectangle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle;1:%s.o;2:x
'λx.apply(apply(same_size,x.o),iota(filter(filter(x.s, apply(same_shape,x.o)), triangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle
'λx.apply(and[triangle,apply(same_size,iota(x.s))],iota(filter(filter(filter(filter(filter(filter(filter(x.s, and[and[apply(same_size,x.o),not[or[or[green,size2],blue]]],iff[size1,size1]]), iff[rectangle,size1]), apply(same_shape,x.o)), size1), and[apply(same_size,iota(x.s)),size1]), not[size3]), apply(same_color,x.o))))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:not[%s];4:or[%s,%s];4:or[%s,%s];4:green;4:size2;4:blue;4:iff[%s,%s];4:size1;4:size1;4:iff[%s,%s];4:rectangle;4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size1;4:not[%s];4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(and[and[rectangle,size2],triangle],iota(filter(filter(x.s, size3), size3)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size2;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3
'λx.apply(not[size3],iota(filter(x.s, not[yellow])))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow
'λx.apply(size2,iota(filter(filter(filter(x.s, size1), yellow), not[and[blue,size2]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow;4:not[%s];4:and[%s,%s];4:blue;4:size2
'λx.apply(and[not[not[blue]],circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:not[%s];4:blue;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size3,apply(size-geq,x.o)],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[yellow,triangle],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:yellow;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[size1,and[blue,size2]],iota(filter(x.s, and[not[rectangle],rectangle])))'	0:apply(%s,%s);4:implies[%s,%s];4:size1;4:and[%s,%s];4:blue;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:rectangle;4:rectangle
'λx.apply(not[not[apply(same_size,x.o)]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(not[apply(same_size,x.o)],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[and[apply(size-gt,x.o),blue],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:blue;4:size1;1:%s.o;2:x
'λx.forall(or[and[not[size2],and[circle,size2]],apply(same_shape,iota(x.s))],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:and[%s,%s];4:not[%s];4:size2;4:and[%s,%s];4:circle;4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, size2), size3))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3
'λx.contains(x.o, filter(filter(x.s, size3), size1))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size1
'λx.contains(x.o, filter(filter(x.s, size3), size2))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2
'λx.contains(x.o, filter(filter(x.s, size3), size3))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3
'λx.contains(x.o, filter(filter(x.s, size1), size1))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1
'λx.contains(x.o, filter(filter(x.s, size1), size2))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2
'λx.contains(x.o, filter(filter(x.s, size1), size3))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size3
'λx.apply(and[green,rectangle],iota(filter(filter(filter(x.s, blue), not[circle]), green)))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:circle;4:green
'λx.apply(and[apply(same_shape,x.o),circle],iota(filter(x.s, green)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[and[not[size1],apply(same_size,iota(x.s))],and[apply(same_size,iota(x.s)),and[and[circle,size1],green]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:circle;4:size1;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(x.s, blue), and[blue,apply(same_color,iota(filter(filter(x.s, size3), circle)))])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle
'λx.contains(iota(filter(filter(filter(x.s, triangle), size2), not[rectangle])), filter(x.s, and[size1,circle]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2;4:not[%s];4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:circle
'λx.apply(iff[size3,apply(same_shape,x.o)],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:iff[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(green,iota(filter(x.s, blue)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(or[apply(same_color,iota(x.s)),green],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(or[or[iff[and[size1,circle],rectangle],apply(same_shape,iota(filter(x.s, or[blue,apply(same_size,iota(filter(filter(x.s, size2), size1)))])))],size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:size1;4:circle;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1;4:size2;1:%s.o;2:x
'λx.exists(triangle, filter(x.s, or[green,and[not[rectangle],yellow]]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:and[%s,%s];4:not[%s];4:rectangle;4:yellow
'λx.exists(iff[circle,apply(same_size,iota(filter(filter(x.s, and[apply(same_size,x.o),triangle]), not[and[size2,triangle]])))], x.s)'	0:exists(%s, %s);4:iff[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle;4:not[%s];4:and[%s,%s];4:size2;4:triangle;3:%s.s;2:x
'λx.apply(or[circle,not[yellow]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:not[%s];4:yellow;1:%s.o;2:x
'λx.apply(nor[not[green],rectangle],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:nor[%s,%s];4:not[%s];4:green;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(apply(same_color,iota(filter(x.s, size1))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;1:%s.o;2:x
'λx.exists(and[not[size1],not[yellow]], filter(filter(filter(x.s, size2), apply(same_size,x.o)), size1))'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:size1;4:not[%s];4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1
'λx.exists(not[green], x.s)'	0:exists(%s, %s);4:not[%s];4:green;3:%s.s;2:x
'λx.apply(apply(same_color,iota(filter(filter(filter(x.s, triangle), and[size2,and[size3,apply(same_size,x.o)]]), iff[rectangle,triangle]))),iota(filter(x.s, size1)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:size2;4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:iff[%s,%s];4:rectangle;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(and[size2,size3],iota(filter(x.s, apply(same_size,x.o))))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(apply(same_color,iota(filter(filter(x.s, iff[rectangle,size1]), or[triangle,size3]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:rectangle;4:size1;4:or[%s,%s];4:triangle;4:size3;1:%s.o;2:x
'λx.apply(and[nand[apply(same_size,x.o),not[triangle]],apply(size-gt,iota(x.s))],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:not[%s];4:triangle;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(not[not[circle]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[and[green,apply(same_size,iota(x.s))]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(and[not[triangle],apply(same_color,x.o)],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.exists(circle, filter(x.s, blue))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(nand[and[size1,implies[apply(same_color,iota(filter(x.s, apply(same_shape,x.o)))),circle]],yellow],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:size1;4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(x.s, green), rectangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle
'λx.forall(apply(same_size,iota(filter(x.s, rectangle))),filter(x.s, size1))'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.contains(x.o, x.s)'	0:contains(%s, %s);1:%s.o;2:x;3:%s.s;2:x
'λx.apply(and[not[not[size1]],size1],iota(filter(x.s, and[or[size3,size1],blue])))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:not[%s];4:size1;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:size3;4:size1;4:blue
'λx.apply(nand[circle,green],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:circle;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(x.s, blue)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(size3,iota(filter(x.s, blue)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(size1,iota(filter(x.s, blue)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(not[or[size1,size3]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:size1;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(filter(x.s, size1), green), and[or[iff[triangle,and[not[nor[iff[not[and[not[not[not[rectangle]]],apply(same_color,x.o)]],yellow],not[triangle]]],or[and[apply(same_size,iota(x.s)),and[circle,and[rectangle,rectangle]]],or[size2,and[rectangle,triangle]]]]],green],green])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green;4:and[%s,%s];4:or[%s,%s];4:iff[%s,%s];4:triangle;4:and[%s,%s];4:not[%s];4:nor[%s,%s];4:iff[%s,%s];4:not[%s];4:and[%s,%s];4:not[%s];4:not[%s];4:not[%s];4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;4:not[%s];4:triangle;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:and[%s,%s];4:rectangle;4:rectangle;4:or[%s,%s];4:size2;4:and[%s,%s];4:rectangle;4:triangle;4:green;4:green
'λx.forall(size2,filter(x.s, apply(size-leq,iota(filter(filter(x.s, size3), green)))))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green
'λx.apply(green,iota(filter(x.s, nand[rectangle,circle])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:rectangle;4:circle
'λx.apply(nand[size2,implies[and[size3,size3],circle]],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:size2;4:implies[%s,%s];4:and[%s,%s];4:size3;4:size3;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[blue,and[or[size3,or[and[apply(same_size,iota(x.s)),not[and[apply(same_shape,x.o),and[rectangle,size1]]]],rectangle]],and[size1,not[size1]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:or[%s,%s];4:size3;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:rectangle;4:size1;4:rectangle;4:and[%s,%s];4:size1;4:not[%s];4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[blue,apply(same_size,iota(x.s))],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size2,rectangle],iota(filter(filter(x.s, yellow), or[nor[green,triangle],rectangle])))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:nor[%s,%s];4:green;4:triangle;4:rectangle
'λx.apply(and[or[not[green],implies[green,blue]],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:not[%s];4:green;4:implies[%s,%s];4:green;4:blue;4:triangle;1:%s.o;2:x
'λx.apply(or[nor[not[not[yellow]],apply(size-leq,iota(filter(filter(x.s, yellow), size3)))],circle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:nor[%s,%s];4:not[%s];4:not[%s];4:yellow;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size3;4:circle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(x.s, not[nand[rectangle,triangle]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:nand[%s,%s];4:rectangle;4:triangle
'λx.apply(size3,iota(filter(filter(filter(filter(x.s, nand[size2,size1]), green), nor[and[and[nand[circle,circle],green],rectangle],size2]), size2)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size2;4:size1;4:green;4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:circle;4:circle;4:green;4:rectangle;4:size2;4:size2
'λx.apply(and[apply(same_shape,x.o),not[circle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:circle;1:iota(%s);3:%s.s;2:x
'λx.exists(and[or[rectangle,blue],triangle], filter(x.s, not[size2]))'	0:exists(%s, %s);4:and[%s,%s];4:or[%s,%s];4:rectangle;4:blue;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2
'λx.empty(filter(filter(x.s, circle), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3
'λx.empty(filter(filter(x.s, circle), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size2
'λx.exists(yellow, filter(filter(filter(x.s, and[or[or[rectangle,circle],and[apply(same_shape,iota(filter(filter(filter(x.s, circle), or[nor[yellow,or[or[size2,or[and[and[blue,size1],nor[size1,blue]],blue]],not[rectangle]]],nor[size2,nand[and[and[yellow,and[triangle,triangle]],green],green]]]), size2))),size3]],green]), blue), size2))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:rectangle;4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:nor[%s,%s];4:yellow;4:or[%s,%s];4:or[%s,%s];4:size2;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:size1;4:nor[%s,%s];4:size1;4:blue;4:blue;4:not[%s];4:rectangle;4:nor[%s,%s];4:size2;4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:triangle;4:triangle;4:green;4:green;4:size2;4:size3;4:green;4:blue;4:size2
'λx.exists(or[circle,size3], filter(x.s, apply(same_color,iota(filter(x.s, circle)))))'	0:exists(%s, %s);4:or[%s,%s];4:circle;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.empty(filter(filter(filter(x.s, triangle), rectangle), apply(size-leq,iota(filter(filter(x.s, iff[apply(size-geq,x.o),nand[size2,yellow]]), size3)))))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:nand[%s,%s];4:size2;4:yellow;4:size3
'λx.forall(triangle,filter(filter(x.s, size3), triangle))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle
'λx.contains(x.o, filter(x.s, and[size3,and[and[green,and[not[rectangle],green]],green]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:not[%s];4:rectangle;4:green;4:green
'λx.apply(green,iota(filter(filter(filter(filter(x.s, and[or[blue,green],triangle]), blue), or[green,yellow]), apply(same_size,iota(x.s)))))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:blue;4:green;4:triangle;4:blue;4:or[%s,%s];4:green;4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(filter(x.s, or[and[or[size2,rectangle],size1],blue]), and[green,green]), not[size3])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size2;4:rectangle;4:size1;4:blue;4:and[%s,%s];4:green;4:green;4:not[%s];4:size3
'λx.empty(filter(filter(x.s, and[size3,size2]), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:size2;4:yellow
'λx.apply(size1,iota(filter(filter(filter(x.s, size3), rectangle), blue)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle;4:blue
'λx.forall(or[circle,size1],filter(x.s, size2))'	0:forall(%s,%s);4:or[%s,%s];4:circle;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(size1,iota(filter(x.s, not[or[rectangle,blue]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:rectangle;4:blue
'λx.apply(and[size2,or[blue,green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:or[%s,%s];4:blue;4:green;1:%s.o;2:x
'λx.apply(implies[triangle,triangle],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:triangle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[rectangle,and[yellow,size2]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:yellow;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size2,nand[yellow,size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:nand[%s,%s];4:yellow;4:size2;1:%s.o;2:x
'λx.exists(or[size3,size3], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:size3;4:size3;3:%s.s;2:x
'λx.apply(and[size2,not[rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.apply(implies[size1,and[rectangle,blue]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:size1;4:and[%s,%s];4:rectangle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.forall(not[yellow],filter(x.s, size3))'	0:forall(%s,%s);4:not[%s];4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(or[green,circle],iota(filter(x.s, and[green,nand[size2,triangle]])))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:nand[%s,%s];4:size2;4:triangle
'λx.forall(and[triangle,triangle],filter(x.s, yellow))'	0:forall(%s,%s);4:and[%s,%s];4:triangle;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(implies[blue,size3],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:blue;4:size3;1:%s.o;2:x
'λx.apply(and[or[apply(same_size,x.o),circle],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;4:rectangle;1:%s.o;2:x
'λx.apply(apply(same_color,x.o),iota(filter(filter(filter(filter(x.s, and[or[triangle,size3],blue]), or[green,size1]), apply(same_shape,x.o)), and[size2,circle])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:triangle;4:size3;4:blue;4:or[%s,%s];4:green;4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:size2;4:circle
'λx.apply(size2,iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(size3,iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(size1,iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(rectangle,iota(filter(filter(x.s, triangle), and[iff[yellow,size2],size1])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:iff[%s,%s];4:yellow;4:size2;4:size1
'λx.exists(triangle, filter(x.s, apply(same_shape,iota(filter(filter(x.s, yellow), not[apply(size-leq,iota(filter(x.s, blue)))])))))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(rectangle,iota(filter(x.s, iff[blue,size2])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:blue;4:size2
'λx.apply(blue,iota(filter(filter(x.s, size1), and[not[size3],yellow])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:not[%s];4:size3;4:yellow
'λx.apply(size1,iota(filter(filter(x.s, and[or[size2,size3],green]), not[blue])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:size2;4:size3;4:green;4:not[%s];4:blue
'λx.contains(iota(filter(filter(x.s, rectangle), or[not[circle],size2])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:or[%s,%s];4:not[%s];4:circle;4:size2;3:%s.s;2:x
'λx.forall(size3,filter(filter(filter(filter(x.s, nor[and[apply(same_color,x.o),apply(same_size,iota(x.s))],and[triangle,and[size2,or[or[and[size1,size2],green],size3]]]]), size2), nor[size1,and[green,apply(same_size,iota(x.s))]]), and[blue,apply(same_color,x.o)]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:and[%s,%s];4:size2;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size1;4:size2;4:green;4:size3;4:size2;4:nor[%s,%s];4:size1;4:and[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(not[green],iota(filter(filter(x.s, and[size1,rectangle]), size1)))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:rectangle;4:size1
'λx.forall(size1,filter(filter(filter(filter(filter(filter(filter(x.s, blue), not[rectangle]), yellow), or[green,not[and[rectangle,size3]]]), blue), apply(same_shape,iota(x.s))), not[and[not[blue],triangle]]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:rectangle;4:yellow;4:or[%s,%s];4:green;4:not[%s];4:and[%s,%s];4:rectangle;4:size3;4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:not[%s];4:blue;4:triangle
'λx.apply(green,iota(filter(x.s, implies[and[nand[and[or[rectangle,rectangle],size3],and[green,or[circle,nand[and[size3,size1],size2]]]],yellow],rectangle])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:or[%s,%s];4:rectangle;4:rectangle;4:size3;4:and[%s,%s];4:green;4:or[%s,%s];4:circle;4:nand[%s,%s];4:and[%s,%s];4:size3;4:size1;4:size2;4:yellow;4:rectangle
'λx.apply(and[rectangle,blue],iota(filter(filter(x.s, size1), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue
'λx.apply(not[triangle],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(x.s, and[or[blue,rectangle],size3])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:blue;4:rectangle;4:size3
'λx.apply(and[size3,blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:blue;1:%s.o;2:x
'λx.apply(and[blue,not[or[and[nor[size1,not[triangle]],size3],and[or[green,nor[circle,apply(same_shape,iota(filter(filter(filter(filter(filter(filter(filter(x.s, triangle), size3), triangle), apply(size-leq,iota(filter(filter(x.s, size1), blue)))), size2), triangle), size1)))]],yellow]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:size1;4:not[%s];4:triangle;4:size3;4:and[%s,%s];4:or[%s,%s];4:green;4:nor[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3;4:triangle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue;4:size2;4:triangle;4:size1;4:yellow;1:%s.o;2:x
'λx.apply(and[green,circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:circle;1:%s.o;2:x
'λx.contains(iota(filter(x.s, not[rectangle])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;3:%s.s;2:x
'λx.apply(nor[size2,and[and[size3,circle],size2]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:size3;4:circle;4:size2;1:%s.o;2:x
'λx.apply(and[apply(size-gt,iota(filter(x.s, not[rectangle]))),and[blue,yellow]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;4:and[%s,%s];4:blue;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(or[not[apply(same_shape,x.o)],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue;1:%s.o;2:x
'λx.apply(apply(same_size,iota(x.s)),iota(filter(x.s, apply(same_shape,iota(filter(filter(filter(x.s, size1), size2), size3))))))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2;4:size3
'λx.contains(iota(filter(x.s, nor[blue,yellow])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:blue;4:yellow;3:%s.s;2:x
'λx.apply(not[and[size1,not[size2]]],iota(filter(x.s, nor[size2,size3])))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size1;4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size2;4:size3
'λx.contains(x.o, filter(filter(filter(x.s, circle), green), yellow))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green;4:yellow
'λx.apply(and[size1,blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:blue;1:%s.o;2:x
'λx.apply(and[size2,blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:blue;1:%s.o;2:x
'λx.apply(and[size3,and[blue,size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:blue;4:size2;1:%s.o;2:x
'λx.apply(or[not[size2],not[size2]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:size2;4:not[%s];4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[yellow,green],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:yellow;4:green;1:%s.o;2:x
'λx.apply(nor[triangle,and[size2,blue]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:triangle;4:and[%s,%s];4:size2;4:blue;1:%s.o;2:x
'λx.forall(blue,filter(x.s, circle))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.contains(x.o, filter(filter(filter(x.s, rectangle), size2), and[size2,size2]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2;4:and[%s,%s];4:size2;4:size2
'λx.apply(not[apply(size-lt,iota(filter(filter(filter(x.s, yellow), size2), not[green])))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2;4:not[%s];4:green;1:%s.o;2:x
'λx.exists(and[and[apply(size-leq,iota(x.s)),size1],or[apply(same_color,iota(x.s)),apply(same_shape,x.o)]], filter(filter(x.s, circle), rectangle))'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:size1;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle
'λx.apply(nor[and[size3,yellow],not[not[or[size3,size1]]]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:size3;4:yellow;4:not[%s];4:not[%s];4:or[%s,%s];4:size3;4:size1;1:%s.o;2:x
'λx.apply(and[and[circle,size2],not[blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:size2;4:not[%s];4:blue;1:%s.o;2:x
'λx.apply(and[apply(same_size,x.o),and[and[yellow,not[blue]],size2]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:and[%s,%s];4:yellow;4:not[%s];4:blue;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[size1,circle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:size1;4:circle;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, or[circle,triangle]), apply(same_size,x.o))))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(and[not[size2],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size2;4:blue;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(x.s, not[nand[triangle,rectangle]]), not[rectangle]), apply(size-leq,x.o))), filter(x.s, nand[not[and[apply(same_shape,x.o),yellow]],not[iff[green,or[rectangle,size2]]]]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:nand[%s,%s];4:triangle;4:rectangle;4:not[%s];4:rectangle;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow;4:not[%s];4:iff[%s,%s];4:green;4:or[%s,%s];4:rectangle;4:size2
'λx.forall(or[apply(same_size,iota(filter(filter(filter(x.s, and[triangle,size3]), circle), iff[and[apply(same_shape,iota(x.s)),blue],triangle]))),yellow],filter(x.s, size3))'	0:forall(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:size3;4:circle;4:iff[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:blue;4:triangle;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(iff[blue,and[size3,or[green,rectangle]]],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:blue;4:and[%s,%s];4:size3;4:or[%s,%s];4:green;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[blue,iff[size1,green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:iff[%s,%s];4:size1;4:green;1:%s.o;2:x
'λx.apply(and[size3,rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size2,rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[yellow,size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:size1;1:%s.o;2:x
'λx.apply(and[yellow,size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:size2;1:%s.o;2:x
'λx.apply(or[not[not[size1]],circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:not[%s];4:size1;4:circle;1:%s.o;2:x
'λx.apply(and[nor[apply(same_size,iota(x.s)),blue],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:blue;4:blue;1:%s.o;2:x
'λx.forall(and[rectangle,or[size1,and[iff[apply(same_shape,x.o),and[yellow,blue]],or[size2,rectangle]]]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:rectangle;4:or[%s,%s];4:size1;4:and[%s,%s];4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:yellow;4:blue;4:or[%s,%s];4:size2;4:rectangle;3:%s.s;2:x
'λx.apply(and[and[not[yellow],and[triangle,rectangle]],or[iff[apply(size-gt,x.o),blue],circle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:yellow;4:and[%s,%s];4:triangle;4:rectangle;4:or[%s,%s];4:iff[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:blue;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[size2,size1],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size2;4:size1;4:size1;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, nand[and[size1,circle],implies[green,nor[not[triangle],yellow]]]), not[blue])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:and[%s,%s];4:size1;4:circle;4:implies[%s,%s];4:green;4:nor[%s,%s];4:not[%s];4:triangle;4:yellow;4:not[%s];4:blue
'λx.empty(filter(filter(x.s, not[size2]), or[size1,rectangle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:or[%s,%s];4:size1;4:rectangle
'λx.apply(and[not[size1],and[and[apply(size-leq,iota(x.s)),blue],triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:blue;4:triangle;1:%s.o;2:x
'λx.forall(circle,filter(x.s, and[implies[or[nor[or[size1,blue],size1],nand[not[nand[yellow,size3]],iff[and[triangle,and[blue,apply(same_shape,x.o)]],and[apply(size-leq,iota(filter(x.s, size1))),rectangle]]]],not[triangle]],green]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:size1;4:blue;4:size1;4:nand[%s,%s];4:not[%s];4:nand[%s,%s];4:yellow;4:size3;4:iff[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle;4:not[%s];4:triangle;4:green
'λx.contains(iota(x.s), filter(x.s, and[size2,triangle]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:triangle
'λx.empty(filter(filter(x.s, size3), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle
'λx.apply(iff[and[size3,or[size3,size3]],rectangle],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:size3;4:or[%s,%s];4:size3;4:size3;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.contains(x.o, filter(filter(x.s, size2), nor[size2,apply(same_color,x.o)]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:nor[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.forall(not[green],filter(filter(x.s, size2), iff[green,and[apply(same_color,iota(filter(filter(x.s, size2), circle))),and[triangle,and[or[circle,rectangle],yellow]]]]))'	0:forall(%s,%s);4:not[%s];4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:iff[%s,%s];4:green;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle;4:and[%s,%s];4:triangle;4:and[%s,%s];4:or[%s,%s];4:circle;4:rectangle;4:yellow
'λx.exists(size1, filter(filter(x.s, blue), blue))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue
'λx.apply(not[rectangle],iota(filter(x.s, apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(x.s, apply(size-lt,x.o))))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, and[triangle,and[and[blue,apply(same_shape,iota(x.s))],circle]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:and[%s,%s];4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle
'λx.apply(size1,iota(filter(x.s, apply(size-gt,x.o))))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.exists(or[or[nor[green,yellow],apply(same_shape,x.o)],triangle], filter(x.s, blue))'	0:exists(%s, %s);4:or[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:green;4:yellow;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(nand[or[apply(same_shape,iota(x.s)),and[yellow,size2]],blue],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size2;4:blue;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(x.s, size2), or[triangle,blue])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:triangle;4:blue
'λx.exists(iff[apply(same_color,x.o),green], filter(filter(x.s, size2), implies[yellow,green]))'	0:exists(%s, %s);4:iff[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:implies[%s,%s];4:yellow;4:green
'λx.apply(apply(same_shape,iota(filter(filter(filter(x.s, or[or[and[size2,or[triangle,not[or[not[green],not[blue]]]]],rectangle],not[rectangle]]), triangle), or[yellow,not[or[iff[triangle,green],implies[green,or[circle,green]]]]]))),iota(filter(x.s, and[or[rectangle,and[rectangle,size1]],and[rectangle,size1]])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size2;4:or[%s,%s];4:triangle;4:not[%s];4:or[%s,%s];4:not[%s];4:green;4:not[%s];4:blue;4:rectangle;4:not[%s];4:rectangle;4:triangle;4:or[%s,%s];4:yellow;4:not[%s];4:or[%s,%s];4:iff[%s,%s];4:triangle;4:green;4:implies[%s,%s];4:green;4:or[%s,%s];4:circle;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:and[%s,%s];4:rectangle;4:size1;4:and[%s,%s];4:rectangle;4:size1
'λx.apply(and[rectangle,or[triangle,green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:or[%s,%s];4:triangle;4:green;1:%s.o;2:x
'λx.contains(iota(x.s), filter(x.s, or[size2,and[or[and[or[size3,size3],and[size2,yellow]],size2],blue]]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size3;4:size3;4:and[%s,%s];4:size2;4:yellow;4:size2;4:blue
'λx.contains(x.o, filter(filter(filter(filter(x.s, size1), and[and[size2,apply(same_color,x.o)],triangle]), rectangle), not[size3]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;4:rectangle;4:not[%s];4:size3
'λx.apply(implies[blue,nor[triangle,size1]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:blue;4:nor[%s,%s];4:triangle;4:size1;1:%s.o;2:x
'λx.apply(and[and[blue,and[blue,blue]],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:blue;4:blue;4:green;1:%s.o;2:x
'λx.apply(or[not[rectangle],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:rectangle;4:blue;1:%s.o;2:x
'λx.exists(not[rectangle], filter(x.s, yellow))'	0:exists(%s, %s);4:not[%s];4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.empty(filter(filter(x.s, apply(size-lt,iota(filter(x.s, rectangle)))), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle
'λx.contains(x.o, filter(filter(x.s, not[rectangle]), implies[or[and[size1,not[and[and[circle,size1],apply(size-geq,iota(x.s))]]],nand[triangle,yellow]],size3]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;4:implies[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size1;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:size1;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:nand[%s,%s];4:triangle;4:yellow;4:size3
'λx.apply(and[size1,not[triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:not[%s];4:triangle;1:%s.o;2:x
'λx.apply(implies[apply(size-lt,x.o),and[or[iff[circle,blue],not[size1]],and[rectangle,apply(same_size,x.o)]]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:and[%s,%s];4:or[%s,%s];4:iff[%s,%s];4:circle;4:blue;4:not[%s];4:size1;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(x.s, circle), green)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green
'λx.apply(apply(same_color,iota(filter(filter(x.s, size3), iff[size3,or[circle,circle]]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:iff[%s,%s];4:size3;4:or[%s,%s];4:circle;4:circle;1:%s.o;2:x
'λx.exists(and[triangle,not[and[not[size3],size2]]], filter(x.s, blue))'	0:exists(%s, %s);4:and[%s,%s];4:triangle;4:not[%s];4:and[%s,%s];4:not[%s];4:size3;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(implies[rectangle,size2],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:rectangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[size2,and[circle,and[apply(same_shape,iota(x.s)),green]]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size2;4:and[%s,%s];4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:green;1:%s.o;2:x
'λx.apply(or[green,nor[size2,and[implies[circle,yellow],not[blue]]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:nor[%s,%s];4:size2;4:and[%s,%s];4:implies[%s,%s];4:circle;4:yellow;4:not[%s];4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(and[yellow,size2],iota(filter(filter(x.s, size2), implies[size2,apply(size-gt,iota(filter(filter(filter(x.s, green), apply(same_color,x.o)), size3)))])))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:implies[%s,%s];4:size2;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3
'λx.apply(rectangle,iota(filter(filter(x.s, and[nor[triangle,rectangle],apply(same_size,iota(filter(filter(filter(filter(x.s, size3), size1), not[and[or[or[nor[triangle,rectangle],nor[and[apply(same_color,iota(filter(filter(x.s, size3), not[rectangle]))),blue],apply(same_color,x.o)]],not[apply(size-lt,x.o)]],green]]), or[rectangle,and[yellow,and[rectangle,yellow]]])))]), and[and[size3,blue],rectangle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:triangle;4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size1;4:not[%s];4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:triangle;4:rectangle;4:nor[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:rectangle;4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:green;4:or[%s,%s];4:rectangle;4:and[%s,%s];4:yellow;4:and[%s,%s];4:rectangle;4:yellow;4:and[%s,%s];4:and[%s,%s];4:size3;4:blue;4:rectangle
'λx.apply(apply(same_color,iota(x.s)),iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(green,iota(filter(x.s, and[nor[apply(size-gt,x.o),not[not[size3]]],apply(same_size,x.o)])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:not[%s];4:not[%s];4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.exists(and[circle,size1], filter(x.s, green))'	0:exists(%s, %s);4:and[%s,%s];4:circle;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(size3,iota(filter(filter(x.s, apply(same_size,iota(x.s))), size1)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size1
'λx.apply(not[and[size2,circle]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size2;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(x.s, nand[rectangle,green])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:rectangle;4:green
'λx.exists(implies[circle,or[yellow,rectangle]], filter(filter(x.s, triangle), apply(same_color,x.o)))'	0:exists(%s, %s);4:implies[%s,%s];4:circle;4:or[%s,%s];4:yellow;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(triangle,iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.contains(x.o, filter(filter(x.s, and[apply(same_size,iota(x.s)),circle]), circle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:circle;4:circle
'λx.forall(blue,filter(x.s, yellow))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.exists(and[apply(same_shape,iota(x.s)),blue], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:blue;3:%s.s;2:x
'λx.apply(and[apply(same_shape,x.o),apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.exists(not[size1], filter(x.s, yellow))'	0:exists(%s, %s);4:not[%s];4:size1;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.exists(size1, filter(filter(x.s, blue), apply(size-gt,iota(filter(filter(x.s, size2), and[circle,and[blue,circle]])))))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:circle;4:and[%s,%s];4:blue;4:circle
'λx.contains(x.o, filter(x.s, and[nand[green,green],size3]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nand[%s,%s];4:green;4:green;4:size3
'λx.empty(filter(x.s, not[triangle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.apply(iff[rectangle,rectangle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:rectangle;4:rectangle;1:%s.o;2:x
'λx.contains(iota(filter(x.s, or[circle,apply(size-geq,x.o)])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(or[size2,and[and[blue,and[and[circle,and[size1,apply(same_color,x.o)]],nand[apply(size-lt,iota(filter(x.s, green))),size2]]],nor[triangle,blue]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:nand[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size2;4:nor[%s,%s];4:triangle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, not[size2]), or[blue,blue]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:or[%s,%s];4:blue;4:blue
'λx.apply(or[iff[triangle,size3],or[size1,green]],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:or[%s,%s];4:iff[%s,%s];4:triangle;4:size3;4:or[%s,%s];4:size1;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(size3,iota(filter(filter(filter(filter(filter(x.s, size2), green), blue), or[apply(size-lt,x.o),and[green,and[rectangle,not[rectangle]]]]), nand[rectangle,circle])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green;4:blue;4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:and[%s,%s];4:green;4:and[%s,%s];4:rectangle;4:not[%s];4:rectangle;4:nand[%s,%s];4:rectangle;4:circle
'λx.apply(nand[circle,and[size3,green]],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:nand[%s,%s];4:circle;4:and[%s,%s];4:size3;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(yellow,iota(filter(filter(x.s, yellow), or[not[yellow],and[nor[iff[circle,triangle],rectangle],apply(same_color,iota(x.s))]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:not[%s];4:yellow;4:and[%s,%s];4:nor[%s,%s];4:iff[%s,%s];4:circle;4:triangle;4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.exists(green, filter(filter(filter(filter(filter(x.s, apply(size-gt,iota(x.s))), size3), circle), and[not[rectangle],rectangle]), circle))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:size3;4:circle;4:and[%s,%s];4:not[%s];4:rectangle;4:rectangle;4:circle
'λx.exists(rectangle, filter(filter(filter(x.s, yellow), circle), blue))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle;4:blue
'λx.forall(and[circle,not[blue]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:circle;4:not[%s];4:blue;3:%s.s;2:x
'λx.apply(green,iota(filter(filter(x.s, and[triangle,size3]), yellow)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:size3;4:yellow
'λx.apply(not[not[blue]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.contains(x.o, filter(x.s, size3))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.contains(x.o, filter(x.s, size2))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.contains(x.o, filter(x.s, size1))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.contains(x.o, filter(x.s, green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(blue,iota(filter(x.s, or[blue,apply(same_shape,x.o)])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.contains(iota(x.s), filter(x.s, and[green,or[yellow,size1]]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:or[%s,%s];4:yellow;4:size1
'λx.apply(and[not[triangle],green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:triangle;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[size2,size1],iota(filter(filter(filter(filter(x.s, triangle), not[not[iff[circle,yellow]]]), size3), triangle)))'	0:apply(%s,%s);4:nor[%s,%s];4:size2;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:not[%s];4:not[%s];4:iff[%s,%s];4:circle;4:yellow;4:size3;4:triangle
'λx.contains(iota(x.s), filter(filter(x.s, size3), yellow))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow
'λx.apply(nand[apply(same_color,x.o),yellow],iota(filter(filter(x.s, and[apply(same_size,x.o),or[not[rectangle],size1]]), and[apply(same_size,iota(filter(filter(filter(filter(filter(filter(x.s, size2), iff[green,yellow]), yellow), and[size3,blue]), apply(same_size,iota(x.s))), circle))),triangle])))'	0:apply(%s,%s);4:nand[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:not[%s];4:rectangle;4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:iff[%s,%s];4:green;4:yellow;4:yellow;4:and[%s,%s];4:size3;4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:circle;4:triangle
'λx.contains(iota(filter(x.s, green)), filter(filter(x.s, apply(same_shape,x.o)), nand[apply(same_color,x.o),size2]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:nand[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size2
'λx.forall(not[rectangle],filter(x.s, yellow))'	0:forall(%s,%s);4:not[%s];4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(nand[size2,circle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size2;4:circle;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(x.s, not[size3]), circle), apply(size-leq,iota(filter(x.s, apply(same_size,iota(filter(filter(x.s, apply(size-gt,iota(x.s))), blue))))))), apply(same_color,x.o)))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;4:circle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, blue), circle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle
'λx.apply(or[or[green,size3],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:green;4:size3;4:blue;1:%s.o;2:x
'λx.apply(size2,iota(filter(x.s, nor[blue,size1])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:blue;4:size1
'λx.apply(and[yellow,size2],iota(filter(x.s, and[size1,size2])))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size2
'λx.apply(rectangle,iota(filter(filter(x.s, not[rectangle]), size1)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;4:size1
'λx.apply(blue,iota(filter(x.s, and[triangle,yellow])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:yellow
'λx.contains(x.o, filter(filter(filter(x.s, and[yellow,green]), size3), or[size3,yellow]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:green;4:size3;4:or[%s,%s];4:size3;4:yellow
'λx.apply(and[or[not[circle],not[green]],green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:not[%s];4:circle;4:not[%s];4:green;4:green;1:iota(%s);3:%s.s;2:x
'λx.forall(size1,filter(filter(x.s, blue), green))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green
'λx.forall(size3,filter(filter(x.s, blue), green))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green
'λx.forall(size2,filter(filter(x.s, blue), size1))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1
'λx.apply(triangle,iota(filter(filter(x.s, triangle), and[size3,not[not[size1]]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:size3;4:not[%s];4:not[%s];4:size1
'λx.contains(iota(filter(filter(filter(filter(x.s, rectangle), and[size1,size2]), circle), circle)), filter(filter(x.s, size3), green))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:size1;4:size2;4:circle;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green
'λx.apply(nor[size3,circle],iota(filter(filter(filter(x.s, size1), yellow), apply(same_color,x.o))))'	0:apply(%s,%s);4:nor[%s,%s];4:size3;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(nor[not[green],and[or[triangle,and[apply(same_shape,iota(x.s)),or[circle,size3]]],and[blue,triangle]]],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:not[%s];4:green;4:and[%s,%s];4:or[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:size3;4:and[%s,%s];4:blue;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(x.s, yellow), and[rectangle,size2])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:rectangle;4:size2
'λx.apply(not[or[triangle,size3]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:triangle;4:size3;1:%s.o;2:x
'λx.forall(iff[size2,or[apply(same_size,x.o),and[not[apply(same_color,x.o)],size3]]],filter(x.s, size2))'	0:forall(%s,%s);4:iff[%s,%s];4:size2;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.empty(filter(filter(filter(filter(filter(filter(x.s, blue), green), and[rectangle,not[and[rectangle,blue]]]), size3), blue), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green;4:and[%s,%s];4:rectangle;4:not[%s];4:and[%s,%s];4:rectangle;4:blue;4:size3;4:blue;4:yellow
'λx.apply(iff[circle,apply(same_size,x.o)],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:iff[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(or[size3,triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:triangle;1:%s.o;2:x
'λx.apply(or[size1,triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:triangle;1:%s.o;2:x
'λx.apply(iff[or[rectangle,triangle],and[green,size3]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:or[%s,%s];4:rectangle;4:triangle;4:and[%s,%s];4:green;4:size3;1:%s.o;2:x
'λx.exists(triangle, filter(x.s, not[not[and[and[yellow,rectangle],size2]]]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:rectangle;4:size2
'λx.apply(circle,iota(filter(filter(x.s, size1), yellow)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow
'λx.apply(nand[apply(same_shape,x.o),green],iota(filter(filter(x.s, yellow), and[rectangle,size3])))'	0:apply(%s,%s);4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:rectangle;4:size3
'λx.empty(filter(filter(filter(x.s, or[size1,yellow]), not[blue]), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:yellow;4:not[%s];4:blue;4:size3
'λx.apply(and[apply(same_shape,x.o),rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(x.s, rectangle), apply(same_size,iota(x.s)))))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[circle,rectangle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:circle;4:rectangle;1:%s.o;2:x
'λx.apply(and[apply(same_size,x.o),and[triangle,and[apply(size-lt,x.o),iff[blue,yellow]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:iff[%s,%s];4:blue;4:yellow;1:%s.o;2:x
'λx.exists(nand[size1,or[green,and[size3,green]]], x.s)'	0:exists(%s, %s);4:nand[%s,%s];4:size1;4:or[%s,%s];4:green;4:and[%s,%s];4:size3;4:green;3:%s.s;2:x
'λx.contains(iota(filter(x.s, triangle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;3:%s.s;2:x
'λx.apply(implies[rectangle,apply(same_size,iota(filter(x.s, yellow)))],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:implies[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.contains(iota(x.s), filter(filter(x.s, circle), triangle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle
'λx.apply(not[or[size1,size3]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:size1;4:size3;1:%s.o;2:x
'λx.apply(and[and[and[triangle,triangle],green],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:triangle;4:green;4:green;1:%s.o;2:x
'λx.apply(or[and[rectangle,not[triangle]],triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:rectangle;4:not[%s];4:triangle;4:triangle;1:%s.o;2:x
'λx.empty(filter(x.s, apply(same_shape,iota(filter(filter(filter(filter(filter(x.s, and[rectangle,blue]), nand[green,size2]), size1), yellow), triangle)))))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:blue;4:nand[%s,%s];4:green;4:size2;4:size1;4:yellow;4:triangle
'λx.apply(and[yellow,and[size2,green]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:and[%s,%s];4:size2;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(x.s, nand[size2,and[green,yellow]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size2;4:and[%s,%s];4:green;4:yellow
'λx.apply(or[rectangle,or[size2,apply(same_shape,x.o)]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.forall(or[rectangle,and[rectangle,size3]],filter(filter(x.s, circle), and[rectangle,yellow]))'	0:forall(%s,%s);4:or[%s,%s];4:rectangle;4:and[%s,%s];4:rectangle;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:rectangle;4:yellow
'λx.exists(or[yellow,and[apply(same_shape,iota(x.s)),size1]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:yellow;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size1;3:%s.s;2:x
'λx.apply(and[and[circle,and[not[not[green]],yellow]],size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:not[%s];4:not[%s];4:green;4:yellow;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[green,rectangle],iota(filter(filter(x.s, size3), not[blue])))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:blue
'λx.forall(or[size1,and[apply(same_shape,x.o),iff[green,circle]]],filter(filter(x.s, size2), and[and[size3,size1],nand[green,yellow]]))'	0:forall(%s,%s);4:or[%s,%s];4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:iff[%s,%s];4:green;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:and[%s,%s];4:size3;4:size1;4:nand[%s,%s];4:green;4:yellow
'λx.apply(and[blue,rectangle],iota(filter(x.s, green)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(blue,iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.exists(or[or[apply(size-geq,x.o),and[apply(size-lt,x.o),or[not[size3],yellow]]],size2], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:or[%s,%s];4:not[%s];4:size3;4:yellow;4:size2;3:%s.s;2:x
'λx.apply(not[implies[blue,size2]],x.o)'	0:apply(%s,%s);4:not[%s];4:implies[%s,%s];4:blue;4:size2;1:%s.o;2:x
'λx.apply(nand[iff[and[rectangle,size2],and[or[triangle,not[blue]],not[blue]]],or[circle,triangle]],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:nand[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:rectangle;4:size2;4:and[%s,%s];4:or[%s,%s];4:triangle;4:not[%s];4:blue;4:not[%s];4:blue;4:or[%s,%s];4:circle;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.forall(circle,filter(x.s, not[circle]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.apply(nand[not[size1],or[circle,blue]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:not[%s];4:size1;4:or[%s,%s];4:circle;4:blue;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, apply(same_shape,iota(filter(x.s, and[apply(same_color,x.o),and[and[apply(same_shape,iota(x.s)),size3],and[yellow,green]]]))))))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:yellow;4:green
'λx.apply(nand[nand[circle,apply(same_size,iota(filter(filter(x.s, or[circle,and[size1,green]]), blue)))],size1],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:nand[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:and[%s,%s];4:size1;4:green;4:blue;4:size1;1:%s.o;2:x
'λx.apply(iff[rectangle,triangle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:rectangle;4:triangle;1:%s.o;2:x
'λx.apply(and[rectangle,nor[green,and[not[and[size1,and[green,and[implies[and[size3,apply(same_color,x.o)],circle],circle]]]],yellow]]],iota(filter(filter(x.s, circle), rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:nor[%s,%s];4:green;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:green;4:and[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;4:circle;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle
'λx.exists(apply(size-lt,x.o), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:size-lt;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(and[yellow,apply(size-geq,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(not[yellow],iota(filter(filter(x.s, apply(size-gt,iota(filter(filter(filter(x.s, not[size3]), size2), triangle)))), yellow)))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;4:size2;4:triangle;4:yellow
'λx.contains(iota(filter(filter(filter(x.s, size2), circle), size1)), filter(filter(filter(x.s, apply(same_size,x.o)), size2), apply(same_shape,iota(x.s))))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, triangle), green), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green;4:circle
'λx.contains(x.o, filter(filter(filter(filter(x.s, size2), nor[circle,and[and[yellow,size1],size2]]), not[rectangle]), size3))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:nor[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:yellow;4:size1;4:size2;4:not[%s];4:rectangle;4:size3
'λx.apply(size1,iota(filter(x.s, apply(same_size,iota(filter(x.s, blue))))))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(apply(same_color,x.o),iota(filter(filter(filter(x.s, yellow), or[size1,not[triangle]]), size3)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:size1;4:not[%s];4:triangle;4:size3
'λx.apply(not[and[rectangle,rectangle]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:rectangle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[and[size1,and[blue,triangle]]],iota(filter(filter(filter(filter(x.s, yellow), green), circle), and[and[blue,apply(same_color,x.o)],size1])))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:blue;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green;4:circle;4:and[%s,%s];4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1
'λx.exists(and[apply(same_color,iota(x.s)),rectangle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:rectangle;3:%s.s;2:x
'λx.apply(and[circle,green],iota(filter(filter(filter(x.s, size3), rectangle), circle)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle;4:circle
'λx.apply(nand[nor[or[not[apply(same_size,iota(filter(filter(x.s, rectangle), green)))],and[yellow,and[yellow,circle]]],and[implies[circle,green],yellow]],or[nand[blue,yellow],green]],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green;4:and[%s,%s];4:yellow;4:and[%s,%s];4:yellow;4:circle;4:and[%s,%s];4:implies[%s,%s];4:circle;4:green;4:yellow;4:or[%s,%s];4:nand[%s,%s];4:blue;4:yellow;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(not[blue],iota(filter(x.s, iff[green,apply(same_size,iota(filter(filter(x.s, and[blue,size2]), triangle)))])))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size2;4:triangle
'λx.apply(circle,iota(filter(filter(x.s, yellow), size1)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1
'λx.contains(x.o, filter(x.s, not[circle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.apply(and[iff[or[size1,triangle],and[green,green]],rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:size1;4:triangle;4:and[%s,%s];4:green;4:green;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_size,iota(filter(filter(x.s, blue), and[size3,triangle]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:size3;4:triangle;1:%s.o;2:x
'λx.apply(apply(same_color,iota(filter(filter(x.s, not[and[yellow,rectangle]]), rectangle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:yellow;4:rectangle;4:rectangle;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(filter(x.s, size2), triangle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:triangle;1:%s.o;2:x
'λx.apply(or[rectangle,apply(size-geq,iota(x.s))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(not[size2],iota(filter(x.s, iff[size1,size1])))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size1;4:size1
'λx.apply(iff[apply(same_size,iota(x.s)),rectangle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:rectangle;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, blue), or[apply(same_shape,x.o),apply(size-gt,x.o)])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.forall(yellow,filter(filter(x.s, and[rectangle,or[apply(same_color,x.o),size1]]), circle))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1;4:circle
'λx.exists(and[size3,size1], filter(filter(x.s, size2), and[or[circle,not[rectangle]],rectangle]))'	0:exists(%s, %s);4:and[%s,%s];4:size3;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:or[%s,%s];4:circle;4:not[%s];4:rectangle;4:rectangle
'λx.apply(or[not[size2],yellow],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:size2;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(filter(filter(x.s, or[size3,triangle]), or[green,size2]), rectangle), yellow)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:triangle;4:or[%s,%s];4:green;4:size2;4:rectangle;4:yellow
'λx.apply(size2,iota(filter(x.s, and[circle,size2])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size2
'λx.contains(x.o, filter(filter(filter(x.s, triangle), size3), apply(same_color,x.o)))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(or[apply(size-gt,x.o),blue],iota(filter(filter(filter(filter(filter(x.s, circle), yellow), apply(same_size,x.o)), size3), green)))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;4:green
'λx.apply(not[iff[or[and[size2,blue],and[rectangle,and[yellow,not[and[green,not[nor[circle,or[circle,blue]]]]]]]],not[apply(same_color,iota(filter(x.s, not[and[not[triangle],size2]])))]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:iff[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size2;4:blue;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:yellow;4:not[%s];4:and[%s,%s];4:green;4:not[%s];4:nor[%s,%s];4:circle;4:or[%s,%s];4:circle;4:blue;4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:not[%s];4:triangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[rectangle,size2],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size2;4:triangle;1:%s.o;2:x
'λx.forall(blue,filter(x.s, blue))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(or[or[size2,and[yellow,green]],triangle],iota(filter(x.s, apply(size-geq,x.o))))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:size2;4:and[%s,%s];4:yellow;4:green;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(filter(filter(x.s, green), yellow), nand[and[apply(size-geq,iota(x.s)),green],green]), circle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow;4:nand[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:green;4:green;4:circle
'λx.apply(nand[circle,apply(same_shape,iota(filter(filter(x.s, and[blue,or[and[iff[and[yellow,triangle],size3],blue],blue]]), apply(size-lt,x.o))))],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:or[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:yellow;4:triangle;4:size3;4:blue;4:blue;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.exists(circle, filter(filter(filter(filter(filter(x.s, and[blue,rectangle]), or[green,size1]), green), or[yellow,yellow]), and[yellow,size1]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:rectangle;4:or[%s,%s];4:green;4:size1;4:green;4:or[%s,%s];4:yellow;4:yellow;4:and[%s,%s];4:yellow;4:size1
'λx.apply(or[apply(same_shape,x.o),yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow;1:%s.o;2:x
'λx.apply(and[not[apply(same_size,iota(x.s))],and[green,and[size1,and[green,size1]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:green;4:and[%s,%s];4:size1;4:and[%s,%s];4:green;4:size1;1:%s.o;2:x
'λx.apply(yellow,iota(filter(x.s, nand[apply(same_color,iota(x.s)),and[not[green],apply(same_size,iota(filter(filter(x.s, triangle), blue)))]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue
'λx.apply(apply(same_shape,iota(filter(x.s, nand[apply(same_size,x.o),and[triangle,yellow]]))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:triangle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(filter(filter(x.s, size3), and[size2,size2]), triangle), rectangle), size2))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:size2;4:size2;4:triangle;4:rectangle;4:size2
'λx.apply(size1,iota(filter(filter(x.s, rectangle), rectangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle
'λx.contains(x.o, filter(filter(x.s, size3), nand[not[apply(size-lt,iota(filter(x.s, rectangle)))],not[or[size1,not[or[blue,yellow]]]]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:nand[%s,%s];4:not[%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:or[%s,%s];4:size1;4:not[%s];4:or[%s,%s];4:blue;4:yellow
'λx.apply(and[and[rectangle,nor[green,and[not[and[size1,and[green,and[implies[and[size3,apply(same_color,x.o)],circle],circle]]]],yellow]]],and[and[triangle,triangle],circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:rectangle;4:nor[%s,%s];4:green;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:green;4:and[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;4:circle;4:yellow;4:and[%s,%s];4:and[%s,%s];4:triangle;4:triangle;4:circle;1:%s.o;2:x
'λx.exists(not[yellow], filter(x.s, iff[blue,and[apply(same_color,iota(x.s)),yellow]]))'	0:exists(%s, %s);4:not[%s];4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:blue;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:yellow
'λx.exists(circle, filter(x.s, or[size3,rectangle]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:rectangle
'λx.apply(implies[or[or[blue,size1],size1],apply(same_color,x.o)],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:or[%s,%s];4:or[%s,%s];4:blue;4:size1;4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(filter(filter(x.s, green), and[size3,nor[iff[blue,size2],size1]]), and[size1,and[triangle,blue]]), triangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:size3;4:nor[%s,%s];4:iff[%s,%s];4:blue;4:size2;4:size1;4:and[%s,%s];4:size1;4:and[%s,%s];4:triangle;4:blue;4:triangle
'λx.apply(rectangle,iota(filter(filter(filter(filter(x.s, and[triangle,or[size2,circle]]), yellow), size1), size1)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:or[%s,%s];4:size2;4:circle;4:yellow;4:size1;4:size1
'λx.contains(x.o, filter(filter(x.s, size3), and[or[or[or[blue,blue],apply(same_size,x.o)],iff[and[size3,blue],size1]],or[rectangle,or[or[not[size1],size2],yellow]]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:blue;4:blue;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:iff[%s,%s];4:and[%s,%s];4:size3;4:blue;4:size1;4:or[%s,%s];4:rectangle;4:or[%s,%s];4:or[%s,%s];4:not[%s];4:size1;4:size2;4:yellow
'λx.apply(and[apply(size-geq,iota(x.s)),size1],iota(filter(x.s, nand[size1,size3])))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size1;4:size3
'λx.apply(not[iff[green,size3]],iota(filter(x.s, not[circle])))'	0:apply(%s,%s);4:not[%s];4:iff[%s,%s];4:green;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.apply(not[apply(same_size,x.o)],iota(filter(filter(x.s, apply(size-lt,x.o)), apply(same_color,x.o))))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.forall(not[not[apply(same_color,x.o)]],filter(x.s, rectangle))'	0:forall(%s,%s);4:not[%s];4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[size2,yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size1,yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(filter(x.s, and[triangle,blue]), circle), yellow), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:blue;4:circle;4:yellow;4:size3
'λx.apply(or[yellow,not[apply(same_shape,x.o)]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, or[rectangle,size2]), nand[and[size3,and[and[apply(size-gt,iota(x.s)),and[or[rectangle,triangle],size3]],blue]],or[green,rectangle]]), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:size2;4:nand[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:triangle;4:size3;4:blue;4:or[%s,%s];4:green;4:rectangle;4:size3
'λx.apply(and[size3,yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.exists(and[not[yellow],yellow], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:yellow;4:yellow;3:%s.s;2:x
'λx.apply(not[and[size3,blue]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size3;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[yellow,green],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:yellow;4:green;1:%s.o;2:x
'λx.apply(and[yellow,yellow],iota(filter(filter(x.s, rectangle), rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle
'λx.apply(or[blue,and[rectangle,size1]],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[triangle,not[nor[triangle,apply(same_size,iota(filter(filter(filter(x.s, triangle), triangle), nand[yellow,and[and[triangle,size3],yellow]])))]]],iota(filter(filter(x.s, triangle), yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:not[%s];4:nor[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:triangle;4:nand[%s,%s];4:yellow;4:and[%s,%s];4:and[%s,%s];4:triangle;4:size3;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:yellow
'λx.apply(and[size2,and[and[size2,yellow],circle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:size2;4:yellow;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(x.s, rectangle), not[green])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:green
'λx.contains(x.o, filter(filter(filter(filter(filter(filter(filter(x.s, not[size2]), size3), size2), and[size1,not[size3]]), nand[nand[blue,size3],nor[size2,nor[iff[circle,size1],size1]]]), and[not[green],and[not[nor[and[not[or[yellow,not[rectangle]]],circle],size3]],yellow]]), apply(same_size,iota(x.s))))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:size3;4:size2;4:and[%s,%s];4:size1;4:not[%s];4:size3;4:nand[%s,%s];4:nand[%s,%s];4:blue;4:size3;4:nor[%s,%s];4:size2;4:nor[%s,%s];4:iff[%s,%s];4:circle;4:size1;4:size1;4:and[%s,%s];4:not[%s];4:green;4:and[%s,%s];4:not[%s];4:nor[%s,%s];4:and[%s,%s];4:not[%s];4:or[%s,%s];4:yellow;4:not[%s];4:rectangle;4:circle;4:size3;4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(x.s, blue), iff[apply(same_color,iota(x.s)),apply(size-leq,iota(x.s))])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:iff[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(filter(x.s, apply(same_color,iota(filter(x.s, size3)))), size3), blue)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3;4:blue
'λx.forall(apply(same_size,x.o),filter(filter(x.s, and[blue,size1]), circle))'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size1;4:circle
'λx.apply(yellow,iota(filter(x.s, and[size2,blue])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:blue
'λx.apply(green,iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(and[or[size2,blue],yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size2;4:blue;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.exists(and[or[and[green,blue],circle],triangle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:green;4:blue;4:circle;4:triangle;3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, triangle), circle), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle;4:size3
'λx.apply(or[blue,circle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[green,not[triangle]],iota(filter(filter(x.s, size1), size2)))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2
'λx.apply(or[rectangle,size1],iota(filter(x.s, and[rectangle,circle])))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:circle
'λx.apply(and[and[size1,triangle],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:triangle;4:blue;1:%s.o;2:x
'λx.apply(not[and[triangle,and[blue,and[blue,triangle]]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:blue;4:and[%s,%s];4:blue;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size1,not[size1]],iota(filter(x.s, nor[yellow,apply(same_color,x.o)])))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.forall(and[and[blue,nand[apply(same_size,x.o),size3]],size1],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:nand[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;4:size1;3:%s.s;2:x
'λx.exists(rectangle, filter(filter(filter(x.s, apply(same_size,iota(x.s))), circle), size3))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:circle;4:size3
'λx.apply(triangle,iota(filter(filter(x.s, and[green,blue]), green)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:blue;4:green
'λx.contains(x.o, filter(filter(filter(filter(x.s, rectangle), size3), size1), or[apply(same_shape,x.o),rectangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3;4:size1;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle
'λx.apply(size3,iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(size2,iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(size1,iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.forall(size2,filter(filter(x.s, circle), triangle))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle
'λx.empty(filter(filter(filter(x.s, apply(same_shape,iota(filter(x.s, triangle)))), rectangle), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle;4:blue
'λx.forall(and[rectangle,rectangle],filter(x.s, circle))'	0:forall(%s,%s);4:and[%s,%s];4:rectangle;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(size2,iota(filter(filter(x.s, green), or[circle,size3])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:circle;4:size3
'λx.apply(apply(size-gt,iota(filter(filter(filter(filter(x.s, and[not[size1],size3]), and[and[rectangle,nand[not[size3],apply(same_color,x.o)]],size1]), size2), size3))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:size1;4:size3;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:nand[%s,%s];4:not[%s];4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1;4:size2;4:size3;1:%s.o;2:x
'λx.empty(filter(filter(x.s, and[size2,or[triangle,circle]]), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:or[%s,%s];4:triangle;4:circle;4:triangle
'λx.apply(or[and[and[size1,triangle],size3],size1],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:triangle;4:size3;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[size1,or[yellow,implies[size1,apply(same_size,x.o)]]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size1;4:or[%s,%s];4:yellow;4:implies[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(not[not[not[and[and[green,size3],blue]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:green;4:size3;4:blue;1:%s.o;2:x
'λx.exists(and[not[size3],iff[nor[or[size2,not[size2]],and[and[triangle,apply(same_color,iota(x.s))],size1]],and[size1,size2]]], filter(filter(filter(filter(filter(x.s, green), and[rectangle,nand[triangle,size1]]), blue), yellow), and[green,circle]))'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:size3;4:iff[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:size2;4:not[%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:size1;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:rectangle;4:nand[%s,%s];4:triangle;4:size1;4:blue;4:yellow;4:and[%s,%s];4:green;4:circle
'λx.exists(green, filter(filter(filter(filter(filter(filter(x.s, and[size2,size2]), size2), circle), size2), not[apply(size-leq,x.o)]), yellow))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:size2;4:size2;4:circle;4:size2;4:not[%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:yellow
'λx.empty(filter(filter(filter(filter(x.s, green), rectangle), circle), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle;4:circle;4:circle
'λx.apply(circle,iota(filter(filter(filter(x.s, yellow), triangle), apply(same_size,iota(x.s)))))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.forall(yellow,filter(filter(x.s, or[apply(size-gt,x.o),triangle]), green))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:triangle;4:green
'λx.forall(circle,filter(filter(filter(filter(x.s, or[triangle,iff[yellow,not[and[size2,not[apply(same_shape,iota(x.s))]]]]]), and[or[size1,apply(same_shape,iota(x.s))],size3]), size1), size2))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:iff[%s,%s];4:yellow;4:not[%s];4:and[%s,%s];4:size2;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size3;4:size1;4:size2
'λx.empty(filter(x.s, not[not[rectangle]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:rectangle
'λx.apply(blue,iota(filter(x.s, not[circle])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.apply(yellow,iota(filter(filter(x.s, green), rectangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle
'λx.apply(nor[rectangle,and[green,size1]],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:rectangle;4:and[%s,%s];4:green;4:size1;1:iota(%s);3:%s.s;2:x
'λx.forall(apply(size-lt,x.o),filter(filter(filter(x.s, not[size1]), and[rectangle,apply(same_size,x.o)]), apply(same_shape,iota(filter(x.s, rectangle)))))'	0:forall(%s,%s);4:apply(%s,%s);5:size-lt;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(iff[triangle,or[size1,nand[implies[nor[rectangle,triangle],not[not[size3]]],iff[blue,size3]]]],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:triangle;4:or[%s,%s];4:size1;4:nand[%s,%s];4:implies[%s,%s];4:nor[%s,%s];4:rectangle;4:triangle;4:not[%s];4:not[%s];4:size3;4:iff[%s,%s];4:blue;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[apply(same_size,x.o),size2],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(nand[and[green,size3],or[yellow,triangle]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:green;4:size3;4:or[%s,%s];4:yellow;4:triangle;1:%s.o;2:x
'λx.apply(and[and[yellow,nand[blue,not[triangle]]],size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:nand[%s,%s];4:blue;4:not[%s];4:triangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.forall(and[or[green,blue],size2],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:or[%s,%s];4:green;4:blue;4:size2;3:%s.s;2:x
'λx.exists(rectangle, filter(x.s, rectangle))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(not[iff[blue,and[and[apply(size-geq,iota(filter(filter(x.s, triangle), implies[size2,or[green,and[circle,size1]]]))),rectangle],size3]]],x.o)'	0:apply(%s,%s);4:not[%s];4:iff[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:implies[%s,%s];4:size2;4:or[%s,%s];4:green;4:and[%s,%s];4:circle;4:size1;4:rectangle;4:size3;1:%s.o;2:x
'λx.apply(nor[yellow,yellow],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:yellow;4:yellow;1:%s.o;2:x
'λx.apply(or[yellow,green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:green;1:%s.o;2:x
'λx.exists(triangle, filter(filter(filter(x.s, blue), size1), green))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1;4:green
'λx.apply(and[circle,not[circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:not[%s];4:circle;1:%s.o;2:x
'λx.apply(not[iff[or[size1,yellow],triangle]],iota(filter(filter(x.s, not[circle]), and[triangle,apply(size-geq,x.o)])))'	0:apply(%s,%s);4:not[%s];4:iff[%s,%s];4:or[%s,%s];4:size1;4:yellow;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(filter(filter(x.s, and[or[nor[and[triangle,apply(size-leq,x.o)],blue],or[apply(same_size,iota(filter(filter(filter(filter(x.s, size3), yellow), blue), or[and[rectangle,and[green,rectangle]],blue]))),triangle]],triangle]), nand[implies[apply(same_shape,iota(x.s)),iff[triangle,green]],circle]), green), and[size2,and[size2,not[and[blue,yellow]]]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:triangle;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:blue;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow;4:blue;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:green;4:rectangle;4:blue;4:triangle;4:triangle;4:nand[%s,%s];4:implies[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:iff[%s,%s];4:triangle;4:green;4:circle;4:green;4:and[%s,%s];4:size2;4:and[%s,%s];4:size2;4:not[%s];4:and[%s,%s];4:blue;4:yellow
'λx.apply(or[and[size2,size3],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size2;4:size3;4:blue;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(filter(x.s, and[implies[size1,circle],yellow]), green), triangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:implies[%s,%s];4:size1;4:circle;4:yellow;4:green;4:triangle
'λx.apply(implies[and[apply(size-geq,iota(x.s)),triangle],triangle],iota(filter(filter(x.s, nand[and[size2,triangle],nand[iff[triangle,size3],and[yellow,or[size1,or[and[yellow,apply(same_size,x.o)],blue]]]]]), and[yellow,size1])))'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:triangle;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:and[%s,%s];4:size2;4:triangle;4:nand[%s,%s];4:iff[%s,%s];4:triangle;4:size3;4:and[%s,%s];4:yellow;4:or[%s,%s];4:size1;4:or[%s,%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;4:and[%s,%s];4:yellow;4:size1
'λx.empty(filter(filter(filter(x.s, and[green,implies[and[size1,size2],iff[and[not[or[or[and[and[not[rectangle],and[size2,blue]],size2],nor[blue,not[not[and[and[size2,apply(same_size,iota(filter(filter(x.s, and[green,triangle]), green)))],circle]]]]],blue]],rectangle],triangle]]]), circle), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:implies[%s,%s];4:and[%s,%s];4:size1;4:size2;4:iff[%s,%s];4:and[%s,%s];4:not[%s];4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:rectangle;4:and[%s,%s];4:size2;4:blue;4:size2;4:nor[%s,%s];4:blue;4:not[%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:triangle;4:green;4:circle;4:blue;4:rectangle;4:triangle;4:circle;4:yellow
'λx.apply(or[apply(same_shape,iota(x.s)),blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, apply(same_size,x.o)))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, or[and[and[and[size3,apply(same_size,iota(filter(x.s, or[not[and[and[rectangle,and[not[and[blue,blue]],circle]],apply(same_color,iota(filter(x.s, and[yellow,circle])))]],not[rectangle]])))],size3],green],triangle])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:blue;4:blue;4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:circle;4:not[%s];4:rectangle;4:size3;4:green;4:triangle
'λx.empty(filter(filter(filter(x.s, size1), nor[not[green],or[or[rectangle,and[circle,size2]],apply(size-lt,x.o)]]), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:nor[%s,%s];4:not[%s];4:green;4:or[%s,%s];4:or[%s,%s];4:rectangle;4:and[%s,%s];4:circle;4:size2;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:size2
'λx.apply(apply(same_color,iota(filter(filter(filter(x.s, green), green), nand[or[green,yellow],circle]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:green;4:nand[%s,%s];4:or[%s,%s];4:green;4:yellow;4:circle;1:%s.o;2:x
'λx.forall(and[not[apply(same_size,x.o)],blue],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;3:%s.s;2:x
'λx.apply(green,iota(filter(filter(x.s, size2), or[blue,and[apply(size-geq,iota(x.s)),and[iff[triangle,and[blue,triangle]],size3]]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:blue;4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:iff[%s,%s];4:triangle;4:and[%s,%s];4:blue;4:triangle;4:size3
'λx.exists(not[not[apply(same_color,x.o)]], x.s)'	0:exists(%s, %s);4:not[%s];4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:%s.s;2:x
'λx.exists(rectangle, filter(filter(x.s, circle), yellow))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow
'λx.apply(nor[yellow,size1],iota(filter(filter(filter(x.s, blue), size1), circle)))'	0:apply(%s,%s);4:nor[%s,%s];4:yellow;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1;4:circle
'λx.apply(or[and[size1,size3],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size1;4:size3;4:blue;1:%s.o;2:x
'λx.apply(and[apply(same_color,iota(x.s)),not[rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.forall(circle,filter(filter(x.s, apply(same_shape,x.o)), iff[circle,apply(same_size,iota(filter(filter(x.s, and[apply(same_size,x.o),triangle]), not[and[size2,triangle]])))]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:iff[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle;4:not[%s];4:and[%s,%s];4:size2;4:triangle
'λx.forall(rectangle,filter(x.s, and[and[size3,apply(same_size,iota(x.s))],size1]))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size1
'λx.apply(and[size3,size3],iota(filter(x.s, not[size1])))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1
'λx.forall(green,filter(x.s, apply(same_color,iota(filter(filter(filter(filter(filter(x.s, nor[size1,yellow]), yellow), green), or[circle,not[green]]), apply(size-leq,iota(filter(x.s, triangle))))))))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size1;4:yellow;4:yellow;4:green;4:or[%s,%s];4:circle;4:not[%s];4:green;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(implies[size1,and[circle,size2]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:size1;4:and[%s,%s];4:circle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(filter(x.s, size3), and[size1,circle]), size2)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:size1;4:circle;4:size2
'λx.apply(implies[circle,and[and[green,green],not[green]]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:green;4:green;4:not[%s];4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(filter(filter(filter(x.s, triangle), apply(size-geq,x.o)), size2), not[and[size3,apply(same_shape,x.o)]]), or[size2,implies[size2,and[not[and[size3,size1]],blue]]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:size2;4:not[%s];4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:size2;4:implies[%s,%s];4:size2;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:size3;4:size1;4:blue
'λx.apply(not[blue],iota(filter(filter(x.s, yellow), size1)))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1
'λx.empty(filter(filter(x.s, and[green,or[nor[apply(size-lt,x.o),or[and[circle,size3],size3]],yellow]]), and[circle,rectangle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:or[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:or[%s,%s];4:and[%s,%s];4:circle;4:size3;4:size3;4:yellow;4:and[%s,%s];4:circle;4:rectangle
'λx.apply(and[iff[rectangle,green],or[yellow,size1]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:rectangle;4:green;4:or[%s,%s];4:yellow;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, and[nand[and[circle,size2],size2],apply(same_size,x.o)]), size1)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:circle;4:size2;4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1
'λx.forall(and[size3,and[rectangle,size2]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:rectangle;4:size2;3:%s.s;2:x
'λx.apply(and[not[green],nand[size1,size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:green;4:nand[%s,%s];4:size1;4:size1;1:%s.o;2:x
'λx.exists(and[rectangle,rectangle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:rectangle;4:rectangle;3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(filter(filter(x.s, size2), rectangle), apply(same_shape,x.o)), size3)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3
'λx.apply(circle,iota(filter(filter(filter(filter(x.s, or[circle,triangle]), nand[yellow,not[size3]]), blue), blue)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:triangle;4:nand[%s,%s];4:yellow;4:not[%s];4:size3;4:blue;4:blue
'λx.apply(or[or[yellow,circle],not[size1]],iota(filter(x.s, green)))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:yellow;4:circle;4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.empty(filter(x.s, triangle))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.exists(or[not[and[size1,not[circle]]],not[or[triangle,size3]]], filter(filter(filter(filter(x.s, apply(same_size,x.o)), not[blue]), blue), and[or[and[implies[blue,or[circle,size2]],not[yellow]],and[not[rectangle],size2]],triangle]))'	0:exists(%s, %s);4:or[%s,%s];4:not[%s];4:and[%s,%s];4:size1;4:not[%s];4:circle;4:not[%s];4:or[%s,%s];4:triangle;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:not[%s];4:blue;4:blue;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:blue;4:or[%s,%s];4:circle;4:size2;4:not[%s];4:yellow;4:and[%s,%s];4:not[%s];4:rectangle;4:size2;4:triangle
'λx.empty(filter(filter(filter(filter(x.s, and[circle,and[rectangle,rectangle]]), or[size2,and[rectangle,triangle]]), green), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:and[%s,%s];4:rectangle;4:rectangle;4:or[%s,%s];4:size2;4:and[%s,%s];4:rectangle;4:triangle;4:green;4:green
'λx.apply(or[green,and[nand[yellow,circle],triangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:and[%s,%s];4:nand[%s,%s];4:yellow;4:circle;4:triangle;1:%s.o;2:x
'λx.apply(apply(same_size,x.o),iota(filter(x.s, and[size1,size1])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size1
'λx.apply(or[and[size3,triangle],size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size3;4:triangle;4:size3;1:%s.o;2:x
'λx.forall(not[size3],filter(filter(x.s, not[size1]), size1))'	0:forall(%s,%s);4:not[%s];4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:size1
'λx.forall(green,filter(filter(filter(filter(filter(x.s, size2), size2), yellow), or[circle,not[circle]]), and[size3,size3]))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2;4:yellow;4:or[%s,%s];4:circle;4:not[%s];4:circle;4:and[%s,%s];4:size3;4:size3
'λx.apply(apply(same_shape,iota(filter(x.s, circle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;1:%s.o;2:x
'λx.apply(not[blue],iota(filter(filter(filter(filter(filter(x.s, triangle), apply(same_size,iota(x.s))), and[size3,and[blue,yellow]]), triangle), green)))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:and[%s,%s];4:blue;4:yellow;4:triangle;4:green
'λx.apply(nor[or[size3,yellow],apply(same_color,x.o)],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:nor[%s,%s];4:or[%s,%s];4:size3;4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(or[blue,and[blue,or[size2,size2]]],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:and[%s,%s];4:blue;4:or[%s,%s];4:size2;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(apply(same_shape,x.o),iota(filter(filter(filter(x.s, and[iff[yellow,or[not[size3],green]],apply(same_size,iota(filter(filter(x.s, size3), triangle)))]), blue), green)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:iff[%s,%s];4:yellow;4:or[%s,%s];4:not[%s];4:size3;4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle;4:blue;4:green
'λx.contains(iota(filter(x.s, triangle)), filter(x.s, blue))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.contains(iota(filter(filter(x.s, circle), circle)), filter(x.s, yellow))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(implies[and[size3,and[and[or[size3,rectangle],size1],and[apply(size-gt,x.o),rectangle]]],green],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size3;4:rectangle;4:size1;4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:rectangle;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[circle,not[and[size3,apply(same_color,x.o)]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:not[%s];4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, rectangle), triangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle
'λx.exists(and[apply(same_size,iota(x.s)),implies[and[circle,green],size3]], filter(filter(x.s, nor[green,triangle]), circle))'	0:exists(%s, %s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:implies[%s,%s];4:and[%s,%s];4:circle;4:green;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:green;4:triangle;4:circle
'λx.apply(and[size2,triangle],iota(filter(filter(filter(filter(x.s, and[iff[yellow,size2],size1]), apply(same_color,iota(filter(filter(filter(filter(filter(x.s, triangle), and[size3,rectangle]), circle), rectangle), green)))), rectangle), apply(same_shape,x.o))))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:iff[%s,%s];4:yellow;4:size2;4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:size3;4:rectangle;4:circle;4:rectangle;4:green;4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(x.s, iff[blue,green]), blue)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:blue;4:green;4:blue
'λx.empty(filter(x.s, and[apply(same_shape,iota(filter(x.s, blue))),triangle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle
'λx.forall(rectangle,filter(filter(x.s, nor[not[and[triangle,size2]],size1]), rectangle))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:not[%s];4:and[%s,%s];4:triangle;4:size2;4:size1;4:rectangle
'λx.contains(iota(x.s), filter(x.s, blue))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.forall(green,filter(x.s, triangle))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(and[and[and[or[triangle,and[size1,nand[green,nor[and[and[triangle,triangle],blue],blue]]]],triangle],and[not[and[yellow,or[size2,apply(same_size,x.o)]]],blue]],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:triangle;4:and[%s,%s];4:size1;4:nand[%s,%s];4:green;4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:triangle;4:blue;4:blue;4:triangle;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:yellow;4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;4:size2;1:%s.o;2:x
'λx.apply(or[and[size3,implies[size3,or[apply(same_shape,x.o),green]]],circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size3;4:implies[%s,%s];4:size3;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green;4:circle;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, and[green,and[not[rectangle],blue]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:and[%s,%s];4:not[%s];4:rectangle;4:blue
'λx.forall(yellow,filter(x.s, or[or[size2,apply(same_shape,iota(filter(filter(x.s, circle), green)))],nand[and[yellow,size2],and[not[and[triangle,size1]],triangle]]]))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green;4:nand[%s,%s];4:and[%s,%s];4:yellow;4:size2;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:triangle;4:size1;4:triangle
'λx.apply(triangle,iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.exists(nand[size3,nor[size2,apply(same_color,x.o)]], filter(x.s, not[rectangle]))'	0:exists(%s, %s);4:nand[%s,%s];4:size3;4:nor[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle
'λx.apply(or[and[iff[yellow,and[blue,nor[blue,apply(same_color,iota(x.s))]]],green],apply(same_size,iota(filter(x.s, size2)))],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:yellow;4:and[%s,%s];4:blue;4:nor[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;1:iota(%s);3:%s.s;2:x
'λx.forall(not[size1],filter(x.s, not[rectangle]))'	0:forall(%s,%s);4:not[%s];4:size1;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle
'λx.exists(iff[triangle,yellow], filter(x.s, circle))'	0:exists(%s, %s);4:iff[%s,%s];4:triangle;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.forall(or[green,rectangle],filter(filter(filter(filter(filter(filter(x.s, apply(same_color,iota(x.s))), rectangle), circle), blue), not[not[yellow]]), circle))'	0:forall(%s,%s);4:or[%s,%s];4:green;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:rectangle;4:circle;4:blue;4:not[%s];4:not[%s];4:yellow;4:circle
'λx.apply(apply(same_color,x.o),iota(filter(filter(filter(filter(filter(x.s, yellow), yellow), circle), apply(same_shape,iota(x.s))), green)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:yellow;4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:green
'λx.apply(and[yellow,and[size1,and[size3,not[not[not[yellow]]]]]],iota(filter(filter(x.s, and[not[rectangle],or[and[not[or[size1,size3]],apply(same_shape,iota(x.s))],not[blue]]]), size1)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:and[%s,%s];4:size1;4:and[%s,%s];4:size3;4:not[%s];4:not[%s];4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:or[%s,%s];4:size1;4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:not[%s];4:blue;4:size1
'λx.apply(triangle,iota(filter(filter(filter(filter(filter(filter(x.s, apply(same_size,iota(filter(x.s, not[green])))), size3), not[rectangle]), size1), and[yellow,circle]), nand[nand[not[size2],blue],implies[and[blue,size2],and[not[or[size3,and[or[green,green],nand[yellow,circle]]]],not[size1]]]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:size3;4:not[%s];4:rectangle;4:size1;4:and[%s,%s];4:yellow;4:circle;4:nand[%s,%s];4:nand[%s,%s];4:not[%s];4:size2;4:blue;4:implies[%s,%s];4:and[%s,%s];4:blue;4:size2;4:and[%s,%s];4:not[%s];4:or[%s,%s];4:size3;4:and[%s,%s];4:or[%s,%s];4:green;4:green;4:nand[%s,%s];4:yellow;4:circle;4:not[%s];4:size1
'λx.apply(or[yellow,triangle],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(yellow, filter(x.s, or[yellow,blue]))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:blue
'λx.apply(and[apply(size-leq,iota(filter(filter(filter(x.s, or[size2,rectangle]), size2), apply(same_color,iota(x.s))))),iff[apply(same_color,x.o),apply(same_size,iota(filter(x.s, size1)))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:rectangle;4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:iff[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(x.s, yellow), yellow)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:yellow
'λx.exists(blue, filter(x.s, circle))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(size3,iota(filter(filter(filter(x.s, apply(same_color,x.o)), not[and[size3,or[triangle,green]]]), apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:size3;4:or[%s,%s];4:triangle;4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.exists(apply(size-leq,iota(filter(x.s, green))), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;3:%s.s;2:x
'λx.empty(filter(x.s, and[circle,triangle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:triangle
'λx.apply(implies[or[not[circle],and[not[rectangle],size2]],circle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:or[%s,%s];4:not[%s];4:circle;4:and[%s,%s];4:not[%s];4:rectangle;4:size2;4:circle;1:%s.o;2:x
'λx.empty(filter(x.s, or[or[rectangle,or[size1,not[blue]]],size1]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:rectangle;4:or[%s,%s];4:size1;4:not[%s];4:blue;4:size1
'λx.apply(nor[blue,or[nor[apply(same_shape,x.o),triangle],size3]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:blue;4:or[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle;4:size3;1:%s.o;2:x
'λx.apply(and[blue,not[or[implies[rectangle,and[size1,not[not[and[blue,and[size3,size2]]]]]],size1]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:not[%s];4:or[%s,%s];4:implies[%s,%s];4:rectangle;4:and[%s,%s];4:size1;4:not[%s];4:not[%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:size3;4:size2;4:size1;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(x.s, circle), and[apply(same_shape,iota(filter(x.s, yellow))),triangle])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle
'λx.forall(and[implies[size2,rectangle],and[not[size2],circle]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:size2;4:rectangle;4:and[%s,%s];4:not[%s];4:size2;4:circle;3:%s.s;2:x
'λx.apply(or[nand[or[size3,green],green],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:size3;4:green;4:green;4:blue;1:%s.o;2:x
'λx.apply(and[apply(same_size,iota(filter(filter(filter(filter(filter(filter(x.s, green), and[iff[circle,size2],blue]), and[size3,yellow]), apply(same_size,x.o)), size1), blue))),green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:iff[%s,%s];4:circle;4:size2;4:blue;4:and[%s,%s];4:size3;4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1;4:blue;4:green;1:%s.o;2:x
'λx.empty(filter(filter(x.s, and[size1,size1]), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size1;4:rectangle
'λx.apply(and[or[triangle,size2],and[rectangle,size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:triangle;4:size2;4:and[%s,%s];4:rectangle;4:size1;1:%s.o;2:x
'λx.apply(and[not[rectangle],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:rectangle;4:rectangle;1:%s.o;2:x
'λx.apply(and[circle,apply(same_shape,iota(filter(x.s, and[and[green,yellow],size3])))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:green;4:yellow;4:size3;1:%s.o;2:x
'λx.apply(apply(same_shape,x.o),iota(filter(filter(x.s, nor[apply(same_size,x.o),yellow]), size3)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow;4:size3
'λx.apply(and[size3,yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:yellow;1:%s.o;2:x
'λx.exists(and[not[size2],size3], filter(x.s, triangle))'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:size2;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(and[size2,yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:yellow;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, not[and[size3,and[size1,or[and[blue,blue],yellow]]]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:size1;4:or[%s,%s];4:and[%s,%s];4:blue;4:blue;4:yellow
'λx.apply(and[size1,rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[iff[nor[circle,size3],circle],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:nor[%s,%s];4:circle;4:size3;4:circle;4:green;1:%s.o;2:x
'λx.apply(or[and[rectangle,circle],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:rectangle;4:circle;4:blue;1:%s.o;2:x
'λx.apply(and[size1,yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:yellow;1:%s.o;2:x
'λx.apply(size2,iota(filter(x.s, iff[yellow,size1])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:yellow;4:size1
'λx.apply(size1,iota(filter(filter(filter(filter(x.s, circle), size1), and[triangle,not[size1]]), or[apply(size-geq,x.o),apply(same_color,x.o)])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1;4:and[%s,%s];4:triangle;4:not[%s];4:size1;4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(yellow,iota(filter(x.s, implies[yellow,apply(same_size,iota(filter(x.s, size1)))])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(iff[blue,size2],iota(filter(filter(x.s, circle), rectangle)))'	0:apply(%s,%s);4:iff[%s,%s];4:blue;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle
'λx.apply(or[and[and[rectangle,apply(same_size,iota(filter(x.s, size3)))],not[rectangle]],and[or[implies[size2,triangle],size3],and[and[nor[rectangle,yellow],triangle],and[yellow,rectangle]]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:rectangle;4:and[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:size2;4:triangle;4:size3;4:and[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:rectangle;4:yellow;4:triangle;4:and[%s,%s];4:yellow;4:rectangle;1:%s.o;2:x
'λx.contains(iota(x.s), filter(x.s, not[apply(same_size,x.o)]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(filter(filter(x.s, blue), implies[size3,or[triangle,size2]]), or[not[green],and[and[apply(same_color,iota(x.s)),or[and[size3,blue],apply(same_size,x.o)]],nand[or[iff[apply(size-leq,iota(x.s)),size1],size3],size2]]]), green)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:implies[%s,%s];4:size3;4:or[%s,%s];4:triangle;4:size2;4:or[%s,%s];4:not[%s];4:green;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size3;4:blue;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:nand[%s,%s];4:or[%s,%s];4:iff[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:size1;4:size3;4:size2;4:green
'λx.exists(and[and[size2,rectangle],nand[and[triangle,yellow],or[apply(size-lt,iota(x.s)),or[apply(size-gt,iota(filter(filter(x.s, blue), circle))),and[triangle,and[rectangle,not[rectangle]]]]]]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:size2;4:rectangle;4:nand[%s,%s];4:and[%s,%s];4:triangle;4:yellow;4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle;4:and[%s,%s];4:triangle;4:and[%s,%s];4:rectangle;4:not[%s];4:rectangle;3:%s.s;2:x
'λx.apply(and[size1,green],iota(filter(filter(x.s, circle), size1)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1
'λx.apply(iff[size1,or[green,yellow]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:size1;4:or[%s,%s];4:green;4:yellow;1:%s.o;2:x
'λx.apply(not[circle],iota(filter(x.s, and[rectangle,apply(same_size,x.o)])))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(apply(size-leq,x.o),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[or[rectangle,circle],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:rectangle;4:circle;4:blue;1:%s.o;2:x
'λx.apply(not[implies[size3,implies[size1,size2]]],iota(filter(x.s, and[or[iff[and[and[circle,and[size3,circle]],blue],circle],rectangle],yellow])))'	0:apply(%s,%s);4:not[%s];4:implies[%s,%s];4:size3;4:implies[%s,%s];4:size1;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:size3;4:circle;4:blue;4:circle;4:rectangle;4:yellow
'λx.apply(not[yellow],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(rectangle,iota(filter(filter(filter(x.s, and[circle,triangle]), not[rectangle]), not[size3])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:triangle;4:not[%s];4:rectangle;4:not[%s];4:size3
'λx.empty(filter(filter(filter(x.s, and[size3,size2]), circle), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:size2;4:circle;4:size3
'λx.apply(yellow,iota(filter(x.s, apply(same_color,iota(filter(filter(x.s, apply(size-geq,iota(x.s))), green))))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:green
'λx.apply(and[apply(size-geq,x.o),apply(same_shape,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(filter(x.s, rectangle), and[yellow,and[and[not[size2],circle],size3]]), blue), iff[size3,and[and[blue,size3],circle]])), filter(x.s, and[and[or[rectangle,size3],circle],size2]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:yellow;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size2;4:circle;4:size3;4:blue;4:iff[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:blue;4:size3;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:rectangle;4:size3;4:circle;4:size2
'λx.apply(size2,iota(filter(x.s, and[circle,not[and[blue,size3]]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:not[%s];4:and[%s,%s];4:blue;4:size3
'λx.apply(and[rectangle,rectangle],iota(filter(filter(filter(x.s, apply(same_size,x.o)), apply(same_shape,x.o)), not[size1])))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:size1
'λx.contains(iota(filter(filter(x.s, size2), size3)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3;3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, or[size2,triangle]), yellow))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:triangle;4:yellow
'λx.exists(or[rectangle,size1], filter(x.s, apply(size-leq,iota(filter(x.s, apply(same_color,iota(x.s)))))))'	0:exists(%s, %s);4:or[%s,%s];4:rectangle;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(and[blue,green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:green;1:%s.o;2:x
'λx.empty(filter(x.s, iff[and[apply(same_color,iota(x.s)),or[size3,not[triangle]]],triangle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:not[%s];4:triangle;4:triangle
'λx.contains(x.o, filter(x.s, and[apply(size-gt,iota(x.s)),yellow]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:yellow
'λx.apply(size2,iota(filter(filter(filter(filter(x.s, and[and[and[circle,nand[triangle,size2]],size2],green]), triangle), iff[triangle,or[yellow,triangle]]), triangle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:nand[%s,%s];4:triangle;4:size2;4:size2;4:green;4:triangle;4:iff[%s,%s];4:triangle;4:or[%s,%s];4:yellow;4:triangle;4:triangle
'λx.apply(and[size3,size3],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.empty(filter(filter(x.s, green), or[apply(same_size,x.o),or[size2,size1]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:size2;4:size1
'λx.empty(filter(x.s, nand[size1,triangle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size1;4:triangle
'λx.apply(and[yellow,and[and[or[rectangle,yellow],or[green,and[implies[yellow,size1],size2]]],size2]],iota(filter(x.s, apply(same_color,iota(filter(x.s, blue))))))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:rectangle;4:yellow;4:or[%s,%s];4:green;4:and[%s,%s];4:implies[%s,%s];4:yellow;4:size1;4:size2;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[rectangle,or[or[not[apply(size-leq,iota(filter(x.s, size1)))],blue],blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:or[%s,%s];4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue;4:blue;1:%s.o;2:x
'λx.apply(and[not[triangle],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:triangle;4:blue;1:%s.o;2:x
'λx.apply(not[and[apply(same_size,x.o),and[implies[not[circle],size3],blue]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:implies[%s,%s];4:not[%s];4:circle;4:size3;4:blue;1:%s.o;2:x
'λx.forall(size3,filter(filter(x.s, green), rectangle))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle
'λx.apply(and[size3,circle],iota(filter(filter(filter(filter(filter(filter(x.s, and[yellow,size2]), blue), size2), circle), circle), or[size2,green])))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size2;4:blue;4:size2;4:circle;4:circle;4:or[%s,%s];4:size2;4:green
'λx.apply(or[yellow,size3],iota(filter(filter(filter(filter(filter(x.s, size2), circle), blue), yellow), apply(same_shape,x.o))))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle;4:blue;4:yellow;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(and[nand[blue,yellow],size1],iota(filter(x.s, apply(size-leq,iota(x.s)))))'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:blue;4:yellow;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[not[or[size2,blue]],size1],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:not[%s];4:or[%s,%s];4:size2;4:blue;4:size1;1:%s.o;2:x
'λx.apply(and[apply(same_size,iota(x.s)),yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[triangle,not[rectangle]],size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:not[%s];4:rectangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[not[apply(same_size,x.o)],yellow],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow;1:%s.o;2:x
'λx.apply(nor[and[blue,rectangle],apply(size-lt,iota(x.s))],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:blue;4:rectangle;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(nand[not[circle],green],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:not[%s];4:circle;4:green;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(x.s, and[apply(same_color,x.o),not[yellow]]), blue)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:yellow;4:blue
'λx.contains(iota(x.s), filter(filter(x.s, rectangle), circle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle
'λx.apply(or[apply(same_color,iota(filter(filter(x.s, and[triangle,and[triangle,yellow]]), not[circle]))),size3],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:and[%s,%s];4:triangle;4:yellow;4:not[%s];4:circle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[nand[and[nand[rectangle,apply(same_color,iota(x.s))],blue],nand[size1,apply(size-gt,x.o)]],apply(same_color,iota(x.s))],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:blue;4:nand[%s,%s];4:size1;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(nor[yellow,size1],iota(filter(filter(filter(x.s, and[rectangle,nand[circle,circle]]), not[or[or[green,size2],green]]), size3)))'	0:apply(%s,%s);4:nor[%s,%s];4:yellow;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:nand[%s,%s];4:circle;4:circle;4:not[%s];4:or[%s,%s];4:or[%s,%s];4:green;4:size2;4:green;4:size3
'λx.apply(and[apply(same_size,iota(filter(filter(filter(filter(filter(x.s, triangle), circle), apply(same_shape,iota(filter(x.s, or[and[blue,triangle],rectangle])))), not[nor[rectangle,size3]]), or[or[apply(same_shape,iota(x.s)),size2],size1]))),yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:blue;4:triangle;4:rectangle;4:not[%s];4:nor[%s,%s];4:rectangle;4:size3;4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size2;4:size1;4:yellow;1:%s.o;2:x
'λx.apply(not[size2],iota(filter(filter(x.s, blue), blue)))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue
'λx.apply(and[apply(same_color,iota(x.s)),yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:yellow;1:%s.o;2:x
'λx.contains(iota(filter(x.s, and[and[circle,apply(same_size,iota(x.s))],not[circle]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:not[%s];4:circle;3:%s.s;2:x
'λx.apply(triangle,iota(filter(x.s, and[and[or[green,or[yellow,implies[rectangle,rectangle]]],blue],or[iff[green,size2],apply(size-leq,iota(x.s))]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:green;4:or[%s,%s];4:yellow;4:implies[%s,%s];4:rectangle;4:rectangle;4:blue;4:or[%s,%s];4:iff[%s,%s];4:green;4:size2;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x
'λx.apply(not[apply(size-gt,iota(filter(filter(x.s, implies[yellow,size3]), yellow)))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:yellow;4:size3;4:yellow;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(x.s, and[blue,not[and[size2,circle]]]), size3)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:not[%s];4:and[%s,%s];4:size2;4:circle;4:size3
'λx.forall(circle,filter(filter(filter(filter(filter(x.s, circle), not[size2]), size2), yellow), yellow))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:size2;4:size2;4:yellow;4:yellow
'λx.apply(apply(same_size,iota(filter(x.s, green))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;1:%s.o;2:x
'λx.apply(and[and[and[rectangle,size2],and[size3,yellow]],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size2;4:and[%s,%s];4:size3;4:yellow;4:rectangle;1:%s.o;2:x
'λx.apply(and[iff[and[and[not[size2],blue],and[yellow,size3]],nor[apply(same_size,iota(filter(x.s, rectangle))),size2]],circle],iota(filter(filter(x.s, yellow), and[green,or[triangle,triangle]])))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size2;4:blue;4:and[%s,%s];4:yellow;4:size3;4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:green;4:or[%s,%s];4:triangle;4:triangle
'λx.apply(size3,iota(filter(filter(filter(x.s, rectangle), apply(size-lt,x.o)), blue)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:blue
'λx.apply(nor[or[not[implies[triangle,apply(same_size,x.o)]],circle],nor[size2,rectangle]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:or[%s,%s];4:not[%s];4:implies[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;4:nor[%s,%s];4:size2;4:rectangle;1:%s.o;2:x
'λx.apply(apply(size-geq,iota(filter(x.s, green))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;1:%s.o;2:x
'λx.exists(and[size1,or[green,and[size2,triangle]]], filter(filter(x.s, implies[apply(size-leq,iota(x.s)),or[yellow,not[and[blue,and[and[green,size3],and[size3,size1]]]]]]), circle))'	0:exists(%s, %s);4:and[%s,%s];4:size1;4:or[%s,%s];4:green;4:and[%s,%s];4:size2;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:not[%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:green;4:size3;4:and[%s,%s];4:size3;4:size1;4:circle
'λx.contains(x.o, filter(filter(filter(x.s, circle), size3), yellow))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3;4:yellow
'λx.apply(size2,iota(filter(filter(filter(x.s, yellow), triangle), yellow)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle;4:yellow
'λx.apply(or[green,iff[size1,size3]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:iff[%s,%s];4:size1;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(not[and[green,size3]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:green;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(not[and[green,size2]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:green;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(or[and[and[apply(size-leq,iota(filter(filter(filter(x.s, or[size2,rectangle]), size2), apply(same_color,iota(x.s))))),iff[apply(same_color,x.o),apply(same_size,iota(filter(x.s, size1)))]],size2],blue],iota(filter(x.s, nand[size1,green])))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:rectangle;4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:iff[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size1;4:green
'λx.exists(apply(same_shape,iota(filter(filter(x.s, blue), size1))), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1;3:%s.s;2:x
'λx.apply(implies[size3,size1],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size3;4:size1;1:%s.o;2:x
'λx.forall(or[implies[size1,size2],size1],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:implies[%s,%s];4:size1;4:size2;4:size1;3:%s.s;2:x
'λx.apply(implies[size1,size2],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size1;4:size2;1:%s.o;2:x
'λx.forall(blue,filter(filter(filter(filter(x.s, size1), and[blue,circle]), and[blue,rectangle]), size2))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:blue;4:circle;4:and[%s,%s];4:blue;4:rectangle;4:size2
'λx.apply(size1,iota(filter(filter(filter(x.s, nand[iff[apply(same_shape,iota(filter(filter(x.s, apply(same_shape,x.o)), rectangle))),green],or[size3,rectangle]]), not[yellow]), green)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle;4:green;4:or[%s,%s];4:size3;4:rectangle;4:not[%s];4:yellow;4:green
'λx.apply(and[rectangle,and[or[yellow,size3],blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:or[%s,%s];4:yellow;4:size3;4:blue;1:%s.o;2:x
'λx.apply(yellow,iota(filter(x.s, and[or[rectangle,or[and[apply(size-gt,iota(x.s)),circle],or[and[nor[size1,triangle],size2],size2]]],blue])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:size1;4:triangle;4:size2;4:size2;4:blue
'λx.apply(implies[apply(size-leq,iota(x.s)),green],iota(filter(x.s, not[blue])))'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.apply(and[or[blue,size1],triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:blue;4:size1;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(filter(filter(filter(x.s, apply(same_color,iota(x.s))), size1), triangle), circle), size3)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size1;4:triangle;4:circle;4:size3
'λx.apply(size3,iota(filter(x.s, not[and[green,apply(same_color,x.o)]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(apply(same_color,iota(filter(x.s, green))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;1:%s.o;2:x
'λx.apply(or[size3,and[and[rectangle,and[apply(size-gt,x.o),apply(size-gt,x.o)]],size2]],iota(filter(x.s, apply(same_size,x.o))))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(or[and[and[size3,size1],size2],apply(size-gt,x.o)],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:size1;4:size2;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:%s.o;2:x
'λx.empty(filter(filter(x.s, or[or[size2,size1],and[yellow,and[and[circle,size1],and[green,triangle]]]]), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:size2;4:size1;4:and[%s,%s];4:yellow;4:and[%s,%s];4:and[%s,%s];4:circle;4:size1;4:and[%s,%s];4:green;4:triangle;4:triangle
'λx.apply(and[size2,nor[or[yellow,or[rectangle,apply(same_size,x.o)]],apply(same_color,iota(x.s))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:nor[%s,%s];4:or[%s,%s];4:yellow;4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, nor[and[size1,or[size2,yellow]],blue])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:size2;4:yellow;4:blue
'λx.forall(blue,filter(filter(x.s, not[triangle]), apply(same_color,x.o)))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(not[and[size3,yellow]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size3;4:yellow;1:%s.o;2:x
'λx.apply(implies[rectangle,or[size2,triangle]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:rectangle;4:or[%s,%s];4:size2;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_color,iota(filter(filter(filter(x.s, green), circle), nand[or[green,yellow],circle]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:circle;4:nand[%s,%s];4:or[%s,%s];4:green;4:yellow;4:circle;1:%s.o;2:x
'λx.contains(iota(x.s), filter(x.s, and[rectangle,apply(same_size,x.o)]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(and[not[blue],and[not[yellow],not[not[triangle]]]],iota(filter(x.s, or[blue,circle])))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:blue;4:and[%s,%s];4:not[%s];4:yellow;4:not[%s];4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:circle
'λx.apply(or[blue,blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:blue;1:%s.o;2:x
'λx.apply(or[triangle,yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:yellow;1:%s.o;2:x
'λx.exists(and[implies[circle,blue],triangle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:implies[%s,%s];4:circle;4:blue;4:triangle;3:%s.s;2:x
'λx.apply(iff[triangle,apply(same_shape,iota(x.s))],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(filter(filter(x.s, yellow), rectangle), iff[yellow,triangle]), and[not[nor[iff[iff[triangle,apply(same_size,x.o)],and[size1,triangle]],rectangle]],nand[and[blue,circle],triangle]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle;4:iff[%s,%s];4:yellow;4:triangle;4:and[%s,%s];4:not[%s];4:nor[%s,%s];4:iff[%s,%s];4:iff[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:size1;4:triangle;4:rectangle;4:nand[%s,%s];4:and[%s,%s];4:blue;4:circle;4:triangle
'λx.contains(x.o, filter(filter(x.s, green), and[apply(same_color,iota(x.s)),circle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:circle
'λx.contains(iota(filter(filter(x.s, triangle), size1)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size1;3:%s.s;2:x
'λx.apply(or[size3,green],iota(filter(filter(filter(x.s, and[size3,size1]), and[apply(same_color,x.o),green]), iff[or[yellow,green],size2])))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green;4:iff[%s,%s];4:or[%s,%s];4:yellow;4:green;4:size2
'λx.empty(filter(filter(filter(filter(filter(x.s, yellow), size1), size2), size3), or[green,apply(same_size,x.o)]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;4:size2;4:size3;4:or[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(and[not[and[not[and[blue,or[size3,blue]]],or[blue,and[size1,iff[apply(size-lt,x.o),or[green,apply(same_color,x.o)]]]]]],or[yellow,rectangle]],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:blue;4:or[%s,%s];4:size3;4:blue;4:or[%s,%s];4:blue;4:and[%s,%s];4:size1;4:iff[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:or[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:or[%s,%s];4:yellow;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(blue,iota(filter(filter(x.s, circle), rectangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle
'λx.apply(and[size3,not[and[implies[yellow,blue],and[not[apply(size-geq,iota(x.s))],triangle]]]],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:not[%s];4:and[%s,%s];4:implies[%s,%s];4:yellow;4:blue;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(triangle,iota(filter(filter(x.s, not[circle]), size2)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:size2
'λx.apply(apply(size-geq,iota(filter(filter(filter(x.s, green), and[blue,or[size3,size1]]), blue))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:blue;4:or[%s,%s];4:size3;4:size1;4:blue;1:%s.o;2:x
'λx.exists(apply(same_size,x.o), filter(x.s, and[and[apply(size-lt,x.o),size3],green]))'	0:exists(%s, %s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:size3;4:green
'λx.apply(not[yellow],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(not[and[nor[size2,not[green]],size1]],iota(filter(filter(x.s, not[circle]), size1)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:nor[%s,%s];4:size2;4:not[%s];4:green;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:size1
'λx.exists(triangle, filter(x.s, yellow))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.forall(size2,filter(x.s, triangle))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.forall(size3,filter(x.s, triangle))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.forall(size1,filter(x.s, triangle))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(and[size1,size2],iota(filter(filter(filter(filter(x.s, yellow), blue), rectangle), apply(same_color,iota(filter(filter(filter(filter(filter(x.s, green), size3), or[green,not[blue]]), blue), size3))))))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:blue;4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size3;4:or[%s,%s];4:green;4:not[%s];4:blue;4:blue;4:size3
'λx.apply(triangle,iota(filter(x.s, apply(same_size,iota(x.s)))))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size2,nand[yellow,circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:nand[%s,%s];4:yellow;4:circle;1:%s.o;2:x
'λx.forall(and[size2,blue],filter(filter(filter(x.s, apply(same_size,iota(filter(x.s, size1)))), yellow), apply(same_size,x.o)))'	0:forall(%s,%s);4:and[%s,%s];4:size2;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(or[and[rectangle,and[size2,size2]],green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:size2;4:size2;4:green;1:%s.o;2:x
'λx.exists(apply(same_color,iota(x.s)), filter(x.s, or[size2,size3]))'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:size3
'λx.empty(filter(filter(x.s, rectangle), and[size3,blue]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:size3;4:blue
'λx.forall(or[or[not[size1],green],circle],filter(filter(x.s, and[implies[size3,blue],rectangle]), nand[triangle,green]))'	0:forall(%s,%s);4:or[%s,%s];4:or[%s,%s];4:not[%s];4:size1;4:green;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:implies[%s,%s];4:size3;4:blue;4:rectangle;4:nand[%s,%s];4:triangle;4:green
'λx.exists(or[green,apply(same_shape,iota(filter(x.s, apply(same_shape,iota(x.s)))))], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.forall(and[triangle,and[circle,size2]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:circle;4:size2;3:%s.s;2:x
'λx.apply(not[implies[blue,not[and[implies[apply(size-gt,x.o),not[rectangle]],size3]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:implies[%s,%s];4:blue;4:not[%s];4:and[%s,%s];4:implies[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:not[%s];4:rectangle;4:size3;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, and[and[rectangle,not[size2]],or[blue,blue]]), rectangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:not[%s];4:size2;4:or[%s,%s];4:blue;4:blue;4:rectangle
'λx.apply(and[apply(size-leq,iota(x.s)),and[not[size1],yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:size1;4:yellow;1:%s.o;2:x
'λx.forall(or[circle,blue],filter(filter(x.s, triangle), blue))'	0:forall(%s,%s);4:or[%s,%s];4:circle;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue
'λx.apply(blue,iota(filter(x.s, or[blue,apply(same_shape,iota(x.s))])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,x.o)'	0:apply(%s,%s);4:triangle;1:%s.o;2:x
'λx.exists(size1, filter(x.s, apply(same_shape,iota(x.s))))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(and[circle,circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:circle;1:%s.o;2:x
'λx.contains(iota(filter(x.s, yellow)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;3:%s.s;2:x
'λx.exists(and[circle,and[size2,size1]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:circle;4:and[%s,%s];4:size2;4:size1;3:%s.s;2:x
'λx.apply(and[or[or[apply(same_color,iota(x.s)),blue],circle],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:blue;4:circle;4:blue;1:%s.o;2:x
'λx.apply(iff[and[green,iff[green,size1]],apply(size-gt,iota(filter(x.s, apply(same_size,iota(x.s)))))],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:green;4:iff[%s,%s];4:green;4:size1;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(nand[iff[not[rectangle],size1],and[rectangle,or[size1,size2]]],iota(filter(filter(x.s, size2), implies[or[circle,and[not[green],size3]],apply(same_color,x.o)])))'	0:apply(%s,%s);4:nand[%s,%s];4:iff[%s,%s];4:not[%s];4:rectangle;4:size1;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:size1;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:implies[%s,%s];4:or[%s,%s];4:circle;4:and[%s,%s];4:not[%s];4:green;4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(and[size2,or[triangle,and[implies[or[rectangle,rectangle],blue],size2]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:or[%s,%s];4:triangle;4:and[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:rectangle;4:rectangle;4:blue;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(x.s, and[circle,rectangle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:rectangle
'λx.apply(not[nand[size3,rectangle]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:nand[%s,%s];4:size3;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[and[size2,green],apply(same_color,iota(filter(x.s, not[rectangle])))],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:size2;4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[nor[size3,or[nand[triangle,rectangle],size3]],size2],iota(filter(x.s, iff[size1,green])))'	0:apply(%s,%s);4:or[%s,%s];4:nor[%s,%s];4:size3;4:or[%s,%s];4:nand[%s,%s];4:triangle;4:rectangle;4:size3;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size1;4:green
'λx.contains(iota(filter(filter(filter(filter(x.s, and[circle,yellow]), triangle), apply(same_color,x.o)), nand[yellow,rectangle])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:yellow;4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:nand[%s,%s];4:yellow;4:rectangle;3:%s.s;2:x
'λx.forall(and[nor[and[not[yellow],and[green,and[and[and[blue,green],apply(same_color,x.o)],and[implies[implies[or[size1,size2],yellow],circle],triangle]]]],and[yellow,not[blue]]],blue],filter(filter(filter(filter(filter(x.s, size3), apply(same_size,x.o)), or[blue,size1]), size1), blue))'	0:forall(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:not[%s];4:yellow;4:and[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:implies[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:size1;4:size2;4:yellow;4:circle;4:triangle;4:and[%s,%s];4:yellow;4:not[%s];4:blue;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:blue;4:size1;4:size1;4:blue
'λx.forall(size2,filter(filter(x.s, circle), or[size2,size2]))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:size2;4:size2
'λx.forall(yellow,filter(filter(x.s, size1), circle))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle
'λx.apply(and[and[rectangle,or[or[apply(same_color,x.o),size2],circle]],triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:rectangle;4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size2;4:circle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(x.s), filter(x.s, nor[or[size1,and[rectangle,and[not[yellow],or[circle,not[apply(same_color,iota(x.s))]]]]],and[nor[yellow,size1],or[yellow,size1]]]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:or[%s,%s];4:size1;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:not[%s];4:yellow;4:or[%s,%s];4:circle;4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:yellow;4:size1;4:or[%s,%s];4:yellow;4:size1
'λx.apply(green,iota(filter(filter(filter(x.s, circle), circle), and[green,not[yellow]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:circle;4:and[%s,%s];4:green;4:not[%s];4:yellow
'λx.apply(and[and[rectangle,green],iff[or[blue,and[apply(same_shape,x.o),and[triangle,and[size3,and[blue,and[and[or[green,size1],or[and[and[yellow,and[blue,and[not[triangle],triangle]]],circle],or[size2,nand[apply(same_color,x.o),or[green,rectangle]]]]],triangle]]]]]],or[green,circle]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:rectangle;4:green;4:iff[%s,%s];4:or[%s,%s];4:blue;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:triangle;4:and[%s,%s];4:size3;4:and[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:green;4:size1;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:blue;4:and[%s,%s];4:not[%s];4:triangle;4:triangle;4:circle;4:or[%s,%s];4:size2;4:nand[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:or[%s,%s];4:green;4:rectangle;4:triangle;4:or[%s,%s];4:green;4:circle;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(x.s, nand[size1,circle]), apply(same_shape,iota(x.s)))))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size1;4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(and[apply(same_color,iota(filter(x.s, size3))),not[iff[or[or[yellow,and[and[and[yellow,nor[circle,size1]],implies[apply(same_color,x.o),and[yellow,and[triangle,and[apply(same_color,iota(x.s)),green]]]]],size1]],not[and[blue,yellow]]],rectangle]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:iff[%s,%s];4:or[%s,%s];4:or[%s,%s];4:yellow;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:nor[%s,%s];4:circle;4:size1;4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:yellow;4:and[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:green;4:size1;4:not[%s];4:and[%s,%s];4:blue;4:yellow;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, blue)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(filter(x.s, iff[green,nor[size3,not[not[size3]]]]), size3), or[and[and[size1,and[not[blue],and[not[or[size1,or[green,size2]]],blue]]],circle],apply(size-lt,iota(filter(x.s, triangle)))])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:green;4:nor[%s,%s];4:size3;4:not[%s];4:not[%s];4:size3;4:size3;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:not[%s];4:blue;4:and[%s,%s];4:not[%s];4:or[%s,%s];4:size1;4:or[%s,%s];4:green;4:size2;4:blue;4:circle;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.contains(x.o, filter(filter(x.s, size2), apply(same_color,iota(filter(x.s, triangle)))))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.contains(iota(filter(filter(x.s, and[blue,triangle]), size1)), filter(x.s, size3))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:triangle;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.forall(apply(size-geq,x.o),filter(filter(x.s, rectangle), size2))'	0:forall(%s,%s);4:apply(%s,%s);5:size-geq;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2
'λx.exists(apply(same_color,x.o), filter(x.s, size1))'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.forall(iff[triangle,green],x.s)'	0:forall(%s,%s);4:iff[%s,%s];4:triangle;4:green;3:%s.s;2:x
'λx.apply(not[circle],iota(filter(filter(x.s, size3), and[size3,circle])))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:size3;4:circle
'λx.contains(x.o, filter(x.s, rectangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.exists(triangle, filter(x.s, iff[size3,rectangle]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size3;4:rectangle
'λx.apply(not[size3],iota(filter(x.s, and[apply(same_shape,x.o),size1])))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1
'λx.apply(and[apply(same_size,x.o),or[triangle,and[or[yellow,or[blue,and[or[size1,or[and[triangle,triangle],implies[rectangle,and[yellow,size3]]]],size1]]],and[yellow,or[blue,size3]]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:triangle;4:and[%s,%s];4:or[%s,%s];4:yellow;4:or[%s,%s];4:blue;4:and[%s,%s];4:or[%s,%s];4:size1;4:or[%s,%s];4:and[%s,%s];4:triangle;4:triangle;4:implies[%s,%s];4:rectangle;4:and[%s,%s];4:yellow;4:size3;4:size1;4:and[%s,%s];4:yellow;4:or[%s,%s];4:blue;4:size3;1:%s.o;2:x
'λx.apply(and[green,not[triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:not[%s];4:triangle;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(x.s, circle), triangle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle
'λx.apply(not[not[nor[and[or[not[or[yellow,blue]],yellow],or[or[size1,or[yellow,green]],size3]],apply(size-gt,x.o)]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:nor[%s,%s];4:and[%s,%s];4:or[%s,%s];4:not[%s];4:or[%s,%s];4:yellow;4:blue;4:yellow;4:or[%s,%s];4:or[%s,%s];4:size1;4:or[%s,%s];4:yellow;4:green;4:size3;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:%s.o;2:x
'λx.forall(apply(same_size,x.o),filter(x.s, rectangle))'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(size3,iota(filter(x.s, and[yellow,iff[circle,size2]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:iff[%s,%s];4:circle;4:size2
'λx.forall(apply(same_shape,x.o),filter(x.s, green))'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.forall(apply(same_shape,x.o),filter(x.s, size3))'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(apply(same_size,iota(filter(filter(x.s, size1), not[yellow]))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:not[%s];4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(filter(x.s, not[apply(same_shape,x.o)]), circle), not[blue])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;4:not[%s];4:blue
'λx.apply(or[size3,yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:yellow;1:%s.o;2:x
'λx.empty(filter(filter(x.s, and[green,green]), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:green;4:blue
'λx.apply(or[size1,size3],iota(filter(filter(filter(filter(filter(x.s, circle), green), green), and[implies[apply(same_color,iota(x.s)),circle],green]), green)))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green;4:green;4:and[%s,%s];4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:circle;4:green;4:green
'λx.contains(iota(filter(filter(filter(filter(x.s, size2), apply(same_shape,x.o)), rectangle), size1)), filter(filter(x.s, not[not[circle]]), size2))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:circle;4:size2
'λx.contains(iota(filter(x.s, apply(same_size,x.o))), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(or[size3,apply(same_color,iota(x.s))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(and[circle,apply(same_shape,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.contains(x.o, filter(filter(filter(x.s, size1), blue), apply(same_shape,iota(x.s))))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.exists(rectangle, filter(filter(filter(x.s, size2), blue), and[nand[or[green,size3],circle],green]))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue;4:and[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:green;4:size3;4:circle;4:green
'λx.forall(yellow,filter(filter(x.s, or[not[blue],triangle]), size1))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:blue;4:triangle;4:size1
'λx.forall(or[circle,circle],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:circle;4:circle;3:%s.s;2:x
'λx.apply(or[or[size1,and[iff[rectangle,apply(same_size,x.o)],size1]],yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:size1;4:and[%s,%s];4:iff[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1;4:yellow;1:%s.o;2:x
'λx.exists(and[and[or[or[iff[not[size1],circle],not[or[size2,apply(same_shape,iota(filter(x.s, not[blue])))]]],yellow],or[implies[size2,green],rectangle]],blue], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:iff[%s,%s];4:not[%s];4:size1;4:circle;4:not[%s];4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:yellow;4:or[%s,%s];4:implies[%s,%s];4:size2;4:green;4:rectangle;4:blue;3:%s.s;2:x
'λx.exists(not[size2], filter(x.s, green))'	0:exists(%s, %s);4:not[%s];4:size2;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.exists(not[size1], filter(x.s, size3))'	0:exists(%s, %s);4:not[%s];4:size1;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(not[size2], filter(x.s, size2))'	0:exists(%s, %s);4:not[%s];4:size2;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(size2,iota(filter(filter(filter(x.s, rectangle), circle), green)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle;4:green
'λx.forall(or[not[or[size3,size1]],circle],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:not[%s];4:or[%s,%s];4:size3;4:size1;4:circle;3:%s.s;2:x
'λx.apply(and[iff[and[size1,blue],blue],size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:size1;4:blue;4:blue;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(filter(filter(filter(filter(x.s, green), size3), yellow), yellow), blue), rectangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size3;4:yellow;4:yellow;4:blue;4:rectangle
'λx.apply(nand[yellow,green],iota(filter(filter(x.s, blue), size1)))'	0:apply(%s,%s);4:nand[%s,%s];4:yellow;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1
'λx.apply(iff[circle,or[nand[size2,and[rectangle,not[and[apply(same_size,iota(x.s)),and[size3,apply(same_shape,iota(x.s))]]]]],iff[size1,yellow]]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:iff[%s,%s];4:circle;4:or[%s,%s];4:nand[%s,%s];4:size2;4:and[%s,%s];4:rectangle;4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:iff[%s,%s];4:size1;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.exists(apply(size-gt,iota(x.s)), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(and[not[size1],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size1;4:size1;1:%s.o;2:x
'λx.apply(nand[rectangle,yellow],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:rectangle;4:yellow;1:%s.o;2:x
'λx.exists(circle, filter(filter(filter(x.s, circle), circle), or[nor[size2,triangle],apply(same_color,x.o)]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:circle;4:or[%s,%s];4:nor[%s,%s];4:size2;4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(implies[and[yellow,triangle],nor[green,size1]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:yellow;4:triangle;4:nor[%s,%s];4:green;4:size1;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, triangle), blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue
'λx.apply(and[or[size3,triangle],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size3;4:triangle;4:rectangle;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, apply(same_color,iota(filter(filter(x.s, triangle), circle)))))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle
'λx.apply(apply(same_size,iota(filter(x.s, circle))),iota(filter(filter(x.s, circle), blue)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue
'λx.exists(apply(size-gt,x.o), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:size-gt;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(rectangle,iota(filter(x.s, and[or[size2,yellow],apply(same_color,iota(x.s))])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:size2;4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(x.s, and[circle,circle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:circle
'λx.forall(size1,filter(filter(filter(filter(filter(filter(x.s, triangle), triangle), implies[apply(same_color,iota(filter(filter(filter(filter(x.s, green), size1), size3), not[rectangle]))),apply(same_color,iota(x.s))]), nand[implies[rectangle,nand[implies[or[blue,rectangle],circle],or[triangle,blue]]],blue]), apply(same_shape,x.o)), size2))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:triangle;4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1;4:size3;4:not[%s];4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:nand[%s,%s];4:implies[%s,%s];4:rectangle;4:nand[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:blue;4:rectangle;4:circle;4:or[%s,%s];4:triangle;4:blue;4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2
'λx.apply(and[and[and[blue,and[and[and[yellow,rectangle],circle],circle]],nand[rectangle,triangle]],implies[size2,apply(size-gt,iota(filter(x.s, blue)))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:rectangle;4:circle;4:circle;4:nand[%s,%s];4:rectangle;4:triangle;4:implies[%s,%s];4:size2;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.apply(or[circle,blue],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(or[not[apply(size-gt,x.o)],nor[triangle,green]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:nor[%s,%s];4:triangle;4:green;1:%s.o;2:x
'λx.apply(implies[and[size1,size2],not[green]],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:size1;4:size2;4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(size1,iota(filter(filter(x.s, apply(size-leq,x.o)), or[circle,green])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:or[%s,%s];4:circle;4:green
'λx.apply(size3,iota(filter(filter(filter(x.s, not[blue]), and[green,size1]), or[triangle,rectangle])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:and[%s,%s];4:green;4:size1;4:or[%s,%s];4:triangle;4:rectangle
'λx.apply(blue,iota(filter(filter(x.s, triangle), green)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green
'λx.contains(iota(filter(filter(x.s, or[circle,triangle]), and[size1,circle])), filter(filter(filter(x.s, size1), and[blue,blue]), implies[blue,and[and[green,implies[green,triangle]],blue]]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:triangle;4:and[%s,%s];4:size1;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:blue;4:blue;4:implies[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:green;4:implies[%s,%s];4:green;4:triangle;4:blue
'λx.apply(yellow,iota(filter(filter(filter(filter(filter(x.s, size1), size2), apply(size-gt,iota(x.s))), size3), not[blue])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:size3;4:not[%s];4:blue
'λx.apply(size1,iota(filter(filter(x.s, size2), and[not[circle],rectangle])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:not[%s];4:circle;4:rectangle
'λx.apply(rectangle,iota(filter(filter(x.s, apply(same_shape,x.o)), size2)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2
'λx.apply(iff[circle,or[blue,yellow]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:circle;4:or[%s,%s];4:blue;4:yellow;1:%s.o;2:x
'λx.apply(implies[green,not[circle]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:green;4:not[%s];4:circle;1:%s.o;2:x
'λx.apply(and[iff[size2,and[or[or[circle,blue],size3],green]],size1],iota(filter(filter(filter(filter(filter(x.s, circle), triangle), size2), and[blue,rectangle]), and[rectangle,triangle])))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:size2;4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:circle;4:blue;4:size3;4:green;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle;4:size2;4:and[%s,%s];4:blue;4:rectangle;4:and[%s,%s];4:rectangle;4:triangle
'λx.apply(blue,iota(filter(filter(x.s, triangle), and[and[circle,rectangle],green])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:and[%s,%s];4:circle;4:rectangle;4:green
'λx.apply(yellow,iota(filter(x.s, and[blue,circle])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:circle
'λx.exists(yellow, filter(filter(filter(x.s, and[or[or[rectangle,circle],and[apply(same_shape,iota(filter(filter(filter(x.s, circle), or[nor[yellow,or[or[size2,or[and[and[blue,size1],nor[size1,blue]],blue]],not[rectangle]]],nor[size2,nand[and[and[yellow,and[triangle,circle]],green],green]]]), size2))),size3]],green]), blue), size2))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:rectangle;4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:nor[%s,%s];4:yellow;4:or[%s,%s];4:or[%s,%s];4:size2;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:size1;4:nor[%s,%s];4:size1;4:blue;4:blue;4:not[%s];4:rectangle;4:nor[%s,%s];4:size2;4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:triangle;4:circle;4:green;4:green;4:size2;4:size3;4:green;4:blue;4:size2
'λx.empty(filter(filter(x.s, rectangle), not[green]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:green
'λx.forall(and[nand[circle,size1],apply(same_size,x.o)],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:circle;4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:%s.s;2:x
'λx.contains(iota(filter(filter(filter(x.s, or[size1,triangle]), apply(same_color,iota(x.s))), implies[size2,size3])), filter(filter(x.s, apply(same_color,x.o)), apply(size-lt,x.o)))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:implies[%s,%s];4:size2;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(x.s, or[and[or[not[yellow],and[yellow,size2]],iff[size3,implies[size1,apply(same_shape,iota(filter(x.s, implies[rectangle,or[rectangle,size3]])))]]],and[and[not[blue],size2],circle]]), or[size2,triangle])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:not[%s];4:yellow;4:and[%s,%s];4:yellow;4:size2;4:iff[%s,%s];4:size3;4:implies[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:rectangle;4:or[%s,%s];4:rectangle;4:size3;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:blue;4:size2;4:circle;4:or[%s,%s];4:size2;4:triangle
'λx.exists(triangle, filter(x.s, blue))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[size2,and[or[apply(same_shape,iota(x.s)),and[or[and[blue,apply(same_color,iota(filter(x.s, circle)))],size2],green]],rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size2;4:green;4:rectangle;1:%s.o;2:x
'λx.forall(not[green],filter(x.s, or[green,and[blue,or[size3,size1]]]))'	0:forall(%s,%s);4:not[%s];4:green;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:and[%s,%s];4:blue;4:or[%s,%s];4:size3;4:size1
'λx.empty(filter(filter(x.s, apply(same_color,x.o)), and[implies[rectangle,blue],green]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:implies[%s,%s];4:rectangle;4:blue;4:green
'λx.empty(filter(x.s, or[not[and[apply(same_size,x.o),circle]],size1]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;4:size1
'λx.apply(not[implies[green,circle]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:implies[%s,%s];4:green;4:circle;1:iota(%s);3:%s.s;2:x
'λx.exists(apply(size-leq,iota(x.s)), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(x.s, triangle), iff[green,apply(size-geq,iota(filter(x.s, triangle)))])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:iff[%s,%s];4:green;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(triangle,iota(filter(filter(filter(filter(x.s, rectangle), blue), not[blue]), yellow)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue;4:not[%s];4:blue;4:yellow
'λx.apply(implies[size3,triangle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size3;4:triangle;1:%s.o;2:x
'λx.forall(and[apply(size-geq,iota(x.s)),green],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:green;3:%s.s;2:x
'λx.apply(triangle,iota(filter(x.s, or[yellow,nand[size3,and[yellow,and[rectangle,blue]]]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:nand[%s,%s];4:size3;4:and[%s,%s];4:yellow;4:and[%s,%s];4:rectangle;4:blue
'λx.apply(and[blue,green],iota(filter(x.s, green)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(not[blue],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(filter(x.s, green), apply(same_size,iota(filter(filter(filter(x.s, yellow), size3), triangle)))), rectangle), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size3;4:triangle;4:rectangle;4:circle
'λx.exists(or[rectangle,implies[blue,or[blue,or[not[circle],apply(same_size,iota(x.s))]]]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:rectangle;4:implies[%s,%s];4:blue;4:or[%s,%s];4:blue;4:or[%s,%s];4:not[%s];4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.empty(filter(filter(x.s, and[size2,apply(same_size,iota(filter(x.s, green)))]), not[yellow]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:yellow
'λx.contains(iota(filter(x.s, green)), filter(x.s, blue))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(triangle,iota(filter(x.s, and[blue,rectangle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:rectangle
'λx.apply(apply(same_size,iota(x.s)),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.forall(not[size2],filter(x.s, apply(same_shape,iota(filter(x.s, apply(same_shape,iota(x.s)))))))'	0:forall(%s,%s);4:not[%s];4:size2;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(and[not[apply(size-gt,x.o)],and[apply(same_color,iota(x.s)),rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:rectangle;1:%s.o;2:x
'λx.apply(not[blue],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(rectangle,iota(filter(filter(filter(x.s, and[size2,circle]), green), size1)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:circle;4:green;4:size1
'λx.exists(yellow, filter(filter(filter(filter(filter(x.s, size2), size3), and[size2,size2]), blue), rectangle))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3;4:and[%s,%s];4:size2;4:size2;4:blue;4:rectangle
'λx.apply(apply(same_shape,iota(filter(filter(x.s, rectangle), size1))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, or[blue,and[and[apply(same_size,x.o),triangle],and[circle,size2]]]), not[size3])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle;4:and[%s,%s];4:circle;4:size2;4:not[%s];4:size3
'λx.apply(or[size3,apply(size-gt,x.o)],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, or[size2,apply(same_shape,iota(x.s))]), size3), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size3;4:yellow
'λx.empty(filter(filter(filter(x.s, triangle), or[circle,apply(size-leq,iota(filter(x.s, size3)))]), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:or[%s,%s];4:circle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle
'λx.apply(and[rectangle,blue],iota(filter(x.s, apply(same_size,x.o))))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(or[size2,yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:yellow;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(x.s, and[nor[and[and[size1,or[implies[size3,not[green]],and[not[circle],green]]],and[blue,triangle]],not[green]],apply(same_size,x.o)]), apply(same_color,iota(filter(filter(x.s, green), size1))))))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:implies[%s,%s];4:size3;4:not[%s];4:green;4:and[%s,%s];4:not[%s];4:circle;4:green;4:and[%s,%s];4:blue;4:triangle;4:not[%s];4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1
'λx.apply(nand[rectangle,circle],iota(filter(x.s, iff[size1,and[circle,nor[size2,and[and[and[triangle,size1],blue],size1]]]])))'	0:apply(%s,%s);4:nand[%s,%s];4:rectangle;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size1;4:and[%s,%s];4:circle;4:nor[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:size1;4:blue;4:size1
'λx.apply(and[not[blue],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:blue;4:circle;1:%s.o;2:x
'λx.empty(filter(filter(x.s, yellow), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green
'λx.empty(filter(filter(filter(filter(x.s, apply(same_shape,x.o)), yellow), size3), apply(same_color,iota(filter(x.s, size2)))))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow;4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.empty(filter(filter(x.s, yellow), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2
'λx.apply(blue,iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.contains(iota(filter(filter(filter(x.s, circle), size3), size3)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3;4:size3;3:%s.s;2:x
'λx.apply(circle,iota(filter(x.s, or[nor[and[and[size1,triangle],size2],size2],size3])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:triangle;4:size2;4:size2;4:size3
'λx.contains(iota(filter(x.s, size1)), filter(x.s, and[size2,rectangle]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:rectangle
'λx.exists(and[size3,circle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:size3;4:circle;3:%s.s;2:x
'λx.exists(apply(same_color,iota(x.s)), filter(filter(x.s, yellow), green))'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green
'λx.apply(and[implies[and[size1,size3],or[size2,rectangle]],and[size1,rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:size1;4:size3;4:or[%s,%s];4:size2;4:rectangle;4:and[%s,%s];4:size1;4:rectangle;1:%s.o;2:x
'λx.apply(or[not[apply(same_color,iota(filter(x.s, and[yellow,size3])))],yellow],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size3;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.exists(and[size1,circle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:size1;4:circle;3:%s.s;2:x
'λx.apply(or[size2,nor[size3,size1]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:nor[%s,%s];4:size3;4:size1;1:%s.o;2:x
'λx.apply(nor[blue,or[green,rectangle]],iota(filter(x.s, and[rectangle,and[and[and[size2,apply(same_size,x.o)],size1],or[and[rectangle,or[green,circle]],rectangle]]])))'	0:apply(%s,%s);4:nor[%s,%s];4:blue;4:or[%s,%s];4:green;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:or[%s,%s];4:green;4:circle;4:rectangle
'λx.apply(nor[size2,size1],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:nor[%s,%s];4:size2;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.forall(yellow,filter(filter(filter(filter(filter(x.s, circle), triangle), size3), size3), triangle))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle;4:size3;4:size3;4:triangle
'λx.apply(and[size2,yellow],iota(filter(x.s, not[blue])))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.apply(and[not[not[rectangle]],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:not[%s];4:rectangle;4:circle;1:%s.o;2:x
'λx.exists(yellow, filter(filter(filter(filter(filter(filter(filter(filter(x.s, triangle), or[blue,green]), green), apply(same_size,x.o)), blue), size2), nand[rectangle,blue]), size3))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:or[%s,%s];4:blue;4:green;4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;4:size2;4:nand[%s,%s];4:rectangle;4:blue;4:size3
'λx.apply(and[or[apply(same_shape,x.o),triangle],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle;4:blue;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(filter(x.s, not[size1]), yellow), size3)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:yellow;4:size3
'λx.empty(filter(filter(x.s, implies[yellow,rectangle]), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:yellow;4:rectangle;4:green
'λx.apply(implies[size1,blue],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:size1;4:blue;1:iota(%s);3:%s.s;2:x
'λx.exists(and[and[green,size3],blue], filter(x.s, triangle))'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:green;4:size3;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(and[not[triangle],triangle],iota(filter(filter(filter(filter(filter(x.s, implies[circle,or[rectangle,triangle]]), yellow), and[rectangle,not[blue]]), circle), size2)))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:triangle;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:circle;4:or[%s,%s];4:rectangle;4:triangle;4:yellow;4:and[%s,%s];4:rectangle;4:not[%s];4:blue;4:circle;4:size2
'λx.apply(not[or[size3,iff[blue,yellow]]],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:size3;4:iff[%s,%s];4:blue;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(not[and[and[blue,circle],size3]], filter(x.s, blue))'	0:exists(%s, %s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:circle;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(circle,iota(filter(filter(filter(x.s, apply(same_size,x.o)), and[not[size1],rectangle]), size2)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:not[%s];4:size1;4:rectangle;4:size2
'λx.apply(rectangle,iota(filter(x.s, and[green,circle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:circle
'λx.apply(apply(same_color,iota(x.s)),iota(filter(x.s, green)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(or[triangle,blue],iota(filter(filter(filter(filter(x.s, blue), circle), not[size3]), rectangle)))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle;4:not[%s];4:size3;4:rectangle
'λx.apply(apply(same_color,iota(x.s)),iota(filter(x.s, size2)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(circle,iota(filter(filter(x.s, yellow), apply(same_shape,iota(x.s)))))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[and[implies[not[and[circle,rectangle]],green],size2],not[apply(size-lt,iota(x.s))]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:not[%s];4:and[%s,%s];4:circle;4:rectangle;4:green;4:size2;4:not[%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.forall(or[blue,not[size2]],filter(x.s, and[size3,blue]))'	0:forall(%s,%s);4:or[%s,%s];4:blue;4:not[%s];4:size2;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:blue
'λx.forall(yellow,x.s)'	0:forall(%s,%s);4:yellow;3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, size1), size1), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1;4:triangle
'λx.apply(apply(size-gt,iota(filter(x.s, triangle))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size3,and[not[apply(size-gt,x.o)],and[apply(same_color,iota(x.s)),apply(same_color,iota(x.s))]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(and[size3,or[green,yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:or[%s,%s];4:green;4:yellow;1:%s.o;2:x
'λx.apply(and[and[size3,triangle],or[size2,circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size3;4:triangle;4:or[%s,%s];4:size2;4:circle;1:%s.o;2:x
'λx.forall(nor[and[circle,or[yellow,yellow]],and[triangle,size1]],filter(x.s, blue))'	0:forall(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:circle;4:or[%s,%s];4:yellow;4:yellow;4:and[%s,%s];4:triangle;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.forall(and[apply(same_color,iota(filter(filter(x.s, nor[yellow,triangle]), green))),size3],filter(filter(filter(x.s, green), size2), circle))'	0:forall(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:yellow;4:triangle;4:green;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size2;4:circle
'λx.empty(filter(x.s, and[circle,green]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:green
'λx.apply(not[triangle],x.o)'	0:apply(%s,%s);4:not[%s];4:triangle;1:%s.o;2:x
'λx.apply(and[not[green],and[green,size3]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:green;4:and[%s,%s];4:green;4:size3;1:iota(%s);3:%s.s;2:x
'λx.exists(triangle, filter(filter(x.s, rectangle), size3))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3
'λx.forall(not[triangle],filter(x.s, size2))'	0:forall(%s,%s);4:not[%s];4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(and[and[not[apply(same_size,iota(filter(x.s, size2)))],implies[yellow,size2]],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:implies[%s,%s];4:yellow;4:size2;4:yellow;1:%s.o;2:x
'λx.apply(implies[green,triangle],iota(filter(filter(filter(filter(filter(filter(x.s, size3), apply(same_color,x.o)), or[size2,size2]), yellow), and[rectangle,size2]), yellow)))'	0:apply(%s,%s);4:implies[%s,%s];4:green;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:or[%s,%s];4:size2;4:size2;4:yellow;4:and[%s,%s];4:rectangle;4:size2;4:yellow
'λx.apply(and[and[size1,or[green,triangle]],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:green;4:triangle;4:circle;1:%s.o;2:x
'λx.apply(not[triangle],iota(filter(filter(filter(x.s, and[blue,green]), rectangle), size2)))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:green;4:rectangle;4:size2
'λx.apply(not[and[size1,apply(size-lt,x.o)]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size1;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:%s.o;2:x
'λx.forall(triangle,filter(filter(filter(filter(filter(filter(x.s, yellow), size1), apply(same_size,x.o)), nor[and[apply(same_shape,x.o),apply(same_size,iota(filter(x.s, size1)))],nor[circle,size3]]), yellow), implies[triangle,or[nand[yellow,and[size2,size1]],or[blue,and[size2,green]]]]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:nor[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:nor[%s,%s];4:circle;4:size3;4:yellow;4:implies[%s,%s];4:triangle;4:or[%s,%s];4:nand[%s,%s];4:yellow;4:and[%s,%s];4:size2;4:size1;4:or[%s,%s];4:blue;4:and[%s,%s];4:size2;4:green
'λx.apply(green,iota(filter(filter(filter(x.s, triangle), triangle), blue)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:triangle;4:blue
'λx.forall(and[size2,and[apply(same_shape,iota(filter(filter(filter(filter(filter(filter(x.s, rectangle), apply(same_size,x.o)), nor[rectangle,rectangle]), yellow), circle), circle))),size1]],filter(x.s, circle))'	0:forall(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:nor[%s,%s];4:rectangle;4:rectangle;4:yellow;4:circle;4:circle;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.contains(iota(x.s), filter(filter(filter(x.s, yellow), blue), rectangle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:blue;4:rectangle
'λx.apply(green,iota(filter(filter(x.s, and[yellow,circle]), size3)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:circle;4:size3
'λx.apply(iff[apply(same_shape,iota(x.s)),not[blue]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:not[%s];4:blue;1:%s.o;2:x
'λx.exists(not[and[yellow,rectangle]], x.s)'	0:exists(%s, %s);4:not[%s];4:and[%s,%s];4:yellow;4:rectangle;3:%s.s;2:x
'λx.apply(and[and[nor[green,green],apply(same_shape,iota(filter(x.s, circle)))],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:green;4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size2;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(filter(x.s, size2), and[nand[not[size1],not[green]],size3]), nand[blue,size2])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:nand[%s,%s];4:not[%s];4:size1;4:not[%s];4:green;4:size3;4:nand[%s,%s];4:blue;4:size2
'λx.exists(or[size2,implies[blue,nand[yellow,size1]]], filter(filter(x.s, or[green,circle]), circle))'	0:exists(%s, %s);4:or[%s,%s];4:size2;4:implies[%s,%s];4:blue;4:nand[%s,%s];4:yellow;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:circle;4:circle
'λx.apply(and[rectangle,and[apply(same_color,iota(x.s)),rectangle]],iota(filter(filter(filter(filter(filter(x.s, rectangle), not[size3]), size2), apply(same_color,iota(filter(x.s, and[not[rectangle],nand[size1,circle]])))), green)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:size3;4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:rectangle;4:nand[%s,%s];4:size1;4:circle;4:green
'λx.apply(size2,iota(filter(filter(x.s, and[size2,size2]), size3)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:size2;4:size3
'λx.apply(circle,iota(filter(filter(x.s, size1), or[iff[and[circle,size2],and[green,not[not[and[apply(size-leq,iota(x.s)),blue]]]]],and[triangle,apply(same_shape,x.o)]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:or[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:circle;4:size2;4:and[%s,%s];4:green;4:not[%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(nand[or[size1,yellow],not[rectangle]],iota(filter(x.s, iff[rectangle,rectangle])))'	0:apply(%s,%s);4:nand[%s,%s];4:or[%s,%s];4:size1;4:yellow;4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:rectangle;4:rectangle
'λx.apply(and[rectangle,not[blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:not[%s];4:blue;1:%s.o;2:x
'λx.apply(and[iff[triangle,blue],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:triangle;4:blue;4:size2;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, circle), triangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle
'λx.apply(green,iota(filter(filter(x.s, and[size2,size3]), size2)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:size3;4:size2
'λx.apply(and[iff[blue,and[blue,blue]],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:blue;4:and[%s,%s];4:blue;4:blue;4:yellow;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(filter(filter(filter(x.s, circle), or[nor[and[green,green],or[yellow,nor[nor[green,not[triangle]],triangle]]],rectangle]), blue), size2), yellow)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:green;4:green;4:or[%s,%s];4:yellow;4:nor[%s,%s];4:nor[%s,%s];4:green;4:not[%s];4:triangle;4:triangle;4:rectangle;4:blue;4:size2;4:yellow
'λx.apply(and[not[size1],circle],iota(filter(filter(x.s, blue), or[rectangle,triangle])))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size1;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:rectangle;4:triangle
'λx.apply(or[size3,not[apply(size-geq,iota(filter(x.s, and[size1,apply(size-lt,x.o)])))]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:not[%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(apply(same_color,x.o),iota(filter(filter(x.s, size1), apply(size-leq,iota(filter(x.s, rectangle))))))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(apply(same_shape,iota(filter(filter(x.s, size2), yellow))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(and[apply(size-gt,x.o),blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(not[nor[and[nand[yellow,size2],size1],size3]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:nor[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:yellow;4:size2;4:size1;4:size3;1:iota(%s);3:%s.s;2:x
'λx.forall(apply(same_size,iota(x.s)),filter(x.s, apply(same_shape,iota(filter(x.s, size3)))))'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(rectangle,iota(filter(x.s, and[and[apply(same_color,x.o),and[not[size1],size1]],yellow])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:not[%s];4:size1;4:size1;4:yellow
'λx.empty(filter(x.s, not[rectangle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle
'λx.apply(not[yellow],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(not[not[and[triangle,apply(same_shape,iota(x.s))]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(and[apply(same_size,iota(x.s)),triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[yellow,apply(same_shape,iota(filter(x.s, and[rectangle,blue])))],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:blue;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(x.s, and[yellow,size1]), yellow)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size1;4:yellow
'λx.apply(or[triangle,size1],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.forall(green,filter(filter(x.s, not[not[apply(size-geq,iota(x.s))]]), and[size2,yellow]))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:yellow
'λx.forall(size3,filter(x.s, apply(same_size,iota(x.s))))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(and[or[and[not[size1],green],size3],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:not[%s];4:size1;4:green;4:size3;4:size3;1:%s.o;2:x
'λx.apply(and[green,not[size1]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:not[%s];4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[size2,nor[circle,and[triangle,apply(same_shape,x.o)]]],and[and[circle,green],triangle]],iota(filter(filter(x.s, size3), rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size2;4:nor[%s,%s];4:circle;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:and[%s,%s];4:circle;4:green;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle
'λx.apply(rectangle,iota(filter(filter(x.s, triangle), size3)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3
'λx.apply(and[blue,not[and[and[blue,triangle],yellow]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:triangle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(not[green],iota(filter(filter(x.s, or[apply(same_size,iota(filter(filter(filter(filter(x.s, not[green]), size3), or[apply(size-geq,x.o),circle]), and[size1,and[triangle,size1]]))),size1]), triangle)))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:size3;4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:circle;4:and[%s,%s];4:size1;4:and[%s,%s];4:triangle;4:size1;4:size1;4:triangle
'λx.exists(not[nand[blue,apply(same_size,x.o)]], filter(x.s, size1))'	0:exists(%s, %s);4:not[%s];4:nand[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(not[and[yellow,size3]], x.s)'	0:exists(%s, %s);4:not[%s];4:and[%s,%s];4:yellow;4:size3;3:%s.s;2:x
'λx.forall(nor[and[circle,apply(same_size,iota(filter(filter(x.s, size3), and[size3,triangle])))],size2],x.s)'	0:forall(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:size3;4:triangle;4:size2;3:%s.s;2:x
'λx.forall(yellow,filter(x.s, size3))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.forall(yellow,filter(x.s, size1))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.forall(yellow,filter(x.s, green))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[triangle,or[and[apply(same_color,iota(filter(filter(filter(x.s, size1), yellow), size3))),and[nand[yellow,triangle],apply(same_shape,iota(x.s))]],and[size1,size3]]],iota(filter(filter(filter(x.s, size1), yellow), size3)))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow;4:size3;4:and[%s,%s];4:nand[%s,%s];4:yellow;4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow;4:size3
'λx.apply(nor[apply(same_shape,iota(filter(x.s, size2))),green],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green;1:%s.o;2:x
'λx.apply(not[yellow],iota(filter(filter(filter(x.s, circle), rectangle), and[triangle,triangle])))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle;4:and[%s,%s];4:triangle;4:triangle
'λx.apply(not[not[yellow]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:yellow;1:%s.o;2:x
'λx.apply(and[yellow,and[green,apply(same_size,iota(filter(x.s, circle)))]],iota(filter(filter(x.s, and[size1,green]), yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:and[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:green;4:yellow
'λx.forall(and[and[triangle,size3],implies[size2,rectangle]],filter(x.s, green))'	0:forall(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:size3;4:implies[%s,%s];4:size2;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.contains(iota(filter(filter(filter(x.s, size3), size1), size1)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size1;4:size1;3:%s.s;2:x
'λx.apply(not[and[size1,circle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size1;4:circle;1:%s.o;2:x
'λx.forall(size2,filter(x.s, and[nand[not[apply(same_shape,iota(filter(x.s, iff[nor[and[and[triangle,and[and[size2,green],size2]],size2],blue],implies[nor[or[and[triangle,and[and[not[triangle],blue],size2]],size3],yellow],circle]])))],not[nand[triangle,size3]]],not[size3]]))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nand[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:and[%s,%s];4:size2;4:green;4:size2;4:size2;4:blue;4:implies[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:triangle;4:blue;4:size2;4:size3;4:yellow;4:circle;4:not[%s];4:nand[%s,%s];4:triangle;4:size3;4:not[%s];4:size3
'λx.apply(not[and[apply(same_color,iota(filter(filter(x.s, and[triangle,triangle]), implies[circle,size1]))),circle]],iota(filter(x.s, green)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:triangle;4:implies[%s,%s];4:circle;4:size1;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.empty(filter(filter(x.s, rectangle), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle
'λx.apply(and[not[size2],triangle],iota(filter(filter(x.s, nand[yellow,blue]), and[and[rectangle,size2],size1])))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size2;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:yellow;4:blue;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size2;4:size1
'λx.forall(not[triangle],x.s)'	0:forall(%s,%s);4:not[%s];4:triangle;3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(filter(x.s, circle), size3), blue)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3;4:blue
'λx.apply(or[and[apply(same_color,x.o),yellow],and[and[size3,or[not[yellow],or[nand[size2,green],size1]]],rectangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;4:and[%s,%s];4:and[%s,%s];4:size3;4:or[%s,%s];4:not[%s];4:yellow;4:or[%s,%s];4:nand[%s,%s];4:size2;4:green;4:size1;4:rectangle;1:%s.o;2:x
'λx.exists(and[size1,size3], filter(filter(filter(filter(x.s, size1), size3), size2), blue))'	0:exists(%s, %s);4:and[%s,%s];4:size1;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size3;4:size2;4:blue
'λx.apply(apply(same_size,iota(filter(filter(filter(x.s, size1), rectangle), and[green,not[rectangle]]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle;4:and[%s,%s];4:green;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.contains(x.o, filter(filter(filter(x.s, and[size3,and[circle,and[and[or[not[size2],rectangle],size2],triangle]]]), green), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:and[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:not[%s];4:size2;4:rectangle;4:size2;4:triangle;4:green;4:green
'λx.apply(and[apply(size-gt,iota(filter(filter(filter(filter(x.s, yellow), and[size1,size2]), size3), and[and[and[nand[apply(same_shape,x.o),size2],size3],blue],size3]))),circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:size1;4:size2;4:size3;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2;4:size3;4:blue;4:size3;4:circle;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, apply(size-leq,iota(x.s))), apply(same_size,x.o))))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(filter(x.s, circle), size3), yellow)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3;4:yellow
'λx.apply(triangle,iota(filter(filter(x.s, not[size2]), yellow)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:yellow
'λx.exists(yellow, filter(filter(x.s, circle), size1))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1
'λx.exists(yellow, filter(filter(x.s, circle), size3))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3
'λx.apply(iff[and[size1,blue],or[circle,triangle]],iota(filter(filter(x.s, size1), and[apply(size-leq,iota(x.s)),yellow])))'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:size1;4:blue;4:or[%s,%s];4:circle;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:yellow
'λx.exists(size3, filter(x.s, or[not[rectangle],triangle]))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:rectangle;4:triangle
'λx.contains(iota(filter(filter(filter(x.s, apply(same_shape,x.o)), triangle), and[and[green,and[and[not[triangle],size3],triangle]],size3])), filter(filter(filter(x.s, iff[rectangle,blue]), or[rectangle,size2]), or[nand[triangle,and[rectangle,rectangle]],triangle]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle;4:and[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:triangle;4:size3;4:triangle;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:rectangle;4:blue;4:or[%s,%s];4:rectangle;4:size2;4:or[%s,%s];4:nand[%s,%s];4:triangle;4:and[%s,%s];4:rectangle;4:rectangle;4:triangle
'λx.apply(and[apply(same_shape,x.o),and[size1,size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:size1;4:size3;1:%s.o;2:x
'λx.apply(not[blue],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(not[blue],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.empty(filter(x.s, green))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.empty(filter(x.s, size1))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.empty(filter(x.s, size2))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.empty(filter(x.s, size3))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(size2,iota(filter(x.s, size2)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(size2,iota(filter(x.s, size1)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(size2,iota(filter(x.s, size3)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(size3,iota(filter(x.s, size2)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(size3,iota(filter(x.s, size1)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(size3,iota(filter(x.s, size3)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(size1,iota(filter(x.s, size2)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(size1,iota(filter(x.s, size1)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(size1,iota(filter(x.s, size3)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(size3,iota(filter(x.s, green)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(size2,iota(filter(x.s, green)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(nor[iff[green,or[size1,not[yellow]]],size1],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:iff[%s,%s];4:green;4:or[%s,%s];4:size1;4:not[%s];4:yellow;4:size1;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(filter(filter(x.s, size1), circle), circle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle;4:circle;1:%s.o;2:x
'λx.forall(triangle,filter(x.s, yellow))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.exists(blue, filter(x.s, blue))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[not[rectangle],nand[circle,green]],iota(filter(filter(x.s, and[size3,or[or[triangle,green],iff[size2,apply(same_shape,iota(x.s))]]]), circle)))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:rectangle;4:nand[%s,%s];4:circle;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:or[%s,%s];4:or[%s,%s];4:triangle;4:green;4:iff[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle
'λx.apply(and[size2,and[not[apply(same_color,x.o)],iff[size3,yellow]]],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:iff[%s,%s];4:size3;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.exists(and[blue,circle], filter(x.s, circle))'	0:exists(%s, %s);4:and[%s,%s];4:blue;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(nor[and[size2,and[blue,circle]],size2],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:blue;4:circle;4:size2;1:%s.o;2:x
'λx.apply(and[not[and[yellow,or[size2,apply(same_size,x.o)]]],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:yellow;4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;1:%s.o;2:x
'λx.apply(or[and[or[rectangle,yellow],green],and[size1,implies[size1,not[rectangle]]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:rectangle;4:yellow;4:green;4:and[%s,%s];4:size1;4:implies[%s,%s];4:size1;4:not[%s];4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[iff[yellow,not[not[apply(same_color,x.o)]]],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:yellow;4:not[%s];4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;1:%s.o;2:x
'λx.apply(and[circle,not[apply(same_size,iota(x.s))]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[rectangle,not[triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:not[%s];4:triangle;1:%s.o;2:x
'λx.exists(and[and[rectangle,triangle],implies[size2,not[rectangle]]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:rectangle;4:triangle;4:implies[%s,%s];4:size2;4:not[%s];4:rectangle;3:%s.s;2:x
'λx.apply(or[triangle,circle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(x.s, and[rectangle,or[not[apply(same_size,iota(x.s))],size3]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size3
'λx.apply(and[not[apply(same_size,iota(filter(filter(x.s, circle), green)))],and[not[apply(same_shape,x.o)],apply(same_size,iota(filter(x.s, rectangle)))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, and[size2,yellow]), apply(same_size,x.o)))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(filter(filter(x.s, size2), circle), size1), and[nor[or[circle,not[apply(same_size,x.o)]],size2],apply(same_shape,iota(x.s))])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle;4:size1;4:and[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:circle;4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.forall(rectangle,filter(x.s, and[size3,green]))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:green
'λx.forall(circle,filter(filter(x.s, blue), or[green,iff[nor[and[size2,apply(same_size,x.o)],apply(size-gt,iota(x.s))],triangle]]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:green;4:iff[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:triangle
'λx.apply(green,iota(filter(x.s, size1)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(green,iota(filter(x.s, size2)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(green,iota(filter(x.s, size3)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(green,iota(filter(x.s, green)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(yellow,iota(filter(filter(x.s, green), size2)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size2
'λx.apply(yellow,iota(filter(filter(x.s, green), size1)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1
'λx.forall(triangle,filter(x.s, blue))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(or[circle,not[size1]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:not[%s];4:size1;1:%s.o;2:x
'λx.apply(and[and[rectangle,or[and[apply(same_color,iota(x.s)),or[not[blue],rectangle]],or[yellow,or[or[rectangle,blue],and[circle,size3]]]]],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:blue;4:rectangle;4:or[%s,%s];4:yellow;4:or[%s,%s];4:or[%s,%s];4:rectangle;4:blue;4:and[%s,%s];4:circle;4:size3;4:rectangle;1:%s.o;2:x
'λx.apply(and[nor[size2,triangle],not[size2]],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:size2;4:triangle;4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(and[blue,size3],iota(filter(filter(filter(x.s, rectangle), rectangle), size1)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle;4:size1
'λx.exists(and[size1,iff[green,rectangle]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:size1;4:iff[%s,%s];4:green;4:rectangle;3:%s.s;2:x
'λx.apply(nor[size3,circle],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:size3;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(green,x.o)'	0:apply(%s,%s);4:green;1:%s.o;2:x
'λx.apply(and[circle,nand[blue,yellow]],iota(filter(filter(x.s, size3), size2)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:nand[%s,%s];4:blue;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2
'λx.apply(or[size1,apply(same_size,iota(filter(filter(x.s, and[blue,rectangle]), green)))],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:rectangle;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(apply(same_shape,x.o),iota(filter(x.s, nand[or[or[size2,blue],size1],triangle])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:or[%s,%s];4:or[%s,%s];4:size2;4:blue;4:size1;4:triangle
'λx.apply(size3,iota(filter(x.s, or[and[blue,size1],size2])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:blue;4:size1;4:size2
'λx.forall(size2,filter(x.s, and[nor[rectangle,yellow],triangle]))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:rectangle;4:yellow;4:triangle
'λx.apply(and[and[triangle,yellow],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:yellow;4:circle;1:%s.o;2:x
'λx.apply(or[apply(same_size,x.o),yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow;1:%s.o;2:x
'λx.exists(triangle, filter(x.s, implies[rectangle,yellow]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:rectangle;4:yellow
'λx.exists(implies[size3,size1], x.s)'	0:exists(%s, %s);4:implies[%s,%s];4:size3;4:size1;3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, rectangle), apply(size-lt,x.o)), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:triangle
'λx.apply(or[yellow,not[triangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:not[%s];4:triangle;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(x.s, or[triangle,triangle]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:triangle;1:%s.o;2:x
'λx.apply(not[yellow],iota(filter(filter(x.s, triangle), size2)))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2
'λx.apply(blue,iota(filter(filter(x.s, and[apply(size-geq,iota(filter(x.s, not[and[yellow,triangle]]))),green]), size2)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:yellow;4:triangle;4:green;4:size2
'λx.empty(filter(filter(x.s, and[not[rectangle],and[rectangle,or[size1,iff[nand[blue,not[blue]],apply(size-gt,iota(filter(filter(x.s, size2), and[circle,and[blue,circle]])))]]]]), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:rectangle;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:size1;4:iff[%s,%s];4:nand[%s,%s];4:blue;4:not[%s];4:blue;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:circle;4:and[%s,%s];4:blue;4:circle;4:triangle
'λx.apply(and[circle,blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(x.s, or[blue,size2])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:size2
'λx.apply(apply(size-lt,iota(filter(x.s, or[size3,not[triangle]]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:not[%s];4:triangle;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(x.s, and[nor[nor[size1,green],green],apply(size-gt,iota(x.s))]), rectangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:nor[%s,%s];4:size1;4:green;4:green;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:rectangle
'λx.apply(size2,x.o)'	0:apply(%s,%s);4:size2;1:%s.o;2:x
'λx.apply(size3,x.o)'	0:apply(%s,%s);4:size3;1:%s.o;2:x
'λx.apply(size1,x.o)'	0:apply(%s,%s);4:size1;1:%s.o;2:x
'λx.empty(filter(filter(x.s, size1), not[circle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:not[%s];4:circle
'λx.forall(not[iff[apply(same_shape,iota(filter(filter(filter(filter(x.s, green), yellow), size3), triangle))),size1]],filter(filter(filter(filter(x.s, apply(same_color,x.o)), and[implies[and[size1,triangle],size2],blue]), yellow), and[or[size1,circle],yellow]))'	0:forall(%s,%s);4:not[%s];4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow;4:size3;4:triangle;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:size1;4:triangle;4:size2;4:blue;4:yellow;4:and[%s,%s];4:or[%s,%s];4:size1;4:circle;4:yellow
'λx.apply(and[not[rectangle],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:rectangle;4:size3;1:%s.o;2:x
'λx.apply(and[not[rectangle],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:rectangle;4:size2;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, not[apply(size-gt,x.o)]), nor[rectangle,or[not[green],yellow]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:nor[%s,%s];4:rectangle;4:or[%s,%s];4:not[%s];4:green;4:yellow
'λx.forall(and[apply(size-lt,x.o),size3],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:size3;3:%s.s;2:x
'λx.apply(apply(same_color,iota(filter(x.s, and[circle,size2]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size2;1:%s.o;2:x
'λx.apply(or[yellow,circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:circle;1:%s.o;2:x
'λx.forall(iff[nand[and[and[triangle,apply(same_size,iota(x.s))],blue],and[and[size2,circle],green]],and[and[rectangle,not[iff[yellow,rectangle]]],not[implies[and[size3,and[circle,and[rectangle,green]]],and[nor[apply(size-lt,x.o),not[triangle]],blue]]]]],x.s)'	0:forall(%s,%s);4:iff[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:and[%s,%s];4:size2;4:circle;4:green;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:not[%s];4:iff[%s,%s];4:yellow;4:rectangle;4:not[%s];4:implies[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:circle;4:and[%s,%s];4:rectangle;4:green;4:and[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:not[%s];4:triangle;4:blue;3:%s.s;2:x
'λx.apply(and[size3,blue],iota(filter(filter(filter(filter(x.s, and[size2,or[or[nor[or[and[apply(same_color,x.o),rectangle],size2],triangle],not[not[triangle]]],iff[and[and[not[blue],rectangle],apply(same_size,x.o)],circle]]]), triangle), apply(size-gt,iota(filter(x.s, rectangle)))), and[circle,blue])))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:or[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle;4:size2;4:triangle;4:not[%s];4:not[%s];4:triangle;4:iff[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:blue;4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;4:triangle;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:circle;4:blue
'λx.apply(or[circle,circle],iota(filter(filter(x.s, or[circle,blue]), apply(same_shape,iota(x.s)))))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_size,x.o),iota(filter(x.s, and[size1,yellow])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:yellow
'λx.apply(and[yellow,green],iota(filter(filter(filter(filter(x.s, or[triangle,triangle]), apply(same_color,iota(x.s))), and[size2,size2]), and[size2,triangle])))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:size2;4:and[%s,%s];4:size2;4:triangle
'λx.empty(filter(x.s, apply(size-gt,x.o)))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.exists(not[blue], filter(x.s, triangle))'	0:exists(%s, %s);4:not[%s];4:blue;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(implies[circle,rectangle],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:circle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(x.s, or[size1,nand[yellow,size3]]), blue)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:nand[%s,%s];4:yellow;4:size3;4:blue
'λx.forall(not[triangle],filter(x.s, or[triangle,implies[iff[circle,apply(same_size,x.o)],size1]]))'	0:forall(%s,%s);4:not[%s];4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:implies[%s,%s];4:iff[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1
'λx.apply(size2,iota(filter(x.s, not[apply(size-geq,iota(x.s))])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x
'λx.exists(yellow, filter(x.s, size3))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(yellow, filter(x.s, size1))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(yellow, filter(x.s, size2))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.exists(yellow, filter(x.s, green))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(not[or[or[size1,or[size2,and[yellow,not[green]]]],size2]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:or[%s,%s];4:size1;4:or[%s,%s];4:size2;4:and[%s,%s];4:yellow;4:not[%s];4:green;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(filter(x.s, size3), triangle), size2)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle;4:size2
'λx.apply(green,iota(filter(filter(x.s, and[yellow,nor[circle,not[blue]]]), size1)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:nor[%s,%s];4:circle;4:not[%s];4:blue;4:size1
'λx.apply(iff[size1,or[and[circle,and[iff[triangle,yellow],apply(size-lt,iota(filter(filter(filter(x.s, apply(size-gt,iota(x.s))), triangle), yellow)))]],circle]],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:size1;4:or[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:iff[%s,%s];4:triangle;4:yellow;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:triangle;4:yellow;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[rectangle,triangle],iota(filter(x.s, iff[rectangle,apply(size-lt,iota(x.s))])))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:rectangle;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x
'λx.forall(size1,filter(x.s, implies[implies[circle,and[blue,and[size2,iff[or[and[not[and[blue,size1]],blue],not[size1]],or[not[green],and[blue,iff[size2,circle]]]]]]],and[apply(same_size,iota(x.s)),rectangle]]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:implies[%s,%s];4:circle;4:and[%s,%s];4:blue;4:and[%s,%s];4:size2;4:iff[%s,%s];4:or[%s,%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:blue;4:size1;4:blue;4:not[%s];4:size1;4:or[%s,%s];4:not[%s];4:green;4:and[%s,%s];4:blue;4:iff[%s,%s];4:size2;4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:rectangle
'λx.apply(and[blue,and[not[size1],green]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:not[%s];4:size1;4:green;1:iota(%s);3:%s.s;2:x
'λx.forall(apply(same_size,iota(filter(x.s, yellow))),filter(x.s, and[yellow,size3]))'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size3
'λx.contains(iota(filter(filter(x.s, yellow), and[not[rectangle],rectangle])), filter(filter(filter(x.s, blue), not[or[triangle,yellow]]), yellow))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:not[%s];4:rectangle;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:or[%s,%s];4:triangle;4:yellow;4:yellow
'λx.contains(x.o, filter(filter(x.s, and[or[implies[circle,apply(same_shape,iota(filter(x.s, implies[size2,and[apply(size-gt,iota(filter(filter(x.s, triangle), and[not[circle],green]))),green]])))],circle],rectangle]), or[triangle,size3]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size2;4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:not[%s];4:circle;4:green;4:green;4:circle;4:rectangle;4:or[%s,%s];4:triangle;4:size3
'λx.apply(and[rectangle,nor[size3,nor[blue,triangle]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:nor[%s,%s];4:size3;4:nor[%s,%s];4:blue;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[or[not[and[rectangle,or[size2,size3]]],triangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:not[%s];4:and[%s,%s];4:rectangle;4:or[%s,%s];4:size2;4:size3;4:triangle;1:%s.o;2:x
'λx.apply(and[size2,blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[apply(size-lt,iota(x.s)),blue],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:blue;4:circle;1:%s.o;2:x
'λx.apply(and[size2,nand[yellow,green]],iota(filter(filter(filter(x.s, yellow), not[apply(size-lt,x.o)]), nor[and[and[size3,size2],and[size2,rectangle]],green])))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:nand[%s,%s];4:yellow;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:size2;4:and[%s,%s];4:size2;4:rectangle;4:green
'λx.apply(or[nand[green,green],nor[or[circle,size3],size1]],iota(filter(x.s, iff[and[size1,blue],size2])))'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:green;4:green;4:nor[%s,%s];4:or[%s,%s];4:circle;4:size3;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:and[%s,%s];4:size1;4:blue;4:size2
'λx.apply(triangle,iota(filter(x.s, and[and[blue,circle],rectangle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:blue;4:circle;4:rectangle
'λx.forall(implies[apply(same_color,iota(filter(filter(filter(filter(x.s, yellow), and[size3,not[size3]]), yellow), triangle))),circle],filter(filter(filter(x.s, and[circle,rectangle]), yellow), blue))'	0:forall(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:size3;4:not[%s];4:size3;4:yellow;4:triangle;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:rectangle;4:yellow;4:blue
'λx.forall(or[nor[apply(same_shape,x.o),not[not[rectangle]]],green],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:not[%s];4:rectangle;4:green;3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(filter(filter(filter(filter(x.s, size1), and[size3,or[blue,nand[or[yellow,apply(same_color,x.o)],blue]]]), size1), green), apply(size-lt,iota(filter(x.s, blue)))), iff[or[apply(same_shape,iota(x.s)),circle],and[implies[apply(size-gt,iota(x.s)),green],size3]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:size3;4:or[%s,%s];4:blue;4:nand[%s,%s];4:or[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue;4:size1;4:green;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:iff[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:implies[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:green;4:size3
'λx.contains(iota(filter(x.s, and[or[rectangle,not[or[and[triangle,rectangle],blue]]],or[triangle,nor[rectangle,yellow]]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:triangle;4:rectangle;4:blue;4:or[%s,%s];4:triangle;4:nor[%s,%s];4:rectangle;4:yellow;3:%s.s;2:x
'λx.apply(apply(same_size,iota(filter(filter(filter(filter(x.s, triangle), size3), size3), not[green]))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3;4:size3;4:not[%s];4:green;1:iota(%s);3:%s.s;2:x
'λx.exists(rectangle, filter(x.s, not[and[apply(same_color,iota(filter(x.s, triangle))),blue]]))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue
'λx.apply(and[size3,blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[rectangle,blue],iota(filter(x.s, and[apply(same_color,x.o),size3])))'	0:apply(%s,%s);4:nand[%s,%s];4:rectangle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3
'λx.apply(implies[green,green],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:green;4:green;1:%s.o;2:x
'λx.apply(or[blue,size2],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(or[blue,size3],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:size3;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(x.s, blue), size2), size3))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2;4:size3
'λx.apply(or[size3,not[iff[rectangle,not[not[size1]]]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:not[%s];4:iff[%s,%s];4:rectangle;4:not[%s];4:not[%s];4:size1;1:%s.o;2:x
'λx.forall(or[size3,not[circle]],filter(filter(x.s, size3), apply(same_color,iota(x.s))))'	0:forall(%s,%s);4:or[%s,%s];4:size3;4:not[%s];4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(x.s, or[blue,green]), blue), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:green;4:blue;4:green
'λx.exists(yellow, filter(x.s, apply(same_size,x.o)))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(and[nor[not[triangle],and[yellow,size1]],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:not[%s];4:triangle;4:and[%s,%s];4:yellow;4:size1;4:triangle;1:%s.o;2:x
'λx.apply(not[not[size1]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(not[not[size3]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[green,and[and[and[nand[yellow,size3],and[and[blue,and[blue,and[green,or[yellow,size1]]]],apply(same_shape,x.o)]],implies[implies[or[nor[and[green,and[green,yellow]],green],and[circle,yellow]],and[circle,circle]],apply(same_shape,iota(x.s))]],triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:yellow;4:size3;4:and[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:blue;4:and[%s,%s];4:green;4:or[%s,%s];4:yellow;4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:implies[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:green;4:yellow;4:green;4:and[%s,%s];4:circle;4:yellow;4:and[%s,%s];4:circle;4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle;1:%s.o;2:x
'λx.apply(not[not[size2]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[apply(same_color,iota(filter(filter(filter(x.s, circle), blue), blue))),blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue;4:blue;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(not[or[blue,or[or[triangle,rectangle],triangle]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:blue;4:or[%s,%s];4:or[%s,%s];4:triangle;4:rectangle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(x.s, rectangle), triangle)), filter(x.s, nand[yellow,triangle]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:yellow;4:triangle
'λx.apply(yellow,iota(filter(filter(x.s, circle), apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(filter(filter(x.s, and[size2,apply(same_color,iota(x.s))]), size2), blue), blue)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size2;4:blue;4:blue
'λx.apply(iff[apply(size-gt,iota(x.s)),rectangle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:rectangle;1:%s.o;2:x
'λx.contains(iota(filter(x.s, green)), filter(filter(x.s, rectangle), rectangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle
'λx.contains(iota(filter(filter(x.s, blue), size3)), filter(filter(x.s, size2), circle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle
'λx.exists(or[not[not[and[size1,yellow]]],yellow], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:not[%s];4:not[%s];4:and[%s,%s];4:size1;4:yellow;4:yellow;3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(x.s, not[blue]), and[rectangle,yellow])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:and[%s,%s];4:rectangle;4:yellow
'λx.exists(rectangle, filter(filter(filter(x.s, size2), apply(same_shape,iota(x.s))), nor[nand[and[and[yellow,and[rectangle,and[or[green,yellow],apply(same_color,iota(filter(x.s, yellow)))]]],yellow],and[size1,circle]],not[triangle]]))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:nor[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:or[%s,%s];4:green;4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:yellow;4:and[%s,%s];4:size1;4:circle;4:not[%s];4:triangle
'λx.apply(or[not[triangle],size1],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:triangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.exists(size3, filter(filter(x.s, circle), rectangle))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle
'λx.contains(x.o, filter(filter(filter(x.s, not[rectangle]), and[apply(same_color,x.o),and[size2,circle]]), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:size2;4:circle;4:green
'λx.apply(or[green,triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:triangle;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, not[triangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.apply(triangle,iota(filter(filter(filter(x.s, and[size3,yellow]), rectangle), triangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:yellow;4:rectangle;4:triangle
'λx.apply(and[yellow,implies[blue,implies[and[circle,apply(same_color,iota(filter(x.s, not[circle])))],yellow]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:implies[%s,%s];4:blue;4:implies[%s,%s];4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:yellow;1:%s.o;2:x
'λx.apply(or[nand[size3,and[or[circle,size1],implies[size2,size1]]],size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:size3;4:and[%s,%s];4:or[%s,%s];4:circle;4:size1;4:implies[%s,%s];4:size2;4:size1;4:size3;1:%s.o;2:x
'λx.apply(not[green],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.forall(and[or[or[size3,circle],size2],or[green,green]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:size3;4:circle;4:size2;4:or[%s,%s];4:green;4:green;3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(x.s, apply(size-lt,iota(filter(filter(filter(filter(x.s, and[triangle,iff[green,or[yellow,size2]]]), yellow), and[blue,blue]), size1)))), and[and[and[not[size1],size2],size1],yellow])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:iff[%s,%s];4:green;4:or[%s,%s];4:yellow;4:size2;4:yellow;4:and[%s,%s];4:blue;4:blue;4:size1;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size1;4:size2;4:size1;4:yellow
'λx.apply(and[apply(same_shape,x.o),size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3;1:%s.o;2:x
'λx.apply(and[apply(same_shape,x.o),size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2;1:%s.o;2:x
'λx.apply(and[not[and[apply(size-geq,x.o),circle]],rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:circle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(x.s, or[or[and[triangle,and[size1,yellow]],not[not[green]]],and[and[size1,size3],triangle]]), nand[or[or[or[and[blue,apply(same_size,iota(filter(x.s, green)))],apply(same_shape,x.o)],triangle],yellow],green])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:size1;4:yellow;4:not[%s];4:not[%s];4:green;4:and[%s,%s];4:and[%s,%s];4:size1;4:size3;4:triangle;4:nand[%s,%s];4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle;4:yellow;4:green;3:%s.s;2:x
'λx.contains(iota(filter(x.s, apply(same_shape,x.o))), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(nand[size3,and[or[apply(same_color,iota(filter(x.s, triangle))),yellow],or[circle,implies[triangle,nor[green,size3]]]]],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:size3;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:yellow;4:or[%s,%s];4:circle;4:implies[%s,%s];4:triangle;4:nor[%s,%s];4:green;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size2,or[size1,blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:or[%s,%s];4:size1;4:blue;1:%s.o;2:x
'λx.forall(iff[circle,or[size2,size1]],filter(filter(filter(x.s, size2), nand[circle,and[and[green,blue],green]]), size1))'	0:forall(%s,%s);4:iff[%s,%s];4:circle;4:or[%s,%s];4:size2;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:nand[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:green;4:blue;4:green;4:size1
'λx.apply(and[and[blue,and[apply(size-geq,iota(filter(x.s, circle))),green]],not[circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green;4:not[%s];4:circle;1:%s.o;2:x
'λx.apply(and[and[blue,size3],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:size3;4:size1;1:%s.o;2:x
'λx.apply(and[apply(same_size,iota(filter(filter(filter(filter(filter(filter(x.s, size3), rectangle), size2), yellow), green), and[green,apply(size-gt,x.o)]))),rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle;4:size2;4:yellow;4:green;4:and[%s,%s];4:green;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:rectangle;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(filter(filter(x.s, and[size2,circle]), and[rectangle,size1]), nor[circle,nor[rectangle,circle]]), or[and[and[or[size1,and[size2,and[apply(size-gt,x.o),size2]]],and[rectangle,rectangle]],yellow],iff[and[green,size2],size1]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:circle;4:and[%s,%s];4:rectangle;4:size1;4:nor[%s,%s];4:circle;4:nor[%s,%s];4:rectangle;4:circle;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size1;4:and[%s,%s];4:size2;4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:size2;4:and[%s,%s];4:rectangle;4:rectangle;4:yellow;4:iff[%s,%s];4:and[%s,%s];4:green;4:size2;4:size1
'λx.apply(nand[blue,apply(same_shape,x.o)],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:nand[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(not[size2],iota(filter(x.s, apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(not[size1],iota(filter(x.s, apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, implies[apply(same_size,x.o),circle])), filter(x.s, iff[size3,and[and[and[or[circle,size2],apply(same_size,x.o)],size3],yellow]]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:circle;4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;4:yellow
'λx.contains(iota(filter(x.s, rectangle)), filter(filter(x.s, size2), blue))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue
'λx.apply(blue,iota(filter(filter(filter(x.s, not[size2]), and[blue,rectangle]), blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:and[%s,%s];4:blue;4:rectangle;4:blue
'λx.empty(filter(filter(filter(filter(filter(filter(x.s, triangle), rectangle), apply(size-leq,iota(filter(filter(x.s, iff[apply(size-geq,x.o),nand[size2,yellow]]), size3)))), not[yellow]), and[nor[size2,apply(same_color,iota(filter(x.s, rectangle)))],yellow]), implies[triangle,size1]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:nand[%s,%s];4:size2;4:yellow;4:size3;4:not[%s];4:yellow;4:and[%s,%s];4:nor[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:yellow;4:implies[%s,%s];4:triangle;4:size1
'λx.apply(and[nor[nor[size3,size3],and[triangle,apply(same_size,iota(filter(x.s, not[triangle])))]],implies[triangle,size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:nor[%s,%s];4:size3;4:size3;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:implies[%s,%s];4:triangle;4:size3;1:%s.o;2:x
'λx.empty(filter(filter(x.s, or[size3,and[apply(same_size,x.o),circle]]), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;4:green
'λx.apply(not[nor[nor[rectangle,rectangle],yellow]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:not[%s];4:nor[%s,%s];4:nor[%s,%s];4:rectangle;4:rectangle;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[rectangle,or[or[not[apply(size-leq,iota(filter(x.s, size1)))],green],blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:or[%s,%s];4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green;4:blue;1:%s.o;2:x
'λx.apply(iff[green,rectangle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:green;4:rectangle;1:%s.o;2:x
'λx.apply(and[and[apply(same_color,iota(x.s)),apply(same_color,x.o)],and[size1,size3]],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:size1;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(and[size1,yellow], filter(filter(filter(filter(x.s, rectangle), nor[apply(same_shape,iota(x.s)),circle]), size1), apply(same_color,x.o)))'	0:exists(%s, %s);4:and[%s,%s];4:size1;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle;4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.empty(filter(filter(x.s, blue), nand[and[and[size2,apply(same_size,iota(filter(x.s, yellow)))],and[size1,rectangle]],yellow]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:size1;4:rectangle;4:yellow
'λx.contains(x.o, filter(filter(x.s, or[or[size2,circle],apply(same_shape,iota(filter(filter(filter(filter(x.s, green), blue), nor[nand[not[and[circle,green]],rectangle],green]), or[circle,triangle])))]), yellow))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:size2;4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue;4:nor[%s,%s];4:nand[%s,%s];4:not[%s];4:and[%s,%s];4:circle;4:green;4:rectangle;4:green;4:or[%s,%s];4:circle;4:triangle;4:yellow
'λx.apply(or[circle,triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:triangle;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(filter(filter(filter(filter(filter(filter(filter(x.s, not[green]), rectangle), circle), size2), green), and[rectangle,and[size2,and[and[size2,blue],blue]]]), iff[green,size1]), circle), size3)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:rectangle;4:circle;4:size2;4:green;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:size2;4:blue;4:blue;4:iff[%s,%s];4:green;4:size1;4:circle;4:size3
'λx.contains(iota(filter(filter(x.s, yellow), rectangle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle;3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(x.s, size1), and[circle,size3])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:circle;4:size3
'λx.apply(not[apply(same_size,iota(filter(x.s, not[circle])))],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[triangle,triangle],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:triangle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.exists(and[circle,and[iff[triangle,yellow],apply(size-lt,iota(filter(filter(filter(x.s, green), triangle), yellow)))]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:circle;4:and[%s,%s];4:iff[%s,%s];4:triangle;4:yellow;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:triangle;4:yellow;3:%s.s;2:x
'λx.apply(apply(same_size,iota(filter(x.s, apply(same_color,x.o)))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(iff[or[nor[triangle,size1],rectangle],triangle],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:triangle;4:size1;4:rectangle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(filter(filter(x.s, green), size3), and[not[apply(same_shape,x.o)],not[circle]]), rectangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size3;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:circle;4:rectangle
'λx.apply(and[implies[iff[size1,size1],triangle],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:iff[%s,%s];4:size1;4:size1;4:triangle;4:rectangle;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(filter(x.s, and[blue,rectangle]), apply(same_color,x.o)), and[size3,and[and[size1,and[size3,yellow]],size1]]), triangle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:size3;4:yellow;4:size1;4:triangle;3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(x.s, size3), and[green,green])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:green;4:green
'λx.apply(and[iff[apply(size-leq,x.o),green],apply(same_color,iota(filter(filter(x.s, and[and[triangle,and[apply(size-lt,x.o),size1]],apply(same_size,iota(filter(x.s, size3)))]), circle)))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, apply(same_size,x.o))))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, and[and[and[circle,and[circle,circle]],nand[and[size3,size1],apply(same_color,iota(x.s))]],size3])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:circle;4:circle;4:nand[%s,%s];4:and[%s,%s];4:size3;4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size3
'λx.apply(size3,iota(filter(x.s, and[and[triangle,not[not[not[rectangle]]]],not[green]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:triangle;4:not[%s];4:not[%s];4:not[%s];4:rectangle;4:not[%s];4:green
'λx.contains(iota(x.s), filter(x.s, apply(same_size,iota(filter(x.s, and[iff[not[size1],blue],yellow])))))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:iff[%s,%s];4:not[%s];4:size1;4:blue;4:yellow
'λx.contains(iota(filter(x.s, circle)), filter(filter(x.s, triangle), green))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green
'λx.apply(and[and[rectangle,circle],apply(size-lt,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:rectangle;4:circle;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(apply(size-lt,x.o),iota(filter(x.s, blue)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[or[not[not[size3]],size3],or[circle,size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:not[%s];4:not[%s];4:size3;4:size3;4:or[%s,%s];4:circle;4:size3;1:%s.o;2:x
'λx.apply(or[rectangle,or[triangle,circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:or[%s,%s];4:triangle;4:circle;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, apply(same_color,x.o))))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(x.s, yellow))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(filter(x.s, triangle), size2), rectangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2;4:rectangle
'λx.apply(and[yellow,or[blue,and[size2,size1]]],iota(filter(filter(filter(filter(filter(filter(x.s, yellow), yellow), size2), size1), or[blue,nand[yellow,blue]]), circle)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:or[%s,%s];4:blue;4:and[%s,%s];4:size2;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:yellow;4:size2;4:size1;4:or[%s,%s];4:blue;4:nand[%s,%s];4:yellow;4:blue;4:circle
'λx.apply(or[size1,size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:size3;1:%s.o;2:x
'λx.apply(or[size1,size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:size2;1:%s.o;2:x
'λx.apply(or[size2,size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:size1;1:%s.o;2:x
'λx.apply(or[size2,size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:size3;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, and[or[and[size3,size1],size1],rectangle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size3;4:size1;4:size1;4:rectangle
'λx.apply(implies[and[triangle,and[triangle,circle]],size3],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:triangle;4:circle;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(implies[and[yellow,rectangle],and[yellow,size1]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:yellow;4:rectangle;4:and[%s,%s];4:yellow;4:size1;1:%s.o;2:x
'λx.apply(apply(same_color,iota(x.s)),iota(filter(filter(filter(filter(filter(x.s, size1), blue), and[and[not[apply(same_shape,x.o)],circle],size1]), size3), or[triangle,yellow])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;4:size1;4:size3;4:or[%s,%s];4:triangle;4:yellow
'λx.apply(size1,iota(filter(x.s, not[not[size1]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:size1
'λx.forall(rectangle,filter(filter(x.s, green), not[or[apply(same_color,iota(filter(x.s, and[rectangle,size1]))),not[blue]]]))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:size1;4:not[%s];4:blue
'λx.apply(not[and[apply(size-gt,x.o),yellow]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:yellow;1:%s.o;2:x
'λx.apply(and[size3,green],iota(filter(filter(filter(x.s, rectangle), and[not[blue],size2]), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:not[%s];4:blue;4:size2;4:blue
'λx.forall(circle,filter(filter(filter(filter(filter(x.s, apply(same_size,iota(x.s))), rectangle), triangle), triangle), apply(same_size,x.o)))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:rectangle;4:triangle;4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(apply(same_color,x.o),iota(filter(x.s, implies[apply(same_size,x.o),size2])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2
'λx.apply(size3,iota(filter(x.s, not[not[nor[size2,blue]]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:nor[%s,%s];4:size2;4:blue
'λx.apply(nor[nand[yellow,triangle],nor[apply(same_shape,x.o),blue]],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:nand[%s,%s];4:yellow;4:triangle;4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size2,and[size1,size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:size1;4:size3;1:%s.o;2:x
'λx.apply(and[size2,and[size1,size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:size1;4:size2;1:%s.o;2:x
'λx.exists(nor[and[and[or[not[blue],green],nor[size3,size2]],yellow],size3], x.s)'	0:exists(%s, %s);4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:not[%s];4:blue;4:green;4:nor[%s,%s];4:size3;4:size2;4:yellow;4:size3;3:%s.s;2:x
'λx.apply(size1,iota(filter(x.s, and[circle,triangle])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:triangle
'λx.contains(x.o, filter(x.s, or[and[apply(same_shape,iota(x.s)),yellow],and[size1,triangle]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:size1;4:triangle
'λx.apply(rectangle,iota(filter(x.s, size3)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(rectangle,iota(filter(x.s, size1)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(rectangle,iota(filter(x.s, size2)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(apply(size-geq,iota(x.s)),iota(filter(x.s, circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(rectangle,iota(filter(x.s, green)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.contains(iota(filter(filter(x.s, not[size1]), yellow)), filter(filter(filter(filter(filter(x.s, nor[circle,green]), and[size2,apply(same_color,x.o)]), apply(same_size,x.o)), size3), size3))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:circle;4:green;4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;4:size3
'λx.apply(implies[circle,apply(same_shape,iota(filter(x.s, apply(same_shape,x.o))))],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(not[and[size3,or[and[triangle,and[green,apply(same_size,iota(x.s))]],size3]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size3;4:or[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size3;1:%s.o;2:x
'λx.forall(and[triangle,and[rectangle,and[circle,and[iff[size2,and[and[and[nor[size1,apply(same_size,iota(x.s))],size1],and[circle,size2]],size1]],size3]]]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:circle;4:and[%s,%s];4:iff[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:circle;4:size2;4:size1;4:size3;3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(x.s, yellow), triangle), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle;4:green
'λx.apply(and[and[yellow,blue],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:blue;4:green;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(filter(x.s, triangle), green), size1)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green;4:size1
'λx.apply(and[rectangle,and[green,and[blue,size3]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:green;4:and[%s,%s];4:blue;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(x.s, blue), green)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green
'λx.contains(iota(filter(filter(filter(x.s, not[size1]), rectangle), size1)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:rectangle;4:size1;3:%s.s;2:x
'λx.apply(apply(same_color,iota(filter(filter(x.s, size2), size1))),iota(filter(filter(x.s, rectangle), green)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green
'λx.exists(size2, filter(filter(x.s, and[circle,not[implies[apply(size-leq,x.o),and[yellow,blue]]]]), rectangle))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:not[%s];4:implies[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:and[%s,%s];4:yellow;4:blue;4:rectangle
'λx.apply(and[size2,and[size3,implies[size1,circle]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:size3;4:implies[%s,%s];4:size1;4:circle;1:%s.o;2:x
'λx.apply(implies[or[size3,size3],triangle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:or[%s,%s];4:size3;4:size3;4:triangle;1:%s.o;2:x
'λx.apply(apply(same_size,iota(filter(x.s, yellow))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;1:%s.o;2:x
'λx.apply(not[blue],iota(filter(filter(x.s, size3), size3)))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3
'λx.apply(size2,iota(filter(filter(x.s, or[yellow,rectangle]), or[rectangle,not[and[triangle,yellow]]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:rectangle;4:or[%s,%s];4:rectangle;4:not[%s];4:and[%s,%s];4:triangle;4:yellow
'λx.apply(and[not[yellow],size2],iota(filter(filter(x.s, not[yellow]), nor[and[not[or[or[and[yellow,nor[nand[blue,size2],apply(same_shape,iota(filter(filter(filter(x.s, green), blue), not[or[iff[size1,circle],not[or[size2,blue]]]])))]],not[green]],and[size1,yellow]]],triangle],size1])))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:yellow;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:nor[%s,%s];4:and[%s,%s];4:not[%s];4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:yellow;4:nor[%s,%s];4:nand[%s,%s];4:blue;4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue;4:not[%s];4:or[%s,%s];4:iff[%s,%s];4:size1;4:circle;4:not[%s];4:or[%s,%s];4:size2;4:blue;4:not[%s];4:green;4:and[%s,%s];4:size1;4:yellow;4:triangle;4:size1
'λx.apply(and[not[blue],or[circle,and[and[blue,yellow],circle]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:blue;4:or[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:blue;4:yellow;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[size1,or[yellow,triangle]],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:size1;4:or[%s,%s];4:yellow;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[not[and[not[size1],rectangle]],yellow],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:and[%s,%s];4:not[%s];4:size1;4:rectangle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(x.s, or[circle,nand[size3,circle]]), rectangle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:nand[%s,%s];4:size3;4:circle;4:rectangle
'λx.apply(implies[size1,or[size3,circle]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:size1;4:or[%s,%s];4:size3;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(filter(x.s, and[rectangle,rectangle]), green), or[and[size1,yellow],and[size3,blue]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:rectangle;4:green;4:or[%s,%s];4:and[%s,%s];4:size1;4:yellow;4:and[%s,%s];4:size3;4:blue
'λx.empty(filter(x.s, and[size3,rectangle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:rectangle
'λx.exists(iff[blue,rectangle], x.s)'	0:exists(%s, %s);4:iff[%s,%s];4:blue;4:rectangle;3:%s.s;2:x
'λx.contains(iota(x.s), filter(x.s, iff[rectangle,rectangle]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:rectangle;4:rectangle
'λx.apply(not[apply(same_shape,x.o)],iota(filter(filter(filter(x.s, rectangle), blue), size1)))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue;4:size1
'λx.apply(and[size3,or[size2,rectangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:or[%s,%s];4:size2;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.forall(size1,filter(x.s, yellow))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.forall(size2,filter(x.s, yellow))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(or[and[circle,triangle],and[yellow,and[yellow,green]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:circle;4:triangle;4:and[%s,%s];4:yellow;4:and[%s,%s];4:yellow;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[rectangle,or[iff[rectangle,size3],green]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:or[%s,%s];4:iff[%s,%s];4:rectangle;4:size3;4:green;1:iota(%s);3:%s.s;2:x
'λx.exists(size1, filter(filter(x.s, not[not[apply(same_shape,x.o)]]), green))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green
'λx.apply(or[green,or[circle,yellow]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:or[%s,%s];4:circle;4:yellow;1:%s.o;2:x
'λx.apply(apply(same_color,iota(filter(filter(filter(x.s, circle), yellow), and[not[size3],not[and[size1,and[or[size1,size3],size1]]]]))),iota(filter(x.s, circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow;4:and[%s,%s];4:not[%s];4:size3;4:not[%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:or[%s,%s];4:size1;4:size3;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(blue,x.o)'	0:apply(%s,%s);4:blue;1:%s.o;2:x
'λx.apply(and[not[rectangle],and[yellow,or[circle,rectangle]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:rectangle;4:and[%s,%s];4:yellow;4:or[%s,%s];4:circle;4:rectangle;1:%s.o;2:x
'λx.apply(and[rectangle,or[and[and[size3,circle],not[size1]],triangle]],iota(filter(filter(x.s, size3), rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:circle;4:not[%s];4:size1;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle
'λx.apply(nand[blue,size2],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:blue;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[apply(same_color,x.o),and[apply(same_size,iota(x.s)),green]],or[not[size2],blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:green;4:or[%s,%s];4:not[%s];4:size2;4:blue;1:%s.o;2:x
'λx.apply(iff[nand[green,and[circle,triangle]],not[triangle]],iota(filter(x.s, not[blue])))'	0:apply(%s,%s);4:iff[%s,%s];4:nand[%s,%s];4:green;4:and[%s,%s];4:circle;4:triangle;4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.forall(not[yellow],filter(filter(x.s, circle), not[or[triangle,nor[or[apply(same_size,iota(filter(x.s, size2))),not[size3]],size1]]]))'	0:forall(%s,%s);4:not[%s];4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:or[%s,%s];4:triangle;4:nor[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:not[%s];4:size3;4:size1
'λx.contains(x.o, filter(x.s, and[iff[blue,and[rectangle,size2]],or[and[size1,or[size2,nand[and[blue,implies[not[yellow],not[apply(same_color,iota(filter(x.s, or[not[rectangle],circle])))]]],blue]]],blue]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:iff[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:size2;4:or[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:size2;4:nand[%s,%s];4:and[%s,%s];4:blue;4:implies[%s,%s];4:not[%s];4:yellow;4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:rectangle;4:circle;4:blue;4:blue
'λx.apply(not[size1],iota(filter(filter(filter(filter(x.s, and[or[and[size1,circle],circle],yellow]), yellow), green), size3)))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size1;4:circle;4:circle;4:yellow;4:yellow;4:green;4:size3
'λx.apply(apply(size-gt,x.o),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(filter(x.s, circle), not[triangle]), size3)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:triangle;4:size3
'λx.apply(or[size3,size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:size2;1:%s.o;2:x
'λx.apply(or[size3,size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:size1;1:%s.o;2:x
'λx.apply(apply(same_size,iota(filter(x.s, apply(same_shape,iota(filter(x.s, and[and[triangle,circle],implies[or[blue,and[or[and[or[size3,not[size3]],blue],size2],and[not[circle],apply(same_color,x.o)]]],yellow]])))))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:triangle;4:circle;4:implies[%s,%s];4:or[%s,%s];4:blue;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size3;4:not[%s];4:size3;4:blue;4:size2;4:and[%s,%s];4:not[%s];4:circle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, nor[green,size3]), size1)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:green;4:size3;4:size1
'λx.apply(blue,iota(filter(filter(filter(x.s, and[and[rectangle,green],apply(same_size,x.o)]), triangle), size2)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle;4:size2
'λx.apply(not[and[rectangle,and[and[apply(same_color,x.o),not[apply(same_shape,iota(filter(filter(x.s, rectangle), yellow)))]],and[circle,circle]]]],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:yellow;4:and[%s,%s];4:circle;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(and[blue,size1],iota(filter(filter(x.s, size3), triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle
'λx.apply(apply(same_color,x.o),iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(not[apply(same_shape,iota(x.s))],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.exists(yellow, filter(x.s, or[yellow,green]))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:green
'λx.exists(size3, filter(x.s, and[size2,circle]))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:circle
'λx.apply(apply(same_color,iota(x.s)),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[size3,and[and[apply(same_size,iota(x.s)),and[size2,not[rectangle]]],size1]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:not[%s];4:rectangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(or[apply(same_color,x.o),apply(size-lt,x.o)],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(filter(filter(x.s, yellow), and[implies[or[apply(size-gt,iota(filter(filter(x.s, green), and[apply(same_size,iota(x.s)),not[nand[and[size2,size1],nor[size2,rectangle]]]]))),and[not[size2],nor[not[or[not[green],size3]],not[circle]]]],size3],size1]), iff[size1,size2]), not[triangle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:not[%s];4:nand[%s,%s];4:and[%s,%s];4:size2;4:size1;4:nor[%s,%s];4:size2;4:rectangle;4:and[%s,%s];4:not[%s];4:size2;4:nor[%s,%s];4:not[%s];4:or[%s,%s];4:not[%s];4:green;4:size3;4:not[%s];4:circle;4:size3;4:size1;4:iff[%s,%s];4:size1;4:size2;4:not[%s];4:triangle
'λx.forall(triangle,filter(filter(x.s, and[triangle,implies[and[size3,iff[and[triangle,size3],blue]],circle]]), and[green,apply(size-gt,iota(filter(filter(filter(filter(x.s, and[not[size1],size3]), and[and[rectangle,nand[not[size3],apply(same_color,x.o)]],size1]), size2), size3)))]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:implies[%s,%s];4:and[%s,%s];4:size3;4:iff[%s,%s];4:and[%s,%s];4:triangle;4:size3;4:blue;4:circle;4:and[%s,%s];4:green;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:size1;4:size3;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:nand[%s,%s];4:not[%s];4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1;4:size2;4:size3
'λx.apply(or[circle,size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:size2;1:%s.o;2:x
'λx.apply(or[circle,size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:size1;1:%s.o;2:x
'λx.apply(or[circle,size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:size3;1:%s.o;2:x
'λx.apply(and[size3,size1],iota(filter(filter(filter(x.s, triangle), and[nor[nor[apply(same_size,iota(filter(filter(x.s, and[green,size3]), size1))),green],size3],apply(same_shape,iota(x.s))]), rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:nor[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:size3;4:size1;4:green;4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:rectangle
'λx.apply(and[size1,and[blue,and[apply(size-leq,x.o),size2]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:and[%s,%s];4:blue;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(not[not[triangle]],iota(filter(x.s, and[not[circle],yellow])))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:circle;4:yellow
'λx.apply(or[apply(size-leq,iota(filter(filter(x.s, apply(same_color,iota(filter(x.s, or[nor[triangle,apply(size-geq,iota(x.s))],blue])))), size1))),triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:nor[%s,%s];4:triangle;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:blue;4:size1;4:triangle;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, size2), blue), not[apply(same_shape,iota(filter(x.s, size3)))]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(yellow,iota(filter(filter(filter(filter(filter(filter(x.s, circle), and[size2,rectangle]), rectangle), rectangle), size3), circle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:size2;4:rectangle;4:rectangle;4:rectangle;4:size3;4:circle
'λx.apply(size3,iota(filter(filter(filter(filter(filter(x.s, rectangle), yellow), size3), apply(size-geq,iota(x.s))), yellow)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:yellow;4:size3;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:yellow
'λx.apply(not[and[size1,apply(same_shape,x.o)]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(x.s, or[size3,size3]), rectangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:size3;4:rectangle
'λx.apply(and[and[circle,triangle],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:triangle;4:size3;1:%s.o;2:x
'λx.apply(and[triangle,or[nand[triangle,circle],circle]],iota(filter(filter(filter(filter(filter(filter(x.s, triangle), and[rectangle,size1]), green), triangle), and[implies[blue,size1],and[rectangle,nor[size3,blue]]]), size1)))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:or[%s,%s];4:nand[%s,%s];4:triangle;4:circle;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:rectangle;4:size1;4:green;4:triangle;4:and[%s,%s];4:implies[%s,%s];4:blue;4:size1;4:and[%s,%s];4:rectangle;4:nor[%s,%s];4:size3;4:blue;4:size1
'λx.forall(nor[size2,yellow],filter(x.s, blue))'	0:forall(%s,%s);4:nor[%s,%s];4:size2;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(yellow,iota(filter(filter(filter(filter(x.s, or[size1,size2]), rectangle), or[not[not[rectangle]],nand[rectangle,and[triangle,triangle]]]), yellow)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:size2;4:rectangle;4:or[%s,%s];4:not[%s];4:not[%s];4:rectangle;4:nand[%s,%s];4:rectangle;4:and[%s,%s];4:triangle;4:triangle;4:yellow
'λx.exists(nand[size3,size3], filter(x.s, apply(size-gt,iota(x.s))))'	0:exists(%s, %s);4:nand[%s,%s];4:size3;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x
'λx.apply(and[green,blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:blue;1:iota(%s);3:%s.s;2:x
'λx.exists(not[and[apply(same_size,iota(filter(x.s, nor[apply(same_shape,x.o),circle]))),blue]], x.s)'	0:exists(%s, %s);4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;4:blue;3:%s.s;2:x
'λx.apply(implies[implies[size1,or[size1,and[rectangle,and[circle,rectangle]]]],green],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:implies[%s,%s];4:size1;4:or[%s,%s];4:size1;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:circle;4:rectangle;4:green;1:%s.o;2:x
'λx.exists(or[blue,green], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:blue;4:green;3:%s.s;2:x
'λx.apply(and[and[circle,size3],circle],iota(filter(x.s, not[blue])))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:size3;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.exists(and[green,triangle], filter(filter(x.s, rectangle), not[nor[rectangle,size3]]))'	0:exists(%s, %s);4:and[%s,%s];4:green;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:nor[%s,%s];4:rectangle;4:size3
'λx.apply(and[circle,apply(size-lt,x.o)],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[blue,not[size1]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:not[%s];4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[apply(same_size,x.o),circle],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(size1,iota(filter(filter(x.s, size3), rectangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle
'λx.apply(implies[rectangle,green],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:rectangle;4:green;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, circle), rectangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle
'λx.apply(and[and[circle,size3],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:size3;4:blue;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(filter(filter(x.s, and[circle,rectangle]), and[yellow,and[green,and[and[yellow,size1],triangle]]]), size1), size1)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:rectangle;4:and[%s,%s];4:yellow;4:and[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:yellow;4:size1;4:triangle;4:size1;4:size1
'λx.apply(green,iota(filter(x.s, or[blue,green])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:green
'λx.apply(nand[and[nor[rectangle,apply(size-geq,iota(x.s))],yellow],or[size2,or[nand[or[and[circle,and[green,size1]],nand[size3,rectangle]],size3],apply(same_shape,iota(filter(filter(x.s, yellow), triangle)))]]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:rectangle;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:size2;4:or[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:green;4:size1;4:nand[%s,%s];4:size3;4:rectangle;4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle;1:%s.o;2:x
'λx.exists(apply(same_shape,x.o), filter(x.s, not[and[size2,green]]))'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:size2;4:green
'λx.apply(and[size2,nand[and[yellow,implies[size2,and[apply(same_size,iota(x.s)),green]]],apply(size-lt,x.o)]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:nand[%s,%s];4:and[%s,%s];4:yellow;4:implies[%s,%s];4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, apply(same_color,iota(x.s))), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:green
'λx.apply(nand[circle,size1],iota(filter(filter(x.s, green), blue)))'	0:apply(%s,%s);4:nand[%s,%s];4:circle;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue
'λx.empty(filter(x.s, not[yellow]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow
'λx.apply(not[apply(same_color,iota(filter(x.s, triangle)))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;1:%s.o;2:x
'λx.exists(and[size1,size3], filter(filter(x.s, rectangle), rectangle))'	0:exists(%s, %s);4:and[%s,%s];4:size1;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle
'λx.exists(and[rectangle,green], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:rectangle;4:green;3:%s.s;2:x
'λx.empty(filter(filter(x.s, circle), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle
'λx.apply(or[nand[yellow,and[size2,size1]],or[blue,rectangle]],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:yellow;4:and[%s,%s];4:size2;4:size1;4:or[%s,%s];4:blue;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(apply(size-gt,iota(filter(x.s, apply(same_size,x.o)))),iota(filter(x.s, or[size2,and[green,circle]])))'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:and[%s,%s];4:green;4:circle
'λx.apply(or[yellow,apply(same_size,x.o)],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[or[and[yellow,circle],apply(same_size,iota(filter(x.s, rectangle)))],and[not[or[circle,and[size1,not[or[circle,not[size2]]]]]],or[green,not[not[green]]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:yellow;4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:not[%s];4:or[%s,%s];4:circle;4:and[%s,%s];4:size1;4:not[%s];4:or[%s,%s];4:circle;4:not[%s];4:size2;4:or[%s,%s];4:green;4:not[%s];4:not[%s];4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(or[not[blue],size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:blue;4:size2;1:%s.o;2:x
'λx.apply(or[yellow,size1],iota(filter(filter(x.s, size1), size1)))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1
'λx.apply(size2,iota(filter(filter(filter(filter(filter(filter(x.s, size2), rectangle), size2), and[yellow,size1]), blue), yellow)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle;4:size2;4:and[%s,%s];4:yellow;4:size1;4:blue;4:yellow
'λx.apply(apply(same_color,iota(filter(filter(x.s, triangle), rectangle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle;1:%s.o;2:x
'λx.apply(and[circle,size1],iota(filter(x.s, and[and[not[circle],rectangle],apply(same_shape,iota(x.s))])))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:circle;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(and[green,iff[yellow,nor[size1,or[size1,blue]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:iff[%s,%s];4:yellow;4:nor[%s,%s];4:size1;4:or[%s,%s];4:size1;4:blue;1:iota(%s);3:%s.s;2:x
'λx.forall(apply(same_color,iota(x.s)),filter(x.s, rectangle))'	0:forall(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(nand[circle,and[triangle,green]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:circle;4:and[%s,%s];4:triangle;4:green;1:%s.o;2:x
'λx.apply(and[and[circle,circle],and[rectangle,apply(same_shape,iota(x.s))]],iota(filter(filter(x.s, circle), apply(same_shape,iota(filter(filter(filter(x.s, apply(same_color,x.o)), not[and[or[blue,size1],size3]]), circle))))))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:circle;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:or[%s,%s];4:blue;4:size1;4:size3;4:circle
'λx.exists(and[size1,and[implies[rectangle,blue],size3]], filter(x.s, apply(same_size,x.o)))'	0:exists(%s, %s);4:and[%s,%s];4:size1;4:and[%s,%s];4:implies[%s,%s];4:rectangle;4:blue;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(or[apply(same_size,iota(filter(filter(filter(filter(filter(x.s, circle), or[nor[and[green,green],or[yellow,nor[nor[and[implies[triangle,and[blue,circle]],triangle],rectangle],triangle]]],rectangle]), blue), size2), yellow))),size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:green;4:green;4:or[%s,%s];4:yellow;4:nor[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:triangle;4:and[%s,%s];4:blue;4:circle;4:triangle;4:rectangle;4:triangle;4:rectangle;4:blue;4:size2;4:yellow;4:size3;1:%s.o;2:x
'λx.apply(and[yellow,yellow],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.contains(iota(filter(x.s, circle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;3:%s.s;2:x
'λx.apply(and[or[triangle,size2],not[green]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:triangle;4:size2;4:not[%s];4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(or[and[triangle,size1],yellow],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:triangle;4:size1;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(not[apply(same_color,x.o)],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[apply(same_color,iota(x.s)),nand[apply(size-lt,x.o),triangle]],or[size2,yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:nand[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:triangle;4:or[%s,%s];4:size2;4:yellow;1:%s.o;2:x
'λx.apply(or[and[size1,or[circle,not[circle]]],triangle],iota(filter(x.s, not[or[blue,or[apply(same_shape,iota(x.s)),circle]]])))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:circle;4:not[%s];4:circle;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:blue;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle
'λx.apply(nand[size1,and[circle,green]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size1;4:and[%s,%s];4:circle;4:green;1:%s.o;2:x
'λx.exists(apply(same_color,iota(x.s)), filter(filter(filter(x.s, rectangle), rectangle), and[apply(size-lt,x.o),and[implies[triangle,green],not[and[size2,size1]]]]))'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:and[%s,%s];4:implies[%s,%s];4:triangle;4:green;4:not[%s];4:and[%s,%s];4:size2;4:size1
'λx.apply(and[not[and[and[not[triangle],size2],size2]],circle],iota(filter(x.s, green)))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:triangle;4:size2;4:size2;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[apply(same_size,iota(x.s)),size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size1;1:%s.o;2:x
'λx.forall(rectangle,filter(x.s, and[size1,triangle]))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:triangle
'λx.exists(or[size3,triangle], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:size3;4:triangle;3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(filter(x.s, blue), size3), green)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3;4:green
'λx.apply(and[apply(same_shape,iota(x.s)),apply(same_color,x.o)],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.contains(x.o, filter(filter(x.s, yellow), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green
'λx.empty(filter(filter(x.s, green), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size3
'λx.apply(rectangle,iota(filter(filter(x.s, green), nor[size3,and[nor[circle,triangle],triangle]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:nor[%s,%s];4:size3;4:and[%s,%s];4:nor[%s,%s];4:circle;4:triangle;4:triangle
'λx.apply(apply(same_size,iota(filter(filter(x.s, yellow), size1))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;1:%s.o;2:x
'λx.empty(filter(x.s, iff[size3,rectangle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size3;4:rectangle
'λx.empty(filter(filter(x.s, nand[apply(same_size,iota(x.s)),triangle]), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:triangle;4:size2
'λx.contains(x.o, filter(filter(filter(filter(x.s, size2), size3), green), or[size2,apply(same_size,iota(x.s))]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3;4:green;4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(x.s, or[yellow,and[size1,yellow]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:and[%s,%s];4:size1;4:yellow
'λx.apply(and[and[apply(size-gt,iota(x.s)),yellow],triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:yellow;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[not[apply(size-gt,iota(filter(filter(x.s, blue), triangle)))],nor[triangle,green]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle;4:nor[%s,%s];4:triangle;4:green;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(x.s, apply(same_size,iota(x.s))), and[size2,green])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:green
'λx.apply(apply(same_color,iota(filter(x.s, and[size2,green]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:green;1:%s.o;2:x
'λx.apply(nor[and[size3,size1],circle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:size3;4:size1;4:circle;1:%s.o;2:x
'λx.apply(iff[apply(same_color,x.o),apply(size-gt,iota(x.s))],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(implies[apply(size-lt,x.o),nand[or[size3,not[size1]],nor[and[size2,rectangle],size3]]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:nand[%s,%s];4:or[%s,%s];4:size3;4:not[%s];4:size1;4:nor[%s,%s];4:and[%s,%s];4:size2;4:rectangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size3,rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:rectangle;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(x.s, triangle), not[blue])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:not[%s];4:blue
'λx.apply(implies[and[not[rectangle],or[green,rectangle]],size2],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:not[%s];4:rectangle;4:or[%s,%s];4:green;4:rectangle;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(apply(same_shape,x.o),iota(filter(filter(x.s, size1), and[or[apply(same_color,iota(x.s)),size1],yellow])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size1;4:yellow
'λx.empty(filter(filter(x.s, blue), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle
'λx.exists(triangle, filter(x.s, and[triangle,not[size1]]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:not[%s];4:size1
'λx.exists(rectangle, filter(filter(x.s, blue), circle))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle
'λx.exists(apply(same_color,iota(filter(filter(x.s, rectangle), apply(same_size,iota(x.s))))), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(nor[yellow,and[size1,or[size3,triangle]]],iota(filter(filter(filter(x.s, green), and[yellow,size3]), blue)))'	0:apply(%s,%s);4:nor[%s,%s];4:yellow;4:and[%s,%s];4:size1;4:or[%s,%s];4:size3;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:yellow;4:size3;4:blue
'λx.forall(apply(same_shape,iota(x.s)),filter(filter(filter(x.s, size1), rectangle), implies[implies[green,size1],rectangle]))'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle;4:implies[%s,%s];4:implies[%s,%s];4:green;4:size1;4:rectangle
'λx.contains(x.o, filter(x.s, and[yellow,triangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:triangle
'λx.forall(blue,filter(x.s, and[size2,and[blue,size1]]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:and[%s,%s];4:blue;4:size1
'λx.forall(size3,filter(x.s, circle))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(or[or[circle,blue],and[size3,size2]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:circle;4:blue;4:and[%s,%s];4:size3;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(x.s, and[rectangle,circle]), rectangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:circle;4:rectangle
'λx.apply(green,iota(filter(x.s, or[implies[and[triangle,or[triangle,circle]],implies[and[size2,and[size3,and[size3,triangle]]],green]],size3])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:triangle;4:or[%s,%s];4:triangle;4:circle;4:implies[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:size3;4:and[%s,%s];4:size3;4:triangle;4:green;4:size3
'λx.exists(size1, filter(filter(x.s, size3), size1))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size1
'λx.exists(size1, filter(filter(x.s, size3), size3))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3
'λx.apply(and[or[and[yellow,triangle],circle],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:yellow;4:triangle;4:circle;4:blue;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(filter(x.s, not[rectangle]), size3), and[yellow,nand[size1,triangle]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;4:size3;4:and[%s,%s];4:yellow;4:nand[%s,%s];4:size1;4:triangle
'λx.exists(or[or[apply(size-leq,x.o),and[apply(same_size,iota(x.s)),not[triangle]]],green], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:not[%s];4:triangle;4:green;3:%s.s;2:x
'λx.forall(or[circle,and[nand[green,rectangle],apply(same_shape,iota(x.s))]],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:circle;4:and[%s,%s];4:nand[%s,%s];4:green;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(and[triangle,apply(same_color,iota(filter(filter(x.s, yellow), yellow)))],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.forall(not[and[yellow,green]],x.s)'	0:forall(%s,%s);4:not[%s];4:and[%s,%s];4:yellow;4:green;3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(filter(filter(filter(x.s, apply(same_size,x.o)), and[apply(same_color,x.o),circle]), rectangle), size2), and[yellow,size1])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;4:rectangle;4:size2;4:and[%s,%s];4:yellow;4:size1
'λx.apply(not[implies[blue,and[and[blue,not[blue]],size1]]],x.o)'	0:apply(%s,%s);4:not[%s];4:implies[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:blue;4:not[%s];4:blue;4:size1;1:%s.o;2:x
'λx.apply(size2,iota(filter(x.s, implies[triangle,and[size1,size2]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:triangle;4:and[%s,%s];4:size1;4:size2
'λx.apply(size3,iota(filter(filter(filter(filter(filter(filter(x.s, rectangle), yellow), size2), size1), rectangle), not[yellow])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:yellow;4:size2;4:size1;4:rectangle;4:not[%s];4:yellow
'λx.apply(not[size2],iota(filter(filter(filter(filter(x.s, apply(same_shape,x.o)), rectangle), yellow), green)))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle;4:yellow;4:green
'λx.apply(yellow,iota(filter(x.s, and[not[and[size1,rectangle]],green])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:size1;4:rectangle;4:green
'λx.apply(and[rectangle,and[blue,size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:blue;4:size1;1:%s.o;2:x
'λx.apply(not[apply(same_shape,x.o)],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.exists(nor[triangle,apply(same_shape,iota(filter(filter(x.s, green), size1)))], x.s)'	0:exists(%s, %s);4:nor[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1;3:%s.s;2:x
'λx.forall(and[size2,apply(same_color,iota(x.s))],filter(x.s, yellow))'	0:forall(%s,%s);4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(not[and[size2,yellow]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size2;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(not[not[size2]],iota(filter(x.s, and[rectangle,rectangle])))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:rectangle
'λx.apply(yellow,iota(filter(x.s, or[not[green],and[not[not[yellow]],green]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:green;4:and[%s,%s];4:not[%s];4:not[%s];4:yellow;4:green
'λx.apply(triangle,iota(filter(filter(filter(x.s, blue), blue), apply(same_size,x.o))))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(not[not[not[yellow]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:not[%s];4:yellow;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, apply(same_color,x.o)))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, or[or[not[triangle],apply(same_size,x.o)],and[nand[size3,size2],nand[iff[blue,rectangle],yellow]]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:not[%s];4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:nand[%s,%s];4:size3;4:size2;4:nand[%s,%s];4:iff[%s,%s];4:blue;4:rectangle;4:yellow
'λx.apply(and[green,and[size2,rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:size2;4:rectangle;1:%s.o;2:x
'λx.apply(and[blue,not[yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:not[%s];4:yellow;1:%s.o;2:x
'λx.apply(or[size3,not[apply(same_color,iota(x.s))]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(implies[triangle,apply(same_size,x.o)],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(filter(filter(x.s, not[and[size3,triangle]]), circle), blue), apply(size-gt,x.o))))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:size3;4:triangle;4:circle;4:blue;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.apply(iff[size2,or[yellow,nor[apply(same_color,iota(filter(filter(x.s, rectangle), and[yellow,yellow]))),not[rectangle]]]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:size2;4:or[%s,%s];4:yellow;4:nor[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:yellow;4:yellow;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.exists(triangle, filter(x.s, and[yellow,size3]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size3
'λx.apply(triangle,iota(filter(filter(filter(x.s, size3), triangle), or[blue,size2])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle;4:or[%s,%s];4:blue;4:size2
'λx.forall(and[triangle,circle],filter(x.s, and[green,not[triangle]]))'	0:forall(%s,%s);4:and[%s,%s];4:triangle;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:not[%s];4:triangle
'λx.contains(x.o, filter(filter(x.s, iff[apply(same_color,iota(x.s)),and[circle,size2]]), or[size3,or[size1,and[size3,triangle]]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size2;4:or[%s,%s];4:size3;4:or[%s,%s];4:size1;4:and[%s,%s];4:size3;4:triangle
'λx.apply(nand[circle,rectangle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:circle;4:rectangle;1:%s.o;2:x
'λx.apply(and[not[not[size2]],and[nor[circle,green],and[size2,apply(same_color,x.o)]]],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:not[%s];4:size2;4:and[%s,%s];4:nor[%s,%s];4:circle;4:green;4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(apply(size-gt,iota(x.s)),iota(filter(filter(filter(x.s, circle), and[green,rectangle]), or[rectangle,blue])))'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:green;4:rectangle;4:or[%s,%s];4:rectangle;4:blue
'λx.apply(size2,iota(filter(filter(filter(filter(filter(filter(filter(filter(filter(x.s, nand[triangle,or[green,rectangle]]), triangle), nand[blue,green]), size1), triangle), size2), and[not[circle],circle]), apply(same_size,iota(x.s))), iff[green,and[implies[green,and[or[size2,triangle],or[not[and[and[green,size3],size1]],circle]]],and[size2,blue]]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:triangle;4:or[%s,%s];4:green;4:rectangle;4:triangle;4:nand[%s,%s];4:blue;4:green;4:size1;4:triangle;4:size2;4:and[%s,%s];4:not[%s];4:circle;4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:iff[%s,%s];4:green;4:and[%s,%s];4:implies[%s,%s];4:green;4:and[%s,%s];4:or[%s,%s];4:size2;4:triangle;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:green;4:size3;4:size1;4:circle;4:and[%s,%s];4:size2;4:blue
'λx.apply(and[triangle,size1],iota(filter(filter(x.s, and[rectangle,yellow]), triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:yellow;4:triangle
'λx.apply(yellow,iota(filter(filter(filter(x.s, size1), size1), blue)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1;4:blue
'λx.apply(and[or[apply(same_shape,iota(x.s)),and[size2,green]],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:green;4:rectangle;1:%s.o;2:x
'λx.exists(size1, filter(filter(x.s, size1), or[yellow,blue]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:or[%s,%s];4:yellow;4:blue
'λx.contains(x.o, filter(x.s, triangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(rectangle,iota(filter(filter(x.s, and[size2,yellow]), iff[or[and[size3,iff[and[circle,circle],blue]],and[circle,size3]],and[size1,and[not[blue],yellow]]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:yellow;4:iff[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size3;4:iff[%s,%s];4:and[%s,%s];4:circle;4:circle;4:blue;4:and[%s,%s];4:circle;4:size3;4:and[%s,%s];4:size1;4:and[%s,%s];4:not[%s];4:blue;4:yellow
'λx.apply(green,iota(filter(filter(x.s, and[or[blue,triangle],and[iff[and[size2,size2],and[size1,and[not[apply(same_size,x.o)],blue]]],and[yellow,size3]]]), rectangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:blue;4:triangle;4:and[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:size2;4:size2;4:and[%s,%s];4:size1;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;4:and[%s,%s];4:yellow;4:size3;4:rectangle
'λx.forall(or[and[rectangle,triangle],and[not[yellow],and[circle,and[implies[apply(size-geq,iota(x.s)),size2],and[size2,size3]]]]],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:and[%s,%s];4:rectangle;4:triangle;4:and[%s,%s];4:not[%s];4:yellow;4:and[%s,%s];4:circle;4:and[%s,%s];4:implies[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:size2;4:size3;3:%s.s;2:x
'λx.forall(nor[size3,green],x.s)'	0:forall(%s,%s);4:nor[%s,%s];4:size3;4:green;3:%s.s;2:x
'λx.empty(filter(x.s, and[green,triangle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:triangle
'λx.exists(and[yellow,iff[size3,triangle]], filter(filter(x.s, circle), size1))'	0:exists(%s, %s);4:and[%s,%s];4:yellow;4:iff[%s,%s];4:size3;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1
'λx.apply(not[and[rectangle,and[circle,blue]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:circle;4:blue;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(x.s, circle), size1)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1
'λx.apply(size3,iota(filter(filter(x.s, circle), size1)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1
'λx.apply(size1,iota(filter(filter(x.s, circle), and[or[size3,triangle],green])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:or[%s,%s];4:size3;4:triangle;4:green
'λx.apply(size2,iota(filter(filter(filter(filter(filter(filter(filter(filter(filter(x.s, nand[triangle,or[triangle,rectangle]]), triangle), nand[blue,size2]), size1), triangle), size2), and[not[circle],circle]), apply(same_color,iota(x.s))), iff[green,and[implies[green,and[or[nor[and[and[triangle,yellow],and[not[circle],green]],size3],triangle],or[not[and[and[green,size3],size1]],circle]]],and[size2,blue]]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:triangle;4:or[%s,%s];4:triangle;4:rectangle;4:triangle;4:nand[%s,%s];4:blue;4:size2;4:size1;4:triangle;4:size2;4:and[%s,%s];4:not[%s];4:circle;4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:iff[%s,%s];4:green;4:and[%s,%s];4:implies[%s,%s];4:green;4:and[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:yellow;4:and[%s,%s];4:not[%s];4:circle;4:green;4:size3;4:triangle;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:green;4:size3;4:size1;4:circle;4:and[%s,%s];4:size2;4:blue
'λx.apply(and[apply(same_shape,x.o),rectangle],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(green,iota(filter(filter(x.s, size3), size3)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3
'λx.apply(or[circle,not[implies[and[not[not[and[size1,or[and[circle,triangle],and[size1,blue]]]]],size2],blue]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:not[%s];4:implies[%s,%s];4:and[%s,%s];4:not[%s];4:not[%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:and[%s,%s];4:circle;4:triangle;4:and[%s,%s];4:size1;4:blue;4:size2;4:blue;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, not[blue]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.apply(iff[or[triangle,size1],apply(same_color,iota(x.s))],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:or[%s,%s];4:triangle;4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(or[blue,or[or[triangle,not[circle]],not[and[green,iff[size2,blue]]]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:or[%s,%s];4:or[%s,%s];4:triangle;4:not[%s];4:circle;4:not[%s];4:and[%s,%s];4:green;4:iff[%s,%s];4:size2;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[green,size2],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:green;4:size2;1:%s.o;2:x
'λx.forall(and[size2,yellow],filter(x.s, size1))'	0:forall(%s,%s);4:and[%s,%s];4:size2;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(yellow,iota(filter(x.s, or[iff[not[yellow],apply(size-gt,x.o)],green])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:iff[%s,%s];4:not[%s];4:yellow;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:green
'λx.apply(implies[size1,green],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size1;4:green;1:%s.o;2:x
'λx.apply(and[or[and[yellow,green],apply(same_size,iota(filter(x.s, rectangle)))],and[not[or[circle,and[size1,not[or[yellow,not[size2]]]]]],or[green,not[not[green]]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:yellow;4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:not[%s];4:or[%s,%s];4:circle;4:and[%s,%s];4:size1;4:not[%s];4:or[%s,%s];4:yellow;4:not[%s];4:size2;4:or[%s,%s];4:green;4:not[%s];4:not[%s];4:green;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, triangle)), filter(filter(filter(filter(x.s, and[size1,triangle]), green), triangle), and[size2,blue]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:triangle;4:green;4:triangle;4:and[%s,%s];4:size2;4:blue
'λx.apply(green,iota(filter(filter(x.s, size2), green)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green
'λx.contains(iota(x.s), filter(filter(filter(x.s, green), and[apply(same_shape,x.o),rectangle]), nand[nand[size3,and[size3,apply(same_shape,x.o)]],not[triangle]]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle;4:nand[%s,%s];4:nand[%s,%s];4:size3;4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:triangle
'λx.apply(size3,iota(filter(filter(filter(x.s, size1), circle), size3)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle;4:size3
'λx.apply(and[and[circle,blue],yellow],iota(filter(x.s, implies[or[apply(same_color,iota(filter(x.s, apply(same_color,x.o)))),and[size2,circle]],green])))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:blue;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:size2;4:circle;4:green
'λx.apply(not[iff[rectangle,size2]],iota(filter(filter(x.s, rectangle), blue)))'	0:apply(%s,%s);4:not[%s];4:iff[%s,%s];4:rectangle;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue
'λx.apply(blue,iota(filter(filter(x.s, apply(same_color,iota(filter(filter(x.s, and[circle,or[circle,size1]]), and[size3,yellow])))), green)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:or[%s,%s];4:circle;4:size1;4:and[%s,%s];4:size3;4:yellow;4:green
'λx.apply(and[iff[green,yellow],size1],iota(filter(filter(x.s, size3), not[green])))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:green;4:yellow;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:green
'λx.apply(size2,iota(filter(filter(x.s, size3), green)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green
'λx.apply(iff[yellow,rectangle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:yellow;4:rectangle;1:%s.o;2:x
'λx.exists(yellow, filter(filter(x.s, triangle), green))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green
'λx.apply(size3,iota(filter(filter(x.s, size1), size3)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size3
'λx.apply(size3,iota(filter(filter(x.s, size3), size2)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2
'λx.apply(and[iff[rectangle,green],rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:rectangle;4:green;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(filter(filter(x.s, and[apply(same_size,iota(filter(filter(x.s, size2), or[size3,circle]))),nor[green,triangle]]), size3), triangle), size3)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:size3;4:circle;4:nor[%s,%s];4:green;4:triangle;4:size3;4:triangle;4:size3
'λx.apply(rectangle,iota(filter(filter(x.s, blue), and[and[size3,yellow],size3])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:and[%s,%s];4:size3;4:yellow;4:size3
'λx.empty(filter(x.s, and[size3,triangle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:triangle
'λx.exists(not[or[and[circle,nor[yellow,triangle]],not[blue]]], filter(filter(x.s, size1), and[iff[nor[triangle,rectangle],apply(same_color,x.o)],yellow]))'	0:exists(%s, %s);4:not[%s];4:or[%s,%s];4:and[%s,%s];4:circle;4:nor[%s,%s];4:yellow;4:triangle;4:not[%s];4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:iff[%s,%s];4:nor[%s,%s];4:triangle;4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow
'λx.forall(size1,filter(filter(x.s, triangle), not[apply(size-leq,iota(filter(filter(x.s, yellow), triangle)))]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:not[%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle
'λx.apply(or[circle,nand[size3,and[circle,size3]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:nand[%s,%s];4:size3;4:and[%s,%s];4:circle;4:size3;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(filter(x.s, nand[nand[and[blue,size2],green],size1]), circle), apply(size-gt,iota(filter(filter(x.s, size2), size3))))))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:blue;4:size2;4:green;4:size1;4:circle;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3
'λx.apply(and[yellow,nand[size1,triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:nand[%s,%s];4:size1;4:triangle;1:%s.o;2:x
'λx.forall(and[green,rectangle],filter(x.s, apply(same_color,iota(filter(filter(filter(filter(filter(filter(x.s, triangle), green), size3), triangle), size2), apply(size-lt,x.o))))))'	0:forall(%s,%s);4:and[%s,%s];4:green;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green;4:size3;4:triangle;4:size2;4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(filter(filter(filter(x.s, size3), size1), circle), apply(same_size,x.o)), apply(same_shape,x.o))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size1;4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, circle), size2)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size2
'λx.apply(green,iota(filter(filter(x.s, circle), size3)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3
'λx.apply(green,iota(filter(filter(x.s, circle), green)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green
'λx.apply(and[or[and[and[apply(size-lt,iota(x.s)),and[size2,size2]],yellow],size3],or[triangle,size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:size2;4:yellow;4:size3;4:or[%s,%s];4:triangle;4:size3;1:%s.o;2:x
'λx.apply(and[nor[apply(same_size,x.o),and[rectangle,green]],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:rectangle;4:green;4:size2;1:%s.o;2:x
'λx.apply(and[apply(same_size,iota(x.s)),rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:rectangle;1:%s.o;2:x
'λx.apply(and[yellow,green],iota(filter(x.s, and[blue,rectangle])))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:rectangle
'λx.exists(or[rectangle,nor[blue,size2]], filter(filter(x.s, iff[not[or[size1,and[blue,and[rectangle,and[yellow,apply(size-leq,iota(x.s))]]]]],green]), not[size1]))'	0:exists(%s, %s);4:or[%s,%s];4:rectangle;4:nor[%s,%s];4:blue;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:not[%s];4:or[%s,%s];4:size1;4:and[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:yellow;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:green;4:not[%s];4:size1
'λx.apply(apply(same_size,iota(filter(filter(filter(filter(x.s, triangle), blue), circle), size3))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue;4:circle;4:size3;1:%s.o;2:x
'λx.apply(iff[circle,yellow],iota(filter(x.s, apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:iff[%s,%s];4:circle;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.forall(or[and[size2,or[triangle,blue]],nor[circle,size3]],filter(x.s, blue))'	0:forall(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size2;4:or[%s,%s];4:triangle;4:blue;4:nor[%s,%s];4:circle;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.forall(and[yellow,nor[apply(same_shape,iota(filter(filter(filter(x.s, circle), and[not[green],triangle]), green))),blue]],filter(x.s, iff[size2,apply(same_size,iota(x.s))]))'	0:forall(%s,%s);4:and[%s,%s];4:yellow;4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:not[%s];4:green;4:triangle;4:green;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.exists(yellow, filter(x.s, rectangle))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.exists(not[nor[green,blue]], x.s)'	0:exists(%s, %s);4:not[%s];4:nor[%s,%s];4:green;4:blue;3:%s.s;2:x
'λx.apply(nor[and[not[apply(same_color,iota(filter(filter(x.s, rectangle), circle)))],size3],circle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle;4:size3;4:circle;1:%s.o;2:x
'λx.apply(and[circle,nand[nor[size3,rectangle],green]],iota(filter(filter(x.s, yellow), size3)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:nand[%s,%s];4:nor[%s,%s];4:size3;4:rectangle;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size3
'λx.apply(apply(same_shape,iota(filter(x.s, apply(same_shape,x.o)))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(or[circle,or[and[apply(same_size,x.o),apply(same_size,iota(x.s))],yellow]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(x.s, or[not[circle],rectangle])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:circle;4:rectangle
'λx.apply(not[and[size3,green]],iota(filter(filter(x.s, and[or[yellow,yellow],yellow]), not[or[green,yellow]])))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size3;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:yellow;4:yellow;4:yellow;4:not[%s];4:or[%s,%s];4:green;4:yellow
'λx.apply(circle,iota(filter(filter(filter(filter(x.s, not[yellow]), and[rectangle,green]), or[circle,iff[blue,and[size2,nor[yellow,and[yellow,rectangle]]]]]), size1)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:and[%s,%s];4:rectangle;4:green;4:or[%s,%s];4:circle;4:iff[%s,%s];4:blue;4:and[%s,%s];4:size2;4:nor[%s,%s];4:yellow;4:and[%s,%s];4:yellow;4:rectangle;4:size1
'λx.apply(iff[or[yellow,circle],circle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:or[%s,%s];4:yellow;4:circle;4:circle;1:%s.o;2:x
'λx.forall(not[and[green,circle]],x.s)'	0:forall(%s,%s);4:not[%s];4:and[%s,%s];4:green;4:circle;3:%s.s;2:x
'λx.contains(iota(filter(filter(filter(filter(filter(filter(x.s, green), and[yellow,yellow]), implies[rectangle,or[rectangle,green]]), yellow), not[blue]), green)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:yellow;4:yellow;4:implies[%s,%s];4:rectangle;4:or[%s,%s];4:rectangle;4:green;4:yellow;4:not[%s];4:blue;4:green;3:%s.s;2:x
'λx.forall(nand[rectangle,nand[not[size3],apply(same_color,iota(x.s))]],filter(x.s, circle))'	0:forall(%s,%s);4:nand[%s,%s];4:rectangle;4:nand[%s,%s];4:not[%s];4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.exists(size1, filter(filter(filter(x.s, yellow), not[nand[apply(size-gt,x.o),rectangle]]), size2))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:nand[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:rectangle;4:size2
'λx.empty(filter(x.s, nand[blue,size3]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:blue;4:size3
'λx.apply(and[and[size3,apply(same_color,x.o)],nand[green,rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:nand[%s,%s];4:green;4:rectangle;1:%s.o;2:x
'λx.forall(circle,filter(filter(filter(x.s, blue), apply(same_color,iota(x.s))), green))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:green
'λx.apply(not[nor[blue,or[or[and[triangle,yellow],size2],green]]],x.o)'	0:apply(%s,%s);4:not[%s];4:nor[%s,%s];4:blue;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:triangle;4:yellow;4:size2;4:green;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, apply(size-lt,x.o)), apply(same_size,x.o))))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(and[apply(same_size,iota(x.s)),and[apply(same_color,iota(x.s)),not[triangle]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:not[%s];4:triangle;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, triangle), and[triangle,and[size1,not[rectangle]]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:triangle;4:and[%s,%s];4:size1;4:not[%s];4:rectangle
'λx.apply(circle,iota(filter(x.s, blue)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.forall(triangle,filter(x.s, circle))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.contains(iota(filter(x.s, rectangle)), filter(filter(filter(filter(x.s, and[rectangle,size1]), and[size2,triangle]), apply(same_color,x.o)), triangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:size1;4:and[%s,%s];4:size2;4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle
'λx.apply(implies[rectangle,implies[or[or[nor[size2,implies[rectangle,and[and[circle,yellow],yellow]]],or[apply(same_color,iota(x.s)),circle]],nand[size3,not[green]]],size2]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:rectangle;4:implies[%s,%s];4:or[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:size2;4:implies[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:circle;4:yellow;4:yellow;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:circle;4:nand[%s,%s];4:size3;4:not[%s];4:green;4:size2;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(x.s, rectangle), nand[size3,apply(same_shape,x.o)])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:nand[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(filter(x.s, blue), size3), triangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3;4:triangle
'λx.apply(and[green,rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:rectangle;1:%s.o;2:x
'λx.apply(and[implies[circle,size1],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:circle;4:size1;4:yellow;1:%s.o;2:x
'λx.apply(and[green,apply(size-geq,iota(filter(filter(x.s, not[green]), and[triangle,or[green,yellow]])))],iota(filter(filter(x.s, and[yellow,apply(same_size,iota(filter(x.s, circle)))]), rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:and[%s,%s];4:triangle;4:or[%s,%s];4:green;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle
'λx.apply(or[triangle,not[and[green,size2]]],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:not[%s];4:and[%s,%s];4:green;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(or[and[green,triangle],nand[or[implies[and[and[circle,apply(same_shape,iota(filter(filter(x.s, green), not[and[size1,blue]])))],size1],size3],rectangle],or[blue,triangle]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:green;4:triangle;4:nand[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:and[%s,%s];4:size1;4:blue;4:size1;4:size3;4:rectangle;4:or[%s,%s];4:blue;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[and[size2,green],circle],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:size2;4:green;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[and[size1,or[implies[yellow,yellow],apply(size-geq,iota(x.s))]],size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:implies[%s,%s];4:yellow;4:yellow;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:size2;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(filter(filter(x.s, rectangle), size1), rectangle), green)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1;4:rectangle;4:green
'λx.contains(x.o, filter(x.s, and[green,rectangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:rectangle
'λx.forall(and[green,not[and[size3,blue]]],filter(filter(filter(filter(x.s, size3), green), triangle), blue))'	0:forall(%s,%s);4:and[%s,%s];4:green;4:not[%s];4:and[%s,%s];4:size3;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green;4:triangle;4:blue
'λx.apply(not[or[and[and[apply(same_shape,iota(filter(filter(x.s, not[yellow]), blue))),not[and[circle,apply(same_color,iota(x.s))]]],yellow],and[and[size2,triangle],size2]]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:blue;4:not[%s];4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:and[%s,%s];4:size2;4:triangle;4:size2;1:%s.o;2:x
'λx.apply(nand[and[blue,yellow],rectangle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:blue;4:yellow;4:rectangle;1:%s.o;2:x
'λx.exists(size2, filter(filter(x.s, blue), size2))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2
'λx.exists(size3, filter(filter(x.s, blue), size2))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2
'λx.exists(size2, filter(filter(x.s, blue), size3))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3
'λx.exists(size2, filter(filter(x.s, blue), green))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green
'λx.forall(blue,filter(filter(filter(filter(filter(x.s, and[size1,size1]), green), or[yellow,triangle]), iff[implies[green,implies[circle,size3]],green]), triangle))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size1;4:green;4:or[%s,%s];4:yellow;4:triangle;4:iff[%s,%s];4:implies[%s,%s];4:green;4:implies[%s,%s];4:circle;4:size3;4:green;4:triangle
'λx.forall(size2,filter(filter(x.s, size1), blue))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue
'λx.apply(rectangle,iota(filter(filter(filter(filter(x.s, not[green]), size1), not[blue]), nand[triangle,not[not[size1]]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:size1;4:not[%s];4:blue;4:nand[%s,%s];4:triangle;4:not[%s];4:not[%s];4:size1
'λx.apply(and[and[triangle,circle],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:circle;4:green;1:%s.o;2:x
'λx.apply(not[nor[implies[not[circle],size2],size3]],x.o)'	0:apply(%s,%s);4:not[%s];4:nor[%s,%s];4:implies[%s,%s];4:not[%s];4:circle;4:size2;4:size3;1:%s.o;2:x
'λx.apply(or[rectangle,or[circle,blue]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:or[%s,%s];4:circle;4:blue;1:%s.o;2:x
'λx.apply(size2,iota(filter(x.s, not[rectangle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle
'λx.apply(and[yellow,implies[size2,size2]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:implies[%s,%s];4:size2;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(not[apply(same_color,x.o)],iota(filter(x.s, green)))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(green,iota(filter(x.s, not[rectangle])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle
'λx.apply(and[apply(same_size,x.o),size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[apply(same_size,x.o),size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1;1:iota(%s);3:%s.s;2:x
'λx.exists(implies[nand[size2,and[or[size1,apply(same_size,iota(x.s))],not[or[nand[not[or[and[blue,triangle],blue]],and[not[size2],green]],not[and[rectangle,size3]]]]]],green], x.s)'	0:exists(%s, %s);4:implies[%s,%s];4:nand[%s,%s];4:size2;4:and[%s,%s];4:or[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:nand[%s,%s];4:not[%s];4:or[%s,%s];4:and[%s,%s];4:blue;4:triangle;4:blue;4:and[%s,%s];4:not[%s];4:size2;4:green;4:not[%s];4:and[%s,%s];4:rectangle;4:size3;4:green;3:%s.s;2:x
'λx.exists(size3, filter(filter(x.s, blue), and[circle,size1]))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:circle;4:size1
'λx.apply(green,iota(filter(filter(x.s, size3), or[not[and[triangle,and[rectangle,blue]]],and[blue,and[green,not[nand[rectangle,size2]]]]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:rectangle;4:blue;4:and[%s,%s];4:blue;4:and[%s,%s];4:green;4:not[%s];4:nand[%s,%s];4:rectangle;4:size2
'λx.empty(filter(filter(filter(x.s, not[triangle]), circle), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:circle;4:triangle
'λx.contains(iota(filter(filter(filter(filter(filter(x.s, size3), yellow), triangle), and[rectangle,size1]), and[circle,blue])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow;4:triangle;4:and[%s,%s];4:rectangle;4:size1;4:and[%s,%s];4:circle;4:blue;3:%s.s;2:x
'λx.apply(and[circle,nor[and[green,size3],and[and[or[apply(size-leq,x.o),size3],apply(size-geq,iota(x.s))],blue]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:nor[%s,%s];4:and[%s,%s];4:green;4:size3;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size3;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(filter(x.s, circle), triangle), size3)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle;4:size3
'λx.exists(and[circle,size1], filter(x.s, not[circle]))'	0:exists(%s, %s);4:and[%s,%s];4:circle;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.apply(nor[triangle,yellow],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:triangle;4:yellow;1:%s.o;2:x
'λx.apply(apply(size-leq,x.o),iota(filter(filter(x.s, green), blue)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue
'λx.exists(size2, filter(filter(x.s, size1), and[yellow,size1]))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:yellow;4:size1
'λx.apply(not[or[size2,green]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:size2;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[yellow,iff[size2,size3]],iota(filter(filter(filter(filter(x.s, size2), size2), green), size3)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:iff[%s,%s];4:size2;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2;4:green;4:size3
'λx.apply(iff[nand[size3,blue],yellow],iota(filter(filter(x.s, circle), rectangle)))'	0:apply(%s,%s);4:iff[%s,%s];4:nand[%s,%s];4:size3;4:blue;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle
'λx.apply(apply(size-geq,iota(filter(filter(filter(filter(filter(x.s, and[size2,or[green,green]]), and[yellow,size1]), blue), triangle), blue))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:or[%s,%s];4:green;4:green;4:and[%s,%s];4:yellow;4:size1;4:blue;4:triangle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(x.s, and[size3,triangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:triangle
'λx.contains(x.o, filter(x.s, and[size1,triangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:triangle
'λx.apply(nor[not[iff[and[apply(same_size,iota(x.s)),yellow],apply(size-leq,x.o)]],size1],iota(filter(filter(filter(filter(x.s, green), green), blue), not[green])))'	0:apply(%s,%s);4:nor[%s,%s];4:not[%s];4:iff[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:green;4:blue;4:not[%s];4:green
'λx.apply(apply(same_color,iota(filter(filter(filter(x.s, yellow), size2), and[size1,size3]))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2;4:and[%s,%s];4:size1;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(x.s, size2), size2)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2
'λx.apply(blue,iota(filter(filter(x.s, size3), size2)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2
'λx.empty(filter(x.s, and[triangle,size1]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:size1
'λx.contains(iota(x.s), filter(filter(filter(x.s, yellow), or[yellow,and[triangle,size3]]), blue))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:yellow;4:and[%s,%s];4:triangle;4:size3;4:blue
'λx.apply(and[apply(same_shape,iota(x.s)),yellow],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(triangle, filter(x.s, and[and[green,size3],and[apply(same_size,x.o),triangle]]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:green;4:size3;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle
'λx.apply(nand[iff[green,nor[size1,and[size3,not[not[green]]]]],circle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:iff[%s,%s];4:green;4:nor[%s,%s];4:size1;4:and[%s,%s];4:size3;4:not[%s];4:not[%s];4:green;4:circle;1:%s.o;2:x
'λx.apply(and[and[size1,size3],or[size1,and[and[size1,size1],implies[rectangle,size3]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:size3;4:or[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:size1;4:size1;4:implies[%s,%s];4:rectangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(filter(filter(filter(filter(x.s, rectangle), green), size2), and[yellow,size2]), size1), and[yellow,or[or[rectangle,green],apply(size-lt,x.o)]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green;4:size2;4:and[%s,%s];4:yellow;4:size2;4:size1;4:and[%s,%s];4:yellow;4:or[%s,%s];4:or[%s,%s];4:rectangle;4:green;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(x.s, not[not[and[green,size3]]]), nor[and[rectangle,implies[rectangle,and[and[apply(same_shape,iota(filter(x.s, and[size1,size3]))),and[yellow,and[size2,green]]],yellow]]],triangle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:and[%s,%s];4:green;4:size3;4:nor[%s,%s];4:and[%s,%s];4:rectangle;4:implies[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size3;4:and[%s,%s];4:yellow;4:and[%s,%s];4:size2;4:green;4:yellow;4:triangle
'λx.apply(size3,iota(filter(filter(x.s, green), and[and[not[iff[triangle,yellow]],nand[circle,implies[size2,rectangle]]],not[size2]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:iff[%s,%s];4:triangle;4:yellow;4:nand[%s,%s];4:circle;4:implies[%s,%s];4:size2;4:rectangle;4:not[%s];4:size2
'λx.forall(and[circle,green],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:circle;4:green;3:%s.s;2:x
'λx.contains(iota(filter(x.s, not[blue])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;3:%s.s;2:x
'λx.apply(and[iff[size1,implies[and[size1,size2],size3]],size2],iota(filter(filter(filter(x.s, blue), circle), or[rectangle,nor[triangle,size3]])))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:size1;4:implies[%s,%s];4:and[%s,%s];4:size1;4:size2;4:size3;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle;4:or[%s,%s];4:rectangle;4:nor[%s,%s];4:triangle;4:size3
'λx.apply(and[not[implies[and[blue,and[blue,blue]],rectangle]],apply(same_size,iota(filter(x.s, triangle)))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:implies[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:blue;4:blue;4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;1:%s.o;2:x
'λx.apply(nand[blue,yellow],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:blue;4:yellow;1:%s.o;2:x
'λx.apply(apply(size-gt,iota(filter(filter(x.s, size1), size3))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[or[and[and[and[not[not[size3]],not[green]],yellow],size3],and[blue,blue]],and[rectangle,or[size1,size2]]],iota(filter(filter(filter(x.s, or[size1,and[apply(same_color,iota(filter(filter(x.s, apply(size-lt,x.o)), size3))),blue]]), size3), rectangle)))'	0:apply(%s,%s);4:nand[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:not[%s];4:size3;4:not[%s];4:green;4:yellow;4:size3;4:and[%s,%s];4:blue;4:blue;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:size1;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:size3;4:blue;4:size3;4:rectangle
'λx.apply(not[implies[size3,or[size3,not[triangle]]]],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:not[%s];4:implies[%s,%s];4:size3;4:or[%s,%s];4:size3;4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(size1,iota(filter(filter(filter(filter(x.s, rectangle), and[rectangle,size3]), or[or[triangle,not[iff[and[nand[green,or[or[or[or[circle,or[or[size3,size3],circle]],blue],yellow],blue]],apply(size-lt,x.o)],or[nand[not[triangle],size3],rectangle]]]],and[triangle,and[apply(same_shape,x.o),size3]]]), size1)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:rectangle;4:size3;4:or[%s,%s];4:or[%s,%s];4:triangle;4:not[%s];4:iff[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:green;4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:circle;4:or[%s,%s];4:or[%s,%s];4:size3;4:size3;4:circle;4:blue;4:yellow;4:blue;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:or[%s,%s];4:nand[%s,%s];4:not[%s];4:triangle;4:size3;4:rectangle;4:and[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3;4:size1
'λx.exists(green, filter(filter(filter(x.s, green), apply(same_shape,x.o)), size3))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3
'λx.apply(rectangle,iota(filter(filter(x.s, green), triangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:triangle
'λx.apply(or[and[and[rectangle,size1],apply(same_shape,x.o)],rectangle],iota(filter(filter(x.s, size2), and[yellow,not[size3]])))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:yellow;4:not[%s];4:size3
'λx.apply(nor[nand[blue,circle],size1],iota(filter(filter(x.s, circle), size3)))'	0:apply(%s,%s);4:nor[%s,%s];4:nand[%s,%s];4:blue;4:circle;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3
'λx.apply(triangle,iota(filter(filter(filter(filter(filter(filter(filter(x.s, apply(same_color,iota(filter(x.s, size2)))), size3), nand[and[rectangle,implies[and[rectangle,implies[not[size1],rectangle]],apply(same_shape,x.o)]],size3]), size2), size1), triangle), or[triangle,size1])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3;4:nand[%s,%s];4:and[%s,%s];4:rectangle;4:implies[%s,%s];4:and[%s,%s];4:rectangle;4:implies[%s,%s];4:not[%s];4:size1;4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3;4:size2;4:size1;4:triangle;4:or[%s,%s];4:triangle;4:size1
'λx.exists(blue, filter(x.s, apply(same_shape,x.o)))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(and[rectangle,apply(same_size,iota(filter(x.s, size3)))],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_color,iota(filter(filter(x.s, yellow), nor[size3,triangle]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:nor[%s,%s];4:size3;4:triangle;1:%s.o;2:x
'λx.apply(or[implies[nor[or[and[triangle,apply(same_shape,iota(x.s))],size1],size3],apply(same_size,x.o)],or[not[apply(same_size,x.o)],or[size3,size2]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:implies[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size1;4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:size3;4:size2;1:iota(%s);3:%s.s;2:x
'λx.forall(not[yellow],x.s)'	0:forall(%s,%s);4:not[%s];4:yellow;3:%s.s;2:x
'λx.contains(iota(filter(x.s, and[and[and[and[apply(same_shape,x.o),circle],nor[not[and[rectangle,implies[rectangle,size3]]],size3]],and[rectangle,and[blue,triangle]]],not[circle]])), filter(x.s, size1))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;4:nor[%s,%s];4:not[%s];4:and[%s,%s];4:rectangle;4:implies[%s,%s];4:rectangle;4:size3;4:size3;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:blue;4:triangle;4:not[%s];4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.forall(and[not[size3],triangle],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:not[%s];4:size3;4:triangle;3:%s.s;2:x
'λx.apply(not[nor[apply(size-gt,x.o),and[apply(same_size,iota(x.s)),triangle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:nor[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:triangle;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(filter(filter(filter(filter(filter(x.s, or[size2,blue]), and[triangle,and[not[blue],nor[blue,size1]]]), circle), size1), size2), size3), size1)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:blue;4:and[%s,%s];4:triangle;4:and[%s,%s];4:not[%s];4:blue;4:nor[%s,%s];4:blue;4:size1;4:circle;4:size1;4:size2;4:size3;4:size1
'λx.forall(green,filter(filter(x.s, or[not[size1],green]), size2))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:size1;4:green;4:size2
'λx.apply(implies[apply(same_size,iota(filter(filter(filter(x.s, green), and[and[apply(same_color,iota(x.s)),size2],circle]), and[rectangle,apply(size-geq,iota(filter(x.s, rectangle)))]))),size3],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size2;4:circle;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(filter(x.s, green), triangle), green)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:triangle;4:green
'λx.empty(filter(filter(x.s, and[size1,size1]), apply(size-gt,x.o)))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size1;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.apply(iff[size3,apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(x.s, and[size3,green]))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[iff[blue,blue],apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:blue;4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[triangle,apply(size-lt,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(or[blue,and[triangle,implies[apply(size-leq,x.o),and[size1,blue]]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:and[%s,%s];4:triangle;4:implies[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:and[%s,%s];4:size1;4:blue;1:%s.o;2:x
'λx.exists(triangle, filter(x.s, circle))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.exists(rectangle, filter(x.s, blue))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.forall(green,filter(filter(filter(filter(filter(x.s, not[green]), apply(same_color,iota(filter(filter(x.s, size3), apply(same_color,iota(x.s)))))), triangle), and[size1,size3]), and[blue,apply(same_color,x.o)]))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:size1;4:size3;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, nor[and[or[size1,size2],triangle],blue])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size1;4:size2;4:triangle;4:blue
'λx.apply(and[not[apply(same_size,x.o)],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1;1:%s.o;2:x
'λx.apply(apply(size-gt,iota(filter(filter(x.s, size2), circle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle;1:%s.o;2:x
'λx.apply(implies[size3,apply(same_size,iota(filter(filter(x.s, triangle), green)))],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green;1:%s.o;2:x
'λx.apply(and[apply(same_size,iota(filter(x.s, nor[green,size3]))),and[size1,size1]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:green;4:size3;4:and[%s,%s];4:size1;4:size1;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, size3), and[not[triangle],apply(size-gt,iota(filter(filter(x.s, size1), nor[or[or[triangle,or[circle,apply(same_color,iota(x.s))]],or[blue,triangle]],yellow])))]), and[circle,iff[blue,not[apply(same_shape,iota(x.s))]]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:not[%s];4:triangle;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:nor[%s,%s];4:or[%s,%s];4:or[%s,%s];4:triangle;4:or[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:triangle;4:yellow;4:and[%s,%s];4:circle;4:iff[%s,%s];4:blue;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(not[size2],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(not[size1],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(not[size3],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:%s.s;2:x
'λx.forall(nor[and[apply(size-lt,iota(filter(x.s, size2))),or[and[apply(same_shape,iota(x.s)),and[or[blue,blue],iff[rectangle,rectangle]]],size3]],yellow],filter(x.s, size3))'	0:forall(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:blue;4:blue;4:iff[%s,%s];4:rectangle;4:rectangle;4:size3;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(and[rectangle,size2], filter(filter(x.s, and[green,blue]), triangle))'	0:exists(%s, %s);4:and[%s,%s];4:rectangle;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:blue;4:triangle
'λx.apply(blue,iota(filter(filter(filter(filter(x.s, not[apply(same_shape,iota(x.s))]), triangle), yellow), blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle;4:yellow;4:blue
'λx.empty(filter(filter(filter(filter(filter(filter(filter(x.s, size2), triangle), apply(same_color,iota(filter(filter(filter(x.s, not[circle]), not[not[implies[circle,size3]]]), blue)))), yellow), size1), circle), or[rectangle,green]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:not[%s];4:not[%s];4:implies[%s,%s];4:circle;4:size3;4:blue;4:yellow;4:size1;4:circle;4:or[%s,%s];4:rectangle;4:green
'λx.forall(size2,filter(filter(filter(filter(filter(filter(filter(x.s, yellow), not[size2]), circle), size2), yellow), triangle), apply(same_shape,x.o)))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:size2;4:circle;4:size2;4:yellow;4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(not[size1],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(circle,iota(filter(filter(filter(filter(x.s, yellow), and[rectangle,or[size2,iff[size1,size3]]]), and[triangle,yellow]), triangle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:size2;4:iff[%s,%s];4:size1;4:size3;4:and[%s,%s];4:triangle;4:yellow;4:triangle
'λx.apply(implies[apply(same_size,iota(filter(filter(filter(filter(filter(filter(filter(x.s, size3), and[yellow,triangle]), triangle), size3), rectangle), size3), green))),blue],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:yellow;4:triangle;4:triangle;4:size3;4:rectangle;4:size3;4:green;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(or[or[circle,blue],or[or[not[and[apply(size-lt,x.o),implies[size3,apply(same_color,iota(filter(x.s, rectangle)))]]],size1],rectangle]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:circle;4:blue;4:or[%s,%s];4:or[%s,%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:implies[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.exists(apply(same_size,iota(filter(x.s, circle))), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, circle), and[apply(same_size,x.o),and[circle,yellow]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:circle;4:yellow
'λx.apply(implies[and[size1,size3],circle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:size1;4:size3;4:circle;1:%s.o;2:x
'λx.apply(and[iff[green,rectangle],yellow],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:green;4:rectangle;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(implies[green,size2],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:implies[%s,%s];4:green;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.exists(and[size2,rectangle], filter(filter(x.s, not[yellow]), nand[and[or[blue,or[size1,or[not[yellow],yellow]]],size1],not[triangle]]))'	0:exists(%s, %s);4:and[%s,%s];4:size2;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:nand[%s,%s];4:and[%s,%s];4:or[%s,%s];4:blue;4:or[%s,%s];4:size1;4:or[%s,%s];4:not[%s];4:yellow;4:yellow;4:size1;4:not[%s];4:triangle
'λx.apply(implies[apply(size-geq,iota(x.s)),size1],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:size1;1:%s.o;2:x
'λx.apply(and[blue,not[or[green,not[green]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:not[%s];4:or[%s,%s];4:green;4:not[%s];4:green;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(x.s, size1), green), triangle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green;4:triangle;3:%s.s;2:x
'λx.apply(apply(same_size,iota(filter(x.s, circle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, and[rectangle,circle]), not[size1])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:circle;4:not[%s];4:size1
'λx.apply(and[and[not[yellow],circle],circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:yellow;4:circle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, blue), nand[and[and[size2,apply(same_size,iota(x.s))],and[green,rectangle]],yellow]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:green;4:rectangle;4:yellow
'λx.apply(or[and[apply(same_shape,iota(filter(filter(x.s, size3), size1))),yellow],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size1;4:yellow;4:blue;1:%s.o;2:x
'λx.apply(and[apply(same_color,x.o),apply(same_color,x.o)],iota(filter(filter(filter(filter(filter(filter(filter(x.s, circle), green), size2), yellow), rectangle), and[green,triangle]), and[size2,blue])))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green;4:size2;4:yellow;4:rectangle;4:and[%s,%s];4:green;4:triangle;4:and[%s,%s];4:size2;4:blue
'λx.exists(iff[size2,not[rectangle]], filter(filter(x.s, size3), size2))'	0:exists(%s, %s);4:iff[%s,%s];4:size2;4:not[%s];4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2
'λx.apply(apply(same_color,iota(filter(filter(filter(filter(x.s, apply(same_color,iota(x.s))), circle), and[green,and[and[yellow,iff[size3,size1]],implies[size1,green]]]), and[apply(same_color,x.o),apply(same_color,iota(x.s))]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:yellow;4:iff[%s,%s];4:size3;4:size1;4:implies[%s,%s];4:size1;4:green;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(not[and[rectangle,circle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:rectangle;4:circle;1:%s.o;2:x
'λx.exists(blue, filter(filter(x.s, green), not[circle]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:circle
'λx.empty(filter(filter(x.s, blue), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow
'λx.apply(iff[and[yellow,green],circle],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:yellow;4:green;4:circle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, blue), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle
'λx.apply(apply(same_color,x.o),iota(filter(filter(filter(x.s, green), yellow), nand[not[size1],blue])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow;4:nand[%s,%s];4:not[%s];4:size1;4:blue
'λx.apply(or[blue,nand[not[size3],apply(same_color,x.o)]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:nand[%s,%s];4:not[%s];4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(or[size3,green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:green;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, circle), circle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:circle
'λx.apply(iff[size1,not[green]],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:size1;4:not[%s];4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[apply(same_size,iota(filter(x.s, blue))),circle],iota(filter(filter(filter(x.s, size1), yellow), apply(same_color,x.o))))'	0:apply(%s,%s);4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.forall(and[rectangle,green],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:rectangle;4:green;3:%s.s;2:x
'λx.apply(or[blue,yellow],iota(filter(filter(x.s, apply(same_shape,iota(filter(filter(x.s, green), iff[not[green],size3])))), not[nor[circle,green]])))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:iff[%s,%s];4:not[%s];4:green;4:size3;4:not[%s];4:nor[%s,%s];4:circle;4:green
'λx.contains(iota(x.s), filter(x.s, or[triangle,blue]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:blue
'λx.apply(nand[nand[circle,yellow],iff[and[yellow,green],size1]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:nand[%s,%s];4:circle;4:yellow;4:iff[%s,%s];4:and[%s,%s];4:yellow;4:green;4:size1;1:%s.o;2:x
'λx.apply(nand[triangle,size1],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:size1;1:%s.o;2:x
'λx.apply(nand[triangle,size2],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:size2;1:%s.o;2:x
'λx.apply(and[size1,and[yellow,green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:and[%s,%s];4:yellow;4:green;1:%s.o;2:x
'λx.exists(and[size1,green], filter(filter(filter(x.s, size2), nand[blue,not[size3]]), blue))'	0:exists(%s, %s);4:and[%s,%s];4:size1;4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:nand[%s,%s];4:blue;4:not[%s];4:size3;4:blue
'λx.apply(or[triangle,circle],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.forall(not[size3],filter(filter(x.s, not[size2]), apply(size-geq,iota(x.s))))'	0:forall(%s,%s);4:not[%s];4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x
'λx.exists(and[rectangle,green], filter(x.s, rectangle))'	0:exists(%s, %s);4:and[%s,%s];4:rectangle;4:green;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.exists(not[and[apply(size-gt,iota(x.s)),yellow]], x.s)'	0:exists(%s, %s);4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:yellow;3:%s.s;2:x
'λx.exists(apply(size-leq,iota(x.s)), filter(x.s, implies[nand[rectangle,yellow],yellow]))'	0:exists(%s, %s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:nand[%s,%s];4:rectangle;4:yellow;4:yellow
'λx.apply(size3,iota(filter(filter(filter(x.s, size3), not[green]), not[circle])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:green;4:not[%s];4:circle
'λx.exists(size2, filter(filter(filter(x.s, circle), triangle), rectangle))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle;4:rectangle
'λx.apply(and[size2,size3],iota(filter(filter(x.s, nand[and[size1,circle],implies[green,nor[not[triangle],yellow]]]), not[blue])))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:and[%s,%s];4:size1;4:circle;4:implies[%s,%s];4:green;4:nor[%s,%s];4:not[%s];4:triangle;4:yellow;4:not[%s];4:blue
'λx.apply(and[size1,size2],iota(filter(filter(x.s, and[apply(same_size,x.o),green]), and[yellow,circle])))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;4:and[%s,%s];4:yellow;4:circle
'λx.apply(nand[blue,and[rectangle,rectangle]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:nand[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.forall(nand[size3,green],x.s)'	0:forall(%s,%s);4:nand[%s,%s];4:size3;4:green;3:%s.s;2:x
'λx.apply(and[and[and[size3,size3],circle],or[blue,and[size1,size2]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:size3;4:circle;4:or[%s,%s];4:blue;4:and[%s,%s];4:size1;4:size2;1:%s.o;2:x
'λx.apply(not[and[yellow,and[nand[green,apply(size-geq,iota(x.s))],iff[not[circle],not[or[size3,or[or[not[green],blue],circle]]]]]]],iota(filter(filter(filter(x.s, size2), iff[yellow,size3]), circle)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:nand[%s,%s];4:green;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:iff[%s,%s];4:not[%s];4:circle;4:not[%s];4:or[%s,%s];4:size3;4:or[%s,%s];4:or[%s,%s];4:not[%s];4:green;4:blue;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:iff[%s,%s];4:yellow;4:size3;4:circle
'λx.apply(or[size2,green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:green;1:%s.o;2:x
'λx.apply(yellow,iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(and[yellow,nand[triangle,not[or[yellow,and[not[green],size3]]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:nand[%s,%s];4:triangle;4:not[%s];4:or[%s,%s];4:yellow;4:and[%s,%s];4:not[%s];4:green;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[yellow,green],iota(filter(x.s, not[size1])))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1
'λx.apply(blue,iota(filter(x.s, and[size2,yellow])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:yellow
'λx.apply(or[yellow,not[apply(same_shape,iota(filter(filter(x.s, size2), size1)))]],iota(filter(x.s, and[or[rectangle,and[rectangle,size1]],and[rectangle,not[rectangle]]])))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:and[%s,%s];4:rectangle;4:size1;4:and[%s,%s];4:rectangle;4:not[%s];4:rectangle
'λx.forall(and[rectangle,triangle],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:rectangle;4:triangle;3:%s.s;2:x
'λx.apply(and[or[size1,and[circle,triangle]],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size1;4:and[%s,%s];4:circle;4:triangle;4:rectangle;1:%s.o;2:x
'λx.apply(and[iff[iff[size1,circle],size2],size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:iff[%s,%s];4:size1;4:circle;4:size2;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[triangle,circle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:circle;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, rectangle), apply(same_size,x.o)))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(and[apply(same_size,iota(filter(x.s, blue))),not[size2]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:size2;1:iota(%s);3:%s.s;2:x
'λx.exists(and[apply(same_color,iota(x.s)),size1], filter(filter(x.s, implies[not[size3],size2]), size1))'	0:exists(%s, %s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:not[%s];4:size3;4:size2;4:size1
'λx.apply(rectangle,iota(filter(filter(x.s, size3), rectangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle
'λx.apply(and[or[yellow,or[size1,and[nor[and[triangle,and[circle,triangle]],size1],or[and[green,size3],size3]]]],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:yellow;4:or[%s,%s];4:size1;4:and[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:circle;4:triangle;4:size1;4:or[%s,%s];4:and[%s,%s];4:green;4:size3;4:size3;4:size3;1:%s.o;2:x
'λx.apply(and[size2,not[size3]],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(yellow,iota(filter(filter(filter(filter(x.s, green), apply(same_shape,iota(filter(x.s, circle)))), not[size1]), blue)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:size1;4:blue
'λx.apply(or[not[yellow],circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:yellow;4:circle;1:%s.o;2:x
'λx.forall(green,filter(filter(x.s, triangle), triangle))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:triangle
'λx.forall(green,filter(x.s, and[or[rectangle,or[triangle,nand[triangle,size2]]],apply(size-geq,iota(filter(filter(filter(filter(filter(x.s, yellow), or[apply(same_size,x.o),and[nor[not[yellow],yellow],implies[blue,triangle]]]), blue), blue), or[blue,or[size3,apply(size-geq,x.o)]])))]))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:or[%s,%s];4:triangle;4:nand[%s,%s];4:triangle;4:size2;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:nor[%s,%s];4:not[%s];4:yellow;4:yellow;4:implies[%s,%s];4:blue;4:triangle;4:blue;4:blue;4:or[%s,%s];4:blue;4:or[%s,%s];4:size3;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.empty(filter(filter(x.s, yellow), or[and[green,or[size2,or[size2,size2]]],and[size3,and[size2,and[rectangle,blue]]]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:and[%s,%s];4:green;4:or[%s,%s];4:size2;4:or[%s,%s];4:size2;4:size2;4:and[%s,%s];4:size3;4:and[%s,%s];4:size2;4:and[%s,%s];4:rectangle;4:blue
'λx.apply(and[triangle,iff[yellow,or[size1,blue]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:iff[%s,%s];4:yellow;4:or[%s,%s];4:size1;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[or[size1,nand[green,size3]],rectangle],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:or[%s,%s];4:size1;4:nand[%s,%s];4:green;4:size3;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_size,x.o),iota(filter(x.s, size3)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(apply(same_size,x.o),iota(filter(x.s, green)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.forall(and[apply(same_color,iota(x.s)),size1],filter(x.s, size1))'	0:forall(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(not[and[not[blue],size3]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:blue;4:size3;1:%s.o;2:x
'λx.apply(and[triangle,not[and[apply(same_size,x.o),size3]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;1:%s.o;2:x
'λx.apply(apply(same_color,x.o),iota(filter(filter(x.s, size2), apply(same_shape,iota(x.s)))))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(and[nor[rectangle,apply(size-geq,iota(x.s))],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:rectangle;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:rectangle;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, iff[size1,green]), size2)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size1;4:green;4:size2;3:%s.s;2:x
'λx.contains(iota(filter(filter(x.s, and[and[apply(same_size,iota(x.s)),circle],implies[size1,green]]), green)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:circle;4:implies[%s,%s];4:size1;4:green;4:green;3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, and[green,blue]), blue)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:blue;4:blue
'λx.apply(and[circle,and[nand[apply(same_size,iota(filter(filter(x.s, triangle), rectangle))),apply(same_shape,x.o)],size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:and[%s,%s];4:nand[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;1:%s.o;2:x
'λx.apply(not[and[size2,nand[or[rectangle,apply(same_color,x.o)],blue]]],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size2;4:nand[%s,%s];4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[and[or[rectangle,and[triangle,and[apply(same_size,x.o),yellow]]],size2],and[circle,size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:rectangle;4:and[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow;4:size2;4:and[%s,%s];4:circle;4:size3;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(x.s, not[nor[circle,size1]]), iff[circle,green]), size2)), filter(x.s, and[size2,not[or[and[apply(same_size,x.o),rectangle],size3]]]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:nor[%s,%s];4:circle;4:size1;4:iff[%s,%s];4:circle;4:green;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:rectangle;4:size3
'λx.apply(and[size1,apply(same_color,iota(x.s))],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(nor[triangle,and[rectangle,triangle]],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:triangle;4:and[%s,%s];4:rectangle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.exists(not[rectangle], filter(x.s, size2))'	0:exists(%s, %s);4:not[%s];4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(yellow,iota(filter(x.s, or[yellow,yellow])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:yellow
'λx.exists(not[apply(same_shape,iota(filter(x.s, and[and[size2,green],rectangle])))], filter(x.s, triangle))'	0:exists(%s, %s);4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size2;4:green;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(size2,iota(filter(filter(filter(x.s, green), and[or[circle,size2],not[blue]]), size3)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:or[%s,%s];4:circle;4:size2;4:not[%s];4:blue;4:size3
'λx.apply(and[size1,or[size3,and[or[blue,iff[yellow,apply(same_size,iota(x.s))]],green]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:or[%s,%s];4:size3;4:and[%s,%s];4:or[%s,%s];4:blue;4:iff[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:green;1:%s.o;2:x
'λx.exists(or[size1,and[or[size2,size3],circle]], filter(filter(filter(x.s, yellow), size2), not[size1]))'	0:exists(%s, %s);4:or[%s,%s];4:size1;4:and[%s,%s];4:or[%s,%s];4:size2;4:size3;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2;4:not[%s];4:size1
'λx.apply(or[size2,nand[not[and[size1,rectangle]],blue]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:nand[%s,%s];4:not[%s];4:and[%s,%s];4:size1;4:rectangle;4:blue;1:%s.o;2:x
'λx.apply(or[yellow,and[and[circle,rectangle],yellow]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:and[%s,%s];4:and[%s,%s];4:circle;4:rectangle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(x.s, and[and[not[not[apply(same_size,x.o)]],triangle],size2])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle;4:size2
'λx.apply(not[size1],iota(filter(filter(filter(x.s, blue), or[triangle,triangle]), and[green,and[green,apply(size-geq,iota(filter(x.s, not[rectangle])))]])))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:triangle;4:triangle;4:and[%s,%s];4:green;4:and[%s,%s];4:green;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle
'λx.apply(and[size2,not[and[not[green],rectangle]]],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:not[%s];4:and[%s,%s];4:not[%s];4:green;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(green,iota(filter(x.s, not[not[triangle]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:triangle
'λx.apply(or[size1,green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:green;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, size3), size1)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size1
'λx.apply(apply(same_color,iota(x.s)),iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(or[yellow,size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:size3;1:%s.o;2:x
'λx.apply(or[and[apply(same_size,x.o),apply(size-leq,iota(x.s))],size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:size1;1:%s.o;2:x
'λx.exists(and[triangle,yellow], filter(filter(x.s, and[size3,and[blue,and[green,circle]]]), apply(same_color,iota(filter(x.s, circle)))))'	0:exists(%s, %s);4:and[%s,%s];4:triangle;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:and[%s,%s];4:blue;4:and[%s,%s];4:green;4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(apply(same_shape,iota(filter(x.s, not[not[not[and[and[rectangle,rectangle],or[nand[size1,triangle],size1]]]]]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:rectangle;4:or[%s,%s];4:nand[%s,%s];4:size1;4:triangle;4:size1;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, or[green,rectangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:rectangle
'λx.exists(or[not[apply(same_shape,x.o)],yellow], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow;3:%s.s;2:x
'λx.apply(and[circle,apply(same_color,x.o)],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(blue,iota(filter(x.s, and[or[implies[nor[or[and[triangle,apply(same_shape,iota(x.s))],size1],size3],apply(same_size,x.o)],or[not[apply(same_size,x.o)],or[size3,size2]]],circle])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size1;4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:size3;4:size2;4:circle
'λx.exists(size1, filter(filter(filter(filter(filter(filter(x.s, rectangle), size3), green), circle), rectangle), circle))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3;4:green;4:circle;4:rectangle;4:circle
'λx.forall(implies[not[and[size3,not[size2]]],apply(same_size,x.o)],filter(filter(filter(x.s, rectangle), rectangle), size2))'	0:forall(%s,%s);4:implies[%s,%s];4:not[%s];4:and[%s,%s];4:size3;4:not[%s];4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle;4:size2
'λx.apply(iff[size3,circle],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:size3;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[and[circle,circle],size1],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:circle;4:circle;4:size1;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, and[circle,and[and[size3,blue],green]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:size3;4:blue;4:green
'λx.contains(iota(filter(filter(filter(filter(filter(x.s, apply(size-gt,iota(filter(filter(filter(x.s, not[size3]), size2), triangle)))), yellow), rectangle), nand[and[size1,rectangle],triangle]), and[triangle,and[green,yellow]])), filter(filter(filter(filter(x.s, size1), circle), size2), not[yellow]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;4:size2;4:triangle;4:yellow;4:rectangle;4:nand[%s,%s];4:and[%s,%s];4:size1;4:rectangle;4:triangle;4:and[%s,%s];4:triangle;4:and[%s,%s];4:green;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle;4:size2;4:not[%s];4:yellow
'λx.empty(filter(x.s, or[iff[not[yellow],apply(size-gt,x.o)],green]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:iff[%s,%s];4:not[%s];4:yellow;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:green
'λx.apply(and[yellow,nor[apply(same_shape,x.o),triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle;1:%s.o;2:x
'λx.apply(iff[size2,or[and[circle,size3],blue]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:size2;4:or[%s,%s];4:and[%s,%s];4:circle;4:size3;4:blue;1:%s.o;2:x
'λx.apply(nor[blue,yellow],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:blue;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(filter(x.s, blue), blue), and[or[size3,size3],triangle])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue;4:and[%s,%s];4:or[%s,%s];4:size3;4:size3;4:triangle
'λx.apply(and[and[yellow,yellow],rectangle],iota(filter(filter(x.s, green), and[triangle,and[blue,not[nor[size3,not[size2]]]]])))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:yellow;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:triangle;4:and[%s,%s];4:blue;4:not[%s];4:nor[%s,%s];4:size3;4:not[%s];4:size2
'λx.apply(or[nor[yellow,size1],or[size3,size2]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:nor[%s,%s];4:yellow;4:size1;4:or[%s,%s];4:size3;4:size2;1:iota(%s);3:%s.s;2:x
'λx.exists(implies[yellow,circle], x.s)'	0:exists(%s, %s);4:implies[%s,%s];4:yellow;4:circle;3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(filter(x.s, or[triangle,size3]), triangle), size2)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:size3;4:triangle;4:size2
'λx.apply(and[yellow,or[size1,yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:or[%s,%s];4:size1;4:yellow;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, size1), size1)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1
'λx.apply(or[or[size2,blue],or[and[yellow,triangle],rectangle]],iota(filter(filter(filter(x.s, or[not[circle],green]), size3), yellow)))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:size2;4:blue;4:or[%s,%s];4:and[%s,%s];4:yellow;4:triangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:circle;4:green;4:size3;4:yellow
'λx.apply(triangle,iota(filter(filter(x.s, size2), size2)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2
'λx.apply(and[iff[blue,rectangle],yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:blue;4:rectangle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(x.s, and[yellow,triangle])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:triangle
'λx.apply(green,iota(filter(filter(x.s, rectangle), yellow)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:yellow
'λx.apply(not[circle],iota(filter(filter(x.s, nor[nor[yellow,and[yellow,apply(same_size,x.o)]],circle]), green)))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:nor[%s,%s];4:yellow;4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;4:green
'λx.apply(apply(size-geq,iota(filter(x.s, rectangle))),iota(filter(x.s, or[not[triangle],size2])))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:triangle;4:size2
'λx.apply(nor[green,and[and[or[not[triangle],not[blue]],and[rectangle,circle]],nor[nand[not[and[yellow,green]],rectangle],triangle]]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:not[%s];4:triangle;4:not[%s];4:blue;4:and[%s,%s];4:rectangle;4:circle;4:nor[%s,%s];4:nand[%s,%s];4:not[%s];4:and[%s,%s];4:yellow;4:green;4:rectangle;4:triangle;1:%s.o;2:x
'λx.exists(nor[green,size3], x.s)'	0:exists(%s, %s);4:nor[%s,%s];4:green;4:size3;3:%s.s;2:x
'λx.apply(or[circle,green],iota(filter(filter(x.s, apply(same_color,x.o)), size2)))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size2
'λx.apply(and[iff[and[green,iff[green,size1]],apply(size-gt,iota(filter(x.s, iff[yellow,and[rectangle,circle]])))],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:green;4:iff[%s,%s];4:green;4:size1;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:yellow;4:and[%s,%s];4:rectangle;4:circle;4:size1;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(x.s, triangle))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.forall(size2,filter(filter(x.s, apply(size-leq,iota(x.s))), size2))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:size2
'λx.apply(or[not[and[size2,rectangle]],size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:and[%s,%s];4:size2;4:rectangle;4:size1;1:%s.o;2:x
'λx.contains(iota(filter(x.s, implies[nor[triangle,apply(same_color,x.o)],size1])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:nor[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1;3:%s.s;2:x
'λx.contains(iota(x.s), filter(filter(x.s, not[size2]), circle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:circle
'λx.apply(nor[implies[or[nor[size1,green],yellow],yellow],and[size3,and[not[and[size1,and[or[blue,and[and[apply(same_size,x.o),circle],apply(same_color,x.o)]],triangle]]],or[green,blue]]]],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:size1;4:green;4:yellow;4:yellow;4:and[%s,%s];4:size3;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:or[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;4:or[%s,%s];4:green;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(x.s, implies[size2,yellow])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size2;4:yellow
'λx.contains(iota(x.s), filter(x.s, and[size1,nand[rectangle,and[size1,apply(same_shape,iota(x.s))]]]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:nand[%s,%s];4:rectangle;4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size3,not[size2]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:not[%s];4:size2;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(x.s, size2), size3)), filter(x.s, or[size3,size2]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:size2
'λx.apply(apply(same_size,iota(x.s)),iota(filter(x.s, and[size2,not[or[blue,apply(size-lt,x.o)]]])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:not[%s];4:or[%s,%s];4:blue;4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.empty(filter(x.s, blue))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(size1,iota(filter(filter(filter(x.s, size2), size1), rectangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1;4:rectangle
'λx.apply(yellow,iota(filter(filter(x.s, nand[iff[nor[and[and[size3,size1],size1],blue],blue],size3]), blue)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:iff[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:size1;4:size1;4:blue;4:blue;4:size3;4:blue
'λx.apply(not[triangle],iota(filter(filter(filter(x.s, or[size1,size2]), and[rectangle,size2]), size1)))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:size2;4:and[%s,%s];4:rectangle;4:size2;4:size1
'λx.forall(or[circle,triangle],filter(x.s, nor[blue,green]))'	0:forall(%s,%s);4:or[%s,%s];4:circle;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:blue;4:green
'λx.apply(or[size1,and[circle,size3]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:and[%s,%s];4:circle;4:size3;1:%s.o;2:x
'λx.apply(nand[implies[nand[and[size2,apply(same_color,iota(filter(x.s, green)))],yellow],size2],blue],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:implies[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow;4:size2;4:blue;1:%s.o;2:x
'λx.apply(nand[green,size2],iota(filter(filter(filter(filter(x.s, size3), size3), size1), size3)))'	0:apply(%s,%s);4:nand[%s,%s];4:green;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3;4:size1;4:size3
'λx.apply(and[apply(same_shape,x.o),and[and[or[and[and[blue,green],size2],or[not[or[triangle,or[blue,yellow]]],circle]],nor[or[circle,and[size3,iff[not[green],and[yellow,blue]]]],yellow]],or[implies[yellow,and[circle,size3]],green]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:green;4:size2;4:or[%s,%s];4:not[%s];4:or[%s,%s];4:triangle;4:or[%s,%s];4:blue;4:yellow;4:circle;4:nor[%s,%s];4:or[%s,%s];4:circle;4:and[%s,%s];4:size3;4:iff[%s,%s];4:not[%s];4:green;4:and[%s,%s];4:yellow;4:blue;4:yellow;4:or[%s,%s];4:implies[%s,%s];4:yellow;4:and[%s,%s];4:circle;4:size3;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(or[iff[triangle,size2],yellow],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:or[%s,%s];4:iff[%s,%s];4:triangle;4:size2;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.exists(or[rectangle,size3], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:rectangle;4:size3;3:%s.s;2:x
'λx.forall(size1,filter(filter(filter(x.s, size1), size2), or[size3,size2]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2;4:or[%s,%s];4:size3;4:size2
'λx.contains(iota(filter(filter(filter(filter(x.s, not[size2]), and[and[triangle,blue],circle]), and[green,rectangle]), blue)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:triangle;4:blue;4:circle;4:and[%s,%s];4:green;4:rectangle;4:blue;3:%s.s;2:x
'λx.apply(and[iff[green,apply(same_shape,iota(filter(filter(x.s, blue), nand[not[not[triangle]],and[circle,or[circle,yellow]]])))],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:nand[%s,%s];4:not[%s];4:not[%s];4:triangle;4:and[%s,%s];4:circle;4:or[%s,%s];4:circle;4:yellow;4:yellow;1:%s.o;2:x
'λx.exists(yellow, filter(x.s, and[yellow,apply(same_size,iota(x.s))]))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size3,and[size2,apply(same_size,iota(filter(filter(x.s, not[circle]), triangle)))]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_color,iota(filter(x.s, triangle))),iota(filter(x.s, not[triangle])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.apply(size1,iota(filter(x.s, and[apply(same_size,x.o),size1])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1
'λx.apply(circle,iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(size2,iota(filter(filter(filter(x.s, circle), and[blue,triangle]), circle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:blue;4:triangle;4:circle
'λx.contains(x.o, filter(filter(x.s, rectangle), and[circle,and[iff[size2,and[and[and[nor[size1,apply(same_size,iota(x.s))],size1],and[circle,size2]],size3]],size3]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:circle;4:and[%s,%s];4:iff[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:circle;4:size2;4:size3;4:size3
'λx.apply(apply(same_color,iota(filter(filter(filter(filter(x.s, size1), size3), and[size2,green]), yellow))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size3;4:and[%s,%s];4:size2;4:green;4:yellow;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(x.s, blue), triangle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle
'λx.apply(apply(same_size,x.o),iota(filter(x.s, nand[apply(same_shape,iota(filter(filter(x.s, size1), and[implies[size2,triangle],green]))),blue])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:implies[%s,%s];4:size2;4:triangle;4:green;4:blue
'λx.apply(and[not[blue],and[size1,apply(same_color,iota(x.s))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:blue;4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, and[blue,size1])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size1
'λx.apply(not[green],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(size1,iota(filter(x.s, or[and[rectangle,size3],triangle])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:size3;4:triangle
'λx.exists(not[green], filter(filter(x.s, apply(size-lt,x.o)), or[triangle,triangle]))'	0:exists(%s, %s);4:not[%s];4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:or[%s,%s];4:triangle;4:triangle
'λx.forall(blue,filter(x.s, not[not[blue]]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:blue
'λx.forall(size1,filter(filter(x.s, and[and[size1,size1],circle]), not[circle]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size1;4:size1;4:circle;4:not[%s];4:circle
'λx.apply(triangle,iota(filter(x.s, or[green,triangle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:triangle
'λx.contains(iota(x.s), filter(filter(x.s, or[size2,or[size1,or[circle,circle]]]), size3))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:or[%s,%s];4:size1;4:or[%s,%s];4:circle;4:circle;4:size3
'λx.apply(size2,iota(filter(filter(filter(filter(x.s, rectangle), size1), blue), size1)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1;4:blue;4:size1
'λx.apply(green,iota(filter(filter(filter(x.s, implies[circle,size3]), and[size2,size3]), size2)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:circle;4:size3;4:and[%s,%s];4:size2;4:size3;4:size2
'λx.empty(filter(filter(filter(x.s, green), apply(size-geq,x.o)), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:yellow
'λx.empty(filter(x.s, and[size3,yellow]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:yellow
'λx.empty(filter(x.s, and[size1,yellow]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:yellow
'λx.apply(or[or[circle,size1],not[blue]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:circle;4:size1;4:not[%s];4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(or[blue,iff[size1,size2]],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:iff[%s,%s];4:size1;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(yellow,iota(filter(x.s, or[or[blue,rectangle],size3])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:blue;4:rectangle;4:size3
'λx.apply(or[or[size3,size3],triangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:size3;4:size3;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(filter(x.s, blue), not[circle]), green)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:circle;4:green
'λx.empty(filter(filter(x.s, size1), apply(same_size,iota(x.s))))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.exists(blue, filter(x.s, and[blue,not[circle]]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:not[%s];4:circle
'λx.contains(iota(filter(x.s, and[rectangle,rectangle])), filter(filter(filter(x.s, and[circle,circle]), triangle), and[circle,size1]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:circle;4:triangle;4:and[%s,%s];4:circle;4:size1
'λx.apply(yellow,iota(filter(filter(filter(x.s, apply(same_color,iota(filter(x.s, blue)))), and[yellow,green]), size1)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:yellow;4:green;4:size1
'λx.apply(yellow,iota(filter(filter(filter(filter(filter(filter(x.s, apply(same_size,iota(filter(x.s, size1)))), size3), blue), size1), size3), rectangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size3;4:blue;4:size1;4:size3;4:rectangle
'λx.exists(size2, filter(filter(x.s, size3), yellow))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow
'λx.apply(iff[yellow,or[and[apply(same_size,x.o),and[not[blue],not[circle]]],green]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:yellow;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:not[%s];4:blue;4:not[%s];4:circle;4:green;1:%s.o;2:x
'λx.apply(and[circle,size1],iota(filter(filter(filter(x.s, apply(same_color,iota(filter(x.s, yellow)))), rectangle), size1)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle;4:size1
'λx.exists(or[or[or[blue,or[apply(same_size,x.o),and[or[apply(same_shape,iota(x.s)),size1],apply(same_shape,iota(filter(filter(x.s, and[nor[circle,nor[apply(size-geq,x.o),nor[circle,and[rectangle,nand[or[size3,and[triangle,size2]],size3]]]]],size1]), triangle)))]]],and[yellow,blue]],size2], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:blue;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:circle;4:nor[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:nor[%s,%s];4:circle;4:and[%s,%s];4:rectangle;4:nand[%s,%s];4:or[%s,%s];4:size3;4:and[%s,%s];4:triangle;4:size2;4:size3;4:size1;4:triangle;4:and[%s,%s];4:yellow;4:blue;4:size2;3:%s.s;2:x
'λx.apply(rectangle,iota(filter(x.s, or[or[and[size1,rectangle],and[apply(same_size,x.o),size1]],rectangle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size1;4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1;4:rectangle
'λx.apply(not[and[nor[blue,not[size1]],nor[size2,size2]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:nor[%s,%s];4:blue;4:not[%s];4:size1;4:nor[%s,%s];4:size2;4:size2;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[apply(same_color,iota(x.s)),or[size1,rectangle]],iota(filter(filter(x.s, rectangle), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue
'λx.apply(rectangle,iota(filter(x.s, not[circle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.empty(filter(filter(x.s, blue), or[apply(same_color,iota(x.s)),rectangle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:rectangle
'λx.apply(apply(size-leq,x.o),iota(filter(filter(x.s, green), and[size2,blue])))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:size2;4:blue
'λx.exists(green, filter(filter(x.s, size2), yellow))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:yellow
'λx.exists(green, filter(filter(x.s, size3), yellow))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow
'λx.apply(circle,iota(filter(x.s, and[iff[apply(same_shape,iota(x.s)),triangle],blue])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle;4:blue
'λx.apply(and[and[not[blue],size1],blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:blue;4:size1;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(or[rectangle,size3],iota(filter(x.s, not[not[and[yellow,green]]])))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:and[%s,%s];4:yellow;4:green
'λx.exists(and[size2,implies[blue,size2]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:size2;4:implies[%s,%s];4:blue;4:size2;3:%s.s;2:x
'λx.apply(and[circle,blue],iota(filter(filter(filter(filter(x.s, size3), yellow), size2), and[or[blue,nor[size1,blue]],size2])))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow;4:size2;4:and[%s,%s];4:or[%s,%s];4:blue;4:nor[%s,%s];4:size1;4:blue;4:size2
'λx.apply(triangle,iota(filter(filter(filter(x.s, apply(same_size,iota(filter(filter(x.s, apply(size-gt,iota(x.s))), blue)))), and[green,not[size2]]), apply(same_shape,x.o))))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:green;4:not[%s];4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(nor[size2,and[size1,blue]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size2;4:and[%s,%s];4:size1;4:blue;1:%s.o;2:x
'λx.apply(or[yellow,green],iota(filter(filter(x.s, circle), size2)))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size2
'λx.apply(and[rectangle,blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(or[and[size2,circle],not[green]],iota(filter(filter(x.s, or[blue,rectangle]), or[apply(size-geq,iota(filter(x.s, size1))),nand[triangle,rectangle]])))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size2;4:circle;4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:rectangle;4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:nand[%s,%s];4:triangle;4:rectangle
'λx.apply(or[size3,nor[not[or[and[size2,and[yellow,triangle]],rectangle]],yellow]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:nor[%s,%s];4:not[%s];4:or[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:yellow;4:triangle;4:rectangle;4:yellow;1:%s.o;2:x
'λx.apply(not[iff[blue,triangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:iff[%s,%s];4:blue;4:triangle;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, iff[circle,size3]), not[rectangle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:circle;4:size3;4:not[%s];4:rectangle
'λx.contains(iota(x.s), filter(x.s, not[or[yellow,green]]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:yellow;4:green
'λx.apply(or[or[green,nand[implies[circle,green],and[apply(same_shape,iota(filter(filter(filter(x.s, and[blue,green]), size2), implies[triangle,and[triangle,yellow]]))),blue]]],size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:green;4:nand[%s,%s];4:implies[%s,%s];4:circle;4:green;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:green;4:size2;4:implies[%s,%s];4:triangle;4:and[%s,%s];4:triangle;4:yellow;4:blue;4:size2;1:%s.o;2:x
'λx.exists(not[or[size2,blue]], x.s)'	0:exists(%s, %s);4:not[%s];4:or[%s,%s];4:size2;4:blue;3:%s.s;2:x
'λx.empty(filter(x.s, not[and[apply(size-lt,iota(x.s)),yellow]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:yellow
'λx.apply(size3,iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(size2,iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(size1,iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(size1,iota(filter(filter(filter(filter(filter(x.s, size2), size1), not[yellow]), size1), blue)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1;4:not[%s];4:yellow;4:size1;4:blue
'λx.apply(iff[triangle,size2],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:triangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size3,not[apply(same_shape,x.o)]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.contains(iota(filter(x.s, size2)), filter(filter(x.s, green), or[apply(size-leq,iota(x.s)),and[implies[and[triangle,yellow],not[or[size1,rectangle]]],triangle]]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:triangle;4:yellow;4:not[%s];4:or[%s,%s];4:size1;4:rectangle;4:triangle
'λx.apply(and[triangle,not[green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:not[%s];4:green;1:%s.o;2:x
'λx.forall(blue,filter(filter(x.s, yellow), or[not[green],and[blue,and[size1,not[yellow]]]]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:not[%s];4:green;4:and[%s,%s];4:blue;4:and[%s,%s];4:size1;4:not[%s];4:yellow
'λx.apply(or[circle,nand[circle,circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:nand[%s,%s];4:circle;4:circle;1:%s.o;2:x
'λx.apply(and[size2,size1],iota(filter(x.s, or[size2,rectangle])))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:rectangle
'λx.apply(and[size2,apply(same_size,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(and[apply(size-lt,iota(filter(filter(filter(filter(x.s, green), and[or[blue,apply(same_color,iota(x.s))],rectangle]), size2), not[or[yellow,size3]]))),green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:or[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:rectangle;4:size2;4:not[%s];4:or[%s,%s];4:yellow;4:size3;4:green;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, size3)), filter(filter(filter(filter(x.s, blue), and[and[or[yellow,size3],yellow],or[rectangle,triangle]]), yellow), not[and[circle,size2]]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:yellow;4:size3;4:yellow;4:or[%s,%s];4:rectangle;4:triangle;4:yellow;4:not[%s];4:and[%s,%s];4:circle;4:size2
'λx.contains(x.o, filter(x.s, and[not[yellow],blue]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:yellow;4:blue
'λx.apply(not[nand[size3,or[or[triangle,blue],and[circle,and[or[and[circle,or[size1,size2]],apply(size-lt,iota(filter(x.s, blue)))],yellow]]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:nand[%s,%s];4:size3;4:or[%s,%s];4:or[%s,%s];4:triangle;4:blue;4:and[%s,%s];4:circle;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:circle;4:or[%s,%s];4:size1;4:size2;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow;1:%s.o;2:x
'λx.apply(and[circle,and[and[green,size2],nor[implies[size1,and[and[apply(size-lt,iota(x.s)),apply(same_color,x.o)],yellow]],yellow]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:green;4:size2;4:nor[%s,%s];4:implies[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;4:yellow;1:%s.o;2:x
'λx.apply(apply(same_shape,x.o),iota(filter(filter(filter(filter(x.s, green), not[yellow]), rectangle), green)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:yellow;4:rectangle;4:green
'λx.exists(and[circle,triangle], filter(filter(x.s, size3), size1))'	0:exists(%s, %s);4:and[%s,%s];4:circle;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size1
'λx.exists(and[and[green,size3],rectangle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:green;4:size3;4:rectangle;3:%s.s;2:x
'λx.apply(yellow,iota(filter(x.s, apply(same_size,iota(x.s)))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.exists(size1, filter(x.s, and[or[not[green],size1],yellow]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:green;4:size1;4:yellow
'λx.contains(x.o, filter(x.s, implies[apply(same_color,iota(x.s)),blue]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:blue
'λx.apply(yellow,iota(filter(filter(filter(x.s, triangle), size1), rectangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size1;4:rectangle
'λx.apply(and[size1,or[not[yellow],triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:or[%s,%s];4:not[%s];4:yellow;4:triangle;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(filter(filter(x.s, triangle), and[blue,implies[apply(same_shape,x.o),or[size3,yellow]]]), not[or[size3,apply(same_shape,x.o)]]), size3)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:blue;4:implies[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:size3;4:yellow;4:not[%s];4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3
'λx.apply(or[circle,blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:blue;1:%s.o;2:x
'λx.apply(not[apply(size-geq,x.o)],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.forall(size1,filter(x.s, and[green,and[not[yellow],not[implies[triangle,yellow]]]]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:and[%s,%s];4:not[%s];4:yellow;4:not[%s];4:implies[%s,%s];4:triangle;4:yellow
'λx.apply(size1,iota(filter(filter(x.s, rectangle), and[or[size3,triangle],green])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:or[%s,%s];4:size3;4:triangle;4:green
'λx.apply(nor[and[rectangle,blue],or[rectangle,apply(same_shape,iota(x.s))]],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:rectangle;4:blue;4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.exists(blue, filter(filter(x.s, yellow), size2))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2
'λx.contains(iota(filter(x.s, blue)), filter(x.s, size3))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(or[or[triangle,yellow],implies[nand[green,nor[green,size1]],implies[size3,circle]]],iota(filter(x.s, not[size2])))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:triangle;4:yellow;4:implies[%s,%s];4:nand[%s,%s];4:green;4:nor[%s,%s];4:green;4:size1;4:implies[%s,%s];4:size3;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2
'λx.contains(x.o, filter(filter(filter(x.s, and[size3,and[circle,rectangle]]), blue), circle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:and[%s,%s];4:circle;4:rectangle;4:blue;4:circle
'λx.apply(triangle,iota(filter(x.s, and[nor[apply(same_color,iota(x.s)),and[and[and[green,green],yellow],rectangle]],size3])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:green;4:yellow;4:rectangle;4:size3
'λx.exists(and[or[not[and[and[size3,rectangle],yellow]],not[apply(same_shape,iota(x.s))]],circle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:or[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:rectangle;4:yellow;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle;3:%s.s;2:x
'λx.apply(circle,iota(filter(x.s, and[nand[blue,rectangle],not[and[and[circle,triangle],size2]]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nand[%s,%s];4:blue;4:rectangle;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:triangle;4:size2
'λx.apply(or[circle,circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:circle;1:%s.o;2:x
'λx.forall(and[size1,triangle],filter(x.s, size3))'	0:forall(%s,%s);4:and[%s,%s];4:size1;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(size3,iota(filter(x.s, or[yellow,size1])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:size1
'λx.apply(not[or[rectangle,not[blue]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:rectangle;4:not[%s];4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, yellow), not[triangle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:triangle
'λx.apply(implies[green,rectangle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:green;4:rectangle;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(x.s, rectangle), apply(size-geq,iota(x.s))), and[green,triangle])), filter(x.s, or[apply(same_shape,iota(filter(filter(x.s, size3), apply(size-gt,x.o)))),circle]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:green;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:circle
'λx.forall(circle,filter(filter(filter(filter(filter(filter(x.s, size3), circle), nor[apply(same_shape,x.o),size2]), and[yellow,or[size2,rectangle]]), size1), green))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle;4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2;4:and[%s,%s];4:yellow;4:or[%s,%s];4:size2;4:rectangle;4:size1;4:green
'λx.apply(and[not[size1],iff[or[triangle,blue],size3]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size1;4:iff[%s,%s];4:or[%s,%s];4:triangle;4:blue;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.forall(blue,filter(x.s, nand[and[not[circle],or[yellow,size1]],yellow]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:and[%s,%s];4:not[%s];4:circle;4:or[%s,%s];4:yellow;4:size1;4:yellow
'λx.apply(or[and[triangle,blue],or[green,apply(same_size,iota(x.s))]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:triangle;4:blue;4:or[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.forall(blue,filter(x.s, not[triangle]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.forall(size3,filter(filter(filter(x.s, apply(same_color,x.o)), yellow), not[green]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;4:not[%s];4:green
'λx.apply(or[and[and[and[apply(same_color,x.o),circle],and[size2,size2]],apply(same_color,x.o)],size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;4:and[%s,%s];4:size2;4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3;1:%s.o;2:x
'λx.forall(not[rectangle],filter(x.s, not[circle]))'	0:forall(%s,%s);4:not[%s];4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.empty(filter(filter(filter(x.s, and[size1,apply(same_color,iota(filter(x.s, size2)))]), or[and[circle,and[green,triangle]],size3]), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:green;4:triangle;4:size3;4:size2
'λx.apply(and[blue,apply(same_size,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(size1,iota(filter(x.s, and[rectangle,and[triangle,circle]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:triangle;4:circle
'λx.apply(and[green,blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:blue;1:%s.o;2:x
'λx.exists(iff[size2,and[circle,green]], filter(x.s, apply(same_size,iota(filter(filter(x.s, triangle), green)))))'	0:exists(%s, %s);4:iff[%s,%s];4:size2;4:and[%s,%s];4:circle;4:green;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green
'λx.apply(rectangle,x.o)'	0:apply(%s,%s);4:rectangle;1:%s.o;2:x
'λx.apply(and[green,green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:green;1:iota(%s);3:%s.s;2:x
'λx.exists(apply(same_color,iota(x.s)), filter(filter(x.s, and[triangle,rectangle]), size2))'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:rectangle;4:size2
'λx.forall(apply(same_color,x.o),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(and[rectangle,yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, circle)), filter(x.s, blue))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.contains(x.o, filter(filter(filter(x.s, circle), and[apply(size-lt,iota(filter(filter(filter(filter(x.s, triangle), nand[triangle,rectangle]), size3), apply(same_size,iota(x.s))))),blue]), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:nand[%s,%s];4:triangle;4:rectangle;4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:blue;4:green
'λx.apply(green,iota(filter(x.s, implies[blue,size3])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:blue;4:size3
'λx.apply(and[rectangle,blue],iota(filter(x.s, apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, blue), size2))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2
'λx.contains(x.o, filter(filter(x.s, blue), size3))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3
'λx.empty(filter(filter(filter(x.s, rectangle), circle), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle;4:size2
'λx.apply(apply(size-gt,iota(x.s)),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.forall(nand[circle,size3],x.s)'	0:forall(%s,%s);4:nand[%s,%s];4:circle;4:size3;3:%s.s;2:x
'λx.empty(filter(filter(x.s, apply(same_color,x.o)), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green
'λx.apply(implies[size2,rectangle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size2;4:rectangle;1:%s.o;2:x
'λx.apply(and[or[yellow,green],or[and[size2,blue],yellow]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:yellow;4:green;4:or[%s,%s];4:and[%s,%s];4:size2;4:blue;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.exists(rectangle, filter(filter(filter(x.s, rectangle), size2), size3))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2;4:size3
'λx.exists(size1, filter(filter(filter(filter(x.s, not[not[triangle]]), apply(same_shape,x.o)), circle), rectangle))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;4:rectangle
'λx.apply(and[or[yellow,nand[implies[and[and[green,size3],and[size3,size1]],yellow],size3]],iff[rectangle,or[rectangle,and[size1,circle]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:yellow;4:nand[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:size3;4:and[%s,%s];4:size3;4:size1;4:yellow;4:size3;4:iff[%s,%s];4:rectangle;4:or[%s,%s];4:rectangle;4:and[%s,%s];4:size1;4:circle;1:%s.o;2:x
'λx.apply(or[size2,not[iff[size1,not[size1]]]],iota(filter(filter(filter(x.s, size3), not[and[size1,size3]]), and[rectangle,circle])))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:not[%s];4:iff[%s,%s];4:size1;4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:and[%s,%s];4:size1;4:size3;4:and[%s,%s];4:rectangle;4:circle
'λx.apply(or[not[size2],triangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:size2;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[triangle,blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:blue;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(filter(x.s, yellow), circle), not[and[apply(same_shape,iota(x.s)),blue]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle;4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:blue
'λx.exists(triangle, filter(filter(x.s, size1), rectangle))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle
'λx.apply(size1,iota(filter(x.s, not[triangle])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.apply(size2,iota(filter(x.s, not[triangle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.apply(apply(same_color,iota(filter(x.s, circle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;1:%s.o;2:x
'λx.forall(circle,filter(filter(x.s, yellow), blue))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:blue
'λx.forall(yellow,filter(x.s, implies[blue,size2]))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:blue;4:size2
'λx.apply(iff[yellow,or[and[or[not[not[and[not[blue],yellow]]],green],and[size3,not[and[size1,circle]]]],green]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:yellow;4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:not[%s];4:not[%s];4:and[%s,%s];4:not[%s];4:blue;4:yellow;4:green;4:and[%s,%s];4:size3;4:not[%s];4:and[%s,%s];4:size1;4:circle;4:green;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(filter(filter(filter(filter(x.s, not[rectangle]), rectangle), triangle), circle), implies[and[yellow,rectangle],and[and[rectangle,yellow],size1]]), size1)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;4:rectangle;4:triangle;4:circle;4:implies[%s,%s];4:and[%s,%s];4:yellow;4:rectangle;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:yellow;4:size1;4:size1
'λx.apply(apply(size-gt,iota(x.s)),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(filter(filter(filter(x.s, yellow), circle), not[apply(same_shape,x.o)]), or[triangle,or[rectangle,green]]))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle;4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:triangle;4:or[%s,%s];4:rectangle;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(or[or[green,size3],circle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:green;4:size3;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[and[and[rectangle,blue],size1],or[apply(same_size,x.o),blue]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:blue;4:size1;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;1:%s.o;2:x
'λx.contains(iota(filter(x.s, apply(size-geq,x.o))), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(not[apply(same_shape,iota(filter(filter(x.s, and[triangle,apply(same_color,x.o)]), triangle)))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(x.s, green))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(or[blue,rectangle],iota(filter(filter(x.s, rectangle), circle)))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle
'λx.apply(size1,iota(filter(x.s, and[circle,blue])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:blue
'λx.apply(and[circle,or[rectangle,size3]],iota(filter(x.s, not[circle])))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:or[%s,%s];4:rectangle;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.apply(and[and[rectangle,triangle],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:rectangle;4:triangle;4:blue;1:%s.o;2:x
'λx.forall(not[not[size1]],x.s)'	0:forall(%s,%s);4:not[%s];4:not[%s];4:size1;3:%s.s;2:x
'λx.forall(or[blue,size1],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:blue;4:size1;3:%s.s;2:x
'λx.apply(nor[and[yellow,iff[size1,blue]],blue],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:yellow;4:iff[%s,%s];4:size1;4:blue;4:blue;1:%s.o;2:x
'λx.apply(iff[not[blue],circle],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:not[%s];4:blue;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[nor[nor[yellow,green],or[and[triangle,or[triangle,and[size2,size3]]],circle]],and[yellow,rectangle]],iota(filter(filter(x.s, size2), or[blue,iff[rectangle,rectangle]])))'	0:apply(%s,%s);4:or[%s,%s];4:nor[%s,%s];4:nor[%s,%s];4:yellow;4:green;4:or[%s,%s];4:and[%s,%s];4:triangle;4:or[%s,%s];4:triangle;4:and[%s,%s];4:size2;4:size3;4:circle;4:and[%s,%s];4:yellow;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:blue;4:iff[%s,%s];4:rectangle;4:rectangle
'λx.contains(iota(filter(filter(x.s, or[size1,and[and[nand[nand[size1,apply(same_color,x.o)],circle],not[or[green,apply(size-geq,x.o)]]],and[and[size1,and[and[and[size3,nor[green,size3]],blue],green]],triangle]]]), size1)), filter(x.s, and[circle,and[size1,rectangle]]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:nand[%s,%s];4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;4:not[%s];4:or[%s,%s];4:green;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:and[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:nor[%s,%s];4:green;4:size3;4:blue;4:green;4:triangle;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:and[%s,%s];4:size1;4:rectangle
'λx.exists(size3, filter(x.s, not[yellow]))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow
'λx.exists(size2, filter(x.s, not[yellow]))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow
'λx.apply(and[or[nor[and[and[green,or[circle,nor[size2,yellow]]],triangle],triangle],and[rectangle,not[yellow]]],size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:or[%s,%s];4:circle;4:nor[%s,%s];4:size2;4:yellow;4:triangle;4:triangle;4:and[%s,%s];4:rectangle;4:not[%s];4:yellow;4:size2;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, size1), yellow), and[implies[circle,size3],not[size3]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow;4:and[%s,%s];4:implies[%s,%s];4:circle;4:size3;4:not[%s];4:size3
'λx.forall(yellow,filter(filter(filter(x.s, apply(same_shape,iota(filter(filter(filter(x.s, rectangle), and[yellow,size3]), or[and[size1,nor[green,circle]],blue])))), nor[or[size2,size3],circle]), rectangle))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:yellow;4:size3;4:or[%s,%s];4:and[%s,%s];4:size1;4:nor[%s,%s];4:green;4:circle;4:blue;4:nor[%s,%s];4:or[%s,%s];4:size2;4:size3;4:circle;4:rectangle
'λx.contains(iota(filter(filter(x.s, yellow), and[blue,size2])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:blue;4:size2;3:%s.s;2:x
'λx.apply(iff[or[apply(same_color,x.o),triangle],yellow],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[and[yellow,iff[size1,blue]],blue],iota(filter(filter(filter(filter(x.s, blue), triangle), and[size2,circle]), and[size3,or[triangle,green]])))'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:yellow;4:iff[%s,%s];4:size1;4:blue;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle;4:and[%s,%s];4:size2;4:circle;4:and[%s,%s];4:size3;4:or[%s,%s];4:triangle;4:green
'λx.apply(size3,iota(filter(filter(x.s, blue), circle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle
'λx.forall(and[yellow,rectangle],filter(filter(filter(x.s, size1), and[and[size2,yellow],triangle]), triangle))'	0:forall(%s,%s);4:and[%s,%s];4:yellow;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:and[%s,%s];4:size2;4:yellow;4:triangle;4:triangle
'λx.apply(blue,iota(filter(filter(x.s, yellow), nand[green,and[size1,or[size1,or[size1,green]]]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:nand[%s,%s];4:green;4:and[%s,%s];4:size1;4:or[%s,%s];4:size1;4:or[%s,%s];4:size1;4:green
'λx.apply(blue,iota(filter(filter(x.s, or[rectangle,or[triangle,size1]]), or[triangle,blue])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:or[%s,%s];4:triangle;4:size1;4:or[%s,%s];4:triangle;4:blue
'λx.forall(and[size3,and[size3,iff[size2,yellow]]],filter(x.s, triangle))'	0:forall(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:size3;4:iff[%s,%s];4:size2;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.exists(apply(same_color,iota(x.s)), filter(filter(x.s, circle), not[size3]))'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:size3
'λx.apply(green,iota(filter(filter(filter(filter(x.s, circle), and[size2,or[not[size2],blue]]), and[size1,yellow]), apply(same_size,iota(filter(filter(filter(x.s, implies[or[and[triangle,circle],or[or[rectangle,circle],triangle]],and[iff[rectangle,size1],size1]]), rectangle), triangle))))))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:size2;4:or[%s,%s];4:not[%s];4:size2;4:blue;4:and[%s,%s];4:size1;4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:or[%s,%s];4:and[%s,%s];4:triangle;4:circle;4:or[%s,%s];4:or[%s,%s];4:rectangle;4:circle;4:triangle;4:and[%s,%s];4:iff[%s,%s];4:rectangle;4:size1;4:size1;4:rectangle;4:triangle
'λx.apply(yellow,iota(filter(filter(x.s, or[size1,green]), yellow)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:green;4:yellow
'λx.exists(size1, filter(filter(x.s, and[green,size3]), circle))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:size3;4:circle
'λx.exists(green, filter(x.s, size3))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(green, filter(x.s, green))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(apply(same_color,x.o),iota(filter(filter(x.s, size1), circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle
'λx.apply(implies[not[and[yellow,blue]],size1],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:not[%s];4:and[%s,%s];4:yellow;4:blue;4:size1;1:%s.o;2:x
'λx.apply(or[size3,iff[triangle,blue]],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:iff[%s,%s];4:triangle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(or[rectangle,triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:triangle;1:%s.o;2:x
'λx.forall(rectangle,filter(filter(filter(x.s, apply(same_color,x.o)), yellow), yellow))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;4:yellow
'λx.apply(apply(size-leq,iota(x.s)),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.exists(size1, filter(x.s, green))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.exists(size2, filter(x.s, green))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.exists(size1, filter(x.s, size3))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(size3, filter(x.s, size3))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(size3, filter(x.s, size2))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.exists(size3, filter(x.s, size1))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(size2, filter(x.s, size3))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(size2, filter(x.s, size1))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(or[circle,triangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[triangle],iota(filter(filter(x.s, and[and[size1,yellow],yellow]), blue)))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size1;4:yellow;4:yellow;4:blue
'λx.contains(iota(filter(x.s, rectangle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;3:%s.s;2:x
'λx.forall(implies[apply(same_shape,iota(x.s)),triangle],filter(filter(x.s, size3), rectangle))'	0:forall(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle
'λx.apply(triangle,iota(filter(filter(x.s, blue), triangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle
'λx.apply(rectangle,iota(filter(x.s, nor[circle,size1])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:circle;4:size1
'λx.contains(iota(filter(x.s, apply(same_color,x.o))), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(and[not[yellow],apply(same_color,iota(filter(x.s, nand[triangle,rectangle])))],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:triangle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[apply(same_color,x.o),circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;1:%s.o;2:x
'λx.apply(apply(same_color,x.o),iota(filter(x.s, blue)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(yellow,iota(filter(filter(filter(filter(filter(filter(filter(filter(filter(x.s, size2), triangle), or[size2,size3]), size3), or[nor[circle,circle],blue]), green), size3), circle), not[not[and[size1,triangle]]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:triangle;4:or[%s,%s];4:size2;4:size3;4:size3;4:or[%s,%s];4:nor[%s,%s];4:circle;4:circle;4:blue;4:green;4:size3;4:circle;4:not[%s];4:not[%s];4:and[%s,%s];4:size1;4:triangle
'λx.apply(blue,iota(filter(x.s, apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(and[nand[triangle,circle],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:triangle;4:circle;4:circle;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, rectangle), apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(and[implies[triangle,not[green]],nand[blue,and[nor[blue,rectangle],blue]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:triangle;4:not[%s];4:green;4:nand[%s,%s];4:blue;4:and[%s,%s];4:nor[%s,%s];4:blue;4:rectangle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.exists(size2, filter(filter(x.s, circle), green))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green
'λx.apply(not[and[apply(same_shape,x.o),triangle]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[and[nor[yellow,triangle],size3],triangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:yellow;4:triangle;4:size3;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[triangle,or[apply(size-lt,iota(x.s)),not[size1]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:not[%s];4:size1;1:%s.o;2:x
'λx.apply(and[yellow,implies[blue,not[apply(same_color,x.o)]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:implies[%s,%s];4:blue;4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(x.s), filter(x.s, yellow))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(and[size1,size3],iota(filter(filter(filter(filter(x.s, or[apply(same_shape,x.o),size3]), size2), and[triangle,size2]), rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3;4:size2;4:and[%s,%s];4:triangle;4:size2;4:rectangle
'λx.forall(triangle,filter(filter(filter(x.s, triangle), rectangle), and[or[size1,nor[green,and[circle,and[rectangle,green]]]],yellow]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle;4:and[%s,%s];4:or[%s,%s];4:size1;4:nor[%s,%s];4:green;4:and[%s,%s];4:circle;4:and[%s,%s];4:rectangle;4:green;4:yellow
'λx.apply(and[and[nor[green,green],apply(same_shape,iota(x.s))],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:green;4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size2;1:%s.o;2:x
'λx.apply(or[iff[yellow,green],nor[and[triangle,nor[apply(size-geq,iota(x.s)),and[not[blue],size3]]],and[iff[and[and[size1,or[or[size3,not[triangle]],size3]],circle],implies[size2,triangle]],apply(size-lt,x.o)]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:iff[%s,%s];4:yellow;4:green;4:nor[%s,%s];4:and[%s,%s];4:triangle;4:nor[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:blue;4:size3;4:and[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:or[%s,%s];4:size3;4:not[%s];4:triangle;4:size3;4:circle;4:implies[%s,%s];4:size2;4:triangle;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[green,and[size1,size3]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:size1;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[not[size3],and[size2,circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size3;4:and[%s,%s];4:size2;4:circle;1:%s.o;2:x
'λx.apply(apply(same_size,iota(filter(filter(filter(x.s, and[rectangle,and[circle,blue]]), circle), or[and[yellow,and[size2,not[not[and[green,or[size2,and[blue,or[and[triangle,not[and[green,blue]]],yellow]]]]]]]],and[green,and[green,size1]]]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:circle;4:blue;4:circle;4:or[%s,%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:size2;4:not[%s];4:not[%s];4:and[%s,%s];4:green;4:or[%s,%s];4:size2;4:and[%s,%s];4:blue;4:or[%s,%s];4:and[%s,%s];4:triangle;4:not[%s];4:and[%s,%s];4:green;4:blue;4:yellow;4:and[%s,%s];4:green;4:and[%s,%s];4:green;4:size1;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(x.s, triangle), or[triangle,and[apply(same_size,iota(x.s)),triangle]]), not[blue])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:or[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:triangle;4:not[%s];4:blue;3:%s.s;2:x
'λx.empty(filter(x.s, nand[circle,iff[size1,not[size1]]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:circle;4:iff[%s,%s];4:size1;4:not[%s];4:size1
'λx.contains(iota(filter(filter(x.s, green), triangle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:triangle;3:%s.s;2:x
'λx.exists(apply(same_color,x.o), filter(filter(x.s, apply(same_size,x.o)), and[size1,size3]))'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:size1;4:size3
'λx.apply(or[triangle,rectangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.forall(or[nor[or[size1,blue],size1],nand[not[nand[yellow,size3]],iff[and[triangle,rectangle],and[apply(size-leq,iota(filter(x.s, size1))),rectangle]]]],filter(filter(x.s, circle), or[blue,and[size2,green]]))'	0:forall(%s,%s);4:or[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:size1;4:blue;4:size1;4:nand[%s,%s];4:not[%s];4:nand[%s,%s];4:yellow;4:size3;4:iff[%s,%s];4:and[%s,%s];4:triangle;4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:blue;4:and[%s,%s];4:size2;4:green
'λx.apply(not[not[and[and[triangle,circle],and[rectangle,triangle]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:circle;4:and[%s,%s];4:rectangle;4:triangle;1:%s.o;2:x
'λx.apply(implies[or[circle,or[not[size3],rectangle]],green],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:or[%s,%s];4:circle;4:or[%s,%s];4:not[%s];4:size3;4:rectangle;4:green;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(filter(filter(filter(filter(filter(x.s, implies[and[triangle,size2],or[not[triangle],size3]]), size2), size3), size2), or[or[size1,or[size2,and[size2,not[and[not[triangle],yellow]]]]],yellow]), not[size1]), green)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:and[%s,%s];4:triangle;4:size2;4:or[%s,%s];4:not[%s];4:triangle;4:size3;4:size2;4:size3;4:size2;4:or[%s,%s];4:or[%s,%s];4:size1;4:or[%s,%s];4:size2;4:and[%s,%s];4:size2;4:not[%s];4:and[%s,%s];4:not[%s];4:triangle;4:yellow;4:yellow;4:not[%s];4:size1;4:green
'λx.forall(rectangle,filter(x.s, circle))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.contains(x.o, filter(filter(x.s, size3), rectangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle
'λx.contains(x.o, filter(filter(x.s, size1), rectangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle
'λx.forall(or[or[or[not[implies[apply(same_size,x.o),blue]],and[and[size3,size2],or[and[yellow,and[yellow,size1]],size3]]],circle],size1],filter(x.s, and[triangle,or[apply(same_size,iota(filter(x.s, apply(size-leq,x.o)))),size1]]))'	0:forall(%s,%s);4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:not[%s];4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;4:and[%s,%s];4:and[%s,%s];4:size3;4:size2;4:or[%s,%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:yellow;4:size1;4:size3;4:circle;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size1
'λx.empty(filter(filter(x.s, circle), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle
'λx.forall(not[rectangle],filter(x.s, size3))'	0:forall(%s,%s);4:not[%s];4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.forall(not[rectangle],filter(x.s, green))'	0:forall(%s,%s);4:not[%s];4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[and[triangle,not[blue]],green],iota(filter(filter(x.s, size2), triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:not[%s];4:blue;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:triangle
'λx.apply(and[circle,size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:size2;1:%s.o;2:x
'λx.apply(and[circle,size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:size1;1:%s.o;2:x
'λx.exists(or[not[not[apply(same_size,iota(x.s))]],size3], filter(x.s, size2))'	0:exists(%s, %s);4:or[%s,%s];4:not[%s];4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(apply(same_shape,iota(filter(x.s, green))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;1:%s.o;2:x
'λx.apply(and[and[size2,not[yellow]],rectangle],iota(filter(x.s, or[circle,yellow])))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size2;4:not[%s];4:yellow;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:yellow
'λx.apply(apply(same_shape,iota(filter(x.s, blue))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.forall(blue,filter(filter(x.s, and[size2,size2]), triangle))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:size2;4:triangle
'λx.apply(size3,iota(filter(filter(x.s, and[implies[yellow,rectangle],or[and[size2,nor[implies[or[triangle,rectangle],size3],nor[circle,apply(size-gt,x.o)]]],or[size2,size3]]]), and[not[blue],size1])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:implies[%s,%s];4:yellow;4:rectangle;4:or[%s,%s];4:and[%s,%s];4:size2;4:nor[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:triangle;4:rectangle;4:size3;4:nor[%s,%s];4:circle;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:or[%s,%s];4:size2;4:size3;4:and[%s,%s];4:not[%s];4:blue;4:size1
'λx.exists(apply(same_shape,iota(x.s)), filter(filter(filter(x.s, triangle), circle), apply(same_shape,iota(filter(x.s, or[and[not[circle],and[green,triangle]],or[rectangle,triangle]])))))'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:circle;4:and[%s,%s];4:green;4:triangle;4:or[%s,%s];4:rectangle;4:triangle
'λx.empty(filter(filter(x.s, size1), or[iff[and[circle,size2],and[blue,not[not[and[apply(same_size,x.o),blue]]]]],and[triangle,apply(same_shape,x.o)]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:or[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:circle;4:size2;4:and[%s,%s];4:blue;4:not[%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(and[circle,green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:green;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, implies[nor[nand[and[circle,implies[green,apply(same_color,x.o)]],size1],rectangle],triangle]), size2)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:nor[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:circle;4:implies[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1;4:rectangle;4:triangle;4:size2
'λx.apply(iff[green,or[triangle,and[apply(same_size,x.o),size1]]],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:green;4:or[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(and[circle,yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.exists(size3, filter(filter(filter(x.s, apply(same_color,iota(filter(x.s, circle)))), not[and[and[size3,size3],circle]]), green))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:size3;4:circle;4:green
'λx.forall(green,filter(filter(filter(x.s, and[and[apply(size-geq,iota(x.s)),rectangle],apply(same_shape,x.o)]), circle), size2))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;4:size2
'λx.apply(triangle,iota(filter(filter(x.s, apply(same_size,x.o)), rectangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:rectangle
'λx.apply(and[not[apply(same_color,iota(filter(x.s, triangle)))],circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(x.s, or[and[rectangle,size1],circle])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:size1;4:circle
'λx.apply(or[not[not[circle]],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:not[%s];4:circle;4:blue;1:%s.o;2:x
'λx.exists(or[size1,apply(size-geq,iota(filter(x.s, size2)))], filter(filter(filter(x.s, apply(same_shape,iota(filter(filter(x.s, circle), size2)))), and[and[rectangle,blue],and[and[yellow,size2],circle]]), not[apply(same_color,iota(x.s))]))'	0:exists(%s, %s);4:or[%s,%s];4:size1;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size2;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:blue;4:and[%s,%s];4:and[%s,%s];4:yellow;4:size2;4:circle;4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.forall(circle,filter(filter(filter(x.s, size1), green), size3))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green;4:size3
'λx.exists(size1, filter(x.s, triangle))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.exists(size2, filter(x.s, triangle))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(and[size3,rectangle],iota(filter(filter(x.s, apply(same_size,x.o)), circle)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle
'λx.empty(filter(filter(filter(x.s, blue), size3), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3;4:yellow
'λx.contains(iota(filter(x.s, not[size3])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;3:%s.s;2:x
'λx.apply(and[circle,rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:rectangle;1:%s.o;2:x
'λx.exists(not[rectangle], filter(x.s, not[and[circle,green]]))'	0:exists(%s, %s);4:not[%s];4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:circle;4:green
'λx.apply(apply(same_shape,iota(filter(filter(x.s, triangle), implies[and[green,blue],and[size3,rectangle]]))),iota(filter(x.s, or[and[size3,apply(same_shape,x.o)],apply(same_color,x.o)])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:implies[%s,%s];4:and[%s,%s];4:green;4:blue;4:and[%s,%s];4:size3;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(and[and[triangle,rectangle],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:rectangle;4:yellow;1:%s.o;2:x
'λx.forall(green,filter(filter(x.s, implies[blue,and[rectangle,or[or[size1,not[or[and[not[and[apply(same_size,x.o),rectangle]],and[or[circle,blue],circle]],blue]]],and[size3,blue]]]]), nor[and[size1,size1],and[circle,circle]]))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:or[%s,%s];4:size1;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:rectangle;4:and[%s,%s];4:or[%s,%s];4:circle;4:blue;4:circle;4:blue;4:and[%s,%s];4:size3;4:blue;4:nor[%s,%s];4:and[%s,%s];4:size1;4:size1;4:and[%s,%s];4:circle;4:circle
'λx.apply(or[apply(same_shape,iota(filter(x.s, green))),apply(same_shape,iota(filter(filter(x.s, blue), not[size1])))],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(x.s, not[circle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.apply(size3,iota(filter(x.s, not[circle])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.apply(size1,iota(filter(x.s, not[circle])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.apply(and[apply(same_size,iota(filter(x.s, or[rectangle,circle]))),circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:circle;4:circle;1:%s.o;2:x
'λx.apply(and[circle,blue],iota(filter(filter(x.s, size2), rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle
'λx.apply(nand[size3,and[rectangle,yellow]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size3;4:and[%s,%s];4:rectangle;4:yellow;1:%s.o;2:x
'λx.forall(apply(size-leq,iota(x.s)),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.exists(triangle, filter(x.s, rectangle))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(apply(same_shape,iota(filter(filter(x.s, green), or[or[triangle,and[green,size3]],size3]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:or[%s,%s];4:triangle;4:and[%s,%s];4:green;4:size3;4:size3;1:%s.o;2:x
'λx.apply(not[and[not[green],and[circle,size3]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:green;4:and[%s,%s];4:circle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[not[circle],size3],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:not[%s];4:circle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(or[apply(size-gt,iota(filter(x.s, circle))),blue],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, and[yellow,triangle]), or[iff[yellow,circle],blue]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:triangle;4:or[%s,%s];4:iff[%s,%s];4:yellow;4:circle;4:blue
'λx.contains(x.o, filter(filter(filter(filter(filter(filter(filter(filter(filter(filter(x.s, green), triangle), yellow), or[yellow,not[not[rectangle]]]), apply(size-gt,x.o)), and[apply(size-gt,iota(filter(x.s, blue))),circle]), size3), blue), circle), nand[size1,size3]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:triangle;4:yellow;4:or[%s,%s];4:yellow;4:not[%s];4:not[%s];4:rectangle;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle;4:size3;4:blue;4:circle;4:nand[%s,%s];4:size1;4:size3
'λx.contains(x.o, filter(x.s, not[and[blue,triangle]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:blue;4:triangle
'λx.apply(and[and[rectangle,green],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:rectangle;4:green;4:blue;1:%s.o;2:x
'λx.apply(and[and[blue,green],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:green;4:circle;1:%s.o;2:x
'λx.forall(apply(same_shape,iota(filter(filter(x.s, not[blue]), yellow))),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:yellow;3:%s.s;2:x
'λx.apply(apply(same_shape,iota(x.s)),iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[size3,rectangle],iota(filter(filter(filter(filter(x.s, blue), size2), apply(same_size,x.o)), circle)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle
'λx.apply(apply(size-leq,x.o),iota(filter(filter(filter(x.s, not[triangle]), and[green,or[and[and[and[rectangle,circle],triangle],apply(same_color,x.o)],nor[and[yellow,and[circle,blue]],size2]]]), and[size3,implies[green,circle]])))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:and[%s,%s];4:green;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:circle;4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:nor[%s,%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:circle;4:blue;4:size2;4:and[%s,%s];4:size3;4:implies[%s,%s];4:green;4:circle
'λx.contains(x.o, filter(filter(filter(filter(x.s, size1), not[blue]), apply(same_shape,iota(filter(filter(filter(filter(filter(filter(x.s, size1), iff[yellow,and[size3,triangle]]), circle), size1), yellow), triangle)))), not[and[triangle,or[rectangle,implies[size2,blue]]]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:not[%s];4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:iff[%s,%s];4:yellow;4:and[%s,%s];4:size3;4:triangle;4:circle;4:size1;4:yellow;4:triangle;4:not[%s];4:and[%s,%s];4:triangle;4:or[%s,%s];4:rectangle;4:implies[%s,%s];4:size2;4:blue
'λx.apply(or[and[size3,size2],rectangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size3;4:size2;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[blue,and[not[green],blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:not[%s];4:green;4:blue;1:%s.o;2:x
'λx.apply(or[size1,triangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size2,triangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, circle), size3))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3
'λx.contains(x.o, filter(filter(x.s, circle), size2))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size2
'λx.apply(or[and[circle,size3],size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:circle;4:size3;4:size1;1:%s.o;2:x
'λx.apply(and[not[size1],apply(size-geq,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size1;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(filter(x.s, size1), yellow), blue)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow;4:blue
'λx.empty(filter(filter(filter(filter(filter(filter(x.s, nand[triangle,green]), yellow), or[and[and[green,green],nand[green,green]],rectangle]), apply(same_size,x.o)), yellow), not[blue]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:triangle;4:green;4:yellow;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:green;4:nand[%s,%s];4:green;4:green;4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow;4:not[%s];4:blue
'λx.apply(size3,iota(filter(filter(filter(x.s, blue), size1), rectangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1;4:rectangle
'λx.apply(nor[triangle,green],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:triangle;4:green;1:%s.o;2:x
'λx.forall(not[size1],filter(x.s, and[green,yellow]))'	0:forall(%s,%s);4:not[%s];4:size1;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:yellow
'λx.apply(apply(same_size,x.o),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, apply(size-lt,iota(filter(x.s, size2))))))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(and[size2,not[not[size1]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:not[%s];4:not[%s];4:size1;1:%s.o;2:x
'λx.empty(filter(filter(x.s, and[yellow,and[yellow,size3]]), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:and[%s,%s];4:yellow;4:size3;4:size3
'λx.apply(or[apply(same_size,x.o),not[green]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:not[%s];4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(filter(filter(x.s, green), blue), blue), triangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue;4:blue;4:triangle
'λx.apply(not[apply(size-leq,iota(filter(filter(filter(x.s, rectangle), and[circle,green]), not[green])))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:circle;4:green;4:not[%s];4:green;1:%s.o;2:x
'λx.apply(or[or[nor[triangle,or[triangle,and[iff[yellow,and[blue,implies[size3,apply(same_color,x.o)]]],size1]]],and[rectangle,blue]],nor[and[size3,not[and[size3,triangle]]],size2]],iota(filter(filter(filter(filter(filter(x.s, size3), size3), not[rectangle]), triangle), triangle)))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:triangle;4:or[%s,%s];4:triangle;4:and[%s,%s];4:iff[%s,%s];4:yellow;4:and[%s,%s];4:blue;4:implies[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1;4:and[%s,%s];4:rectangle;4:blue;4:nor[%s,%s];4:and[%s,%s];4:size3;4:not[%s];4:and[%s,%s];4:size3;4:triangle;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3;4:not[%s];4:rectangle;4:triangle;4:triangle
'λx.apply(implies[apply(size-lt,x.o),or[size2,and[and[triangle,size1],yellow]]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:or[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:triangle;4:size1;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(and[nand[size2,and[and[green,blue],blue]],or[and[size1,circle],blue]],iota(filter(x.s, and[apply(same_color,iota(x.s)),size1])))'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:green;4:blue;4:blue;4:or[%s,%s];4:and[%s,%s];4:size1;4:circle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size1
'λx.exists(apply(size-geq,iota(filter(filter(x.s, circle), not[green]))), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:green;3:%s.s;2:x
'λx.apply(green,iota(filter(filter(x.s, size2), apply(size-lt,iota(filter(filter(x.s, and[nor[green,circle],circle]), size3))))))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:green;4:circle;4:circle;4:size3
'λx.apply(implies[size2,circle],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:size2;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[green,not[nand[size1,size2]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:not[%s];4:nand[%s,%s];4:size1;4:size2;1:%s.o;2:x
'λx.apply(triangle,iota(filter(x.s, not[not[triangle]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:triangle
'λx.apply(and[size3,and[or[yellow,size3],not[size1]]],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:or[%s,%s];4:yellow;4:size3;4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(size1,iota(filter(x.s, or[green,size1])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:size1
'λx.apply(or[nor[and[rectangle,apply(same_shape,x.o)],not[blue]],size1],iota(filter(filter(x.s, triangle), size2)))'	0:apply(%s,%s);4:or[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:blue;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2
'λx.contains(iota(filter(filter(filter(filter(filter(x.s, blue), size2), apply(same_size,x.o)), circle), circle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;4:circle;3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(filter(x.s, blue), rectangle), yellow), size2))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle;4:yellow;4:size2
'λx.apply(or[and[apply(same_shape,x.o),apply(same_color,iota(filter(filter(x.s, apply(same_size,x.o)), circle)))],green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;4:green;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, blue), and[apply(same_color,x.o),size1])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1
'λx.apply(or[or[implies[apply(size-gt,x.o),circle],apply(same_size,iota(x.s))],size3],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(and[size1,triangle],iota(filter(filter(x.s, yellow), size1)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1
'λx.apply(and[blue,apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[triangle,green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:green;1:%s.o;2:x
'λx.apply(iff[green,circle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:green;4:circle;1:%s.o;2:x
'λx.apply(apply(same_size,iota(filter(x.s, or[circle,not[blue]]))),iota(filter(x.s, not[implies[size1,size2]])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:implies[%s,%s];4:size1;4:size2
'λx.apply(and[rectangle,yellow],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(iff[rectangle,size3],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:iff[%s,%s];4:rectangle;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.contains(x.o, filter(filter(filter(filter(filter(filter(x.s, size3), yellow), and[and[blue,implies[size1,triangle]],blue]), iff[size2,or[size2,apply(size-gt,x.o)]]), size1), and[blue,triangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow;4:and[%s,%s];4:and[%s,%s];4:blue;4:implies[%s,%s];4:size1;4:triangle;4:blue;4:iff[%s,%s];4:size2;4:or[%s,%s];4:size2;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:size1;4:and[%s,%s];4:blue;4:triangle
'λx.apply(and[yellow,and[size2,triangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:and[%s,%s];4:size2;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_shape,iota(x.s)),iota(filter(filter(x.s, size3), size3)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3
'λx.apply(and[blue,and[green,nand[triangle,size1]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:green;4:nand[%s,%s];4:triangle;4:size1;1:%s.o;2:x
'λx.apply(and[or[apply(same_color,iota(x.s)),not[triangle]],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:not[%s];4:triangle;4:triangle;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(x.s, apply(same_color,x.o)), not[size3])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:size3
'λx.apply(and[or[size2,size3],circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size2;4:size3;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[circle,not[nand[and[circle,and[and[green,green],rectangle]],size2]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:not[%s];4:nand[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:green;4:green;4:rectangle;4:size2;1:%s.o;2:x
'λx.apply(and[size3,apply(same_size,iota(filter(x.s, yellow)))],iota(filter(filter(x.s, yellow), green)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green
'λx.exists(apply(same_shape,iota(filter(x.s, rectangle))), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;3:%s.s;2:x
'λx.exists(apply(same_shape,x.o), filter(x.s, size2))'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(and[circle,or[nand[size1,and[iff[blue,size2],not[triangle]]],rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:or[%s,%s];4:nand[%s,%s];4:size1;4:and[%s,%s];4:iff[%s,%s];4:blue;4:size2;4:not[%s];4:triangle;4:rectangle;1:%s.o;2:x
'λx.apply(and[and[size3,size3],not[triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size3;4:size3;4:not[%s];4:triangle;1:%s.o;2:x
'λx.apply(not[size1],iota(filter(filter(filter(x.s, and[nor[and[rectangle,rectangle],triangle],green]), and[implies[circle,size1],size1]), and[blue,not[size1]])))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:rectangle;4:rectangle;4:triangle;4:green;4:and[%s,%s];4:implies[%s,%s];4:circle;4:size1;4:size1;4:and[%s,%s];4:blue;4:not[%s];4:size1
'λx.apply(and[size3,iff[rectangle,circle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:iff[%s,%s];4:rectangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.forall(apply(same_size,iota(x.s)),filter(filter(x.s, rectangle), or[and[circle,not[size2]],triangle]))'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:or[%s,%s];4:and[%s,%s];4:circle;4:not[%s];4:size2;4:triangle
'λx.contains(iota(x.s), filter(x.s, circle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(iff[and[rectangle,size3],not[and[yellow,and[and[green,green],and[and[green,yellow],size2]]]]],iota(filter(filter(filter(filter(filter(filter(x.s, green), circle), and[yellow,triangle]), blue), rectangle), or[yellow,blue])))'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:rectangle;4:size3;4:not[%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:and[%s,%s];4:green;4:green;4:and[%s,%s];4:and[%s,%s];4:green;4:yellow;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:circle;4:and[%s,%s];4:yellow;4:triangle;4:blue;4:rectangle;4:or[%s,%s];4:yellow;4:blue
'λx.apply(green,iota(filter(filter(filter(filter(filter(x.s, nor[size2,green]), green), blue), or[rectangle,triangle]), not[triangle])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size2;4:green;4:green;4:blue;4:or[%s,%s];4:rectangle;4:triangle;4:not[%s];4:triangle
'λx.apply(implies[size2,yellow],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:implies[%s,%s];4:size2;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.forall(nor[triangle,not[and[green,circle]]],filter(x.s, apply(same_color,x.o)))'	0:forall(%s,%s);4:nor[%s,%s];4:triangle;4:not[%s];4:and[%s,%s];4:green;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(and[size3,or[rectangle,apply(same_size,x.o)]],iota(filter(filter(x.s, size3), apply(same_size,iota(x.s)))))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(filter(filter(x.s, apply(same_size,iota(x.s))), green), size2), apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:green;4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.exists(and[green,size1], filter(filter(x.s, blue), and[or[implies[rectangle,iff[size2,iff[rectangle,rectangle]]],or[size3,apply(same_color,x.o)]],and[implies[size1,yellow],triangle]]))'	0:exists(%s, %s);4:and[%s,%s];4:green;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:rectangle;4:iff[%s,%s];4:size2;4:iff[%s,%s];4:rectangle;4:rectangle;4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:implies[%s,%s];4:size1;4:yellow;4:triangle
'λx.forall(apply(same_size,iota(x.s)),filter(x.s, rectangle))'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(circle,iota(filter(x.s, implies[triangle,not[size2]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:triangle;4:not[%s];4:size2
'λx.apply(and[and[size3,circle],apply(same_shape,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size3;4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.exists(nor[triangle,apply(same_shape,iota(x.s))], x.s)'	0:exists(%s, %s);4:nor[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(not[and[size3,green]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size3;4:green;1:%s.o;2:x
'λx.apply(not[implies[size1,or[size2,or[circle,size3]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:implies[%s,%s];4:size1;4:or[%s,%s];4:size2;4:or[%s,%s];4:circle;4:size3;1:%s.o;2:x
'λx.apply(not[and[size2,rectangle]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size2;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(filter(x.s, size1), size1), size1)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1;4:size1
'λx.apply(size3,iota(filter(x.s, apply(size-geq,x.o))))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.apply(iff[yellow,size3],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:yellow;4:size3;1:%s.o;2:x
'λx.apply(iff[yellow,size1],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:yellow;4:size1;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, apply(same_color,iota(x.s))))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.exists(circle, filter(x.s, not[and[not[blue],size3]]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:not[%s];4:blue;4:size3
'λx.contains(iota(filter(filter(filter(x.s, apply(same_shape,x.o)), and[size1,not[rectangle]]), and[green,green])), filter(x.s, size2))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:size1;4:not[%s];4:rectangle;4:and[%s,%s];4:green;4:green;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(green,iota(filter(filter(filter(x.s, green), and[size3,not[and[implies[size1,size2],and[or[size1,size2],and[blue,size3]]]]]), apply(size-gt,x.o))))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:size3;4:not[%s];4:and[%s,%s];4:implies[%s,%s];4:size1;4:size2;4:and[%s,%s];4:or[%s,%s];4:size1;4:size2;4:and[%s,%s];4:blue;4:size3;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.apply(iff[and[not[and[and[size3,yellow],apply(same_shape,x.o)]],blue],size3],iota(filter(x.s, implies[green,yellow])))'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:yellow;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:green;4:yellow
'λx.apply(not[blue],iota(filter(x.s, iff[green,apply(same_size,iota(x.s))])))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(filter(x.s, apply(same_shape,x.o)), implies[apply(same_size,x.o),and[apply(same_size,x.o),nor[green,green]]]), yellow)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:nor[%s,%s];4:green;4:green;4:yellow
'λx.apply(rectangle,iota(filter(filter(x.s, size3), triangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle
'λx.empty(filter(filter(filter(filter(filter(x.s, triangle), circle), size1), apply(same_color,x.o)), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle;4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle
'λx.apply(and[apply(same_size,x.o),apply(size-leq,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[nor[size3,green],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:size3;4:green;4:size1;1:%s.o;2:x
'λx.apply(and[size1,green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:green;1:iota(%s);3:%s.s;2:x
'λx.forall(apply(same_shape,iota(x.s)),filter(x.s, blue))'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(or[size1,nand[not[yellow],circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:nand[%s,%s];4:not[%s];4:yellow;4:circle;1:%s.o;2:x
'λx.forall(and[size1,implies[apply(same_color,iota(filter(x.s, apply(same_shape,x.o)))),circle]],filter(filter(x.s, size2), not[green]))'	0:forall(%s,%s);4:and[%s,%s];4:size1;4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:not[%s];4:green
'λx.apply(implies[not[yellow],and[apply(same_color,x.o),size1]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:not[%s];4:yellow;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_color,iota(filter(x.s, and[implies[and[and[rectangle,circle],triangle],green],blue]))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:circle;4:triangle;4:green;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_color,x.o),iota(filter(x.s, not[size2])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2
'λx.apply(rectangle,iota(filter(x.s, and[yellow,green])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:green
'λx.apply(or[apply(size-geq,iota(x.s)),yellow],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.forall(circle,filter(filter(x.s, apply(same_shape,iota(x.s))), green))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:green
'λx.apply(yellow,iota(filter(filter(filter(x.s, circle), or[blue,and[and[not[yellow],and[rectangle,and[size2,green]]],green]]), size2)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:yellow;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:size2;4:green;4:green;4:size2
'λx.apply(and[rectangle,rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:rectangle;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(x.s, size1), circle), apply(same_color,iota(filter(filter(x.s, and[size3,triangle]), rectangle)))), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:triangle;4:rectangle;4:blue
'λx.contains(x.o, filter(filter(filter(x.s, yellow), size1), and[green,and[green,and[size2,circle]]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;4:and[%s,%s];4:green;4:and[%s,%s];4:green;4:and[%s,%s];4:size2;4:circle
'λx.apply(not[apply(same_size,iota(x.s))],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size3,and[apply(same_color,x.o),circle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;1:iota(%s);3:%s.s;2:x
'λx.exists(and[size2,and[size3,triangle]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:size2;4:and[%s,%s];4:size3;4:triangle;3:%s.s;2:x
'λx.empty(filter(filter(x.s, apply(same_color,iota(filter(x.s, size3)))), and[blue,rectangle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:blue;4:rectangle
'λx.exists(yellow, filter(filter(x.s, blue), rectangle))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle
'λx.exists(triangle, filter(filter(filter(filter(filter(x.s, iff[nand[or[size3,and[circle,and[not[size2],blue]]],circle],size1]), size2), size1), apply(same_size,x.o)), yellow))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:size3;4:and[%s,%s];4:circle;4:and[%s,%s];4:not[%s];4:size2;4:blue;4:circle;4:size1;4:size2;4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow
'λx.apply(size2,iota(filter(filter(x.s, rectangle), and[implies[triangle,blue],and[and[size3,and[and[not[apply(size-leq,iota(x.s))],yellow],implies[not[and[size1,size3]],and[size1,green]]]],triangle]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:implies[%s,%s];4:triangle;4:blue;4:and[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:yellow;4:implies[%s,%s];4:not[%s];4:and[%s,%s];4:size1;4:size3;4:and[%s,%s];4:size1;4:green;4:triangle
'λx.apply(not[and[rectangle,or[size1,and[not[apply(same_shape,x.o)],rectangle]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:rectangle;4:or[%s,%s];4:size1;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle;1:%s.o;2:x
'λx.apply(iff[triangle,iff[apply(same_shape,x.o),size2]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:triangle;4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2;1:%s.o;2:x
'λx.exists(yellow, filter(x.s, implies[nand[yellow,apply(same_shape,iota(x.s))],and[or[or[size1,not[green]],not[circle]],size3]]))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:nand[%s,%s];4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:size1;4:not[%s];4:green;4:not[%s];4:circle;4:size3
'λx.apply(not[green],iota(filter(filter(filter(x.s, green), and[and[implies[not[and[triangle,and[triangle,size2]]],and[blue,size2]],or[apply(same_size,x.o),and[triangle,not[apply(same_size,iota(x.s))]]]],green]), blue)))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:not[%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:triangle;4:size2;4:and[%s,%s];4:blue;4:size2;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:triangle;4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:green;4:blue
'λx.empty(filter(filter(filter(x.s, or[triangle,apply(size-lt,iota(x.s))]), size1), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:size1;4:size2
'λx.exists(or[and[apply(same_shape,x.o),size2],blue], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2;4:blue;3:%s.s;2:x
'λx.apply(nor[and[and[triangle,size2],size2],iff[not[and[rectangle,and[size2,rectangle]]],implies[yellow,or[triangle,and[apply(same_color,iota(filter(filter(x.s, size3), circle))),size3]]]]],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:size2;4:size2;4:iff[%s,%s];4:not[%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:size2;4:rectangle;4:implies[%s,%s];4:yellow;4:or[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[and[or[not[size1],not[triangle]],size1],rectangle],iota(filter(filter(filter(x.s, triangle), yellow), iff[not[size2],size3])))'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:or[%s,%s];4:not[%s];4:size1;4:not[%s];4:triangle;4:size1;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:yellow;4:iff[%s,%s];4:not[%s];4:size2;4:size3
'λx.apply(iff[rectangle,green],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:rectangle;4:green;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(x.s, size3), or[not[or[size1,or[triangle,size3]]],size2])), filter(x.s, rectangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:not[%s];4:or[%s,%s];4:size1;4:or[%s,%s];4:triangle;4:size3;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[and[triangle,apply(same_color,iota(filter(x.s, not[rectangle])))],and[iff[and[yellow,size2],or[rectangle,circle]],yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;4:and[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:yellow;4:size2;4:or[%s,%s];4:rectangle;4:circle;4:yellow;1:%s.o;2:x
'λx.apply(and[rectangle,green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[blue,iff[size1,rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:iff[%s,%s];4:size1;4:rectangle;1:%s.o;2:x
'λx.apply(not[apply(same_color,iota(filter(filter(x.s, or[or[triangle,rectangle],size2]), and[or[circle,not[rectangle]],rectangle])))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:triangle;4:rectangle;4:size2;4:and[%s,%s];4:or[%s,%s];4:circle;4:not[%s];4:rectangle;4:rectangle;1:%s.o;2:x
'λx.apply(and[apply(same_shape,x.o),size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;1:iota(%s);3:%s.s;2:x
'λx.forall(blue,filter(filter(x.s, blue), not[not[and[and[circle,rectangle],circle]]]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:rectangle;4:circle
'λx.apply(not[and[size3,size2]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size3;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(size-leq,iota(filter(x.s, rectangle))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[green,green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:green;1:%s.o;2:x
'λx.forall(nor[blue,not[and[triangle,rectangle]]],filter(x.s, not[yellow]))'	0:forall(%s,%s);4:nor[%s,%s];4:blue;4:not[%s];4:and[%s,%s];4:triangle;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow
'λx.apply(not[and[apply(same_size,iota(filter(x.s, rectangle))),and[not[nand[blue,size3]],blue]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:not[%s];4:nand[%s,%s];4:blue;4:size3;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(x.s, implies[iff[not[size1],size1],size2]), and[triangle,size1])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:iff[%s,%s];4:not[%s];4:size1;4:size1;4:size2;4:and[%s,%s];4:triangle;4:size1
'λx.exists(triangle, filter(filter(filter(x.s, triangle), blue), triangle))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue;4:triangle
'λx.apply(and[and[and[green,size3],iff[circle,size3]],apply(same_size,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:size3;4:iff[%s,%s];4:circle;4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[implies[or[size3,size3],size3],green],iota(filter(filter(x.s, size2), triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:size3;4:size3;4:size3;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:triangle
'λx.contains(x.o, filter(filter(x.s, apply(same_size,iota(x.s))), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:green
'λx.apply(green,iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(implies[or[not[rectangle],and[and[circle,blue],and[apply(same_color,x.o),green]]],and[not[blue],size1]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:or[%s,%s];4:not[%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:circle;4:blue;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green;4:and[%s,%s];4:not[%s];4:blue;4:size1;1:%s.o;2:x
'λx.apply(nand[and[and[nand[blue,and[rectangle,circle]],iff[size2,and[size1,not[blue]]]],apply(size-geq,iota(x.s))],yellow],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:circle;4:iff[%s,%s];4:size2;4:and[%s,%s];4:size1;4:not[%s];4:blue;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.exists(nor[and[not[green],and[size2,size3]],blue], filter(x.s, yellow))'	0:exists(%s, %s);4:nor[%s,%s];4:and[%s,%s];4:not[%s];4:green;4:and[%s,%s];4:size2;4:size3;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(and[and[and[and[size2,size2],size2],nor[yellow,apply(size-geq,x.o)]],nor[and[not[blue],rectangle],blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:size2;4:size2;4:nor[%s,%s];4:yellow;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:nor[%s,%s];4:and[%s,%s];4:not[%s];4:blue;4:rectangle;4:blue;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(x.s, green), apply(same_shape,iota(filter(x.s, iff[circle,yellow])))), not[size1]), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:circle;4:yellow;4:not[%s];4:size1;4:blue
'λx.apply(yellow,iota(filter(x.s, and[green,apply(same_shape,iota(x.s))])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(filter(x.s, size3), and[triangle,or[apply(same_shape,iota(filter(x.s, size3))),green]]), rectangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:triangle;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green;4:rectangle
'λx.apply(blue,iota(filter(filter(filter(filter(filter(x.s, size1), rectangle), implies[not[green],triangle]), triangle), size1)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle;4:implies[%s,%s];4:not[%s];4:green;4:triangle;4:triangle;4:size1
'λx.apply(not[not[and[yellow,green]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:and[%s,%s];4:yellow;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[circle,rectangle],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:circle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(x.s, nand[size1,green])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size1;4:green
'λx.forall(nor[or[not[apply(same_size,iota(filter(filter(x.s, rectangle), green)))],and[yellow,and[yellow,circle]]],and[yellow,rectangle]],filter(filter(x.s, green), or[blue,rectangle]))'	0:forall(%s,%s);4:nor[%s,%s];4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green;4:and[%s,%s];4:yellow;4:and[%s,%s];4:yellow;4:circle;4:and[%s,%s];4:yellow;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:blue;4:rectangle
'λx.empty(filter(x.s, or[size2,yellow]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:yellow
'λx.apply(and[green,nand[circle,triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:nand[%s,%s];4:circle;4:triangle;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, blue))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.empty(filter(filter(filter(x.s, circle), blue), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue;4:size3
'λx.apply(size1,iota(filter(filter(filter(filter(filter(filter(x.s, not[and[size3,size2]]), size2), and[blue,green]), size1), green), yellow)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:size3;4:size2;4:size2;4:and[%s,%s];4:blue;4:green;4:size1;4:green;4:yellow
'λx.apply(implies[yellow,and[triangle,rectangle]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:yellow;4:and[%s,%s];4:triangle;4:rectangle;1:%s.o;2:x
'λx.apply(or[not[apply(same_size,iota(filter(x.s, not[yellow])))],rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:rectangle;1:%s.o;2:x
'λx.apply(and[green,rectangle],iota(filter(filter(filter(x.s, triangle), rectangle), yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle;4:yellow
'λx.apply(or[green,implies[apply(same_size,iota(x.s)),triangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:triangle;1:%s.o;2:x
'λx.apply(apply(same_color,iota(filter(filter(filter(filter(x.s, rectangle), rectangle), rectangle), size3))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle;4:rectangle;4:size3;1:%s.o;2:x
'λx.apply(nor[implies[size3,and[not[triangle],circle]],iff[not[and[rectangle,and[size2,rectangle]]],implies[yellow,or[triangle,and[apply(same_color,iota(filter(filter(x.s, size3), circle))),green]]]]],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:implies[%s,%s];4:size3;4:and[%s,%s];4:not[%s];4:triangle;4:circle;4:iff[%s,%s];4:not[%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:size2;4:rectangle;4:implies[%s,%s];4:yellow;4:or[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size2,or[or[size1,or[and[size2,triangle],iff[apply(size-gt,x.o),or[circle,green]]]],not[size1]]],iota(filter(x.s, and[or[rectangle,not[blue]],not[and[size1,implies[and[size2,circle],apply(same_color,x.o)]]]])))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:or[%s,%s];4:or[%s,%s];4:size1;4:or[%s,%s];4:and[%s,%s];4:size2;4:triangle;4:iff[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:or[%s,%s];4:circle;4:green;4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:not[%s];4:blue;4:not[%s];4:and[%s,%s];4:size1;4:implies[%s,%s];4:and[%s,%s];4:size2;4:circle;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(or[and[green,triangle],size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:green;4:triangle;4:size1;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(x.s, or[and[and[circle,triangle],yellow],and[rectangle,and[size1,rectangle]]]), size3)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:triangle;4:yellow;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:size1;4:rectangle;4:size3
'λx.contains(iota(filter(filter(x.s, and[circle,triangle]), rectangle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:triangle;4:rectangle;3:%s.s;2:x
'λx.apply(or[size3,nor[triangle,triangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:nor[%s,%s];4:triangle;4:triangle;1:%s.o;2:x
'λx.apply(or[and[circle,size1],size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:circle;4:size1;4:size1;1:%s.o;2:x
'λx.apply(or[apply(same_size,x.o),yellow],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(or[and[nor[yellow,and[not[not[triangle]],size1]],apply(same_shape,iota(x.s))],nor[or[size2,size3],circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:yellow;4:and[%s,%s];4:not[%s];4:not[%s];4:triangle;4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:nor[%s,%s];4:or[%s,%s];4:size2;4:size3;4:circle;1:%s.o;2:x
'λx.empty(filter(filter(x.s, triangle), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3
'λx.exists(implies[green,triangle], x.s)'	0:exists(%s, %s);4:implies[%s,%s];4:green;4:triangle;3:%s.s;2:x
'λx.apply(iff[triangle,or[blue,triangle]],iota(filter(x.s, and[size1,and[green,blue]])))'	0:apply(%s,%s);4:iff[%s,%s];4:triangle;4:or[%s,%s];4:blue;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:and[%s,%s];4:green;4:blue
'λx.apply(not[and[blue,circle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:blue;4:circle;1:%s.o;2:x
'λx.apply(not[green],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[yellow,and[rectangle,rectangle]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:yellow;4:and[%s,%s];4:rectangle;4:rectangle;1:%s.o;2:x
'λx.apply(or[size3,apply(same_size,x.o)],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.exists(and[yellow,triangle], filter(filter(filter(x.s, not[and[green,size2]]), size2), and[blue,green]))'	0:exists(%s, %s);4:and[%s,%s];4:yellow;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:green;4:size2;4:size2;4:and[%s,%s];4:blue;4:green
'λx.apply(and[nand[green,size1],not[and[green,size3]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:green;4:size1;4:not[%s];4:and[%s,%s];4:green;4:size3;1:%s.o;2:x
'λx.apply(or[or[yellow,or[size1,size3]],blue],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:yellow;4:or[%s,%s];4:size1;4:size3;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.exists(yellow, filter(filter(x.s, and[nor[size2,rectangle],and[rectangle,and[yellow,apply(same_color,iota(x.s))]]]), circle))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:size2;4:rectangle;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:circle
'λx.apply(and[and[apply(same_size,x.o),not[and[and[size3,size1],circle]]],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:size1;4:circle;4:green;1:%s.o;2:x
'λx.apply(or[rectangle,apply(same_size,x.o)],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(x.s, and[circle,size3]), not[circle])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size3;4:not[%s];4:circle
'λx.exists(triangle, filter(x.s, green))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.exists(triangle, filter(x.s, size3))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(triangle, filter(x.s, size1))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(nor[circle,green],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:circle;4:green;1:iota(%s);3:%s.s;2:x
'λx.exists(and[and[size3,green],apply(same_shape,iota(filter(x.s, size2)))], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:size3;4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;3:%s.s;2:x
'λx.apply(and[nand[or[and[and[and[size3,not[green]],yellow],size3],and[blue,blue]],and[rectangle,or[size1,size2]]],or[or[or[not[green],not[or[size1,and[apply(same_color,iota(filter(filter(x.s, apply(size-lt,x.o)), size3))),blue]]]],size3],rectangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:not[%s];4:green;4:yellow;4:size3;4:and[%s,%s];4:blue;4:blue;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:size1;4:size2;4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:not[%s];4:green;4:not[%s];4:or[%s,%s];4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:size3;4:blue;4:size3;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[triangle,size2],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:triangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(x.s, size2), and[blue,apply(same_size,iota(filter(x.s, blue)))])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.contains(iota(filter(x.s, and[yellow,triangle])), filter(filter(filter(x.s, blue), triangle), apply(same_size,x.o)))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(x.s, and[triangle,nor[apply(size-geq,iota(x.s)),and[not[blue],size3]]]), and[iff[and[and[size1,or[or[size3,not[triangle]],circle]],circle],implies[size2,triangle]],apply(size-lt,x.o)])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:nor[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:blue;4:size3;4:and[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:or[%s,%s];4:size3;4:not[%s];4:triangle;4:circle;4:circle;4:implies[%s,%s];4:size2;4:triangle;4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, and[and[not[circle],yellow],rectangle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:circle;4:yellow;4:rectangle
'λx.apply(not[or[rectangle,size2]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:rectangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.forall(size3,filter(filter(filter(filter(filter(x.s, or[blue,iff[size1,size1]]), yellow), green), size2), and[blue,and[green,iff[blue,or[not[circle],nand[circle,or[size3,and[or[and[size1,and[triangle,or[size2,or[circle,rectangle]]]],circle],size1]]]]]]]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:iff[%s,%s];4:size1;4:size1;4:yellow;4:green;4:size2;4:and[%s,%s];4:blue;4:and[%s,%s];4:green;4:iff[%s,%s];4:blue;4:or[%s,%s];4:not[%s];4:circle;4:nand[%s,%s];4:circle;4:or[%s,%s];4:size3;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:triangle;4:or[%s,%s];4:size2;4:or[%s,%s];4:circle;4:rectangle;4:circle;4:size1
'λx.apply(and[not[circle],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:circle;4:circle;1:%s.o;2:x
'λx.apply(not[size2],iota(filter(filter(filter(x.s, implies[and[size3,yellow],triangle]), nand[blue,size2]), green)))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:and[%s,%s];4:size3;4:yellow;4:triangle;4:nand[%s,%s];4:blue;4:size2;4:green
'λx.forall(blue,filter(filter(filter(x.s, apply(same_size,x.o)), implies[green,or[size1,blue]]), size2))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:implies[%s,%s];4:green;4:or[%s,%s];4:size1;4:blue;4:size2
'λx.apply(not[apply(size-leq,iota(filter(x.s, size3)))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;1:%s.o;2:x
'λx.apply(or[size2,iff[triangle,size1]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:iff[%s,%s];4:triangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(or[nor[rectangle,not[circle]],rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:nor[%s,%s];4:rectangle;4:not[%s];4:circle;4:rectangle;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(filter(filter(x.s, circle), size2), triangle), circle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size2;4:triangle;4:circle
'λx.exists(and[green,apply(size-leq,iota(filter(x.s, nand[not[size2],yellow])))], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:green;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:not[%s];4:size2;4:yellow;3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, and[yellow,triangle]), size1), and[and[green,yellow],and[yellow,yellow]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:triangle;4:size1;4:and[%s,%s];4:and[%s,%s];4:green;4:yellow;4:and[%s,%s];4:yellow;4:yellow
'λx.apply(or[or[blue,blue],and[triangle,not[rectangle]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:blue;4:blue;4:and[%s,%s];4:triangle;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.apply(and[and[or[and[yellow,green],and[size2,or[not[blue],triangle]]],size2],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:yellow;4:green;4:and[%s,%s];4:size2;4:or[%s,%s];4:not[%s];4:blue;4:triangle;4:size2;4:circle;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, and[apply(size-leq,x.o),and[implies[and[iff[blue,and[blue,rectangle]],triangle],triangle],size1]]), green)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:and[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:blue;4:and[%s,%s];4:blue;4:rectangle;4:triangle;4:triangle;4:size1;4:green
'λx.apply(implies[apply(same_size,iota(x.s)),size1],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size1;1:%s.o;2:x
'λx.apply(not[or[rectangle,or[triangle,nand[green,size2]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:rectangle;4:or[%s,%s];4:triangle;4:nand[%s,%s];4:green;4:size2;1:%s.o;2:x
'λx.apply(and[green,and[and[rectangle,green],iff[yellow,size2]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:green;4:iff[%s,%s];4:yellow;4:size2;1:iota(%s);3:%s.s;2:x
'λx.forall(size2,filter(filter(filter(filter(filter(filter(filter(filter(x.s, apply(size-geq,iota(x.s))), nor[yellow,circle]), not[size2]), circle), size2), yellow), yellow), blue))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:nor[%s,%s];4:yellow;4:circle;4:not[%s];4:size2;4:circle;4:size2;4:yellow;4:yellow;4:blue
'λx.apply(not[circle],iota(filter(filter(x.s, size2), rectangle)))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle
'λx.contains(x.o, filter(filter(filter(filter(x.s, not[apply(same_shape,x.o)]), circle), not[blue]), yellow))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;4:not[%s];4:blue;4:yellow
'λx.apply(and[and[blue,green],green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:green;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(filter(filter(x.s, blue), yellow), size3), apply(same_shape,x.o))))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow;4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(or[or[circle,triangle],circle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:circle;4:triangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(filter(filter(x.s, size3), and[and[iff[triangle,green],apply(same_size,iota(x.s))],blue]), green), triangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:triangle;4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:blue;4:green;4:triangle
'λx.apply(size2,iota(filter(filter(x.s, or[size3,rectangle]), or[nor[not[and[rectangle,yellow]],and[rectangle,blue]],size1])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:rectangle;4:or[%s,%s];4:nor[%s,%s];4:not[%s];4:and[%s,%s];4:rectangle;4:yellow;4:and[%s,%s];4:rectangle;4:blue;4:size1
'λx.empty(filter(filter(filter(filter(filter(x.s, triangle), and[size1,green]), or[size3,and[or[blue,size1],size1]]), and[green,size2]), or[apply(same_size,x.o),size3]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:size1;4:green;4:or[%s,%s];4:size3;4:and[%s,%s];4:or[%s,%s];4:blue;4:size1;4:size1;4:and[%s,%s];4:green;4:size2;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3
'λx.apply(and[yellow,not[green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:not[%s];4:green;1:%s.o;2:x
'λx.apply(and[size2,green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[or[size3,and[rectangle,circle]],size1],iota(filter(filter(x.s, implies[apply(same_size,x.o),circle]), not[size2])))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size3;4:and[%s,%s];4:rectangle;4:circle;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;4:not[%s];4:size2
'λx.apply(rectangle,iota(filter(filter(x.s, or[triangle,triangle]), blue)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:triangle;4:blue
'λx.apply(not[size1],iota(filter(x.s, apply(same_color,x.o))))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(and[size3,green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:green;1:iota(%s);3:%s.s;2:x
'λx.exists(implies[or[and[and[apply(size-geq,x.o),apply(size-lt,iota(x.s))],rectangle],circle],triangle], filter(filter(x.s, circle), green))'	0:exists(%s, %s);4:implies[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:rectangle;4:circle;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green
'λx.apply(and[and[or[green,nor[green,or[size1,green]]],nor[green,and[not[and[size1,triangle]],yellow]]],and[and[triangle,triangle],circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:green;4:nor[%s,%s];4:green;4:or[%s,%s];4:size1;4:green;4:nor[%s,%s];4:green;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:size1;4:triangle;4:yellow;4:and[%s,%s];4:and[%s,%s];4:triangle;4:triangle;4:circle;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(x.s, and[blue,size3]), rectangle), circle), and[triangle,size3]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size3;4:rectangle;4:circle;4:and[%s,%s];4:triangle;4:size3
'λx.apply(apply(size-leq,iota(x.s)),iota(filter(filter(x.s, not[yellow]), size3)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:size3
'λx.forall(size3,filter(x.s, not[and[green,triangle]]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:green;4:triangle
'λx.contains(iota(filter(filter(x.s, nor[green,triangle]), size3)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:green;4:triangle;4:size3;3:%s.s;2:x
'λx.exists(size2, filter(x.s, and[nor[circle,not[and[yellow,and[circle,circle]]]],triangle]))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:circle;4:not[%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:circle;4:circle;4:triangle
'λx.apply(or[triangle,or[and[nor[green,blue],size2],apply(same_color,x.o)]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:or[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:green;4:blue;4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[or[implies[and[triangle,iff[apply(same_color,x.o),green]],and[and[and[green,size3],and[yellow,size1]],nand[size3,or[and[circle,size2],size3]]]],rectangle],circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:triangle;4:iff[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:size3;4:and[%s,%s];4:yellow;4:size1;4:nand[%s,%s];4:size3;4:or[%s,%s];4:and[%s,%s];4:circle;4:size2;4:size3;4:rectangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.forall(apply(same_color,x.o),filter(filter(filter(x.s, green), and[implies[nor[not[implies[and[and[apply(size-lt,x.o),implies[triangle,or[size3,nor[circle,circle]]]],circle],yellow]],not[not[circle]]],apply(same_size,iota(filter(x.s, size2)))],apply(same_color,iota(filter(x.s, rectangle)))]), green))'	0:forall(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:implies[%s,%s];4:nor[%s,%s];4:not[%s];4:implies[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:implies[%s,%s];4:triangle;4:or[%s,%s];4:size3;4:nor[%s,%s];4:circle;4:circle;4:circle;4:yellow;4:not[%s];4:not[%s];4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green
'λx.apply(not[or[and[and[apply(same_size,x.o),yellow],yellow],implies[apply(size-leq,x.o),rectangle]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow;4:yellow;4:implies[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.exists(green, x.s)'	0:exists(%s, %s);4:green;3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(x.s, circle), size3)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3
'λx.forall(apply(same_color,iota(x.s)),filter(x.s, circle))'	0:forall(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.empty(filter(filter(filter(filter(x.s, green), blue), iff[blue,circle]), not[triangle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue;4:iff[%s,%s];4:blue;4:circle;4:not[%s];4:triangle
'λx.apply(yellow,iota(filter(filter(x.s, size2), size1)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1
'λx.exists(size1, x.s)'	0:exists(%s, %s);4:size1;3:%s.s;2:x
'λx.exists(size2, x.s)'	0:exists(%s, %s);4:size2;3:%s.s;2:x
'λx.exists(size3, x.s)'	0:exists(%s, %s);4:size3;3:%s.s;2:x
'λx.forall(size3,filter(filter(filter(filter(x.s, circle), yellow), rectangle), size3))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow;4:rectangle;4:size3
'λx.forall(size1,filter(x.s, nand[size1,size2]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size1;4:size2
'λx.apply(and[nand[triangle,size3],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:triangle;4:size3;4:triangle;1:%s.o;2:x
'λx.apply(apply(size-geq,x.o),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(or[iff[or[and[apply(size-lt,x.o),green],and[circle,apply(same_color,iota(filter(x.s, apply(same_shape,iota(filter(x.s, yellow))))))]],triangle],size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:green;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle;4:size2;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(filter(x.s, circle), triangle), and[size2,rectangle])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle;4:and[%s,%s];4:size2;4:rectangle
'λx.empty(x.s)'	0:empty(%s);3:%s.s;2:x
'λx.apply(apply(size-gt,iota(filter(filter(x.s, size2), size3))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(or[apply(same_color,iota(x.s)),rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:rectangle;1:%s.o;2:x
'λx.apply(triangle,iota(filter(x.s, and[size3,green])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:green
'λx.forall(or[and[and[yellow,size1],and[blue,circle]],blue],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:size1;4:and[%s,%s];4:blue;4:circle;4:blue;3:%s.s;2:x
'λx.apply(not[apply(same_shape,x.o)],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(iff[rectangle,size3],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:rectangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(not[or[size2,and[or[circle,or[green,size1]],and[and[size1,yellow],rectangle]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:size2;4:and[%s,%s];4:or[%s,%s];4:circle;4:or[%s,%s];4:green;4:size1;4:and[%s,%s];4:and[%s,%s];4:size1;4:yellow;4:rectangle;1:%s.o;2:x
'λx.apply(iff[yellow,green],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:yellow;4:green;1:%s.o;2:x
'λx.forall(green,filter(filter(filter(filter(filter(x.s, yellow), green), implies[green,or[rectangle,rectangle]]), rectangle), size3))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green;4:implies[%s,%s];4:green;4:or[%s,%s];4:rectangle;4:rectangle;4:rectangle;4:size3
'λx.apply(nand[rectangle,triangle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:rectangle;4:triangle;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(filter(x.s, and[triangle,nor[apply(size-geq,iota(x.s)),and[not[blue],size3]]]), and[iff[and[and[size1,or[or[size3,not[triangle]],size3]],circle],implies[size2,triangle]],apply(size-lt,x.o)]), yellow)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:nor[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:blue;4:size3;4:and[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:or[%s,%s];4:size3;4:not[%s];4:triangle;4:size3;4:circle;4:implies[%s,%s];4:size2;4:triangle;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:yellow
'λx.apply(apply(same_color,x.o),iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(and[nand[nor[rectangle,rectangle],and[blue,and[triangle,blue]]],blue],iota(filter(filter(filter(filter(filter(x.s, and[apply(same_shape,x.o),not[apply(size-lt,x.o)]]), size2), or[circle,and[blue,size1]]), size1), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:nor[%s,%s];4:rectangle;4:rectangle;4:and[%s,%s];4:blue;4:and[%s,%s];4:triangle;4:blue;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:size2;4:or[%s,%s];4:circle;4:and[%s,%s];4:blue;4:size1;4:size1;4:blue
'λx.contains(iota(filter(filter(x.s, blue), size1)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1;3:%s.s;2:x
'λx.contains(iota(filter(filter(x.s, blue), size3)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3;3:%s.s;2:x
'λx.apply(circle,iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(yellow,iota(filter(filter(filter(x.s, and[circle,size3]), apply(size-leq,iota(x.s))), size3)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size3;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:size3
'λx.apply(size1,iota(filter(x.s, iff[circle,circle])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:circle;4:circle
'λx.apply(size2,iota(filter(filter(filter(filter(filter(filter(x.s, yellow), blue), yellow), size2), iff[size1,green]), circle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:blue;4:yellow;4:size2;4:iff[%s,%s];4:size1;4:green;4:circle
'λx.apply(blue,iota(filter(filter(x.s, blue), triangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle
'λx.apply(apply(same_color,x.o),iota(filter(filter(x.s, size1), not[size2])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:not[%s];4:size2
'λx.apply(iff[yellow,not[triangle]],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:yellow;4:not[%s];4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[blue,yellow],iota(filter(filter(x.s, or[nor[size3,green],circle]), green)))'	0:apply(%s,%s);4:nor[%s,%s];4:blue;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:nor[%s,%s];4:size3;4:green;4:circle;4:green
'λx.apply(iff[size2,and[size3,blue]],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:size2;4:and[%s,%s];4:size3;4:blue;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(x.s, not[and[not[or[iff[size3,triangle],apply(same_shape,iota(x.s))]],size2]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:not[%s];4:or[%s,%s];4:iff[%s,%s];4:size3;4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size2
'λx.apply(triangle,iota(filter(filter(filter(x.s, not[size3]), and[triangle,triangle]), green)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;4:and[%s,%s];4:triangle;4:triangle;4:green
'λx.apply(iff[or[or[circle,or[or[or[size2,triangle],apply(size-lt,iota(x.s))],size1]],triangle],yellow],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:or[%s,%s];4:or[%s,%s];4:circle;4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:size2;4:triangle;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:size1;4:triangle;4:yellow;1:%s.o;2:x
'λx.apply(or[and[triangle,and[and[and[and[green,size1],size1],iff[circle,blue]],iff[and[and[apply(same_shape,iota(x.s)),or[yellow,not[size3]]],yellow],and[size2,rectangle]]]],apply(same_shape,iota(filter(x.s, triangle)))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:size1;4:size1;4:iff[%s,%s];4:circle;4:blue;4:iff[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:not[%s];4:size3;4:yellow;4:and[%s,%s];4:size2;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, green), size1)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1
'λx.apply(blue,iota(filter(filter(x.s, green), green)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:green
'λx.apply(nand[size2,size3],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:size2;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(filter(filter(x.s, yellow), apply(size-leq,iota(x.s))), circle), nand[and[green,apply(same_shape,x.o)],rectangle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:circle;4:nand[%s,%s];4:and[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle
'λx.exists(yellow, filter(x.s, and[and[green,yellow],and[apply(same_size,iota(x.s)),green]]))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:green;4:yellow;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:green
'λx.forall(or[not[triangle],rectangle],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:not[%s];4:triangle;4:rectangle;3:%s.s;2:x
'λx.apply(not[and[size3,apply(same_size,iota(x.s))]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(and[size2,and[green,rectangle]],iota(filter(filter(filter(x.s, blue), size3), or[circle,yellow])))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:green;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3;4:or[%s,%s];4:circle;4:yellow
'λx.empty(filter(filter(x.s, rectangle), iff[and[apply(same_shape,x.o),and[apply(same_size,iota(x.s)),size1]],green]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:iff[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size1;4:green
'λx.apply(size3,iota(filter(filter(filter(x.s, size2), blue), triangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue;4:triangle
'λx.apply(yellow,iota(filter(filter(x.s, circle), yellow)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow
'λx.contains(iota(x.s), filter(filter(filter(x.s, or[rectangle,size2]), rectangle), green))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:size2;4:rectangle;4:green
'λx.apply(blue,iota(filter(filter(x.s, triangle), and[and[circle,green],size2])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:and[%s,%s];4:circle;4:green;4:size2
'λx.empty(filter(x.s, apply(same_size,iota(filter(x.s, nand[and[triangle,rectangle],and[circle,size1]])))))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:and[%s,%s];4:triangle;4:rectangle;4:and[%s,%s];4:circle;4:size1
'λx.contains(iota(filter(x.s, implies[and[not[rectangle],size2],and[triangle,size1]])), filter(filter(filter(filter(x.s, blue), apply(same_shape,x.o)), blue), circle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:and[%s,%s];4:not[%s];4:rectangle;4:size2;4:and[%s,%s];4:triangle;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue;4:circle
'λx.forall(size3,filter(filter(x.s, apply(size-leq,x.o)), green))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:green
'λx.apply(and[apply(same_color,iota(x.s)),or[size2,circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:circle;1:%s.o;2:x
'λx.apply(and[blue,not[and[and[not[size3],circle],size1]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size3;4:circle;4:size1;1:%s.o;2:x
'λx.apply(nand[not[size1],size1],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:not[%s];4:size1;4:size1;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(filter(filter(x.s, yellow), circle), size2), not[iff[or[yellow,size1],green]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle;4:size2;4:not[%s];4:iff[%s,%s];4:or[%s,%s];4:yellow;4:size1;4:green
'λx.apply(size1,iota(filter(x.s, or[implies[size1,blue],not[size3]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:implies[%s,%s];4:size1;4:blue;4:not[%s];4:size3
'λx.apply(nor[rectangle,blue],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:rectangle;4:blue;1:%s.o;2:x
'λx.apply(or[and[and[iff[iff[size1,circle],green],size3],triangle],blue],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:iff[%s,%s];4:size1;4:circle;4:green;4:size3;4:triangle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.forall(blue,filter(x.s, rectangle))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(nor[size3,not[apply(same_color,iota(filter(filter(filter(filter(x.s, blue), blue), rectangle), apply(size-lt,x.o))))]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size3;4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue;4:rectangle;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:%s.o;2:x
'λx.forall(size2,filter(x.s, or[triangle,apply(same_shape,iota(x.s))]))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(x.s, or[rectangle,size1]), or[or[circle,yellow],size3])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:size1;4:or[%s,%s];4:or[%s,%s];4:circle;4:yellow;4:size3
'λx.apply(nand[blue,or[size3,circle]],iota(filter(filter(x.s, triangle), not[triangle])))'	0:apply(%s,%s);4:nand[%s,%s];4:blue;4:or[%s,%s];4:size3;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:not[%s];4:triangle
'λx.apply(circle,iota(x.s))'	0:apply(%s,%s);4:circle;1:iota(%s);3:%s.s;2:x
'λx.forall(triangle,x.s)'	0:forall(%s,%s);4:triangle;3:%s.s;2:x
'λx.apply(and[blue,rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[or[circle,apply(same_color,x.o)],blue],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(or[implies[yellow,size3],size1],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:or[%s,%s];4:implies[%s,%s];4:yellow;4:size3;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.empty(filter(filter(filter(filter(x.s, size2), apply(same_color,iota(x.s))), rectangle), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:rectangle;4:yellow
'λx.apply(blue,iota(filter(x.s, nand[circle,circle])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:circle;4:circle
'λx.apply(size1,iota(filter(filter(x.s, iff[yellow,and[yellow,circle]]), circle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:yellow;4:and[%s,%s];4:yellow;4:circle;4:circle
'λx.apply(and[apply(size-geq,x.o),circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[apply(same_size,iota(filter(x.s, circle))),size3],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(filter(filter(filter(filter(x.s, not[size3]), not[size2]), iff[rectangle,and[iff[size3,apply(same_color,iota(x.s))],rectangle]]), yellow), blue), apply(same_color,x.o)), circle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;4:not[%s];4:size2;4:iff[%s,%s];4:rectangle;4:and[%s,%s];4:iff[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:rectangle;4:yellow;4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle
'λx.apply(and[rectangle,rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[not[and[size2,apply(same_shape,x.o)]],yellow],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:not[%s];4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow;1:%s.o;2:x
'λx.apply(and[and[and[size1,green],size1],or[size2,yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:green;4:size1;4:or[%s,%s];4:size2;4:yellow;1:%s.o;2:x
'λx.apply(iff[triangle,green],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:triangle;4:green;1:iota(%s);3:%s.s;2:x
'λx.exists(circle, filter(filter(x.s, yellow), yellow))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:yellow
'λx.contains(iota(x.s), filter(filter(filter(filter(x.s, not[triangle]), not[triangle]), blue), rectangle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:not[%s];4:triangle;4:blue;4:rectangle
'λx.empty(filter(x.s, or[circle,triangle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:triangle
'λx.apply(or[circle,or[apply(size-leq,x.o),circle]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(size2,iota(filter(x.s, and[blue,size2])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size2
'λx.apply(size2,iota(filter(x.s, and[blue,size1])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size1
'λx.contains(iota(filter(filter(filter(x.s, apply(size-gt,x.o)), circle), green)), filter(filter(filter(x.s, triangle), green), size2))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:circle;4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green;4:size2
'λx.apply(implies[blue,not[size2]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:blue;4:not[%s];4:size2;1:iota(%s);3:%s.s;2:x
'λx.forall(rectangle,filter(filter(x.s, nor[circle,and[yellow,yellow]]), yellow))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:circle;4:and[%s,%s];4:yellow;4:yellow;4:yellow
'λx.apply(and[circle,triangle],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(green,iota(filter(filter(filter(x.s, size3), green), size2)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green;4:size2
'λx.apply(and[or[size1,circle],size1],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size1;4:circle;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(and[green,iff[not[blue],and[size3,and[and[green,implies[blue,size1]],iff[circle,nand[rectangle,rectangle]]]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:iff[%s,%s];4:not[%s];4:blue;4:and[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:green;4:implies[%s,%s];4:blue;4:size1;4:iff[%s,%s];4:circle;4:nand[%s,%s];4:rectangle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.exists(and[not[iff[yellow,size1]],size1], filter(x.s, rectangle))'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:iff[%s,%s];4:yellow;4:size1;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(or[not[not[nand[not[size1],nand[not[size2],green]]]],green],iota(filter(filter(x.s, implies[size2,rectangle]), size3)))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:not[%s];4:nand[%s,%s];4:not[%s];4:size1;4:nand[%s,%s];4:not[%s];4:size2;4:green;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size2;4:rectangle;4:size3
'λx.apply(nor[yellow,size2],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:yellow;4:size2;1:%s.o;2:x
'λx.forall(implies[rectangle,or[and[rectangle,rectangle],nor[circle,size2]]],x.s)'	0:forall(%s,%s);4:implies[%s,%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:rectangle;4:nor[%s,%s];4:circle;4:size2;3:%s.s;2:x
'λx.apply(not[size2],iota(filter(filter(filter(filter(x.s, apply(same_size,iota(filter(filter(x.s, blue), circle)))), not[size2]), size2), rectangle)))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle;4:not[%s];4:size2;4:size2;4:rectangle
'λx.exists(not[rectangle], filter(x.s, apply(same_shape,iota(x.s))))'	0:exists(%s, %s);4:not[%s];4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.forall(and[triangle,or[triangle,yellow]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:triangle;4:or[%s,%s];4:triangle;4:yellow;3:%s.s;2:x
'λx.apply(green,iota(filter(filter(x.s, not[or[size1,rectangle]]), not[or[size2,not[and[yellow,size1]]]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:size1;4:rectangle;4:not[%s];4:or[%s,%s];4:size2;4:not[%s];4:and[%s,%s];4:yellow;4:size1
'λx.forall(and[size3,rectangle],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:size3;4:rectangle;3:%s.s;2:x
'λx.apply(and[nand[apply(same_shape,x.o),or[size1,circle]],implies[size3,size2]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:size1;4:circle;4:implies[%s,%s];4:size3;4:size2;1:iota(%s);3:%s.s;2:x
'λx.exists(or[blue,and[iff[size2,apply(same_color,iota(x.s))],size1]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:blue;4:and[%s,%s];4:iff[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size1;3:%s.s;2:x
'λx.apply(apply(same_shape,x.o),iota(filter(x.s, not[green])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green
'λx.apply(nor[size3,circle],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:nor[%s,%s];4:size3;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.forall(circle,filter(filter(filter(filter(filter(x.s, and[apply(same_size,x.o),triangle]), not[and[size2,triangle]]), rectangle), size2), yellow))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle;4:not[%s];4:and[%s,%s];4:size2;4:triangle;4:rectangle;4:size2;4:yellow
'λx.apply(rectangle,iota(filter(filter(x.s, triangle), and[blue,blue])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:blue;4:blue
'λx.apply(or[circle,size2],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[not[and[yellow,blue]],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:yellow;4:blue;4:circle;1:%s.o;2:x
'λx.apply(nor[size3,apply(same_shape,x.o)],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(x.s, and[or[apply(size-lt,iota(filter(filter(filter(filter(x.s, and[circle,size2]), rectangle), size2), rectangle))),rectangle],blue])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size2;4:rectangle;4:size2;4:rectangle;4:rectangle;4:blue
'λx.exists(and[rectangle,and[rectangle,circle]], filter(filter(x.s, apply(same_shape,iota(filter(x.s, circle)))), and[and[triangle,not[not[apply(same_color,iota(filter(x.s, rectangle)))]]],nor[size1,or[circle,blue]]]))'	0:exists(%s, %s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:rectangle;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:and[%s,%s];4:triangle;4:not[%s];4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:nor[%s,%s];4:size1;4:or[%s,%s];4:circle;4:blue
'λx.forall(and[size1,size3],filter(filter(x.s, blue), apply(same_shape,iota(filter(filter(x.s, blue), not[green])))))'	0:forall(%s,%s);4:and[%s,%s];4:size1;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:green
'λx.apply(and[or[apply(same_color,iota(x.s)),or[not[blue],green]],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:blue;4:green;4:size3;1:%s.o;2:x
'λx.apply(or[apply(same_size,iota(filter(x.s, size2))),rectangle],iota(filter(filter(filter(x.s, and[green,blue]), not[yellow]), and[green,implies[and[nor[and[not[yellow],and[green,and[and[and[not[size2],green],apply(same_color,x.o)],and[implies[implies[or[size1,size2],yellow],circle],triangle]]]],and[yellow,not[blue]]],blue],yellow]])))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:blue;4:not[%s];4:yellow;4:and[%s,%s];4:green;4:implies[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:not[%s];4:yellow;4:and[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size2;4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:implies[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:size1;4:size2;4:yellow;4:circle;4:triangle;4:and[%s,%s];4:yellow;4:not[%s];4:blue;4:blue;4:yellow
'λx.apply(apply(size-leq,iota(filter(x.s, not[triangle]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, yellow), size3)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size3
'λx.apply(and[or[blue,circle],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:blue;4:circle;4:triangle;1:%s.o;2:x
'λx.apply(and[size1,green],iota(filter(filter(x.s, or[size2,green]), not[triangle])))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:green;4:not[%s];4:triangle
'λx.apply(nor[yellow,apply(same_shape,x.o)],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:yellow;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(x.s, and[size2,apply(size-lt,iota(x.s))])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, and[size3,iff[and[not[green],size2],apply(same_shape,iota(filter(x.s, and[size3,and[size2,not[rectangle]]])))]]), blue)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:iff[%s,%s];4:and[%s,%s];4:not[%s];4:green;4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:and[%s,%s];4:size2;4:not[%s];4:rectangle;4:blue
'λx.apply(iff[yellow,and[triangle,and[size1,size2]]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:yellow;4:and[%s,%s];4:triangle;4:and[%s,%s];4:size1;4:size2;1:%s.o;2:x
'λx.apply(iff[or[triangle,rectangle],not[and[size1,rectangle]]],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:or[%s,%s];4:triangle;4:rectangle;4:not[%s];4:and[%s,%s];4:size1;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(filter(filter(filter(filter(x.s, and[size1,apply(same_shape,iota(x.s))]), and[apply(size-gt,x.o),circle]), size2), green), nor[apply(same_size,iota(filter(x.s, and[apply(same_shape,x.o),not[triangle]]))),and[rectangle,size2]]), apply(same_color,x.o))))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:circle;4:size2;4:green;4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:triangle;4:and[%s,%s];4:rectangle;4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(or[apply(same_color,x.o),not[blue]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(green,iota(filter(filter(filter(filter(x.s, nor[apply(size-geq,x.o),size1]), apply(same_size,iota(filter(x.s, size2)))), rectangle), rectangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle;4:rectangle
'λx.apply(green,iota(filter(filter(x.s, and[circle,and[green,yellow]]), green)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:and[%s,%s];4:green;4:yellow;4:green
'λx.forall(and[and[apply(same_shape,iota(filter(x.s, size2))),size3],green],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3;4:green;3:%s.s;2:x
'λx.apply(green,iota(filter(filter(x.s, green), size3)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size3
'λx.empty(filter(filter(filter(filter(filter(filter(x.s, implies[triangle,blue]), size3), rectangle), blue), size3), and[triangle,not[circle]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:triangle;4:blue;4:size3;4:rectangle;4:blue;4:size3;4:and[%s,%s];4:triangle;4:not[%s];4:circle
'λx.apply(size1,iota(filter(filter(x.s, circle), nor[or[yellow,size2],green])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:nor[%s,%s];4:or[%s,%s];4:yellow;4:size2;4:green
'λx.apply(or[nand[size1,size3],size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:size1;4:size3;4:size1;1:%s.o;2:x
'λx.contains(iota(filter(x.s, and[size2,size3])), filter(x.s, green))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[apply(same_color,iota(x.s)),blue],iota(filter(x.s, green)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.forall(triangle,filter(filter(x.s, apply(same_shape,x.o)), implies[circle,and[apply(same_size,x.o),nor[green,green]]]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:implies[%s,%s];4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:nor[%s,%s];4:green;4:green
'λx.forall(apply(same_shape,iota(filter(x.s, rectangle))),filter(x.s, implies[blue,and[size1,yellow]]))'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:blue;4:and[%s,%s];4:size1;4:yellow
'λx.apply(or[not[size2],size2],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:size2;4:size2;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, triangle), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue
'λx.apply(or[rectangle,nand[circle,triangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:nand[%s,%s];4:circle;4:triangle;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(filter(x.s, and[blue,size1]), and[size2,size3]), size2), green)), filter(x.s, circle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size1;4:and[%s,%s];4:size2;4:size3;4:size2;4:green;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.exists(blue, filter(filter(filter(filter(filter(filter(x.s, size3), blue), size3), green), size1), triangle))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue;4:size3;4:green;4:size1;4:triangle
'λx.contains(iota(x.s), filter(filter(x.s, apply(same_shape,iota(x.s))), triangle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle
'λx.exists(not[or[and[green,or[yellow,apply(size-lt,iota(filter(filter(x.s, triangle), or[size2,and[rectangle,and[apply(same_size,iota(filter(filter(x.s, rectangle), circle))),circle]]])))]],triangle]], x.s)'	0:exists(%s, %s);4:not[%s];4:or[%s,%s];4:and[%s,%s];4:green;4:or[%s,%s];4:yellow;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:or[%s,%s];4:size2;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle;4:circle;4:triangle;3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(filter(x.s, size1), rectangle), size1), size1))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle;4:size1;4:size1
'λx.empty(filter(x.s, or[size1,nand[rectangle,yellow]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:nand[%s,%s];4:rectangle;4:yellow
'λx.apply(rectangle,iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.empty(filter(filter(filter(x.s, size3), circle), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle;4:green
'λx.apply(and[nor[not[size3],nor[rectangle,triangle]],and[yellow,yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:not[%s];4:size3;4:nor[%s,%s];4:rectangle;4:triangle;4:and[%s,%s];4:yellow;4:yellow;1:%s.o;2:x
'λx.exists(and[or[size1,yellow],blue], filter(x.s, rectangle))'	0:exists(%s, %s);4:and[%s,%s];4:or[%s,%s];4:size1;4:yellow;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(or[or[size3,or[not[and[circle,green]],and[and[size3,not[and[implies[yellow,blue],and[not[apply(size-geq,iota(x.s))],triangle]]]],green]]],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:size3;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:circle;4:green;4:and[%s,%s];4:and[%s,%s];4:size3;4:not[%s];4:and[%s,%s];4:implies[%s,%s];4:yellow;4:blue;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:triangle;4:green;4:blue;1:%s.o;2:x
'λx.apply(not[and[green,apply(same_shape,iota(x.s))]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.forall(yellow,filter(filter(filter(x.s, apply(same_color,iota(filter(x.s, blue)))), size1), nor[not[rectangle],size2]))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1;4:nor[%s,%s];4:not[%s];4:rectangle;4:size2
'λx.apply(apply(same_shape,iota(x.s)),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.exists(and[not[implies[apply(same_size,x.o),green]],green], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;4:green;3:%s.s;2:x
'λx.forall(and[and[and[yellow,size1],triangle],size1],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:size1;4:triangle;4:size1;3:%s.s;2:x
'λx.empty(filter(x.s, or[not[and[or[not[green],yellow],size1]],size3]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:or[%s,%s];4:not[%s];4:green;4:yellow;4:size1;4:size3
'λx.exists(size2, filter(x.s, nor[apply(same_color,iota(x.s)),and[and[and[green,green],yellow],yellow]]))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:green;4:yellow;4:yellow
'λx.apply(or[size2,and[triangle,and[yellow,yellow]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:and[%s,%s];4:triangle;4:and[%s,%s];4:yellow;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(x.s), filter(filter(filter(filter(x.s, not[iff[size3,size2]]), and[blue,size1]), not[circle]), apply(same_size,iota(filter(x.s, blue)))))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:iff[%s,%s];4:size3;4:size2;4:and[%s,%s];4:blue;4:size1;4:not[%s];4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[or[size1,nand[rectangle,and[rectangle,yellow]]],not[rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size1;4:nand[%s,%s];4:rectangle;4:and[%s,%s];4:rectangle;4:yellow;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.forall(size3,filter(filter(x.s, and[size1,and[not[and[not[blue],triangle]],and[circle,rectangle]]]), and[yellow,apply(same_color,x.o)]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:not[%s];4:blue;4:triangle;4:and[%s,%s];4:circle;4:rectangle;4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(x.s, and[blue,size3]))),iota(filter(filter(filter(x.s, size3), rectangle), circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle;4:circle
'λx.apply(and[green,and[size2,and[size1,rectangle]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:size2;4:and[%s,%s];4:size1;4:rectangle;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(x.s, blue), apply(same_color,x.o)), size2)), filter(x.s, and[apply(same_shape,x.o),not[size3]]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:size3
'λx.apply(or[and[green,implies[rectangle,circle]],apply(same_size,iota(x.s))],iota(filter(filter(filter(x.s, size3), green), and[size2,circle])))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:green;4:implies[%s,%s];4:rectangle;4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green;4:and[%s,%s];4:size2;4:circle
'λx.apply(apply(same_shape,iota(x.s)),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(nor[not[rectangle],or[triangle,size3]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:not[%s];4:rectangle;4:or[%s,%s];4:triangle;4:size3;1:%s.o;2:x
'λx.apply(and[triangle,triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:triangle;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(x.s, blue), blue), size3)), filter(x.s, triangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(or[green,and[blue,not[not[or[size1,yellow]]]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:and[%s,%s];4:blue;4:not[%s];4:not[%s];4:or[%s,%s];4:size1;4:yellow;1:%s.o;2:x
'λx.exists(size2, filter(filter(x.s, yellow), green))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green
'λx.exists(not[apply(same_size,x.o)], filter(filter(x.s, triangle), yellow))'	0:exists(%s, %s);4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:yellow
'λx.apply(and[size3,blue],iota(filter(filter(filter(filter(x.s, and[size2,or[or[nor[or[and[apply(same_color,x.o),rectangle],size2],triangle],not[not[triangle]]],iff[and[and[not[blue],rectangle],apply(same_size,x.o)],circle]]]), triangle), apply(size-gt,iota(filter(filter(x.s, implies[yellow,and[blue,yellow]]), rectangle)))), and[circle,blue])))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:or[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle;4:size2;4:triangle;4:not[%s];4:not[%s];4:triangle;4:iff[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:blue;4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;4:triangle;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:yellow;4:and[%s,%s];4:blue;4:yellow;4:rectangle;4:and[%s,%s];4:circle;4:blue
'λx.apply(implies[not[apply(same_color,iota(x.s))],or[green,yellow]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:green;4:yellow;1:%s.o;2:x
'λx.apply(not[apply(size-lt,iota(filter(x.s, blue)))],iota(filter(filter(filter(x.s, or[size3,not[and[circle,triangle]]]), blue), and[circle,size2])))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:not[%s];4:and[%s,%s];4:circle;4:triangle;4:blue;4:and[%s,%s];4:circle;4:size2
'λx.apply(and[circle,triangle],iota(filter(filter(filter(filter(filter(filter(filter(x.s, size3), apply(same_size,x.o)), size1), green), size2), circle), triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1;4:green;4:size2;4:circle;4:triangle
'λx.apply(size1,iota(filter(x.s, and[blue,not[size1]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:not[%s];4:size1
'λx.exists(yellow, filter(x.s, and[and[yellow,apply(same_shape,iota(x.s))],size2]))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size2
'λx.contains(iota(filter(filter(filter(x.s, or[green,triangle]), size3), green)), filter(x.s, blue))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:triangle;4:size3;4:green;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(iff[size2,apply(size-leq,iota(x.s))],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:size2;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[yellow,and[yellow,rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:and[%s,%s];4:yellow;4:rectangle;1:%s.o;2:x
'λx.exists(size2, filter(filter(filter(filter(x.s, circle), circle), nand[and[size3,size1],apply(same_color,iota(x.s))]), size3))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:circle;4:nand[%s,%s];4:and[%s,%s];4:size3;4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size3
'λx.apply(nor[green,yellow],iota(filter(filter(filter(x.s, circle), yellow), circle)))'	0:apply(%s,%s);4:nor[%s,%s];4:green;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow;4:circle
'λx.apply(or[and[circle,size3],or[not[rectangle],triangle]],iota(filter(x.s, apply(same_shape,x.o))))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:circle;4:size3;4:or[%s,%s];4:not[%s];4:rectangle;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.empty(filter(filter(x.s, size3), and[green,blue]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:green;4:blue
'λx.apply(or[triangle,nand[nand[blue,apply(same_shape,x.o)],circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:nand[%s,%s];4:nand[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;1:%s.o;2:x
'λx.apply(or[size1,rectangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[rectangle,triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_color,iota(x.s)),iota(filter(x.s, apply(same_size,iota(filter(filter(x.s, nor[and[blue,and[and[green,not[nor[size3,blue]]],yellow]],implies[size1,rectangle]]), nand[size1,and[and[or[size3,apply(same_size,iota(x.s))],green],and[size1,not[nor[size3,and[green,yellow]]]]]]))))))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:green;4:not[%s];4:nor[%s,%s];4:size3;4:blue;4:yellow;4:implies[%s,%s];4:size1;4:rectangle;4:nand[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:green;4:and[%s,%s];4:size1;4:not[%s];4:nor[%s,%s];4:size3;4:and[%s,%s];4:green;4:yellow
'λx.apply(or[and[triangle,and[rectangle,circle]],and[yellow,circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:rectangle;4:circle;4:and[%s,%s];4:yellow;4:circle;1:%s.o;2:x
'λx.apply(nor[not[green],implies[green,circle]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:not[%s];4:green;4:implies[%s,%s];4:green;4:circle;1:%s.o;2:x
'λx.exists(blue, filter(x.s, and[triangle,or[circle,rectangle]]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:or[%s,%s];4:circle;4:rectangle
'λx.forall(triangle,filter(filter(filter(x.s, and[not[or[circle,or[and[circle,yellow],or[green,size3]]]],apply(same_color,x.o)]), apply(size-geq,x.o)), green))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:or[%s,%s];4:circle;4:or[%s,%s];4:and[%s,%s];4:circle;4:yellow;4:or[%s,%s];4:green;4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:green
'λx.apply(not[not[implies[triangle,or[blue,or[size3,size3]]]]],iota(filter(x.s, and[or[circle,size1],and[rectangle,size1]])))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:implies[%s,%s];4:triangle;4:or[%s,%s];4:blue;4:or[%s,%s];4:size3;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:circle;4:size1;4:and[%s,%s];4:rectangle;4:size1
'λx.forall(not[size2],filter(filter(filter(x.s, circle), nand[size3,apply(same_shape,iota(x.s))]), green))'	0:forall(%s,%s);4:not[%s];4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:nand[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:green
'λx.exists(not[and[blue,circle]], x.s)'	0:exists(%s, %s);4:not[%s];4:and[%s,%s];4:blue;4:circle;3:%s.s;2:x
'λx.forall(implies[not[or[rectangle,nor[green,and[and[size1,size2],green]]]],and[triangle,and[size2,yellow]]],x.s)'	0:forall(%s,%s);4:implies[%s,%s];4:not[%s];4:or[%s,%s];4:rectangle;4:nor[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:size1;4:size2;4:green;4:and[%s,%s];4:triangle;4:and[%s,%s];4:size2;4:yellow;3:%s.s;2:x
'λx.forall(and[and[rectangle,blue],size1],filter(filter(filter(x.s, nand[apply(size-gt,x.o),apply(size-gt,x.o)]), and[size1,green]), blue))'	0:forall(%s,%s);4:and[%s,%s];4:and[%s,%s];4:rectangle;4:blue;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:and[%s,%s];4:size1;4:green;4:blue
'λx.apply(or[size1,and[size3,and[size2,green]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:and[%s,%s];4:size3;4:and[%s,%s];4:size2;4:green;1:%s.o;2:x
'λx.apply(apply(size-leq,iota(filter(x.s, rectangle))),iota(filter(x.s, size2)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.empty(filter(filter(x.s, blue), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2
'λx.empty(filter(filter(x.s, blue), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3
'λx.apply(size1,iota(filter(filter(x.s, green), size2)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size2
'λx.apply(implies[size2,yellow],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:implies[%s,%s];4:size2;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[size2,size2],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(apply(same_color,x.o),iota(filter(x.s, apply(same_size,x.o))))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(and[size3,or[size3,not[green]]],iota(filter(filter(x.s, yellow), yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:or[%s,%s];4:size3;4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:yellow
'λx.apply(and[apply(same_color,iota(filter(x.s, size2))),blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue;1:%s.o;2:x
'λx.apply(nor[yellow,and[size2,or[apply(same_size,x.o),triangle]]],iota(filter(filter(x.s, size2), circle)))'	0:apply(%s,%s);4:nor[%s,%s];4:yellow;4:and[%s,%s];4:size2;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle
'λx.apply(iff[and[and[circle,size1],size3],circle],iota(filter(filter(x.s, and[triangle,rectangle]), apply(same_shape,iota(x.s)))))'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:size1;4:size3;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(and[blue,apply(same_color,iota(x.s))],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(or[iff[size2,nor[not[implies[size2,and[and[triangle,implies[iff[yellow,nor[rectangle,green]],size3]],rectangle]]],size1]],yellow],iota(filter(filter(filter(filter(x.s, not[apply(same_shape,x.o)]), rectangle), or[not[and[triangle,circle]],not[yellow]]), nor[yellow,rectangle])))'	0:apply(%s,%s);4:or[%s,%s];4:iff[%s,%s];4:size2;4:nor[%s,%s];4:not[%s];4:implies[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:triangle;4:implies[%s,%s];4:iff[%s,%s];4:yellow;4:nor[%s,%s];4:rectangle;4:green;4:size3;4:rectangle;4:size1;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:triangle;4:circle;4:not[%s];4:yellow;4:nor[%s,%s];4:yellow;4:rectangle
'λx.exists(apply(same_shape,iota(filter(x.s, circle))), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;3:%s.s;2:x
'λx.apply(and[triangle,size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[triangle,size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[size2,not[apply(same_size,iota(filter(x.s, apply(same_size,iota(x.s)))))]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:size2;4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.contains(x.o, filter(filter(filter(filter(filter(x.s, triangle), not[circle]), not[blue]), and[apply(size-leq,iota(x.s)),size3]), yellow))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:not[%s];4:circle;4:not[%s];4:blue;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:size3;4:yellow
'λx.forall(nor[green,and[not[size1],rectangle]],x.s)'	0:forall(%s,%s);4:nor[%s,%s];4:green;4:and[%s,%s];4:not[%s];4:size1;4:rectangle;3:%s.s;2:x
'λx.apply(or[not[blue],apply(same_size,iota(x.s))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, blue), or[size1,green]), not[size1]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:size1;4:green;4:not[%s];4:size1
'λx.apply(circle,iota(filter(filter(x.s, blue), rectangle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle
'λx.exists(yellow, filter(x.s, apply(size-gt,iota(x.s))))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x
'λx.apply(and[apply(same_color,iota(x.s)),not[size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:not[%s];4:size1;1:%s.o;2:x
'λx.apply(size1,iota(filter(x.s, and[apply(same_size,iota(x.s)),and[rectangle,apply(same_color,x.o)]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(filter(filter(filter(x.s, green), size2), size3), triangle), and[size3,and[yellow,blue]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size2;4:size3;4:triangle;4:and[%s,%s];4:size3;4:and[%s,%s];4:yellow;4:blue
'λx.empty(filter(x.s, rectangle))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(or[nor[not[size2],circle],and[size2,not[apply(same_size,x.o)]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:nor[%s,%s];4:not[%s];4:size2;4:circle;4:and[%s,%s];4:size2;4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[not[apply(same_size,x.o)],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;1:%s.o;2:x
'λx.apply(or[and[triangle,implies[and[size3,size3],or[rectangle,size3]]],circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:triangle;4:implies[%s,%s];4:and[%s,%s];4:size3;4:size3;4:or[%s,%s];4:rectangle;4:size3;4:circle;1:%s.o;2:x
'λx.apply(and[size2,apply(same_color,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(and[size3,apply(same_color,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.contains(iota(filter(x.s, blue)), filter(x.s, and[yellow,size1]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size1
'λx.contains(x.o, filter(filter(x.s, yellow), rectangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle
'λx.apply(and[and[size1,size2],size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:size2;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size1,size1],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size1,size3],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(or[yellow,apply(same_size,x.o)],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.forall(and[green,rectangle],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:green;4:rectangle;3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(x.s, triangle), size1)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size1
'λx.forall(triangle,filter(filter(filter(filter(filter(filter(x.s, blue), size3), size2), nor[size1,not[apply(same_color,x.o)]]), triangle), size2))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3;4:size2;4:nor[%s,%s];4:size1;4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;4:size2
'λx.apply(or[size2,size2],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:size2;1:iota(%s);3:%s.s;2:x
'λx.forall(and[and[size1,green],or[and[apply(same_color,iota(filter(x.s, blue))),nand[rectangle,apply(same_shape,x.o)]],or[blue,circle]]],filter(x.s, green))'	0:forall(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:green;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:nand[%s,%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:blue;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.contains(x.o, filter(x.s, implies[size1,not[iff[triangle,size3]]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size1;4:not[%s];4:iff[%s,%s];4:triangle;4:size3
'λx.apply(apply(same_shape,iota(filter(filter(x.s, rectangle), size2))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(filter(filter(x.s, and[green,iff[green,not[size3]]]), circle), yellow), blue)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:iff[%s,%s];4:green;4:not[%s];4:size3;4:circle;4:yellow;4:blue
'λx.apply(or[green,yellow],iota(filter(x.s, green)))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.empty(filter(filter(x.s, circle), and[size2,or[size1,blue]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:size2;4:or[%s,%s];4:size1;4:blue
'λx.apply(or[nand[size3,size1],apply(same_shape,x.o)],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:size3;4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[and[circle,nand[or[triangle,iff[yellow,not[size1]]],and[or[size1,apply(same_shape,iota(x.s))],size3]]],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:nand[%s,%s];4:or[%s,%s];4:triangle;4:iff[%s,%s];4:yellow;4:not[%s];4:size1;4:and[%s,%s];4:or[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size3;4:size1;1:%s.o;2:x
'λx.apply(or[implies[or[green,apply(same_shape,x.o)],blue],and[blue,blue]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue;4:and[%s,%s];4:blue;4:blue;1:%s.o;2:x
'λx.apply(not[circle],iota(filter(x.s, apply(same_color,x.o))))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(nor[rectangle,or[and[size2,not[yellow]],or[yellow,rectangle]]],iota(filter(filter(x.s, yellow), not[and[size1,size2]])))'	0:apply(%s,%s);4:nor[%s,%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:size2;4:not[%s];4:yellow;4:or[%s,%s];4:yellow;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:and[%s,%s];4:size1;4:size2
'λx.contains(x.o, filter(x.s, and[size1,and[blue,green]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:and[%s,%s];4:blue;4:green
'λx.exists(not[yellow], filter(x.s, rectangle))'	0:exists(%s, %s);4:not[%s];4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(size1,iota(filter(filter(x.s, blue), iff[blue,or[apply(same_size,iota(x.s)),circle]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:iff[%s,%s];4:blue;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:circle
'λx.apply(and[iff[apply(same_size,x.o),size1],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1;4:size3;1:%s.o;2:x
'λx.apply(or[yellow,or[triangle,and[size1,and[size3,apply(same_shape,iota(x.s))]]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:or[%s,%s];4:triangle;4:and[%s,%s];4:size1;4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(filter(filter(filter(filter(filter(x.s, triangle), iff[and[size3,triangle],apply(size-leq,iota(filter(filter(filter(filter(filter(x.s, size3), triangle), or[blue,size2]), green), size1)))]), size3), apply(same_shape,x.o)), apply(same_shape,iota(x.s))), yellow), green)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:iff[%s,%s];4:and[%s,%s];4:size3;4:triangle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle;4:or[%s,%s];4:blue;4:size2;4:green;4:size1;4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:yellow;4:green
'λx.apply(size2,iota(filter(filter(filter(x.s, green), not[green]), size3)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:green;4:size3
'λx.apply(iff[nand[green,circle],size2],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:nand[%s,%s];4:green;4:circle;4:size2;1:%s.o;2:x
'λx.forall(or[green,not[blue]],filter(x.s, green))'	0:forall(%s,%s);4:or[%s,%s];4:green;4:not[%s];4:blue;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[size3,apply(same_size,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.forall(green,filter(filter(x.s, triangle), rectangle))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle
'λx.apply(and[and[nand[circle,size1],yellow],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:circle;4:size1;4:yellow;4:green;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(filter(x.s, size1), size2), or[apply(same_color,x.o),triangle]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle
'λx.exists(or[yellow,circle], filter(x.s, blue))'	0:exists(%s, %s);4:or[%s,%s];4:yellow;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.empty(filter(filter(x.s, yellow), or[size1,apply(same_shape,x.o)]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(nor[blue,nand[rectangle,circle]],iota(filter(filter(filter(x.s, size1), yellow), yellow)))'	0:apply(%s,%s);4:nor[%s,%s];4:blue;4:nand[%s,%s];4:rectangle;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow;4:yellow
'λx.apply(or[or[nor[not[circle],size2],green],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:not[%s];4:circle;4:size2;4:green;4:blue;1:%s.o;2:x
'λx.forall(iff[and[or[not[iff[blue,blue]],or[yellow,blue]],size2],apply(same_shape,iota(x.s))],x.s)'	0:forall(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:or[%s,%s];4:not[%s];4:iff[%s,%s];4:blue;4:blue;4:or[%s,%s];4:yellow;4:blue;4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(or[apply(same_size,x.o),rectangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.exists(not[size1], x.s)'	0:exists(%s, %s);4:not[%s];4:size1;3:%s.s;2:x
'λx.exists(not[size3], x.s)'	0:exists(%s, %s);4:not[%s];4:size3;3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(x.s, not[or[or[green,size2],green]]), size3)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:or[%s,%s];4:green;4:size2;4:green;4:size3
'λx.apply(rectangle,iota(filter(x.s, nand[apply(same_color,iota(x.s)),green])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:green
'λx.apply(blue,iota(filter(filter(filter(x.s, size3), and[or[green,nand[size3,not[green]]],and[yellow,or[or[apply(same_shape,iota(x.s)),green],apply(same_shape,x.o)]]]), triangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:or[%s,%s];4:green;4:nand[%s,%s];4:size3;4:not[%s];4:green;4:and[%s,%s];4:yellow;4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle
'λx.forall(rectangle,filter(filter(x.s, size3), size1))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size1
'λx.apply(and[and[or[size1,green],nand[and[rectangle,size2],size3]],apply(same_shape,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size1;4:green;4:nand[%s,%s];4:and[%s,%s];4:rectangle;4:size2;4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[not[rectangle],apply(size-gt,iota(filter(filter(x.s, and[triangle,and[implies[nor[triangle,implies[size1,or[or[triangle,size2],and[size1,circle]]]],size1],nor[implies[circle,and[blue,circle]],size3]]]), yellow)))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:rectangle;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:and[%s,%s];4:implies[%s,%s];4:nor[%s,%s];4:triangle;4:implies[%s,%s];4:size1;4:or[%s,%s];4:or[%s,%s];4:triangle;4:size2;4:and[%s,%s];4:size1;4:circle;4:size1;4:nor[%s,%s];4:implies[%s,%s];4:circle;4:and[%s,%s];4:blue;4:circle;4:size3;4:yellow;1:%s.o;2:x
'λx.contains(iota(x.s), x.s)'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(filter(filter(filter(x.s, or[circle,size1]), rectangle), apply(same_size,x.o)), triangle), and[rectangle,blue])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:size1;4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle;4:and[%s,%s];4:rectangle;4:blue
'λx.apply(or[and[not[size3],not[size2]],and[size3,apply(same_size,iota(filter(filter(x.s, green), blue)))]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:not[%s];4:size3;4:not[%s];4:size2;4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue;1:%s.o;2:x
'λx.apply(and[not[or[or[not[not[circle]],yellow],rectangle]],rectangle],iota(filter(filter(x.s, rectangle), green)))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:or[%s,%s];4:or[%s,%s];4:not[%s];4:not[%s];4:circle;4:yellow;4:rectangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green
'λx.contains(iota(filter(x.s, and[or[size1,blue],size3])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:size1;4:blue;4:size3;3:%s.s;2:x
'λx.apply(not[nor[circle,implies[size3,or[size2,green]]]],iota(filter(x.s, not[apply(size-leq,x.o)])))'	0:apply(%s,%s);4:not[%s];4:nor[%s,%s];4:circle;4:implies[%s,%s];4:size3;4:or[%s,%s];4:size2;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x
'λx.apply(apply(size-leq,x.o),iota(filter(filter(x.s, apply(same_size,x.o)), circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle
'λx.apply(apply(same_size,iota(x.s)),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(and[size1,and[yellow,apply(size-lt,x.o)]],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:and[%s,%s];4:yellow;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(and[size2,apply(same_size,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[circle,green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:green;1:iota(%s);3:%s.s;2:x
'λx.forall(apply(same_size,iota(filter(filter(filter(filter(x.s, and[rectangle,size1]), and[apply(size-leq,x.o),and[size3,and[not[or[nand[circle,iff[apply(same_size,iota(x.s)),apply(size-leq,iota(x.s))]],apply(size-geq,x.o)]],nor[rectangle,not[and[blue,size3]]]]]]), size2), size2))),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:size1;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:and[%s,%s];4:size3;4:and[%s,%s];4:not[%s];4:or[%s,%s];4:nand[%s,%s];4:circle;4:iff[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:nor[%s,%s];4:rectangle;4:not[%s];4:and[%s,%s];4:blue;4:size3;4:size2;4:size2;3:%s.s;2:x
'λx.apply(not[apply(size-lt,iota(x.s))],iota(filter(x.s, and[size3,size1])))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:size1
'λx.apply(and[nand[not[rectangle],green],yellow],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:not[%s];4:rectangle;4:green;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(or[or[circle,or[rectangle,and[size2,circle]]],triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:circle;4:or[%s,%s];4:rectangle;4:and[%s,%s];4:size2;4:circle;4:triangle;1:%s.o;2:x
'λx.apply(nor[green,or[and[triangle,iff[triangle,not[blue]]],or[triangle,yellow]]],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:green;4:or[%s,%s];4:and[%s,%s];4:triangle;4:iff[%s,%s];4:triangle;4:not[%s];4:blue;4:or[%s,%s];4:triangle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.forall(or[circle,not[green]],filter(filter(filter(filter(x.s, not[or[rectangle,rectangle]]), green), not[and[blue,circle]]), size1))'	0:forall(%s,%s);4:or[%s,%s];4:circle;4:not[%s];4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:rectangle;4:rectangle;4:green;4:not[%s];4:and[%s,%s];4:blue;4:circle;4:size1
'λx.apply(and[green,blue],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(and[yellow,blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:blue;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(x.s, not[blue]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.apply(or[size2,and[or[blue,size2],circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:and[%s,%s];4:or[%s,%s];4:blue;4:size2;4:circle;1:%s.o;2:x
'λx.apply(and[circle,apply(same_size,iota(x.s))],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[rectangle,green],iota(filter(filter(x.s, blue), green)))'	0:apply(%s,%s);4:iff[%s,%s];4:rectangle;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green
'λx.exists(apply(same_color,x.o), filter(filter(x.s, not[apply(same_color,x.o)]), size3))'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3
'λx.contains(iota(filter(x.s, and[green,yellow])), filter(x.s, nor[size2,yellow]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size2;4:yellow
'λx.apply(and[and[and[or[circle,and[apply(same_color,iota(x.s)),size1]],and[yellow,circle]],yellow],rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:yellow;4:circle;4:yellow;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.forall(implies[rectangle,blue],filter(x.s, blue))'	0:forall(%s,%s);4:implies[%s,%s];4:rectangle;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.exists(blue, filter(filter(filter(x.s, not[size1]), rectangle), circle))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:rectangle;4:circle
'λx.apply(nand[triangle,not[size2]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:not[%s];4:size2;1:%s.o;2:x
'λx.apply(and[size3,rectangle],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.contains(iota(filter(x.s, or[not[iff[or[blue,iff[yellow,circle]],rectangle]],size1])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:iff[%s,%s];4:or[%s,%s];4:blue;4:iff[%s,%s];4:yellow;4:circle;4:rectangle;4:size1;3:%s.s;2:x
'λx.apply(and[and[apply(same_shape,x.o),green],yellow],iota(filter(filter(x.s, nand[yellow,not[size3]]), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:yellow;4:not[%s];4:size3;4:blue
'λx.exists(not[not[apply(same_color,x.o)]], filter(x.s, blue))'	0:exists(%s, %s);4:not[%s];4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(nor[and[apply(same_shape,x.o),size3],apply(same_shape,x.o)],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.forall(not[size3],filter(filter(filter(filter(x.s, size1), size3), implies[blue,and[rectangle,and[triangle,blue]]]), green))'	0:forall(%s,%s);4:not[%s];4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size3;4:implies[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:triangle;4:blue;4:green
'λx.exists(and[size3,not[and[and[green,not[not[and[size3,yellow]]]],green]]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:size3;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:green;4:not[%s];4:not[%s];4:and[%s,%s];4:size3;4:yellow;4:green;3:%s.s;2:x
'λx.exists(nand[or[nand[nor[iff[blue,and[not[rectangle],rectangle]],size2],size1],blue],not[triangle]], filter(filter(x.s, triangle), circle))'	0:exists(%s, %s);4:nand[%s,%s];4:or[%s,%s];4:nand[%s,%s];4:nor[%s,%s];4:iff[%s,%s];4:blue;4:and[%s,%s];4:not[%s];4:rectangle;4:rectangle;4:size2;4:size1;4:blue;4:not[%s];4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle
'λx.forall(not[triangle],filter(x.s, circle))'	0:forall(%s,%s);4:not[%s];4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.exists(not[and[not[triangle],yellow]], filter(x.s, and[not[yellow],yellow]))'	0:exists(%s, %s);4:not[%s];4:and[%s,%s];4:not[%s];4:triangle;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:yellow;4:yellow
'λx.contains(iota(filter(x.s, and[size2,green])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:green;3:%s.s;2:x
'λx.apply(size2,iota(filter(x.s, iff[apply(same_size,x.o),rectangle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:rectangle
'λx.apply(and[and[yellow,circle],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:circle;4:circle;1:%s.o;2:x
'λx.apply(yellow,iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(not[nand[size3,not[blue]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:nand[%s,%s];4:size3;4:not[%s];4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(filter(filter(x.s, circle), size1), and[size3,rectangle]), circle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1;4:and[%s,%s];4:size3;4:rectangle;4:circle
'λx.apply(and[apply(size-leq,x.o),triangle],iota(filter(x.s, not[yellow])))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow
'λx.apply(implies[yellow,size3],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:yellow;4:size3;1:%s.o;2:x
'λx.apply(or[circle,and[green,size2]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:and[%s,%s];4:green;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[or[and[size2,circle],circle],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size2;4:circle;4:circle;4:yellow;1:%s.o;2:x
'λx.forall(and[size2,and[size3,size1]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:size3;4:size1;3:%s.s;2:x
'λx.exists(yellow, filter(filter(x.s, triangle), and[size3,and[size2,green]]))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:size3;4:and[%s,%s];4:size2;4:green
'λx.apply(triangle,iota(filter(filter(filter(filter(x.s, rectangle), size2), size1), size3)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2;4:size1;4:size3
'λx.apply(rectangle,iota(filter(filter(filter(x.s, size3), rectangle), blue)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle;4:blue
'λx.apply(or[implies[green,size3],and[size3,or[size2,triangle]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:implies[%s,%s];4:green;4:size3;4:and[%s,%s];4:size3;4:or[%s,%s];4:size2;4:triangle;1:%s.o;2:x
'λx.apply(and[blue,or[green,and[blue,and[rectangle,size2]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:or[%s,%s];4:green;4:and[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[rectangle,iff[circle,size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:iff[%s,%s];4:circle;4:size1;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, and[yellow,nor[blue,triangle]]), blue)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:nor[%s,%s];4:blue;4:triangle;4:blue
'λx.forall(yellow,filter(filter(filter(filter(filter(x.s, rectangle), triangle), green), or[yellow,size1]), not[size2]))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle;4:green;4:or[%s,%s];4:yellow;4:size1;4:not[%s];4:size2
'λx.apply(or[rectangle,apply(same_color,iota(filter(filter(x.s, and[blue,circle]), circle)))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:circle;4:circle;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, not[rectangle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle
'λx.apply(and[green,iff[and[and[triangle,size3],rectangle],size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:iff[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:size3;4:rectangle;4:size1;1:%s.o;2:x
'λx.apply(nand[size1,green],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size1;4:green;1:%s.o;2:x
'λx.apply(apply(same_color,x.o),iota(filter(filter(x.s, triangle), or[blue,yellow])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:or[%s,%s];4:blue;4:yellow
'λx.apply(nor[circle,nor[yellow,nor[and[or[not[rectangle],apply(size-gt,x.o)],size2],nand[green,size2]]]],iota(filter(x.s, green)))'	0:apply(%s,%s);4:nor[%s,%s];4:circle;4:nor[%s,%s];4:yellow;4:nor[%s,%s];4:and[%s,%s];4:or[%s,%s];4:not[%s];4:rectangle;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:size2;4:nand[%s,%s];4:green;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(circle,iota(filter(filter(x.s, blue), apply(same_color,x.o))))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.forall(and[or[size2,size1],circle],filter(x.s, circle))'	0:forall(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size2;4:size1;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[blue,nand[blue,iff[rectangle,blue]]],iota(filter(x.s, green)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:nand[%s,%s];4:blue;4:iff[%s,%s];4:rectangle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[green,nand[yellow,green]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:nand[%s,%s];4:yellow;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(filter(x.s, circle), size1), blue)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1;4:blue
'λx.apply(implies[blue,and[triangle,triangle]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:blue;4:and[%s,%s];4:triangle;4:triangle;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(x.s, yellow), yellow), rectangle), or[size1,triangle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:yellow;4:rectangle;4:or[%s,%s];4:size1;4:triangle
'λx.apply(or[size3,green],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(or[apply(same_size,x.o),triangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[implies[and[circle,blue],implies[size1,size1]],triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:circle;4:blue;4:implies[%s,%s];4:size1;4:size1;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[triangle,and[size2,green]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:size2;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[and[size3,size1],circle],iota(filter(x.s, and[size2,size3])))'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:size3;4:size1;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:size3
'λx.apply(not[or[apply(same_size,iota(filter(filter(filter(x.s, circle), yellow), size1))),apply(same_size,iota(filter(x.s, green)))]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow;4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;1:%s.o;2:x
'λx.apply(apply(size-leq,iota(filter(filter(filter(x.s, and[blue,yellow]), size1), not[size1]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:yellow;4:size1;4:not[%s];4:size1;1:%s.o;2:x
'λx.apply(nor[size3,size3],iota(filter(filter(filter(filter(filter(x.s, size3), rectangle), size2), yellow), yellow)))'	0:apply(%s,%s);4:nor[%s,%s];4:size3;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle;4:size2;4:yellow;4:yellow
'λx.apply(and[iff[and[yellow,and[not[triangle],yellow]],circle],and[size1,or[and[size2,or[or[implies[rectangle,or[and[size1,and[yellow,yellow]],apply(same_color,iota(filter(x.s, iff[circle,or[size1,size1]])))]],blue],nand[yellow,size2]]],nand[triangle,triangle]]]],iota(filter(filter(x.s, rectangle), apply(same_shape,iota(filter(filter(x.s, and[green,not[blue]]), circle))))))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:not[%s];4:triangle;4:yellow;4:circle;4:and[%s,%s];4:size1;4:or[%s,%s];4:and[%s,%s];4:size2;4:or[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:yellow;4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:circle;4:or[%s,%s];4:size1;4:size1;4:blue;4:nand[%s,%s];4:yellow;4:size2;4:nand[%s,%s];4:triangle;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:not[%s];4:blue;4:circle
'λx.contains(iota(x.s), filter(filter(filter(filter(x.s, size1), implies[yellow,size3]), and[triangle,size2]), yellow))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:implies[%s,%s];4:yellow;4:size3;4:and[%s,%s];4:triangle;4:size2;4:yellow
'λx.apply(not[yellow],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:%s.s;2:x
'λx.exists(and[iff[blue,yellow],rectangle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:iff[%s,%s];4:blue;4:yellow;4:rectangle;3:%s.s;2:x
'λx.apply(and[and[blue,apply(size-leq,x.o)],size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(x.s, and[and[size1,rectangle],or[not[implies[size3,not[and[yellow,apply(same_shape,iota(filter(x.s, size1)))]]]],size1]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size1;4:rectangle;4:or[%s,%s];4:not[%s];4:implies[%s,%s];4:size3;4:not[%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1
'λx.apply(and[size1,rectangle],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(blue,iota(filter(x.s, or[size1,rectangle])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:rectangle
'λx.forall(size1,filter(filter(filter(filter(x.s, size3), size3), not[size3]), nor[green,yellow]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3;4:not[%s];4:size3;4:nor[%s,%s];4:green;4:yellow
'λx.apply(and[yellow,not[and[size1,circle]]],iota(filter(filter(x.s, and[yellow,green]), or[implies[circle,apply(same_color,iota(filter(x.s, yellow)))],size2])))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:not[%s];4:and[%s,%s];4:size1;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:green;4:or[%s,%s];4:implies[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2
'λx.apply(rectangle,iota(filter(filter(filter(filter(filter(filter(filter(x.s, and[apply(size-gt,iota(x.s)),or[and[yellow,rectangle],and[yellow,circle]]]), and[size1,green]), or[blue,yellow]), yellow), triangle), and[and[size3,green],rectangle]), and[not[apply(same_shape,iota(filter(x.s, not[circle])))],yellow])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:yellow;4:rectangle;4:and[%s,%s];4:yellow;4:circle;4:and[%s,%s];4:size1;4:green;4:or[%s,%s];4:blue;4:yellow;4:yellow;4:triangle;4:and[%s,%s];4:and[%s,%s];4:size3;4:green;4:rectangle;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:yellow
'λx.forall(iff[apply(same_shape,iota(filter(filter(x.s, apply(same_shape,x.o)), and[size2,size1]))),green],filter(x.s, not[yellow]))'	0:forall(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:size2;4:size1;4:green;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow
'λx.apply(or[yellow,blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:blue;1:%s.o;2:x
'λx.forall(yellow,filter(filter(filter(x.s, blue), blue), triangle))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue;4:triangle
'λx.apply(not[blue],iota(filter(x.s, and[blue,yellow])))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:yellow
'λx.empty(filter(filter(filter(x.s, triangle), size3), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3;4:circle
'λx.contains(iota(filter(x.s, yellow)), filter(filter(filter(x.s, and[and[yellow,and[green,and[yellow,iff[green,size1]]]],rectangle]), triangle), yellow))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:green;4:and[%s,%s];4:yellow;4:iff[%s,%s];4:green;4:size1;4:rectangle;4:triangle;4:yellow
'λx.apply(or[size3,size2],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size3,size3],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size3,size1],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size3,size1],iota(filter(filter(x.s, apply(size-lt,x.o)), size3)))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:size3
'λx.apply(not[not[nor[or[yellow,circle],not[rectangle]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:nor[%s,%s];4:or[%s,%s];4:yellow;4:circle;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(x.s, size3), not[and[or[blue,yellow],circle]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:and[%s,%s];4:or[%s,%s];4:blue;4:yellow;4:circle
'λx.apply(nand[not[blue],triangle],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:not[%s];4:blue;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(x.s, not[apply(same_size,iota(filter(x.s, apply(same_shape,x.o))))]), yellow)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow
'λx.contains(iota(filter(filter(filter(filter(x.s, yellow), triangle), circle), blue)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle;4:circle;4:blue;3:%s.s;2:x
'λx.contains(iota(filter(filter(x.s, rectangle), size3)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3;3:%s.s;2:x
'λx.empty(filter(filter(x.s, rectangle), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle
'λx.apply(and[and[size3,yellow],size3],iota(filter(filter(x.s, and[or[size1,size3],blue]), yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size3;4:yellow;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:size1;4:size3;4:blue;4:yellow
'λx.forall(triangle,filter(filter(x.s, size3), circle))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle
'λx.contains(iota(x.s), filter(filter(x.s, apply(same_shape,x.o)), circle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle
'λx.forall(nor[yellow,or[and[yellow,rectangle],not[rectangle]]],x.s)'	0:forall(%s,%s);4:nor[%s,%s];4:yellow;4:or[%s,%s];4:and[%s,%s];4:yellow;4:rectangle;4:not[%s];4:rectangle;3:%s.s;2:x
'λx.exists(rectangle, filter(x.s, and[triangle,green]))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:green
'λx.apply(yellow,iota(filter(filter(x.s, nor[blue,and[size3,triangle]]), blue)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:blue;4:and[%s,%s];4:size3;4:triangle;4:blue
'λx.apply(size1,iota(filter(filter(filter(filter(x.s, green), rectangle), apply(same_color,x.o)), apply(same_shape,x.o))))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, not[size1]), and[circle,blue])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:and[%s,%s];4:circle;4:blue
'λx.forall(apply(same_color,iota(filter(filter(x.s, rectangle), and[yellow,triangle]))),filter(x.s, circle))'	0:forall(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:yellow;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[and[not[size3],size3],and[size2,circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size3;4:size3;4:and[%s,%s];4:size2;4:circle;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, triangle), blue)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue
'λx.contains(x.o, filter(x.s, and[size2,nor[blue,circle]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:nor[%s,%s];4:blue;4:circle
'λx.empty(filter(filter(filter(x.s, yellow), size3), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size3;4:triangle
'λx.empty(filter(filter(filter(x.s, yellow), size1), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;4:triangle
'λx.apply(size2,iota(filter(filter(x.s, size2), or[circle,size3])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:circle;4:size3
'λx.exists(iff[circle,green], filter(filter(x.s, size2), implies[nor[size2,not[triangle]],yellow]))'	0:exists(%s, %s);4:iff[%s,%s];4:circle;4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:implies[%s,%s];4:nor[%s,%s];4:size2;4:not[%s];4:triangle;4:yellow
'λx.apply(apply(same_size,iota(filter(filter(x.s, triangle), size3))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3;1:%s.o;2:x
'λx.apply(and[yellow,or[rectangle,size1]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:or[%s,%s];4:rectangle;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(or[triangle,green],iota(filter(x.s, not[apply(same_size,x.o)])))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(or[apply(same_color,iota(filter(x.s, iff[circle,triangle]))),yellow],iota(filter(x.s, not[and[and[size2,size3],blue]])))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:circle;4:triangle;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:size3;4:blue
'λx.apply(blue,iota(filter(filter(x.s, blue), not[green])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:green
'λx.empty(filter(x.s, and[or[triangle,green],not[rectangle]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:triangle;4:green;4:not[%s];4:rectangle
'λx.empty(filter(filter(filter(x.s, circle), triangle), or[blue,green]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle;4:or[%s,%s];4:blue;4:green
'λx.apply(not[or[circle,circle]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:circle;4:circle;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, blue), green)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green
'λx.exists(and[apply(same_size,iota(x.s)),size3], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size3;3:%s.s;2:x
'λx.apply(nor[or[circle,rectangle],and[green,green]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:or[%s,%s];4:circle;4:rectangle;4:and[%s,%s];4:green;4:green;1:%s.o;2:x
'λx.apply(and[and[blue,size2],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:size2;4:yellow;1:%s.o;2:x
'λx.apply(nor[yellow,and[circle,and[and[size1,green],circle]]],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:yellow;4:and[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:size1;4:green;4:circle;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(x.s, yellow))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.empty(filter(x.s, apply(same_color,iota(filter(x.s, rectangle)))))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.contains(x.o, filter(filter(filter(filter(x.s, and[yellow,triangle]), and[and[and[triangle,nand[blue,triangle]],apply(same_size,x.o)],circle]), size1), size3))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:triangle;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:nand[%s,%s];4:blue;4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;4:size1;4:size3
'λx.apply(nand[or[green,size1],size2],iota(filter(x.s, or[rectangle,size3])))'	0:apply(%s,%s);4:nand[%s,%s];4:or[%s,%s];4:green;4:size1;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:size3
'λx.apply(and[size3,nand[size1,size2]],iota(filter(filter(filter(filter(filter(x.s, size2), rectangle), yellow), yellow), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:nand[%s,%s];4:size1;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle;4:yellow;4:yellow;4:blue
'λx.apply(and[size1,and[triangle,circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:and[%s,%s];4:triangle;4:circle;1:%s.o;2:x
'λx.apply(and[triangle,triangle],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.empty(filter(filter(x.s, and[or[size1,and[size3,blue]],and[yellow,size2]]), or[size2,circle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:size1;4:and[%s,%s];4:size3;4:blue;4:and[%s,%s];4:yellow;4:size2;4:or[%s,%s];4:size2;4:circle
'λx.apply(size3,iota(filter(x.s, iff[rectangle,size2])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:rectangle;4:size2
'λx.apply(size1,iota(filter(filter(x.s, circle), blue)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue
'λx.apply(and[apply(same_size,iota(x.s)),apply(same_shape,iota(filter(x.s, size1)))],iota(filter(filter(filter(filter(x.s, blue), rectangle), triangle), and[apply(same_color,iota(filter(x.s, green))),size1])))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle;4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1
'λx.apply(size3,iota(filter(filter(filter(x.s, green), yellow), rectangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow;4:rectangle
'λx.apply(circle,iota(filter(x.s, and[size3,size2])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:size2
'λx.contains(iota(filter(x.s, or[and[apply(same_color,x.o),triangle],blue])), filter(filter(x.s, size1), yellow))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow
'λx.apply(green,iota(filter(filter(x.s, size3), apply(same_size,x.o))))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(x.s, rectangle), green)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green
'λx.apply(implies[size3,rectangle],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:size3;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[rectangle],x.o)'	0:apply(%s,%s);4:not[%s];4:rectangle;1:%s.o;2:x
'λx.apply(and[and[blue,circle],size2],iota(filter(x.s, not[green])))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:circle;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green
'λx.exists(yellow, filter(filter(x.s, and[size3,green]), or[yellow,and[circle,not[triangle]]]))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:green;4:or[%s,%s];4:yellow;4:and[%s,%s];4:circle;4:not[%s];4:triangle
'λx.exists(or[rectangle,apply(same_size,x.o)], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(nor[size3,triangle],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:size3;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[circle],x.o)'	0:apply(%s,%s);4:not[%s];4:circle;1:%s.o;2:x
'λx.apply(nor[not[blue],and[circle,yellow]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:not[%s];4:blue;4:and[%s,%s];4:circle;4:yellow;1:%s.o;2:x
'λx.apply(size1,iota(filter(x.s, or[yellow,or[yellow,apply(same_color,iota(filter(x.s, apply(same_color,iota(x.s)))))]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:or[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.forall(not[or[size1,apply(same_shape,x.o)]],x.s)'	0:forall(%s,%s);4:not[%s];4:or[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(green,iota(filter(x.s, apply(same_size,iota(x.s)))))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(and[yellow,circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[not[not[not[size1]]],nand[triangle,circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:not[%s];4:not[%s];4:size1;4:nand[%s,%s];4:triangle;4:circle;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(filter(x.s, yellow), size1), green)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;4:green
'λx.apply(size1,iota(filter(filter(filter(filter(filter(filter(x.s, circle), size3), size2), not[rectangle]), triangle), or[size3,blue])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3;4:size2;4:not[%s];4:rectangle;4:triangle;4:or[%s,%s];4:size3;4:blue
'λx.apply(or[or[not[circle],rectangle],nor[circle,size1]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:not[%s];4:circle;4:rectangle;4:nor[%s,%s];4:circle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(x.s, circle), blue)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue
'λx.forall(nor[apply(same_color,x.o),size3],x.s)'	0:forall(%s,%s);4:nor[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3;3:%s.s;2:x
'λx.apply(or[circle,and[and[yellow,or[circle,blue]],not[rectangle]]],iota(filter(filter(x.s, nand[apply(size-geq,x.o),rectangle]), blue)))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:yellow;4:or[%s,%s];4:circle;4:blue;4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:rectangle;4:blue
'λx.apply(or[rectangle,size1],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(or[rectangle,size2],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(or[rectangle,size3],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(not[nor[green,nand[blue,size2]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:nor[%s,%s];4:green;4:nand[%s,%s];4:blue;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(filter(x.s, yellow), size1), triangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;4:triangle
'λx.apply(size1,iota(filter(filter(filter(x.s, yellow), size1), triangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;4:triangle
'λx.apply(nand[circle,apply(same_shape,iota(x.s))],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, blue), and[size1,iff[size3,size1]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:size1;4:iff[%s,%s];4:size3;4:size1
'λx.apply(blue,iota(filter(x.s, nor[triangle,blue])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:triangle;4:blue
'λx.apply(apply(same_color,x.o),iota(filter(filter(filter(filter(filter(filter(x.s, size1), or[size1,size1]), implies[yellow,size1]), implies[yellow,size3]), apply(size-gt,iota(filter(filter(filter(filter(filter(filter(x.s, blue), triangle), not[not[iff[nand[apply(same_color,iota(x.s)),or[nand[or[size2,rectangle],triangle],size2]],size1]]]), triangle), iff[implies[circle,triangle],or[triangle,size1]]), size1)))), yellow)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:or[%s,%s];4:size1;4:size1;4:implies[%s,%s];4:yellow;4:size1;4:implies[%s,%s];4:yellow;4:size3;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle;4:not[%s];4:not[%s];4:iff[%s,%s];4:nand[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:size2;4:rectangle;4:triangle;4:size2;4:size1;4:triangle;4:iff[%s,%s];4:implies[%s,%s];4:circle;4:triangle;4:or[%s,%s];4:triangle;4:size1;4:size1;4:yellow
'λx.apply(rectangle,iota(filter(x.s, or[and[size3,not[apply(same_shape,x.o)]],size2])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size3;4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2
'λx.apply(rectangle,iota(filter(filter(x.s, and[circle,circle]), green)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:circle;4:green
'λx.apply(size2,iota(filter(filter(x.s, rectangle), triangle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle
'λx.apply(and[triangle,yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:yellow;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(x.s, size1), rectangle), yellow)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle;4:yellow;3:%s.s;2:x
'λx.apply(triangle,iota(filter(x.s, not[blue])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.apply(or[rectangle,or[yellow,nand[blue,apply(same_shape,x.o)]]],iota(filter(filter(filter(x.s, iff[size1,nand[and[apply(same_size,x.o),apply(same_size,iota(x.s))],blue]]), triangle), nand[rectangle,and[and[size1,rectangle],circle]])))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:or[%s,%s];4:yellow;4:nand[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size1;4:nand[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:blue;4:triangle;4:nand[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:size1;4:rectangle;4:circle
'λx.apply(blue,iota(filter(filter(x.s, rectangle), size1)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1
'λx.apply(blue,iota(filter(filter(x.s, rectangle), size3)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3
'λx.apply(or[rectangle,rectangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[and[apply(size-geq,x.o),rectangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:rectangle;1:%s.o;2:x
'λx.apply(and[yellow,blue],iota(filter(x.s, or[size2,apply(same_size,iota(x.s))])))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.exists(and[circle,rectangle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:circle;4:rectangle;3:%s.s;2:x
'λx.exists(or[yellow,and[circle,size1]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:yellow;4:and[%s,%s];4:circle;4:size1;3:%s.s;2:x
'λx.apply(or[and[circle,or[not[green],rectangle]],circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:circle;4:or[%s,%s];4:not[%s];4:green;4:rectangle;4:circle;1:%s.o;2:x
'λx.apply(nand[blue,apply(same_size,iota(x.s))],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.exists(or[apply(size-geq,iota(filter(filter(x.s, not[triangle]), rectangle))),and[and[or[or[circle,green],green],or[size2,and[yellow,iff[apply(size-geq,iota(filter(filter(filter(x.s, circle), blue), or[apply(same_color,iota(filter(x.s, circle))),apply(same_size,x.o)]))),blue]]]],rectangle]], filter(x.s, size3))'	0:exists(%s, %s);4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:rectangle;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:circle;4:green;4:green;4:or[%s,%s];4:size2;4:and[%s,%s];4:yellow;4:iff[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(and[yellow,and[blue,iff[rectangle,size2]]],iota(filter(filter(filter(x.s, circle), size3), and[yellow,size2])))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:and[%s,%s];4:blue;4:iff[%s,%s];4:rectangle;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3;4:and[%s,%s];4:yellow;4:size2
'λx.apply(and[nand[yellow,nand[rectangle,blue]],and[rectangle,triangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:yellow;4:nand[%s,%s];4:rectangle;4:blue;4:and[%s,%s];4:rectangle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[green,size2],iota(filter(x.s, or[size3,rectangle])))'	0:apply(%s,%s);4:implies[%s,%s];4:green;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:rectangle
'λx.apply(circle,iota(filter(x.s, apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(or[and[circle,size1],green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:circle;4:size1;4:green;1:%s.o;2:x
'λx.apply(apply(same_shape,x.o),iota(filter(filter(filter(filter(x.s, green), not[size1]), rectangle), green)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:size1;4:rectangle;4:green
'λx.apply(or[size1,size1],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(or[size2,size3],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(not[not[and[size1,rectangle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:and[%s,%s];4:size1;4:rectangle;1:%s.o;2:x
'λx.apply(and[and[triangle,size1],not[rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:size1;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.exists(rectangle, filter(x.s, and[and[circle,nor[and[rectangle,apply(same_shape,x.o)],green]],blue]))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:circle;4:nor[%s,%s];4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green;4:blue
'λx.apply(size2,iota(filter(x.s, and[yellow,yellow])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:yellow
'λx.apply(size3,iota(filter(x.s, and[yellow,yellow])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:yellow
'λx.apply(and[not[and[not[size2],circle]],or[and[rectangle,circle],blue]],iota(filter(filter(x.s, nor[apply(size-lt,iota(x.s)),triangle]), yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:not[%s];4:size2;4:circle;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:circle;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:triangle;4:yellow
'λx.apply(circle,iota(filter(x.s, or[green,size3])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:size3
'λx.forall(size3,filter(filter(x.s, rectangle), size3))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3
'λx.apply(nor[blue,and[yellow,rectangle]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:blue;4:and[%s,%s];4:yellow;4:rectangle;1:%s.o;2:x
'λx.contains(iota(filter(x.s, not[and[and[size2,blue],and[size2,size3]]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:blue;4:and[%s,%s];4:size2;4:size3;3:%s.s;2:x
'λx.contains(iota(x.s), filter(filter(filter(filter(filter(filter(filter(filter(x.s, green), and[size3,not[and[size1,circle]]]), green), circle), size2), and[nor[size2,apply(same_color,iota(x.s))],or[size2,blue]]), circle), green))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:size3;4:not[%s];4:and[%s,%s];4:size1;4:circle;4:green;4:circle;4:size2;4:and[%s,%s];4:nor[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:blue;4:circle;4:green
'λx.apply(and[size1,and[not[iff[circle,not[not[circle]]]],rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:and[%s,%s];4:not[%s];4:iff[%s,%s];4:circle;4:not[%s];4:not[%s];4:circle;4:rectangle;1:%s.o;2:x
'λx.apply(and[and[blue,and[yellow,size2]],rectangle],iota(filter(filter(filter(filter(filter(x.s, not[size1]), triangle), blue), size1), size2)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:yellow;4:size2;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:triangle;4:blue;4:size1;4:size2
'λx.apply(and[blue,nor[yellow,size2]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:nor[%s,%s];4:yellow;4:size2;1:iota(%s);3:%s.s;2:x
'λx.forall(or[nor[and[size1,circle],or[blue,size2]],size1],filter(filter(x.s, size1), not[or[size3,iff[triangle,not[size1]]]]))'	0:forall(%s,%s);4:or[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:size1;4:circle;4:or[%s,%s];4:blue;4:size2;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:not[%s];4:or[%s,%s];4:size3;4:iff[%s,%s];4:triangle;4:not[%s];4:size1
'λx.apply(yellow,iota(filter(filter(filter(filter(x.s, or[yellow,size2]), and[green,and[circle,or[iff[size2,and[iff[or[and[size2,or[rectangle,blue]],size3],circle],and[rectangle,size1]]],size2]]]), size1), triangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:size2;4:and[%s,%s];4:green;4:and[%s,%s];4:circle;4:or[%s,%s];4:iff[%s,%s];4:size2;4:and[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size2;4:or[%s,%s];4:rectangle;4:blue;4:size3;4:circle;4:and[%s,%s];4:rectangle;4:size1;4:size2;4:size1;4:triangle
'λx.apply(and[yellow,triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:triangle;1:%s.o;2:x
'λx.apply(implies[green,implies[size3,not[size2]]],iota(filter(filter(x.s, yellow), apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:implies[%s,%s];4:green;4:implies[%s,%s];4:size3;4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(or[rectangle,apply(size-geq,iota(filter(x.s, rectangle)))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;1:%s.o;2:x
'λx.apply(and[or[apply(size-lt,iota(filter(x.s, and[blue,and[triangle,circle]]))),size2],rectangle],iota(filter(filter(x.s, blue), rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:and[%s,%s];4:triangle;4:circle;4:size2;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle
'λx.apply(and[or[iff[nand[circle,blue],apply(same_color,iota(filter(x.s, or[size3,size3])))],and[rectangle,rectangle]],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:iff[%s,%s];4:nand[%s,%s];4:circle;4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:size3;4:and[%s,%s];4:rectangle;4:rectangle;4:size3;1:%s.o;2:x
'λx.contains(x.o, filter(filter(filter(filter(filter(filter(filter(filter(x.s, apply(same_size,iota(filter(x.s, not[size2])))), triangle), or[or[or[or[size3,apply(same_shape,x.o)],size1],size2],nor[triangle,apply(same_shape,iota(x.s))]]), implies[and[triangle,green],or[rectangle,not[nor[yellow,blue]]]]), rectangle), green), green), and[and[triangle,triangle],green]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:triangle;4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;4:size2;4:nor[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:implies[%s,%s];4:and[%s,%s];4:triangle;4:green;4:or[%s,%s];4:rectangle;4:not[%s];4:nor[%s,%s];4:yellow;4:blue;4:rectangle;4:green;4:green;4:and[%s,%s];4:and[%s,%s];4:triangle;4:triangle;4:green
'λx.exists(and[circle,size3], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:circle;4:size3;3:%s.s;2:x
'λx.exists(and[circle,size2], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:circle;4:size2;3:%s.s;2:x
'λx.empty(filter(filter(filter(filter(filter(filter(filter(x.s, not[size1]), triangle), size2), size3), blue), yellow), apply(size-leq,x.o)))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:triangle;4:size2;4:size3;4:blue;4:yellow;4:apply(%s,%s);5:size-leq;1:%s.o;2:x
'λx.apply(and[and[blue,apply(same_shape,x.o)],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue;1:%s.o;2:x
'λx.apply(and[green,apply(same_size,iota(filter(x.s, green)))],iota(filter(filter(x.s, and[blue,size1]), yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size1;4:yellow
'λx.forall(size2,filter(filter(filter(x.s, rectangle), or[size1,circle]), implies[and[circle,circle],apply(same_color,x.o)]))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:or[%s,%s];4:size1;4:circle;4:implies[%s,%s];4:and[%s,%s];4:circle;4:circle;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.exists(not[nand[or[circle,size1],apply(same_size,iota(x.s))]], x.s)'	0:exists(%s, %s);4:not[%s];4:nand[%s,%s];4:or[%s,%s];4:circle;4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(iff[blue,size3],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:blue;4:size3;1:iota(%s);3:%s.s;2:x
'λx.exists(blue, filter(x.s, apply(same_color,x.o)))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.forall(not[nor[and[size1,rectangle],and[or[size2,or[size3,and[and[size2,or[size2,size1]],size1]]],triangle]]],x.s)'	0:forall(%s,%s);4:not[%s];4:nor[%s,%s];4:and[%s,%s];4:size1;4:rectangle;4:and[%s,%s];4:or[%s,%s];4:size2;4:or[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:size2;4:or[%s,%s];4:size2;4:size1;4:size1;4:triangle;3:%s.s;2:x
'λx.apply(size3,iota(filter(x.s, and[or[triangle,and[size1,or[size1,and[not[size2],circle]]]],and[size1,green]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:triangle;4:and[%s,%s];4:size1;4:or[%s,%s];4:size1;4:and[%s,%s];4:not[%s];4:size2;4:circle;4:and[%s,%s];4:size1;4:green
'λx.apply(and[blue,apply(same_size,x.o)],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[nor[apply(same_shape,x.o),and[and[or[and[implies[yellow,and[yellow,triangle]],rectangle],or[circle,green]],size2],green]],rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:yellow;4:and[%s,%s];4:yellow;4:triangle;4:rectangle;4:or[%s,%s];4:circle;4:green;4:size2;4:green;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, green), and[and[not[apply(same_size,x.o)],circle],size1]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;4:size1
'λx.apply(size3,iota(filter(filter(filter(filter(x.s, size1), size1), green), not[size3])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1;4:green;4:not[%s];4:size3
'λx.apply(triangle,iota(filter(filter(filter(filter(x.s, triangle), blue), size2), and[blue,yellow])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue;4:size2;4:and[%s,%s];4:blue;4:yellow
'λx.apply(or[triangle,apply(same_size,iota(filter(x.s, iff[green,and[yellow,yellow]])))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:green;4:and[%s,%s];4:yellow;4:yellow;1:%s.o;2:x
'λx.apply(and[circle,or[yellow,blue]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:or[%s,%s];4:yellow;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(not[rectangle],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, size3)), filter(x.s, and[yellow,size1]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size1
'λx.apply(or[and[nor[size2,circle],triangle],not[blue]],iota(filter(filter(x.s, triangle), size2)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:size2;4:circle;4:triangle;4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2
'λx.exists(iff[triangle,triangle], filter(filter(x.s, or[size2,implies[circle,size1]]), circle))'	0:exists(%s, %s);4:iff[%s,%s];4:triangle;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:implies[%s,%s];4:circle;4:size1;4:circle
'λx.apply(yellow,iota(filter(filter(filter(filter(x.s, not[apply(size-gt,iota(x.s))]), green), iff[triangle,triangle]), green)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:green;4:iff[%s,%s];4:triangle;4:triangle;4:green
'λx.exists(or[or[rectangle,yellow],circle], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:or[%s,%s];4:rectangle;4:yellow;4:circle;3:%s.s;2:x
'λx.apply(and[or[size3,yellow],and[and[green,green],size1]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size3;4:yellow;4:and[%s,%s];4:and[%s,%s];4:green;4:green;4:size1;1:iota(%s);3:%s.s;2:x
'λx.forall(green,filter(filter(filter(filter(x.s, apply(same_size,x.o)), circle), nor[blue,triangle]), implies[size3,size2]))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;4:nor[%s,%s];4:blue;4:triangle;4:implies[%s,%s];4:size3;4:size2
'λx.apply(apply(size-leq,iota(filter(filter(x.s, triangle), triangle))),iota(filter(x.s, circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.contains(x.o, filter(filter(x.s, and[green,green]), size3))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:green;4:size3
'λx.exists(or[not[and[circle,size2]],blue], filter(x.s, size2))'	0:exists(%s, %s);4:or[%s,%s];4:not[%s];4:and[%s,%s];4:circle;4:size2;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.exists(yellow, filter(x.s, and[rectangle,and[apply(same_color,iota(x.s)),rectangle]]))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:rectangle
'λx.apply(iff[size2,green],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:size2;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(or[circle,circle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(x.s, nand[iff[size3,circle],rectangle]), yellow)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:iff[%s,%s];4:size3;4:circle;4:rectangle;4:yellow
'λx.apply(and[nor[size2,size3],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:size2;4:size3;4:green;1:%s.o;2:x
'λx.forall(yellow,filter(x.s, and[yellow,size2]))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size2
'λx.forall(or[nor[apply(size-lt,iota(x.s)),yellow],or[green,blue]],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:green;4:blue;3:%s.s;2:x
'λx.exists(not[and[circle,size1]], filter(filter(x.s, yellow), iff[iff[not[nor[apply(size-lt,x.o),green]],and[and[or[circle,size2],and[implies[size2,or[yellow,rectangle]],and[and[apply(same_size,iota(x.s)),not[green]],size1]]],not[blue]]],triangle]))'	0:exists(%s, %s);4:not[%s];4:and[%s,%s];4:circle;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:iff[%s,%s];4:iff[%s,%s];4:not[%s];4:nor[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:green;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:circle;4:size2;4:and[%s,%s];4:implies[%s,%s];4:size2;4:or[%s,%s];4:yellow;4:rectangle;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:not[%s];4:green;4:size1;4:not[%s];4:blue;4:triangle
'λx.apply(not[nor[green,blue]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:nor[%s,%s];4:green;4:blue;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(x.s, and[size2,implies[size3,circle]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:implies[%s,%s];4:size3;4:circle
'λx.apply(not[implies[circle,rectangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:implies[%s,%s];4:circle;4:rectangle;1:%s.o;2:x
'λx.apply(and[size2,size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:size2;1:%s.o;2:x
'λx.apply(and[size2,size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:size3;1:%s.o;2:x
'λx.apply(and[size2,size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:size1;1:%s.o;2:x
'λx.apply(nand[green,nand[nor[circle,rectangle],and[size2,yellow]]],iota(filter(filter(filter(x.s, apply(same_color,iota(filter(x.s, size3)))), size3), blue)))'	0:apply(%s,%s);4:nand[%s,%s];4:green;4:nand[%s,%s];4:nor[%s,%s];4:circle;4:rectangle;4:and[%s,%s];4:size2;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3;4:blue
'λx.apply(and[size1,size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:size2;1:%s.o;2:x
'λx.apply(and[size1,size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:size1;1:%s.o;2:x
'λx.apply(and[size1,size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:size3;1:%s.o;2:x
'λx.apply(and[size3,size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:size1;1:%s.o;2:x
'λx.apply(and[size3,size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:size2;1:%s.o;2:x
'λx.apply(and[size3,size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:size3;1:%s.o;2:x
'λx.apply(nand[triangle,apply(same_color,x.o)],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, and[blue,and[green,not[nand[rectangle,size2]]]]), apply(size-gt,iota(filter(x.s, circle)))), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:and[%s,%s];4:green;4:not[%s];4:nand[%s,%s];4:rectangle;4:size2;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle
'λx.apply(not[nor[apply(same_color,iota(filter(filter(filter(filter(filter(filter(filter(x.s, nand[and[yellow,circle],blue]), yellow), nand[blue,circle]), circle), yellow), blue), and[circle,rectangle]))),or[and[and[size2,apply(same_size,iota(x.s))],or[and[not[size2],apply(same_shape,x.o)],and[yellow,triangle]]],green]]],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:not[%s];4:nor[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:and[%s,%s];4:yellow;4:circle;4:blue;4:yellow;4:nand[%s,%s];4:blue;4:circle;4:circle;4:yellow;4:blue;4:and[%s,%s];4:circle;4:rectangle;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:yellow;4:triangle;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.contains(x.o, filter(x.s, circle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[and[or[triangle,or[circle,and[apply(same_color,x.o),blue]]],nor[yellow,blue]],and[and[rectangle,triangle],size2]],iota(filter(filter(filter(x.s, size3), size1), not[and[green,size3]])))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:triangle;4:or[%s,%s];4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue;4:nor[%s,%s];4:yellow;4:blue;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:triangle;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size1;4:not[%s];4:and[%s,%s];4:green;4:size3
'λx.apply(apply(same_shape,iota(filter(filter(filter(x.s, implies[triangle,and[not[size1],apply(same_shape,x.o)]]), blue), circle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:triangle;4:and[%s,%s];4:not[%s];4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue;4:circle;1:%s.o;2:x
'λx.apply(and[nand[nor[implies[yellow,and[and[apply(same_shape,iota(x.s)),triangle],not[size1]]],not[not[rectangle]]],size1],not[size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:nor[%s,%s];4:implies[%s,%s];4:yellow;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle;4:not[%s];4:size1;4:not[%s];4:not[%s];4:rectangle;4:size1;4:not[%s];4:size2;1:%s.o;2:x
'λx.apply(implies[and[triangle,size2],yellow],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:triangle;4:size2;4:yellow;1:%s.o;2:x
'λx.apply(size2,iota(filter(x.s, nand[not[yellow],triangle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:not[%s];4:yellow;4:triangle
'λx.apply(or[triangle,apply(same_size,x.o)],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(blue,iota(filter(filter(x.s, apply(size-lt,iota(filter(filter(filter(x.s, nor[green,or[not[implies[green,and[size2,nor[not[iff[green,not[green]]],circle]]]],green]]), or[iff[implies[and[circle,size1],and[green,size1]],apply(size-leq,x.o)],circle]), or[nor[circle,size1],rectangle])))), and[and[and[size3,triangle],and[blue,size2]],nor[triangle,green]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:green;4:or[%s,%s];4:not[%s];4:implies[%s,%s];4:green;4:and[%s,%s];4:size2;4:nor[%s,%s];4:not[%s];4:iff[%s,%s];4:green;4:not[%s];4:green;4:circle;4:green;4:or[%s,%s];4:iff[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:circle;4:size1;4:and[%s,%s];4:green;4:size1;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:circle;4:or[%s,%s];4:nor[%s,%s];4:circle;4:size1;4:rectangle;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:triangle;4:and[%s,%s];4:blue;4:size2;4:nor[%s,%s];4:triangle;4:green
'λx.forall(green,filter(filter(x.s, or[yellow,not[yellow]]), nand[circle,blue]))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:not[%s];4:yellow;4:nand[%s,%s];4:circle;4:blue
'λx.forall(implies[and[and[iff[triangle,size2],size3],green],size2],filter(x.s, iff[size3,green]))'	0:forall(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:triangle;4:size2;4:size3;4:green;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size3;4:green
'λx.forall(circle,filter(filter(x.s, or[or[and[green,circle],or[not[green],size1]],green]), triangle))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:green;4:circle;4:or[%s,%s];4:not[%s];4:green;4:size1;4:green;4:triangle
'λx.apply(and[size3,not[size3]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:not[%s];4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size1,not[size2]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:not[%s];4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size3,not[size2]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:not[%s];4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(not[green],iota(filter(filter(x.s, circle), and[or[or[size2,size3],and[triangle,triangle]],green])))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:size2;4:size3;4:and[%s,%s];4:triangle;4:triangle;4:green
'λx.apply(green,iota(filter(filter(x.s, rectangle), size1)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1
'λx.apply(circle,iota(filter(filter(filter(filter(filter(filter(filter(x.s, size3), size2), size1), size2), apply(size-gt,iota(x.s))), size3), not[blue])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2;4:size1;4:size2;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:size3;4:not[%s];4:blue
'λx.apply(or[or[circle,size3],or[green,blue]],iota(filter(filter(filter(x.s, rectangle), size3), not[and[rectangle,implies[circle,rectangle]]])))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:circle;4:size3;4:or[%s,%s];4:green;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3;4:not[%s];4:and[%s,%s];4:rectangle;4:implies[%s,%s];4:circle;4:rectangle
'λx.apply(or[not[size2],rectangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:size2;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.exists(yellow, filter(filter(filter(filter(filter(x.s, size3), size3), not[blue]), size3), size3))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3;4:not[%s];4:blue;4:size3;4:size3
'λx.apply(and[iff[or[nor[triangle,size1],size1],size2],apply(same_shape,iota(filter(filter(x.s, size3), nor[or[circle,apply(size-geq,x.o)],yellow])))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:triangle;4:size1;4:size1;4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:nor[%s,%s];4:or[%s,%s];4:circle;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:yellow;1:%s.o;2:x
'λx.apply(and[green,apply(same_shape,x.o)],iota(filter(x.s, green)))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.forall(implies[or[triangle,blue],apply(same_color,x.o)],filter(filter(filter(x.s, size1), circle), triangle))'	0:forall(%s,%s);4:implies[%s,%s];4:or[%s,%s];4:triangle;4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle;4:triangle
'λx.apply(rectangle,iota(filter(filter(x.s, rectangle), and[not[blue],size1])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:not[%s];4:blue;4:size1
'λx.apply(circle,iota(filter(filter(x.s, size1), implies[size1,blue])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:implies[%s,%s];4:size1;4:blue
'λx.apply(apply(same_size,x.o),iota(filter(x.s, not[size3])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3
'λx.apply(and[blue,and[size2,green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:size2;4:green;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(filter(filter(x.s, blue), triangle), not[or[size2,and[size2,yellow]]]), not[triangle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle;4:not[%s];4:or[%s,%s];4:size2;4:and[%s,%s];4:size2;4:yellow;4:not[%s];4:triangle
'λx.apply(size3,iota(filter(filter(x.s, blue), green)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green
'λx.apply(size2,iota(filter(filter(x.s, blue), green)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green
'λx.apply(size2,iota(filter(x.s, and[and[and[or[size3,size3],size2],not[circle]],not[implies[rectangle,green]]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size3;4:size3;4:size2;4:not[%s];4:circle;4:not[%s];4:implies[%s,%s];4:rectangle;4:green
'λx.apply(and[not[and[size1,and[not[not[not[size1]]],and[not[apply(size-gt,x.o)],not[apply(same_size,iota(x.s))]]]]],not[and[circle,blue]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:not[%s];4:not[%s];4:not[%s];4:size1;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:circle;4:blue;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, not[circle]), triangle)), filter(x.s, size1))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.forall(not[and[green,yellow]],filter(x.s, not[not[size1]]))'	0:forall(%s,%s);4:not[%s];4:and[%s,%s];4:green;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:size1
'λx.exists(not[yellow], filter(filter(filter(x.s, rectangle), and[yellow,yellow]), apply(same_shape,x.o)))'	0:exists(%s, %s);4:not[%s];4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:yellow;4:yellow;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(nor[and[size3,size1],triangle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:size3;4:size1;4:triangle;1:%s.o;2:x
'λx.forall(size2,filter(filter(filter(x.s, green), or[size3,triangle]), and[size2,nor[size2,blue]]))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:size3;4:triangle;4:and[%s,%s];4:size2;4:nor[%s,%s];4:size2;4:blue
'λx.apply(not[nor[size3,rectangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:nor[%s,%s];4:size3;4:rectangle;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(filter(filter(x.s, not[or[green,blue]]), apply(same_size,x.o)), and[blue,apply(same_size,iota(filter(filter(filter(filter(x.s, apply(size-leq,x.o)), and[apply(same_color,x.o),rectangle]), and[apply(same_shape,iota(x.s)),rectangle]), not[and[green,triangle]])))]), size2)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:green;4:blue;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:rectangle;4:not[%s];4:and[%s,%s];4:green;4:triangle;4:size2
'λx.apply(and[or[circle,and[green,size1]],size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:circle;4:and[%s,%s];4:green;4:size1;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size3,circle],iota(filter(filter(filter(x.s, and[size3,triangle]), nor[iff[implies[yellow,triangle],circle],blue]), or[implies[size3,nand[not[triangle],not[and[and[and[size3,and[blue,rectangle]],circle],circle]]]],size3])))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:triangle;4:nor[%s,%s];4:iff[%s,%s];4:implies[%s,%s];4:yellow;4:triangle;4:circle;4:blue;4:or[%s,%s];4:implies[%s,%s];4:size3;4:nand[%s,%s];4:not[%s];4:triangle;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:blue;4:rectangle;4:circle;4:circle;4:size3
'λx.exists(size2, filter(x.s, rectangle))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.exists(nand[circle,green], x.s)'	0:exists(%s, %s);4:nand[%s,%s];4:circle;4:green;3:%s.s;2:x
'λx.apply(size1,iota(filter(x.s, implies[size1,circle])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size1;4:circle
'λx.apply(not[and[size2,rectangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size2;4:rectangle;1:%s.o;2:x
'λx.empty(filter(x.s, and[apply(same_color,x.o),green]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green
'λx.apply(implies[or[or[apply(same_color,x.o),size3],circle],and[iff[and[yellow,not[size2]],and[implies[size3,or[blue,triangle]],rectangle]],nand[triangle,green]]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3;4:circle;4:and[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:yellow;4:not[%s];4:size2;4:and[%s,%s];4:implies[%s,%s];4:size3;4:or[%s,%s];4:blue;4:triangle;4:rectangle;4:nand[%s,%s];4:triangle;4:green;1:%s.o;2:x
'λx.apply(size2,iota(filter(x.s, and[not[size3],or[size1,rectangle]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:size3;4:or[%s,%s];4:size1;4:rectangle
'λx.contains(x.o, filter(filter(x.s, nand[or[or[rectangle,and[apply(same_size,iota(x.s)),not[triangle]]],yellow],circle]), apply(size-leq,iota(x.s))))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:or[%s,%s];4:or[%s,%s];4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:not[%s];4:triangle;4:yellow;4:circle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[triangle,green],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:green;4:circle;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(x.s, iff[size1,and[or[size1,size3],yellow]]), iff[nand[yellow,or[and[rectangle,size2],circle]],green])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size1;4:and[%s,%s];4:or[%s,%s];4:size1;4:size3;4:yellow;4:iff[%s,%s];4:nand[%s,%s];4:yellow;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:size2;4:circle;4:green
'λx.apply(and[size3,and[and[apply(same_size,iota(x.s)),apply(size-gt,iota(filter(x.s, triangle)))],rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle;1:%s.o;2:x
'λx.exists(iff[and[and[size2,blue],circle],apply(same_color,iota(x.s))], x.s)'	0:exists(%s, %s);4:iff[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:blue;4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(filter(filter(x.s, circle), rectangle), not[rectangle]), rectangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle;4:not[%s];4:rectangle;4:rectangle
'λx.apply(not[apply(same_shape,iota(filter(x.s, apply(same_shape,x.o))))],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(filter(x.s, yellow), size2), yellow), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2;4:yellow;4:triangle
'λx.apply(or[size1,and[nand[apply(same_color,iota(x.s)),green],yellow]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:and[%s,%s];4:nand[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:green;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(filter(filter(x.s, rectangle), iff[circle,size1]), size1), and[not[yellow],yellow])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:iff[%s,%s];4:circle;4:size1;4:size1;4:and[%s,%s];4:not[%s];4:yellow;4:yellow
'λx.apply(size2,iota(filter(filter(x.s, circle), or[blue,size2])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:blue;4:size2
'λx.contains(iota(filter(filter(x.s, apply(same_size,x.o)), and[blue,green])), filter(filter(x.s, size3), or[circle,yellow]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:blue;4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:circle;4:yellow
'λx.apply(iff[or[iff[apply(same_shape,iota(filter(x.s, and[green,or[and[green,size2],green]]))),blue],size1],or[size2,size3]],iota(filter(filter(x.s, triangle), circle)))'	0:apply(%s,%s);4:iff[%s,%s];4:or[%s,%s];4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:or[%s,%s];4:and[%s,%s];4:green;4:size2;4:green;4:blue;4:size1;4:or[%s,%s];4:size2;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle
'λx.apply(and[rectangle,yellow],iota(filter(filter(filter(filter(filter(x.s, implies[and[rectangle,and[iff[size3,blue],and[nand[or[rectangle,triangle],circle],green]]],and[or[size2,or[size2,triangle]],size1]]), circle), not[triangle]), and[green,yellow]), rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:iff[%s,%s];4:size3;4:blue;4:and[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:rectangle;4:triangle;4:circle;4:green;4:and[%s,%s];4:or[%s,%s];4:size2;4:or[%s,%s];4:size2;4:triangle;4:size1;4:circle;4:not[%s];4:triangle;4:and[%s,%s];4:green;4:yellow;4:rectangle
'λx.apply(triangle,iota(filter(x.s, apply(same_color,x.o))))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(filter(x.s, size3), or[blue,triangle]), size1), not[green]), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:blue;4:triangle;4:size1;4:not[%s];4:green;4:blue
'λx.empty(filter(x.s, not[size2]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2
'λx.apply(triangle,iota(filter(filter(filter(filter(filter(filter(x.s, and[apply(same_color,x.o),not[not[circle]]]), size2), rectangle), size3), size2), apply(same_size,x.o))))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:not[%s];4:circle;4:size2;4:rectangle;4:size3;4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(and[or[and[and[size1,apply(size-leq,x.o)],nand[green,and[apply(same_size,x.o),blue]]],size2],and[size1,or[size3,circle]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:nand[%s,%s];4:green;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;4:size2;4:and[%s,%s];4:size1;4:or[%s,%s];4:size3;4:circle;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(x.s, circle), rectangle), apply(same_color,x.o)))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(implies[and[and[green,or[apply(same_size,x.o),size1]],or[apply(same_color,iota(x.s)),or[size3,nor[and[and[and[and[yellow,blue],triangle],nor[rectangle,iff[or[not[apply(same_color,x.o)],size1],or[not[not[triangle]],or[and[triangle,size1],and[blue,triangle]]]]]],green],size2]]]],size2],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:blue;4:triangle;4:nor[%s,%s];4:rectangle;4:iff[%s,%s];4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1;4:or[%s,%s];4:not[%s];4:not[%s];4:triangle;4:or[%s,%s];4:and[%s,%s];4:triangle;4:size1;4:and[%s,%s];4:blue;4:triangle;4:green;4:size2;4:size2;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(filter(filter(x.s, blue), rectangle), triangle), or[size3,triangle]), green), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle;4:triangle;4:or[%s,%s];4:size3;4:triangle;4:green;4:size3
'λx.apply(or[and[circle,rectangle],triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:circle;4:rectangle;4:triangle;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(x.s, nor[blue,circle]), and[iff[yellow,circle],blue]), size3), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:blue;4:circle;4:and[%s,%s];4:iff[%s,%s];4:yellow;4:circle;4:blue;4:size3;4:size2
'λx.apply(or[not[green],blue],iota(filter(filter(filter(filter(x.s, size2), and[and[triangle,size2],size1]), size2), size3)))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:green;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:and[%s,%s];4:triangle;4:size2;4:size1;4:size2;4:size3
'λx.apply(triangle,iota(filter(filter(x.s, and[blue,size1]), nand[and[circle,apply(same_size,iota(x.s))],rectangle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size1;4:nand[%s,%s];4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:rectangle
'λx.apply(not[and[size1,rectangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size1;4:rectangle;1:%s.o;2:x
'λx.apply(nand[triangle,apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[size1,iff[size2,green]],iota(filter(filter(x.s, size2), yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:iff[%s,%s];4:size2;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:yellow
'λx.forall(rectangle,x.s)'	0:forall(%s,%s);4:rectangle;3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, implies[and[yellow,yellow],circle]), nand[green,yellow]), iff[apply(same_color,iota(filter(x.s, nand[not[and[not[rectangle],and[green,size1]]],size2]))),rectangle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:and[%s,%s];4:yellow;4:yellow;4:circle;4:nand[%s,%s];4:green;4:yellow;4:iff[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:not[%s];4:and[%s,%s];4:not[%s];4:rectangle;4:and[%s,%s];4:green;4:size1;4:size2;4:rectangle
'λx.contains(iota(x.s), filter(filter(filter(filter(x.s, yellow), or[blue,yellow]), size2), and[circle,size2]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:blue;4:yellow;4:size2;4:and[%s,%s];4:circle;4:size2
'λx.exists(and[green,triangle], filter(filter(x.s, apply(same_color,iota(x.s))), size3))'	0:exists(%s, %s);4:and[%s,%s];4:green;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size3
'λx.apply(and[size3,circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:circle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, apply(same_shape,x.o))), filter(filter(filter(x.s, blue), size2), blue))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2;4:blue
'λx.apply(triangle,iota(filter(x.s, and[green,circle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:circle
'λx.contains(iota(x.s), filter(filter(x.s, size2), blue))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue
'λx.apply(and[size1,circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:circle;1:iota(%s);3:%s.s;2:x
'λx.exists(or[not[and[rectangle,and[triangle,triangle]]],or[yellow,triangle]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:not[%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:triangle;4:triangle;4:or[%s,%s];4:yellow;4:triangle;3:%s.s;2:x
'λx.apply(or[circle,rectangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[apply(same_color,x.o),triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, or[not[size2],not[and[circle,size1]]]), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:size2;4:not[%s];4:and[%s,%s];4:circle;4:size1;4:yellow
'λx.apply(rectangle,iota(filter(filter(filter(x.s, triangle), blue), yellow)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue;4:yellow
'λx.apply(size1,iota(filter(filter(filter(x.s, green), circle), yellow)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:circle;4:yellow
'λx.exists(nand[and[yellow,blue],green], filter(filter(filter(filter(x.s, apply(same_color,iota(x.s))), circle), or[not[size1],or[or[size1,yellow],and[not[circle],and[circle,triangle]]]]), not[yellow]))'	0:exists(%s, %s);4:nand[%s,%s];4:and[%s,%s];4:yellow;4:blue;4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:not[%s];4:size1;4:or[%s,%s];4:or[%s,%s];4:size1;4:yellow;4:and[%s,%s];4:not[%s];4:circle;4:and[%s,%s];4:circle;4:triangle;4:not[%s];4:yellow
'λx.apply(yellow,iota(filter(x.s, and[green,blue])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:blue
'λx.empty(filter(filter(filter(filter(filter(x.s, not[blue]), circle), green), size2), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:circle;4:green;4:size2;4:size1
'λx.forall(apply(same_shape,iota(filter(filter(x.s, size2), not[yellow]))),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:not[%s];4:yellow;3:%s.s;2:x
'λx.apply(and[circle,or[size2,not[green]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:or[%s,%s];4:size2;4:not[%s];4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size3,triangle],iota(filter(filter(filter(filter(x.s, rectangle), yellow), size2), not[size2])))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:yellow;4:size2;4:not[%s];4:size2
'λx.apply(and[or[size3,and[rectangle,circle]],size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size3;4:and[%s,%s];4:rectangle;4:circle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size2,and[nor[size1,size2],and[circle,not[and[blue,size3]]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:nor[%s,%s];4:size1;4:size2;4:and[%s,%s];4:circle;4:not[%s];4:and[%s,%s];4:blue;4:size3;1:%s.o;2:x
'λx.apply(and[blue,and[circle,apply(same_shape,iota(filter(filter(x.s, not[size2]), circle)))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:circle;1:%s.o;2:x
'λx.forall(size1,filter(filter(x.s, and[or[size2,circle],or[or[size1,not[apply(size-leq,iota(filter(x.s, and[circle,circle])))]],and[or[size3,yellow],not[yellow]]]]), nand[triangle,not[yellow]]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:size2;4:circle;4:or[%s,%s];4:or[%s,%s];4:size1;4:not[%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:circle;4:and[%s,%s];4:or[%s,%s];4:size3;4:yellow;4:not[%s];4:yellow;4:nand[%s,%s];4:triangle;4:not[%s];4:yellow
'λx.apply(and[size3,and[rectangle,size1]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:rectangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(or[apply(same_size,x.o),rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:rectangle;1:%s.o;2:x
'λx.apply(iff[size3,size3],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:size3;4:size3;1:%s.o;2:x
'λx.apply(or[green,rectangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, circle), nand[not[nor[size3,size2]],and[apply(same_color,x.o),green]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:nand[%s,%s];4:not[%s];4:nor[%s,%s];4:size3;4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green
'λx.exists(green, filter(x.s, blue))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(apply(same_shape,x.o),iota(filter(filter(x.s, yellow), apply(size-geq,x.o))))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.exists(size2, filter(x.s, blue))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.exists(size3, filter(x.s, blue))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.exists(and[green,green], filter(x.s, blue))'	0:exists(%s, %s);4:and[%s,%s];4:green;4:green;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(circle,iota(filter(x.s, and[blue,circle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:circle
'λx.apply(and[triangle,or[yellow,not[blue]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:or[%s,%s];4:yellow;4:not[%s];4:blue;1:iota(%s);3:%s.s;2:x
'λx.exists(size2, filter(x.s, or[not[size3],blue]))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:size3;4:blue
'λx.apply(and[apply(same_size,iota(x.s)),yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:yellow;1:%s.o;2:x
'λx.forall(size1,filter(x.s, rectangle))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.forall(size2,filter(x.s, rectangle))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.contains(x.o, filter(x.s, and[and[size3,apply(same_shape,iota(x.s))],size2]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size2
'λx.forall(apply(size-lt,iota(x.s)),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.forall(triangle,filter(filter(x.s, apply(same_shape,iota(filter(x.s, blue)))), apply(same_size,x.o)))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(x.s, triangle), size2))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2
'λx.apply(triangle,iota(filter(x.s, iff[not[size1],not[triangle]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:not[%s];4:size1;4:not[%s];4:triangle
'λx.contains(iota(filter(x.s, or[triangle,triangle])), filter(filter(filter(x.s, blue), and[green,circle]), and[not[or[circle,nand[size3,green]]],apply(same_color,x.o)]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:green;4:circle;4:and[%s,%s];4:not[%s];4:or[%s,%s];4:circle;4:nand[%s,%s];4:size3;4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(or[and[size1,and[size1,apply(same_size,x.o)]],and[rectangle,rectangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:rectangle;4:rectangle;1:%s.o;2:x
'λx.exists(green, filter(x.s, rectangle))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[size1,size1],iota(filter(x.s, not[blue])))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.apply(and[size1,size2],iota(filter(x.s, not[blue])))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.contains(x.o, filter(filter(x.s, size3), and[or[rectangle,iff[and[size3,blue],and[yellow,rectangle]]],or[rectangle,or[or[not[size1],size2],yellow]]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:iff[%s,%s];4:and[%s,%s];4:size3;4:blue;4:and[%s,%s];4:yellow;4:rectangle;4:or[%s,%s];4:rectangle;4:or[%s,%s];4:or[%s,%s];4:not[%s];4:size1;4:size2;4:yellow
'λx.apply(blue,iota(filter(filter(filter(filter(filter(filter(x.s, nand[or[and[apply(size-lt,iota(filter(x.s, green))),size1],circle],size2]), triangle), size3), apply(same_size,iota(filter(x.s, rectangle)))), or[rectangle,iff[size1,or[or[yellow,or[and[circle,apply(same_color,iota(x.s))],nand[not[circle],size3]]],yellow]]]), circle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1;4:circle;4:size2;4:triangle;4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:or[%s,%s];4:rectangle;4:iff[%s,%s];4:size1;4:or[%s,%s];4:or[%s,%s];4:yellow;4:or[%s,%s];4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:nand[%s,%s];4:not[%s];4:circle;4:size3;4:yellow;4:circle
'λx.apply(and[blue,triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[size3,and[and[size3,and[apply(same_size,iota(filter(x.s, size3))),not[blue]]],nor[size1,triangle]]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:blue;4:nor[%s,%s];4:size1;4:triangle;1:%s.o;2:x
'λx.apply(not[or[rectangle,circle]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:rectangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, size2), and[yellow,not[implies[green,size3]]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:yellow;4:not[%s];4:implies[%s,%s];4:green;4:size3
'λx.exists(nand[size2,green], x.s)'	0:exists(%s, %s);4:nand[%s,%s];4:size2;4:green;3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(filter(filter(x.s, not[size1]), blue), size3), size1)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:blue;4:size3;4:size1
'λx.empty(filter(filter(x.s, green), and[apply(same_color,iota(x.s)),circle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:circle
'λx.forall(circle,filter(filter(filter(x.s, yellow), circle), or[rectangle,and[yellow,size2]]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle;4:or[%s,%s];4:rectangle;4:and[%s,%s];4:yellow;4:size2
'λx.apply(apply(same_shape,x.o),iota(filter(x.s, circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.exists(apply(same_color,iota(filter(x.s, triangle))), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;3:%s.s;2:x
'λx.apply(and[and[size3,nand[and[iff[and[and[nor[apply(size-lt,iota(filter(x.s, circle))),green],triangle],or[or[and[size1,and[rectangle,size1]],size2],and[yellow,nand[nor[apply(same_shape,x.o),size1],iff[not[or[rectangle,and[and[yellow,and[rectangle,size3]],nand[not[yellow],green]]]],or[yellow,circle]]]]]],triangle],size3],or[not[circle],size2]]],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size3;4:nand[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green;4:triangle;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:rectangle;4:size1;4:size2;4:and[%s,%s];4:yellow;4:nand[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;4:iff[%s,%s];4:not[%s];4:or[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:rectangle;4:size3;4:nand[%s,%s];4:not[%s];4:yellow;4:green;4:or[%s,%s];4:yellow;4:circle;4:triangle;4:size3;4:or[%s,%s];4:not[%s];4:circle;4:size2;4:green;1:%s.o;2:x
'λx.apply(not[nand[yellow,size3]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:nand[%s,%s];4:yellow;4:size3;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, or[size1,size3]), rectangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:size3;4:rectangle
'λx.apply(circle,iota(filter(x.s, circle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(size2,iota(filter(x.s, and[not[implies[blue,and[size2,apply(size-lt,x.o)]]],green])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:implies[%s,%s];4:blue;4:and[%s,%s];4:size2;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:green
'λx.apply(size2,iota(filter(filter(x.s, blue), or[rectangle,and[size1,size3]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:rectangle;4:and[%s,%s];4:size1;4:size3
'λx.apply(and[not[implies[yellow,or[apply(same_shape,iota(filter(x.s, circle))),triangle]]],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:implies[%s,%s];4:yellow;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle;4:size1;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, blue), rectangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle
'λx.apply(circle,iota(filter(filter(filter(x.s, size2), yellow), iff[blue,size1])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:yellow;4:iff[%s,%s];4:blue;4:size1
'λx.exists(and[and[green,and[triangle,or[rectangle,triangle]]],and[apply(same_shape,x.o),blue]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:triangle;4:or[%s,%s];4:rectangle;4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue;3:%s.s;2:x
'λx.apply(and[green,and[size3,apply(size-lt,iota(filter(filter(filter(x.s, and[size2,and[yellow,and[blue,circle]]]), green), apply(same_shape,x.o))))]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:size3;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:and[%s,%s];4:yellow;4:and[%s,%s];4:blue;4:circle;4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[yellow,nand[circle,blue]],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:nand[%s,%s];4:yellow;4:nand[%s,%s];4:circle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.forall(not[and[size3,size2]],x.s)'	0:forall(%s,%s);4:not[%s];4:and[%s,%s];4:size3;4:size2;3:%s.s;2:x
'λx.exists(not[and[not[size1],not[circle]]], filter(filter(filter(x.s, and[not[or[apply(same_color,iota(filter(x.s, and[triangle,blue]))),rectangle]],apply(same_size,x.o)]), not[blue]), blue))'	0:exists(%s, %s);4:not[%s];4:and[%s,%s];4:not[%s];4:size1;4:not[%s];4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:blue;4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:not[%s];4:blue;4:blue
'λx.apply(circle,iota(filter(filter(x.s, circle), triangle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle
'λx.empty(filter(x.s, nor[or[blue,green],blue]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:or[%s,%s];4:blue;4:green;4:blue
'λx.apply(apply(same_color,x.o),iota(filter(x.s, or[circle,green])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:green
'λx.apply(size2,iota(filter(filter(filter(filter(x.s, green), circle), green), apply(same_shape,iota(filter(x.s, rectangle))))))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:circle;4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(yellow,iota(filter(x.s, and[green,circle])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:circle
'λx.apply(green,iota(filter(x.s, and[size1,size3])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size3
'λx.apply(size3,iota(filter(x.s, circle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(size2,iota(filter(x.s, circle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(size1,iota(filter(x.s, circle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(or[not[rectangle],yellow],iota(filter(filter(filter(filter(filter(filter(filter(x.s, size2), size3), triangle), apply(size-gt,x.o)), green), yellow), circle)))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:rectangle;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3;4:triangle;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:green;4:yellow;4:circle
'λx.apply(nand[apply(same_shape,iota(filter(filter(x.s, yellow), green))),circle],iota(filter(filter(filter(filter(x.s, implies[or[nand[blue,triangle],rectangle],triangle]), blue), apply(size-gt,x.o)), green)))'	0:apply(%s,%s);4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:or[%s,%s];4:nand[%s,%s];4:blue;4:triangle;4:rectangle;4:triangle;4:blue;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:green
'λx.contains(iota(filter(filter(filter(x.s, green), and[blue,or[size3,size1]]), blue)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:blue;4:or[%s,%s];4:size3;4:size1;4:blue;3:%s.s;2:x
'λx.empty(filter(filter(x.s, size1), not[size2]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:not[%s];4:size2
'λx.apply(and[green,rectangle],iota(filter(filter(x.s, not[rectangle]), size1)))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;4:size1
'λx.apply(or[and[size3,blue],size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size3;4:blue;4:size1;1:%s.o;2:x
'λx.forall(rectangle,filter(filter(x.s, and[size1,size1]), apply(same_shape,iota(x.s))))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[size3,rectangle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size3;4:rectangle;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(filter(filter(x.s, green), or[circle,size3]), blue), green)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:circle;4:size3;4:blue;4:green
'λx.forall(apply(same_shape,iota(filter(x.s, and[blue,green]))),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:green;3:%s.s;2:x
'λx.contains(x.o, filter(x.s, apply(same_size,iota(x.s))))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[implies[yellow,not[size1]],nor[triangle,size1]],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:yellow;4:not[%s];4:size1;4:nor[%s,%s];4:triangle;4:size1;4:green;1:%s.o;2:x
'λx.apply(nand[circle,size1],iota(filter(filter(x.s, and[triangle,not[circle]]), blue)))'	0:apply(%s,%s);4:nand[%s,%s];4:circle;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:not[%s];4:circle;4:blue
'λx.apply(and[and[green,triangle],and[not[blue],size1]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:green;4:triangle;4:and[%s,%s];4:not[%s];4:blue;4:size1;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(x.s, and[rectangle,size3]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:size3
'λx.exists(implies[or[green,apply(same_size,x.o)],blue], filter(x.s, green))'	0:exists(%s, %s);4:implies[%s,%s];4:or[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(or[yellow,green],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(or[not[size3],green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:size3;4:green;1:%s.o;2:x
'λx.forall(and[size3,blue],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:size3;4:blue;3:%s.s;2:x
'λx.apply(and[or[or[blue,blue],yellow],circle],iota(filter(x.s, and[size2,rectangle])))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:blue;4:blue;4:yellow;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:rectangle
'λx.apply(nand[blue,green],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:blue;4:green;1:iota(%s);3:%s.s;2:x
'λx.exists(circle, filter(filter(x.s, and[size2,yellow]), blue))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:yellow;4:blue
'λx.forall(and[size2,blue],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:size2;4:blue;3:%s.s;2:x
'λx.apply(and[and[size3,yellow],or[size3,or[blue,apply(same_color,iota(x.s))]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size3;4:yellow;4:or[%s,%s];4:size3;4:or[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.forall(not[rectangle],x.s)'	0:forall(%s,%s);4:not[%s];4:rectangle;3:%s.s;2:x
'λx.apply(and[and[apply(same_size,x.o),circle],size3],iota(filter(filter(filter(x.s, not[size1]), size1), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:size1;4:blue
'λx.empty(filter(x.s, and[rectangle,green]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:green
'λx.apply(or[iff[and[rectangle,size1],apply(same_color,x.o)],rectangle],iota(filter(filter(x.s, and[size1,and[size2,size3]]), size3)))'	0:apply(%s,%s);4:or[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:rectangle;4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:and[%s,%s];4:size2;4:size3;4:size3
'λx.apply(or[not[size3],or[apply(same_color,x.o),rectangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:size3;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle;1:%s.o;2:x
'λx.apply(or[blue,size1],iota(filter(x.s, apply(same_color,iota(filter(filter(x.s, size1), rectangle))))))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle
'λx.apply(iff[apply(same_size,x.o),rectangle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:rectangle;1:%s.o;2:x
'λx.apply(and[triangle,apply(same_size,x.o)],iota(filter(x.s, apply(same_color,x.o))))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(x.s, green), size3), rectangle), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size3;4:rectangle;4:rectangle
'λx.apply(triangle,iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(and[yellow,rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.forall(and[size2,yellow],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:size2;4:yellow;3:%s.s;2:x
'λx.apply(and[apply(size-lt,x.o),and[and[blue,circle],and[size2,green]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:and[%s,%s];4:and[%s,%s];4:blue;4:circle;4:and[%s,%s];4:size2;4:green;1:iota(%s);3:%s.s;2:x
'λx.exists(iff[or[size2,and[apply(same_shape,iota(x.s)),yellow]],or[and[circle,nor[size1,size2]],rectangle]], x.s)'	0:exists(%s, %s);4:iff[%s,%s];4:or[%s,%s];4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:and[%s,%s];4:circle;4:nor[%s,%s];4:size1;4:size2;4:rectangle;3:%s.s;2:x
'λx.apply(and[rectangle,and[size3,circle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:size3;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[yellow,nand[rectangle,apply(same_shape,x.o)]],iota(filter(x.s, or[size1,size2])))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:nand[%s,%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:size2
'λx.apply(or[green,and[implies[and[and[rectangle,size1],green],size2],blue]],iota(filter(filter(x.s, and[triangle,circle]), rectangle)))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:and[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size1;4:green;4:size2;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:circle;4:rectangle
'λx.apply(and[circle,or[green,green]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:or[%s,%s];4:green;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.forall(circle,filter(filter(x.s, not[size2]), circle))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:circle
'λx.empty(filter(filter(filter(x.s, circle), size2), or[size2,not[triangle]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size2;4:or[%s,%s];4:size2;4:not[%s];4:triangle
'λx.forall(and[size2,or[circle,or[green,and[apply(same_size,x.o),circle]]]],filter(x.s, and[size1,or[circle,triangle]]))'	0:forall(%s,%s);4:and[%s,%s];4:size2;4:or[%s,%s];4:circle;4:or[%s,%s];4:green;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:or[%s,%s];4:circle;4:triangle
'λx.apply(size2,iota(filter(x.s, and[size3,green])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:green
'λx.apply(iff[green,or[and[not[apply(size-gt,iota(filter(filter(filter(filter(filter(filter(x.s, triangle), size2), and[apply(same_color,x.o),green]), size3), yellow), not[size2])))],nand[and[circle,and[iff[apply(size-leq,x.o),circle],apply(same_size,x.o)]],green]],triangle]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:green;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green;4:size3;4:yellow;4:not[%s];4:size2;4:nand[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:iff[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;4:triangle;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, size1), triangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle
'λx.empty(filter(filter(filter(x.s, not[rectangle]), size2), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;4:size2;4:green
'λx.apply(implies[or[size2,green],blue],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:or[%s,%s];4:size2;4:green;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(or[triangle,circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:circle;1:%s.o;2:x
'λx.apply(and[and[size3,or[circle,circle]],not[and[rectangle,not[blue]]]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size3;4:or[%s,%s];4:circle;4:circle;4:not[%s];4:and[%s,%s];4:rectangle;4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.exists(blue, filter(x.s, nand[and[nand[triangle,circle],size1],or[not[green],green]]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:triangle;4:circle;4:size1;4:or[%s,%s];4:not[%s];4:green;4:green
'λx.forall(triangle,filter(filter(filter(x.s, rectangle), or[size1,triangle]), not[blue]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:or[%s,%s];4:size1;4:triangle;4:not[%s];4:blue
'λx.apply(apply(size-lt,iota(x.s)),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(size-gt,iota(filter(filter(x.s, apply(same_color,x.o)), circle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;1:%s.o;2:x
'λx.apply(not[and[and[size3,yellow],apply(same_shape,x.o)]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:yellow;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, green), circle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:circle
'λx.apply(apply(same_color,iota(filter(filter(x.s, triangle), and[and[size2,green],and[size2,size2]]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:and[%s,%s];4:size2;4:green;4:and[%s,%s];4:size2;4:size2;1:%s.o;2:x
'λx.forall(and[nand[circle,and[size2,and[apply(size-geq,iota(x.s)),size3]]],yellow],filter(x.s, not[apply(same_color,iota(filter(x.s, size1)))]))'	0:forall(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:circle;4:and[%s,%s];4:size2;4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:size3;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(and[rectangle,and[implies[circle,apply(same_size,iota(filter(x.s, rectangle)))],size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:implies[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2;1:%s.o;2:x
'λx.apply(and[and[implies[circle,green],size3],size3],iota(filter(filter(x.s, nand[triangle,triangle]), apply(same_shape,x.o))))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:circle;4:green;4:size3;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:triangle;4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(filter(filter(filter(x.s, or[nand[green,and[and[rectangle,or[and[circle,circle],rectangle]],green]],blue]), green), yellow), triangle), size3)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:nand[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:circle;4:circle;4:rectangle;4:green;4:blue;4:green;4:yellow;4:triangle;4:size3
'λx.apply(implies[or[apply(size-lt,iota(filter(filter(filter(x.s, size3), triangle), rectangle))),green],not[rectangle]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle;4:rectangle;4:green;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.exists(triangle, filter(x.s, triangle))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.forall(triangle,filter(x.s, size3))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.forall(triangle,filter(x.s, size2))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.forall(triangle,filter(x.s, size1))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.forall(triangle,filter(x.s, green))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(green,iota(filter(filter(filter(x.s, size2), triangle), green)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:triangle;4:green
'λx.apply(rectangle,iota(filter(x.s, nand[yellow,or[and[blue,size1],not[blue]]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:yellow;4:or[%s,%s];4:and[%s,%s];4:blue;4:size1;4:not[%s];4:blue
'λx.apply(and[or[nor[or[size2,apply(size-gt,iota(x.s))],size1],triangle],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:size2;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:size1;4:triangle;4:triangle;1:%s.o;2:x
'λx.apply(implies[blue,or[and[size2,rectangle],circle]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:blue;4:or[%s,%s];4:and[%s,%s];4:size2;4:rectangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(x.s, size1), not[size3])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:not[%s];4:size3
'λx.empty(filter(filter(filter(filter(filter(x.s, size2), or[size1,circle]), green), not[circle]), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:size1;4:circle;4:green;4:not[%s];4:circle;4:size1
'λx.apply(or[and[or[size1,or[circle,triangle]],triangle],blue],iota(filter(filter(filter(x.s, and[size1,size2]), triangle), green)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size1;4:or[%s,%s];4:circle;4:triangle;4:triangle;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size2;4:triangle;4:green
'λx.forall(size1,filter(filter(filter(x.s, triangle), size3), size2))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3;4:size2
'λx.forall(size2,filter(filter(filter(x.s, triangle), size2), green))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2;4:green
'λx.apply(and[apply(size-gt,x.o),circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:circle;1:%s.o;2:x
'λx.exists(blue, filter(filter(filter(x.s, blue), size3), or[rectangle,size1]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3;4:or[%s,%s];4:rectangle;4:size1
'λx.apply(green,iota(filter(filter(filter(filter(filter(filter(x.s, blue), and[size3,triangle]), rectangle), yellow), apply(same_size,x.o)), size3)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:size3;4:triangle;4:rectangle;4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3
'λx.apply(triangle,iota(filter(filter(filter(filter(x.s, apply(same_shape,iota(x.s))), triangle), not[rectangle]), or[and[green,or[yellow,size1]],nor[green,not[implies[circle,and[and[nor[size3,blue],green],green]]]]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle;4:not[%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:green;4:or[%s,%s];4:yellow;4:size1;4:nor[%s,%s];4:green;4:not[%s];4:implies[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:size3;4:blue;4:green;4:green
'λx.contains(iota(x.s), filter(filter(filter(x.s, yellow), size1), rectangle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;4:rectangle
'λx.contains(iota(filter(x.s, or[apply(size-lt,iota(x.s)),yellow])), filter(x.s, rectangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[or[blue,apply(size-leq,x.o)],not[triangle]],iota(filter(filter(x.s, size2), or[rectangle,or[blue,size2]])))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:blue;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:rectangle;4:or[%s,%s];4:blue;4:size2
'λx.apply(size1,iota(filter(filter(x.s, yellow), not[yellow])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:yellow
'λx.apply(and[blue,circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:circle;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(x.s, or[rectangle,triangle]), circle), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:triangle;4:circle;4:green
'λx.apply(and[and[or[circle,or[yellow,green]],apply(size-lt,x.o)],blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:circle;4:or[%s,%s];4:yellow;4:green;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:blue;1:iota(%s);3:%s.s;2:x
'λx.forall(not[apply(same_size,x.o)],x.s)'	0:forall(%s,%s);4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(and[rectangle,triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:triangle;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(filter(x.s, yellow), triangle), circle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle;4:circle
'λx.forall(triangle,filter(filter(filter(filter(filter(x.s, size1), green), size3), or[size1,triangle]), green))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green;4:size3;4:or[%s,%s];4:size1;4:triangle;4:green
'λx.contains(iota(x.s), filter(x.s, apply(size-lt,iota(x.s))))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x
'λx.apply(or[green,apply(same_size,iota(x.s))],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(or[and[size3,green],yellow],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size3;4:green;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(x.s, iff[yellow,or[size1,size2]]), or[size3,green])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:yellow;4:or[%s,%s];4:size1;4:size2;4:or[%s,%s];4:size3;4:green
'λx.apply(yellow,iota(filter(filter(x.s, blue), or[yellow,and[size3,circle]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:yellow;4:and[%s,%s];4:size3;4:circle
'λx.apply(and[and[yellow,size2],size3],iota(filter(filter(filter(filter(x.s, size3), green), circle), size1)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:size2;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green;4:circle;4:size1
'λx.empty(filter(filter(filter(filter(x.s, implies[yellow,size3]), yellow), blue), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:yellow;4:size3;4:yellow;4:blue;4:size2
'λx.exists(not[nor[and[and[yellow,yellow],blue],blue]], x.s)'	0:exists(%s, %s);4:not[%s];4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:yellow;4:blue;4:blue;3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(filter(filter(x.s, triangle), circle), not[iff[yellow,or[size2,blue]]]), size1)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle;4:not[%s];4:iff[%s,%s];4:yellow;4:or[%s,%s];4:size2;4:blue;4:size1
'λx.contains(x.o, filter(x.s, or[or[rectangle,iff[blue,or[not[apply(same_shape,x.o)],blue]]],green]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:rectangle;4:iff[%s,%s];4:blue;4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue;4:green
'λx.apply(or[or[rectangle,triangle],nand[size1,and[circle,size2]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:rectangle;4:triangle;4:nand[%s,%s];4:size1;4:and[%s,%s];4:circle;4:size2;1:%s.o;2:x
'λx.apply(nand[and[or[circle,size1],or[yellow,and[triangle,apply(same_size,iota(filter(x.s, green)))]]],and[size2,blue]],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:or[%s,%s];4:circle;4:size1;4:or[%s,%s];4:yellow;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:size2;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(or[green,green],iota(filter(x.s, green)))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.forall(blue,filter(filter(x.s, circle), and[green,green]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:green;4:green
'λx.apply(or[and[nand[size2,size1],triangle],size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:size2;4:size1;4:triangle;4:size3;1:%s.o;2:x
'λx.empty(filter(x.s, implies[circle,size2]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:circle;4:size2
'λx.apply(apply(size-lt,x.o),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size2,and[yellow,circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:yellow;4:circle;1:%s.o;2:x
'λx.forall(size2,filter(filter(x.s, nand[blue,not[circle]]), size1))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:blue;4:not[%s];4:circle;4:size1
'λx.apply(triangle,iota(filter(filter(filter(x.s, size2), green), green)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green;4:green
'λx.apply(not[and[apply(same_shape,iota(x.s)),green]],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.forall(rectangle,filter(x.s, green))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.forall(rectangle,filter(x.s, size1))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(or[and[nand[size1,yellow],apply(same_size,iota(x.s))],or[size1,blue]],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:size1;4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(size2,iota(filter(x.s, iff[green,size3])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:green;4:size3
'λx.apply(triangle,iota(filter(filter(x.s, not[circle]), and[size2,apply(same_shape,x.o)])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(nand[not[or[yellow,blue]],size1],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:not[%s];4:or[%s,%s];4:yellow;4:blue;4:size1;1:%s.o;2:x
'λx.apply(implies[not[apply(same_color,iota(filter(x.s, size1)))],green],iota(filter(x.s, and[and[size2,not[yellow]],rectangle])))'	0:apply(%s,%s);4:implies[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size2;4:not[%s];4:yellow;4:rectangle
'λx.apply(not[rectangle],iota(filter(filter(x.s, nor[rectangle,size3]), and[apply(same_size,iota(filter(x.s, size1))),green])))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:rectangle;4:size3;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green
'λx.apply(and[blue,apply(same_size,iota(filter(filter(filter(filter(x.s, apply(size-leq,x.o)), and[apply(same_color,x.o),rectangle]), and[apply(same_shape,iota(x.s)),rectangle]), and[size2,rectangle])))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:size2;4:rectangle;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(filter(filter(filter(x.s, yellow), size1), nand[size3,blue]), size3), circle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;4:nand[%s,%s];4:size3;4:blue;4:size3;4:circle
'λx.apply(and[and[not[triangle],or[apply(same_shape,iota(filter(x.s, size3))),green]],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:triangle;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green;4:size1;1:%s.o;2:x
'λx.forall(or[size2,triangle],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:size2;4:triangle;3:%s.s;2:x
'λx.forall(blue,filter(x.s, green))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.forall(blue,filter(x.s, size1))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.forall(blue,filter(x.s, size2))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.forall(blue,filter(x.s, size3))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(size1, filter(filter(x.s, apply(same_color,iota(x.s))), size1))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size1
'λx.apply(and[and[green,yellow],blue],iota(filter(x.s, green)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:green;4:yellow;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.exists(green, filter(filter(filter(x.s, rectangle), and[size1,size2]), size3))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:size1;4:size2;4:size3
'λx.apply(not[and[size2,circle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size2;4:circle;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, blue)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.forall(or[not[triangle],green],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:not[%s];4:triangle;4:green;3:%s.s;2:x
'λx.apply(nand[not[circle],size3],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:not[%s];4:circle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(filter(filter(filter(filter(x.s, green), blue), triangle), rectangle), rectangle), rectangle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue;4:triangle;4:rectangle;4:rectangle;4:rectangle
'λx.apply(size2,iota(filter(x.s, nand[and[triangle,blue],yellow])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:and[%s,%s];4:triangle;4:blue;4:yellow
'λx.apply(green,iota(filter(filter(filter(x.s, and[blue,yellow]), blue), triangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:yellow;4:blue;4:triangle
'λx.exists(not[circle], filter(x.s, circle))'	0:exists(%s, %s);4:not[%s];4:circle;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(size1,iota(filter(x.s, or[nand[rectangle,rectangle],triangle])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:nand[%s,%s];4:rectangle;4:rectangle;4:triangle
'λx.apply(and[and[circle,blue],triangle],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:blue;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(circle,iota(filter(filter(x.s, not[iff[size1,green]]), triangle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:iff[%s,%s];4:size1;4:green;4:triangle
'λx.contains(x.o, filter(filter(x.s, and[size2,iff[rectangle,size3]]), and[size1,and[not[green],not[triangle]]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:iff[%s,%s];4:rectangle;4:size3;4:and[%s,%s];4:size1;4:and[%s,%s];4:not[%s];4:green;4:not[%s];4:triangle
'λx.exists(apply(same_shape,x.o), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(and[yellow,size2],iota(filter(x.s, green)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[blue,nor[nand[blue,and[triangle,and[size3,yellow]]],circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:nor[%s,%s];4:nand[%s,%s];4:blue;4:and[%s,%s];4:triangle;4:and[%s,%s];4:size3;4:yellow;4:circle;1:%s.o;2:x
'λx.forall(green,filter(x.s, apply(same_shape,iota(filter(filter(filter(x.s, circle), and[yellow,rectangle]), nand[nor[or[size2,size2],rectangle],blue])))))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:yellow;4:rectangle;4:nand[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:size2;4:size2;4:rectangle;4:blue
'λx.forall(iff[and[yellow,apply(size-gt,x.o)],blue],filter(filter(filter(x.s, nand[blue,blue]), rectangle), triangle))'	0:forall(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:blue;4:blue;4:rectangle;4:triangle
'λx.apply(implies[nand[size1,rectangle],rectangle],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:nand[%s,%s];4:size1;4:rectangle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[not[or[rectangle,rectangle]],blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:or[%s,%s];4:rectangle;4:rectangle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.forall(triangle,filter(x.s, triangle))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.contains(iota(filter(filter(x.s, rectangle), circle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle;3:%s.s;2:x
'λx.apply(blue,iota(filter(x.s, not[not[not[green]]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:not[%s];4:green
'λx.apply(yellow,iota(filter(filter(x.s, circle), and[size3,rectangle])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:size3;4:rectangle
'λx.apply(apply(same_shape,iota(filter(filter(x.s, and[yellow,yellow]), rectangle))),iota(filter(x.s, circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:yellow;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[nor[triangle,nand[and[green,circle],size1]],apply(same_shape,iota(x.s))],iota(filter(filter(x.s, nand[size2,and[apply(same_shape,iota(x.s)),green]]), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:triangle;4:nand[%s,%s];4:and[%s,%s];4:green;4:circle;4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:green;4:blue
'λx.apply(triangle,iota(filter(filter(x.s, implies[size2,size2]), size1)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size2;4:size2;4:size1
'λx.apply(blue,iota(filter(filter(filter(x.s, circle), size3), size3)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3;4:size3
'λx.apply(apply(same_shape,iota(x.s)),iota(filter(filter(x.s, nand[apply(size-gt,x.o),triangle]), size1)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:triangle;4:size1
'λx.apply(and[and[circle,green],triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:green;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(x.s, or[and[size2,apply(same_size,iota(filter(x.s, not[rectangle])))],circle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;4:circle
'λx.apply(nor[yellow,size2],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:yellow;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[yellow,size1],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:yellow;4:size1;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(x.s, size3), rectangle), blue))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle;4:blue
'λx.apply(and[and[or[yellow,rectangle],not[iff[size1,and[yellow,or[rectangle,yellow]]]]],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:yellow;4:rectangle;4:not[%s];4:iff[%s,%s];4:size1;4:and[%s,%s];4:yellow;4:or[%s,%s];4:rectangle;4:yellow;4:circle;1:%s.o;2:x
'λx.apply(nor[and[and[size2,size2],yellow],yellow],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:size2;4:yellow;4:yellow;1:%s.o;2:x
'λx.apply(and[apply(size-geq,iota(filter(x.s, circle))),size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(x.s, apply(same_color,iota(x.s))), size1)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size1
'λx.exists(and[size1,apply(same_color,x.o)], filter(x.s, circle))'	0:exists(%s, %s);4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.exists(and[green,size1], filter(x.s, circle))'	0:exists(%s, %s);4:and[%s,%s];4:green;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.contains(iota(filter(filter(x.s, and[blue,blue]), size1)), filter(filter(filter(x.s, nand[yellow,and[green,triangle]]), size3), size2))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:blue;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:yellow;4:and[%s,%s];4:green;4:triangle;4:size3;4:size2
'λx.apply(triangle,iota(x.s))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(filter(filter(filter(x.s, implies[or[and[triangle,circle],or[or[rectangle,circle],triangle]],and[iff[rectangle,size1],size1]]), rectangle), triangle), blue), not[size2])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:or[%s,%s];4:and[%s,%s];4:triangle;4:circle;4:or[%s,%s];4:or[%s,%s];4:rectangle;4:circle;4:triangle;4:and[%s,%s];4:iff[%s,%s];4:rectangle;4:size1;4:size1;4:rectangle;4:triangle;4:blue;4:not[%s];4:size2
'λx.apply(and[size3,apply(same_shape,x.o)],iota(filter(x.s, nor[iff[triangle,nand[and[size2,rectangle],size2]],triangle])))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:iff[%s,%s];4:triangle;4:nand[%s,%s];4:and[%s,%s];4:size2;4:rectangle;4:size2;4:triangle
'λx.apply(rectangle,iota(filter(filter(x.s, triangle), circle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle
'λx.apply(and[apply(same_color,iota(x.s)),or[and[blue,and[implies[apply(same_color,x.o),and[circle,size2]],or[apply(same_color,x.o),and[green,iff[triangle,rectangle]]]]],blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:circle;4:size2;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:green;4:iff[%s,%s];4:triangle;4:rectangle;4:blue;1:%s.o;2:x
'λx.apply(and[not[and[size2,size2]],rectangle],iota(filter(filter(filter(filter(x.s, size1), yellow), green), circle)))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:size2;4:size2;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow;4:green;4:circle
'λx.apply(blue,iota(filter(filter(x.s, not[triangle]), circle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:circle
'λx.apply(size2,iota(filter(filter(x.s, size1), yellow)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow
'λx.apply(size3,iota(filter(filter(x.s, size3), yellow)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow
'λx.apply(and[not[triangle],nor[nand[and[size2,size1],size1],circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:triangle;4:nor[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:size2;4:size1;4:size1;4:circle;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(x.s, and[or[and[size2,circle],triangle],or[rectangle,size3]]), size3))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size2;4:circle;4:triangle;4:or[%s,%s];4:rectangle;4:size3;4:size3
'λx.apply(and[iff[nand[and[and[size2,blue],and[triangle,yellow]],green],not[green]],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:blue;4:and[%s,%s];4:triangle;4:yellow;4:green;4:not[%s];4:green;4:yellow;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, and[and[yellow,rectangle],circle]), circle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:yellow;4:rectangle;4:circle;4:circle
'λx.apply(triangle,iota(filter(filter(filter(filter(filter(x.s, size1), size2), yellow), apply(same_shape,iota(filter(filter(x.s, not[apply(same_size,x.o)]), rectangle)))), or[or[triangle,triangle],size2])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2;4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:rectangle;4:or[%s,%s];4:or[%s,%s];4:triangle;4:triangle;4:size2
'λx.apply(triangle,iota(filter(filter(x.s, or[not[and[triangle,not[or[blue,circle]]]],size2]), size1)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:triangle;4:not[%s];4:or[%s,%s];4:blue;4:circle;4:size2;4:size1
'λx.exists(implies[size1,rectangle], filter(x.s, circle))'	0:exists(%s, %s);4:implies[%s,%s];4:size1;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[size3,and[yellow,blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:yellow;4:blue;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(filter(x.s, size1), circle), blue)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle;4:blue
'λx.apply(and[size3,size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size3,size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size3,size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(x.s, or[implies[blue,triangle],or[circle,size2]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:implies[%s,%s];4:blue;4:triangle;4:or[%s,%s];4:circle;4:size2
'λx.contains(iota(filter(filter(x.s, green), size1)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1;3:%s.s;2:x
'λx.forall(not[apply(same_shape,iota(filter(filter(x.s, nand[rectangle,and[or[not[size2],size3],green]]), and[green,triangle])))],x.s)'	0:forall(%s,%s);4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:rectangle;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:size2;4:size3;4:green;4:and[%s,%s];4:green;4:triangle;3:%s.s;2:x
'λx.empty(filter(x.s, iff[size2,green]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size2;4:green
'λx.apply(nand[green,rectangle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:green;4:rectangle;1:%s.o;2:x
'λx.apply(implies[yellow,and[size3,or[and[size3,size3],and[not[size3],or[not[and[rectangle,not[circle]]],rectangle]]]]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:yellow;4:and[%s,%s];4:size3;4:or[%s,%s];4:and[%s,%s];4:size3;4:size3;4:and[%s,%s];4:not[%s];4:size3;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:rectangle;4:not[%s];4:circle;4:rectangle;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, blue), size2)), filter(x.s, triangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.exists(and[circle,or[not[green],rectangle]], filter(x.s, and[circle,and[size3,yellow]]))'	0:exists(%s, %s);4:and[%s,%s];4:circle;4:or[%s,%s];4:not[%s];4:green;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:and[%s,%s];4:size3;4:yellow
'λx.apply(and[size1,size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size1,size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size1,size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:size3;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(x.s, yellow), and[circle,or[and[triangle,size2],blue]]), not[size2]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:circle;4:or[%s,%s];4:and[%s,%s];4:triangle;4:size2;4:blue;4:not[%s];4:size2
'λx.apply(or[iff[size1,not[yellow]],triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:iff[%s,%s];4:size1;4:not[%s];4:yellow;4:triangle;1:%s.o;2:x
'λx.apply(or[or[yellow,size3],green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:yellow;4:size3;4:green;1:%s.o;2:x
'λx.forall(size2,filter(x.s, nand[iff[circle,and[apply(same_shape,iota(x.s)),size1]],not[blue]]))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:iff[%s,%s];4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size1;4:not[%s];4:blue
'λx.apply(or[yellow,not[rectangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.apply(or[not[rectangle],and[blue,blue]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:rectangle;4:and[%s,%s];4:blue;4:blue;1:%s.o;2:x
'λx.apply(or[apply(size-geq,x.o),rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:rectangle;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, size3), rectangle), apply(same_color,iota(filter(x.s, yellow)))))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.exists(circle, filter(filter(x.s, triangle), size1))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size1
'λx.empty(filter(filter(x.s, blue), not[not[yellow]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:not[%s];4:yellow
'λx.apply(yellow,iota(filter(x.s, and[rectangle,triangle])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:triangle
'λx.apply(blue,iota(filter(filter(x.s, not[not[rectangle]]), nand[yellow,size1])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:rectangle;4:nand[%s,%s];4:yellow;4:size1
'λx.empty(filter(x.s, not[nor[iff[not[yellow],yellow],not[and[circle,yellow]]]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:nor[%s,%s];4:iff[%s,%s];4:not[%s];4:yellow;4:yellow;4:not[%s];4:and[%s,%s];4:circle;4:yellow
'λx.apply(and[implies[and[size2,size3],or[triangle,and[green,circle]]],and[not[apply(same_shape,iota(filter(filter(x.s, triangle), green)))],yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:size2;4:size3;4:or[%s,%s];4:triangle;4:and[%s,%s];4:green;4:circle;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green;4:yellow;1:%s.o;2:x
'λx.apply(and[blue,and[blue,and[or[apply(size-lt,iota(x.s)),not[yellow]],triangle]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:blue;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:not[%s];4:yellow;4:triangle;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(filter(filter(x.s, not[green]), green), size2), and[nor[rectangle,triangle],yellow]), not[yellow])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:green;4:size2;4:and[%s,%s];4:nor[%s,%s];4:rectangle;4:triangle;4:yellow;4:not[%s];4:yellow;3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(x.s, size1), not[and[and[size2,not[size3]],and[circle,or[circle,rectangle]]]]), rectangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:not[%s];4:size3;4:and[%s,%s];4:circle;4:or[%s,%s];4:circle;4:rectangle;4:rectangle
'λx.apply(and[green,or[apply(size-leq,x.o),iff[yellow,circle]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:iff[%s,%s];4:yellow;4:circle;1:%s.o;2:x
'λx.apply(nand[and[yellow,green],rectangle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:yellow;4:green;4:rectangle;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, size1), triangle), not[size2]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle;4:not[%s];4:size2
'λx.apply(and[green,triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:triangle;1:%s.o;2:x
'λx.apply(and[size2,size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size2,size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size2,size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(and[rectangle,iff[blue,rectangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:iff[%s,%s];4:blue;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(x.s, blue), yellow)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow
'λx.apply(circle,iota(filter(x.s, and[and[size2,rectangle],circle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size2;4:rectangle;4:circle
'λx.exists(not[or[size2,size3]], filter(filter(x.s, apply(same_shape,iota(filter(x.s, or[yellow,rectangle])))), circle))'	0:exists(%s, %s);4:not[%s];4:or[%s,%s];4:size2;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:rectangle;4:circle
'λx.contains(x.o, filter(filter(x.s, or[green,apply(same_color,x.o)]), blue))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue
'λx.exists(circle, x.s)'	0:exists(%s, %s);4:circle;3:%s.s;2:x
'λx.apply(or[iff[size3,or[size1,blue]],and[blue,green]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:iff[%s,%s];4:size3;4:or[%s,%s];4:size1;4:blue;4:and[%s,%s];4:blue;4:green;1:%s.o;2:x
'λx.apply(iff[green,apply(same_size,iota(x.s))],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(triangle,iota(filter(x.s, and[triangle,rectangle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:rectangle
'λx.apply(or[green,size3],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(green,iota(filter(x.s, circle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[nand[green,size2],rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:green;4:size2;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(filter(x.s, size1), yellow), not[and[size1,size2]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow;4:not[%s];4:and[%s,%s];4:size1;4:size2
'λx.apply(nor[size1,and[size1,green]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size1;4:and[%s,%s];4:size1;4:green;1:%s.o;2:x
'λx.apply(or[blue,green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:green;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(filter(filter(x.s, blue), triangle), rectangle), rectangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle;4:rectangle;4:rectangle
'λx.apply(apply(same_color,x.o),iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.exists(and[or[and[size2,blue],rectangle],size2], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size2;4:blue;4:rectangle;4:size2;3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(filter(x.s, iff[rectangle,size1]), size2), yellow), rectangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:rectangle;4:size1;4:size2;4:yellow;4:rectangle
'λx.apply(and[and[size1,or[rectangle,circle]],and[blue,blue]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:rectangle;4:circle;4:and[%s,%s];4:blue;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[blue,apply(size-leq,x.o)],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:nor[%s,%s];4:blue;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.exists(or[size1,apply(same_shape,iota(x.s))], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(x.s, yellow), green)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green
'λx.apply(or[blue,not[yellow]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:not[%s];4:yellow;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(x.s, or[size1,triangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:triangle
'λx.apply(blue,iota(filter(x.s, apply(same_shape,iota(x.s)))))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.forall(iff[apply(size-geq,x.o),and[rectangle,green]],x.s)'	0:forall(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:and[%s,%s];4:rectangle;4:green;3:%s.s;2:x
'λx.apply(and[yellow,apply(same_color,iota(x.s))],iota(filter(filter(filter(x.s, circle), nand[and[size2,blue],green]), and[yellow,blue])))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:nand[%s,%s];4:and[%s,%s];4:size2;4:blue;4:green;4:and[%s,%s];4:yellow;4:blue
'λx.apply(and[yellow,or[green,and[size2,and[rectangle,size2]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:or[%s,%s];4:green;4:and[%s,%s];4:size2;4:and[%s,%s];4:rectangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.exists(green, filter(filter(x.s, yellow), rectangle))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle
'λx.apply(or[size3,circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:circle;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, triangle), and[and[size1,blue],size1]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:and[%s,%s];4:size1;4:blue;4:size1
'λx.apply(iff[and[rectangle,circle],yellow],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:rectangle;4:circle;4:yellow;1:%s.o;2:x
'λx.exists(or[and[triangle,not[size2]],yellow], filter(filter(filter(x.s, and[and[triangle,not[size1]],yellow]), yellow), circle))'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:triangle;4:not[%s];4:size2;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:triangle;4:not[%s];4:size1;4:yellow;4:yellow;4:circle
'λx.empty(filter(filter(x.s, green), or[apply(same_color,iota(filter(x.s, yellow))),green]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green
'λx.apply(and[apply(same_size,x.o),triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle;1:%s.o;2:x
'λx.exists(circle, filter(filter(filter(x.s, and[apply(same_size,x.o),yellow]), or[iff[size3,green],rectangle]), blue))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow;4:or[%s,%s];4:iff[%s,%s];4:size3;4:green;4:rectangle;4:blue
'λx.apply(nand[yellow,implies[size2,rectangle]],iota(filter(filter(x.s, blue), circle)))'	0:apply(%s,%s);4:nand[%s,%s];4:yellow;4:implies[%s,%s];4:size2;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle
'λx.apply(and[rectangle,size1],iota(filter(x.s, or[triangle,size3])))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:size3
'λx.exists(size3, filter(filter(x.s, size2), and[rectangle,apply(same_size,x.o)]))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(and[not[apply(size-geq,iota(filter(filter(x.s, triangle), and[green,or[size3,apply(size-gt,x.o)]])))],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:green;4:or[%s,%s];4:size3;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:green;1:%s.o;2:x
'λx.apply(apply(same_color,iota(filter(filter(x.s, or[not[green],blue]), blue))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:green;4:blue;4:blue;1:%s.o;2:x
'λx.apply(and[circle,size1],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.contains(x.o, filter(filter(filter(filter(filter(x.s, size1), size1), circle), iff[green,rectangle]), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1;4:circle;4:iff[%s,%s];4:green;4:rectangle;4:green
'λx.apply(and[apply(size-leq,x.o),size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(or[not[circle],rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:circle;4:rectangle;1:%s.o;2:x
'λx.apply(and[or[size1,size2],and[rectangle,size2]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size1;4:size2;4:and[%s,%s];4:rectangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.exists(or[or[rectangle,not[yellow]],green], filter(filter(filter(x.s, yellow), and[size2,blue]), triangle))'	0:exists(%s, %s);4:or[%s,%s];4:or[%s,%s];4:rectangle;4:not[%s];4:yellow;4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:size2;4:blue;4:triangle
'λx.apply(blue,iota(filter(filter(x.s, apply(same_shape,iota(filter(filter(filter(x.s, green), apply(size-gt,iota(filter(x.s, and[or[size3,rectangle],and[triangle,size2]])))), nand[circle,circle])))), blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:size3;4:rectangle;4:and[%s,%s];4:triangle;4:size2;4:nand[%s,%s];4:circle;4:circle;4:blue
'λx.forall(and[triangle,size3],filter(x.s, yellow))'	0:forall(%s,%s);4:and[%s,%s];4:triangle;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.contains(x.o, filter(x.s, and[green,circle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:circle
'λx.contains(iota(filter(filter(x.s, size2), circle)), filter(x.s, rectangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(not[size1],iota(filter(filter(filter(filter(x.s, green), not[and[green,blue]]), green), yellow)))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:and[%s,%s];4:green;4:blue;4:green;4:yellow
'λx.apply(not[apply(same_size,iota(x.s))],iota(filter(x.s, apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(x.s, size3), size1)), filter(filter(x.s, size1), apply(same_color,iota(filter(filter(filter(filter(x.s, green), size2), size1), green)))))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size2;4:size1;4:green
'λx.apply(green,iota(filter(filter(filter(filter(filter(x.s, yellow), size3), size2), circle), circle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size3;4:size2;4:circle;4:circle
'λx.apply(not[yellow],iota(filter(x.s, apply(size-leq,x.o))))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:%s.o;2:x
'λx.apply(and[not[size3],not[not[green]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size3;4:not[%s];4:not[%s];4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(filter(filter(x.s, size2), size1), size1), size1)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1;4:size1;4:size1
'λx.forall(apply(size-geq,iota(x.s)),filter(x.s, implies[size1,green]))'	0:forall(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size1;4:green
'λx.exists(apply(size-leq,iota(x.s)), filter(filter(filter(x.s, size1), blue), circle))'	0:exists(%s, %s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue;4:circle
'λx.apply(or[or[size1,circle],green],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:size1;4:circle;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size3,size3],iota(filter(x.s, apply(size-geq,iota(x.s)))))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(x.s, yellow), size2)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2
'λx.apply(size1,iota(filter(filter(x.s, yellow), size2)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2
'λx.apply(size1,iota(filter(filter(x.s, yellow), size1)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1
'λx.apply(and[and[or[apply(same_shape,iota(x.s)),and[size2,not[apply(same_color,x.o)]]],rectangle],size2],iota(filter(x.s, and[apply(same_shape,x.o),not[or[and[triangle,circle],not[circle]]]])))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:triangle;4:circle;4:not[%s];4:circle
'λx.apply(or[and[size1,and[size1,and[yellow,nand[yellow,triangle]]]],size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:size1;4:and[%s,%s];4:yellow;4:nand[%s,%s];4:yellow;4:triangle;4:size1;1:%s.o;2:x
'λx.apply(nor[circle,green],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:circle;4:green;1:%s.o;2:x
'λx.empty(filter(x.s, or[triangle,apply(same_color,iota(x.s))]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(and[rectangle,and[implies[implies[apply(same_color,iota(filter(filter(filter(filter(filter(x.s, and[size3,and[and[blue,rectangle],size2]]), green), blue), not[nand[triangle,not[yellow]]]), not[circle]))),circle],green],implies[and[green,circle],and[circle,rectangle]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:implies[%s,%s];4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:blue;4:rectangle;4:size2;4:green;4:blue;4:not[%s];4:nand[%s,%s];4:triangle;4:not[%s];4:yellow;4:not[%s];4:circle;4:circle;4:green;4:implies[%s,%s];4:and[%s,%s];4:green;4:circle;4:and[%s,%s];4:circle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(x.s, triangle), circle), rectangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle;4:rectangle
'λx.apply(blue,iota(filter(filter(x.s, size2), blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue
'λx.apply(or[size3,and[nand[apply(same_color,x.o),triangle],and[implies[green,green],blue]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:and[%s,%s];4:nand[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;4:and[%s,%s];4:implies[%s,%s];4:green;4:green;4:blue;1:%s.o;2:x
'λx.apply(iff[yellow,apply(same_size,iota(x.s))],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:iff[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(triangle,iota(filter(x.s, nor[or[or[size3,not[size3]],rectangle],blue])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:or[%s,%s];4:or[%s,%s];4:size3;4:not[%s];4:size3;4:rectangle;4:blue
'λx.apply(and[or[apply(same_size,iota(filter(x.s, apply(same_size,iota(filter(filter(filter(x.s, implies[rectangle,apply(same_size,iota(x.s))]), not[rectangle]), not[size2])))))),yellow],green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:not[%s];4:rectangle;4:not[%s];4:size2;4:yellow;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(or[triangle,apply(same_size,iota(filter(filter(x.s, and[triangle,apply(size-leq,iota(x.s))]), and[size2,yellow])))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:yellow;1:%s.o;2:x
'λx.exists(not[nand[and[size1,green],green]], filter(x.s, blue))'	0:exists(%s, %s);4:not[%s];4:nand[%s,%s];4:and[%s,%s];4:size1;4:green;4:green;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[and[size2,and[triangle,apply(same_shape,x.o)]],green],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(or[and[blue,blue],size2],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:blue;4:blue;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(x.s, apply(same_size,x.o))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.exists(iff[or[apply(same_size,x.o),not[size2]],size2], x.s)'	0:exists(%s, %s);4:iff[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:not[%s];4:size2;4:size2;3:%s.s;2:x
'λx.apply(size3,iota(filter(x.s, or[and[yellow,blue],and[rectangle,and[rectangle,iff[blue,size3]]]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:yellow;4:blue;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:rectangle;4:iff[%s,%s];4:blue;4:size3
'λx.forall(circle,filter(filter(filter(x.s, apply(same_color,iota(x.s))), rectangle), iff[or[rectangle,size3],blue]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:rectangle;4:iff[%s,%s];4:or[%s,%s];4:rectangle;4:size3;4:blue
'λx.forall(size2,filter(x.s, or[triangle,apply(same_color,iota(x.s))]))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size2,and[yellow,blue]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:and[%s,%s];4:yellow;4:blue;1:%s.o;2:x
'λx.apply(and[triangle,blue],iota(filter(x.s, and[and[rectangle,yellow],rectangle])))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:yellow;4:rectangle
'λx.apply(nor[blue,yellow],iota(filter(filter(x.s, and[circle,size2]), size1)))'	0:apply(%s,%s);4:nor[%s,%s];4:blue;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size2;4:size1
'λx.apply(triangle,iota(filter(x.s, not[green])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green
'λx.apply(nand[triangle,size1],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[green,size2],iota(filter(filter(x.s, triangle), size3)))'	0:apply(%s,%s);4:nand[%s,%s];4:green;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3
'λx.apply(and[apply(same_color,iota(x.s)),blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:blue;1:iota(%s);3:%s.s;2:x
'λx.forall(apply(size-gt,x.o),filter(filter(filter(x.s, and[green,circle]), size1), yellow))'	0:forall(%s,%s);4:apply(%s,%s);5:size-gt;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:circle;4:size1;4:yellow
'λx.exists(nor[nor[yellow,size1],apply(same_size,iota(x.s))], x.s)'	0:exists(%s, %s);4:nor[%s,%s];4:nor[%s,%s];4:yellow;4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.exists(or[not[not[size2]],triangle], filter(x.s, rectangle))'	0:exists(%s, %s);4:or[%s,%s];4:not[%s];4:not[%s];4:size2;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(or[and[size3,yellow],size3],iota(filter(filter(x.s, size1), circle)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size3;4:yellow;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle
'λx.apply(apply(same_size,iota(filter(x.s, and[or[size2,yellow],apply(same_color,iota(x.s))]))),iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:size2;4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(yellow,iota(filter(filter(x.s, circle), not[triangle])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:triangle
'λx.apply(implies[blue,blue],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:blue;4:blue;1:%s.o;2:x
'λx.forall(apply(same_color,x.o),filter(x.s, implies[and[green,and[green,yellow]],yellow]))'	0:forall(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:green;4:yellow;4:yellow
'λx.apply(and[rectangle,and[triangle,size3]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:triangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.exists(rectangle, filter(filter(filter(x.s, size3), yellow), size2))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow;4:size2
'λx.exists(blue, filter(x.s, and[and[blue,circle],rectangle]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:blue;4:circle;4:rectangle
'λx.apply(and[size1,or[yellow,size3]],iota(filter(filter(filter(x.s, or[size1,blue]), triangle), and[circle,nor[implies[size2,or[rectangle,or[apply(same_shape,x.o),rectangle]]],green]])))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:or[%s,%s];4:yellow;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:blue;4:triangle;4:and[%s,%s];4:circle;4:nor[%s,%s];4:implies[%s,%s];4:size2;4:or[%s,%s];4:rectangle;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle;4:green
'λx.apply(and[size2,and[or[triangle,size1],and[apply(size-leq,x.o),rectangle]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:or[%s,%s];4:triangle;4:size1;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(filter(filter(filter(x.s, green), and[or[or[rectangle,size1],iff[triangle,yellow]],size2]), blue), apply(size-geq,iota(x.s))), size3), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:rectangle;4:size1;4:iff[%s,%s];4:triangle;4:yellow;4:size2;4:blue;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:size3;4:size2
'λx.apply(rectangle,iota(filter(filter(x.s, yellow), and[nand[rectangle,not[not[rectangle]]],nor[size1,size1]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:nand[%s,%s];4:rectangle;4:not[%s];4:not[%s];4:rectangle;4:nor[%s,%s];4:size1;4:size1
'λx.apply(not[yellow],iota(filter(filter(x.s, apply(same_shape,x.o)), or[size1,size1])))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:size1;4:size1
'λx.apply(apply(same_shape,iota(filter(x.s, or[size2,and[blue,circle]]))),iota(filter(filter(x.s, rectangle), blue)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:and[%s,%s];4:blue;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue
'λx.apply(apply(same_size,iota(filter(filter(x.s, circle), circle))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.exists(blue, filter(filter(x.s, size2), and[circle,yellow]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:circle;4:yellow
'λx.apply(or[size1,apply(same_size,iota(filter(filter(x.s, blue), triangle)))],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[circle,and[and[green,green],green]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:green;4:green;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(filter(x.s, rectangle), size1), green)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1;4:green
'λx.apply(green,iota(filter(filter(x.s, triangle), triangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:triangle
'λx.forall(not[rectangle],filter(filter(x.s, rectangle), not[rectangle]))'	0:forall(%s,%s);4:not[%s];4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:rectangle
'λx.forall(iff[size3,size2],x.s)'	0:forall(%s,%s);4:iff[%s,%s];4:size3;4:size2;3:%s.s;2:x
'λx.apply(or[rectangle,size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:size2;1:%s.o;2:x
'λx.apply(or[rectangle,size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:size1;1:%s.o;2:x
'λx.apply(and[size2,circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:circle;1:%s.o;2:x
'λx.apply(nand[yellow,triangle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:yellow;4:triangle;1:%s.o;2:x
'λx.apply(and[yellow,size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[yellow,size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(and[yellow,size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:size2;1:iota(%s);3:%s.s;2:x
'λx.exists(and[rectangle,rectangle], filter(x.s, apply(same_color,x.o)))'	0:exists(%s, %s);4:and[%s,%s];4:rectangle;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(filter(filter(filter(x.s, apply(same_shape,x.o)), yellow), size3), apply(same_color,iota(filter(x.s, size2)))), and[and[yellow,yellow],nor[or[yellow,or[rectangle,triangle]],rectangle]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow;4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:and[%s,%s];4:yellow;4:yellow;4:nor[%s,%s];4:or[%s,%s];4:yellow;4:or[%s,%s];4:rectangle;4:triangle;4:rectangle
'λx.empty(filter(filter(x.s, green), and[size1,size3]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:size1;4:size3
'λx.apply(circle,iota(filter(filter(x.s, circle), iff[green,iff[apply(size-leq,iota(x.s)),or[and[blue,size1],not[yellow]]]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:iff[%s,%s];4:green;4:iff[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:blue;4:size1;4:not[%s];4:yellow
'λx.apply(not[apply(size-gt,x.o)],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(x.s, triangle), triangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:triangle
'λx.exists(size1, filter(filter(x.s, not[rectangle]), not[triangle]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;4:not[%s];4:triangle
'λx.apply(rectangle,iota(filter(x.s, or[apply(same_size,iota(x.s)),and[and[triangle,size2],size1]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:triangle;4:size2;4:size1
'λx.forall(and[implies[circle,yellow],apply(same_color,x.o)],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:circle;4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:%s.s;2:x
'λx.forall(not[size2],filter(filter(filter(filter(filter(x.s, triangle), nand[apply(same_shape,iota(x.s)),circle]), size2), blue), rectangle))'	0:forall(%s,%s);4:not[%s];4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle;4:size2;4:blue;4:rectangle
'λx.apply(and[size1,implies[green,size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:implies[%s,%s];4:green;4:size1;1:%s.o;2:x
'λx.apply(or[green,size2],iota(filter(x.s, apply(same_color,x.o))))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(not[and[size2,triangle]],iota(filter(filter(filter(filter(x.s, not[circle]), and[green,rectangle]), and[size1,triangle]), rectangle)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size2;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:and[%s,%s];4:green;4:rectangle;4:and[%s,%s];4:size1;4:triangle;4:rectangle
'λx.apply(apply(size-lt,iota(x.s)),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(filter(x.s, rectangle), not[nor[and[or[and[size1,and[green,green]],and[and[triangle,size2],rectangle]],and[circle,size1]],rectangle]]), nand[or[yellow,circle],size2])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:nor[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:green;4:green;4:and[%s,%s];4:and[%s,%s];4:triangle;4:size2;4:rectangle;4:and[%s,%s];4:circle;4:size1;4:rectangle;4:nand[%s,%s];4:or[%s,%s];4:yellow;4:circle;4:size2
'λx.forall(or[blue,triangle],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:blue;4:triangle;3:%s.s;2:x
'λx.apply(green,iota(filter(filter(x.s, size3), apply(size-geq,iota(filter(filter(filter(x.s, not[green]), not[circle]), yellow))))))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:not[%s];4:circle;4:yellow
'λx.exists(and[yellow,apply(same_shape,x.o)], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.exists(apply(same_size,iota(filter(filter(x.s, yellow), and[green,size2]))), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:green;4:size2;3:%s.s;2:x
'λx.apply(or[and[not[size2],yellow],nand[apply(size-leq,x.o),size3]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:not[%s];4:size2;4:yellow;4:nand[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[blue,apply(same_size,x.o)],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, apply(same_shape,iota(x.s))))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(x.s, and[triangle,blue])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:blue
'λx.forall(and[rectangle,and[yellow,nor[apply(same_shape,iota(filter(x.s, and[circle,triangle]))),green]]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:yellow;4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:triangle;4:green;3:%s.s;2:x
'λx.contains(iota(x.s), filter(filter(x.s, nand[rectangle,and[or[not[size2],size3],green]]), and[green,triangle]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:rectangle;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:size2;4:size3;4:green;4:and[%s,%s];4:green;4:triangle
'λx.apply(apply(same_shape,iota(filter(filter(filter(x.s, blue), apply(same_color,iota(x.s))), rectangle))),iota(filter(filter(filter(x.s, circle), size3), size3)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3;4:size3
'λx.apply(or[or[or[size2,not[and[size1,green]]],yellow],triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:size2;4:not[%s];4:and[%s,%s];4:size1;4:green;4:yellow;4:triangle;1:%s.o;2:x
'λx.apply(apply(size-leq,x.o),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(x.s, not[size2])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2
'λx.apply(not[and[size2,blue]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size2;4:blue;1:%s.o;2:x
'λx.apply(and[blue,or[size2,size2]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:or[%s,%s];4:size2;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[circle,or[size3,and[blue,triangle]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:or[%s,%s];4:size3;4:and[%s,%s];4:blue;4:triangle;1:%s.o;2:x
'λx.apply(or[not[not[apply(same_color,x.o)]],or[or[size3,and[green,blue]],green]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:or[%s,%s];4:or[%s,%s];4:size3;4:and[%s,%s];4:green;4:blue;4:green;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(filter(x.s, size3), size3))),iota(filter(x.s, size3)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(iff[apply(size-gt,iota(x.s)),blue],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(filter(x.s, green), blue), green)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue;4:green
'λx.apply(and[and[triangle,triangle],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:triangle;4:blue;1:%s.o;2:x
'λx.empty(filter(filter(x.s, size3), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle
'λx.empty(filter(filter(x.s, size1), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle
'λx.apply(or[triangle,green],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(or[iff[yellow,yellow],green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:iff[%s,%s];4:yellow;4:yellow;4:green;1:%s.o;2:x
'λx.apply(or[rectangle,and[blue,or[and[size2,not[apply(same_size,iota(x.s))]],size2]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:and[%s,%s];4:blue;4:or[%s,%s];4:and[%s,%s];4:size2;4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size2;1:%s.o;2:x
'λx.apply(and[size2,yellow],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[not[triangle],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:triangle;4:circle;1:%s.o;2:x
'λx.apply(and[apply(same_color,iota(x.s)),green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:green;1:%s.o;2:x
'λx.exists(triangle, filter(filter(filter(x.s, green), apply(same_color,iota(filter(filter(x.s, and[and[triangle,nor[or[rectangle,and[triangle,yellow]],triangle]],apply(same_size,iota(filter(x.s, size3)))]), circle)))), blue))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:triangle;4:nor[%s,%s];4:or[%s,%s];4:rectangle;4:and[%s,%s];4:triangle;4:yellow;4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle;4:blue
'λx.apply(and[apply(size-lt,x.o),not[and[triangle,or[blue,size2]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:triangle;4:or[%s,%s];4:blue;4:size2;1:%s.o;2:x
'λx.apply(apply(same_shape,x.o),iota(filter(filter(filter(filter(x.s, rectangle), yellow), triangle), triangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:yellow;4:triangle;4:triangle
'λx.apply(not[and[apply(same_size,x.o),and[size2,blue]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:size2;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size1,not[triangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:not[%s];4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[rectangle,apply(same_size,x.o)],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, implies[size3,implies[size2,size2]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size3;4:implies[%s,%s];4:size2;4:size2
'λx.exists(and[and[rectangle,size2],and[nor[or[yellow,size2],size2],green]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size2;4:and[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:yellow;4:size2;4:size2;4:green;3:%s.s;2:x
'λx.apply(rectangle,iota(filter(x.s, not[green])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green
'λx.apply(nor[rectangle,circle],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:rectangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(filter(x.s, size3), size3), yellow)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3;4:yellow
'λx.contains(iota(filter(x.s, nand[circle,nand[apply(same_color,x.o),apply(same_shape,iota(filter(x.s, circle)))]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:circle;4:nand[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;3:%s.s;2:x
'λx.apply(or[size1,or[and[not[blue],circle],size2]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:blue;4:circle;4:size2;1:%s.o;2:x
'λx.forall(nor[not[not[and[yellow,yellow]]],not[size1]],filter(x.s, rectangle))'	0:forall(%s,%s);4:nor[%s,%s];4:not[%s];4:not[%s];4:and[%s,%s];4:yellow;4:yellow;4:not[%s];4:size1;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[triangle,rectangle],iota(filter(filter(filter(filter(x.s, rectangle), or[size1,circle]), iff[size2,not[circle]]), circle)))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:or[%s,%s];4:size1;4:circle;4:iff[%s,%s];4:size2;4:not[%s];4:circle;4:circle
'λx.apply(iff[and[implies[or[apply(size-lt,iota(filter(filter(filter(x.s, size3), triangle), rectangle))),green],not[size3]],size3],rectangle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle;4:rectangle;4:green;4:not[%s];4:size3;4:size3;4:rectangle;1:%s.o;2:x
'λx.apply(and[triangle,not[circle]],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(size1,iota(filter(filter(x.s, and[and[triangle,blue],implies[size1,circle]]), and[blue,blue])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:triangle;4:blue;4:implies[%s,%s];4:size1;4:circle;4:and[%s,%s];4:blue;4:blue
'λx.contains(x.o, filter(x.s, or[and[and[size1,not[apply(same_size,iota(filter(filter(x.s, apply(size-gt,iota(x.s))), blue)))]],and[green,not[size2]]],apply(same_shape,x.o)]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:green;4:not[%s];4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.forall(and[green,yellow],filter(x.s, and[size2,yellow]))'	0:forall(%s,%s);4:and[%s,%s];4:green;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:yellow
'λx.apply(and[or[apply(same_shape,iota(filter(filter(x.s, yellow), yellow))),green],blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:yellow;4:green;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(or[yellow,triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:triangle;1:%s.o;2:x
'λx.apply(and[iff[apply(same_color,iota(x.s)),size2],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size2;4:size2;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, not[size1])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1
'λx.apply(not[or[not[size3],size3]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:not[%s];4:size3;4:size3;1:%s.o;2:x
'λx.apply(and[blue,or[triangle,size1]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:or[%s,%s];4:triangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.exists(blue, filter(x.s, size2))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.exists(blue, filter(x.s, size3))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(not[iff[not[nor[and[not[yellow],iff[and[size1,size1],rectangle]],apply(size-geq,x.o)]],circle]],iota(filter(filter(x.s, apply(same_color,x.o)), blue)))'	0:apply(%s,%s);4:not[%s];4:iff[%s,%s];4:not[%s];4:nor[%s,%s];4:and[%s,%s];4:not[%s];4:yellow;4:iff[%s,%s];4:and[%s,%s];4:size1;4:size1;4:rectangle;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue
'λx.apply(not[apply(same_color,iota(x.s))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(and[green,rectangle],iota(filter(filter(filter(filter(x.s, size1), rectangle), triangle), rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle;4:triangle;4:rectangle
'λx.apply(not[not[size3]],iota(filter(filter(x.s, implies[or[circle,size3],size1]), and[and[triangle,green],size2])))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:or[%s,%s];4:circle;4:size3;4:size1;4:and[%s,%s];4:and[%s,%s];4:triangle;4:green;4:size2
'λx.contains(iota(filter(x.s, and[not[blue],blue])), filter(x.s, size3))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:blue;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.contains(x.o, filter(filter(filter(x.s, or[size1,rectangle]), blue), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:rectangle;4:blue;4:green
'λx.apply(or[and[or[not[size2],or[yellow,size3]],and[size1,rectangle]],size2],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:not[%s];4:size2;4:or[%s,%s];4:yellow;4:size3;4:and[%s,%s];4:size1;4:rectangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, not[size2]), and[blue,blue])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:and[%s,%s];4:blue;4:blue
'λx.apply(and[or[size1,size1],and[circle,rectangle]],iota(filter(filter(x.s, not[size1]), size2)))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size1;4:size1;4:and[%s,%s];4:circle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:size2
'λx.apply(size3,iota(filter(filter(filter(filter(x.s, rectangle), and[circle,green]), apply(same_size,iota(filter(x.s, size3)))), size1)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:circle;4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size1
'λx.apply(and[implies[apply(same_shape,iota(filter(filter(filter(x.s, triangle), size1), circle))),blue],triangle],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size1;4:circle;4:blue;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[blue,yellow],iota(filter(filter(x.s, size3), apply(same_size,iota(filter(filter(x.s, and[size2,nor[rectangle,green]]), blue))))))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:nor[%s,%s];4:rectangle;4:green;4:blue
'λx.apply(and[size1,and[size1,or[implies[and[or[or[apply(same_shape,x.o),yellow],blue],size3],iff[apply(size-gt,iota(x.s)),rectangle]],size3]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:and[%s,%s];4:size1;4:or[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow;4:blue;4:size3;4:iff[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:rectangle;4:size3;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, and[circle,and[and[size1,size2],and[not[or[and[blue,size2],size2]],or[circle,rectangle]]]]), or[yellow,or[nand[size2,size3],implies[or[rectangle,size2],green]]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:size1;4:size2;4:and[%s,%s];4:not[%s];4:or[%s,%s];4:and[%s,%s];4:blue;4:size2;4:size2;4:or[%s,%s];4:circle;4:rectangle;4:or[%s,%s];4:yellow;4:or[%s,%s];4:nand[%s,%s];4:size2;4:size3;4:implies[%s,%s];4:or[%s,%s];4:rectangle;4:size2;4:green
'λx.exists(nand[rectangle,rectangle], filter(filter(filter(filter(x.s, not[and[and[green,green],size3]]), size1), circle), triangle))'	0:exists(%s, %s);4:nand[%s,%s];4:rectangle;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:green;4:green;4:size3;4:size1;4:circle;4:triangle
'λx.apply(and[triangle,not[circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:not[%s];4:circle;1:%s.o;2:x
'λx.apply(or[and[and[yellow,nor[not[size1],blue]],implies[not[yellow],circle]],yellow],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:nor[%s,%s];4:not[%s];4:size1;4:blue;4:implies[%s,%s];4:not[%s];4:yellow;4:circle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[iff[rectangle,yellow],or[not[apply(size-lt,x.o)],green]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:iff[%s,%s];4:rectangle;4:yellow;4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(not[rectangle],iota(filter(filter(filter(x.s, triangle), size3), or[size3,yellow])))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3;4:or[%s,%s];4:size3;4:yellow
'λx.apply(and[and[apply(size-leq,x.o),iff[rectangle,blue]],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:iff[%s,%s];4:rectangle;4:blue;4:size1;1:%s.o;2:x
'λx.apply(size2,iota(filter(x.s, and[and[and[or[size3,yellow],size2],not[circle]],not[implies[rectangle,triangle]]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size3;4:yellow;4:size2;4:not[%s];4:circle;4:not[%s];4:implies[%s,%s];4:rectangle;4:triangle
'λx.apply(rectangle,iota(filter(x.s, or[rectangle,size2])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:size2
'λx.apply(or[and[triangle,size2],not[circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:triangle;4:size2;4:not[%s];4:circle;1:%s.o;2:x
'λx.apply(iff[and[triangle,green],rectangle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:triangle;4:green;4:rectangle;1:%s.o;2:x
'λx.apply(triangle,iota(filter(x.s, and[green,and[size3,yellow]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:and[%s,%s];4:size3;4:yellow
'λx.apply(yellow,iota(filter(x.s, and[and[blue,and[or[size3,nor[triangle,circle]],size3]],rectangle])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:or[%s,%s];4:size3;4:nor[%s,%s];4:triangle;4:circle;4:size3;4:rectangle
'λx.apply(iff[size1,green],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:size1;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[or[or[size3,or[apply(same_size,iota(x.s)),rectangle]],size3],size2],iota(filter(filter(filter(filter(filter(filter(filter(filter(x.s, blue), apply(size-gt,iota(filter(x.s, yellow)))), triangle), size1), and[rectangle,circle]), size3), rectangle), size2)))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:size3;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:rectangle;4:size3;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle;4:size1;4:and[%s,%s];4:rectangle;4:circle;4:size3;4:rectangle;4:size2
'λx.apply(blue,iota(filter(x.s, apply(same_color,x.o))))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(filter(x.s, size1), circle), yellow), size2), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle;4:yellow;4:size2;4:triangle
'λx.apply(implies[nor[or[circle,and[blue,size3]],not[rectangle]],blue],iota(filter(x.s, and[rectangle,apply(size-geq,x.o)])))'	0:apply(%s,%s);4:implies[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:circle;4:and[%s,%s];4:blue;4:size3;4:not[%s];4:rectangle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(x.s, yellow), or[yellow,blue])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:yellow;4:blue
'λx.forall(green,filter(x.s, yellow))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(or[green,rectangle],iota(filter(filter(x.s, and[size3,size2]), nor[triangle,and[and[size3,green],yellow]])))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:size2;4:nor[%s,%s];4:triangle;4:and[%s,%s];4:and[%s,%s];4:size3;4:green;4:yellow
'λx.apply(or[yellow,circle],iota(filter(filter(filter(filter(filter(filter(x.s, size1), apply(same_size,iota(filter(x.s, size2)))), rectangle), size2), or[size2,and[yellow,size1]]), size1)))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle;4:size2;4:or[%s,%s];4:size2;4:and[%s,%s];4:yellow;4:size1;4:size1
'λx.apply(apply(same_size,iota(filter(filter(filter(x.s, size1), and[rectangle,circle]), size3))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:rectangle;4:circle;4:size3;1:%s.o;2:x
'λx.empty(filter(x.s, not[nor[or[not[circle],size2],size3]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:nor[%s,%s];4:or[%s,%s];4:not[%s];4:circle;4:size2;4:size3
'λx.apply(or[and[triangle,and[circle,not[size2]]],and[yellow,size2]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:circle;4:not[%s];4:size2;4:and[%s,%s];4:yellow;4:size2;1:%s.o;2:x
'λx.exists(size3, filter(filter(filter(x.s, rectangle), size2), triangle))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2;4:triangle
'λx.apply(size1,iota(filter(filter(filter(filter(filter(x.s, or[yellow,size2]), and[green,and[circle,or[iff[size2,and[iff[or[and[size2,or[rectangle,blue]],size3],circle],and[rectangle,circle]]],size2]]]), size1), triangle), not[apply(same_size,x.o)])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:size2;4:and[%s,%s];4:green;4:and[%s,%s];4:circle;4:or[%s,%s];4:iff[%s,%s];4:size2;4:and[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size2;4:or[%s,%s];4:rectangle;4:blue;4:size3;4:circle;4:and[%s,%s];4:rectangle;4:circle;4:size2;4:size1;4:triangle;4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.exists(implies[circle,iff[nor[or[size3,apply(same_shape,iota(filter(x.s, not[blue])))],blue],and[and[size1,or[size2,yellow]],size1]]], filter(x.s, blue))'	0:exists(%s, %s);4:implies[%s,%s];4:circle;4:iff[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:blue;4:and[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:size2;4:yellow;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(not[nor[circle,size1]],x.o)'	0:apply(%s,%s);4:not[%s];4:nor[%s,%s];4:circle;4:size1;1:%s.o;2:x
'λx.apply(and[yellow,and[or[not[and[green,not[and[green,yellow]]]],not[size1]],size1]],iota(filter(x.s, and[blue,apply(same_shape,iota(filter(x.s, or[blue,circle])))])))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:and[%s,%s];4:green;4:not[%s];4:and[%s,%s];4:green;4:yellow;4:not[%s];4:size1;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:circle
'λx.apply(and[yellow,circle],iota(filter(filter(filter(filter(x.s, size2), and[apply(same_size,iota(filter(x.s, size3))),blue]), and[nand[yellow,size2],size1]), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue;4:and[%s,%s];4:nand[%s,%s];4:yellow;4:size2;4:size1;4:blue
'λx.exists(size1, filter(filter(x.s, apply(same_color,iota(filter(filter(filter(x.s, apply(size-gt,iota(x.s))), apply(same_shape,x.o)), and[and[yellow,nor[circle,and[apply(same_shape,iota(filter(filter(x.s, yellow), size2))),rectangle]]],and[size2,and[not[and[size2,triangle]],and[and[rectangle,blue],rectangle]]]])))), and[size1,size3]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:and[%s,%s];4:yellow;4:nor[%s,%s];4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2;4:rectangle;4:and[%s,%s];4:size2;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:size2;4:triangle;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:blue;4:rectangle;4:and[%s,%s];4:size1;4:size3
'λx.apply(nor[triangle,triangle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:triangle;4:triangle;1:%s.o;2:x
'λx.apply(and[apply(same_shape,iota(filter(x.s, or[triangle,triangle]))),size3],iota(filter(filter(filter(filter(filter(filter(x.s, circle), apply(size-leq,iota(x.s))), size3), nand[triangle,yellow]), circle), size2)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:triangle;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:size3;4:nand[%s,%s];4:triangle;4:yellow;4:circle;4:size2
'λx.apply(and[apply(same_size,iota(filter(x.s, yellow))),size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2;1:%s.o;2:x
'λx.contains(iota(x.s), filter(x.s, not[size3]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3
'λx.contains(iota(x.s), filter(x.s, not[size1]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1
'λx.apply(not[circle],iota(filter(filter(x.s, size1), yellow)))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow
'λx.exists(not[and[size3,iff[circle,rectangle]]], filter(filter(filter(x.s, not[rectangle]), yellow), size3))'	0:exists(%s, %s);4:not[%s];4:and[%s,%s];4:size3;4:iff[%s,%s];4:circle;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;4:yellow;4:size3
'λx.exists(and[nand[and[green,size2],yellow],not[or[rectangle,size2]]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:green;4:size2;4:yellow;4:not[%s];4:or[%s,%s];4:rectangle;4:size2;3:%s.s;2:x
'λx.apply(nor[triangle,not[circle]],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:triangle;4:not[%s];4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(x.s, and[apply(same_size,x.o),triangle])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle
'λx.apply(iff[and[and[green,and[implies[size1,not[and[apply(size-leq,iota(filter(x.s, size3))),rectangle]]],and[circle,yellow]]],rectangle],size2],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:implies[%s,%s];4:size1;4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle;4:and[%s,%s];4:circle;4:yellow;4:rectangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(or[nor[triangle,size2],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:nor[%s,%s];4:triangle;4:size2;4:blue;1:%s.o;2:x
'λx.apply(and[and[not[not[circle]],size3],rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:not[%s];4:circle;4:size3;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(x.s, nor[rectangle,and[apply(same_color,x.o),blue]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue
'λx.apply(or[nor[triangle,not[iff[size3,not[apply(same_size,iota(filter(x.s, triangle)))]]]],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:nor[%s,%s];4:triangle;4:not[%s];4:iff[%s,%s];4:size3;4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue;1:%s.o;2:x
'λx.apply(or[rectangle,not[or[green,size3]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:not[%s];4:or[%s,%s];4:green;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[size2,or[size2,circle]],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:size2;4:or[%s,%s];4:size2;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[size3,not[size3]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size3;4:not[%s];4:size3;1:%s.o;2:x
'λx.apply(nand[and[green,green],and[circle,yellow]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:green;4:green;4:and[%s,%s];4:circle;4:yellow;1:%s.o;2:x
'λx.apply(and[rectangle,blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:blue;1:%s.o;2:x
'λx.apply(nor[and[size3,green],green],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:size3;4:green;4:green;1:%s.o;2:x
'λx.apply(and[size3,rectangle],iota(filter(filter(filter(x.s, triangle), apply(same_size,x.o)), circle)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle
'λx.apply(apply(same_shape,x.o),iota(filter(filter(filter(x.s, or[size1,size2]), size1), and[size2,circle])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:size2;4:size1;4:and[%s,%s];4:size2;4:circle
'λx.apply(and[apply(same_shape,x.o),triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_color,x.o),iota(filter(x.s, size2)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(apply(same_color,x.o),iota(filter(x.s, size1)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(apply(same_color,x.o),iota(filter(x.s, green)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(yellow,iota(filter(x.s, and[circle,nor[size3,size2]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:nor[%s,%s];4:size3;4:size2
'λx.empty(filter(filter(x.s, size1), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size3
'λx.empty(filter(filter(x.s, size1), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2
'λx.empty(filter(filter(x.s, size2), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2
'λx.empty(filter(filter(x.s, size2), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1
'λx.empty(filter(filter(x.s, size3), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2
'λx.empty(filter(filter(x.s, size3), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size1
'λx.empty(filter(filter(x.s, size3), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3
'λx.empty(filter(filter(x.s, size3), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green
'λx.apply(and[and[size1,size1],apply(same_size,iota(x.s))],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[yellow,size1],iota(filter(x.s, and[size1,blue])))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:blue
'λx.apply(yellow,iota(filter(x.s, not[and[and[not[size2],triangle],and[iff[and[circle,implies[nand[yellow,blue],and[and[rectangle,size2],size1]]],green],nor[size2,or[triangle,green]]]]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size2;4:triangle;4:and[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:circle;4:implies[%s,%s];4:nand[%s,%s];4:yellow;4:blue;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size2;4:size1;4:green;4:nor[%s,%s];4:size2;4:or[%s,%s];4:triangle;4:green
'λx.apply(not[blue],iota(filter(filter(x.s, and[blue,triangle]), rectangle)))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:triangle;4:rectangle
'λx.apply(triangle,iota(filter(filter(filter(filter(filter(x.s, apply(same_color,x.o)), not[size1]), size1), size2), size1)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:size1;4:size1;4:size2;4:size1
'λx.apply(not[not[blue]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:blue;1:%s.o;2:x
'λx.apply(nor[size2,yellow],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size2;4:yellow;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, rectangle), green), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green;4:circle
'λx.empty(filter(filter(x.s, circle), and[or[size1,nor[and[circle,implies[and[green,or[or[rectangle,or[circle,size2]],green]],rectangle]],not[blue]]],and[not[and[rectangle,size3]],size3]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:or[%s,%s];4:size1;4:nor[%s,%s];4:and[%s,%s];4:circle;4:implies[%s,%s];4:and[%s,%s];4:green;4:or[%s,%s];4:or[%s,%s];4:rectangle;4:or[%s,%s];4:circle;4:size2;4:green;4:rectangle;4:not[%s];4:blue;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:rectangle;4:size3;4:size3
'λx.exists(circle, filter(filter(x.s, size1), or[yellow,size1]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:or[%s,%s];4:yellow;4:size1
'λx.contains(iota(filter(x.s, or[size2,or[nand[rectangle,size1],green]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:or[%s,%s];4:nand[%s,%s];4:rectangle;4:size1;4:green;3:%s.s;2:x
'λx.apply(or[or[apply(same_size,x.o),iff[and[and[triangle,apply(same_size,iota(filter(filter(filter(x.s, size2), yellow), size3)))],size2],and[and[and[circle,rectangle],green],size3]]],yellow],iota(filter(filter(filter(x.s, size3), size3), nand[nor[triangle,green],nand[triangle,triangle]])))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:iff[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:yellow;4:size3;4:size2;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:rectangle;4:green;4:size3;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3;4:nand[%s,%s];4:nor[%s,%s];4:triangle;4:green;4:nand[%s,%s];4:triangle;4:triangle
'λx.apply(circle,iota(filter(x.s, and[size1,circle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:circle
'λx.apply(rectangle,iota(filter(filter(filter(filter(x.s, circle), nor[green,size2]), size1), size3)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:nor[%s,%s];4:green;4:size2;4:size1;4:size3
'λx.apply(blue,iota(filter(filter(filter(x.s, yellow), size1), size1)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;4:size1
'λx.contains(x.o, filter(filter(filter(filter(filter(x.s, apply(same_color,x.o)), nand[green,blue]), size2), or[green,and[circle,triangle]]), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:nand[%s,%s];4:green;4:blue;4:size2;4:or[%s,%s];4:green;4:and[%s,%s];4:circle;4:triangle;4:green
'λx.exists(not[iff[or[and[circle,nor[rectangle,green]],apply(same_size,x.o)],triangle]], filter(x.s, iff[or[blue,green],size2]))'	0:exists(%s, %s);4:not[%s];4:iff[%s,%s];4:or[%s,%s];4:and[%s,%s];4:circle;4:nor[%s,%s];4:rectangle;4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:or[%s,%s];4:blue;4:green;4:size2
'λx.empty(filter(filter(x.s, circle), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue
'λx.apply(or[size1,or[size1,rectangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:or[%s,%s];4:size1;4:rectangle;1:%s.o;2:x
'λx.forall(implies[triangle,size3],filter(x.s, size3))'	0:forall(%s,%s);4:implies[%s,%s];4:triangle;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(iff[green,green],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:green;4:green;1:%s.o;2:x
'λx.apply(not[or[apply(size-lt,x.o),green]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:green;1:%s.o;2:x
'λx.exists(not[circle], x.s)'	0:exists(%s, %s);4:not[%s];4:circle;3:%s.s;2:x
'λx.apply(and[or[size2,triangle],apply(same_shape,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size2;4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(and[and[rectangle,or[and[apply(same_color,iota(x.s)),or[not[blue],rectangle]],or[yellow,or[circle,and[circle,size3]]]]],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:blue;4:rectangle;4:or[%s,%s];4:yellow;4:or[%s,%s];4:circle;4:and[%s,%s];4:circle;4:size3;4:rectangle;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, blue), and[rectangle,size2])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:rectangle;4:size2
'λx.forall(or[green,size3],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:green;4:size3;3:%s.s;2:x
'λx.exists(size2, filter(filter(filter(x.s, triangle), green), circle))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green;4:circle
'λx.exists(iff[apply(size-leq,iota(x.s)),triangle], x.s)'	0:exists(%s, %s);4:iff[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:triangle;3:%s.s;2:x
'λx.exists(nand[size2,apply(same_color,iota(x.s))], filter(x.s, blue))'	0:exists(%s, %s);4:nand[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(not[nor[blue,blue]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:nor[%s,%s];4:blue;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(x.s, not[yellow])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow
'λx.apply(size1,iota(filter(x.s, not[yellow])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow
'λx.apply(and[circle,or[size1,and[and[yellow,yellow],apply(same_size,iota(x.s))]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:or[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:yellow;4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.forall(size1,filter(filter(x.s, iff[and[and[and[yellow,nand[apply(size-gt,x.o),size2]],yellow],yellow],yellow]), size3))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:nand[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:size2;4:yellow;4:yellow;4:yellow;4:size3
'λx.forall(triangle,filter(filter(x.s, size1), rectangle))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle
'λx.apply(or[and[rectangle,blue],size2],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:rectangle;4:blue;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[size2,iff[apply(size-gt,iota(filter(filter(filter(filter(filter(x.s, yellow), circle), iff[triangle,and[and[yellow,size1],triangle]]), or[and[circle,size1],and[size2,rectangle]]), size2))),not[or[size1,rectangle]]]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size2;4:iff[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle;4:iff[%s,%s];4:triangle;4:and[%s,%s];4:and[%s,%s];4:yellow;4:size1;4:triangle;4:or[%s,%s];4:and[%s,%s];4:circle;4:size1;4:and[%s,%s];4:size2;4:rectangle;4:size2;4:not[%s];4:or[%s,%s];4:size1;4:rectangle;1:%s.o;2:x
'λx.apply(apply(same_size,x.o),iota(filter(filter(x.s, and[triangle,blue]), yellow)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:blue;4:yellow
'λx.apply(circle,iota(filter(filter(filter(x.s, size3), or[and[size3,and[blue,yellow]],size1]), or[and[size2,circle],rectangle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:blue;4:yellow;4:size1;4:or[%s,%s];4:and[%s,%s];4:size2;4:circle;4:rectangle
'λx.apply(blue,iota(filter(filter(x.s, yellow), and[and[size3,and[blue,size1]],triangle])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:blue;4:size1;4:triangle
'λx.apply(apply(same_color,x.o),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.forall(and[green,and[green,yellow]],filter(x.s, yellow))'	0:forall(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:green;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(and[size1,or[green,and[size2,and[size3,blue]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:or[%s,%s];4:green;4:and[%s,%s];4:size2;4:and[%s,%s];4:size3;4:blue;1:%s.o;2:x
'λx.apply(apply(same_color,iota(filter(filter(x.s, rectangle), circle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle;1:%s.o;2:x
'λx.forall(and[rectangle,size2],filter(x.s, size3))'	0:forall(%s,%s);4:and[%s,%s];4:rectangle;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(and[rectangle,apply(same_shape,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(apply(same_color,x.o),iota(filter(filter(filter(filter(x.s, apply(same_shape,x.o)), rectangle), circle), apply(same_shape,iota(x.s)))))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle;4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(not[blue],iota(filter(filter(filter(x.s, yellow), yellow), triangle)))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:yellow;4:triangle
'λx.exists(blue, filter(filter(filter(x.s, and[apply(size-gt,iota(x.s)),blue]), size1), apply(same_size,iota(x.s))))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:blue;4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(filter(filter(filter(filter(x.s, and[size1,size1]), size2), size3), size3), blue), not[blue]), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size1;4:size2;4:size3;4:size3;4:blue;4:not[%s];4:blue;4:circle
'λx.apply(and[blue,size3],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.exists(apply(same_color,iota(x.s)), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(x.s, green), blue)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue
'λx.forall(not[apply(size-gt,x.o)],x.s)'	0:forall(%s,%s);4:not[%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;3:%s.s;2:x
'λx.forall(implies[circle,and[rectangle,yellow]],filter(filter(x.s, or[circle,and[circle,size2]]), triangle))'	0:forall(%s,%s);4:implies[%s,%s];4:circle;4:and[%s,%s];4:rectangle;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:and[%s,%s];4:circle;4:size2;4:triangle
'λx.forall(apply(same_shape,iota(x.s)),filter(x.s, and[yellow,size1]))'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size1
'λx.apply(and[apply(size-geq,x.o),and[circle,iff[size3,yellow]]],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:and[%s,%s];4:circle;4:iff[%s,%s];4:size3;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.exists(apply(size-geq,x.o), filter(filter(x.s, not[apply(size-gt,iota(filter(filter(filter(filter(x.s, size2), and[or[and[triangle,apply(size-geq,x.o)],rectangle],yellow]), circle), apply(size-leq,iota(x.s)))))]), yellow))'	0:exists(%s, %s);4:apply(%s,%s);5:size-geq;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:triangle;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:rectangle;4:yellow;4:circle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:yellow
'λx.empty(filter(filter(x.s, triangle), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle
'λx.exists(triangle, filter(x.s, apply(same_color,iota(x.s))))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, or[apply(same_shape,iota(x.s)),blue]), blue))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:blue;4:blue
'λx.apply(apply(same_color,iota(filter(x.s, or[nor[rectangle,size3],and[and[apply(same_color,x.o),or[rectangle,nor[size1,triangle]]],or[circle,triangle]]]))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:nor[%s,%s];4:rectangle;4:size3;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:or[%s,%s];4:rectangle;4:nor[%s,%s];4:size1;4:triangle;4:or[%s,%s];4:circle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, rectangle), and[size1,circle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:size1;4:circle
'λx.apply(or[circle,nand[size3,circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:nand[%s,%s];4:size3;4:circle;1:%s.o;2:x
'λx.apply(or[and[apply(same_shape,iota(filter(x.s, yellow))),nand[or[not[triangle],size2],green]],rectangle],iota(filter(x.s, apply(same_color,x.o))))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:nand[%s,%s];4:or[%s,%s];4:not[%s];4:triangle;4:size2;4:green;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, apply(size-geq,iota(filter(filter(x.s, yellow), circle)))), triangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle;4:triangle
'λx.apply(yellow,iota(filter(x.s, and[green,triangle])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:triangle
'λx.empty(filter(filter(x.s, blue), not[and[size1,size1]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:and[%s,%s];4:size1;4:size1
'λx.apply(and[nand[size2,yellow],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:size2;4:yellow;4:green;1:%s.o;2:x
'λx.exists(triangle, filter(filter(x.s, not[rectangle]), triangle))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;4:triangle
'λx.apply(implies[and[rectangle,size3],circle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:rectangle;4:size3;4:circle;1:%s.o;2:x
'λx.apply(and[not[circle],size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:circle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.exists(and[not[triangle],circle], filter(x.s, size3))'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:triangle;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(green, filter(filter(x.s, triangle), or[rectangle,circle]))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:or[%s,%s];4:rectangle;4:circle
'λx.contains(iota(filter(filter(x.s, rectangle), not[green])), filter(filter(filter(filter(x.s, circle), green), and[and[size1,or[triangle,circle]],implies[apply(same_shape,iota(x.s)),apply(same_color,x.o)]]), yellow))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green;4:and[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:triangle;4:circle;4:implies[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow
'λx.apply(nand[not[implies[yellow,triangle]],and[or[iff[or[size1,not[rectangle]],apply(same_size,iota(filter(filter(filter(filter(x.s, apply(same_size,iota(x.s))), size3), size1), green)))],and[or[triangle,apply(same_size,iota(x.s))],blue]],blue]],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:not[%s];4:implies[%s,%s];4:yellow;4:triangle;4:and[%s,%s];4:or[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:size1;4:not[%s];4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size3;4:size1;4:green;4:and[%s,%s];4:or[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:blue;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(or[green,nand[circle,circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:nand[%s,%s];4:circle;4:circle;1:%s.o;2:x
'λx.apply(or[triangle,triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:triangle;1:%s.o;2:x
'λx.forall(and[not[or[size2,triangle]],size2],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:not[%s];4:or[%s,%s];4:size2;4:triangle;4:size2;3:%s.s;2:x
'λx.apply(and[triangle,or[apply(same_size,iota(filter(x.s, apply(same_color,x.o)))),size1]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(x.s, nor[size2,yellow]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size2;4:yellow
'λx.apply(or[green,iff[triangle,size1]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:iff[%s,%s];4:triangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(and[circle,circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, or[and[size2,green],apply(same_size,iota(filter(filter(filter(x.s, apply(size-gt,iota(filter(filter(x.s, and[size2,or[circle,size2]]), nor[size3,apply(same_shape,x.o)])))), green), and[green,yellow])))]), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size2;4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:or[%s,%s];4:circle;4:size2;4:nor[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green;4:and[%s,%s];4:green;4:yellow;4:blue
'λx.apply(or[rectangle,rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:rectangle;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(x.s, or[blue,nand[blue,green]]), size2), not[and[and[triangle,size2],yellow]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:nand[%s,%s];4:blue;4:green;4:size2;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:size2;4:yellow;3:%s.s;2:x
'λx.empty(filter(filter(filter(filter(filter(filter(x.s, circle), size1), and[size1,apply(same_shape,iota(x.s))]), green), triangle), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1;4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:green;4:triangle;4:yellow
'λx.apply(circle,iota(filter(filter(x.s, implies[and[blue,size2],and[triangle,not[size1]]]), and[yellow,circle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:and[%s,%s];4:blue;4:size2;4:and[%s,%s];4:triangle;4:not[%s];4:size1;4:and[%s,%s];4:yellow;4:circle
'λx.apply(not[and[yellow,nor[and[blue,size3],rectangle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:yellow;4:nor[%s,%s];4:and[%s,%s];4:blue;4:size3;4:rectangle;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, and[circle,size2]), size1)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size2;4:size1
'λx.apply(size3,iota(filter(filter(x.s, triangle), and[blue,and[triangle,implies[size1,green]]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:blue;4:and[%s,%s];4:triangle;4:implies[%s,%s];4:size1;4:green
'λx.exists(not[and[and[iff[size1,blue],size3],and[blue,size2]]], filter(filter(x.s, triangle), green))'	0:exists(%s, %s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:size1;4:blue;4:size3;4:and[%s,%s];4:blue;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green
'λx.contains(x.o, filter(filter(x.s, implies[and[circle,apply(same_shape,iota(filter(filter(x.s, or[size3,circle]), or[apply(same_shape,iota(filter(x.s, rectangle))),size1])))],blue]), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:circle;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1;4:blue;4:green
'λx.apply(or[size2,not[circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:not[%s];4:circle;1:%s.o;2:x
'λx.apply(and[iff[size2,triangle],or[or[blue,triangle],circle]],iota(filter(filter(x.s, green), not[size2])))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:size2;4:triangle;4:or[%s,%s];4:or[%s,%s];4:blue;4:triangle;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:size2
'λx.empty(filter(x.s, or[rectangle,iff[green,green]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:iff[%s,%s];4:green;4:green
'λx.apply(and[green,size1],iota(filter(filter(x.s, blue), triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle
'λx.contains(x.o, filter(x.s, and[green,size1]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:size1
'λx.contains(x.o, filter(x.s, and[green,size3]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:size3
'λx.apply(and[size2,blue],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(and[apply(same_shape,x.o),or[circle,circle]],iota(filter(x.s, or[green,and[and[size1,or[rectangle,circle]],and[blue,yellow]]])))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:circle;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:rectangle;4:circle;4:and[%s,%s];4:blue;4:yellow
'λx.apply(and[yellow,blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:blue;1:%s.o;2:x
'λx.forall(size3,filter(filter(x.s, green), size1))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1
'λx.forall(size3,filter(filter(x.s, green), size3))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size3
'λx.apply(implies[triangle,triangle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:triangle;4:triangle;1:%s.o;2:x
'λx.apply(and[and[and[blue,and[rectangle,circle]],or[green,circle]],apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:circle;4:or[%s,%s];4:green;4:circle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(or[green,triangle],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(and[not[triangle],size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:triangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(x.s, and[and[triangle,size3],or[blue,triangle]]), size2)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:triangle;4:size3;4:or[%s,%s];4:blue;4:triangle;4:size2
'λx.apply(size3,iota(filter(filter(filter(filter(filter(filter(x.s, size1), not[not[not[apply(size-geq,iota(x.s))]]]), size2), size3), green), and[nor[size2,size1],size1])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:not[%s];4:not[%s];4:not[%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:size2;4:size3;4:green;4:and[%s,%s];4:nor[%s,%s];4:size2;4:size1;4:size1
'λx.apply(and[circle,apply(same_size,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(or[blue,and[size2,size1]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:and[%s,%s];4:size2;4:size1;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, and[not[yellow],size3]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:yellow;4:size3
'λx.contains(iota(x.s), filter(filter(x.s, and[green,size2]), apply(same_shape,x.o)))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(or[and[not[apply(same_size,x.o)],green],circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;4:circle;1:%s.o;2:x
'λx.apply(and[green,not[yellow]],iota(filter(filter(x.s, size1), circle)))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle
'λx.apply(nor[blue,apply(same_shape,iota(filter(x.s, not[rectangle])))],iota(filter(x.s, green)))'	0:apply(%s,%s);4:nor[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.forall(not[and[green,size2]],filter(x.s, not[not[triangle]]))'	0:forall(%s,%s);4:not[%s];4:and[%s,%s];4:green;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:triangle
'λx.apply(or[size3,size2],iota(filter(filter(filter(filter(x.s, apply(same_shape,x.o)), triangle), and[size2,not[or[green,not[and[or[apply(same_color,iota(filter(filter(x.s, circle), rectangle))),and[blue,triangle]],apply(same_color,iota(x.s))]]]]]), and[and[green,rectangle],size3])))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle;4:and[%s,%s];4:size2;4:not[%s];4:or[%s,%s];4:green;4:not[%s];4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle;4:and[%s,%s];4:blue;4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:green;4:rectangle;4:size3
'λx.apply(implies[yellow,circle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:yellow;4:circle;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(filter(x.s, blue), circle), green)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle;4:green
'λx.forall(triangle,filter(x.s, or[apply(same_shape,x.o),green]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green
'λx.empty(filter(filter(x.s, green), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow
'λx.forall(size1,filter(filter(x.s, not[triangle]), nand[implies[blue,size3],not[size2]]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:nand[%s,%s];4:implies[%s,%s];4:blue;4:size3;4:not[%s];4:size2
'λx.forall(blue,x.s)'	0:forall(%s,%s);4:blue;3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(filter(filter(x.s, rectangle), apply(same_color,iota(x.s))), circle), not[size3])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:circle;4:not[%s];4:size3
'λx.apply(and[green,green],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(and[triangle,apply(same_color,x.o)], filter(filter(x.s, size2), apply(same_shape,iota(x.s))))'	0:exists(%s, %s);4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[apply(same_shape,x.o),blue],iota(filter(x.s, or[and[triangle,or[rectangle,green]],triangle])))'	0:apply(%s,%s);4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:triangle;4:or[%s,%s];4:rectangle;4:green;4:triangle
'λx.apply(and[size2,triangle],iota(filter(x.s, green)))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[and[and[triangle,size3],apply(same_size,x.o)],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;1:%s.o;2:x
'λx.apply(and[green,and[not[size1],blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:not[%s];4:size1;4:blue;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(filter(filter(x.s, apply(same_size,x.o)), circle), and[blue,circle]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;4:and[%s,%s];4:blue;4:circle;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, or[apply(same_shape,iota(x.s)),blue]), and[apply(size-leq,x.o),iff[yellow,size3]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:iff[%s,%s];4:yellow;4:size3
'λx.contains(iota(filter(filter(filter(x.s, triangle), and[implies[not[green],green],green]), yellow)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:implies[%s,%s];4:not[%s];4:green;4:green;4:green;4:yellow;3:%s.s;2:x
'λx.apply(and[size3,circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:circle;1:%s.o;2:x
'λx.apply(implies[apply(same_color,iota(x.s)),circle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:circle;1:%s.o;2:x
'λx.apply(and[size1,circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:circle;1:%s.o;2:x
'λx.forall(and[or[circle,rectangle],not[yellow]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:or[%s,%s];4:circle;4:rectangle;4:not[%s];4:yellow;3:%s.s;2:x
'λx.apply(and[rectangle,apply(same_size,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.empty(filter(filter(x.s, rectangle), apply(same_size,x.o)))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(and[or[size3,and[triangle,rectangle]],green],iota(filter(filter(x.s, apply(same_size,x.o)), nand[circle,green])))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size3;4:and[%s,%s];4:triangle;4:rectangle;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:nand[%s,%s];4:circle;4:green
'λx.apply(green,iota(filter(filter(x.s, yellow), green)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green
'λx.apply(or[and[implies[size1,size1],circle],circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:size1;4:size1;4:circle;4:circle;1:%s.o;2:x
'λx.exists(or[not[green],not[not[size3]]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:not[%s];4:green;4:not[%s];4:not[%s];4:size3;3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(x.s, and[not[and[apply(same_shape,x.o),rectangle]],triangle]), green), not[blue]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle;4:triangle;4:green;4:not[%s];4:blue
'λx.apply(nor[not[green],size3],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:not[%s];4:green;4:size3;1:iota(%s);3:%s.s;2:x
'λx.exists(iff[rectangle,green], filter(filter(filter(filter(x.s, rectangle), size3), size3), triangle))'	0:exists(%s, %s);4:iff[%s,%s];4:rectangle;4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3;4:size3;4:triangle
'λx.empty(filter(x.s, not[nor[size2,nand[yellow,nand[or[green,green],size2]]]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:nor[%s,%s];4:size2;4:nand[%s,%s];4:yellow;4:nand[%s,%s];4:or[%s,%s];4:green;4:green;4:size2
'λx.apply(rectangle,iota(filter(x.s, apply(same_size,x.o))))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(apply(same_color,iota(x.s)),iota(filter(x.s, apply(same_shape,iota(x.s)))))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(x.s, and[circle,circle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:circle
'λx.apply(or[apply(same_size,x.o),nor[size2,size2]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:nor[%s,%s];4:size2;4:size2;1:%s.o;2:x
'λx.forall(and[yellow,circle],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:yellow;4:circle;3:%s.s;2:x
'λx.apply(implies[and[circle,and[size1,triangle]],apply(same_shape,x.o)],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:size1;4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.exists(implies[size3,and[or[circle,size3],apply(size-lt,iota(filter(x.s, size1)))]], x.s)'	0:exists(%s, %s);4:implies[%s,%s];4:size3;4:and[%s,%s];4:or[%s,%s];4:circle;4:size3;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;3:%s.s;2:x
'λx.apply(and[size1,not[size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:not[%s];4:size2;1:%s.o;2:x
'λx.apply(and[size2,not[size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:not[%s];4:size2;1:%s.o;2:x
'λx.apply(not[and[green,and[triangle,rectangle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:green;4:and[%s,%s];4:triangle;4:rectangle;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(filter(x.s, implies[triangle,triangle]), and[not[yellow],apply(size-leq,x.o)]), size1)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:triangle;4:triangle;4:and[%s,%s];4:not[%s];4:yellow;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size1
'λx.exists(and[circle,blue], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:circle;4:blue;3:%s.s;2:x
'λx.apply(implies[yellow,nor[blue,and[rectangle,size2]]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:yellow;4:nor[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:size2;1:%s.o;2:x
'λx.apply(and[size3,triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size1,triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[triangle,implies[or[triangle,not[triangle]],apply(same_size,x.o)]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:implies[%s,%s];4:or[%s,%s];4:triangle;4:not[%s];4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(filter(filter(x.s, not[blue]), size2), and[triangle,green]), and[blue,rectangle])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:size2;4:and[%s,%s];4:triangle;4:green;4:and[%s,%s];4:blue;4:rectangle
'λx.apply(size3,iota(filter(filter(filter(filter(x.s, size2), not[and[size1,size3]]), not[not[iff[apply(same_color,iota(x.s)),size3]]]), nand[size3,size3])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:not[%s];4:and[%s,%s];4:size1;4:size3;4:not[%s];4:not[%s];4:iff[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size3;4:nand[%s,%s];4:size3;4:size3
'λx.apply(triangle,iota(filter(filter(x.s, size1), and[apply(same_color,iota(x.s)),and[green,blue]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:green;4:blue
'λx.exists(and[and[triangle,size3],and[size3,and[blue,and[and[apply(same_size,x.o),size2],not[size1]]]]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:size3;4:and[%s,%s];4:size3;4:and[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2;4:not[%s];4:size1;3:%s.s;2:x
'λx.apply(implies[green,and[apply(same_shape,iota(filter(filter(x.s, size1), and[size3,rectangle]))),and[blue,apply(same_shape,x.o)]]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:green;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:size3;4:rectangle;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(or[iff[triangle,and[not[nor[iff[not[and[not[not[not[rectangle]]],apply(same_color,x.o)]],yellow],not[and[circle,yellow]]]],or[and[apply(same_size,iota(x.s)),and[circle,and[rectangle,rectangle]]],or[size2,and[rectangle,triangle]]]]],size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:iff[%s,%s];4:triangle;4:and[%s,%s];4:not[%s];4:nor[%s,%s];4:iff[%s,%s];4:not[%s];4:and[%s,%s];4:not[%s];4:not[%s];4:not[%s];4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;4:not[%s];4:and[%s,%s];4:circle;4:yellow;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:and[%s,%s];4:rectangle;4:rectangle;4:or[%s,%s];4:size2;4:and[%s,%s];4:rectangle;4:triangle;4:size1;1:%s.o;2:x
'λx.apply(and[green,nor[or[triangle,apply(same_shape,iota(x.s))],blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:nor[%s,%s];4:or[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.apply(nand[triangle,yellow],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.exists(implies[blue,size2], x.s)'	0:exists(%s, %s);4:implies[%s,%s];4:blue;4:size2;3:%s.s;2:x
'λx.forall(size3,filter(filter(x.s, nand[not[and[size1,rectangle]],blue]), rectangle))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:not[%s];4:and[%s,%s];4:size1;4:rectangle;4:blue;4:rectangle
'λx.forall(nor[size2,rectangle],x.s)'	0:forall(%s,%s);4:nor[%s,%s];4:size2;4:rectangle;3:%s.s;2:x
'λx.forall(and[blue,triangle],filter(x.s, apply(same_size,x.o)))'	0:forall(%s,%s);4:and[%s,%s];4:blue;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(and[size2,triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[apply(size-leq,x.o),or[size3,triangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:or[%s,%s];4:size3;4:triangle;1:%s.o;2:x
'λx.apply(not[and[not[size1],size3]],iota(filter(filter(filter(x.s, green), size2), size1)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:size1;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size2;4:size1
'λx.forall(not[triangle],filter(filter(filter(filter(x.s, or[not[apply(same_color,iota(filter(x.s, and[green,or[size2,and[size2,circle]]])))],not[green]]), nand[size1,size2]), or[rectangle,size2]), rectangle))'	0:forall(%s,%s);4:not[%s];4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:or[%s,%s];4:size2;4:and[%s,%s];4:size2;4:circle;4:not[%s];4:green;4:nand[%s,%s];4:size1;4:size2;4:or[%s,%s];4:rectangle;4:size2;4:rectangle
'λx.apply(green,iota(filter(x.s, or[size1,circle])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:circle
'λx.exists(yellow, filter(filter(filter(filter(filter(filter(x.s, circle), rectangle), apply(same_shape,iota(x.s))), or[apply(size-gt,x.o),or[implies[size1,and[rectangle,green]],circle]]), and[blue,size2]), size1))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:or[%s,%s];4:implies[%s,%s];4:size1;4:and[%s,%s];4:rectangle;4:green;4:circle;4:and[%s,%s];4:blue;4:size2;4:size1
'λx.apply(nor[triangle,circle],iota(filter(filter(x.s, blue), yellow)))'	0:apply(%s,%s);4:nor[%s,%s];4:triangle;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow
'λx.apply(apply(same_color,iota(x.s)),iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(size1,iota(filter(x.s, and[green,triangle])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:triangle
'λx.apply(and[size2,circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[blue,green],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(or[nand[circle,green],rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:circle;4:green;4:rectangle;1:%s.o;2:x
'λx.contains(iota(filter(x.s, triangle)), filter(filter(filter(filter(filter(x.s, circle), not[or[triangle,nor[or[apply(same_size,x.o),not[size3]],size1]]]), blue), yellow), and[yellow,yellow]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:or[%s,%s];4:triangle;4:nor[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:not[%s];4:size3;4:size1;4:blue;4:yellow;4:and[%s,%s];4:yellow;4:yellow
'λx.forall(or[circle,rectangle],filter(x.s, apply(same_size,iota(x.s))))'	0:forall(%s,%s);4:or[%s,%s];4:circle;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.forall(blue,filter(filter(filter(x.s, and[and[green,not[size1]],size1]), blue), size1))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:green;4:not[%s];4:size1;4:size1;4:blue;4:size1
'λx.contains(iota(filter(x.s, apply(same_size,iota(filter(filter(filter(x.s, size2), and[not[triangle],and[apply(size-gt,iota(x.s)),green]]), size2))))), filter(filter(x.s, yellow), blue))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:not[%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:green;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:blue
'λx.apply(and[size1,or[apply(same_color,iota(filter(filter(x.s, size1), apply(size-gt,iota(x.s))))),rectangle]],iota(filter(filter(x.s, blue), yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow
'λx.empty(filter(x.s, or[triangle,size1]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:size1
'λx.apply(and[and[circle,triangle],green],iota(filter(filter(filter(filter(filter(filter(x.s, and[triangle,circle]), or[or[nand[and[size1,or[blue,implies[or[size2,triangle],size3]]],triangle],size2],yellow]), size3), size2), rectangle), or[rectangle,size3])))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:triangle;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:circle;4:or[%s,%s];4:or[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:blue;4:implies[%s,%s];4:or[%s,%s];4:size2;4:triangle;4:size3;4:triangle;4:size2;4:yellow;4:size3;4:size2;4:rectangle;4:or[%s,%s];4:rectangle;4:size3
'λx.apply(or[triangle,apply(same_size,x.o)],iota(filter(filter(x.s, yellow), or[blue,green])))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:blue;4:green
'λx.apply(and[rectangle,nand[yellow,green]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:nand[%s,%s];4:yellow;4:green;1:iota(%s);3:%s.s;2:x
'λx.exists(size1, filter(filter(filter(filter(filter(x.s, triangle), yellow), apply(same_color,x.o)), circle), not[circle]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;4:not[%s];4:circle
'λx.apply(circle,iota(filter(filter(x.s, circle), apply(same_size,x.o))))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.forall(apply(same_color,iota(filter(x.s, circle))),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, and[iff[and[circle,implies[nand[yellow,blue],and[and[green,size2],size1]]],green],nor[size2,or[triangle,green]]]), and[size1,size3]), not[blue]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:circle;4:implies[%s,%s];4:nand[%s,%s];4:yellow;4:blue;4:and[%s,%s];4:and[%s,%s];4:green;4:size2;4:size1;4:green;4:nor[%s,%s];4:size2;4:or[%s,%s];4:triangle;4:green;4:and[%s,%s];4:size1;4:size3;4:not[%s];4:blue
'λx.apply(apply(same_shape,x.o),iota(filter(x.s, apply(same_size,x.o))))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(nand[rectangle,circle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:rectangle;4:circle;1:%s.o;2:x
'λx.apply(nand[yellow,apply(same_size,x.o)],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(or[size2,circle],iota(filter(filter(filter(filter(x.s, green), size1), triangle), circle)))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1;4:triangle;4:circle
'λx.apply(nand[size3,apply(size-gt,x.o)],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size3;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(filter(x.s, size2), size2), circle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2;4:circle
'λx.contains(iota(x.s), filter(filter(x.s, blue), and[circle,blue]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:circle;4:blue
'λx.forall(size1,filter(filter(filter(filter(x.s, size1), blue), size2), size3))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue;4:size2;4:size3
'λx.apply(nor[not[or[circle,blue]],size2],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:not[%s];4:or[%s,%s];4:circle;4:blue;4:size2;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(filter(filter(filter(x.s, not[apply(size-leq,iota(filter(x.s, circle)))]), blue), not[nand[and[size3,and[nor[and[triangle,yellow],apply(same_color,x.o)],triangle]],blue]]), nand[circle,and[green,size2]]), circle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue;4:not[%s];4:nand[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:triangle;4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;4:blue;4:nand[%s,%s];4:circle;4:and[%s,%s];4:green;4:size2;4:circle
'λx.apply(yellow,iota(filter(filter(filter(x.s, size3), triangle), blue)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle;4:blue
'λx.apply(yellow,iota(filter(filter(x.s, apply(same_color,x.o)), implies[iff[nand[and[and[triangle,apply(same_color,iota(x.s))],blue],and[and[size2,circle],green]],and[and[rectangle,not[iff[yellow,rectangle]]],not[implies[and[size3,and[circle,and[rectangle,green]]],and[nor[apply(size-lt,x.o),not[triangle]],blue]]]]],size1])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:implies[%s,%s];4:iff[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:and[%s,%s];4:size2;4:circle;4:green;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:not[%s];4:iff[%s,%s];4:yellow;4:rectangle;4:not[%s];4:implies[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:circle;4:and[%s,%s];4:rectangle;4:green;4:and[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:not[%s];4:triangle;4:blue;4:size1
'λx.apply(nor[blue,green],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:blue;4:green;1:%s.o;2:x
'λx.apply(and[apply(size-gt,x.o),yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:yellow;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(filter(filter(filter(x.s, apply(same_size,iota(x.s))), green), size1), size2), triangle), or[and[size2,rectangle],or[and[size3,and[size1,size1]],triangle]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:green;4:size1;4:size2;4:triangle;4:or[%s,%s];4:and[%s,%s];4:size2;4:rectangle;4:or[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:size1;4:size1;4:triangle;3:%s.s;2:x
'λx.apply(or[not[rectangle],size3],iota(filter(x.s, iff[rectangle,triangle])))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:rectangle;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:rectangle;4:triangle
'λx.apply(not[implies[size3,not[size2]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:implies[%s,%s];4:size3;4:not[%s];4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(or[apply(same_color,iota(x.s)),blue],iota(filter(filter(x.s, and[green,apply(size-geq,x.o)]), triangle)))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:triangle
'λx.forall(and[size3,size3],filter(x.s, and[or[size2,size1],size2]))'	0:forall(%s,%s);4:and[%s,%s];4:size3;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:size2;4:size1;4:size2
'λx.apply(and[nor[triangle,or[yellow,size3]],size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:triangle;4:or[%s,%s];4:yellow;4:size3;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(x.s, triangle), size1)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size1
'λx.apply(size2,iota(filter(filter(x.s, triangle), size3)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3
'λx.apply(size1,iota(filter(filter(x.s, triangle), size1)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size1
'λx.contains(x.o, filter(filter(filter(filter(filter(filter(filter(x.s, and[yellow,green]), rectangle), and[not[rectangle],rectangle]), and[or[circle,or[blue,yellow]],apply(same_shape,iota(x.s))]), apply(same_color,iota(filter(x.s, or[blue,rectangle])))), yellow), size3))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:green;4:rectangle;4:and[%s,%s];4:not[%s];4:rectangle;4:rectangle;4:and[%s,%s];4:or[%s,%s];4:circle;4:or[%s,%s];4:blue;4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:rectangle;4:yellow;4:size3
'λx.apply(nor[triangle,size3],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:triangle;4:size3;1:%s.o;2:x
'λx.apply(nor[triangle,size1],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:triangle;4:size1;1:%s.o;2:x
'λx.apply(nor[triangle,size2],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:triangle;4:size2;1:%s.o;2:x
'λx.apply(implies[and[not[rectangle],or[not[and[nor[size2,size2],size3]],size2]],and[and[not[nand[yellow,rectangle]],or[apply(same_color,x.o),rectangle]],yellow]],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:not[%s];4:rectangle;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:nor[%s,%s];4:size2;4:size2;4:size3;4:size2;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:nand[%s,%s];4:yellow;4:rectangle;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[iff[circle,and[or[blue,blue],size2]],apply(same_shape,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:circle;4:and[%s,%s];4:or[%s,%s];4:blue;4:blue;4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[nor[rectangle,triangle],yellow],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:rectangle;4:triangle;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.exists(size3, filter(x.s, implies[triangle,rectangle]))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:triangle;4:rectangle
'λx.apply(triangle,iota(filter(filter(x.s, triangle), size3)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3
'λx.apply(or[or[size1,size2],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:size1;4:size2;4:blue;1:%s.o;2:x
'λx.apply(nand[and[size3,yellow],not[triangle]],iota(filter(x.s, not[and[apply(same_color,iota(filter(filter(x.s, and[not[size1],rectangle]), size2))),yellow]])))'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:size3;4:yellow;4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:size1;4:rectangle;4:size2;4:yellow
'λx.empty(filter(filter(x.s, or[and[triangle,size3],rectangle]), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:triangle;4:size3;4:rectangle;4:blue
'λx.apply(or[or[circle,and[not[and[and[apply(same_shape,x.o),size1],and[size3,triangle]]],size3]],rectangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:circle;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;4:and[%s,%s];4:size3;4:triangle;4:size3;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.forall(rectangle,filter(filter(filter(filter(x.s, size3), triangle), and[size2,triangle]), green))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle;4:and[%s,%s];4:size2;4:triangle;4:green
'λx.apply(size3,iota(filter(filter(filter(filter(x.s, and[and[triangle,apply(same_shape,x.o)],green]), not[rectangle]), and[green,apply(same_shape,iota(x.s))]), rectangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green;4:not[%s];4:rectangle;4:and[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:rectangle
'λx.apply(green,iota(filter(filter(filter(filter(x.s, circle), size3), implies[blue,not[implies[rectangle,apply(same_color,x.o)]]]), green)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3;4:implies[%s,%s];4:blue;4:not[%s];4:implies[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green
'λx.apply(not[green],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(circle, filter(filter(filter(filter(x.s, triangle), and[apply(same_size,x.o),size3]), rectangle), size2))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;4:rectangle;4:size2
'λx.forall(nand[size2,circle],x.s)'	0:forall(%s,%s);4:nand[%s,%s];4:size2;4:circle;3:%s.s;2:x
'λx.apply(not[or[not[apply(same_shape,iota(x.s))],rectangle]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.exists(apply(size-geq,x.o), filter(filter(x.s, not[apply(size-gt,iota(x.s))]), yellow))'	0:exists(%s, %s);4:apply(%s,%s);5:size-geq;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:yellow
'λx.apply(size1,iota(filter(filter(filter(x.s, and[and[blue,circle],and[size2,green]]), circle), green)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:blue;4:circle;4:and[%s,%s];4:size2;4:green;4:circle;4:green
'λx.apply(green,iota(filter(filter(x.s, triangle), size1)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size1
'λx.apply(green,iota(filter(filter(x.s, triangle), green)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green
'λx.apply(or[size2,rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:rectangle;1:%s.o;2:x
'λx.apply(size2,iota(filter(x.s, and[rectangle,blue])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:blue
'λx.forall(triangle,filter(filter(filter(x.s, nor[green,or[not[implies[green,and[size2,nor[not[iff[green,not[green]]],circle]]]],green]]), or[iff[implies[and[circle,size1],and[green,size1]],apply(size-leq,x.o)],circle]), or[nor[circle,size1],rectangle]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:green;4:or[%s,%s];4:not[%s];4:implies[%s,%s];4:green;4:and[%s,%s];4:size2;4:nor[%s,%s];4:not[%s];4:iff[%s,%s];4:green;4:not[%s];4:green;4:circle;4:green;4:or[%s,%s];4:iff[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:circle;4:size1;4:and[%s,%s];4:green;4:size1;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:circle;4:or[%s,%s];4:nor[%s,%s];4:circle;4:size1;4:rectangle
'λx.apply(not[or[apply(same_size,iota(filter(x.s, size1))),apply(same_size,x.o)]],iota(filter(filter(x.s, rectangle), blue)))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue
'λx.exists(implies[yellow,rectangle], filter(x.s, and[triangle,circle]))'	0:exists(%s, %s);4:implies[%s,%s];4:yellow;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:circle
'λx.apply(size2,iota(filter(filter(x.s, and[nand[and[triangle,or[rectangle,rectangle]],and[yellow,yellow]],size2]), blue)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:triangle;4:or[%s,%s];4:rectangle;4:rectangle;4:and[%s,%s];4:yellow;4:yellow;4:size2;4:blue
'λx.apply(triangle,iota(filter(filter(x.s, green), rectangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle
'λx.apply(not[size2],iota(filter(filter(filter(filter(filter(x.s, triangle), apply(same_size,iota(x.s))), and[size3,and[blue,yellow]]), triangle), green)))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:and[%s,%s];4:blue;4:yellow;4:triangle;4:green
'λx.apply(iff[triangle,and[yellow,rectangle]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:triangle;4:and[%s,%s];4:yellow;4:rectangle;1:%s.o;2:x
'λx.apply(or[triangle,not[size3]],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.contains(iota(filter(filter(filter(filter(x.s, size2), apply(same_size,iota(filter(x.s, nor[circle,circle])))), and[size1,size1]), size3)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:circle;4:circle;4:and[%s,%s];4:size1;4:size1;4:size3;3:%s.s;2:x
'λx.exists(circle, filter(x.s, yellow))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(and[and[apply(same_shape,iota(x.s)),green],triangle],iota(filter(filter(filter(x.s, rectangle), circle), or[size2,circle])))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:green;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle;4:or[%s,%s];4:size2;4:circle
'λx.apply(nor[size1,blue],iota(filter(filter(filter(filter(x.s, green), apply(same_color,x.o)), and[size1,and[circle,yellow]]), green)))'	0:apply(%s,%s);4:nor[%s,%s];4:size1;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:size1;4:and[%s,%s];4:circle;4:yellow;4:green
'λx.forall(apply(same_shape,iota(filter(x.s, and[or[nand[green,circle],and[rectangle,size3]],size1]))),filter(x.s, size1))'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:nand[%s,%s];4:green;4:circle;4:and[%s,%s];4:rectangle;4:size3;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(and[not[circle],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:circle;4:rectangle;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, apply(same_size,x.o)), apply(same_size,iota(filter(filter(x.s, green), blue))))))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue
'λx.forall(size3,filter(x.s, and[apply(size-gt,x.o),nor[size1,circle]]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:nor[%s,%s];4:size1;4:circle
'λx.apply(rectangle,iota(filter(filter(filter(x.s, circle), and[circle,circle]), triangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:circle;4:circle;4:triangle
'λx.contains(iota(filter(filter(x.s, not[rectangle]), and[green,not[triangle]])), filter(x.s, size1))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;4:and[%s,%s];4:green;4:not[%s];4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(and[triangle,size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:size3;1:%s.o;2:x
'λx.apply(and[triangle,size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:size2;1:%s.o;2:x
'λx.apply(and[triangle,size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:size1;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, size1), not[rectangle])), filter(x.s, blue))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:not[%s];4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[or[green,triangle],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:green;4:triangle;4:green;1:%s.o;2:x
'λx.apply(and[size2,and[rectangle,and[yellow,triangle]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:yellow;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.exists(blue, filter(filter(filter(x.s, size2), or[yellow,and[rectangle,rectangle]]), size3))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:yellow;4:and[%s,%s];4:rectangle;4:rectangle;4:size3
'λx.contains(iota(filter(x.s, green)), filter(filter(x.s, size1), rectangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle
'λx.apply(yellow,iota(filter(filter(filter(x.s, circle), yellow), size3)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow;4:size3
'λx.forall(circle,filter(filter(x.s, apply(same_shape,x.o)), iff[circle,apply(same_size,iota(x.s))]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:iff[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.exists(and[size3,triangle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:size3;4:triangle;3:%s.s;2:x
'λx.exists(or[triangle,size3], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:triangle;4:size3;3:%s.s;2:x
'λx.apply(and[size1,blue],iota(filter(filter(x.s, yellow), rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle
'λx.forall(size1,filter(filter(filter(x.s, and[size3,size3]), rectangle), size2))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:size3;4:rectangle;4:size2
'λx.exists(implies[apply(same_color,iota(x.s)),not[green]], x.s)'	0:exists(%s, %s);4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:not[%s];4:green;3:%s.s;2:x
'λx.apply(or[apply(same_shape,iota(filter(x.s, blue))),rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle;1:%s.o;2:x
'λx.apply(size2,iota(filter(x.s, and[green,yellow])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:yellow
'λx.apply(and[iff[nand[apply(same_size,iota(filter(filter(x.s, green), triangle))),yellow],or[yellow,not[not[rectangle]]]],apply(size-gt,x.o)],iota(filter(filter(filter(filter(x.s, blue), circle), size3), yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:nand[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:triangle;4:yellow;4:or[%s,%s];4:yellow;4:not[%s];4:not[%s];4:rectangle;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle;4:size3;4:yellow
'λx.exists(apply(same_size,x.o), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(iff[circle,size2],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:circle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.exists(and[apply(same_color,x.o),not[not[blue]]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:not[%s];4:blue;3:%s.s;2:x
'λx.exists(implies[or[or[iff[size2,circle],triangle],or[triangle,rectangle]],circle], x.s)'	0:exists(%s, %s);4:implies[%s,%s];4:or[%s,%s];4:or[%s,%s];4:iff[%s,%s];4:size2;4:circle;4:triangle;4:or[%s,%s];4:triangle;4:rectangle;4:circle;3:%s.s;2:x
'λx.apply(or[size2,not[and[size3,size2]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:not[%s];4:and[%s,%s];4:size3;4:size2;1:%s.o;2:x
'λx.apply(and[rectangle,and[apply(same_size,iota(filter(filter(x.s, rectangle), circle))),circle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.exists(circle, filter(x.s, circle))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.empty(filter(filter(filter(filter(x.s, size1), or[size1,or[size2,and[green,blue]]]), and[yellow,size2]), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:or[%s,%s];4:size1;4:or[%s,%s];4:size2;4:and[%s,%s];4:green;4:blue;4:and[%s,%s];4:yellow;4:size2;4:size1
'λx.apply(rectangle,iota(filter(x.s, nor[green,and[yellow,apply(same_color,iota(x.s))]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:green;4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(not[apply(size-geq,x.o)],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(and[green,implies[and[green,nor[apply(same_size,iota(filter(filter(x.s, green), size2))),rectangle]],iff[nor[size2,size3],green]]],iota(filter(x.s, or[iff[triangle,and[blue,rectangle]],size3])))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:implies[%s,%s];4:and[%s,%s];4:green;4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size2;4:rectangle;4:iff[%s,%s];4:nor[%s,%s];4:size2;4:size3;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:iff[%s,%s];4:triangle;4:and[%s,%s];4:blue;4:rectangle;4:size3
'λx.apply(blue,iota(filter(filter(x.s, or[triangle,triangle]), green)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:triangle;4:green
'λx.apply(size1,iota(filter(filter(filter(filter(filter(filter(x.s, green), and[circle,apply(same_color,x.o)]), green), size2), size3), rectangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green;4:size2;4:size3;4:rectangle
'λx.exists(rectangle, filter(filter(filter(filter(filter(x.s, and[blue,rectangle]), circle), yellow), or[and[rectangle,size2],triangle]), triangle))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:rectangle;4:circle;4:yellow;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:size2;4:triangle;4:triangle
'λx.apply(not[not[apply(same_shape,x.o)]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(or[and[implies[blue,or[circle,size1]],not[yellow]],and[not[rectangle],size2]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:blue;4:or[%s,%s];4:circle;4:size1;4:not[%s];4:yellow;4:and[%s,%s];4:not[%s];4:rectangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.forall(and[blue,rectangle],filter(filter(x.s, size1), yellow))'	0:forall(%s,%s);4:and[%s,%s];4:blue;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow
'λx.contains(x.o, filter(filter(x.s, triangle), rectangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle
'λx.apply(rectangle,iota(filter(filter(filter(filter(x.s, iff[yellow,and[rectangle,or[circle,blue]]]), blue), blue), not[rectangle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:yellow;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:circle;4:blue;4:blue;4:blue;4:not[%s];4:rectangle
'λx.forall(iff[rectangle,and[nor[and[and[triangle,blue],triangle],triangle],size2]],filter(x.s, apply(size-leq,x.o)))'	0:forall(%s,%s);4:iff[%s,%s];4:rectangle;4:and[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:blue;4:triangle;4:triangle;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:%s.o;2:x
'λx.apply(and[and[green,and[circle,rectangle]],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:circle;4:rectangle;4:triangle;1:%s.o;2:x
'λx.exists(and[not[apply(same_color,x.o)],green], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green;3:%s.s;2:x
'λx.contains(iota(x.s), filter(filter(x.s, size3), not[apply(same_size,iota(filter(filter(x.s, size2), and[not[blue],size1])))]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:not[%s];4:blue;4:size1
'λx.apply(not[triangle],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(or[nand[and[yellow,blue],yellow],not[green]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:yellow;4:blue;4:yellow;4:not[%s];4:green;1:%s.o;2:x
'λx.apply(or[apply(same_color,x.o),rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle;1:%s.o;2:x
'λx.apply(not[blue],iota(filter(filter(filter(filter(x.s, not[size1]), blue), size3), size1)))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:blue;4:size3;4:size1
'λx.apply(circle,iota(filter(filter(x.s, circle), green)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green
'λx.apply(size1,iota(filter(filter(filter(filter(x.s, triangle), and[rectangle,triangle]), blue), and[yellow,implies[not[and[size2,green]],and[and[apply(same_size,iota(x.s)),and[size2,not[rectangle]]],size1]]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:rectangle;4:triangle;4:blue;4:and[%s,%s];4:yellow;4:implies[%s,%s];4:not[%s];4:and[%s,%s];4:size2;4:green;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:not[%s];4:rectangle;4:size1
'λx.apply(iff[yellow,size2],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:yellow;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(or[blue,apply(same_size,x.o)],iota(filter(filter(filter(x.s, circle), rectangle), yellow)))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle;4:yellow
'λx.apply(and[rectangle,and[rectangle,rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:rectangle;4:rectangle;1:%s.o;2:x
'λx.apply(and[apply(same_size,x.o),circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;1:%s.o;2:x
'λx.forall(green,filter(filter(x.s, green), size1))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1
'λx.apply(and[size2,or[size3,or[circle,blue]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:or[%s,%s];4:size3;4:or[%s,%s];4:circle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[size1,blue],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:size1;4:blue;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(x.s, rectangle), size2)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2
'λx.apply(yellow,iota(filter(filter(x.s, rectangle), size3)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3
'λx.apply(not[size3],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(and[size3,and[circle,yellow]],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:circle;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.empty(filter(filter(x.s, and[rectangle,blue]), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:blue;4:size3
'λx.contains(iota(filter(x.s, and[size3,blue])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:blue;3:%s.s;2:x
'λx.apply(and[size1,and[size3,or[size3,rectangle]]],iota(filter(x.s, and[nor[size2,size2],circle])))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:and[%s,%s];4:size3;4:or[%s,%s];4:size3;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:size2;4:size2;4:circle
'λx.exists(or[nand[nand[blue,size3],yellow],green], filter(filter(filter(filter(filter(x.s, blue), size1), yellow), and[size2,blue]), circle))'	0:exists(%s, %s);4:or[%s,%s];4:nand[%s,%s];4:nand[%s,%s];4:blue;4:size3;4:yellow;4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1;4:yellow;4:and[%s,%s];4:size2;4:blue;4:circle
'λx.apply(or[triangle,size3],iota(filter(filter(x.s, or[and[triangle,size3],circle]), size2)))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:triangle;4:size3;4:circle;4:size2
'λx.apply(size3,iota(filter(x.s, or[green,and[green,or[size2,green]]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:and[%s,%s];4:green;4:or[%s,%s];4:size2;4:green
'λx.empty(filter(filter(x.s, and[circle,blue]), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:blue;4:yellow
'λx.apply(size2,iota(filter(filter(filter(x.s, green), and[blue,rectangle]), or[and[green,and[apply(same_size,x.o),rectangle]],rectangle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:blue;4:rectangle;4:or[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:rectangle;4:rectangle
'λx.apply(and[not[or[iff[not[green],size2],apply(same_shape,iota(filter(filter(filter(x.s, triangle), size2), blue)))]],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:or[%s,%s];4:iff[%s,%s];4:not[%s];4:green;4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2;4:blue;4:size3;1:%s.o;2:x
'λx.empty(filter(filter(x.s, circle), and[blue,size1]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:blue;4:size1
'λx.apply(not[nor[circle,size1]],iota(filter(x.s, nor[size2,size2])))'	0:apply(%s,%s);4:not[%s];4:nor[%s,%s];4:circle;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size2;4:size2
'λx.apply(apply(same_color,iota(filter(filter(filter(x.s, green), rectangle), blue))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle;4:blue;1:%s.o;2:x
'λx.exists(apply(same_size,iota(x.s)), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(and[triangle,implies[and[circle,yellow],rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:implies[%s,%s];4:and[%s,%s];4:circle;4:yellow;4:rectangle;1:%s.o;2:x
'λx.apply(not[circle],iota(filter(filter(filter(x.s, size2), size1), yellow)))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1;4:yellow
'λx.apply(apply(same_size,iota(filter(filter(x.s, yellow), rectangle))),iota(filter(x.s, not[rectangle])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle
'λx.exists(rectangle, filter(x.s, circle))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.empty(filter(x.s, apply(same_shape,x.o)))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.exists(rectangle, filter(filter(x.s, size3), or[size1,not[size3]]))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:size1;4:not[%s];4:size3
'λx.apply(not[iff[triangle,and[nand[and[size3,apply(same_size,x.o)],implies[size2,not[and[and[size2,implies[size1,yellow]],blue]]]],green]]],x.o)'	0:apply(%s,%s);4:not[%s];4:iff[%s,%s];4:triangle;4:and[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:implies[%s,%s];4:size2;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:implies[%s,%s];4:size1;4:yellow;4:blue;4:green;1:%s.o;2:x
'λx.empty(filter(filter(x.s, size2), apply(same_color,iota(filter(x.s, apply(same_size,x.o))))))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(filter(x.s, size3), and[size3,size2]), and[size3,yellow])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:size3;4:size2;4:and[%s,%s];4:size3;4:yellow
'λx.apply(not[implies[apply(same_size,x.o),blue]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(x.s, and[and[and[green,size2],size1],triangle]), apply(same_shape,iota(x.s))), triangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:size2;4:size1;4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle
'λx.apply(yellow,iota(filter(x.s, and[yellow,apply(same_size,iota(x.s))])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[circle,or[size3,yellow]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:circle;4:or[%s,%s];4:size3;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(size3,iota(filter(x.s, and[yellow,or[green,nor[triangle,apply(same_size,iota(filter(x.s, blue)))]]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:or[%s,%s];4:green;4:nor[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.forall(and[size2,and[apply(same_size,iota(x.s)),green]],filter(x.s, nand[size2,not[circle]]))'	0:forall(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:green;3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size2;4:not[%s];4:circle
'λx.apply(circle,iota(filter(filter(filter(x.s, green), and[size1,and[size2,and[or[size1,size1],circle]]]), apply(same_size,iota(x.s)))))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:size1;4:and[%s,%s];4:size2;4:and[%s,%s];4:or[%s,%s];4:size1;4:size1;4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.forall(size1,x.s)'	0:forall(%s,%s);4:size1;3:%s.s;2:x
'λx.forall(size2,x.s)'	0:forall(%s,%s);4:size2;3:%s.s;2:x
'λx.forall(size3,x.s)'	0:forall(%s,%s);4:size3;3:%s.s;2:x
'λx.exists(not[triangle], x.s)'	0:exists(%s, %s);4:not[%s];4:triangle;3:%s.s;2:x
'λx.apply(or[triangle,size3],iota(filter(filter(filter(filter(x.s, size1), blue), size2), triangle)))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue;4:size2;4:triangle
'λx.apply(and[and[size1,rectangle],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:rectangle;4:size3;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, apply(same_shape,iota(filter(x.s, triangle))))))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(green,iota(filter(filter(filter(x.s, or[size1,yellow]), blue), green)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:yellow;4:blue;4:green
'λx.apply(and[rectangle,circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:circle;1:%s.o;2:x
'λx.apply(nand[nor[apply(same_size,iota(filter(x.s, green))),and[iff[and[green,and[blue,not[rectangle]]],and[yellow,or[blue,iff[or[or[size2,not[rectangle]],iff[green,size2]],rectangle]]]],implies[size2,size1]]],or[blue,blue]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:blue;4:not[%s];4:rectangle;4:and[%s,%s];4:yellow;4:or[%s,%s];4:blue;4:iff[%s,%s];4:or[%s,%s];4:or[%s,%s];4:size2;4:not[%s];4:rectangle;4:iff[%s,%s];4:green;4:size2;4:rectangle;4:implies[%s,%s];4:size2;4:size1;4:or[%s,%s];4:blue;4:blue;1:%s.o;2:x
'λx.apply(not[apply(same_color,iota(filter(filter(filter(x.s, triangle), nand[rectangle,size3]), or[rectangle,apply(same_shape,iota(x.s))])))],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:nand[%s,%s];4:rectangle;4:size3;4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.exists(size2, filter(filter(x.s, and[and[and[size3,implies[circle,or[nor[yellow,or[or[size2,or[and[and[blue,size1],nor[size1,blue]],blue]],not[rectangle]]],nor[size2,nand[and[and[yellow,and[triangle,triangle]],green],green]]]]],size2],and[green,iff[yellow,circle]]]), green))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:implies[%s,%s];4:circle;4:or[%s,%s];4:nor[%s,%s];4:yellow;4:or[%s,%s];4:or[%s,%s];4:size2;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:size1;4:nor[%s,%s];4:size1;4:blue;4:blue;4:not[%s];4:rectangle;4:nor[%s,%s];4:size2;4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:triangle;4:triangle;4:green;4:green;4:size2;4:and[%s,%s];4:green;4:iff[%s,%s];4:yellow;4:circle;4:green
'λx.forall(nor[blue,size2],x.s)'	0:forall(%s,%s);4:nor[%s,%s];4:blue;4:size2;3:%s.s;2:x
'λx.exists(or[size2,and[yellow,green]], filter(filter(filter(x.s, iff[apply(same_size,iota(filter(x.s, blue))),size3]), rectangle), green))'	0:exists(%s, %s);4:or[%s,%s];4:size2;4:and[%s,%s];4:yellow;4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3;4:rectangle;4:green
'λx.forall(yellow,filter(filter(filter(filter(x.s, size3), circle), apply(same_color,iota(filter(x.s, rectangle)))), size2))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2
'λx.forall(and[green,circle],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:green;4:circle;3:%s.s;2:x
'λx.apply(or[rectangle,apply(same_color,iota(filter(x.s, yellow)))],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(x.s, iff[size2,not[blue]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size2;4:not[%s];4:blue
'λx.apply(size1,iota(filter(filter(x.s, yellow), blue)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:blue
'λx.forall(triangle,filter(filter(x.s, and[yellow,triangle]), implies[triangle,implies[size1,size2]]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:triangle;4:implies[%s,%s];4:triangle;4:implies[%s,%s];4:size1;4:size2
'λx.apply(not[apply(size-lt,x.o)],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[yellow,apply(same_shape,iota(filter(x.s, green)))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;1:%s.o;2:x
'λx.apply(nand[nand[size2,not[size1]],rectangle],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:nand[%s,%s];4:nand[%s,%s];4:size2;4:not[%s];4:size1;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.forall(rectangle,filter(filter(x.s, rectangle), apply(same_shape,x.o)))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(nand[apply(size-leq,x.o),size3],iota(filter(x.s, not[and[blue,and[yellow,apply(size-gt,x.o)]]])))'	0:apply(%s,%s);4:nand[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:yellow;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(filter(x.s, triangle), blue), size3)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue;4:size3
'λx.apply(and[or[blue,size1],not[yellow]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:blue;4:size1;4:not[%s];4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(and[circle,blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:blue;1:%s.o;2:x
'λx.apply(or[or[rectangle,size3],not[green]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:rectangle;4:size3;4:not[%s];4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(or[triangle,blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:blue;1:%s.o;2:x
'λx.apply(implies[green,blue],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:green;4:blue;1:%s.o;2:x
'λx.apply(or[size2,nand[size2,rectangle]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:nand[%s,%s];4:size2;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, circle)), filter(x.s, triangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(and[triangle,nand[circle,yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:nand[%s,%s];4:circle;4:yellow;1:%s.o;2:x
'λx.forall(triangle,filter(x.s, apply(same_color,iota(x.s))))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.exists(size1, filter(x.s, and[apply(same_size,iota(x.s)),apply(same_size,x.o)]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(and[yellow,implies[blue,implies[yellow,yellow]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:implies[%s,%s];4:blue;4:implies[%s,%s];4:yellow;4:yellow;1:%s.o;2:x
'λx.apply(implies[nor[and[blue,size3],size2],nor[apply(same_size,x.o),not[not[and[apply(same_size,x.o),rectangle]]]]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:blue;4:size3;4:size2;4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:not[%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:rectangle;1:%s.o;2:x
'λx.apply(triangle,iota(filter(x.s, blue)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.contains(iota(filter(filter(filter(x.s, not[green]), not[size1]), triangle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:not[%s];4:size1;4:triangle;3:%s.s;2:x
'λx.exists(rectangle, filter(x.s, yellow))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.empty(filter(filter(filter(x.s, size3), not[blue]), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:blue;4:yellow
'λx.exists(and[and[circle,size3],circle], filter(filter(x.s, blue), rectangle))'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:circle;4:size3;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle
'λx.apply(and[green,apply(size-leq,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(nand[not[implies[circle,circle]],or[triangle,apply(same_shape,iota(x.s))]],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:not[%s];4:implies[%s,%s];4:circle;4:circle;4:or[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(x.s, yellow), size1)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1
'λx.apply(green,iota(filter(filter(filter(filter(filter(filter(x.s, green), triangle), and[not[and[rectangle,and[circle,yellow]]],circle]), triangle), size3), blue)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:triangle;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:circle;4:yellow;4:circle;4:triangle;4:size3;4:blue
'λx.apply(and[blue,blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:blue;1:iota(%s);3:%s.s;2:x
'λx.exists(apply(same_shape,iota(filter(x.s, green))), filter(x.s, triangle))'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(iff[circle,implies[size3,and[apply(same_size,iota(x.s)),or[triangle,triangle]]]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:circle;4:implies[%s,%s];4:size3;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:triangle;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(filter(x.s, size2), size2), nor[nand[blue,size2],triangle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2;4:nor[%s,%s];4:nand[%s,%s];4:blue;4:size2;4:triangle
'λx.contains(x.o, filter(filter(filter(x.s, or[green,nand[size3,nor[and[blue,size2],circle]]]), yellow), size3))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:nand[%s,%s];4:size3;4:nor[%s,%s];4:and[%s,%s];4:blue;4:size2;4:circle;4:yellow;4:size3
'λx.forall(blue,filter(filter(x.s, rectangle), size2))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2
'λx.contains(iota(filter(filter(x.s, and[rectangle,blue]), rectangle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:blue;4:rectangle;3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, iff[and[blue,blue],or[and[and[not[size2],yellow],apply(same_shape,iota(x.s))],not[rectangle]]]), size3), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:and[%s,%s];4:blue;4:blue;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size2;4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:not[%s];4:rectangle;4:size3;4:circle
'λx.apply(blue,iota(filter(filter(x.s, apply(same_color,x.o)), yellow)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow
'λx.apply(and[circle,not[and[circle,or[blue,yellow]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:not[%s];4:and[%s,%s];4:circle;4:or[%s,%s];4:blue;4:yellow;1:%s.o;2:x
'λx.exists(and[yellow,triangle], filter(filter(x.s, circle), circle))'	0:exists(%s, %s);4:and[%s,%s];4:yellow;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:circle
'λx.apply(and[blue,yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:yellow;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(filter(x.s, apply(same_color,iota(filter(filter(x.s, blue), blue)))), and[yellow,green]), size1)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue;4:and[%s,%s];4:yellow;4:green;4:size1
'λx.apply(and[circle,rectangle],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.contains(iota(x.s), filter(x.s, apply(same_shape,x.o)))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.exists(nor[size3,or[or[rectangle,apply(same_color,x.o)],not[green]]], x.s)'	0:exists(%s, %s);4:nor[%s,%s];4:size3;4:or[%s,%s];4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:green;3:%s.s;2:x
'λx.forall(iff[size3,size1],filter(filter(x.s, size2), blue))'	0:forall(%s,%s);4:iff[%s,%s];4:size3;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue
'λx.apply(nand[not[and[size1,green]],size2],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:not[%s];4:and[%s,%s];4:size1;4:green;4:size2;1:%s.o;2:x
'λx.apply(implies[triangle,rectangle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:triangle;4:rectangle;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(filter(filter(filter(filter(filter(x.s, nor[apply(same_shape,x.o),nand[implies[circle,and[circle,and[triangle,green]]],triangle]]), green), size2), and[yellow,size2]), size1), and[yellow,or[size2,apply(size-lt,x.o)]]), size2)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:nand[%s,%s];4:implies[%s,%s];4:circle;4:and[%s,%s];4:circle;4:and[%s,%s];4:triangle;4:green;4:triangle;4:green;4:size2;4:and[%s,%s];4:yellow;4:size2;4:size1;4:and[%s,%s];4:yellow;4:or[%s,%s];4:size2;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:size2
'λx.apply(nor[size1,yellow],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size1;4:yellow;1:%s.o;2:x
'λx.forall(nand[circle,iff[and[not[and[triangle,green]],apply(size-geq,iota(filter(x.s, blue)))],or[size2,and[blue,not[and[or[or[blue,green],not[apply(same_shape,x.o)]],size3]]]]]],filter(filter(x.s, blue), size3))'	0:forall(%s,%s);4:nand[%s,%s];4:circle;4:iff[%s,%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:triangle;4:green;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:size2;4:and[%s,%s];4:blue;4:not[%s];4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:blue;4:green;4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3
'λx.apply(iff[or[or[size2,not[size1]],size1],and[size1,and[not[iff[iff[apply(same_shape,iota(x.s)),and[apply(same_size,x.o),and[apply(same_color,x.o),not[or[size2,or[blue,triangle]]]]]],yellow]],apply(same_size,iota(filter(x.s, or[not[iff[yellow,iff[circle,triangle]]],yellow])))]]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:or[%s,%s];4:or[%s,%s];4:size2;4:not[%s];4:size1;4:size1;4:and[%s,%s];4:size1;4:and[%s,%s];4:not[%s];4:iff[%s,%s];4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:or[%s,%s];4:size2;4:or[%s,%s];4:blue;4:triangle;4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:iff[%s,%s];4:yellow;4:iff[%s,%s];4:circle;4:triangle;4:yellow;1:%s.o;2:x
'λx.apply(not[or[size1,iff[rectangle,size3]]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:size1;4:iff[%s,%s];4:rectangle;4:size3;1:%s.o;2:x
'λx.apply(apply(same_size,iota(filter(filter(x.s, green), and[and[circle,green],circle]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:and[%s,%s];4:circle;4:green;4:circle;1:%s.o;2:x
'λx.apply(implies[green,size2],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:green;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[green,size3],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:green;4:size3;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, triangle), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle
'λx.forall(not[size2],filter(filter(x.s, and[green,circle]), size1))'	0:forall(%s,%s);4:not[%s];4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:circle;4:size1
'λx.apply(and[or[size1,yellow],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size1;4:yellow;4:triangle;1:%s.o;2:x
'λx.apply(and[apply(same_color,x.o),not[triangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[blue,triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:triangle;1:%s.o;2:x
'λx.apply(not[and[circle,circle]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:circle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.exists(and[or[size1,triangle],size1], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:or[%s,%s];4:size1;4:triangle;4:size1;3:%s.s;2:x
'λx.forall(size1,filter(filter(x.s, circle), yellow))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow
'λx.exists(and[and[size2,apply(same_size,iota(x.s))],or[and[not[size2],apply(same_shape,x.o)],and[yellow,triangle]]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:yellow;4:triangle;3:%s.s;2:x
'λx.empty(filter(x.s, and[size3,size3]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:size3
'λx.empty(filter(x.s, and[size3,size2]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:size2
'λx.apply(size3,iota(filter(filter(filter(x.s, blue), circle), size2)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle;4:size2
'λx.contains(iota(filter(filter(filter(x.s, yellow), yellow), green)), filter(x.s, rectangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:yellow;4:green;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(nor[size1,and[yellow,blue]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size1;4:and[%s,%s];4:yellow;4:blue;1:%s.o;2:x
'λx.forall(and[blue,not[size2]],filter(x.s, not[rectangle]))'	0:forall(%s,%s);4:and[%s,%s];4:blue;4:not[%s];4:size2;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle
'λx.exists(circle, filter(filter(filter(x.s, apply(same_color,iota(x.s))), blue), circle))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:blue;4:circle
'λx.exists(circle, filter(filter(filter(x.s, yellow), and[green,blue]), circle))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:green;4:blue;4:circle
'λx.apply(and[size1,and[apply(same_shape,iota(filter(x.s, triangle))),size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3;1:%s.o;2:x
'λx.apply(and[not[apply(same_size,iota(x.s))],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:yellow;1:%s.o;2:x
'λx.exists(yellow, filter(x.s, triangle))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(and[apply(size-geq,iota(x.s)),not[circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:not[%s];4:circle;1:%s.o;2:x
'λx.apply(not[and[yellow,not[and[size3,green]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:yellow;4:not[%s];4:and[%s,%s];4:size3;4:green;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(filter(filter(filter(x.s, circle), not[or[rectangle,size1]]), blue), size1), size2), circle), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:or[%s,%s];4:rectangle;4:size1;4:blue;4:size1;4:size2;4:circle;4:size1
'λx.apply(apply(same_size,x.o),iota(filter(filter(filter(x.s, triangle), size1), size2)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size1;4:size2
'λx.apply(nand[size3,rectangle],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:size3;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(size-lt,iota(filter(filter(x.s, circle), and[size2,or[apply(same_size,iota(x.s)),blue]]))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:size2;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[size2,circle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size2;4:circle;1:%s.o;2:x
'λx.apply(implies[size1,circle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size1;4:circle;1:%s.o;2:x
'λx.apply(not[rectangle],iota(filter(filter(filter(x.s, not[size1]), size2), size1)))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:size2;4:size1
'λx.apply(or[size1,nor[yellow,nand[size3,triangle]]],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:nor[%s,%s];4:yellow;4:nand[%s,%s];4:size3;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.forall(rectangle,filter(filter(x.s, circle), apply(size-geq,iota(filter(filter(x.s, blue), circle)))))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle
'λx.apply(implies[size3,circle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size3;4:circle;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(filter(filter(x.s, circle), blue), size2), size2)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue;4:size2;4:size2
'λx.apply(nor[blue,size2],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:blue;4:size2;1:%s.o;2:x
'λx.apply(nor[blue,size3],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:blue;4:size3;1:%s.o;2:x
'λx.apply(nor[rectangle,green],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:rectangle;4:green;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(x.s, size2), implies[yellow,size2]), yellow), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:implies[%s,%s];4:yellow;4:size2;4:yellow;4:size3
'λx.apply(size1,iota(filter(filter(x.s, or[circle,and[size1,green]]), size2)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:and[%s,%s];4:size1;4:green;4:size2
'λx.exists(iff[blue,rectangle], filter(filter(x.s, green), blue))'	0:exists(%s, %s);4:iff[%s,%s];4:blue;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue
'λx.forall(triangle,filter(filter(filter(x.s, apply(same_shape,iota(filter(filter(x.s, apply(same_color,iota(filter(x.s, or[circle,triangle])))), rectangle)))), and[triangle,and[blue,not[or[implies[rectangle,and[size1,not[not[and[blue,and[size3,size2]]]]]],size1]]]]), blue))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:triangle;4:rectangle;4:and[%s,%s];4:triangle;4:and[%s,%s];4:blue;4:not[%s];4:or[%s,%s];4:implies[%s,%s];4:rectangle;4:and[%s,%s];4:size1;4:not[%s];4:not[%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:size3;4:size2;4:size1;4:blue
'λx.exists(or[blue,nor[and[size2,green],circle]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:blue;4:nor[%s,%s];4:and[%s,%s];4:size2;4:green;4:circle;3:%s.s;2:x
'λx.apply(or[and[green,iff[and[yellow,blue],and[size1,size1]]],nor[yellow,blue]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:green;4:iff[%s,%s];4:and[%s,%s];4:yellow;4:blue;4:and[%s,%s];4:size1;4:size1;4:nor[%s,%s];4:yellow;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_color,iota(filter(filter(filter(filter(x.s, green), size3), size1), or[apply(same_shape,x.o),rectangle]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size3;4:size1;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(x.s, not[rectangle]), green))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;4:green
'λx.apply(not[triangle],iota(filter(x.s, nand[circle,triangle])))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:circle;4:triangle
'λx.apply(rectangle,iota(filter(filter(x.s, or[circle,circle]), triangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:circle;4:triangle
'λx.apply(or[green,blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:blue;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(filter(filter(x.s, green), green), circle), rectangle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:green;4:circle;4:rectangle
'λx.contains(x.o, filter(filter(x.s, circle), rectangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle
'λx.apply(yellow,iota(filter(filter(x.s, size3), and[rectangle,size3])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:rectangle;4:size3
'λx.exists(blue, filter(filter(x.s, size2), or[implies[size1,apply(same_size,iota(filter(x.s, triangle)))],or[size3,not[green]]]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:implies[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:or[%s,%s];4:size3;4:not[%s];4:green
'λx.exists(green, filter(x.s, and[circle,size2]))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size2
'λx.apply(not[not[and[rectangle,and[size1,yellow]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:size1;4:yellow;1:%s.o;2:x
'λx.apply(triangle,iota(filter(x.s, circle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.exists(or[triangle,or[yellow,triangle]], filter(filter(filter(x.s, blue), green), size2))'	0:exists(%s, %s);4:or[%s,%s];4:triangle;4:or[%s,%s];4:yellow;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green;4:size2
'λx.apply(nor[and[size2,or[nor[rectangle,size1],green]],or[green,rectangle]],iota(filter(filter(x.s, size3), rectangle)))'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:size2;4:or[%s,%s];4:nor[%s,%s];4:rectangle;4:size1;4:green;4:or[%s,%s];4:green;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle
'λx.contains(iota(filter(filter(x.s, and[circle,or[size1,size2]]), or[not[blue],triangle])), filter(x.s, or[or[circle,rectangle],size1]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:or[%s,%s];4:size1;4:size2;4:or[%s,%s];4:not[%s];4:blue;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:circle;4:rectangle;4:size1
'λx.exists(not[and[nor[blue,not[size1]],nor[size2,size2]]], x.s)'	0:exists(%s, %s);4:not[%s];4:and[%s,%s];4:nor[%s,%s];4:blue;4:not[%s];4:size1;4:nor[%s,%s];4:size2;4:size2;3:%s.s;2:x
'λx.contains(iota(filter(filter(x.s, and[not[circle],size3]), nor[blue,not[yellow]])), filter(filter(x.s, circle), size3))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:circle;4:size3;4:nor[%s,%s];4:blue;4:not[%s];4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3
'λx.apply(and[blue,or[circle,size1]],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:or[%s,%s];4:circle;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(nand[yellow,yellow],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:yellow;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(filter(x.s, blue), triangle), size3)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle;4:size3
'λx.contains(iota(x.s), filter(filter(x.s, blue), rectangle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle
'λx.apply(blue,iota(filter(filter(filter(filter(filter(filter(x.s, or[or[nor[yellow,apply(same_color,x.o)],and[blue,green]],implies[triangle,rectangle]]), yellow), apply(same_color,iota(x.s))), triangle), yellow), implies[size3,rectangle])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:blue;4:green;4:implies[%s,%s];4:triangle;4:rectangle;4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:triangle;4:yellow;4:implies[%s,%s];4:size3;4:rectangle
'λx.exists(blue, filter(x.s, apply(size-leq,x.o)))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:%s.o;2:x
'λx.apply(nor[iff[and[triangle,and[iff[yellow,not[size3]],iff[and[rectangle,and[circle,size3]],implies[green,and[size2,size1]]]]],size3],and[circle,triangle]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:iff[%s,%s];4:yellow;4:not[%s];4:size3;4:iff[%s,%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:circle;4:size3;4:implies[%s,%s];4:green;4:and[%s,%s];4:size2;4:size1;4:size3;4:and[%s,%s];4:circle;4:triangle;1:%s.o;2:x
'λx.forall(apply(same_shape,iota(x.s)),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(circle,iota(filter(x.s, nand[circle,triangle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:circle;4:triangle
'λx.apply(size2,iota(filter(x.s, not[not[apply(same_color,iota(filter(x.s, green)))]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(size2,iota(filter(filter(filter(x.s, and[circle,rectangle]), size3), and[rectangle,size2])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:rectangle;4:size3;4:and[%s,%s];4:rectangle;4:size2
'λx.apply(and[size3,and[green,and[or[rectangle,size3],green]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:green;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:size3;4:green;1:%s.o;2:x
'λx.apply(and[triangle,apply(same_shape,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.forall(circle,filter(filter(x.s, or[size3,triangle]), or[iff[blue,not[rectangle]],nor[iff[blue,iff[blue,rectangle]],rectangle]]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:triangle;4:or[%s,%s];4:iff[%s,%s];4:blue;4:not[%s];4:rectangle;4:nor[%s,%s];4:iff[%s,%s];4:blue;4:iff[%s,%s];4:blue;4:rectangle;4:rectangle
'λx.forall(rectangle,filter(filter(x.s, size1), yellow))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow
'λx.forall(size2,filter(filter(filter(x.s, size3), yellow), size3))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow;4:size3
'λx.apply(and[and[iff[green,apply(same_shape,iota(filter(filter(x.s, blue), nand[not[not[triangle]],size3])))],yellow],circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:nand[%s,%s];4:not[%s];4:not[%s];4:triangle;4:size3;4:yellow;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[rectangle,nor[yellow,size1]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:rectangle;4:nor[%s,%s];4:yellow;4:size1;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(x.s, and[and[size2,size1],size2]), blue)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size2;4:size1;4:size2;4:blue
'λx.apply(green,iota(filter(filter(filter(x.s, size2), size3), circle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3;4:circle
'λx.apply(size1,iota(filter(filter(filter(x.s, size2), blue), not[not[size1]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue;4:not[%s];4:not[%s];4:size1
'λx.forall(nor[or[not[apply(same_size,iota(filter(filter(x.s, rectangle), green)))],and[yellow,and[yellow,circle]]],and[implies[circle,green],rectangle]],filter(filter(x.s, green), or[blue,rectangle]))'	0:forall(%s,%s);4:nor[%s,%s];4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green;4:and[%s,%s];4:yellow;4:and[%s,%s];4:yellow;4:circle;4:and[%s,%s];4:implies[%s,%s];4:circle;4:green;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:blue;4:rectangle
'λx.forall(circle,filter(filter(x.s, rectangle), blue))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue
'λx.apply(nor[nor[green,and[and[rectangle,yellow],triangle]],rectangle],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:nor[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:yellow;4:triangle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(filter(x.s, implies[yellow,apply(same_size,iota(filter(x.s, size1)))]), nor[apply(size-lt,iota(x.s)),size1]), size1)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:nor[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:size1;4:size1
'λx.apply(and[yellow,and[rectangle,rectangle]],iota(filter(x.s, not[size1])))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:and[%s,%s];4:rectangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1
'λx.forall(and[triangle,and[apply(same_size,iota(filter(filter(filter(x.s, triangle), and[size2,apply(size-lt,x.o)]), rectangle))),size1]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:size2;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:rectangle;4:size1;3:%s.s;2:x
'λx.empty(filter(filter(filter(filter(x.s, triangle), and[size2,apply(same_color,x.o)]), apply(same_size,x.o)), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3
'λx.apply(and[size1,triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:triangle;1:%s.o;2:x
'λx.apply(and[size3,triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:triangle;1:%s.o;2:x
'λx.apply(or[size1,circle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:circle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(x.s), filter(filter(x.s, yellow), yellow))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:yellow
'λx.apply(or[size2,circle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[or[size1,size1],or[rectangle,size2]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:or[%s,%s];4:size1;4:size1;4:or[%s,%s];4:rectangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[yellow,yellow],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:yellow;4:yellow;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, apply(size-lt,iota(x.s)))))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size3,circle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[green,rectangle],iota(filter(x.s, not[and[or[size1,nor[triangle,and[apply(same_color,x.o),not[and[and[triangle,and[apply(same_shape,iota(x.s)),size1]],circle]]]]],and[size3,blue]]])))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:or[%s,%s];4:size1;4:nor[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size1;4:circle;4:and[%s,%s];4:size3;4:blue
'λx.contains(x.o, filter(filter(filter(x.s, triangle), green), yellow))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green;4:yellow
'λx.exists(size3, filter(x.s, iff[size3,green]))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size3;4:green
'λx.apply(green,iota(filter(filter(x.s, size2), not[blue])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:not[%s];4:blue
'λx.apply(or[implies[yellow,green],or[or[yellow,yellow],implies[yellow,blue]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:implies[%s,%s];4:yellow;4:green;4:or[%s,%s];4:or[%s,%s];4:yellow;4:yellow;4:implies[%s,%s];4:yellow;4:blue;1:%s.o;2:x
'λx.apply(or[not[triangle],and[size3,size2]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:triangle;4:and[%s,%s];4:size3;4:size2;1:%s.o;2:x
'λx.apply(not[circle],iota(filter(filter(filter(filter(filter(filter(x.s, yellow), apply(same_size,x.o)), and[size1,triangle]), size2), blue), rectangle)))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:size1;4:triangle;4:size2;4:blue;4:rectangle
'λx.apply(rectangle,iota(filter(x.s, nor[size3,implies[implies[size3,green],blue]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size3;4:implies[%s,%s];4:implies[%s,%s];4:size3;4:green;4:blue
'λx.apply(or[green,not[not[size2]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:not[%s];4:not[%s];4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_color,iota(filter(x.s, or[rectangle,size2]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:size2;1:%s.o;2:x
'λx.forall(and[blue,and[triangle,iff[yellow,size1]]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:triangle;4:iff[%s,%s];4:yellow;4:size1;3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(filter(filter(x.s, green), rectangle), triangle), triangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle;4:triangle;4:triangle
'λx.exists(or[circle,rectangle], filter(filter(filter(filter(x.s, rectangle), circle), yellow), size3))'	0:exists(%s, %s);4:or[%s,%s];4:circle;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle;4:yellow;4:size3
'λx.apply(or[circle,size1],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.contains(iota(x.s), filter(filter(x.s, or[blue,size2]), and[or[circle,not[rectangle]],rectangle]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:size2;4:and[%s,%s];4:or[%s,%s];4:circle;4:not[%s];4:rectangle;4:rectangle
'λx.apply(apply(same_color,iota(filter(x.s, not[size1]))),iota(filter(filter(filter(filter(x.s, or[and[green,blue],circle]), and[green,and[circle,blue]]), iff[yellow,iff[or[not[size2],and[not[green],yellow]],yellow]]), and[and[green,green],or[and[not[not[yellow]],not[or[and[or[size2,circle],circle],triangle]]],and[circle,size3]]])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:green;4:blue;4:circle;4:and[%s,%s];4:green;4:and[%s,%s];4:circle;4:blue;4:iff[%s,%s];4:yellow;4:iff[%s,%s];4:or[%s,%s];4:not[%s];4:size2;4:and[%s,%s];4:not[%s];4:green;4:yellow;4:yellow;4:and[%s,%s];4:and[%s,%s];4:green;4:green;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:not[%s];4:yellow;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size2;4:circle;4:circle;4:triangle;4:and[%s,%s];4:circle;4:size3
'λx.apply(and[size1,and[yellow,apply(size-lt,x.o)]],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:and[%s,%s];4:yellow;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(nand[not[apply(size-lt,iota(filter(x.s, rectangle)))],not[or[size1,not[or[blue,yellow]]]]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:nand[%s,%s];4:not[%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:or[%s,%s];4:size1;4:not[%s];4:or[%s,%s];4:blue;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.forall(triangle,filter(filter(x.s, rectangle), rectangle))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle
'λx.empty(filter(x.s, or[green,blue]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:blue
'λx.apply(nand[implies[nor[or[apply(same_size,iota(x.s)),apply(same_size,iota(x.s))],not[or[size2,blue]]],and[iff[size1,apply(same_shape,x.o)],size3]],or[and[size1,yellow],nor[rectangle,and[blue,rectangle]]]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:implies[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:size2;4:blue;4:and[%s,%s];4:iff[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3;4:or[%s,%s];4:and[%s,%s];4:size1;4:yellow;4:nor[%s,%s];4:rectangle;4:and[%s,%s];4:blue;4:rectangle;1:%s.o;2:x
'λx.apply(and[size1,and[and[apply(size-geq,x.o),or[size1,size1]],circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:or[%s,%s];4:size1;4:size1;4:circle;1:%s.o;2:x
'λx.forall(size2,filter(filter(x.s, and[size2,green]), apply(same_size,iota(filter(filter(x.s, yellow), circle)))))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle
'λx.apply(rectangle,iota(filter(filter(x.s, and[or[apply(same_size,iota(filter(x.s, blue))),apply(size-gt,x.o)],yellow]), and[size1,blue])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:yellow;4:and[%s,%s];4:size1;4:blue
'λx.contains(x.o, filter(filter(filter(x.s, nand[iff[apply(same_shape,x.o),apply(size-gt,x.o)],blue]), not[yellow]), blue))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:blue;4:not[%s];4:yellow;4:blue
'λx.apply(and[blue,or[size2,size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:or[%s,%s];4:size2;4:size3;1:%s.o;2:x
'λx.apply(or[and[size3,apply(same_size,x.o)],size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1;1:%s.o;2:x
'λx.apply(yellow,iota(filter(x.s, apply(same_color,x.o))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(and[size2,triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:triangle;1:%s.o;2:x
'λx.forall(apply(same_shape,iota(x.s)),filter(x.s, size1))'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(and[and[circle,and[circle,yellow]],green], filter(filter(filter(filter(filter(filter(x.s, triangle), triangle), triangle), blue), size2), implies[and[or[and[blue,size1],iff[not[triangle],or[size1,and[blue,circle]]]],and[size3,or[apply(same_color,iota(x.s)),or[size3,or[apply(same_color,iota(x.s)),green]]]]],and[size2,or[green,size2]]]))'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:circle;4:yellow;4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:triangle;4:triangle;4:blue;4:size2;4:implies[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:blue;4:size1;4:iff[%s,%s];4:not[%s];4:triangle;4:or[%s,%s];4:size1;4:and[%s,%s];4:blue;4:circle;4:and[%s,%s];4:size3;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:green;4:and[%s,%s];4:size2;4:or[%s,%s];4:green;4:size2
'λx.apply(not[nand[green,and[green,rectangle]]],iota(filter(filter(x.s, blue), yellow)))'	0:apply(%s,%s);4:not[%s];4:nand[%s,%s];4:green;4:and[%s,%s];4:green;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow
'λx.apply(triangle,iota(filter(filter(filter(filter(x.s, yellow), size1), blue), and[or[blue,not[size1]],apply(same_shape,x.o)])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;4:blue;4:and[%s,%s];4:or[%s,%s];4:blue;4:not[%s];4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(not[or[size1,not[or[yellow,blue]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:size1;4:not[%s];4:or[%s,%s];4:yellow;4:blue;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, and[rectangle,circle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:circle
'λx.apply(iff[size3,or[rectangle,or[apply(same_color,x.o),circle]]],iota(filter(x.s, apply(size-leq,iota(x.s)))))'	0:apply(%s,%s);4:iff[%s,%s];4:size3;4:or[%s,%s];4:rectangle;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(x.s, green), or[iff[blue,triangle],nand[yellow,size1]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:iff[%s,%s];4:blue;4:triangle;4:nand[%s,%s];4:yellow;4:size1
'λx.apply(and[and[blue,size1],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:size1;4:green;1:%s.o;2:x
'λx.apply(apply(same_size,iota(filter(filter(x.s, blue), or[and[apply(same_color,x.o),green],rectangle]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green;4:rectangle;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(filter(x.s, not[nand[and[implies[rectangle,size2],or[or[size2,nand[circle,rectangle]],green]],circle]]), size1))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:nand[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:rectangle;4:size2;4:or[%s,%s];4:or[%s,%s];4:size2;4:nand[%s,%s];4:circle;4:rectangle;4:green;4:circle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(and[yellow,triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(x.s, triangle), circle)), filter(filter(x.s, size1), size1))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1
'λx.apply(implies[triangle,yellow],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:triangle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(not[blue],x.o)'	0:apply(%s,%s);4:not[%s];4:blue;1:%s.o;2:x
'λx.apply(and[rectangle,and[circle,circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:circle;4:circle;1:%s.o;2:x
'λx.forall(size3,filter(filter(x.s, blue), and[and[blue,green],green]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:and[%s,%s];4:blue;4:green;4:green
'λx.exists(and[rectangle,not[apply(same_color,x.o)]], filter(filter(filter(x.s, yellow), yellow), size2))'	0:exists(%s, %s);4:and[%s,%s];4:rectangle;4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:yellow;4:size2
'λx.contains(iota(x.s), filter(filter(filter(x.s, or[size2,blue]), green), size1))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:blue;4:green;4:size1
'λx.contains(iota(x.s), filter(filter(filter(x.s, or[size2,blue]), green), green))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:blue;4:green;4:green
'λx.apply(and[size1,or[triangle,rectangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:or[%s,%s];4:triangle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[apply(same_shape,x.o),size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3;1:%s.o;2:x
'λx.apply(or[apply(same_shape,x.o),size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;1:%s.o;2:x
'λx.exists(or[apply(size-gt,iota(filter(filter(filter(x.s, blue), size1), triangle))),or[circle,triangle]], filter(x.s, apply(size-geq,iota(x.s))))'	0:exists(%s, %s);4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1;4:triangle;4:or[%s,%s];4:circle;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(x.s), filter(filter(filter(filter(filter(x.s, nor[triangle,and[rectangle,size3]]), triangle), circle), apply(size-gt,x.o)), size2))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:triangle;4:and[%s,%s];4:rectangle;4:size3;4:triangle;4:circle;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:size2
'λx.exists(apply(same_size,iota(x.s)), filter(filter(filter(filter(x.s, or[rectangle,size1]), circle), triangle), circle))'	0:exists(%s, %s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:size1;4:circle;4:triangle;4:circle
'λx.apply(apply(size-geq,x.o),iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(apply(same_shape,x.o),iota(filter(filter(x.s, and[and[triangle,rectangle],iff[and[rectangle,apply(same_color,iota(x.s))],rectangle]]), circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:triangle;4:rectangle;4:iff[%s,%s];4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:rectangle;4:circle
'λx.apply(iff[and[rectangle,green],apply(same_color,iota(filter(filter(filter(x.s, and[or[yellow,implies[rectangle,green]],apply(size-lt,x.o)]), triangle), and[apply(same_shape,iota(filter(filter(x.s, size1), yellow))),size3])))],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:rectangle;4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:yellow;4:implies[%s,%s];4:rectangle;4:green;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_shape,x.o),iota(filter(filter(filter(x.s, or[size2,nand[size3,circle]]), blue), nor[apply(same_color,x.o),yellow])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:nand[%s,%s];4:size3;4:circle;4:blue;4:nor[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow
'λx.empty(filter(x.s, and[and[size3,yellow],or[and[size3,and[nor[circle,or[implies[and[apply(size-lt,iota(x.s)),size1],not[size3]],and[blue,not[or[nor[not[blue],size3],size1]]]]],and[and[size3,size2],triangle]]],circle]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size3;4:yellow;4:or[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:nor[%s,%s];4:circle;4:or[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:size1;4:not[%s];4:size3;4:and[%s,%s];4:blue;4:not[%s];4:or[%s,%s];4:nor[%s,%s];4:not[%s];4:blue;4:size3;4:size1;4:and[%s,%s];4:and[%s,%s];4:size3;4:size2;4:triangle;4:circle
'λx.apply(size2,iota(filter(x.s, and[not[size3],blue])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:size3;4:blue
'λx.apply(rectangle,iota(filter(filter(filter(filter(x.s, or[rectangle,size3]), size2), rectangle), size2)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:size3;4:size2;4:rectangle;4:size2
'λx.apply(and[not[yellow],implies[and[yellow,circle],apply(same_color,iota(filter(x.s, blue)))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:yellow;4:implies[%s,%s];4:and[%s,%s];4:yellow;4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(filter(filter(x.s, apply(same_shape,iota(filter(filter(x.s, blue), and[size3,nand[green,and[and[or[or[size3,and[yellow,triangle]],green],rectangle],size2]]])))), triangle), size2), rectangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:size3;4:nand[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:size3;4:and[%s,%s];4:yellow;4:triangle;4:green;4:rectangle;4:size2;4:triangle;4:size2;4:rectangle
'λx.apply(and[size2,iff[size3,rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:iff[%s,%s];4:size3;4:rectangle;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(filter(x.s, rectangle), and[or[not[or[iff[apply(same_shape,x.o),green],green]],size3],size3]))),iota(filter(x.s, iff[nand[size2,blue],blue])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:or[%s,%s];4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green;4:green;4:size3;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:nand[%s,%s];4:size2;4:blue;4:blue
'λx.empty(filter(x.s, and[and[yellow,implies[rectangle,not[blue]]],and[implies[rectangle,rectangle],not[circle]]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:yellow;4:implies[%s,%s];4:rectangle;4:not[%s];4:blue;4:and[%s,%s];4:implies[%s,%s];4:rectangle;4:rectangle;4:not[%s];4:circle
'λx.apply(and[size3,and[triangle,size2]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:triangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(x.s), filter(x.s, or[rectangle,apply(same_color,x.o)]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.forall(and[size1,nor[and[or[not[blue],and[green,apply(same_shape,x.o)]],triangle],implies[apply(size-gt,iota(x.s)),yellow]]],filter(x.s, size3))'	0:forall(%s,%s);4:and[%s,%s];4:size1;4:nor[%s,%s];4:and[%s,%s];4:or[%s,%s];4:not[%s];4:blue;4:and[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle;4:implies[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(nor[iff[or[and[and[rectangle,size3],size2],and[green,apply(same_size,x.o)]],size3],green],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size3;4:size2;4:and[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;4:green;1:%s.o;2:x
'λx.forall(not[circle],filter(x.s, size2))'	0:forall(%s,%s);4:not[%s];4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.contains(iota(x.s), filter(x.s, rectangle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(implies[circle,or[size3,triangle]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:circle;4:or[%s,%s];4:size3;4:triangle;1:%s.o;2:x
'λx.apply(and[iff[size2,and[or[or[circle,blue],size3],green]],size1],iota(filter(filter(filter(filter(filter(x.s, yellow), triangle), size2), and[blue,rectangle]), and[rectangle,triangle])))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:size2;4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:circle;4:blue;4:size3;4:green;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle;4:size2;4:and[%s,%s];4:blue;4:rectangle;4:and[%s,%s];4:rectangle;4:triangle
'λx.apply(rectangle,iota(filter(x.s, and[and[triangle,apply(same_size,iota(x.s))],blue])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:blue
'λx.apply(or[nand[yellow,and[blue,yellow]],green],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:yellow;4:and[%s,%s];4:blue;4:yellow;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(filter(x.s, triangle), rectangle), apply(same_color,x.o))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, size2), apply(same_shape,x.o)))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(x.s, or[and[green,not[and[size1,and[nor[nand[yellow,green],size3],size2]]]],size3]), circle), circle), and[green,circle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:green;4:not[%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:nor[%s,%s];4:nand[%s,%s];4:yellow;4:green;4:size3;4:size2;4:size3;4:circle;4:circle;4:and[%s,%s];4:green;4:circle
'λx.apply(yellow,iota(filter(filter(filter(x.s, or[nand[green,and[and[rectangle,or[and[triangle,circle],rectangle]],size3]],blue]), green), yellow)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:nand[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:triangle;4:circle;4:rectangle;4:size3;4:blue;4:green;4:yellow
'λx.empty(filter(filter(filter(filter(filter(filter(x.s, not[not[or[rectangle,size1]]]), size2), not[yellow]), nor[implies[size1,or[blue,and[circle,size1]]],or[not[not[not[circle]]],blue]]), rectangle), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:or[%s,%s];4:rectangle;4:size1;4:size2;4:not[%s];4:yellow;4:nor[%s,%s];4:implies[%s,%s];4:size1;4:or[%s,%s];4:blue;4:and[%s,%s];4:circle;4:size1;4:or[%s,%s];4:not[%s];4:not[%s];4:not[%s];4:circle;4:blue;4:rectangle;4:circle
'λx.apply(rectangle,iota(filter(x.s, or[apply(size-lt,x.o),size1])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:size1
'λx.apply(not[size3],iota(filter(filter(filter(filter(filter(x.s, and[nor[not[size3],size2],circle]), size1), size1), yellow), nor[rectangle,green])))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:not[%s];4:size3;4:size2;4:circle;4:size1;4:size1;4:yellow;4:nor[%s,%s];4:rectangle;4:green
'λx.forall(or[yellow,blue],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:yellow;4:blue;3:%s.s;2:x
'λx.apply(not[apply(size-geq,iota(filter(filter(filter(filter(x.s, size2), rectangle), rectangle), blue)))],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle;4:rectangle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[apply(size-leq,x.o),rectangle],green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:rectangle;4:green;1:iota(%s);3:%s.s;2:x
'λx.forall(nor[and[size3,or[or[apply(same_size,iota(filter(x.s, size2))),yellow],blue]],rectangle],filter(x.s, size1))'	0:forall(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:size3;4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:yellow;4:blue;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(not[size3],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.exists(size2, filter(x.s, apply(same_size,x.o)))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.forall(and[circle,and[not[nor[and[rectangle,size3],blue]],green]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:circle;4:and[%s,%s];4:not[%s];4:nor[%s,%s];4:and[%s,%s];4:rectangle;4:size3;4:blue;4:green;3:%s.s;2:x
'λx.apply(or[green,or[nand[and[circle,rectangle],blue],not[rectangle]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:or[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:circle;4:rectangle;4:blue;4:not[%s];4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.exists(green, filter(filter(x.s, rectangle), blue))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue
'λx.apply(and[circle,and[not[iff[size1,size2]],size1]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:and[%s,%s];4:not[%s];4:iff[%s,%s];4:size1;4:size2;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(or[apply(same_size,x.o),not[apply(same_size,x.o)]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(or[not[yellow],size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:yellow;4:size3;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, nand[apply(size-lt,iota(filter(x.s, size2))),size1]), size1)), filter(x.s, apply(same_shape,iota(x.s))))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_size,x.o),iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.contains(iota(x.s), filter(x.s, nand[rectangle,size1]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:rectangle;4:size1
'λx.contains(iota(filter(x.s, or[size2,apply(same_color,x.o)])), filter(x.s, blue))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(apply(same_shape,iota(filter(filter(x.s, rectangle), circle))),iota(filter(filter(x.s, size3), size2)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2
'λx.apply(not[size1],iota(filter(x.s, not[apply(same_shape,iota(x.s))])))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(x.s, and[yellow,apply(same_size,iota(x.s))])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(filter(x.s, triangle), rectangle), and[green,size1])), filter(filter(filter(x.s, and[apply(same_shape,x.o),not[green]]), blue), blue))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle;4:and[%s,%s];4:green;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:green;4:blue;4:blue
'λx.exists(rectangle, filter(filter(x.s, rectangle), size3))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3
'λx.exists(iff[size1,green], x.s)'	0:exists(%s, %s);4:iff[%s,%s];4:size1;4:green;3:%s.s;2:x
'λx.exists(and[yellow,apply(same_shape,x.o)], filter(x.s, size1))'	0:exists(%s, %s);4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size1

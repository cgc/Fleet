'λx.apply(apply(same_size,x.o),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[size3,iff[green,nor[and[and[yellow,apply(same_size,iota(x.s))],circle],circle]]],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:size3;4:iff[%s,%s];4:green;4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:circle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[rectangle,triangle],iota(filter(x.s, green)))'	0:apply(%s,%s);4:implies[%s,%s];4:rectangle;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(or[green,size1],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(x.s, implies[green,yellow])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:green;4:yellow
'λx.apply(not[nor[and[circle,size3],green]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:nor[%s,%s];4:and[%s,%s];4:circle;4:size3;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(not[size2],iota(filter(filter(x.s, rectangle), blue)))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue
'λx.apply(triangle,iota(filter(x.s, and[apply(same_size,iota(x.s)),green])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:green
'λx.apply(blue,iota(filter(filter(x.s, triangle), yellow)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:yellow
'λx.exists(rectangle, filter(filter(filter(filter(filter(filter(filter(x.s, size1), and[rectangle,implies[circle,and[not[green],yellow]]]), triangle), size1), apply(same_shape,iota(x.s))), or[not[size1],and[green,size3]]), or[not[blue],rectangle]))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:rectangle;4:implies[%s,%s];4:circle;4:and[%s,%s];4:not[%s];4:green;4:yellow;4:triangle;4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:size1;4:and[%s,%s];4:green;4:size3;4:or[%s,%s];4:not[%s];4:blue;4:rectangle
'λx.exists(blue, filter(x.s, rectangle))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.contains(iota(filter(filter(x.s, size3), apply(same_shape,iota(x.s)))), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(nor[and[rectangle,green],or[or[not[and[apply(same_color,iota(x.s)),size2]],yellow],size1]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:rectangle;4:green;4:or[%s,%s];4:or[%s,%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size2;4:yellow;4:size1;1:%s.o;2:x
'λx.apply(nor[blue,blue],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:blue;4:blue;1:%s.o;2:x
'λx.apply(nand[green,rectangle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:green;4:rectangle;1:%s.o;2:x
'λx.apply(size1,iota(filter(x.s, and[green,blue])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:blue
'λx.forall(nand[apply(same_color,iota(x.s)),green],filter(x.s, or[size1,size3]))'	0:forall(%s,%s);4:nand[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:green;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:size3
'λx.apply(or[rectangle,triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:triangle;1:%s.o;2:x
'λx.apply(or[iff[or[rectangle,and[apply(same_color,iota(filter(filter(filter(filter(filter(x.s, and[size1,not[nand[green,size3]]]), not[size2]), rectangle), yellow), size2))),nor[yellow,rectangle]]],yellow],not[size1]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:not[%s];4:nand[%s,%s];4:green;4:size3;4:not[%s];4:size2;4:rectangle;4:yellow;4:size2;4:nor[%s,%s];4:yellow;4:rectangle;4:yellow;4:not[%s];4:size1;1:%s.o;2:x
'λx.empty(filter(filter(x.s, circle), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3
'λx.apply(green,iota(filter(filter(x.s, size1), size2)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2
'λx.exists(not[apply(same_size,iota(x.s))], filter(x.s, yellow))'	0:exists(%s, %s);4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(implies[size1,blue],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:implies[%s,%s];4:size1;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(yellow,iota(filter(filter(x.s, triangle), rectangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle
'λx.apply(not[triangle],iota(filter(filter(x.s, rectangle), yellow)))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:yellow
'λx.apply(iff[blue,apply(same_shape,x.o)],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(not[and[rectangle,apply(same_shape,x.o)]],iota(filter(x.s, not[blue])))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.exists(size3, filter(x.s, not[yellow]))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow
'λx.apply(or[nand[triangle,green],size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:triangle;4:green;4:size3;1:%s.o;2:x
'λx.apply(and[apply(size-geq,iota(x.s)),and[not[green],rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:green;4:rectangle;1:%s.o;2:x
'λx.apply(iff[triangle,and[apply(same_size,iota(x.s)),nor[rectangle,size2]]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:nor[%s,%s];4:rectangle;4:size2;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, apply(same_shape,iota(filter(filter(x.s, apply(same_shape,x.o)), green)))))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green
'λx.forall(or[implies[yellow,rectangle],size1],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:implies[%s,%s];4:yellow;4:rectangle;4:size1;3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(x.s, triangle), rectangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle
'λx.apply(or[yellow,circle],iota(filter(filter(filter(filter(x.s, triangle), triangle), circle), size1)))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:triangle;4:circle;4:size1
'λx.contains(x.o, filter(x.s, not[size3]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3
'λx.apply(or[or[not[yellow],implies[size1,and[size1,size1]]],green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:not[%s];4:yellow;4:implies[%s,%s];4:size1;4:and[%s,%s];4:size1;4:size1;4:green;1:%s.o;2:x
'λx.apply(and[not[iff[size1,rectangle]],and[green,yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:iff[%s,%s];4:size1;4:rectangle;4:and[%s,%s];4:green;4:yellow;1:%s.o;2:x
'λx.empty(filter(x.s, rectangle))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(size3,iota(filter(filter(x.s, green), green)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:green
'λx.apply(green,iota(filter(filter(x.s, size3), and[or[nor[size2,apply(size-gt,iota(filter(x.s, size3)))],or[blue,or[or[size1,and[implies[blue,not[and[size3,green]]],size1]],nand[size3,green]]]],size2])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:size2;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:blue;4:or[%s,%s];4:or[%s,%s];4:size1;4:and[%s,%s];4:implies[%s,%s];4:blue;4:not[%s];4:and[%s,%s];4:size3;4:green;4:size1;4:nand[%s,%s];4:size3;4:green;4:size2
'λx.apply(and[size2,or[blue,and[apply(same_color,iota(x.s)),not[size3]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:or[%s,%s];4:blue;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:not[%s];4:size3;1:%s.o;2:x
'λx.apply(not[size2],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[triangle,size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(or[apply(same_size,x.o),or[size3,yellow]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:size3;4:yellow;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, not[green]), implies[yellow,apply(size-gt,iota(filter(filter(x.s, size2), blue)))])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:implies[%s,%s];4:yellow;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue
'λx.apply(apply(same_color,iota(x.s)),iota(filter(x.s, green)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(apply(same_size,iota(filter(filter(filter(x.s, not[blue]), and[implies[apply(same_shape,x.o),circle],triangle]), green))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:and[%s,%s];4:implies[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;4:triangle;4:green;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(x.s, size2), not[size1]), and[rectangle,apply(size-lt,iota(filter(x.s, or[and[blue,triangle],green])))]), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:not[%s];4:size1;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:blue;4:triangle;4:green;4:blue
'λx.apply(size2,iota(filter(x.s, size1)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(or[and[and[green,apply(size-geq,iota(filter(x.s, size2)))],green],green],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[circle,green],size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:green;4:size3;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, or[or[apply(size-leq,x.o),apply(same_size,x.o)],implies[triangle,blue]])), filter(x.s, or[size1,rectangle]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:implies[%s,%s];4:triangle;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:rectangle
'λx.exists(size3, filter(filter(x.s, triangle), green))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green
'λx.contains(x.o, filter(filter(filter(x.s, and[and[rectangle,iff[blue,not[not[size1]]]],rectangle]), size3), not[rectangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:iff[%s,%s];4:blue;4:not[%s];4:not[%s];4:size1;4:rectangle;4:size3;4:not[%s];4:rectangle
'λx.apply(not[green],iota(filter(filter(x.s, or[or[and[size2,size1],size2],blue]), and[not[rectangle],blue])))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size2;4:size1;4:size2;4:blue;4:and[%s,%s];4:not[%s];4:rectangle;4:blue
'λx.apply(green,iota(filter(x.s, apply(same_shape,x.o))))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.forall(circle,filter(filter(x.s, size2), size1))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1
'λx.apply(circle,iota(filter(filter(filter(filter(x.s, or[size1,and[apply(same_color,x.o),and[rectangle,circle]]]), green), size2), not[rectangle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:rectangle;4:circle;4:green;4:size2;4:not[%s];4:rectangle
'λx.exists(and[size3,size3], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:size3;4:size3;3:%s.s;2:x
'λx.apply(circle,iota(filter(x.s, and[and[or[or[iff[not[blue],rectangle],not[yellow]],size1],blue],or[nor[nand[size1,triangle],rectangle],nor[yellow,circle]]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:iff[%s,%s];4:not[%s];4:blue;4:rectangle;4:not[%s];4:yellow;4:size1;4:blue;4:or[%s,%s];4:nor[%s,%s];4:nand[%s,%s];4:size1;4:triangle;4:rectangle;4:nor[%s,%s];4:yellow;4:circle
'λx.forall(iff[circle,circle],filter(x.s, triangle))'	0:forall(%s,%s);4:iff[%s,%s];4:circle;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(iff[size1,or[rectangle,yellow]],iota(filter(x.s, and[size1,size2])))'	0:apply(%s,%s);4:iff[%s,%s];4:size1;4:or[%s,%s];4:rectangle;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size2
'λx.exists(rectangle, x.s)'	0:exists(%s, %s);4:rectangle;3:%s.s;2:x
'λx.apply(not[or[apply(same_size,iota(filter(x.s, not[size2]))),circle]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:circle;1:%s.o;2:x
'λx.apply(implies[circle,circle],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:circle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[nand[iff[or[and[yellow,rectangle],yellow],rectangle],size3],blue],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:nand[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:and[%s,%s];4:yellow;4:rectangle;4:yellow;4:rectangle;4:size3;4:blue;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(x.s, size3), green), and[size3,apply(same_size,iota(x.s))]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green;4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(filter(x.s, size3), or[circle,iff[green,nand[size1,and[and[rectangle,green],not[rectangle]]]]]), yellow)), filter(filter(filter(filter(x.s, rectangle), and[size2,apply(size-geq,iota(filter(x.s, or[or[apply(size-gt,x.o),triangle],blue])))]), apply(same_color,x.o)), or[size3,nand[green,triangle]]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:circle;4:iff[%s,%s];4:green;4:nand[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:green;4:not[%s];4:rectangle;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:size2;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:triangle;4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:or[%s,%s];4:size3;4:nand[%s,%s];4:green;4:triangle
'λx.apply(or[size3,triangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[size1],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(x.s), filter(filter(filter(filter(x.s, nor[size3,and[nand[size2,size2],circle]]), rectangle), not[apply(same_shape,iota(x.s))]), triangle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size3;4:and[%s,%s];4:nand[%s,%s];4:size2;4:size2;4:circle;4:rectangle;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle
'λx.apply(size3,iota(filter(filter(x.s, triangle), blue)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue
'λx.contains(iota(filter(filter(x.s, yellow), and[circle,green])), filter(x.s, size1))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:circle;4:green;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(circle, filter(filter(x.s, size1), size2))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2
'λx.forall(nand[rectangle,and[yellow,green]],x.s)'	0:forall(%s,%s);4:nand[%s,%s];4:rectangle;4:and[%s,%s];4:yellow;4:green;3:%s.s;2:x
'λx.contains(iota(filter(x.s, size2)), filter(x.s, and[size1,iff[and[rectangle,not[size2]],and[not[circle],rectangle]]]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:iff[%s,%s];4:and[%s,%s];4:rectangle;4:not[%s];4:size2;4:and[%s,%s];4:not[%s];4:circle;4:rectangle
'λx.apply(not[not[and[size1,not[size3]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:and[%s,%s];4:size1;4:not[%s];4:size3;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, blue), not[and[and[blue,implies[yellow,triangle]],size1]]), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:implies[%s,%s];4:yellow;4:triangle;4:size1;4:size1
'λx.apply(triangle,iota(filter(x.s, size1)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(and[not[apply(size-gt,iota(x.s))],rectangle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:rectangle;3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(filter(x.s, yellow), blue), size1)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:blue;4:size1
'λx.exists(apply(same_shape,iota(x.s)), filter(filter(x.s, yellow), size2))'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2
'λx.apply(triangle,iota(filter(filter(x.s, and[triangle,apply(same_color,x.o)]), not[and[blue,yellow]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:blue;4:yellow
'λx.apply(yellow,iota(filter(filter(x.s, rectangle), iff[triangle,circle])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:iff[%s,%s];4:triangle;4:circle
'λx.apply(or[iff[size3,apply(size-geq,x.o)],and[green,size3]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:iff[%s,%s];4:size3;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:and[%s,%s];4:green;4:size3;1:iota(%s);3:%s.s;2:x
'λx.forall(size1,filter(x.s, and[and[size1,triangle],size1]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size1;4:triangle;4:size1
'λx.apply(triangle,iota(filter(x.s, and[blue,triangle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:triangle
'λx.contains(iota(filter(filter(x.s, not[iff[not[triangle],size3]]), and[blue,size2])), filter(filter(filter(x.s, apply(same_size,x.o)), or[apply(size-gt,x.o),size3]), and[and[triangle,or[size1,or[not[and[size1,and[apply(same_color,iota(x.s)),apply(size-geq,x.o)]]],and[rectangle,nand[apply(same_size,x.o),size1]]]]],blue]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:iff[%s,%s];4:not[%s];4:triangle;4:size3;4:and[%s,%s];4:blue;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:size3;4:and[%s,%s];4:and[%s,%s];4:triangle;4:or[%s,%s];4:size1;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:and[%s,%s];4:rectangle;4:nand[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1;4:blue
'λx.contains(x.o, filter(filter(filter(filter(x.s, and[or[triangle,circle],or[size3,yellow]]), yellow), circle), apply(same_size,iota(filter(filter(x.s, size2), green)))))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:triangle;4:circle;4:or[%s,%s];4:size3;4:yellow;4:yellow;4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green
'λx.forall(apply(same_shape,iota(x.s)),filter(x.s, or[or[not[circle],and[size2,apply(same_size,iota(x.s))]],yellow]))'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:not[%s];4:circle;4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:yellow
'λx.apply(nor[and[yellow,apply(same_color,iota(filter(filter(filter(filter(filter(x.s, triangle), and[and[implies[triangle,or[nor[green,triangle],not[green]]],blue],triangle]), size2), or[not[implies[size3,triangle]],blue]), triangle)))],size1],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:triangle;4:or[%s,%s];4:nor[%s,%s];4:green;4:triangle;4:not[%s];4:green;4:blue;4:triangle;4:size2;4:or[%s,%s];4:not[%s];4:implies[%s,%s];4:size3;4:triangle;4:blue;4:triangle;4:size1;1:%s.o;2:x
'λx.forall(green,filter(x.s, apply(same_color,iota(filter(x.s, circle)))))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.exists(not[and[yellow,apply(same_size,iota(x.s))]], filter(x.s, size1))'	0:exists(%s, %s);4:not[%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(and[green,blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(and[green,size3],iota(filter(filter(filter(filter(x.s, circle), apply(same_color,iota(x.s))), blue), green)))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:blue;4:green
'λx.empty(filter(x.s, or[and[size2,or[size3,apply(size-gt,iota(filter(x.s, implies[and[size2,triangle],not[blue]])))]],and[size3,and[blue,green]]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size2;4:or[%s,%s];4:size3;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:and[%s,%s];4:size2;4:triangle;4:not[%s];4:blue;4:and[%s,%s];4:size3;4:and[%s,%s];4:blue;4:green
'λx.apply(size3,iota(filter(filter(filter(x.s, and[blue,green]), rectangle), circle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:green;4:rectangle;4:circle
'λx.apply(or[blue,or[apply(size-gt,x.o),size3]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:size3;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, circle), size1)), filter(filter(x.s, size1), yellow))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow
'λx.apply(or[yellow,circle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:circle;1:iota(%s);3:%s.s;2:x
'λx.forall(triangle,x.s)'	0:forall(%s,%s);4:triangle;3:%s.s;2:x
'λx.forall(iff[green,and[yellow,size1]],x.s)'	0:forall(%s,%s);4:iff[%s,%s];4:green;4:and[%s,%s];4:yellow;4:size1;3:%s.s;2:x
'λx.apply(green,iota(filter(filter(x.s, size2), size3)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3
'λx.contains(x.o, filter(x.s, circle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(rectangle,iota(filter(filter(x.s, and[green,size2]), rectangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:size2;4:rectangle
'λx.apply(implies[and[apply(same_shape,iota(filter(x.s, and[and[and[blue,and[size2,size3]],green],blue]))),size2],rectangle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:size2;4:size3;4:green;4:blue;4:size2;4:rectangle;1:%s.o;2:x
'λx.apply(or[triangle,and[blue,yellow]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:and[%s,%s];4:blue;4:yellow;1:%s.o;2:x
'λx.apply(or[not[yellow],size1],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:yellow;4:size1;1:iota(%s);3:%s.s;2:x
'λx.forall(or[yellow,size3],filter(x.s, green))'	0:forall(%s,%s);4:or[%s,%s];4:yellow;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[yellow,blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:blue;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, circle), size1))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1
'λx.forall(circle,filter(filter(x.s, or[apply(same_shape,iota(x.s)),apply(same_shape,iota(filter(x.s, not[implies[circle,iff[size2,nand[circle,triangle]]]])))]), size1))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:implies[%s,%s];4:circle;4:iff[%s,%s];4:size2;4:nand[%s,%s];4:circle;4:triangle;4:size1
'λx.exists(or[not[circle],size1], filter(filter(x.s, circle), triangle))'	0:exists(%s, %s);4:or[%s,%s];4:not[%s];4:circle;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle
'λx.apply(iff[size2,blue],iota(filter(x.s, not[size1])))'	0:apply(%s,%s);4:iff[%s,%s];4:size2;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1
'λx.apply(blue,iota(filter(filter(x.s, triangle), rectangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle
'λx.apply(not[and[rectangle,or[size1,green]]],iota(filter(x.s, and[rectangle,not[not[or[or[size3,size1],nor[implies[circle,size3],or[and[apply(size-lt,x.o),and[rectangle,size3]],or[and[size1,green],green]]]]]]])))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:rectangle;4:or[%s,%s];4:size1;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:not[%s];4:not[%s];4:or[%s,%s];4:or[%s,%s];4:size3;4:size1;4:nor[%s,%s];4:implies[%s,%s];4:circle;4:size3;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:and[%s,%s];4:rectangle;4:size3;4:or[%s,%s];4:and[%s,%s];4:size1;4:green;4:green
'λx.apply(circle,iota(filter(filter(x.s, size2), not[circle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:not[%s];4:circle
'λx.apply(apply(same_size,iota(filter(filter(x.s, size3), or[green,yellow]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:green;4:yellow;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(x.s, circle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;1:%s.o;2:x
'λx.apply(iff[and[triangle,and[not[green],size1]],circle],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:not[%s];4:green;4:size1;4:circle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(x.s), filter(x.s, not[size2]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2
'λx.apply(and[triangle,and[circle,size2]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:circle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(filter(x.s, and[yellow,size3]), triangle), rectangle), nand[implies[and[triangle,size3],size2],apply(same_shape,iota(filter(x.s, not[apply(same_shape,iota(x.s))])))]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size3;4:triangle;4:rectangle;4:nand[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:triangle;4:size3;4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(and[nor[not[not[size3]],size3],blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:not[%s];4:not[%s];4:size3;4:size3;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[rectangle,size3],iota(filter(filter(x.s, circle), size3)))'	0:apply(%s,%s);4:iff[%s,%s];4:rectangle;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3
'λx.apply(iff[apply(same_color,x.o),size1],iota(filter(filter(x.s, blue), circle)))'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle
'λx.apply(and[yellow,not[or[not[or[implies[or[and[size3,nand[not[nand[or[size2,triangle],and[rectangle,size2]]],rectangle]],green],yellow],triangle]],size1]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:not[%s];4:or[%s,%s];4:not[%s];4:or[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size3;4:nand[%s,%s];4:not[%s];4:nand[%s,%s];4:or[%s,%s];4:size2;4:triangle;4:and[%s,%s];4:rectangle;4:size2;4:rectangle;4:green;4:yellow;4:triangle;4:size1;1:%s.o;2:x
'λx.forall(or[green,triangle],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:green;4:triangle;3:%s.s;2:x
'λx.exists(and[size3,rectangle], filter(filter(filter(x.s, implies[or[blue,implies[and[size2,size3],or[and[rectangle,circle],implies[yellow,apply(same_size,iota(x.s))]]]],and[yellow,and[not[and[and[green,and[not[circle],not[and[size2,circle]]]],triangle]],size1]]]), circle), nand[apply(same_color,iota(x.s)),blue]))'	0:exists(%s, %s);4:and[%s,%s];4:size3;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:or[%s,%s];4:blue;4:implies[%s,%s];4:and[%s,%s];4:size2;4:size3;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:circle;4:implies[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:not[%s];4:circle;4:not[%s];4:and[%s,%s];4:size2;4:circle;4:triangle;4:size1;4:circle;4:nand[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:blue
'λx.apply(blue,iota(filter(x.s, or[and[or[size3,and[size2,apply(same_shape,x.o)]],blue],or[or[and[rectangle,circle],green],blue]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size3;4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:rectangle;4:circle;4:green;4:blue
'λx.apply(not[apply(same_size,x.o)],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(not[nor[implies[size1,apply(size-leq,iota(filter(filter(filter(filter(x.s, rectangle), and[and[circle,size2],size2]), green), size3)))],not[size2]]],x.o)'	0:apply(%s,%s);4:not[%s];4:nor[%s,%s];4:implies[%s,%s];4:size1;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:and[%s,%s];4:circle;4:size2;4:size2;4:green;4:size3;4:not[%s];4:size2;1:%s.o;2:x
'λx.apply(or[triangle,and[blue,rectangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:and[%s,%s];4:blue;4:rectangle;1:%s.o;2:x
'λx.apply(or[blue,blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:blue;1:%s.o;2:x
'λx.contains(iota(filter(x.s, or[and[not[triangle],circle],and[and[nand[size2,size1],circle],and[not[size2],implies[and[yellow,blue],size1]]]])), filter(x.s, green))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:triangle;4:circle;4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:size2;4:size1;4:circle;4:and[%s,%s];4:not[%s];4:size2;4:implies[%s,%s];4:and[%s,%s];4:yellow;4:blue;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(or[and[blue,not[circle]],size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:blue;4:not[%s];4:circle;4:size3;1:%s.o;2:x
'λx.empty(filter(filter(x.s, green), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:green
'λx.forall(yellow,filter(filter(filter(x.s, or[apply(size-leq,iota(x.s)),yellow]), yellow), triangle))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:yellow;4:yellow;4:triangle
'λx.apply(iff[size3,green],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:size3;4:green;1:%s.o;2:x
'λx.contains(iota(x.s), filter(x.s, and[or[green,not[size2]],apply(same_size,x.o)]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:green;4:not[%s];4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(and[size3,not[size2]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:not[%s];4:size2;1:iota(%s);3:%s.s;2:x
'λx.exists(apply(same_shape,iota(x.s)), filter(x.s, yellow))'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(circle,iota(filter(filter(filter(filter(filter(filter(x.s, blue), size3), rectangle), rectangle), apply(same_shape,x.o)), rectangle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3;4:rectangle;4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle
'λx.contains(x.o, filter(filter(x.s, or[green,apply(same_shape,iota(x.s))]), circle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle
'λx.apply(and[nand[or[and[apply(same_color,iota(x.s)),and[nand[size3,yellow],size1]],triangle],or[yellow,triangle]],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:nand[%s,%s];4:size3;4:yellow;4:size1;4:triangle;4:or[%s,%s];4:yellow;4:triangle;4:triangle;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(not[green],x.o)'	0:apply(%s,%s);4:not[%s];4:green;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(filter(x.s, green), or[green,and[and[yellow,not[and[size2,rectangle]]],rectangle]]), nor[and[blue,size2],blue])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:yellow;4:not[%s];4:and[%s,%s];4:size2;4:rectangle;4:rectangle;4:nor[%s,%s];4:and[%s,%s];4:blue;4:size2;4:blue
'λx.apply(nor[green,and[implies[size3,implies[yellow,and[or[size1,rectangle],size2]]],nand[or[blue,not[not[blue]]],green]]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:green;4:and[%s,%s];4:implies[%s,%s];4:size3;4:implies[%s,%s];4:yellow;4:and[%s,%s];4:or[%s,%s];4:size1;4:rectangle;4:size2;4:nand[%s,%s];4:or[%s,%s];4:blue;4:not[%s];4:not[%s];4:blue;4:green;1:%s.o;2:x
'λx.apply(apply(same_color,iota(filter(filter(filter(filter(x.s, and[not[blue],apply(size-geq,x.o)]), or[not[nand[size1,not[triangle]]],size1]), circle), and[yellow,yellow]))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:blue;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:or[%s,%s];4:not[%s];4:nand[%s,%s];4:size1;4:not[%s];4:triangle;4:size1;4:circle;4:and[%s,%s];4:yellow;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(or[not[green],triangle],iota(filter(x.s, implies[rectangle,blue])))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:green;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:rectangle;4:blue
'λx.apply(and[yellow,not[size2]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:not[%s];4:size2;1:iota(%s);3:%s.s;2:x
'λx.forall(size3,filter(filter(filter(filter(x.s, circle), apply(same_shape,x.o)), implies[or[blue,yellow],size3]), size3))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:implies[%s,%s];4:or[%s,%s];4:blue;4:yellow;4:size3;4:size3
'λx.apply(nor[and[rectangle,and[circle,size3]],and[blue,or[or[blue,size1],or[size2,apply(same_color,iota(filter(x.s, size1)))]]]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:circle;4:size3;4:and[%s,%s];4:blue;4:or[%s,%s];4:or[%s,%s];4:blue;4:size1;4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;1:%s.o;2:x
'λx.apply(apply(same_color,iota(x.s)),iota(filter(filter(x.s, apply(same_color,iota(x.s))), blue)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:blue
'λx.apply(yellow,iota(filter(filter(filter(x.s, and[blue,circle]), apply(same_size,iota(filter(filter(x.s, apply(same_color,x.o)), blue)))), triangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue;4:triangle
'λx.contains(x.o, filter(x.s, iff[circle,not[or[size3,size2]]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:circle;4:not[%s];4:or[%s,%s];4:size3;4:size2
'λx.apply(and[not[size1],implies[rectangle,and[triangle,blue]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size1;4:implies[%s,%s];4:rectangle;4:and[%s,%s];4:triangle;4:blue;1:%s.o;2:x
'λx.exists(yellow, filter(filter(x.s, rectangle), size1))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1
'λx.forall(nand[and[and[and[and[or[or[blue,blue],size3],size3],triangle],rectangle],or[and[nor[blue,triangle],blue],triangle]],or[rectangle,circle]],filter(x.s, or[size3,size2]))'	0:forall(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:blue;4:blue;4:size3;4:size3;4:triangle;4:rectangle;4:or[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:blue;4:triangle;4:blue;4:triangle;4:or[%s,%s];4:rectangle;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:size2
'λx.apply(and[size1,blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:blue;1:%s.o;2:x
'λx.apply(triangle,iota(filter(x.s, or[not[rectangle],not[rectangle]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:rectangle;4:not[%s];4:rectangle
'λx.apply(size3,iota(filter(filter(filter(filter(filter(x.s, rectangle), size1), triangle), size2), blue)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1;4:triangle;4:size2;4:blue
'λx.forall(not[or[apply(size-leq,x.o),or[triangle,or[yellow,and[size3,or[green,rectangle]]]]]],x.s)'	0:forall(%s,%s);4:not[%s];4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:or[%s,%s];4:triangle;4:or[%s,%s];4:yellow;4:and[%s,%s];4:size3;4:or[%s,%s];4:green;4:rectangle;3:%s.s;2:x
'λx.apply(nand[size3,rectangle],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:size3;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[apply(size-leq,x.o),not[size1]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:not[%s];4:size1;1:%s.o;2:x
'λx.apply(not[and[rectangle,implies[apply(same_color,iota(filter(filter(filter(x.s, implies[or[size2,size2],rectangle]), nand[green,triangle]), green))),and[and[blue,size3],or[and[yellow,size1],implies[yellow,blue]]]]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:rectangle;4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:or[%s,%s];4:size2;4:size2;4:rectangle;4:nand[%s,%s];4:green;4:triangle;4:green;4:and[%s,%s];4:and[%s,%s];4:blue;4:size3;4:or[%s,%s];4:and[%s,%s];4:yellow;4:size1;4:implies[%s,%s];4:yellow;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(not[not[circle]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:circle;1:%s.o;2:x
'λx.forall(green,filter(filter(x.s, circle), or[size3,iff[implies[or[and[apply(same_color,iota(filter(x.s, implies[circle,apply(same_shape,x.o)]))),and[and[blue,size2],green]],rectangle],implies[rectangle,triangle]],size2]]))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:size3;4:iff[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:and[%s,%s];4:blue;4:size2;4:green;4:rectangle;4:implies[%s,%s];4:rectangle;4:triangle;4:size2
'λx.apply(size2,iota(filter(filter(filter(x.s, iff[not[triangle],and[and[or[size3,size3],and[apply(same_color,x.o),yellow]],rectangle]]), iff[blue,yellow]), yellow)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:not[%s];4:triangle;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size3;4:size3;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;4:rectangle;4:iff[%s,%s];4:blue;4:yellow;4:yellow
'λx.contains(x.o, filter(x.s, or[nand[size2,apply(same_color,iota(filter(x.s, not[or[size2,rectangle]])))],triangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:nand[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:size2;4:rectangle;4:triangle
'λx.apply(and[size3,not[size2]],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(circle, filter(filter(x.s, size3), or[size1,not[size3]]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:size1;4:not[%s];4:size3
'λx.apply(and[not[and[size2,size2]],apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:size2;4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[apply(same_shape,iota(filter(filter(x.s, apply(same_shape,x.o)), apply(same_color,iota(x.s))))),yellow],iota(filter(x.s, and[rectangle,green])))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:green
'λx.apply(size1,iota(filter(filter(x.s, green), yellow)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow
'λx.forall(rectangle,filter(filter(x.s, implies[size3,apply(same_color,iota(x.s))]), apply(same_shape,iota(x.s))))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[apply(same_color,x.o),apply(same_size,iota(filter(filter(filter(filter(x.s, yellow), yellow), apply(size-geq,x.o)), size3)))],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:yellow;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:size3;1:%s.o;2:x
'λx.apply(or[not[blue],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:blue;4:blue;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, size1), size1)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1
'λx.apply(and[size3,and[circle,yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:circle;4:yellow;1:%s.o;2:x
'λx.apply(nor[rectangle,circle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:rectangle;4:circle;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(x.s, and[size1,iff[apply(same_size,iota(x.s)),not[and[size2,green]]]]), size1)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:iff[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:size2;4:green;4:size1
'λx.apply(not[nand[not[nand[apply(same_color,iota(x.s)),size1]],triangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:nand[%s,%s];4:not[%s];4:nand[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size1;4:triangle;1:%s.o;2:x
'λx.apply(apply(same_size,x.o),iota(filter(filter(x.s, or[rectangle,size1]), triangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:size1;4:triangle
'λx.apply(size3,iota(filter(filter(x.s, nand[blue,or[or[size1,size1],blue]]), or[size1,or[triangle,size3]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:blue;4:or[%s,%s];4:or[%s,%s];4:size1;4:size1;4:blue;4:or[%s,%s];4:size1;4:or[%s,%s];4:triangle;4:size3
'λx.apply(apply(same_color,iota(filter(filter(x.s, circle), triangle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle;1:%s.o;2:x
'λx.forall(circle,x.s)'	0:forall(%s,%s);4:circle;3:%s.s;2:x
'λx.apply(and[blue,apply(size-gt,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, and[size2,green]), or[rectangle,or[implies[yellow,triangle],green]])), filter(x.s, or[yellow,size3]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:green;4:or[%s,%s];4:rectangle;4:or[%s,%s];4:implies[%s,%s];4:yellow;4:triangle;4:green;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:size3
'λx.apply(apply(size-leq,iota(x.s)),iota(filter(x.s, and[triangle,apply(same_shape,x.o)])))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.exists(and[size3,rectangle], filter(x.s, size1))'	0:exists(%s, %s);4:and[%s,%s];4:size3;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(triangle,iota(filter(x.s, blue)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.forall(triangle,filter(x.s, blue))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.exists(size1, filter(x.s, green))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.contains(x.o, filter(filter(filter(filter(filter(x.s, rectangle), blue), blue), yellow), yellow))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue;4:blue;4:yellow;4:yellow
'λx.contains(iota(filter(x.s, size2)), filter(x.s, circle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[rectangle,apply(same_size,iota(filter(filter(filter(x.s, not[or[yellow,yellow]]), rectangle), or[circle,blue])))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:yellow;4:yellow;4:rectangle;4:or[%s,%s];4:circle;4:blue;1:%s.o;2:x
'λx.exists(apply(same_shape,x.o), filter(x.s, size3))'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.empty(filter(filter(filter(x.s, green), rectangle), or[not[size3],and[nor[size3,apply(size-leq,iota(filter(filter(x.s, size2), triangle)))],and[yellow,blue]]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle;4:or[%s,%s];4:not[%s];4:size3;4:and[%s,%s];4:nor[%s,%s];4:size3;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:triangle;4:and[%s,%s];4:yellow;4:blue
'λx.apply(blue,iota(filter(filter(x.s, size1), size1)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1
'λx.contains(iota(filter(x.s, blue)), filter(filter(x.s, apply(same_color,iota(x.s))), circle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:circle
'λx.apply(yellow,iota(filter(filter(x.s, circle), rectangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle
'λx.apply(circle,iota(filter(filter(x.s, or[or[rectangle,and[and[and[rectangle,triangle],circle],and[yellow,and[triangle,circle]]]],size3]), and[yellow,triangle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:triangle;4:circle;4:and[%s,%s];4:yellow;4:and[%s,%s];4:triangle;4:circle;4:size3;4:and[%s,%s];4:yellow;4:triangle
'λx.contains(iota(x.s), filter(filter(filter(filter(filter(x.s, circle), or[yellow,apply(same_size,x.o)]), size2), yellow), size1))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2;4:yellow;4:size1
'λx.apply(not[blue],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.forall(not[nor[size2,yellow]],x.s)'	0:forall(%s,%s);4:not[%s];4:nor[%s,%s];4:size2;4:yellow;3:%s.s;2:x
'λx.apply(or[yellow,blue],iota(filter(filter(filter(x.s, implies[or[and[blue,and[size1,yellow]],or[and[and[rectangle,circle],not[nor[rectangle,green]]],blue]],rectangle]), size2), blue)))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:or[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:size1;4:yellow;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:circle;4:not[%s];4:nor[%s,%s];4:rectangle;4:green;4:blue;4:rectangle;4:size2;4:blue
'λx.forall(size1,filter(x.s, apply(same_size,x.o)))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.forall(size3,filter(filter(filter(filter(filter(filter(filter(filter(x.s, green), yellow), nor[nor[yellow,not[yellow]],size1]), and[rectangle,and[rectangle,size1]]), blue), green), green), apply(same_color,x.o)))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow;4:nor[%s,%s];4:nor[%s,%s];4:yellow;4:not[%s];4:yellow;4:size1;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:rectangle;4:size1;4:blue;4:green;4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.forall(and[size1,not[apply(same_size,iota(filter(filter(x.s, triangle), green)))]],filter(x.s, and[iff[rectangle,triangle],size2]))'	0:forall(%s,%s);4:and[%s,%s];4:size1;4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:iff[%s,%s];4:rectangle;4:triangle;4:size2
'λx.apply(size2,iota(filter(filter(filter(filter(filter(x.s, rectangle), blue), size1), or[circle,size2]), yellow)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue;4:size1;4:or[%s,%s];4:circle;4:size2;4:yellow
'λx.apply(and[rectangle,and[yellow,or[apply(same_color,iota(x.s)),and[triangle,not[and[apply(same_size,iota(filter(filter(x.s, size3), iff[green,green]))),and[and[triangle,apply(size-gt,x.o)],or[and[circle,not[or[size2,size2]]],not[apply(size-lt,x.o)]]]]]]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:yellow;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:iff[%s,%s];4:green;4:green;4:and[%s,%s];4:and[%s,%s];4:triangle;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:or[%s,%s];4:and[%s,%s];4:circle;4:not[%s];4:or[%s,%s];4:size2;4:size2;4:not[%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(apply(size-geq,iota(x.s)),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, and[and[size1,or[rectangle,size2]],not[size3]]), triangle)), filter(filter(x.s, or[size1,nor[iff[triangle,not[circle]],blue]]), circle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:rectangle;4:size2;4:not[%s];4:size3;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:nor[%s,%s];4:iff[%s,%s];4:triangle;4:not[%s];4:circle;4:blue;4:circle
'λx.apply(iff[and[and[and[triangle,circle],circle],or[apply(same_size,x.o),and[size3,blue]]],apply(size-gt,x.o)],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:circle;4:circle;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:size3;4:blue;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.forall(and[triangle,apply(same_shape,x.o)],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(blue,iota(filter(x.s, and[size1,and[implies[blue,or[triangle,not[blue]]],not[or[and[and[size3,blue],size1],rectangle]]]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:and[%s,%s];4:implies[%s,%s];4:blue;4:or[%s,%s];4:triangle;4:not[%s];4:blue;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:blue;4:size1;4:rectangle
'λx.apply(implies[triangle,green],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:triangle;4:green;1:%s.o;2:x
'λx.forall(yellow,filter(x.s, not[apply(same_size,x.o)]))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.empty(filter(filter(x.s, size1), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size3
'λx.forall(blue,filter(x.s, apply(same_shape,iota(filter(filter(filter(x.s, green), and[blue,triangle]), blue)))))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:blue;4:triangle;4:blue
'λx.apply(nand[circle,triangle],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:circle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[green,iff[not[triangle],not[size3]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:iff[%s,%s];4:not[%s];4:triangle;4:not[%s];4:size3;1:%s.o;2:x
'λx.apply(triangle,iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(or[implies[and[size1,green],or[apply(same_size,x.o),circle]],rectangle],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:or[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:size1;4:green;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(and[size2,size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:size3;1:%s.o;2:x
'λx.apply(or[size2,triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:triangle;1:%s.o;2:x
'λx.apply(or[rectangle,size2],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(or[green,circle],iota(filter(filter(x.s, and[size1,circle]), green)))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:circle;4:green
'λx.empty(filter(filter(x.s, apply(same_size,x.o)), and[size3,rectangle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:size3;4:rectangle
'λx.forall(and[size2,rectangle],filter(filter(filter(filter(filter(x.s, circle), blue), triangle), nand[blue,circle]), yellow))'	0:forall(%s,%s);4:and[%s,%s];4:size2;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue;4:triangle;4:nand[%s,%s];4:blue;4:circle;4:yellow
'λx.apply(size2,iota(filter(filter(filter(filter(filter(filter(filter(filter(filter(x.s, green), triangle), circle), size1), blue), triangle), size2), size3), and[and[size2,size1],apply(size-geq,x.o)])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:triangle;4:circle;4:size1;4:blue;4:triangle;4:size2;4:size3;4:and[%s,%s];4:and[%s,%s];4:size2;4:size1;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.empty(filter(filter(x.s, size1), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green
'λx.forall(blue,filter(x.s, yellow))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.exists(circle, filter(x.s, triangle))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(green,iota(filter(filter(x.s, size1), and[not[yellow],yellow])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:not[%s];4:yellow;4:yellow
'λx.contains(iota(x.s), filter(filter(x.s, yellow), blue))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:blue
'λx.apply(apply(same_color,x.o),iota(filter(x.s, or[triangle,blue])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:blue
'λx.apply(iff[size1,green],iota(filter(filter(filter(x.s, or[size1,apply(same_shape,iota(x.s))]), triangle), triangle)))'	0:apply(%s,%s);4:iff[%s,%s];4:size1;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle;4:triangle
'λx.empty(filter(x.s, or[nand[triangle,size3],circle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:nand[%s,%s];4:triangle;4:size3;4:circle
'λx.apply(and[not[green],and[circle,size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:green;4:and[%s,%s];4:circle;4:size3;1:%s.o;2:x
'λx.forall(size1,filter(filter(filter(filter(x.s, circle), circle), and[and[yellow,size1],circle]), circle))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:circle;4:and[%s,%s];4:and[%s,%s];4:yellow;4:size1;4:circle;4:circle
'λx.apply(or[circle,circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:circle;1:%s.o;2:x
'λx.forall(rectangle,filter(x.s, green))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.forall(size3,filter(filter(x.s, size3), and[size2,and[size2,blue]]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:size2;4:and[%s,%s];4:size2;4:blue
'λx.empty(filter(x.s, size2))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(size3,iota(filter(filter(filter(x.s, rectangle), yellow), size2)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:yellow;4:size2
'λx.apply(implies[apply(same_shape,iota(filter(filter(x.s, size2), size1))),triangle],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.exists(and[green,implies[size3,and[or[green,and[triangle,size2]],green]]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:green;4:implies[%s,%s];4:size3;4:and[%s,%s];4:or[%s,%s];4:green;4:and[%s,%s];4:triangle;4:size2;4:green;3:%s.s;2:x
'λx.apply(not[and[size2,size2]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size2;4:size2;1:%s.o;2:x
'λx.forall(nand[and[size2,green],not[yellow]],x.s)'	0:forall(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:size2;4:green;4:not[%s];4:yellow;3:%s.s;2:x
'λx.apply(and[not[circle],not[blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:circle;4:not[%s];4:blue;1:%s.o;2:x
'λx.apply(not[apply(same_color,iota(filter(filter(filter(x.s, or[or[not[size2],and[and[not[size2],circle],not[yellow]]],size1]), yellow), size3)))],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:not[%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size2;4:circle;4:not[%s];4:yellow;4:size1;4:yellow;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(x.s, triangle), or[green,blue])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:or[%s,%s];4:green;4:blue
'λx.apply(nor[and[and[circle,not[rectangle]],triangle],yellow],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:not[%s];4:rectangle;4:triangle;4:yellow;1:%s.o;2:x
'λx.forall(triangle,filter(x.s, apply(same_shape,x.o)))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(or[size1,not[size2]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:not[%s];4:size2;1:%s.o;2:x
'λx.apply(nor[rectangle,size2],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:rectangle;4:size2;1:%s.o;2:x
'λx.apply(and[and[triangle,nand[circle,size2]],size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:nand[%s,%s];4:circle;4:size2;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[yellow,implies[triangle,or[size2,or[size1,size3]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:implies[%s,%s];4:triangle;4:or[%s,%s];4:size2;4:or[%s,%s];4:size1;4:size3;1:%s.o;2:x
'λx.apply(or[apply(same_color,x.o),green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green;1:%s.o;2:x
'λx.apply(apply(same_color,iota(filter(x.s, triangle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(filter(filter(x.s, and[blue,size1]), apply(same_shape,x.o)), rectangle), not[nand[not[circle],and[blue,size3]]]), size1), apply(size-leq,x.o)))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle;4:not[%s];4:nand[%s,%s];4:not[%s];4:circle;4:and[%s,%s];4:blue;4:size3;4:size1;4:apply(%s,%s);5:size-leq;1:%s.o;2:x
'λx.apply(apply(same_color,x.o),iota(filter(x.s, size1)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.contains(iota(x.s), filter(x.s, apply(size-geq,x.o)))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.exists(green, filter(filter(x.s, green), circle))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:circle
'λx.contains(iota(filter(filter(x.s, size2), green)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green;3:%s.s;2:x
'λx.apply(and[not[not[size3]],green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:not[%s];4:size3;4:green;1:iota(%s);3:%s.s;2:x
'λx.forall(size3,filter(x.s, and[apply(same_size,iota(x.s)),rectangle]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:rectangle
'λx.apply(size3,iota(filter(filter(x.s, or[size1,size3]), or[triangle,and[blue,rectangle]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:size3;4:or[%s,%s];4:triangle;4:and[%s,%s];4:blue;4:rectangle
'λx.forall(circle,filter(x.s, and[not[yellow],apply(same_size,iota(filter(filter(x.s, size2), size1)))]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1
'λx.apply(and[or[size1,yellow],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size1;4:yellow;4:blue;1:%s.o;2:x
'λx.apply(nand[size2,and[triangle,size1]],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:size2;4:and[%s,%s];4:triangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(x.s, and[green,size3])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:size3
'λx.apply(nor[size2,size2],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:size2;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[rectangle,rectangle],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:rectangle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(size-leq,x.o),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, and[circle,circle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:circle
'λx.apply(yellow,iota(filter(filter(filter(filter(x.s, size3), not[rectangle]), green), yellow)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:rectangle;4:green;4:yellow
'λx.forall(triangle,filter(x.s, size3))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(rectangle,iota(filter(x.s, and[or[size3,green],yellow])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:size3;4:green;4:yellow
'λx.apply(nand[size1,circle],iota(filter(x.s, and[green,rectangle])))'	0:apply(%s,%s);4:nand[%s,%s];4:size1;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:rectangle
'λx.apply(implies[and[size1,not[not[iff[apply(size-gt,x.o),apply(same_color,x.o)]]]],not[apply(same_size,x.o)]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:size1;4:not[%s];4:not[%s];4:iff[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.forall(apply(same_shape,x.o),filter(filter(x.s, rectangle), size3))'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3
'λx.apply(not[and[rectangle,rectangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:rectangle;4:rectangle;1:%s.o;2:x
'λx.apply(implies[circle,size2],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:circle;4:size2;1:%s.o;2:x
'λx.apply(iff[circle,and[circle,circle]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:circle;4:and[%s,%s];4:circle;4:circle;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(filter(filter(x.s, size1), apply(same_size,iota(filter(x.s, blue)))), size3), size3)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3;4:size3
'λx.apply(not[and[apply(size-geq,iota(filter(filter(x.s, rectangle), size3))),or[size3,and[yellow,size3]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3;4:or[%s,%s];4:size3;4:and[%s,%s];4:yellow;4:size3;1:%s.o;2:x
'λx.apply(and[iff[circle,or[apply(size-lt,x.o),and[and[implies[circle,and[rectangle,and[circle,and[iff[size2,and[and[yellow,and[yellow,circle]],implies[circle,nand[circle,size3]]]],size3]]]],yellow],nor[size3,not[blue]]]]],apply(same_color,x.o)],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:circle;4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:and[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:circle;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:circle;4:and[%s,%s];4:iff[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:yellow;4:circle;4:implies[%s,%s];4:circle;4:nand[%s,%s];4:circle;4:size3;4:size3;4:yellow;4:nor[%s,%s];4:size3;4:not[%s];4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[and[size3,and[triangle,implies[size2,not[iff[triangle,blue]]]]],size1],iota(filter(filter(filter(filter(x.s, apply(same_shape,iota(x.s))), size1), yellow), and[size1,size2])))'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:triangle;4:implies[%s,%s];4:size2;4:not[%s];4:iff[%s,%s];4:triangle;4:blue;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size1;4:yellow;4:and[%s,%s];4:size1;4:size2
'λx.apply(circle,iota(filter(x.s, or[size1,green])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:green
'λx.forall(not[blue],filter(filter(x.s, not[size2]), size2))'	0:forall(%s,%s);4:not[%s];4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:size2
'λx.apply(rectangle,iota(filter(filter(filter(filter(filter(x.s, size2), blue), not[apply(same_size,x.o)]), circle), rectangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue;4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;4:rectangle
'λx.apply(size1,iota(filter(filter(x.s, green), apply(same_color,iota(filter(x.s, triangle))))))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.empty(filter(x.s, apply(same_color,iota(x.s))))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.exists(and[size1,triangle], filter(filter(filter(filter(x.s, size3), size3), size3), green))'	0:exists(%s, %s);4:and[%s,%s];4:size1;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3;4:size3;4:green
'λx.forall(green,filter(x.s, size1))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(and[and[and[size3,not[apply(same_color,iota(x.s))]],not[green]],or[size1,not[rectangle]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:not[%s];4:green;4:or[%s,%s];4:size1;4:not[%s];4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size1,size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(x.s, and[apply(same_color,iota(x.s)),blue]), yellow)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:blue;4:yellow
'λx.apply(apply(same_shape,x.o),iota(filter(filter(x.s, size2), implies[blue,triangle])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:implies[%s,%s];4:blue;4:triangle
'λx.apply(or[yellow,apply(same_size,x.o)],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[apply(size-gt,x.o),green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[not[blue],or[and[not[and[or[rectangle,apply(size-gt,x.o)],and[or[blue,rectangle],size1]]],or[and[blue,circle],rectangle]],yellow]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:not[%s];4:blue;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:and[%s,%s];4:or[%s,%s];4:blue;4:rectangle;4:size1;4:or[%s,%s];4:and[%s,%s];4:blue;4:circle;4:rectangle;4:yellow;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(filter(filter(x.s, green), size3), rectangle), triangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size3;4:rectangle;4:triangle
'λx.apply(and[blue,and[not[rectangle],size3]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:not[%s];4:rectangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.forall(rectangle,filter(filter(filter(filter(filter(x.s, implies[or[and[green,size1],yellow],not[and[circle,implies[blue,circle]]]]), blue), size1), size1), yellow))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:or[%s,%s];4:and[%s,%s];4:green;4:size1;4:yellow;4:not[%s];4:and[%s,%s];4:circle;4:implies[%s,%s];4:blue;4:circle;4:blue;4:size1;4:size1;4:yellow
'λx.apply(iff[or[size2,and[rectangle,size2]],blue],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:or[%s,%s];4:size2;4:and[%s,%s];4:rectangle;4:size2;4:blue;1:%s.o;2:x
'λx.contains(iota(filter(x.s, rectangle)), filter(x.s, triangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(triangle,iota(filter(filter(x.s, size2), triangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:triangle
'λx.apply(or[circle,rectangle],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.forall(and[triangle,circle],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:triangle;4:circle;3:%s.s;2:x
'λx.apply(and[and[size2,blue],circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size2;4:blue;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_shape,iota(filter(filter(x.s, or[triangle,yellow]), size3))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:yellow;4:size3;1:iota(%s);3:%s.s;2:x
'λx.forall(triangle,filter(x.s, and[blue,size2]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size2
'λx.apply(or[and[blue,and[apply(same_shape,x.o),size1]],not[circle]],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.contains(iota(filter(x.s, nand[and[size2,apply(same_size,x.o)],blue])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;3:%s.s;2:x
'λx.empty(filter(filter(filter(filter(x.s, size2), nand[and[rectangle,or[blue,size3]],size1]), or[or[rectangle,green],apply(same_size,iota(filter(x.s, not[yellow])))]), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:nand[%s,%s];4:and[%s,%s];4:rectangle;4:or[%s,%s];4:blue;4:size3;4:size1;4:or[%s,%s];4:or[%s,%s];4:rectangle;4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:blue
'λx.apply(rectangle,iota(filter(filter(filter(x.s, green), triangle), size3)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:triangle;4:size3
'λx.exists(and[nand[not[size1],yellow],size2], filter(filter(filter(x.s, and[and[triangle,size3],circle]), size3), size1))'	0:exists(%s, %s);4:and[%s,%s];4:nand[%s,%s];4:not[%s];4:size1;4:yellow;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:triangle;4:size3;4:circle;4:size3;4:size1
'λx.apply(and[and[not[size3],circle],not[yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size3;4:circle;4:not[%s];4:yellow;1:%s.o;2:x
'λx.forall(not[size1],filter(x.s, nor[rectangle,and[blue,yellow]]))'	0:forall(%s,%s);4:not[%s];4:size1;3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:rectangle;4:and[%s,%s];4:blue;4:yellow
'λx.apply(apply(same_size,iota(filter(x.s, blue))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;1:iota(%s);3:%s.s;2:x
'λx.exists(or[blue,triangle], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:blue;4:triangle;3:%s.s;2:x
'λx.contains(iota(x.s), filter(filter(filter(x.s, and[and[not[or[blue,green]],and[not[size1],blue]],yellow]), rectangle), or[yellow,and[circle,triangle]]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:or[%s,%s];4:blue;4:green;4:and[%s,%s];4:not[%s];4:size1;4:blue;4:yellow;4:rectangle;4:or[%s,%s];4:yellow;4:and[%s,%s];4:circle;4:triangle
'λx.apply(or[and[triangle,and[and[size2,size3],and[and[nand[or[yellow,triangle],and[rectangle,nor[green,blue]]],rectangle],not[triangle]]]],or[apply(size-gt,iota(x.s)),apply(same_shape,iota(x.s))]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:and[%s,%s];4:size2;4:size3;4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:yellow;4:triangle;4:and[%s,%s];4:rectangle;4:nor[%s,%s];4:green;4:blue;4:rectangle;4:not[%s];4:triangle;4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.exists(and[size2,yellow], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:size2;4:yellow;3:%s.s;2:x
'λx.apply(and[not[size3],size3],iota(filter(filter(x.s, and[blue,nand[blue,size3]]), triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size3;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:nand[%s,%s];4:blue;4:size3;4:triangle
'λx.apply(and[nand[yellow,nand[and[or[size1,size3],and[size1,nand[and[and[not[apply(same_shape,iota(x.s))],triangle],rectangle],apply(size-geq,x.o)]]],green]],apply(same_shape,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:yellow;4:nand[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size1;4:size3;4:and[%s,%s];4:size1;4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle;4:rectangle;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[not[iff[green,rectangle]],and[green,size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:iff[%s,%s];4:green;4:rectangle;4:and[%s,%s];4:green;4:size3;1:%s.o;2:x
'λx.apply(and[and[green,and[apply(same_color,iota(x.s)),circle]],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:circle;4:size1;1:%s.o;2:x
'λx.exists(size2, filter(x.s, and[rectangle,green]))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:green
'λx.apply(green,iota(filter(filter(filter(x.s, blue), circle), rectangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle;4:rectangle
'λx.apply(circle,iota(filter(filter(filter(x.s, and[yellow,rectangle]), or[circle,blue]), apply(same_color,x.o))))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:rectangle;4:or[%s,%s];4:circle;4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(not[and[circle,rectangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:circle;4:rectangle;1:%s.o;2:x
'λx.apply(or[yellow,green],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size1,and[circle,size2]],iota(filter(filter(filter(x.s, or[circle,and[not[and[not[not[rectangle]],nand[blue,implies[implies[triangle,blue],blue]]]],green]]), yellow), size2)))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:and[%s,%s];4:circle;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:not[%s];4:not[%s];4:rectangle;4:nand[%s,%s];4:blue;4:implies[%s,%s];4:implies[%s,%s];4:triangle;4:blue;4:blue;4:green;4:yellow;4:size2
'λx.apply(or[size1,apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[or[circle,and[green,and[circle,circle]]],yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:circle;4:and[%s,%s];4:green;4:and[%s,%s];4:circle;4:circle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[yellow,apply(size-leq,iota(x.s))],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:yellow;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(not[and[not[nor[size2,not[rectangle]]],circle]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:nor[%s,%s];4:size2;4:not[%s];4:rectangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(x.s, and[size2,yellow]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:yellow
'λx.apply(blue,iota(filter(x.s, and[rectangle,size1])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:size1
'λx.contains(iota(filter(filter(x.s, rectangle), circle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle;3:%s.s;2:x
'λx.apply(not[and[green,blue]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:green;4:blue;1:%s.o;2:x
'λx.apply(iff[nand[or[size1,green],triangle],and[triangle,nand[size2,yellow]]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:size1;4:green;4:triangle;4:and[%s,%s];4:triangle;4:nand[%s,%s];4:size2;4:yellow;1:%s.o;2:x
'λx.apply(or[size2,size2],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(or[and[size2,size3],and[rectangle,and[size3,blue]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size2;4:size3;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:size3;4:blue;1:%s.o;2:x
'λx.empty(filter(filter(x.s, or[size3,or[triangle,triangle]]), not[triangle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:or[%s,%s];4:triangle;4:triangle;4:not[%s];4:triangle
'λx.apply(and[size3,rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:rectangle;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, size3)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(or[size3,triangle],iota(filter(filter(filter(x.s, size1), not[rectangle]), iff[circle,triangle])))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:not[%s];4:rectangle;4:iff[%s,%s];4:circle;4:triangle
'λx.apply(nand[size3,rectangle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size3;4:rectangle;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, apply(same_size,x.o))))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(size1,iota(filter(x.s, apply(size-lt,x.o))))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.apply(and[yellow,or[green,yellow]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:or[%s,%s];4:green;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.exists(and[size2,size1], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:size2;4:size1;3:%s.s;2:x
'λx.contains(iota(filter(filter(x.s, size2), size2)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2;3:%s.s;2:x
'λx.apply(implies[triangle,circle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:triangle;4:circle;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, size3), circle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle;3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, green), yellow))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow
'λx.forall(size1,filter(x.s, blue))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.contains(x.o, filter(x.s, apply(size-geq,iota(filter(filter(x.s, size3), yellow)))))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow
'λx.apply(nor[rectangle,or[blue,green]],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:rectangle;4:or[%s,%s];4:blue;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(x.s, apply(same_color,x.o)), size1)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1
'λx.exists(not[or[rectangle,triangle]], filter(filter(x.s, and[size2,or[green,and[nand[triangle,green],size2]]]), size3))'	0:exists(%s, %s);4:not[%s];4:or[%s,%s];4:rectangle;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:or[%s,%s];4:green;4:and[%s,%s];4:nand[%s,%s];4:triangle;4:green;4:size2;4:size3
'λx.forall(not[green],x.s)'	0:forall(%s,%s);4:not[%s];4:green;3:%s.s;2:x
'λx.empty(filter(filter(x.s, yellow), and[iff[size2,or[or[triangle,size1],green]],green]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:iff[%s,%s];4:size2;4:or[%s,%s];4:or[%s,%s];4:triangle;4:size1;4:green;4:green
'λx.apply(and[triangle,or[size2,blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:or[%s,%s];4:size2;4:blue;1:%s.o;2:x
'λx.apply(or[size1,iff[not[not[yellow]],size1]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:iff[%s,%s];4:not[%s];4:not[%s];4:yellow;4:size1;1:%s.o;2:x
'λx.apply(nand[or[yellow,circle],and[apply(same_color,x.o),circle]],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:or[%s,%s];4:yellow;4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(x.s, apply(size-leq,iota(filter(filter(filter(filter(filter(x.s, apply(size-geq,x.o)), size1), size2), and[rectangle,apply(same_color,x.o)]), size2)))), size1)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:size1;4:size2;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size2;4:size1
'λx.apply(not[not[size3]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:size3;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(filter(x.s, rectangle), rectangle), blue)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle;4:blue;3:%s.s;2:x
'λx.apply(and[yellow,size1],iota(filter(filter(x.s, circle), circle)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:circle
'λx.apply(size3,x.o)'	0:apply(%s,%s);4:size3;1:%s.o;2:x
'λx.apply(not[apply(size-lt,x.o)],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(or[blue,apply(size-leq,iota(x.s))],iota(filter(filter(x.s, size1), size2)))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2
'λx.apply(and[and[blue,and[not[triangle],size1]],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:not[%s];4:triangle;4:size1;4:size2;1:%s.o;2:x
'λx.apply(implies[apply(same_size,iota(filter(filter(filter(x.s, or[or[and[implies[rectangle,circle],size1],implies[triangle,triangle]],size3]), green), or[blue,rectangle]))),yellow],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:rectangle;4:circle;4:size1;4:implies[%s,%s];4:triangle;4:triangle;4:size3;4:green;4:or[%s,%s];4:blue;4:rectangle;4:yellow;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, nand[triangle,or[size2,apply(same_size,iota(x.s))]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:triangle;4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(not[or[and[rectangle,blue],implies[and[and[circle,size1],size1],size1]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:and[%s,%s];4:rectangle;4:blue;4:implies[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:size1;4:size1;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[yellow,size2],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:nor[%s,%s];4:yellow;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[blue,rectangle],iota(filter(filter(filter(x.s, apply(same_color,x.o)), size2), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size2;4:blue
'λx.empty(filter(filter(x.s, and[circle,rectangle]), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:rectangle;4:size1
'λx.apply(size2,iota(filter(filter(x.s, green), size2)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size2
'λx.apply(and[not[or[or[and[nand[not[size3],implies[and[nor[iff[or[green,size3],green],and[size1,not[size3]]],not[size2]],size2]],rectangle],triangle],rectangle]],size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:not[%s];4:size3;4:implies[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:green;4:size3;4:green;4:and[%s,%s];4:size1;4:not[%s];4:size3;4:not[%s];4:size2;4:size2;4:rectangle;4:triangle;4:rectangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(not[apply(size-lt,x.o)],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, yellow), size3)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size3
'λx.forall(size3,filter(x.s, and[size3,rectangle]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:rectangle
'λx.apply(rectangle,iota(filter(x.s, or[apply(size-gt,iota(x.s)),yellow])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:yellow
'λx.apply(size3,iota(filter(x.s, and[triangle,blue])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:blue
'λx.apply(or[nor[implies[blue,apply(same_shape,x.o)],and[blue,rectangle]],rectangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:nor[%s,%s];4:implies[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:blue;4:rectangle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[green],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(or[yellow,rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:rectangle;1:%s.o;2:x
'λx.apply(or[or[nor[and[or[green,size2],or[size1,and[apply(same_color,iota(filter(x.s, green))),implies[rectangle,rectangle]]]],blue],blue],and[and[size3,yellow],green]],iota(filter(x.s, apply(same_shape,x.o))))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:or[%s,%s];4:green;4:size2;4:or[%s,%s];4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:implies[%s,%s];4:rectangle;4:rectangle;4:blue;4:blue;4:and[%s,%s];4:and[%s,%s];4:size3;4:yellow;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(or[size3,and[size2,yellow]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:and[%s,%s];4:size2;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(x.s, blue), circle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle
'λx.apply(triangle,iota(filter(filter(x.s, rectangle), rectangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle
'λx.apply(or[and[apply(same_color,iota(filter(filter(x.s, blue), rectangle))),apply(same_color,iota(x.s))],size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size1;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(filter(filter(x.s, green), triangle), and[triangle,size3]), iff[apply(same_color,x.o),triangle])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:triangle;4:and[%s,%s];4:triangle;4:size3;4:iff[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle
'λx.apply(or[and[rectangle,size2],and[and[not[and[triangle,size2]],green],apply(size-lt,x.o)]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:rectangle;4:size2;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:triangle;4:size2;4:green;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(or[circle,size3],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.contains(x.o, filter(filter(x.s, size1), and[and[yellow,size1],triangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:and[%s,%s];4:yellow;4:size1;4:triangle
'λx.contains(x.o, filter(x.s, green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[rectangle,size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:size1;1:%s.o;2:x
'λx.apply(and[green,or[yellow,nor[size2,blue]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:or[%s,%s];4:yellow;4:nor[%s,%s];4:size2;4:blue;1:%s.o;2:x
'λx.exists(nor[rectangle,yellow], filter(x.s, yellow))'	0:exists(%s, %s);4:nor[%s,%s];4:rectangle;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(or[and[rectangle,blue],size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:rectangle;4:blue;4:size1;1:%s.o;2:x
'λx.apply(or[and[and[blue,and[iff[apply(same_size,x.o),and[circle,implies[nand[and[or[not[size2],and[size2,or[and[triangle,iff[apply(same_size,x.o),size3]],or[not[size2],size3]]]],green],size3],circle]]],nand[nor[yellow,size1],yellow]]],and[green,yellow]],size3],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:iff[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:circle;4:implies[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:or[%s,%s];4:not[%s];4:size2;4:and[%s,%s];4:size2;4:or[%s,%s];4:and[%s,%s];4:triangle;4:iff[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;4:or[%s,%s];4:not[%s];4:size2;4:size3;4:green;4:size3;4:circle;4:nand[%s,%s];4:nor[%s,%s];4:yellow;4:size1;4:yellow;4:and[%s,%s];4:green;4:yellow;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[apply(same_size,iota(x.s)),blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.forall(rectangle,filter(filter(filter(filter(x.s, size1), size2), size2), apply(same_color,iota(x.s))))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2;4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(x.s, size2)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(size1,iota(filter(filter(filter(filter(x.s, yellow), rectangle), implies[rectangle,size2]), yellow)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle;4:implies[%s,%s];4:rectangle;4:size2;4:yellow
'λx.apply(apply(same_size,iota(filter(filter(filter(filter(x.s, size2), blue), circle), and[or[circle,size2],yellow]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue;4:circle;4:and[%s,%s];4:or[%s,%s];4:circle;4:size2;4:yellow;1:%s.o;2:x
'λx.exists(apply(same_color,x.o), filter(x.s, and[size2,and[triangle,size2]]))'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:and[%s,%s];4:triangle;4:size2
'λx.exists(yellow, filter(x.s, triangle))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(green,iota(filter(filter(x.s, or[iff[yellow,rectangle],blue]), or[triangle,size2])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:iff[%s,%s];4:yellow;4:rectangle;4:blue;4:or[%s,%s];4:triangle;4:size2
'λx.apply(blue,iota(filter(filter(x.s, circle), blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue
'λx.apply(triangle,iota(filter(x.s, or[not[nor[or[rectangle,yellow],size3]],blue])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:nor[%s,%s];4:or[%s,%s];4:rectangle;4:yellow;4:size3;4:blue
'λx.apply(circle,iota(filter(x.s, green)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[and[blue,green],size2],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:green;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(nor[iff[and[nor[apply(size-gt,iota(x.s)),iff[nor[yellow,size2],triangle]],green],and[not[size2],not[circle]]],and[or[size3,triangle],and[size2,yellow]]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:iff[%s,%s];4:nor[%s,%s];4:yellow;4:size2;4:triangle;4:green;4:and[%s,%s];4:not[%s];4:size2;4:not[%s];4:circle;4:and[%s,%s];4:or[%s,%s];4:size3;4:triangle;4:and[%s,%s];4:size2;4:yellow;1:%s.o;2:x
'λx.apply(yellow,iota(filter(x.s, size3)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(size1, filter(filter(filter(filter(filter(x.s, rectangle), yellow), not[or[size1,not[yellow]]]), yellow), rectangle))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:yellow;4:not[%s];4:or[%s,%s];4:size1;4:not[%s];4:yellow;4:yellow;4:rectangle
'λx.forall(blue,x.s)'	0:forall(%s,%s);4:blue;3:%s.s;2:x
'λx.empty(x.s)'	0:empty(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(filter(x.s, triangle), yellow), size1)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:yellow;4:size1
'λx.apply(not[yellow],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.empty(filter(filter(x.s, circle), or[blue,and[nand[triangle,size3],nand[implies[yellow,apply(same_shape,x.o)],size1]]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:blue;4:and[%s,%s];4:nand[%s,%s];4:triangle;4:size3;4:nand[%s,%s];4:implies[%s,%s];4:yellow;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1
'λx.apply(apply(same_color,iota(filter(filter(filter(filter(x.s, triangle), size3), size1), not[or[circle,or[size3,rectangle]]]))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3;4:size1;4:not[%s];4:or[%s,%s];4:circle;4:or[%s,%s];4:size3;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(x.s, size1), triangle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle
'λx.forall(implies[apply(same_shape,iota(filter(filter(x.s, implies[green,yellow]), green))),and[size1,implies[yellow,rectangle]]],x.s)'	0:forall(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:green;4:yellow;4:green;4:and[%s,%s];4:size1;4:implies[%s,%s];4:yellow;4:rectangle;3:%s.s;2:x
'λx.apply(or[rectangle,yellow],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(not[yellow],iota(filter(x.s, not[or[size2,size2]])))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:size2;4:size2
'λx.apply(and[green,not[and[not[apply(same_size,x.o)],or[blue,size2]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:not[%s];4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:blue;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(or[not[triangle],and[apply(same_color,iota(x.s)),blue]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(x.s, apply(same_shape,x.o)), size3)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3
'λx.apply(and[and[size1,yellow],size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:yellow;4:size3;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(x.s, and[or[yellow,size2],size1]), implies[triangle,circle])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:yellow;4:size2;4:size1;4:implies[%s,%s];4:triangle;4:circle;3:%s.s;2:x
'λx.apply(size1,x.o)'	0:apply(%s,%s);4:size1;1:%s.o;2:x
'λx.exists(size1, filter(x.s, not[iff[blue,triangle]]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:iff[%s,%s];4:blue;4:triangle
'λx.apply(green,iota(filter(filter(filter(x.s, circle), blue), not[not[size2]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue;4:not[%s];4:not[%s];4:size2
'λx.forall(not[size2],filter(filter(x.s, and[size1,not[size1]]), nand[and[circle,apply(same_shape,x.o)],and[circle,and[not[size1],not[size1]]]]))'	0:forall(%s,%s);4:not[%s];4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:not[%s];4:size1;4:nand[%s,%s];4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:circle;4:and[%s,%s];4:not[%s];4:size1;4:not[%s];4:size1
'λx.forall(blue,filter(filter(filter(filter(filter(x.s, circle), green), and[circle,yellow]), rectangle), apply(same_shape,iota(x.s))))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green;4:and[%s,%s];4:circle;4:yellow;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(filter(filter(x.s, size1), and[size2,rectangle]), yellow), apply(same_size,x.o))))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:size2;4:rectangle;4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(not[apply(same_size,iota(x.s))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(and[rectangle,size1],iota(filter(filter(x.s, and[circle,not[size2]]), yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:not[%s];4:size2;4:yellow
'λx.forall(size2,filter(x.s, size3))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(nand[apply(same_shape,iota(filter(filter(filter(x.s, blue), and[rectangle,circle]), blue))),green], x.s)'	0:exists(%s, %s);4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:rectangle;4:circle;4:blue;4:green;3:%s.s;2:x
'λx.apply(apply(same_shape,iota(filter(x.s, iff[circle,green]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:circle;4:green;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(x.s, rectangle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, size2), and[triangle,size3]), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:triangle;4:size3;4:size2
'λx.apply(nand[size2,triangle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size2;4:triangle;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(x.s, triangle), blue))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue
'λx.apply(iff[green,not[rectangle]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:green;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.empty(filter(filter(x.s, green), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:circle
'λx.contains(iota(filter(x.s, circle)), filter(x.s, or[implies[blue,and[circle,apply(same_shape,iota(filter(x.s, yellow)))]],size1]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:implies[%s,%s];4:blue;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1
'λx.apply(and[and[apply(same_color,x.o),green],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green;4:size3;1:%s.o;2:x
'λx.apply(iff[or[implies[size1,yellow],triangle],triangle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:size1;4:yellow;4:triangle;4:triangle;1:%s.o;2:x
'λx.apply(and[yellow,or[blue,nor[size2,circle]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:or[%s,%s];4:blue;4:nor[%s,%s];4:size2;4:circle;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(x.s, rectangle), green))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green
'λx.forall(green,filter(filter(filter(x.s, size2), or[or[blue,rectangle],blue]), nand[circle,apply(size-leq,iota(filter(x.s, size2)))]))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:or[%s,%s];4:blue;4:rectangle;4:blue;4:nand[%s,%s];4:circle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(size1,iota(filter(filter(filter(filter(x.s, triangle), size2), size3), rectangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2;4:size3;4:rectangle
'λx.apply(size3,iota(filter(filter(x.s, nand[implies[apply(same_color,x.o),size2],triangle]), size2)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size2;4:triangle;4:size2
'λx.exists(implies[apply(same_shape,x.o),apply(same_size,iota(x.s))], x.s)'	0:exists(%s, %s);4:implies[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(or[green,and[size1,and[green,nor[yellow,size2]]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:and[%s,%s];4:size1;4:and[%s,%s];4:green;4:nor[%s,%s];4:yellow;4:size2;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(x.s), filter(filter(filter(filter(filter(filter(x.s, size1), size3), size3), apply(same_size,x.o)), triangle), and[size3,not[rectangle]]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size3;4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle;4:and[%s,%s];4:size3;4:not[%s];4:rectangle
'λx.apply(or[blue,circle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[triangle,size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_shape,iota(x.s)),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(nand[size1,size3],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:size1;4:size3;1:iota(%s);3:%s.s;2:x
'λx.forall(green,filter(x.s, and[nor[size2,green],or[not[size3],rectangle]]))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:size2;4:green;4:or[%s,%s];4:not[%s];4:size3;4:rectangle
'λx.apply(not[rectangle],iota(filter(filter(x.s, and[size1,apply(same_shape,iota(filter(x.s, rectangle)))]), not[rectangle])))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:rectangle
'λx.apply(size1,iota(filter(filter(filter(filter(x.s, and[implies[nor[rectangle,nor[blue,not[size3]]],green],green]), size2), size2), yellow)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:implies[%s,%s];4:nor[%s,%s];4:rectangle;4:nor[%s,%s];4:blue;4:not[%s];4:size3;4:green;4:green;4:size2;4:size2;4:yellow
'λx.apply(and[iff[yellow,triangle],blue],iota(filter(filter(filter(filter(x.s, not[triangle]), apply(same_size,iota(x.s))), not[rectangle]), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:yellow;4:triangle;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:not[%s];4:rectangle;4:blue
'λx.apply(apply(size-geq,x.o),iota(filter(filter(filter(x.s, or[apply(size-geq,x.o),rectangle]), triangle), size3)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:rectangle;4:triangle;4:size3
'λx.forall(and[rectangle,iff[size3,triangle]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:rectangle;4:iff[%s,%s];4:size3;4:triangle;3:%s.s;2:x
'λx.apply(and[apply(same_shape,iota(filter(x.s, nor[rectangle,triangle]))),rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:rectangle;4:triangle;4:rectangle;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, not[triangle]), size2)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:size2
'λx.apply(not[and[size2,blue]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size2;4:blue;1:%s.o;2:x
'λx.apply(and[green,apply(same_shape,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.exists(size3, filter(filter(x.s, yellow), and[not[blue],triangle]))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:not[%s];4:blue;4:triangle
'λx.apply(apply(same_size,x.o),iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.exists(size1, filter(filter(filter(x.s, not[apply(same_shape,iota(filter(x.s, or[size3,nor[green,blue]])))]), yellow), implies[and[or[blue,not[triangle]],rectangle],yellow]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:nor[%s,%s];4:green;4:blue;4:yellow;4:implies[%s,%s];4:and[%s,%s];4:or[%s,%s];4:blue;4:not[%s];4:triangle;4:rectangle;4:yellow
'λx.apply(and[circle,nor[size2,circle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:nor[%s,%s];4:size2;4:circle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, nor[size3,not[circle]]), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size3;4:not[%s];4:circle;4:yellow
'λx.contains(x.o, filter(filter(filter(filter(filter(x.s, blue), or[and[or[circle,size3],or[or[nor[size3,size3],and[and[apply(size-leq,iota(x.s)),apply(same_shape,x.o)],blue]],apply(size-leq,x.o)]],size1]), circle), nor[and[apply(same_shape,x.o),yellow],not[size2]]), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:circle;4:size3;4:or[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:size3;4:size3;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size1;4:circle;4:nor[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow;4:not[%s];4:size2;4:green
'λx.apply(or[rectangle,green],iota(filter(filter(x.s, triangle), not[nand[rectangle,and[apply(size-leq,iota(x.s)),not[size2]]]])))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:not[%s];4:nand[%s,%s];4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:not[%s];4:size2
'λx.apply(rectangle,iota(filter(filter(x.s, triangle), or[iff[size1,or[size3,rectangle]],rectangle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:or[%s,%s];4:iff[%s,%s];4:size1;4:or[%s,%s];4:size3;4:rectangle;4:rectangle
'λx.apply(green,iota(filter(filter(x.s, and[rectangle,apply(same_color,iota(x.s))]), yellow)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:yellow
'λx.contains(iota(filter(x.s, and[blue,size3])), filter(x.s, yellow))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(or[nand[circle,yellow],nand[size2,and[and[triangle,and[rectangle,and[size1,rectangle]]],and[apply(size-gt,x.o),size3]]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:circle;4:yellow;4:nand[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:size1;4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:size3;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(x.s), filter(filter(x.s, not[green]), rectangle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:rectangle
'λx.empty(filter(filter(filter(filter(x.s, yellow), rectangle), rectangle), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle;4:rectangle;4:rectangle
'λx.apply(nand[and[triangle,blue],yellow],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:triangle;4:blue;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.forall(and[triangle,size2],filter(filter(filter(x.s, size2), triangle), size2))'	0:forall(%s,%s);4:and[%s,%s];4:triangle;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:triangle;4:size2
'λx.exists(size2, filter(filter(filter(filter(filter(x.s, triangle), yellow), or[blue,size2]), size3), and[blue,yellow]))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:yellow;4:or[%s,%s];4:blue;4:size2;4:size3;4:and[%s,%s];4:blue;4:yellow
'λx.apply(not[apply(same_shape,iota(x.s))],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, green), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue
'λx.apply(or[or[blue,triangle],and[size2,size2]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:blue;4:triangle;4:and[%s,%s];4:size2;4:size2;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(x.s, size3), not[size2])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:size2
'λx.apply(and[yellow,size3],iota(filter(filter(x.s, nor[size3,size1]), apply(size-gt,x.o))))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size3;4:size1;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.forall(or[triangle,nand[green,or[and[size1,yellow],size2]]],filter(x.s, or[rectangle,and[size2,and[yellow,apply(same_color,iota(x.s))]]]))'	0:forall(%s,%s);4:or[%s,%s];4:triangle;4:nand[%s,%s];4:green;4:or[%s,%s];4:and[%s,%s];4:size1;4:yellow;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:and[%s,%s];4:size2;4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.exists(nor[and[circle,triangle],green], x.s)'	0:exists(%s, %s);4:nor[%s,%s];4:and[%s,%s];4:circle;4:triangle;4:green;3:%s.s;2:x
'λx.apply(or[or[size2,triangle],triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:size2;4:triangle;4:triangle;1:%s.o;2:x
'λx.apply(implies[size2,apply(size-gt,iota(filter(x.s, not[size1])))],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size2;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;1:%s.o;2:x
'λx.forall(implies[size3,or[size1,triangle]],filter(filter(filter(x.s, triangle), rectangle), circle))'	0:forall(%s,%s);4:implies[%s,%s];4:size3;4:or[%s,%s];4:size1;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle;4:circle
'λx.apply(size2,iota(filter(x.s, and[blue,and[yellow,circle]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:and[%s,%s];4:yellow;4:circle
'λx.exists(not[apply(same_shape,iota(x.s))], filter(x.s, and[and[yellow,implies[size1,blue]],rectangle]))'	0:exists(%s, %s);4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:yellow;4:implies[%s,%s];4:size1;4:blue;4:rectangle
'λx.apply(and[not[size1],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size1;4:triangle;1:%s.o;2:x
'λx.apply(iff[size3,circle],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:size3;4:circle;1:iota(%s);3:%s.s;2:x
'λx.exists(and[size2,blue], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:size2;4:blue;3:%s.s;2:x
'λx.forall(green,filter(x.s, and[size3,size2]))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:size2
'λx.apply(and[size2,not[yellow]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:not[%s];4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(x.s, apply(same_size,iota(filter(x.s, size2))))))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(and[and[and[not[blue],not[implies[or[triangle,and[and[blue,circle],apply(size-geq,x.o)]],circle]]],and[green,not[or[iff[circle,blue],green]]]],and[and[yellow,green],circle]],iota(filter(x.s, apply(size-leq,iota(x.s)))))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:blue;4:not[%s];4:implies[%s,%s];4:or[%s,%s];4:triangle;4:and[%s,%s];4:and[%s,%s];4:blue;4:circle;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:circle;4:and[%s,%s];4:green;4:not[%s];4:or[%s,%s];4:iff[%s,%s];4:circle;4:blue;4:green;4:and[%s,%s];4:and[%s,%s];4:yellow;4:green;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x
'λx.exists(and[green,implies[and[or[and[size3,or[triangle,apply(same_shape,iota(x.s))]],and[circle,green]],yellow],size3]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:green;4:implies[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size3;4:or[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:green;4:yellow;4:size3;3:%s.s;2:x
'λx.apply(or[green,circle],iota(filter(filter(x.s, size1), size2)))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2
'λx.apply(not[not[size2]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:size2;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(x.s, size2))),iota(filter(filter(x.s, circle), not[size1])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:size1
'λx.empty(filter(filter(filter(x.s, or[rectangle,or[and[blue,yellow],green]]), yellow), or[and[green,yellow],green]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:blue;4:yellow;4:green;4:yellow;4:or[%s,%s];4:and[%s,%s];4:green;4:yellow;4:green
'λx.apply(not[and[nor[yellow,not[apply(size-geq,iota(filter(filter(filter(x.s, size3), size1), and[blue,size2])))]],size1]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:nor[%s,%s];4:yellow;4:not[%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size1;4:and[%s,%s];4:blue;4:size2;4:size1;1:%s.o;2:x
'λx.forall(and[blue,green],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:blue;4:green;3:%s.s;2:x
'λx.apply(or[circle,blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:blue;1:%s.o;2:x
'λx.apply(and[and[blue,circle],size2],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:circle;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(iff[apply(same_shape,iota(x.s)),green],iota(filter(filter(filter(filter(filter(filter(x.s, size2), or[size2,triangle]), and[and[green,green],circle]), size2), yellow), size3)))'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:size2;4:triangle;4:and[%s,%s];4:and[%s,%s];4:green;4:green;4:circle;4:size2;4:yellow;4:size3
'λx.apply(green,iota(filter(filter(x.s, circle), iff[size2,size2])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:iff[%s,%s];4:size2;4:size2
'λx.apply(blue,iota(filter(filter(x.s, size1), size2)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2
'λx.apply(or[and[nor[size1,implies[blue,nand[size1,blue]]],green],green],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:size1;4:implies[%s,%s];4:blue;4:nand[%s,%s];4:size1;4:blue;4:green;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(x.s, not[and[or[rectangle,triangle],blue]]), size3)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:or[%s,%s];4:rectangle;4:triangle;4:blue;4:size3
'λx.contains(x.o, filter(filter(filter(x.s, triangle), size3), and[implies[size1,size3],and[circle,apply(same_color,iota(filter(filter(x.s, and[and[not[triangle],and[apply(same_shape,iota(x.s)),not[blue]]],not[size2]]), and[circle,green])))]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3;4:and[%s,%s];4:implies[%s,%s];4:size1;4:size3;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:not[%s];4:blue;4:not[%s];4:size2;4:and[%s,%s];4:circle;4:green
'λx.apply(apply(same_shape,x.o),iota(filter(filter(filter(x.s, size2), or[blue,circle]), circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:blue;4:circle;4:circle
'λx.apply(nor[not[size3],or[green,size3]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:not[%s];4:size3;4:or[%s,%s];4:green;4:size3;1:%s.o;2:x
'λx.apply(or[and[nand[apply(size-geq,x.o),blue],and[iff[rectangle,and[and[and[iff[blue,rectangle],yellow],size3],and[circle,nand[and[yellow,not[size1]],not[not[circle]]]]]],yellow]],size1],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:blue;4:and[%s,%s];4:iff[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:blue;4:rectangle;4:yellow;4:size3;4:and[%s,%s];4:circle;4:nand[%s,%s];4:and[%s,%s];4:yellow;4:not[%s];4:size1;4:not[%s];4:not[%s];4:circle;4:yellow;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(not[not[not[size3]]],iota(filter(filter(x.s, circle), triangle)))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle
'λx.apply(not[or[or[not[size1],size1],yellow]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:or[%s,%s];4:not[%s];4:size1;4:size1;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[yellow,yellow],iota(filter(filter(x.s, rectangle), apply(same_shape,iota(filter(x.s, and[yellow,size2]))))))'	0:apply(%s,%s);4:nor[%s,%s];4:yellow;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size2
'λx.apply(or[green,and[apply(same_size,x.o),and[not[not[apply(size-gt,x.o)]],rectangle]]],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:not[%s];4:not[%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.contains(x.o, filter(filter(x.s, size2), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green
'λx.contains(iota(filter(x.s, or[and[and[and[size3,green],rectangle],size1],circle])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:green;4:rectangle;4:size1;4:circle;3:%s.s;2:x
'λx.apply(and[apply(size-gt,iota(filter(x.s, rectangle))),not[yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:yellow;1:%s.o;2:x
'λx.apply(iff[or[green,apply(same_color,iota(x.s))],or[blue,rectangle]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:or[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:rectangle;1:%s.o;2:x
'λx.apply(not[not[yellow]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:yellow;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, size2), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3
'λx.forall(and[or[implies[blue,iff[blue,yellow]],apply(size-leq,iota(filter(filter(filter(x.s, yellow), rectangle), size2)))],yellow],filter(x.s, implies[green,size2]))'	0:forall(%s,%s);4:and[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:blue;4:iff[%s,%s];4:blue;4:yellow;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle;4:size2;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:green;4:size2
'λx.apply(triangle,iota(filter(filter(x.s, circle), circle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:circle
'λx.apply(nand[size1,circle],iota(filter(filter(x.s, blue), rectangle)))'	0:apply(%s,%s);4:nand[%s,%s];4:size1;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle
'λx.apply(blue,iota(filter(x.s, circle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(triangle,iota(filter(filter(filter(x.s, apply(size-geq,x.o)), rectangle), not[rectangle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:rectangle;4:not[%s];4:rectangle
'λx.apply(implies[blue,rectangle],iota(filter(x.s, green)))'	0:apply(%s,%s);4:implies[%s,%s];4:blue;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.forall(not[not[implies[and[not[apply(same_color,x.o)],size1],blue]]],x.s)'	0:forall(%s,%s);4:not[%s];4:not[%s];4:implies[%s,%s];4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1;4:blue;3:%s.s;2:x
'λx.empty(filter(filter(x.s, green), apply(size-geq,x.o)))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.apply(or[or[green,rectangle],size2],iota(filter(filter(x.s, and[size2,rectangle]), size3)))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:green;4:rectangle;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:rectangle;4:size3
'λx.empty(filter(filter(x.s, apply(same_color,iota(x.s))), nand[yellow,apply(size-leq,x.o)]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:nand[%s,%s];4:yellow;4:apply(%s,%s);5:size-leq;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, not[and[iff[green,blue],or[blue,and[not[and[implies[yellow,or[circle,and[or[circle,yellow],rectangle]]],size2]],size3]]]]), size3)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:iff[%s,%s];4:green;4:blue;4:or[%s,%s];4:blue;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:implies[%s,%s];4:yellow;4:or[%s,%s];4:circle;4:and[%s,%s];4:or[%s,%s];4:circle;4:yellow;4:rectangle;4:size2;4:size3;4:size3
'λx.apply(and[blue,size3],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(or[nand[and[or[and[size2,circle],and[apply(same_size,x.o),or[yellow,green]]],blue],yellow],apply(size-lt,iota(x.s))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size2;4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:yellow;4:green;4:blue;4:yellow;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(or[not[blue],nor[rectangle,size3]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:blue;4:nor[%s,%s];4:rectangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.forall(yellow,filter(x.s, or[and[and[or[and[or[blue,apply(same_shape,iota(x.s))],or[blue,circle]],triangle],size2],size2],green]))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:circle;4:triangle;4:size2;4:size2;4:green
'λx.forall(size2,filter(filter(x.s, and[triangle,size1]), rectangle))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:size1;4:rectangle
'λx.apply(size2,iota(filter(filter(filter(x.s, triangle), blue), blue)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue;4:blue
'λx.apply(circle,iota(filter(x.s, not[size3])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3
'λx.apply(and[not[and[and[or[blue,not[not[not[size1]]]],and[not[triangle],blue]],size3]],circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:blue;4:not[%s];4:not[%s];4:not[%s];4:size1;4:and[%s,%s];4:not[%s];4:triangle;4:blue;4:size3;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(x.s, triangle), circle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle
'λx.forall(triangle,filter(x.s, implies[or[size3,triangle],and[size2,apply(same_color,iota(x.s))]]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:or[%s,%s];4:size3;4:triangle;4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(x.s, and[size1,or[or[and[size1,and[nor[triangle,apply(same_shape,x.o)],blue]],apply(size-gt,iota(x.s))],yellow]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:nor[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:yellow
'λx.contains(iota(filter(filter(x.s, and[and[apply(size-geq,iota(x.s)),size2],yellow]), size1)), filter(x.s, rectangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:size2;4:yellow;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.empty(filter(x.s, not[not[size3]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:size3
'λx.apply(or[apply(same_shape,x.o),implies[and[and[and[size3,not[yellow]],size1],green],and[or[size1,triangle],and[circle,yellow]]]],iota(filter(x.s, not[or[apply(same_size,iota(x.s)),rectangle]])))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:implies[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:not[%s];4:yellow;4:size1;4:green;4:and[%s,%s];4:or[%s,%s];4:size1;4:triangle;4:and[%s,%s];4:circle;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:rectangle
'λx.apply(size2,iota(filter(filter(x.s, blue), and[and[size1,size2],implies[and[triangle,and[iff[and[triangle,blue],size1],and[triangle,blue]]],or[yellow,green]]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:and[%s,%s];4:size1;4:size2;4:implies[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:triangle;4:blue;4:size1;4:and[%s,%s];4:triangle;4:blue;4:or[%s,%s];4:yellow;4:green
'λx.apply(and[size3,blue],iota(filter(filter(filter(x.s, blue), apply(same_size,iota(x.s))), size2)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size2
'λx.apply(yellow,iota(filter(x.s, circle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(blue,iota(filter(filter(x.s, blue), not[and[apply(same_color,iota(x.s)),not[and[triangle,yellow]]]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:triangle;4:yellow
'λx.apply(and[and[size2,rectangle],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size2;4:rectangle;4:size2;1:%s.o;2:x
'λx.exists(not[size2], x.s)'	0:exists(%s, %s);4:not[%s];4:size2;3:%s.s;2:x
'λx.apply(size1,iota(filter(x.s, or[size1,and[size2,blue]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:and[%s,%s];4:size2;4:blue
'λx.apply(and[size3,implies[circle,yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:implies[%s,%s];4:circle;4:yellow;1:%s.o;2:x
'λx.apply(and[triangle,triangle],iota(filter(filter(filter(x.s, and[yellow,implies[and[implies[yellow,rectangle],and[yellow,triangle]],and[and[blue,circle],rectangle]]]), size1), size2)))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:implies[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:yellow;4:rectangle;4:and[%s,%s];4:yellow;4:triangle;4:and[%s,%s];4:and[%s,%s];4:blue;4:circle;4:rectangle;4:size1;4:size2
'λx.apply(blue,iota(filter(filter(filter(x.s, and[blue,circle]), circle), iff[green,size1])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:circle;4:circle;4:iff[%s,%s];4:green;4:size1
'λx.apply(or[size3,circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:circle;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(x.s, not[blue]), size3)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:size3
'λx.apply(yellow,iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(size2,iota(filter(filter(x.s, yellow), not[triangle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:triangle
'λx.exists(circle, filter(filter(x.s, yellow), size2))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2
'λx.apply(and[and[size1,and[size2,circle]],yellow],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:size2;4:circle;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(implies[blue,size3],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:blue;4:size3;1:%s.o;2:x
'λx.apply(or[triangle,nor[blue,rectangle]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:nor[%s,%s];4:blue;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.forall(implies[and[size1,rectangle],and[size1,size3]],filter(x.s, implies[not[green],and[triangle,size3]]))'	0:forall(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:size1;4:rectangle;4:and[%s,%s];4:size1;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:not[%s];4:green;4:and[%s,%s];4:triangle;4:size3
'λx.contains(iota(filter(filter(x.s, green), and[triangle,apply(same_size,x.o)])), filter(filter(filter(x.s, or[or[not[and[rectangle,apply(same_size,iota(filter(x.s, and[circle,size2])))]],and[rectangle,not[blue]]],size1]), implies[blue,size3]), and[and[and[not[circle],and[size1,rectangle]],size2],size2]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:not[%s];4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size2;4:and[%s,%s];4:rectangle;4:not[%s];4:blue;4:size1;4:implies[%s,%s];4:blue;4:size3;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:circle;4:and[%s,%s];4:size1;4:rectangle;4:size2;4:size2
'λx.apply(and[triangle,or[size3,or[yellow,size2]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:or[%s,%s];4:size3;4:or[%s,%s];4:yellow;4:size2;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, or[yellow,size2]), and[size3,size3])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:size2;4:and[%s,%s];4:size3;4:size3
'λx.apply(and[green,not[size2]],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(and[size1,green],iota(filter(x.s, and[circle,circle])))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:circle
'λx.apply(triangle,iota(filter(x.s, or[size2,triangle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:triangle
'λx.apply(and[green,blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:blue;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(filter(filter(filter(x.s, circle), size3), not[or[and[or[circle,size1],triangle],nand[and[triangle,triangle],circle]]]), size3), yellow))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:circle;4:size1;4:triangle;4:nand[%s,%s];4:and[%s,%s];4:triangle;4:triangle;4:circle;4:size3;4:yellow
'λx.apply(and[and[size1,circle],or[and[blue,size1],not[and[and[blue,iff[size3,and[size2,size3]]],rectangle]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:circle;4:or[%s,%s];4:and[%s,%s];4:blue;4:size1;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:iff[%s,%s];4:size3;4:and[%s,%s];4:size2;4:size3;4:rectangle;1:%s.o;2:x
'λx.apply(and[yellow,and[circle,apply(size-leq,x.o)]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:and[%s,%s];4:circle;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, not[and[implies[yellow,size2],not[green]]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:implies[%s,%s];4:yellow;4:size2;4:not[%s];4:green
'λx.apply(nand[blue,green],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:blue;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size3,size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:size2;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, implies[yellow,triangle]), yellow), or[and[not[green],and[yellow,circle]],yellow]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:yellow;4:triangle;4:yellow;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:green;4:and[%s,%s];4:yellow;4:circle;4:yellow
'λx.apply(triangle,iota(filter(x.s, nor[or[and[yellow,and[size2,circle]],and[size3,blue]],green])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:or[%s,%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:size2;4:circle;4:and[%s,%s];4:size3;4:blue;4:green
'λx.apply(or[nand[or[triangle,triangle],size1],size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:triangle;4:triangle;4:size1;4:size3;1:%s.o;2:x
'λx.exists(and[size1,rectangle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:size1;4:rectangle;3:%s.s;2:x
'λx.apply(or[rectangle,size2],iota(filter(filter(x.s, circle), rectangle)))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle
'λx.apply(triangle,iota(filter(filter(filter(x.s, not[blue]), size1), size3)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:size1;4:size3
'λx.exists(and[apply(size-lt,iota(filter(filter(filter(x.s, and[not[green],or[rectangle,and[and[triangle,yellow],size2]]]), green), and[blue,size3]))),and[yellow,blue]], filter(x.s, yellow))'	0:exists(%s, %s);4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:green;4:or[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:triangle;4:yellow;4:size2;4:green;4:and[%s,%s];4:blue;4:size3;4:and[%s,%s];4:yellow;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(or[or[and[size2,triangle],not[rectangle]],apply(size-gt,iota(x.s))],iota(filter(filter(x.s, circle), size3)))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size2;4:triangle;4:not[%s];4:rectangle;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3
'λx.contains(iota(x.s), filter(x.s, apply(same_shape,iota(filter(filter(filter(x.s, rectangle), apply(same_color,x.o)), green)))))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green
'λx.apply(apply(same_shape,iota(filter(filter(x.s, blue), size3))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3;1:%s.o;2:x
'λx.apply(and[apply(same_size,x.o),nand[size3,apply(same_size,x.o)]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:nand[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(filter(filter(x.s, implies[rectangle,or[or[rectangle,apply(same_shape,x.o)],yellow]]), triangle), yellow), yellow)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:rectangle;4:or[%s,%s];4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow;4:triangle;4:yellow;4:yellow
'λx.apply(and[and[not[blue],and[yellow,rectangle]],and[and[triangle,triangle],rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:blue;4:and[%s,%s];4:yellow;4:rectangle;4:and[%s,%s];4:and[%s,%s];4:triangle;4:triangle;4:rectangle;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, triangle), yellow)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:yellow
'λx.exists(size3, filter(x.s, blue))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.empty(filter(x.s, iff[yellow,apply(size-leq,iota(filter(x.s, green)))]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:yellow;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[triangle,yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[and[nor[not[apply(same_size,iota(x.s))],not[yellow]],circle],green],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:not[%s];4:yellow;4:circle;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(nor[green,rectangle],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:green;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(x.s, rectangle), size3)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3
'λx.apply(not[not[size1]],iota(filter(filter(filter(x.s, apply(same_color,x.o)), triangle), and[triangle,green])))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;4:and[%s,%s];4:triangle;4:green
'λx.apply(yellow,iota(filter(filter(filter(x.s, apply(size-gt,iota(x.s))), rectangle), nand[and[apply(size-geq,x.o),apply(size-geq,iota(x.s))],size1])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:rectangle;4:nand[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:size1
'λx.contains(iota(filter(filter(filter(x.s, not[and[apply(size-geq,x.o),or[not[size3],nand[or[triangle,apply(same_shape,x.o)],triangle]]]]), green), implies[size3,and[green,circle]])), filter(x.s, size2))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:or[%s,%s];4:not[%s];4:size3;4:nand[%s,%s];4:or[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle;4:green;4:implies[%s,%s];4:size3;4:and[%s,%s];4:green;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(circle,iota(filter(filter(filter(x.s, size2), and[yellow,or[circle,blue]]), yellow)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:yellow;4:or[%s,%s];4:circle;4:blue;4:yellow
'λx.apply(and[size3,size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:size3;1:%s.o;2:x
'λx.apply(and[size1,circle],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(or[yellow,or[and[size2,or[size2,size3]],size3]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:or[%s,%s];4:and[%s,%s];4:size2;4:or[%s,%s];4:size2;4:size3;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(x.s, implies[not[and[blue,and[size2,size2]]],size3])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:not[%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:size2;4:size2;4:size3
'λx.exists(iff[and[and[yellow,size2],and[yellow,size3]],circle], filter(filter(filter(x.s, not[green]), size1), and[size2,rectangle]))'	0:exists(%s, %s);4:iff[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:size2;4:and[%s,%s];4:yellow;4:size3;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:size1;4:and[%s,%s];4:size2;4:rectangle
'λx.apply(iff[circle,and[implies[or[apply(same_size,iota(x.s)),rectangle],and[rectangle,size2]],circle]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:circle;4:and[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:rectangle;4:size2;4:circle;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, circle), yellow)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow
'λx.apply(or[rectangle,and[apply(same_shape,iota(filter(filter(filter(x.s, size1), apply(same_color,iota(filter(x.s, yellow)))), or[not[blue],green]))),apply(same_size,iota(x.s))]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:not[%s];4:blue;4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(and[or[apply(size-leq,x.o),and[triangle,size2]],blue],iota(filter(x.s, and[circle,circle])))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:and[%s,%s];4:triangle;4:size2;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:circle
'λx.forall(and[yellow,apply(size-gt,iota(x.s))],filter(filter(x.s, circle), yellow))'	0:forall(%s,%s);4:and[%s,%s];4:yellow;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow
'λx.apply(implies[apply(same_size,x.o),size3],iota(filter(x.s, or[implies[circle,or[circle,blue]],apply(same_shape,x.o)])))'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:implies[%s,%s];4:circle;4:or[%s,%s];4:circle;4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(nand[not[rectangle],not[green]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:not[%s];4:rectangle;4:not[%s];4:green;1:%s.o;2:x
'λx.apply(not[green],iota(filter(filter(filter(filter(filter(x.s, blue), size1), not[and[size2,triangle]]), green), yellow)))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1;4:not[%s];4:and[%s,%s];4:size2;4:triangle;4:green;4:yellow
'λx.contains(iota(x.s), filter(filter(x.s, circle), and[size1,size1]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:size1;4:size1
'λx.apply(and[size1,nand[circle,size1]],iota(filter(filter(x.s, size1), size2)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:nand[%s,%s];4:circle;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2
'λx.apply(or[green,size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:size2;1:%s.o;2:x
'λx.exists(size1, filter(filter(x.s, blue), green))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green
'λx.apply(or[and[and[size3,or[yellow,yellow]],size3],circle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:or[%s,%s];4:yellow;4:yellow;4:size3;4:circle;1:iota(%s);3:%s.s;2:x
'λx.exists(blue, x.s)'	0:exists(%s, %s);4:blue;3:%s.s;2:x
'λx.apply(or[not[rectangle],or[size3,rectangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:rectangle;4:or[%s,%s];4:size3;4:rectangle;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(filter(x.s, size2), size1), and[yellow,triangle])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1;4:and[%s,%s];4:yellow;4:triangle
'λx.apply(implies[size1,yellow],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size1;4:yellow;1:%s.o;2:x
'λx.empty(filter(x.s, and[not[green],size1]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:green;4:size1
'λx.exists(nand[not[green],apply(same_color,x.o)], filter(x.s, apply(size-leq,x.o)))'	0:exists(%s, %s);4:nand[%s,%s];4:not[%s];4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:%s.o;2:x
'λx.apply(or[circle,size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:size3;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, and[size3,or[size1,and[triangle,blue]]]), not[not[triangle]]), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:or[%s,%s];4:size1;4:and[%s,%s];4:triangle;4:blue;4:not[%s];4:not[%s];4:triangle;4:blue
'λx.contains(x.o, filter(x.s, and[or[size1,yellow],rectangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:size1;4:yellow;4:rectangle
'λx.apply(and[green,size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(x.s, size3)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(iff[apply(size-geq,iota(x.s)),green],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:green;1:%s.o;2:x
'λx.apply(nand[triangle,size1],iota(filter(filter(filter(filter(filter(x.s, apply(size-gt,iota(filter(filter(filter(filter(filter(x.s, rectangle), size1), size1), iff[size3,or[size2,size3]]), rectangle)))), size1), size3), and[apply(same_size,x.o),or[and[apply(same_color,x.o),rectangle],iff[yellow,yellow]]]), or[and[size2,and[circle,size3]],not[nor[circle,size3]]])))'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1;4:size1;4:iff[%s,%s];4:size3;4:or[%s,%s];4:size2;4:size3;4:rectangle;4:size1;4:size3;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle;4:iff[%s,%s];4:yellow;4:yellow;4:or[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:circle;4:size3;4:not[%s];4:nor[%s,%s];4:circle;4:size3
'λx.apply(not[rectangle],x.o)'	0:apply(%s,%s);4:not[%s];4:rectangle;1:%s.o;2:x
'λx.forall(triangle,filter(filter(filter(x.s, and[and[size3,blue],apply(same_shape,iota(x.s))]), and[or[triangle,rectangle],size1]), size3))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size3;4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:triangle;4:rectangle;4:size1;4:size3
'λx.apply(triangle,iota(filter(filter(x.s, nand[rectangle,implies[size2,not[size3]]]), circle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:rectangle;4:implies[%s,%s];4:size2;4:not[%s];4:size3;4:circle
'λx.apply(and[circle,blue],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(not[and[nor[not[nor[triangle,size3]],and[and[blue,blue],size2]],circle]],iota(filter(filter(filter(x.s, and[iff[size2,and[and[triangle,and[or[size3,or[blue,and[size3,circle]]],size1]],and[triangle,rectangle]]],circle]), size2), rectangle)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:nor[%s,%s];4:not[%s];4:nor[%s,%s];4:triangle;4:size3;4:and[%s,%s];4:and[%s,%s];4:blue;4:blue;4:size2;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:iff[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:or[%s,%s];4:size3;4:or[%s,%s];4:blue;4:and[%s,%s];4:size3;4:circle;4:size1;4:and[%s,%s];4:triangle;4:rectangle;4:circle;4:size2;4:rectangle
'λx.exists(size2, filter(filter(x.s, blue), yellow))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow
'λx.forall(yellow,filter(x.s, or[green,apply(size-geq,iota(x.s))]))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size2,apply(size-gt,x.o)],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, apply(same_shape,iota(filter(filter(x.s, apply(same_color,iota(x.s))), yellow)))), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:yellow;4:size1
'λx.forall(rectangle,filter(x.s, iff[size3,apply(same_size,iota(filter(filter(filter(x.s, nor[nor[green,triangle],blue]), size1), size1)))]))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:nor[%s,%s];4:green;4:triangle;4:blue;4:size1;4:size1
'λx.contains(iota(x.s), filter(x.s, implies[iff[and[triangle,size2],green],yellow]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:triangle;4:size2;4:green;4:yellow
'λx.contains(iota(filter(filter(x.s, not[size1]), size2)), filter(x.s, circle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.forall(rectangle,filter(x.s, size2))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.exists(blue, filter(filter(x.s, blue), triangle))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle
'λx.apply(size3,iota(filter(filter(filter(x.s, size1), and[or[blue,yellow],green]), not[size1])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:or[%s,%s];4:blue;4:yellow;4:green;4:not[%s];4:size1
'λx.empty(filter(filter(x.s, yellow), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1
'λx.empty(filter(x.s, or[size1,and[yellow,not[size2]]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:and[%s,%s];4:yellow;4:not[%s];4:size2
'λx.apply(nand[apply(same_size,x.o),blue],iota(filter(filter(x.s, triangle), blue)))'	0:apply(%s,%s);4:nand[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue
'λx.apply(or[not[and[yellow,or[and[circle,rectangle],and[triangle,and[size2,and[size1,yellow]]]]]],rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:and[%s,%s];4:yellow;4:or[%s,%s];4:and[%s,%s];4:circle;4:rectangle;4:and[%s,%s];4:triangle;4:and[%s,%s];4:size2;4:and[%s,%s];4:size1;4:yellow;4:rectangle;1:%s.o;2:x
'λx.exists(rectangle, filter(x.s, yellow))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(nor[rectangle,triangle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:rectangle;4:triangle;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, yellow), yellow)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:yellow
'λx.exists(and[and[rectangle,rectangle],and[not[triangle],size2]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:rectangle;4:rectangle;4:and[%s,%s];4:not[%s];4:triangle;4:size2;3:%s.s;2:x
'λx.apply(and[blue,rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[apply(size-gt,iota(x.s)),implies[green,triangle]],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:implies[%s,%s];4:green;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(x.s), filter(x.s, iff[size1,blue]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size1;4:blue
'λx.apply(and[implies[circle,nor[nand[circle,circle],rectangle]],and[green,size2]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:circle;4:nor[%s,%s];4:nand[%s,%s];4:circle;4:circle;4:rectangle;4:and[%s,%s];4:green;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(not[apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[or[circle,not[apply(same_shape,iota(filter(filter(x.s, size1), or[not[not[circle]],triangle])))]],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:circle;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:or[%s,%s];4:not[%s];4:not[%s];4:circle;4:triangle;4:size3;1:%s.o;2:x
'λx.exists(nand[circle,size3], x.s)'	0:exists(%s, %s);4:nand[%s,%s];4:circle;4:size3;3:%s.s;2:x
'λx.apply(and[size2,size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(filter(filter(filter(filter(filter(filter(x.s, yellow), yellow), or[rectangle,circle]), and[or[size3,not[apply(same_size,x.o)]],size2]), triangle), blue), triangle), rectangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:yellow;4:or[%s,%s];4:rectangle;4:circle;4:and[%s,%s];4:or[%s,%s];4:size3;4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2;4:triangle;4:blue;4:triangle;4:rectangle
'λx.forall(size3,filter(filter(filter(x.s, and[blue,implies[not[green],size3]]), and[or[size2,and[apply(same_color,iota(filter(filter(filter(filter(filter(x.s, or[rectangle,and[rectangle,yellow]]), size2), yellow), blue), not[size3]))),or[or[rectangle,and[size1,green]],blue]]],yellow]), green))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:implies[%s,%s];4:not[%s];4:green;4:size3;4:and[%s,%s];4:or[%s,%s];4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:and[%s,%s];4:rectangle;4:yellow;4:size2;4:yellow;4:blue;4:not[%s];4:size3;4:or[%s,%s];4:or[%s,%s];4:rectangle;4:and[%s,%s];4:size1;4:green;4:blue;4:yellow;4:green
'λx.apply(iff[or[green,not[circle]],yellow],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:or[%s,%s];4:green;4:not[%s];4:circle;4:yellow;1:%s.o;2:x
'λx.apply(or[apply(same_size,iota(filter(filter(filter(x.s, apply(same_shape,x.o)), triangle), and[circle,blue]))),size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle;4:and[%s,%s];4:circle;4:blue;4:size1;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, and[and[green,apply(same_size,iota(filter(x.s, nor[and[size1,triangle],green])))],blue])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:and[%s,%s];4:size1;4:triangle;4:green;4:blue
'λx.apply(or[rectangle,triangle],iota(filter(filter(x.s, and[size2,triangle]), circle)))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:triangle;4:circle
'λx.apply(apply(same_size,iota(filter(x.s, rectangle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;1:%s.o;2:x
'λx.exists(blue, filter(filter(x.s, size1), and[rectangle,apply(same_size,x.o)]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(not[and[apply(same_shape,x.o),iff[blue,blue]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:iff[%s,%s];4:blue;4:blue;1:%s.o;2:x
'λx.apply(nand[green,and[not[circle],size2]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:green;4:and[%s,%s];4:not[%s];4:circle;4:size2;1:%s.o;2:x
'λx.apply(size2,iota(filter(x.s, and[rectangle,triangle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:triangle
'λx.contains(iota(filter(filter(x.s, blue), size2)), filter(x.s, triangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.contains(iota(filter(filter(filter(filter(x.s, iff[not[size1],apply(same_color,x.o)]), yellow), rectangle), size3)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:not[%s];4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;4:rectangle;4:size3;3:%s.s;2:x
'λx.forall(and[or[apply(same_color,x.o),size1],rectangle],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1;4:rectangle;3:%s.s;2:x
'λx.apply(not[green],iota(filter(filter(filter(filter(filter(filter(x.s, apply(same_shape,iota(filter(filter(filter(filter(x.s, or[not[circle],not[rectangle]]), rectangle), rectangle), iff[green,size1])))), or[not[size2],size3]), not[size1]), yellow), yellow), or[and[circle,green],size2])))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:circle;4:not[%s];4:rectangle;4:rectangle;4:rectangle;4:iff[%s,%s];4:green;4:size1;4:or[%s,%s];4:not[%s];4:size2;4:size3;4:not[%s];4:size1;4:yellow;4:yellow;4:or[%s,%s];4:and[%s,%s];4:circle;4:green;4:size2
'λx.apply(and[and[nand[and[and[not[or[size2,and[triangle,circle]]],size3],or[green,size3]],triangle],blue],implies[size2,nand[and[size2,iff[green,green]],or[and[size1,and[green,and[and[yellow,triangle],circle]]],apply(same_size,iota(filter(filter(filter(x.s, circle), not[blue]), yellow)))]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:or[%s,%s];4:size2;4:and[%s,%s];4:triangle;4:circle;4:size3;4:or[%s,%s];4:green;4:size3;4:triangle;4:blue;4:implies[%s,%s];4:size2;4:nand[%s,%s];4:and[%s,%s];4:size2;4:iff[%s,%s];4:green;4:green;4:or[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:yellow;4:triangle;4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:blue;4:yellow;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(filter(x.s, size1), apply(same_shape,x.o)), not[triangle])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:triangle
'λx.apply(size3,iota(filter(filter(filter(filter(x.s, and[rectangle,yellow]), green), size1), implies[size3,circle])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:yellow;4:green;4:size1;4:implies[%s,%s];4:size3;4:circle
'λx.apply(and[size3,yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, triangle), triangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:triangle
'λx.apply(green,iota(filter(filter(x.s, green), and[size2,or[size3,triangle]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:size2;4:or[%s,%s];4:size3;4:triangle
'λx.apply(size2,iota(filter(filter(filter(filter(filter(filter(x.s, green), apply(same_shape,iota(x.s))), and[size1,not[not[iff[iff[implies[and[and[circle,apply(same_color,x.o)],iff[size2,rectangle]],or[size1,circle]],triangle],or[size3,iff[nor[green,and[size1,size3]],and[apply(same_size,x.o),not[and[size1,and[size3,circle]]]]]]]]]]), not[size2]), blue), triangle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:not[%s];4:not[%s];4:iff[%s,%s];4:iff[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:iff[%s,%s];4:size2;4:rectangle;4:or[%s,%s];4:size1;4:circle;4:triangle;4:or[%s,%s];4:size3;4:iff[%s,%s];4:nor[%s,%s];4:green;4:and[%s,%s];4:size1;4:size3;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:size3;4:circle;4:not[%s];4:size2;4:blue;4:triangle
'λx.apply(and[and[apply(size-leq,iota(filter(x.s, not[triangle]))),triangle],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:triangle;4:size1;1:%s.o;2:x
'λx.contains(iota(filter(x.s, or[size3,and[triangle,nand[yellow,apply(same_shape,x.o)]]])), filter(filter(filter(x.s, nand[green,apply(same_size,x.o)]), nand[yellow,size3]), circle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:and[%s,%s];4:triangle;4:nand[%s,%s];4:yellow;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:nand[%s,%s];4:yellow;4:size3;4:circle
'λx.apply(and[size2,green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:green;1:%s.o;2:x
'λx.apply(and[green,and[triangle,not[or[and[size2,or[and[and[not[rectangle],not[apply(same_size,iota(filter(x.s, green)))]],triangle],size3]],iff[green,size3]]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:triangle;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:size2;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:rectangle;4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:triangle;4:size3;4:iff[%s,%s];4:green;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[nand[size1,yellow],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:size1;4:yellow;4:triangle;1:%s.o;2:x
'λx.apply(iff[blue,rectangle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:blue;4:rectangle;1:%s.o;2:x
'λx.forall(and[not[triangle],size2],filter(x.s, circle))'	0:forall(%s,%s);4:and[%s,%s];4:not[%s];4:triangle;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(circle,iota(filter(filter(filter(x.s, size3), triangle), blue)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle;4:blue
'λx.forall(and[and[nor[green,and[size2,apply(size-lt,x.o)]],and[not[and[apply(same_shape,iota(filter(filter(x.s, size2), size3))),blue]],or[size1,size3]]],not[size1]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:green;4:and[%s,%s];4:size2;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3;4:blue;4:or[%s,%s];4:size1;4:size3;4:not[%s];4:size1;3:%s.s;2:x
'λx.apply(not[and[circle,not[blue]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:circle;4:not[%s];4:blue;1:iota(%s);3:%s.s;2:x
'λx.exists(triangle, filter(filter(x.s, size1), rectangle))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle
'λx.apply(iff[size1,and[and[size1,yellow],circle]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:size1;4:yellow;4:circle;1:%s.o;2:x
'λx.apply(and[triangle,yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:yellow;1:%s.o;2:x
'λx.forall(size2,filter(x.s, size2))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(not[not[blue]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:blue;1:%s.o;2:x
'λx.apply(or[triangle,size1],iota(filter(x.s, and[yellow,and[and[apply(same_shape,iota(x.s)),implies[green,not[or[triangle,yellow]]]],blue]])))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:implies[%s,%s];4:green;4:not[%s];4:or[%s,%s];4:triangle;4:yellow;4:blue
'λx.apply(implies[and[and[blue,green],green],circle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:green;4:green;4:circle;1:%s.o;2:x
'λx.apply(and[yellow,and[or[rectangle,yellow],blue]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:yellow;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_size,iota(filter(x.s, implies[circle,size1]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:circle;4:size1;1:%s.o;2:x
'λx.exists(and[apply(same_color,x.o),triangle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;3:%s.s;2:x
'λx.apply(and[circle,implies[not[iff[and[and[yellow,iff[triangle,triangle]],apply(same_color,x.o)],yellow]],or[size2,green]]],iota(filter(filter(x.s, green), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:implies[%s,%s];4:not[%s];4:iff[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:iff[%s,%s];4:triangle;4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;4:or[%s,%s];4:size2;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue
'λx.apply(and[apply(size-leq,iota(filter(filter(x.s, not[size3]), and[triangle,size1]))),and[size2,nand[not[green],blue]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;4:and[%s,%s];4:triangle;4:size1;4:and[%s,%s];4:size2;4:nand[%s,%s];4:not[%s];4:green;4:blue;1:%s.o;2:x
'λx.apply(and[rectangle,blue],iota(filter(x.s, and[size2,apply(same_size,x.o)])))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, rectangle), size1)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1
'λx.apply(and[size2,blue],iota(filter(x.s, not[blue])))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.apply(or[not[and[and[and[triangle,circle],nand[not[size2],green]],circle]],and[triangle,not[and[not[blue],rectangle]]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:circle;4:nand[%s,%s];4:not[%s];4:size2;4:green;4:circle;4:and[%s,%s];4:triangle;4:not[%s];4:and[%s,%s];4:not[%s];4:blue;4:rectangle;1:%s.o;2:x
'λx.exists(size2, filter(filter(x.s, blue), and[yellow,yellow]))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:yellow;4:yellow
'λx.contains(iota(filter(filter(filter(x.s, blue), and[yellow,and[triangle,yellow]]), nor[size3,yellow])), filter(x.s, size2))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:yellow;4:and[%s,%s];4:triangle;4:yellow;4:nor[%s,%s];4:size3;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(triangle,iota(filter(x.s, or[circle,and[size2,size2]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:and[%s,%s];4:size2;4:size2
'λx.exists(or[and[green,not[blue]],not[triangle]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:green;4:not[%s];4:blue;4:not[%s];4:triangle;3:%s.s;2:x
'λx.apply(or[size1,size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:size2;1:%s.o;2:x
'λx.apply(implies[and[yellow,green],or[rectangle,circle]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:yellow;4:green;4:or[%s,%s];4:rectangle;4:circle;1:%s.o;2:x
'λx.apply(and[green,and[not[size2],size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:not[%s];4:size2;4:size2;1:%s.o;2:x
'λx.forall(and[blue,not[blue]],filter(filter(filter(filter(x.s, blue), circle), circle), size3))'	0:forall(%s,%s);4:and[%s,%s];4:blue;4:not[%s];4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle;4:circle;4:size3
'λx.forall(size2,filter(x.s, apply(same_color,iota(filter(filter(x.s, green), or[green,triangle])))))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:green;4:triangle
'λx.empty(filter(x.s, and[blue,size3]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size3
'λx.apply(or[blue,or[size1,size3]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:or[%s,%s];4:size1;4:size3;1:%s.o;2:x
'λx.apply(iff[rectangle,rectangle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:rectangle;4:rectangle;1:%s.o;2:x
'λx.exists(nand[and[iff[not[triangle],not[or[green,or[rectangle,circle]]]],implies[size1,blue]],or[not[size1],size3]], x.s)'	0:exists(%s, %s);4:nand[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:not[%s];4:triangle;4:not[%s];4:or[%s,%s];4:green;4:or[%s,%s];4:rectangle;4:circle;4:implies[%s,%s];4:size1;4:blue;4:or[%s,%s];4:not[%s];4:size1;4:size3;3:%s.s;2:x
'λx.empty(filter(x.s, or[size2,blue]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:blue
'λx.contains(iota(filter(filter(x.s, yellow), apply(same_shape,x.o))), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(and[and[implies[yellow,iff[green,apply(same_shape,x.o)]],size3],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:yellow;4:iff[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3;4:rectangle;1:%s.o;2:x
'λx.exists(nand[and[size1,blue],blue], filter(filter(filter(x.s, yellow), rectangle), size1))'	0:exists(%s, %s);4:nand[%s,%s];4:and[%s,%s];4:size1;4:blue;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle;4:size1
'λx.exists(and[and[not[circle],green],blue], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:circle;4:green;4:blue;3:%s.s;2:x
'λx.forall(size1,filter(x.s, apply(size-lt,x.o)))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.apply(and[blue,not[iff[triangle,and[and[circle,rectangle],circle]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:not[%s];4:iff[%s,%s];4:triangle;4:and[%s,%s];4:and[%s,%s];4:circle;4:rectangle;4:circle;1:%s.o;2:x
'λx.empty(filter(filter(x.s, triangle), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle
'λx.apply(size3,iota(filter(filter(filter(x.s, or[nor[and[blue,or[or[size2,size1],triangle]],rectangle],circle]), and[blue,rectangle]), blue)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:blue;4:or[%s,%s];4:or[%s,%s];4:size2;4:size1;4:triangle;4:rectangle;4:circle;4:and[%s,%s];4:blue;4:rectangle;4:blue
'λx.exists(implies[size1,apply(same_size,x.o)], filter(x.s, not[triangle]))'	0:exists(%s, %s);4:implies[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.apply(and[size3,size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:size1;1:%s.o;2:x
'λx.apply(and[circle,blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:blue;1:%s.o;2:x
'λx.exists(apply(same_shape,x.o), filter(filter(x.s, apply(same_shape,iota(filter(x.s, green)))), not[apply(same_color,x.o)]))'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(filter(x.s, size3), blue), and[size3,and[nand[green,size2],size2]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue;4:and[%s,%s];4:size3;4:and[%s,%s];4:nand[%s,%s];4:green;4:size2;4:size2
'λx.apply(nand[blue,apply(same_size,iota(x.s))],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(not[blue],iota(filter(filter(x.s, or[nor[not[blue],green],triangle]), green)))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:nor[%s,%s];4:not[%s];4:blue;4:green;4:triangle;4:green
'λx.apply(or[size1,and[yellow,not[yellow]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:and[%s,%s];4:yellow;4:not[%s];4:yellow;1:%s.o;2:x
'λx.apply(nand[green,triangle],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:green;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(x.s, yellow), circle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle
'λx.apply(implies[size3,nand[iff[apply(size-gt,iota(filter(filter(x.s, apply(same_color,iota(filter(x.s, size3)))), apply(same_shape,iota(x.s))))),blue],triangle]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size3;4:nand[%s,%s];4:iff[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:blue;4:triangle;1:%s.o;2:x
'λx.apply(not[size3],iota(filter(filter(x.s, and[size3,nor[yellow,size3]]), blue)))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:nor[%s,%s];4:yellow;4:size3;4:blue
'λx.empty(filter(filter(x.s, and[iff[and[or[triangle,nand[yellow,and[or[not[circle],rectangle],size3]]],not[rectangle]],size3],not[not[rectangle]]]), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:or[%s,%s];4:triangle;4:nand[%s,%s];4:yellow;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:circle;4:rectangle;4:size3;4:not[%s];4:rectangle;4:size3;4:not[%s];4:not[%s];4:rectangle;4:triangle
'λx.apply(triangle,iota(filter(filter(x.s, rectangle), and[iff[or[blue,and[size3,size1]],rectangle],and[and[green,yellow],green]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:blue;4:and[%s,%s];4:size3;4:size1;4:rectangle;4:and[%s,%s];4:and[%s,%s];4:green;4:yellow;4:green
'λx.forall(and[circle,and[and[iff[or[or[green,not[yellow]],apply(same_shape,iota(x.s))],triangle],nand[size2,circle]],blue]],filter(filter(filter(x.s, triangle), or[not[rectangle],yellow]), apply(same_size,x.o)))'	0:forall(%s,%s);4:and[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:or[%s,%s];4:green;4:not[%s];4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle;4:nand[%s,%s];4:size2;4:circle;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:or[%s,%s];4:not[%s];4:rectangle;4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(x.s, yellow), or[size1,nor[apply(same_size,x.o),and[size1,size3]]]), green)), filter(x.s, and[and[apply(size-geq,x.o),or[yellow,not[rectangle]]],or[circle,rectangle]]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:size1;4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:size1;4:size3;4:green;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:or[%s,%s];4:yellow;4:not[%s];4:rectangle;4:or[%s,%s];4:circle;4:rectangle
'λx.apply(blue,iota(filter(filter(filter(x.s, not[blue]), circle), circle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:circle;4:circle
'λx.apply(and[nor[and[circle,or[or[size2,not[circle]],triangle]],green],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:circle;4:or[%s,%s];4:or[%s,%s];4:size2;4:not[%s];4:circle;4:triangle;4:green;4:size1;1:%s.o;2:x
'λx.exists(apply(size-gt,iota(x.s)), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(filter(x.s, size1), triangle), size1), size3))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle;4:size1;4:size3
'λx.apply(nor[nand[triangle,not[size1]],size2],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:nand[%s,%s];4:triangle;4:not[%s];4:size1;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(filter(filter(x.s, yellow), size1), size2), apply(same_color,x.o))))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(apply(same_size,iota(filter(x.s, and[circle,and[not[size3],size1]]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:and[%s,%s];4:not[%s];4:size3;4:size1;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, green)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.exists(and[size3,implies[circle,and[yellow,size3]]], filter(x.s, not[circle]))'	0:exists(%s, %s);4:and[%s,%s];4:size3;4:implies[%s,%s];4:circle;4:and[%s,%s];4:yellow;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.apply(apply(same_color,iota(filter(filter(x.s, yellow), size2))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2;1:%s.o;2:x
'λx.apply(and[blue,rectangle],iota(filter(filter(filter(filter(x.s, blue), not[green]), blue), rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:green;4:blue;4:rectangle
'λx.apply(or[blue,or[apply(same_shape,iota(x.s)),circle]],iota(filter(filter(x.s, not[yellow]), size2)))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:size2
'λx.apply(not[triangle],x.o)'	0:apply(%s,%s);4:not[%s];4:triangle;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, yellow), apply(same_size,iota(filter(x.s, or[or[size2,and[size1,green]],circle]))))))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:size2;4:and[%s,%s];4:size1;4:green;4:circle
'λx.apply(and[implies[or[triangle,or[blue,or[and[circle,apply(same_shape,iota(filter(x.s, nand[apply(same_color,iota(filter(filter(filter(filter(filter(filter(x.s, or[not[circle],circle]), apply(same_shape,iota(x.s))), triangle), circle), yellow), and[green,iff[blue,and[size1,circle]]]))),blue])))],or[triangle,triangle]]]],and[size3,size1]],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:triangle;4:or[%s,%s];4:blue;4:or[%s,%s];4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:circle;4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle;4:circle;4:yellow;4:and[%s,%s];4:green;4:iff[%s,%s];4:blue;4:and[%s,%s];4:size1;4:circle;4:blue;4:or[%s,%s];4:triangle;4:triangle;4:and[%s,%s];4:size3;4:size1;4:triangle;1:%s.o;2:x
'λx.apply(and[not[green],circle],iota(filter(x.s, and[blue,rectangle])))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:green;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:rectangle
'λx.forall(nor[triangle,triangle],filter(x.s, circle))'	0:forall(%s,%s);4:nor[%s,%s];4:triangle;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(nor[and[size1,triangle],size3],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:size1;4:triangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.forall(or[triangle,triangle],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:triangle;4:triangle;3:%s.s;2:x
'λx.contains(iota(filter(x.s, yellow)), filter(filter(filter(filter(filter(x.s, or[size1,blue]), triangle), blue), iff[triangle,not[or[rectangle,iff[size2,not[yellow]]]]]), yellow))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:blue;4:triangle;4:blue;4:iff[%s,%s];4:triangle;4:not[%s];4:or[%s,%s];4:rectangle;4:iff[%s,%s];4:size2;4:not[%s];4:yellow;4:yellow
'λx.apply(not[and[triangle,green]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:triangle;4:green;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(filter(x.s, and[apply(same_color,iota(x.s)),blue]), yellow), size2)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:blue;4:yellow;4:size2
'λx.apply(and[size3,and[rectangle,size2]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:rectangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(filter(filter(filter(x.s, or[triangle,size1]), yellow), or[nand[green,or[nor[and[size1,implies[triangle,and[size3,apply(size-lt,x.o)]]],and[not[yellow],apply(same_shape,iota(filter(x.s, green)))]],not[rectangle]]],and[size2,not[blue]]]), circle), blue)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:size1;4:yellow;4:or[%s,%s];4:nand[%s,%s];4:green;4:or[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:size1;4:implies[%s,%s];4:triangle;4:and[%s,%s];4:size3;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:and[%s,%s];4:not[%s];4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:rectangle;4:and[%s,%s];4:size2;4:not[%s];4:blue;4:circle;4:blue
'λx.empty(filter(filter(filter(x.s, size1), size1), apply(same_shape,x.o)))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(and[yellow,size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:size2;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, size2), nand[size1,blue]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:nand[%s,%s];4:size1;4:blue
'λx.contains(iota(filter(filter(x.s, or[yellow,green]), and[iff[size3,size2],yellow])), filter(filter(x.s, size3), circle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:green;4:and[%s,%s];4:iff[%s,%s];4:size3;4:size2;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle
'λx.apply(rectangle,iota(filter(filter(x.s, blue), size3)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3
'λx.apply(not[or[or[not[nand[yellow,triangle]],implies[and[or[circle,circle],yellow],and[yellow,size1]]],triangle]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:or[%s,%s];4:not[%s];4:nand[%s,%s];4:yellow;4:triangle;4:implies[%s,%s];4:and[%s,%s];4:or[%s,%s];4:circle;4:circle;4:yellow;4:and[%s,%s];4:yellow;4:size1;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[green,yellow],iota(filter(x.s, apply(same_size,x.o))))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(and[size2,not[size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:not[%s];4:size3;1:%s.o;2:x
'λx.apply(or[apply(same_shape,x.o),circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;1:%s.o;2:x
'λx.apply(not[size3],iota(filter(filter(x.s, not[triangle]), blue)))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:blue
'λx.contains(iota(filter(filter(x.s, and[iff[size2,size3],size2]), apply(same_size,iota(filter(filter(x.s, size1), green))))), filter(x.s, blue))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:iff[%s,%s];4:size2;4:size3;4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[rectangle,green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[or[triangle,or[or[iff[blue,iff[circle,circle]],and[and[yellow,triangle],circle]],yellow]],or[or[apply(same_color,iota(x.s)),iff[green,or[rectangle,rectangle]]],size2]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:triangle;4:or[%s,%s];4:or[%s,%s];4:iff[%s,%s];4:blue;4:iff[%s,%s];4:circle;4:circle;4:and[%s,%s];4:and[%s,%s];4:yellow;4:triangle;4:circle;4:yellow;4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:iff[%s,%s];4:green;4:or[%s,%s];4:rectangle;4:rectangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(filter(filter(filter(x.s, green), size3), circle), not[size3]), green)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size3;4:circle;4:not[%s];4:size3;4:green
'λx.apply(implies[and[size2,green],and[apply(same_color,x.o),blue]],iota(filter(x.s, iff[blue,and[size2,not[blue]]])))'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:size2;4:green;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:blue;4:and[%s,%s];4:size2;4:not[%s];4:blue
'λx.exists(and[nor[or[apply(same_color,iota(x.s)),rectangle],or[not[circle],apply(same_shape,x.o)]],circle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:rectangle;4:or[%s,%s];4:not[%s];4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(filter(x.s, rectangle), size3), size2)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3;4:size2
'λx.apply(apply(size-geq,x.o),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(or[size2,not[green]],iota(filter(filter(x.s, rectangle), size2)))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2
'λx.contains(iota(filter(x.s, implies[size1,or[not[and[blue,size3]],apply(same_color,x.o)]])), filter(filter(filter(filter(x.s, apply(same_color,iota(x.s))), nand[yellow,size3]), size1), and[circle,not[triangle]]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size1;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:blue;4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:nand[%s,%s];4:yellow;4:size3;4:size1;4:and[%s,%s];4:circle;4:not[%s];4:triangle
'λx.forall(apply(size-geq,iota(filter(x.s, not[circle]))),filter(x.s, yellow))'	0:forall(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(blue,iota(filter(filter(filter(x.s, blue), yellow), circle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow;4:circle
'λx.apply(size2,iota(filter(filter(filter(filter(x.s, yellow), yellow), and[circle,not[implies[green,triangle]]]), size3)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:yellow;4:and[%s,%s];4:circle;4:not[%s];4:implies[%s,%s];4:green;4:triangle;4:size3
'λx.exists(size3, filter(filter(filter(filter(x.s, size3), or[size3,size3]), size1), rectangle))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:size3;4:size3;4:size1;4:rectangle
'λx.apply(and[or[or[not[and[rectangle,rectangle]],green],or[circle,triangle]],apply(same_color,x.o)],iota(filter(x.s, nor[and[green,nor[implies[and[not[not[green]],apply(same_color,x.o)],nand[and[rectangle,size3],size1]],yellow]],yellow])))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:not[%s];4:and[%s,%s];4:rectangle;4:rectangle;4:green;4:or[%s,%s];4:circle;4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:and[%s,%s];4:green;4:nor[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:not[%s];4:not[%s];4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:nand[%s,%s];4:and[%s,%s];4:rectangle;4:size3;4:size1;4:yellow;4:yellow
'λx.apply(size2,iota(filter(filter(filter(x.s, not[size1]), size2), triangle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:size2;4:triangle
'λx.empty(filter(filter(filter(filter(x.s, blue), size1), circle), or[rectangle,apply(same_shape,iota(x.s))]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1;4:circle;4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[blue,yellow],iota(filter(filter(filter(filter(filter(filter(x.s, triangle), and[yellow,blue]), green), triangle), triangle), rectangle)))'	0:apply(%s,%s);4:iff[%s,%s];4:blue;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:yellow;4:blue;4:green;4:triangle;4:triangle;4:rectangle
'λx.apply(and[implies[size2,green],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:size2;4:green;4:rectangle;1:%s.o;2:x
'λx.apply(apply(same_color,x.o),iota(filter(x.s, iff[size1,size3])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size1;4:size3
'λx.apply(iff[circle,nand[size1,green]],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:iff[%s,%s];4:circle;4:nand[%s,%s];4:size1;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(not[iff[apply(same_size,x.o),rectangle]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:not[%s];4:iff[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(rectangle,iota(filter(filter(filter(x.s, blue), size3), implies[blue,triangle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3;4:implies[%s,%s];4:blue;4:triangle
'λx.apply(nor[yellow,rectangle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:yellow;4:rectangle;1:%s.o;2:x
'λx.apply(and[or[green,rectangle],and[yellow,green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:green;4:rectangle;4:and[%s,%s];4:yellow;4:green;1:%s.o;2:x
'λx.apply(and[and[size1,yellow],rectangle],iota(filter(filter(x.s, apply(same_shape,x.o)), rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:yellow;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle
'λx.apply(nor[triangle,or[triangle,rectangle]],iota(filter(filter(x.s, apply(same_size,iota(filter(filter(filter(filter(filter(filter(x.s, green), size3), triangle), and[triangle,blue]), apply(same_shape,x.o)), or[size2,green])))), size3)))'	0:apply(%s,%s);4:nor[%s,%s];4:triangle;4:or[%s,%s];4:triangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size3;4:triangle;4:and[%s,%s];4:triangle;4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:size2;4:green;4:size3
'λx.apply(and[circle,blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(x.s, blue)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(not[triangle],iota(filter(x.s, nand[or[nand[yellow,green],iff[implies[size3,green],and[triangle,green]]],and[size1,green]])))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:or[%s,%s];4:nand[%s,%s];4:yellow;4:green;4:iff[%s,%s];4:implies[%s,%s];4:size3;4:green;4:and[%s,%s];4:triangle;4:green;4:and[%s,%s];4:size1;4:green
'λx.apply(nor[apply(same_shape,iota(x.s)),and[triangle,yellow]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:yellow;1:%s.o;2:x
'λx.forall(not[implies[rectangle,implies[or[size2,green],and[and[blue,size1],apply(size-leq,iota(filter(x.s, or[size3,size2])))]]]],filter(x.s, not[apply(same_size,x.o)]))'	0:forall(%s,%s);4:not[%s];4:implies[%s,%s];4:rectangle;4:implies[%s,%s];4:or[%s,%s];4:size2;4:green;4:and[%s,%s];4:and[%s,%s];4:blue;4:size1;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(iff[size2,blue],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:size2;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[size2,not[nor[rectangle,or[iff[not[blue],yellow],iff[rectangle,triangle]]]]],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:size2;4:not[%s];4:nor[%s,%s];4:rectangle;4:or[%s,%s];4:iff[%s,%s];4:not[%s];4:blue;4:yellow;4:iff[%s,%s];4:rectangle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[or[triangle,or[blue,yellow]]],iota(filter(x.s, or[and[size3,yellow],apply(same_color,x.o)])))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:triangle;4:or[%s,%s];4:blue;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size3;4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(not[rectangle],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.contains(iota(filter(x.s, triangle)), filter(filter(x.s, or[size3,and[size1,green]]), size3))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:and[%s,%s];4:size1;4:green;4:size3
'λx.apply(not[and[yellow,size3]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:yellow;4:size3;1:%s.o;2:x
'λx.forall(apply(same_size,x.o),filter(x.s, size1))'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(apply(same_size,x.o),iota(filter(filter(filter(filter(filter(x.s, and[or[or[or[size1,size2],size3],yellow],circle]), blue), size1), circle), triangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:size1;4:size2;4:size3;4:yellow;4:circle;4:blue;4:size1;4:circle;4:triangle
'λx.apply(yellow,iota(filter(filter(filter(filter(filter(x.s, green), not[size3]), and[triangle,not[size2]]), size3), or[circle,green])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:size3;4:and[%s,%s];4:triangle;4:not[%s];4:size2;4:size3;4:or[%s,%s];4:circle;4:green
'λx.apply(iff[apply(size-geq,iota(filter(filter(x.s, nor[triangle,nor[rectangle,size3]]), size1))),triangle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:triangle;4:nor[%s,%s];4:rectangle;4:size3;4:size1;4:triangle;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, and[not[size1],size2]), yellow)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:size1;4:size2;4:yellow
'λx.apply(or[green,rectangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[and[implies[blue,nor[blue,size2]],not[size1]],circle],iota(filter(filter(filter(filter(x.s, triangle), green), triangle), size2)))'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:blue;4:nor[%s,%s];4:blue;4:size2;4:not[%s];4:size1;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green;4:triangle;4:size2
'λx.apply(and[rectangle,and[rectangle,rectangle]],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:rectangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.forall(not[apply(same_color,iota(x.s))],filter(filter(x.s, and[size3,size1]), yellow))'	0:forall(%s,%s);4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:size1;4:yellow
'λx.apply(iff[size2,size3],iota(filter(x.s, and[apply(same_shape,x.o),circle])))'	0:apply(%s,%s);4:iff[%s,%s];4:size2;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle
'λx.exists(apply(size-geq,iota(x.s)), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(iff[size1,apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, blue), apply(same_color,iota(x.s))))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(and[yellow,apply(same_size,iota(x.s))],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_shape,iota(filter(filter(filter(x.s, and[iff[circle,rectangle],green]), circle), blue))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:iff[%s,%s];4:circle;4:rectangle;4:green;4:circle;4:blue;1:%s.o;2:x
'λx.apply(not[not[and[and[green,and[nand[green,iff[size2,circle]],and[nor[yellow,green],and[and[blue,circle],apply(same_size,iota(filter(filter(x.s, or[green,circle]), triangle)))]]]],size1]]],iota(filter(filter(x.s, circle), yellow)))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:nand[%s,%s];4:green;4:iff[%s,%s];4:size2;4:circle;4:and[%s,%s];4:nor[%s,%s];4:yellow;4:green;4:and[%s,%s];4:and[%s,%s];4:blue;4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:circle;4:triangle;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow
'λx.exists(or[and[size1,and[apply(same_size,iota(x.s)),or[rectangle,green]]],green], filter(x.s, triangle))'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:green;4:green;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(apply(same_size,iota(filter(filter(x.s, size1), not[and[green,not[circle]]]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:not[%s];4:and[%s,%s];4:green;4:not[%s];4:circle;1:%s.o;2:x
'λx.apply(and[or[iff[or[apply(same_size,x.o),size3],and[circle,triangle]],yellow],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;4:and[%s,%s];4:circle;4:triangle;4:yellow;4:size1;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(filter(filter(x.s, blue), blue), yellow), size2)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue;4:yellow;4:size2
'λx.exists(size1, filter(x.s, size1))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(and[and[rectangle,size2],yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size2;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, size1), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle
'λx.exists(nand[or[size3,not[circle]],apply(same_size,iota(x.s))], x.s)'	0:exists(%s, %s);4:nand[%s,%s];4:or[%s,%s];4:size3;4:not[%s];4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.exists(nor[and[size1,apply(same_size,x.o)],implies[circle,rectangle]], filter(filter(filter(filter(filter(filter(x.s, and[or[not[or[blue,triangle]],apply(same_size,x.o)],green]), size1), blue), triangle), and[nand[size2,blue],not[blue]]), circle))'	0:exists(%s, %s);4:nor[%s,%s];4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:implies[%s,%s];4:circle;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:or[%s,%s];4:blue;4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;4:size1;4:blue;4:triangle;4:and[%s,%s];4:nand[%s,%s];4:size2;4:blue;4:not[%s];4:blue;4:circle
'λx.contains(x.o, filter(x.s, or[apply(same_size,iota(filter(filter(filter(x.s, size2), yellow), size1))),rectangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:yellow;4:size1;4:rectangle
'λx.apply(blue,iota(filter(x.s, apply(size-geq,x.o))))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.contains(x.o, x.s)'	0:contains(%s, %s);1:%s.o;2:x;3:%s.s;2:x
'λx.apply(apply(same_size,iota(filter(filter(x.s, or[not[or[size2,circle]],circle]), green))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:or[%s,%s];4:size2;4:circle;4:circle;4:green;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, triangle), size2), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2;4:green
'λx.apply(apply(same_size,iota(filter(x.s, size1))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(or[not[size2],triangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:size2;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(x.s), filter(filter(x.s, size3), nand[size3,iff[yellow,size3]]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:nand[%s,%s];4:size3;4:iff[%s,%s];4:yellow;4:size3
'λx.apply(or[green,iff[size3,yellow]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:iff[%s,%s];4:size3;4:yellow;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, and[rectangle,yellow])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:yellow
'λx.exists(apply(same_color,x.o), filter(filter(x.s, blue), circle))'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle
'λx.contains(iota(x.s), filter(filter(filter(x.s, and[nand[blue,yellow],and[and[size2,and[not[or[or[apply(same_shape,iota(x.s)),and[green,and[rectangle,yellow]]],rectangle]],rectangle]],blue]]), green), implies[blue,size1]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nand[%s,%s];4:blue;4:yellow;4:and[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:not[%s];4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:green;4:and[%s,%s];4:rectangle;4:yellow;4:rectangle;4:rectangle;4:blue;4:green;4:implies[%s,%s];4:blue;4:size1
'λx.exists(not[apply(same_shape,x.o)], filter(filter(filter(x.s, or[rectangle,size3]), rectangle), size2))'	0:exists(%s, %s);4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:size3;4:rectangle;4:size2
'λx.forall(apply(same_shape,iota(x.s)),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(or[green,green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:green;1:%s.o;2:x
'λx.apply(iff[circle,triangle],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:circle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[or[or[not[or[and[and[yellow,yellow],blue],rectangle]],circle],triangle],apply(same_color,x.o)],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:not[%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:yellow;4:blue;4:rectangle;4:circle;4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[yellow,yellow],iota(filter(filter(filter(x.s, green), blue), size2)))'	0:apply(%s,%s);4:iff[%s,%s];4:yellow;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue;4:size2
'λx.apply(not[size3],iota(filter(filter(x.s, green), not[and[blue,or[size3,blue]]])))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:and[%s,%s];4:blue;4:or[%s,%s];4:size3;4:blue
'λx.apply(or[size1,and[not[rectangle],size1]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:and[%s,%s];4:not[%s];4:rectangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_color,iota(filter(x.s, and[apply(same_shape,x.o),size1]))),iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.exists(and[rectangle,size3], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:rectangle;4:size3;3:%s.s;2:x
'λx.exists(blue, filter(filter(x.s, iff[size3,green]), iff[size2,rectangle]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size3;4:green;4:iff[%s,%s];4:size2;4:rectangle
'λx.apply(not[triangle],iota(filter(filter(x.s, apply(same_shape,x.o)), circle)))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle
'λx.apply(and[size3,size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:size2;1:%s.o;2:x
'λx.exists(size1, filter(filter(x.s, apply(same_color,x.o)), not[not[size2]]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:not[%s];4:size2
'λx.exists(size3, filter(x.s, size2))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(size1,iota(filter(x.s, or[nand[and[size2,blue],and[size3,circle]],circle])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:size2;4:blue;4:and[%s,%s];4:size3;4:circle;4:circle
'λx.contains(x.o, filter(x.s, and[not[green],apply(same_size,x.o)]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(implies[apply(same_color,x.o),yellow],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_size,x.o),iota(filter(filter(x.s, triangle), blue)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue
'λx.exists(triangle, filter(filter(x.s, and[yellow,nor[green,rectangle]]), size1))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:nor[%s,%s];4:green;4:rectangle;4:size1
'λx.apply(and[or[size2,size2],blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size2;4:size2;4:blue;1:iota(%s);3:%s.s;2:x
'λx.exists(or[not[green],apply(same_shape,iota(x.s))], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:not[%s];4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(and[blue,circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:circle;1:%s.o;2:x
'λx.apply(or[nor[green,or[blue,and[and[rectangle,not[nand[size1,apply(same_size,iota(x.s))]]],green]]],apply(same_size,x.o)],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:nor[%s,%s];4:green;4:or[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:not[%s];4:nand[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.forall(size3,filter(x.s, apply(same_color,iota(filter(filter(filter(filter(x.s, size2), size1), size3), circle)))))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1;4:size3;4:circle
'λx.apply(and[and[yellow,apply(size-lt,x.o)],implies[and[triangle,apply(same_color,x.o)],rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:implies[%s,%s];4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle;1:%s.o;2:x
'λx.empty(filter(x.s, circle))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(or[or[size2,size1],apply(same_color,iota(x.s))],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:size2;4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[apply(size-geq,iota(filter(filter(x.s, yellow), size1))),rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(x.s), filter(x.s, and[size3,triangle]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:triangle
'λx.apply(and[rectangle,blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:blue;1:%s.o;2:x
'λx.exists(rectangle, filter(x.s, triangle))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(and[triangle,or[blue,size3]],iota(filter(filter(x.s, size3), green)))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:or[%s,%s];4:blue;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green
'λx.forall(triangle,filter(filter(x.s, size1), size3))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size3
'λx.apply(not[and[size3,and[or[green,green],size2]]],iota(filter(x.s, iff[and[green,apply(same_color,iota(filter(x.s, not[and[size2,size2]])))],size3])))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:or[%s,%s];4:green;4:green;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:and[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:size2;4:size2;4:size3
'λx.contains(iota(x.s), filter(filter(x.s, and[rectangle,rectangle]), not[nor[circle,or[circle,size2]]]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:rectangle;4:not[%s];4:nor[%s,%s];4:circle;4:or[%s,%s];4:circle;4:size2
'λx.apply(size3,iota(filter(filter(x.s, triangle), size2)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2
'λx.apply(and[rectangle,rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[circle,or[green,or[implies[green,not[rectangle]],size3]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:or[%s,%s];4:green;4:or[%s,%s];4:implies[%s,%s];4:green;4:not[%s];4:rectangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.forall(blue,filter(x.s, triangle))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.contains(x.o, filter(x.s, not[and[blue,triangle]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:blue;4:triangle
'λx.apply(apply(same_color,iota(filter(x.s, blue))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(or[rectangle,and[circle,yellow]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:and[%s,%s];4:circle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(x.s, nor[implies[yellow,and[circle,triangle]],green])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:implies[%s,%s];4:yellow;4:and[%s,%s];4:circle;4:triangle;4:green
'λx.apply(implies[yellow,rectangle],iota(filter(filter(filter(filter(filter(x.s, size3), and[rectangle,size3]), not[rectangle]), blue), apply(same_color,x.o))))'	0:apply(%s,%s);4:implies[%s,%s];4:yellow;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:rectangle;4:size3;4:not[%s];4:rectangle;4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(implies[size1,green],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size1;4:green;1:%s.o;2:x
'λx.apply(and[blue,size2],iota(filter(x.s, green)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(nand[yellow,apply(same_size,x.o)],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, size3), rectangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle
'λx.apply(iff[triangle,yellow],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:triangle;4:yellow;1:%s.o;2:x
'λx.apply(and[size2,nor[size2,triangle]],iota(filter(filter(x.s, rectangle), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:nor[%s,%s];4:size2;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue
'λx.apply(size3,iota(filter(filter(x.s, green), blue)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue
'λx.apply(nand[blue,and[apply(size-lt,iota(filter(x.s, green))),and[triangle,nor[size3,yellow]]]],iota(filter(filter(x.s, rectangle), apply(size-gt,x.o))))'	0:apply(%s,%s);4:nand[%s,%s];4:blue;4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:triangle;4:nor[%s,%s];4:size3;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, circle), size3)), filter(x.s, not[triangle]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.apply(size1,iota(filter(filter(x.s, size2), apply(same_size,iota(filter(filter(x.s, size2), rectangle))))))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle
'λx.empty(filter(filter(filter(filter(x.s, blue), rectangle), iff[or[rectangle,iff[implies[yellow,rectangle],size3]],rectangle]), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle;4:iff[%s,%s];4:or[%s,%s];4:rectangle;4:iff[%s,%s];4:implies[%s,%s];4:yellow;4:rectangle;4:size3;4:rectangle;4:circle
'λx.apply(or[size1,triangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[circle,size3],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(not[rectangle],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size1,apply(size-geq,x.o)],iota(filter(filter(x.s, or[circle,green]), yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:green;4:yellow
'λx.apply(iff[apply(same_size,x.o),green],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;1:%s.o;2:x
'λx.forall(not[iff[rectangle,and[and[and[or[apply(same_color,iota(filter(filter(x.s, blue), and[and[size1,not[size3]],or[and[rectangle,size3],size3]]))),nand[circle,size1]],and[blue,and[size2,and[green,size1]]]],size3],circle]]],filter(filter(filter(x.s, size2), circle), yellow))'	0:forall(%s,%s);4:not[%s];4:iff[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:and[%s,%s];4:size1;4:not[%s];4:size3;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:size3;4:size3;4:nand[%s,%s];4:circle;4:size1;4:and[%s,%s];4:blue;4:and[%s,%s];4:size2;4:and[%s,%s];4:green;4:size1;4:size3;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle;4:yellow
'λx.apply(or[apply(same_color,iota(x.s)),size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size2;1:%s.o;2:x
'λx.apply(and[yellow,size1],iota(filter(x.s, and[and[size2,yellow],not[size2]])))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size2;4:yellow;4:not[%s];4:size2
'λx.exists(yellow, filter(filter(x.s, green), blue))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue
'λx.empty(filter(filter(x.s, size2), and[triangle,iff[green,rectangle]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:triangle;4:iff[%s,%s];4:green;4:rectangle
'λx.apply(size2,iota(filter(x.s, and[size2,apply(same_shape,iota(filter(x.s, blue)))])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.contains(iota(x.s), filter(filter(filter(filter(x.s, yellow), apply(same_size,x.o)), blue), or[or[nand[apply(same_color,iota(x.s)),yellow],circle],nor[circle,and[rectangle,yellow]]]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;4:or[%s,%s];4:or[%s,%s];4:nand[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:yellow;4:circle;4:nor[%s,%s];4:circle;4:and[%s,%s];4:rectangle;4:yellow
'λx.apply(or[size3,circle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size3,blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:blue;1:%s.o;2:x
'λx.forall(blue,filter(x.s, and[circle,blue]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:blue
'λx.apply(apply(same_size,x.o),iota(filter(x.s, apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(or[triangle,apply(size-lt,iota(filter(x.s, circle)))],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(x.s, size3), size2)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2
'λx.apply(or[blue,and[apply(same_color,iota(x.s)),and[green,apply(same_size,iota(filter(filter(x.s, nor[circle,circle]), size3)))]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:circle;4:circle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.forall(apply(size-gt,x.o),filter(filter(filter(x.s, not[and[rectangle,green]]), yellow), apply(size-geq,iota(x.s))))'	0:forall(%s,%s);4:apply(%s,%s);5:size-gt;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:rectangle;4:green;4:yellow;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(filter(filter(filter(filter(x.s, blue), size3), size2), rectangle), size1), size1)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3;4:size2;4:rectangle;4:size1;4:size1
'λx.apply(or[size2,green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:green;1:%s.o;2:x
'λx.apply(triangle,iota(filter(x.s, size2)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(apply(size-geq,iota(x.s)),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[or[rectangle,and[size3,and[apply(same_size,x.o),or[green,green]]]],nor[size1,circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:rectangle;4:and[%s,%s];4:size3;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:green;4:green;4:nor[%s,%s];4:size1;4:circle;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, green), size2))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size2
'λx.apply(or[yellow,size1],iota(filter(filter(x.s, yellow), size2)))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2
'λx.apply(not[apply(same_color,x.o)],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(or[size1,not[size3]],iota(filter(x.s, and[iff[size3,green],apply(same_size,iota(filter(filter(x.s, circle), circle)))])))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:iff[%s,%s];4:size3;4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:circle
'λx.contains(iota(x.s), filter(filter(filter(x.s, apply(same_color,iota(x.s))), not[apply(size-gt,iota(x.s))]), not[size3]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:not[%s];4:size3
'λx.apply(green,iota(filter(filter(x.s, size3), yellow)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow
'λx.forall(not[not[size1]],filter(filter(filter(filter(x.s, or[iff[or[and[size2,apply(same_color,iota(x.s))],size3],size1],rectangle]), triangle), triangle), and[and[nand[and[size1,size2],not[rectangle]],blue],yellow]))'	0:forall(%s,%s);4:not[%s];4:not[%s];4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size3;4:size1;4:rectangle;4:triangle;4:triangle;4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:size1;4:size2;4:not[%s];4:rectangle;4:blue;4:yellow
'λx.apply(apply(size-leq,iota(filter(filter(x.s, apply(size-geq,iota(x.s))), not[or[apply(same_size,iota(filter(filter(filter(filter(x.s, triangle), yellow), and[rectangle,green]), green))),green]]))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:yellow;4:and[%s,%s];4:rectangle;4:green;4:green;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[green,triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:triangle;1:%s.o;2:x
'λx.apply(and[and[nand[and[or[triangle,circle],yellow],size2],size2],not[not[yellow]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:or[%s,%s];4:triangle;4:circle;4:yellow;4:size2;4:size2;4:not[%s];4:not[%s];4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(or[and[yellow,green],apply(size-geq,x.o)],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:yellow;4:green;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(nand[green,not[size2]],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:green;4:not[%s];4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(not[rectangle],iota(filter(filter(x.s, apply(same_color,iota(x.s))), rectangle)))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:rectangle
'λx.apply(apply(same_color,iota(filter(x.s, not[and[green,circle]]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:green;4:circle;1:%s.o;2:x
'λx.apply(and[triangle,and[triangle,triangle]],iota(filter(filter(x.s, triangle), size3)))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:triangle;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3
'λx.apply(size1,iota(filter(x.s, size1)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(not[implies[blue,not[not[circle]]]], x.s)'	0:exists(%s, %s);4:not[%s];4:implies[%s,%s];4:blue;4:not[%s];4:not[%s];4:circle;3:%s.s;2:x
'λx.contains(iota(filter(x.s, apply(same_shape,x.o))), filter(x.s, not[triangle]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.apply(apply(same_shape,iota(filter(x.s, and[apply(same_shape,x.o),rectangle]))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[circle,size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:size1;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, nand[blue,size1]), triangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:blue;4:size1;4:triangle
'λx.apply(rectangle,iota(filter(filter(filter(filter(filter(filter(filter(x.s, green), rectangle), size1), rectangle), blue), blue), size2)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle;4:size1;4:rectangle;4:blue;4:blue;4:size2
'λx.apply(and[size3,and[size1,size2]],iota(filter(filter(filter(x.s, circle), nand[not[and[apply(same_color,x.o),and[and[apply(same_color,x.o),size3],rectangle]]],apply(same_size,iota(filter(filter(x.s, circle), blue)))]), size1)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:size1;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:nand[%s,%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3;4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue;4:size1
'λx.forall(green,filter(x.s, green))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.exists(and[apply(same_color,iota(x.s)),triangle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:triangle;3:%s.s;2:x
'λx.apply(and[and[size2,or[apply(same_color,x.o),triangle]],size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size2;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[circle,and[triangle,rectangle]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:nand[%s,%s];4:circle;4:and[%s,%s];4:triangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(size1,iota(filter(x.s, apply(size-gt,x.o))))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.apply(iff[blue,not[iff[size1,and[nand[or[green,or[rectangle,circle]],blue],size2]]]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:blue;4:not[%s];4:iff[%s,%s];4:size1;4:and[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:green;4:or[%s,%s];4:rectangle;4:circle;4:blue;4:size2;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, blue), size3)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3
'λx.apply(iff[or[and[green,size2],implies[rectangle,circle]],circle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:or[%s,%s];4:and[%s,%s];4:green;4:size2;4:implies[%s,%s];4:rectangle;4:circle;4:circle;1:%s.o;2:x
'λx.apply(not[and[yellow,yellow]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:yellow;4:yellow;1:%s.o;2:x
'λx.apply(apply(same_color,iota(filter(filter(x.s, or[rectangle,size2]), yellow))),iota(filter(x.s, green)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:size2;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(apply(same_color,x.o),iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.exists(or[not[size1],and[size1,size3]], filter(x.s, implies[and[circle,yellow],apply(same_size,iota(x.s))]))'	0:exists(%s, %s);4:or[%s,%s];4:not[%s];4:size1;4:and[%s,%s];4:size1;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:and[%s,%s];4:circle;4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(not[green],iota(filter(x.s, and[green,green])))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:green
'λx.apply(and[rectangle,apply(size-geq,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.forall(yellow,filter(filter(filter(filter(x.s, size1), blue), size1), apply(same_color,iota(filter(filter(filter(filter(x.s, size1), and[yellow,size2]), green), size2)))))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue;4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:yellow;4:size2;4:green;4:size2
'λx.apply(nand[and[triangle,size1],circle],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:triangle;4:size1;4:circle;1:iota(%s);3:%s.s;2:x
'λx.exists(size3, filter(filter(filter(x.s, apply(size-gt,iota(x.s))), green), triangle))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:green;4:triangle
'λx.apply(or[size2,green],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size1,not[triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:not[%s];4:triangle;1:%s.o;2:x
'λx.apply(nand[blue,blue],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:blue;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(x.s, triangle), nand[and[nand[and[yellow,size1],not[triangle]],size2],green])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:nand[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:yellow;4:size1;4:not[%s];4:triangle;4:size2;4:green
'λx.apply(nand[not[size1],apply(same_size,x.o)],iota(filter(x.s, apply(size-leq,x.o))))'	0:apply(%s,%s);4:nand[%s,%s];4:not[%s];4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(filter(filter(filter(filter(x.s, triangle), and[blue,or[circle,size2]]), rectangle), triangle), size1), not[blue])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:blue;4:or[%s,%s];4:circle;4:size2;4:rectangle;4:triangle;4:size1;4:not[%s];4:blue
'λx.forall(or[apply(same_size,x.o),green],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;3:%s.s;2:x
'λx.apply(or[circle,size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:size1;1:%s.o;2:x
'λx.apply(nor[yellow,size2],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:yellow;4:size2;1:%s.o;2:x
'λx.apply(apply(same_color,iota(x.s)),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(apply(same_size,iota(x.s)),iota(filter(x.s, size1)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(size3,iota(filter(filter(filter(x.s, iff[and[circle,and[size1,and[triangle,size3]]],triangle]), triangle), rectangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:size1;4:and[%s,%s];4:triangle;4:size3;4:triangle;4:triangle;4:rectangle
'λx.apply(and[and[or[and[nor[size1,size3],and[or[or[blue,triangle],apply(same_color,x.o)],rectangle]],size1],blue],or[size1,green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:size1;4:size3;4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:blue;4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle;4:size1;4:blue;4:or[%s,%s];4:size1;4:green;1:%s.o;2:x
'λx.apply(not[blue],x.o)'	0:apply(%s,%s);4:not[%s];4:blue;1:%s.o;2:x
'λx.apply(or[size1,size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:size1;1:%s.o;2:x
'λx.apply(nand[circle,circle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:circle;4:circle;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(filter(filter(filter(filter(x.s, triangle), blue), blue), apply(same_shape,x.o)), not[size2]), apply(same_shape,iota(x.s)))))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue;4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(x.s))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[circle,triangle],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:circle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.exists(triangle, filter(filter(x.s, yellow), green))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green
'λx.apply(not[size3],iota(filter(filter(x.s, triangle), size2)))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2
'λx.apply(or[and[or[yellow,not[apply(same_size,iota(x.s))]],or[triangle,implies[size3,green]]],or[triangle,or[size3,and[circle,green]]]],iota(filter(filter(x.s, size1), or[blue,rectangle])))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:yellow;4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:implies[%s,%s];4:size3;4:green;4:or[%s,%s];4:triangle;4:or[%s,%s];4:size3;4:and[%s,%s];4:circle;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:or[%s,%s];4:blue;4:rectangle
'λx.apply(iff[and[and[apply(size-leq,iota(x.s)),circle],size3],nand[green,green]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:circle;4:size3;4:nand[%s,%s];4:green;4:green;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, or[size2,blue])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:blue
'λx.forall(yellow,filter(filter(x.s, nor[apply(same_color,iota(filter(filter(filter(filter(x.s, triangle), or[and[implies[or[triangle,size3],not[size3]],size3],blue]), rectangle), blue))),nand[triangle,blue]]), size2))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:or[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:triangle;4:size3;4:not[%s];4:size3;4:size3;4:blue;4:rectangle;4:blue;4:nand[%s,%s];4:triangle;4:blue;4:size2
'λx.apply(implies[apply(same_size,iota(filter(x.s, size2))),and[and[apply(same_color,x.o),size3],size1]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3;4:size1;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, green), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size3
'λx.apply(and[blue,yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:yellow;1:%s.o;2:x
'λx.forall(triangle,filter(filter(filter(filter(x.s, circle), rectangle), nand[not[green],and[apply(size-geq,iota(filter(filter(x.s, or[nor[green,blue],size1]), size1))),yellow]]), size1))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle;4:nand[%s,%s];4:not[%s];4:green;4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:nor[%s,%s];4:green;4:blue;4:size1;4:size1;4:yellow;4:size1
'λx.apply(not[size3],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.forall(and[size3,and[size3,size3]],filter(x.s, or[size1,green]))'	0:forall(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:size3;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:green
'λx.apply(triangle,iota(filter(x.s, apply(size-gt,x.o))))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.apply(and[or[yellow,and[triangle,green]],circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:yellow;4:and[%s,%s];4:triangle;4:green;4:circle;1:iota(%s);3:%s.s;2:x
'λx.forall(or[size1,size2],filter(x.s, size1))'	0:forall(%s,%s);4:or[%s,%s];4:size1;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(and[or[apply(same_shape,x.o),yellow],yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(filter(x.s, not[and[blue,not[and[yellow,or[rectangle,size1]]]]]), green), triangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:blue;4:not[%s];4:and[%s,%s];4:yellow;4:or[%s,%s];4:rectangle;4:size1;4:green;4:triangle
'λx.apply(implies[triangle,and[yellow,size2]],iota(filter(filter(x.s, rectangle), rectangle)))'	0:apply(%s,%s);4:implies[%s,%s];4:triangle;4:and[%s,%s];4:yellow;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle
'λx.apply(and[and[green,and[and[and[iff[size2,and[green,size1]],size3],or[blue,size3]],green]],size3],iota(filter(filter(x.s, green), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:size2;4:and[%s,%s];4:green;4:size1;4:size3;4:or[%s,%s];4:blue;4:size3;4:green;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue
'λx.apply(not[and[yellow,nand[implies[size2,yellow],nor[yellow,nor[circle,nor[implies[rectangle,yellow],and[size2,apply(same_color,iota(x.s))]]]]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:yellow;4:nand[%s,%s];4:implies[%s,%s];4:size2;4:yellow;4:nor[%s,%s];4:yellow;4:nor[%s,%s];4:circle;4:nor[%s,%s];4:implies[%s,%s];4:rectangle;4:yellow;4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.exists(and[circle,green], filter(filter(x.s, triangle), green))'	0:exists(%s, %s);4:and[%s,%s];4:circle;4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green
'λx.apply(size1,iota(filter(x.s, nand[and[and[size3,apply(size-geq,iota(x.s))],and[and[size3,blue],triangle]],green])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size3;4:blue;4:triangle;4:green
'λx.apply(iff[and[nor[circle,not[and[rectangle,nor[not[size1],iff[apply(same_color,iota(filter(filter(filter(x.s, triangle), green), iff[size1,not[apply(size-lt,iota(x.s))]]))),iff[and[triangle,and[not[blue],or[size2,yellow]]],yellow]]]]]],nand[rectangle,size3]],rectangle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:circle;4:not[%s];4:and[%s,%s];4:rectangle;4:nor[%s,%s];4:not[%s];4:size1;4:iff[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green;4:iff[%s,%s];4:size1;4:not[%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:iff[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:not[%s];4:blue;4:or[%s,%s];4:size2;4:yellow;4:yellow;4:nand[%s,%s];4:rectangle;4:size3;4:rectangle;1:%s.o;2:x
'λx.exists(circle, filter(x.s, or[not[circle],and[apply(same_color,iota(filter(filter(x.s, not[size1]), apply(size-gt,x.o)))),yellow]]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:yellow
'λx.apply(or[size2,circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:circle;1:%s.o;2:x
'λx.exists(and[and[yellow,triangle],or[size2,implies[green,yellow]]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:triangle;4:or[%s,%s];4:size2;4:implies[%s,%s];4:green;4:yellow;3:%s.s;2:x
'λx.empty(filter(filter(x.s, size3), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue
'λx.exists(size2, filter(filter(x.s, and[apply(same_size,iota(filter(filter(x.s, apply(size-geq,iota(x.s))), circle))),green]), size3))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:circle;4:green;4:size3
'λx.contains(iota(filter(x.s, apply(same_size,iota(filter(filter(x.s, not[size2]), triangle))))), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:triangle;3:%s.s;2:x
'λx.apply(size1,iota(filter(x.s, apply(size-lt,iota(filter(x.s, not[rectangle]))))))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle
'λx.apply(green,iota(filter(filter(x.s, size2), size1)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1
'λx.apply(size1,iota(filter(filter(x.s, nand[size2,yellow]), and[and[size2,blue],nand[green,rectangle]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size2;4:yellow;4:and[%s,%s];4:and[%s,%s];4:size2;4:blue;4:nand[%s,%s];4:green;4:rectangle
'λx.forall(green,filter(filter(x.s, yellow), apply(size-lt,iota(x.s))))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_shape,iota(x.s)),iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(circle,iota(filter(filter(x.s, blue), implies[yellow,circle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:implies[%s,%s];4:yellow;4:circle
'λx.apply(and[circle,size3],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(nor[green,yellow],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:green;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(filter(filter(x.s, size1), size2), size2), circle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2;4:size2;4:circle
'λx.apply(and[blue,size1],iota(filter(filter(filter(x.s, size2), nor[iff[triangle,and[apply(same_shape,x.o),and[size3,circle]]],size3]), not[green])))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:nor[%s,%s];4:iff[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:size3;4:circle;4:size3;4:not[%s];4:green
'λx.forall(and[size1,and[size1,rectangle]],filter(x.s, size1))'	0:forall(%s,%s);4:and[%s,%s];4:size1;4:and[%s,%s];4:size1;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(triangle,iota(filter(filter(filter(x.s, apply(same_shape,x.o)), yellow), circle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow;4:circle
'λx.apply(size1,iota(filter(x.s, nor[size1,size3])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size1;4:size3
'λx.exists(not[rectangle], filter(filter(x.s, size3), green))'	0:exists(%s, %s);4:not[%s];4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green
'λx.apply(or[not[or[yellow,size1]],not[and[triangle,size2]]],iota(filter(filter(x.s, and[triangle,and[yellow,iff[triangle,blue]]]), and[triangle,rectangle])))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:or[%s,%s];4:yellow;4:size1;4:not[%s];4:and[%s,%s];4:triangle;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:and[%s,%s];4:yellow;4:iff[%s,%s];4:triangle;4:blue;4:and[%s,%s];4:triangle;4:rectangle
'λx.apply(yellow,iota(filter(x.s, or[size2,size3])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:size3
'λx.forall(yellow,x.s)'	0:forall(%s,%s);4:yellow;3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(filter(x.s, triangle), or[size2,blue]), rectangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:or[%s,%s];4:size2;4:blue;4:rectangle
'λx.apply(apply(same_shape,iota(filter(x.s, size1))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;1:%s.o;2:x
'λx.exists(size2, filter(filter(x.s, blue), implies[circle,and[blue,blue]]))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:implies[%s,%s];4:circle;4:and[%s,%s];4:blue;4:blue
'λx.contains(x.o, filter(filter(x.s, blue), triangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle
'λx.forall(green,filter(x.s, not[green]))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green
'λx.apply(and[blue,rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:rectangle;1:%s.o;2:x
'λx.apply(or[or[nand[circle,green],yellow],implies[or[size1,triangle],yellow]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:nand[%s,%s];4:circle;4:green;4:yellow;4:implies[%s,%s];4:or[%s,%s];4:size1;4:triangle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_shape,iota(filter(x.s, size3))),iota(filter(filter(filter(filter(filter(x.s, implies[triangle,and[yellow,yellow]]), rectangle), triangle), nand[blue,and[iff[or[and[yellow,triangle],not[apply(same_size,x.o)]],apply(same_size,x.o)],blue]]), size1)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:triangle;4:and[%s,%s];4:yellow;4:yellow;4:rectangle;4:triangle;4:nand[%s,%s];4:blue;4:and[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:and[%s,%s];4:yellow;4:triangle;4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;4:size1
'λx.apply(apply(size-leq,x.o),iota(filter(x.s, nor[yellow,and[and[rectangle,and[apply(same_color,x.o),yellow]],circle]])))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:yellow;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;4:circle
'λx.forall(yellow,filter(filter(x.s, implies[size2,yellow]), size1))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size2;4:yellow;4:size1
'λx.apply(size3,iota(filter(x.s, apply(size-lt,x.o))))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.apply(or[nor[size1,blue],triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:nor[%s,%s];4:size1;4:blue;4:triangle;1:%s.o;2:x
'λx.apply(iff[not[size1],not[rectangle]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:not[%s];4:size1;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, apply(same_size,iota(filter(filter(filter(filter(x.s, and[implies[rectangle,green],size2]), size3), size2), circle))))))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:implies[%s,%s];4:rectangle;4:green;4:size2;4:size3;4:size2;4:circle
'λx.apply(size3,iota(filter(x.s, green)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(nor[apply(same_shape,x.o),size2],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(filter(x.s, nor[size1,apply(same_color,x.o)]), or[size2,yellow]), size1)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:or[%s,%s];4:size2;4:yellow;4:size1
'λx.empty(filter(x.s, size3))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.contains(iota(filter(x.s, or[rectangle,not[and[size3,circle]]])), filter(filter(x.s, not[size2]), green))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:not[%s];4:and[%s,%s];4:size3;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:green
'λx.exists(and[circle,or[size3,or[and[blue,and[or[size3,rectangle],size3]],green]]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:circle;4:or[%s,%s];4:size3;4:or[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:or[%s,%s];4:size3;4:rectangle;4:size3;4:green;3:%s.s;2:x
'λx.contains(iota(filter(filter(filter(x.s, or[size3,size1]), size2), circle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:size1;4:size2;4:circle;3:%s.s;2:x
'λx.apply(and[yellow,or[not[and[rectangle,triangle]],and[yellow,green]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:rectangle;4:triangle;4:and[%s,%s];4:yellow;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[not[or[iff[size3,and[and[yellow,size2],and[yellow,circle]]],nand[size1,rectangle]]],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:or[%s,%s];4:iff[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:yellow;4:size2;4:and[%s,%s];4:yellow;4:circle;4:nand[%s,%s];4:size1;4:rectangle;4:size2;1:%s.o;2:x
'λx.apply(not[and[blue,size1]],iota(filter(x.s, not[size2])))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:blue;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2
'λx.apply(and[apply(same_size,x.o),blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;1:%s.o;2:x
'λx.empty(filter(filter(x.s, or[or[and[and[blue,triangle],implies[triangle,size2]],size1],and[and[size2,and[blue,circle]],size3]]), and[or[triangle,size3],nor[not[apply(size-geq,x.o)],yellow]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:triangle;4:implies[%s,%s];4:triangle;4:size2;4:size1;4:and[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:blue;4:circle;4:size3;4:and[%s,%s];4:or[%s,%s];4:triangle;4:size3;4:nor[%s,%s];4:not[%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:yellow
'λx.apply(and[triangle,circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(x.s, blue)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(not[triangle],iota(filter(x.s, and[size1,yellow])))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:yellow
'λx.apply(yellow,iota(filter(x.s, nor[circle,blue])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:circle;4:blue
'λx.apply(and[nor[circle,circle],rectangle],iota(filter(filter(filter(filter(x.s, rectangle), apply(size-geq,iota(x.s))), and[or[green,and[size3,blue]],size2]), circle)))'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:circle;4:circle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:green;4:and[%s,%s];4:size3;4:blue;4:size2;4:circle
'λx.apply(apply(same_shape,x.o),iota(filter(filter(x.s, and[yellow,not[size3]]), rectangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:not[%s];4:size3;4:rectangle
'λx.contains(x.o, filter(filter(filter(filter(x.s, implies[triangle,triangle]), size3), apply(size-geq,x.o)), or[and[size3,or[triangle,triangle]],and[apply(size-geq,iota(filter(x.s, not[blue]))),blue]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:triangle;4:triangle;4:size3;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:or[%s,%s];4:and[%s,%s];4:size3;4:or[%s,%s];4:triangle;4:triangle;4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:blue
'λx.apply(or[size1,green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:green;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, not[circle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.exists(implies[blue,circle], filter(x.s, nand[yellow,yellow]))'	0:exists(%s, %s);4:implies[%s,%s];4:blue;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:yellow;4:yellow
'λx.apply(green,iota(filter(x.s, apply(size-leq,iota(filter(x.s, size1))))))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(or[and[circle,nor[not[not[triangle]],or[size1,and[and[size1,and[iff[circle,and[not[size3],not[green]]],and[not[iff[size2,size3]],blue]]],yellow]]]],rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:circle;4:nor[%s,%s];4:not[%s];4:not[%s];4:triangle;4:or[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:iff[%s,%s];4:circle;4:and[%s,%s];4:not[%s];4:size3;4:not[%s];4:green;4:and[%s,%s];4:not[%s];4:iff[%s,%s];4:size2;4:size3;4:blue;4:yellow;4:rectangle;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, and[yellow,or[apply(same_color,iota(x.s)),size3]]), yellow)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size3;4:yellow
'λx.apply(yellow,iota(filter(x.s, or[yellow,circle])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:circle
'λx.empty(filter(x.s, or[not[not[rectangle]],yellow]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:not[%s];4:rectangle;4:yellow
'λx.apply(and[and[triangle,blue],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:blue;4:size2;1:%s.o;2:x
'λx.exists(not[yellow], filter(filter(x.s, and[not[circle],green]), and[circle,blue]))'	0:exists(%s, %s);4:not[%s];4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:circle;4:green;4:and[%s,%s];4:circle;4:blue
'λx.apply(green,iota(filter(x.s, and[nor[apply(size-gt,x.o),size2],green])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:size2;4:green
'λx.apply(iff[size2,yellow],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:size2;4:yellow;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, rectangle), and[yellow,size2]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:yellow;4:size2
'λx.apply(not[and[or[size1,or[size2,and[nor[rectangle,circle],blue]]],green]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:or[%s,%s];4:size1;4:or[%s,%s];4:size2;4:and[%s,%s];4:nor[%s,%s];4:rectangle;4:circle;4:blue;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[triangle,rectangle],apply(same_color,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(nor[triangle,green],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:triangle;4:green;1:%s.o;2:x
'λx.apply(nor[triangle,and[circle,or[blue,rectangle]]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:triangle;4:and[%s,%s];4:circle;4:or[%s,%s];4:blue;4:rectangle;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(filter(filter(filter(x.s, and[green,yellow]), iff[triangle,size3]), rectangle), rectangle), nand[apply(same_shape,x.o),and[or[and[blue,triangle],or[blue,or[blue,size3]]],and[blue,circle]]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:yellow;4:iff[%s,%s];4:triangle;4:size3;4:rectangle;4:rectangle;4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:blue;4:triangle;4:or[%s,%s];4:blue;4:or[%s,%s];4:blue;4:size3;4:and[%s,%s];4:blue;4:circle
'λx.empty(filter(filter(x.s, size1), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle
'λx.apply(blue,iota(filter(filter(filter(x.s, size1), and[triangle,apply(size-geq,iota(x.s))]), size3)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:size3
'λx.apply(nor[size3,yellow],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:size3;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size1,triangle],iota(filter(filter(x.s, size2), implies[and[and[and[blue,triangle],apply(same_size,iota(x.s))],blue],yellow])))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:implies[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:blue;4:yellow
'λx.exists(or[iff[size2,blue],yellow], filter(x.s, blue))'	0:exists(%s, %s);4:or[%s,%s];4:iff[%s,%s];4:size2;4:blue;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(green,iota(filter(filter(x.s, yellow), implies[green,size2])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:implies[%s,%s];4:green;4:size2
'λx.forall(apply(size-leq,x.o),filter(filter(filter(x.s, triangle), or[triangle,size3]), iff[and[size1,yellow],circle]))'	0:forall(%s,%s);4:apply(%s,%s);5:size-leq;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:or[%s,%s];4:triangle;4:size3;4:iff[%s,%s];4:and[%s,%s];4:size1;4:yellow;4:circle
'λx.empty(filter(filter(x.s, blue), implies[triangle,iff[size2,size3]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:implies[%s,%s];4:triangle;4:iff[%s,%s];4:size2;4:size3
'λx.contains(x.o, filter(filter(filter(x.s, rectangle), and[nor[or[rectangle,nand[and[yellow,blue],triangle]],and[rectangle,rectangle]],or[and[not[not[or[blue,size2]]],green],green]]), size2))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:rectangle;4:nand[%s,%s];4:and[%s,%s];4:yellow;4:blue;4:triangle;4:and[%s,%s];4:rectangle;4:rectangle;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:not[%s];4:or[%s,%s];4:blue;4:size2;4:green;4:green;4:size2
'λx.apply(apply(same_size,iota(filter(filter(x.s, and[rectangle,yellow]), and[apply(same_shape,iota(filter(filter(filter(x.s, not[apply(same_size,iota(x.s))]), size1), blue))),size1]))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:yellow;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size1;4:blue;4:size1;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, rectangle), size1), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1;4:triangle
'λx.apply(implies[size3,blue],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size3;4:blue;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(x.s, and[rectangle,not[rectangle]]), blue)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:not[%s];4:rectangle;4:blue
'λx.exists(and[size1,or[triangle,circle]], filter(x.s, size1))'	0:exists(%s, %s);4:and[%s,%s];4:size1;4:or[%s,%s];4:triangle;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(or[green,not[size1]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:not[%s];4:size1;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(x.s, blue), size2)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2
'λx.apply(or[and[yellow,nor[not[triangle],and[implies[green,apply(same_size,iota(filter(filter(x.s, size3), green)))],apply(same_shape,x.o)]]],size2],iota(filter(filter(x.s, or[and[size2,rectangle],or[not[and[size1,rectangle]],size3]]), rectangle)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:yellow;4:nor[%s,%s];4:not[%s];4:triangle;4:and[%s,%s];4:implies[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size2;4:rectangle;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:size1;4:rectangle;4:size3;4:rectangle
'λx.apply(nor[nor[and[triangle,size1],circle],rectangle],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:nor[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:triangle;4:size1;4:circle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[triangle,size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:size2;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, circle), apply(same_size,x.o))), filter(x.s, blue))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.empty(filter(filter(filter(x.s, implies[size2,green]), and[size3,yellow]), or[implies[circle,or[size1,size2]],and[apply(same_shape,iota(x.s)),and[iff[size2,circle],green]]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size2;4:green;4:and[%s,%s];4:size3;4:yellow;4:or[%s,%s];4:implies[%s,%s];4:circle;4:or[%s,%s];4:size1;4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:iff[%s,%s];4:size2;4:circle;4:green
'λx.apply(or[not[and[yellow,nor[triangle,rectangle]]],not[size2]],iota(filter(filter(x.s, size3), triangle)))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:and[%s,%s];4:yellow;4:nor[%s,%s];4:triangle;4:rectangle;4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle
'λx.apply(and[and[apply(same_color,iota(x.s)),not[or[and[iff[apply(same_size,x.o),or[blue,or[green,circle]]],size1],iff[triangle,green]]]],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:blue;4:or[%s,%s];4:green;4:circle;4:size1;4:iff[%s,%s];4:triangle;4:green;4:size1;1:%s.o;2:x
'λx.exists(nand[size2,and[and[triangle,green],apply(same_shape,x.o)]], filter(x.s, and[triangle,size3]))'	0:exists(%s, %s);4:nand[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:triangle;4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:size3
'λx.contains(iota(x.s), filter(x.s, and[green,not[and[size2,yellow]]]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:not[%s];4:and[%s,%s];4:size2;4:yellow
'λx.exists(or[triangle,or[green,and[and[apply(same_color,iota(x.s)),size1],and[size3,size2]]]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:triangle;4:or[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:size3;4:size2;3:%s.s;2:x
'λx.forall(and[or[apply(same_size,iota(filter(x.s, green))),green],and[rectangle,yellow]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:green;4:and[%s,%s];4:rectangle;4:yellow;3:%s.s;2:x
'λx.apply(apply(same_shape,iota(filter(x.s, and[circle,and[and[size2,not[size2]],triangle]]))),iota(filter(x.s, size2)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:size2;4:not[%s];4:size2;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.forall(nand[circle,size1],x.s)'	0:forall(%s,%s);4:nand[%s,%s];4:circle;4:size1;3:%s.s;2:x
'λx.apply(nand[and[not[implies[rectangle,blue]],or[size2,and[blue,and[size3,blue]]]],green],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:not[%s];4:implies[%s,%s];4:rectangle;4:blue;4:or[%s,%s];4:size2;4:and[%s,%s];4:blue;4:and[%s,%s];4:size3;4:blue;4:green;1:%s.o;2:x
'λx.empty(filter(x.s, and[yellow,rectangle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:rectangle
'λx.apply(yellow,iota(filter(filter(filter(filter(x.s, and[apply(same_size,iota(filter(x.s, size2))),or[circle,circle]]), not[size3]), size2), size3)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:circle;4:circle;4:not[%s];4:size3;4:size2;4:size3
'λx.apply(or[and[nand[size3,size1],size2],green],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:size3;4:size1;4:size2;4:green;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(x.s, nor[green,rectangle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:green;4:rectangle
'λx.exists(yellow, filter(x.s, blue))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[and[apply(same_color,x.o),circle],and[size2,rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;4:and[%s,%s];4:size2;4:rectangle;1:%s.o;2:x
'λx.forall(triangle,filter(filter(x.s, not[and[or[circle,rectangle],triangle]]), green))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:or[%s,%s];4:circle;4:rectangle;4:triangle;4:green
'λx.apply(rectangle,iota(filter(filter(filter(x.s, blue), rectangle), size1)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle;4:size1
'λx.apply(circle,iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.exists(triangle, filter(filter(x.s, iff[or[apply(same_size,x.o),rectangle],not[and[blue,yellow]]]), nor[triangle,and[or[not[circle],green],size2]]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:rectangle;4:not[%s];4:and[%s,%s];4:blue;4:yellow;4:nor[%s,%s];4:triangle;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:circle;4:green;4:size2
'λx.apply(size1,iota(filter(x.s, blue)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(size3,iota(filter(filter(x.s, size1), green)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green
'λx.exists(circle, filter(x.s, apply(size-lt,iota(filter(filter(x.s, triangle), size1)))))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size1
'λx.empty(filter(filter(filter(filter(filter(filter(x.s, triangle), rectangle), or[and[size3,and[apply(same_color,iota(filter(x.s, size2))),and[apply(same_size,iota(x.s)),apply(same_size,x.o)]]],and[size3,or[and[size2,and[yellow,yellow]],green]]]), blue), apply(size-lt,x.o)), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle;4:or[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:size3;4:or[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:yellow;4:yellow;4:green;4:blue;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:triangle
'λx.apply(and[rectangle,apply(same_color,iota(filter(filter(filter(x.s, and[not[yellow],size3]), yellow), size2)))],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:yellow;4:size3;4:yellow;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size3,triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:triangle;1:%s.o;2:x
'λx.apply(iff[apply(same_color,iota(filter(x.s, blue))),size1],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1;1:%s.o;2:x
'λx.forall(rectangle,filter(filter(filter(filter(filter(x.s, and[blue,yellow]), circle), size2), size1), triangle))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:yellow;4:circle;4:size2;4:size1;4:triangle
'λx.apply(not[and[green,and[rectangle,and[size3,rectangle]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:green;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:size3;4:rectangle;1:%s.o;2:x
'λx.apply(and[not[size1],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size1;4:circle;1:%s.o;2:x
'λx.apply(or[green,nand[size2,nor[green,apply(size-geq,iota(filter(x.s, and[triangle,size1])))]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:nand[%s,%s];4:size2;4:nor[%s,%s];4:green;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:size1;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, and[blue,and[and[green,apply(size-leq,iota(filter(x.s, yellow)))],size2]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:green;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2
'λx.apply(triangle,iota(filter(x.s, and[blue,green])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:green
'λx.apply(or[and[and[apply(same_shape,x.o),not[blue]],blue],size1],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:blue;4:blue;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(or[yellow,size1],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:size1;1:iota(%s);3:%s.s;2:x
'λx.exists(or[and[implies[blue,triangle],green],green], filter(x.s, and[yellow,or[size2,yellow]]))'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:blue;4:triangle;4:green;4:green;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:or[%s,%s];4:size2;4:yellow
'λx.apply(yellow,iota(filter(filter(filter(filter(filter(filter(x.s, or[circle,size1]), and[green,or[blue,size2]]), green), or[size2,rectangle]), and[circle,nor[or[size3,green],apply(same_size,iota(filter(filter(x.s, and[apply(same_shape,iota(x.s)),green]), circle)))]]), yellow)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:size1;4:and[%s,%s];4:green;4:or[%s,%s];4:blue;4:size2;4:green;4:or[%s,%s];4:size2;4:rectangle;4:and[%s,%s];4:circle;4:nor[%s,%s];4:or[%s,%s];4:size3;4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:green;4:circle;4:yellow
'λx.apply(nand[size1,rectangle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size1;4:rectangle;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, size2), or[triangle,yellow]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:triangle;4:yellow
'λx.apply(or[size1,nor[blue,apply(size-lt,x.o)]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:nor[%s,%s];4:blue;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[circle,and[circle,or[not[triangle],circle]]],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:and[%s,%s];4:circle;4:or[%s,%s];4:not[%s];4:triangle;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.exists(nor[and[rectangle,blue],green], x.s)'	0:exists(%s, %s);4:nor[%s,%s];4:and[%s,%s];4:rectangle;4:blue;4:green;3:%s.s;2:x
'λx.apply(green,iota(filter(x.s, or[triangle,blue])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:blue
'λx.forall(not[green],filter(x.s, size2))'	0:forall(%s,%s);4:not[%s];4:green;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(yellow,iota(filter(filter(x.s, triangle), or[size3,size3])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:or[%s,%s];4:size3;4:size3
'λx.apply(and[size2,circle],iota(filter(x.s, implies[and[size3,and[and[circle,size3],green]],yellow])))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:circle;4:size3;4:green;4:yellow
'λx.apply(and[and[size3,and[iff[and[not[size3],green],yellow],size2]],apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:not[%s];4:size3;4:green;4:yellow;4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.exists(nand[not[triangle],rectangle], x.s)'	0:exists(%s, %s);4:nand[%s,%s];4:not[%s];4:triangle;4:rectangle;3:%s.s;2:x
'λx.apply(and[nor[yellow,circle],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:yellow;4:circle;4:size1;1:%s.o;2:x
'λx.forall(circle,filter(filter(filter(x.s, yellow), rectangle), yellow))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle;4:yellow
'λx.apply(iff[triangle,or[nand[circle,size1],green]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:iff[%s,%s];4:triangle;4:or[%s,%s];4:nand[%s,%s];4:circle;4:size1;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.contains(x.o, filter(filter(x.s, apply(same_color,iota(x.s))), not[blue]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:not[%s];4:blue
'λx.apply(or[implies[apply(same_size,iota(x.s)),triangle],size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:triangle;4:size1;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(x.s, and[not[and[nor[or[nand[or[and[blue,circle],blue],size3],nor[nor[size1,green],nand[and[circle,blue],triangle]]],or[size2,size1]],and[size1,implies[yellow,not[green]]]]],circle]), and[rectangle,and[and[apply(same_size,x.o),blue],apply(same_color,iota(filter(filter(x.s, rectangle), nand[green,rectangle])))]]), rectangle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:and[%s,%s];4:blue;4:circle;4:blue;4:size3;4:nor[%s,%s];4:nor[%s,%s];4:size1;4:green;4:nand[%s,%s];4:and[%s,%s];4:circle;4:blue;4:triangle;4:or[%s,%s];4:size2;4:size1;4:and[%s,%s];4:size1;4:implies[%s,%s];4:yellow;4:not[%s];4:green;4:circle;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:nand[%s,%s];4:green;4:rectangle;4:rectangle;3:%s.s;2:x
'λx.apply(or[and[rectangle,blue],and[yellow,iff[size2,size3]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:rectangle;4:blue;4:and[%s,%s];4:yellow;4:iff[%s,%s];4:size2;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_size,iota(filter(x.s, size2))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(filter(x.s, yellow), size3), rectangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size3;4:rectangle
'λx.exists(size3, filter(x.s, and[size3,and[or[apply(same_color,x.o),yellow],green]]))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;4:green
'λx.apply(not[not[blue]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:blue;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, size2)), filter(filter(x.s, size1), or[size1,rectangle]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:or[%s,%s];4:size1;4:rectangle
'λx.apply(and[circle,apply(same_size,x.o)],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.exists(not[or[apply(same_size,x.o),triangle]], filter(filter(x.s, or[iff[circle,and[blue,blue]],circle]), green))'	0:exists(%s, %s);4:not[%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:iff[%s,%s];4:circle;4:and[%s,%s];4:blue;4:blue;4:circle;4:green
'λx.apply(apply(size-geq,iota(filter(x.s, and[and[rectangle,size2],and[circle,size3]]))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size2;4:and[%s,%s];4:circle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(or[and[size3,and[rectangle,size3]],circle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:rectangle;4:size3;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[nor[blue,and[rectangle,rectangle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:nor[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:rectangle;1:%s.o;2:x
'λx.apply(not[or[yellow,and[apply(same_size,x.o),size2]]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:yellow;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(filter(filter(x.s, size1), triangle), and[size2,yellow]), triangle), size2)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle;4:and[%s,%s];4:size2;4:yellow;4:triangle;4:size2;3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, size1), apply(same_shape,iota(filter(filter(x.s, not[circle]), or[green,circle]))))))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:or[%s,%s];4:green;4:circle
'λx.apply(apply(size-gt,iota(x.s)),iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[blue,circle],iota(filter(x.s, green)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.forall(and[and[green,circle],apply(same_shape,x.o)],filter(x.s, or[circle,circle]))'	0:forall(%s,%s);4:and[%s,%s];4:and[%s,%s];4:green;4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:circle
'λx.apply(apply(size-gt,x.o),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(filter(filter(filter(filter(x.s, size1), circle), size3), size2), green), green)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle;4:size3;4:size2;4:green;4:green
'λx.apply(or[or[implies[blue,size2],nor[yellow,size2]],and[triangle,size3]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:blue;4:size2;4:nor[%s,%s];4:yellow;4:size2;4:and[%s,%s];4:triangle;4:size3;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(filter(x.s, green), circle), yellow)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:circle;4:yellow
'λx.apply(and[size1,triangle],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.exists(yellow, filter(filter(filter(x.s, rectangle), apply(same_size,iota(x.s))), rectangle))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:rectangle
'λx.apply(implies[size2,rectangle],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:size2;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[or[green,not[green]],rectangle],iota(filter(filter(filter(filter(filter(x.s, nor[size1,triangle]), green), nand[apply(same_color,iota(filter(filter(filter(filter(filter(filter(filter(x.s, triangle), rectangle), or[triangle,circle]), not[circle]), and[yellow,size1]), and[nor[green,green],yellow]), implies[blue,yellow]))),size3]), size3), size2)))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:green;4:not[%s];4:green;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size1;4:triangle;4:green;4:nand[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle;4:or[%s,%s];4:triangle;4:circle;4:not[%s];4:circle;4:and[%s,%s];4:yellow;4:size1;4:and[%s,%s];4:nor[%s,%s];4:green;4:green;4:yellow;4:implies[%s,%s];4:blue;4:yellow;4:size3;4:size3;4:size2
'λx.apply(nand[circle,green],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:nand[%s,%s];4:circle;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(rectangle,iota(filter(x.s, or[blue,size2])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:size2
'λx.apply(iff[and[rectangle,or[circle,blue]],circle],iota(filter(filter(x.s, size2), not[size3])))'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:rectangle;4:or[%s,%s];4:circle;4:blue;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:not[%s];4:size3
'λx.apply(not[and[implies[blue,nand[circle,iff[not[circle],and[size3,and[circle,size1]]]]],apply(same_size,x.o)]],iota(filter(filter(x.s, green), yellow)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:implies[%s,%s];4:blue;4:nand[%s,%s];4:circle;4:iff[%s,%s];4:not[%s];4:circle;4:and[%s,%s];4:size3;4:and[%s,%s];4:circle;4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow
'λx.apply(or[size2,apply(size-geq,iota(x.s))],iota(filter(filter(x.s, green), yellow)))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow
'λx.apply(green,iota(filter(filter(x.s, green), green)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:green
'λx.apply(and[blue,size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:size2;1:%s.o;2:x
'λx.forall(triangle,filter(x.s, size2))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(and[apply(same_color,x.o),size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(or[blue,size1],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(x.s, green)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.forall(and[apply(same_shape,iota(filter(x.s, and[or[blue,or[size2,size3]],blue]))),size3],filter(x.s, triangle))'	0:forall(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:blue;4:or[%s,%s];4:size2;4:size3;4:blue;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(green,iota(filter(filter(filter(x.s, and[apply(same_color,x.o),size3]), size2), size1)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3;4:size2;4:size1
'λx.contains(x.o, filter(filter(x.s, rectangle), yellow))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:yellow
'λx.exists(iff[green,apply(same_color,x.o)], filter(filter(x.s, yellow), size3))'	0:exists(%s, %s);4:iff[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size3
'λx.apply(yellow,iota(filter(x.s, apply(size-leq,iota(x.s)))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x
'λx.apply(or[or[size1,size2],size3],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:size1;4:size2;4:size3;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(x.s), filter(x.s, and[yellow,or[yellow,triangle]]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:or[%s,%s];4:yellow;4:triangle
'λx.exists(size1, filter(filter(filter(x.s, and[apply(same_color,x.o),triangle]), apply(same_color,x.o)), nor[size3,yellow]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:nor[%s,%s];4:size3;4:yellow
'λx.apply(iff[and[and[size2,and[yellow,not[and[size1,and[and[or[blue,and[or[rectangle,and[apply(size-geq,iota(x.s)),triangle]],not[size1]]],and[and[and[circle,apply(same_shape,x.o)],green],and[yellow,green]]],rectangle]]]]],size3],not[and[size2,apply(same_shape,x.o)]]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:yellow;4:not[%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:blue;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:triangle;4:not[%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green;4:and[%s,%s];4:yellow;4:green;4:rectangle;4:size3;4:not[%s];4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(filter(filter(filter(x.s, blue), size2), nor[size2,apply(same_size,x.o)]), and[or[rectangle,apply(size-lt,x.o)],triangle]), and[not[size1],and[circle,implies[blue,not[blue]]]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2;4:nor[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:triangle;4:and[%s,%s];4:not[%s];4:size1;4:and[%s,%s];4:circle;4:implies[%s,%s];4:blue;4:not[%s];4:blue
'λx.exists(yellow, filter(filter(filter(x.s, green), and[not[yellow],not[triangle]]), triangle))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:not[%s];4:yellow;4:not[%s];4:triangle;4:triangle
'λx.apply(size3,iota(filter(filter(filter(x.s, implies[green,size2]), yellow), blue)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:green;4:size2;4:yellow;4:blue
'λx.apply(apply(size-lt,x.o),iota(filter(filter(filter(x.s, and[apply(same_shape,iota(filter(x.s, size3))),size2]), size2), and[blue,triangle])))'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2;4:size2;4:and[%s,%s];4:blue;4:triangle
'λx.apply(blue,iota(filter(filter(x.s, or[blue,or[or[nand[rectangle,and[blue,and[size3,blue]]],nand[not[apply(same_size,x.o)],nand[size1,size1]]],green]]), size2)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:or[%s,%s];4:or[%s,%s];4:nand[%s,%s];4:rectangle;4:and[%s,%s];4:blue;4:and[%s,%s];4:size3;4:blue;4:nand[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:nand[%s,%s];4:size1;4:size1;4:green;4:size2
'λx.apply(nor[size1,and[nor[yellow,and[size1,not[and[and[not[and[apply(same_size,x.o),and[or[size1,rectangle],apply(size-geq,iota(filter(filter(filter(filter(x.s, apply(same_size,x.o)), and[size3,blue]), triangle), green)))]]],size1],size2]]]],and[or[green,size3],green]]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size1;4:and[%s,%s];4:nor[%s,%s];4:yellow;4:and[%s,%s];4:size1;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:or[%s,%s];4:size1;4:rectangle;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:size3;4:blue;4:triangle;4:green;4:size1;4:size2;4:and[%s,%s];4:or[%s,%s];4:green;4:size3;4:green;1:%s.o;2:x
'λx.apply(and[size1,size3],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(apply(same_color,x.o),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(not[or[rectangle,circle]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:rectangle;4:circle;1:%s.o;2:x
'λx.exists(iff[triangle,and[triangle,rectangle]], x.s)'	0:exists(%s, %s);4:iff[%s,%s];4:triangle;4:and[%s,%s];4:triangle;4:rectangle;3:%s.s;2:x
'λx.apply(and[triangle,triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:triangle;1:%s.o;2:x
'λx.apply(nand[blue,apply(size-gt,iota(filter(filter(filter(x.s, size2), and[circle,and[not[or[or[circle,size2],or[green,not[size2]]]],circle]]), iff[green,and[and[blue,or[apply(same_color,iota(filter(filter(filter(filter(filter(x.s, size1), size3), yellow), rectangle), rectangle))),triangle]],not[size2]]])))],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:blue;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:circle;4:and[%s,%s];4:not[%s];4:or[%s,%s];4:or[%s,%s];4:circle;4:size2;4:or[%s,%s];4:green;4:not[%s];4:size2;4:circle;4:iff[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:blue;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size3;4:yellow;4:rectangle;4:rectangle;4:triangle;4:not[%s];4:size2;1:%s.o;2:x
'λx.forall(apply(size-gt,iota(filter(filter(x.s, yellow), size3))),filter(filter(x.s, yellow), size1))'	0:forall(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1
'λx.exists(green, filter(filter(x.s, size3), green))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green
'λx.apply(and[circle,or[or[size2,and[implies[and[rectangle,apply(same_shape,x.o)],blue],apply(same_size,iota(filter(filter(x.s, size2), apply(same_color,iota(x.s)))))]],rectangle]],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:or[%s,%s];4:or[%s,%s];4:size2;4:and[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[not[rectangle],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:rectangle;4:green;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, rectangle), green)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green
'λx.apply(apply(same_color,x.o),iota(filter(filter(x.s, and[triangle,iff[and[and[and[yellow,triangle],and[yellow,and[and[rectangle,iff[green,size2]],and[circle,green]]]],size2],green]]), green)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:iff[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:triangle;4:and[%s,%s];4:yellow;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:iff[%s,%s];4:green;4:size2;4:and[%s,%s];4:circle;4:green;4:size2;4:green;4:green
'λx.exists(circle, filter(x.s, circle))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(nand[triangle,triangle],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[green,size2],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:green;4:size2;1:%s.o;2:x
'λx.apply(and[and[implies[or[circle,rectangle],circle],nor[blue,iff[iff[and[or[size1,or[iff[circle,and[triangle,green]],triangle]],implies[implies[triangle,blue],or[or[size3,triangle],or[iff[size2,and[circle,not[not[blue]]]],blue]]]],not[size1]],triangle]]],or[and[size1,and[triangle,implies[blue,circle]]],and[or[circle,triangle],apply(same_color,x.o)]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:circle;4:rectangle;4:circle;4:nor[%s,%s];4:blue;4:iff[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size1;4:or[%s,%s];4:iff[%s,%s];4:circle;4:and[%s,%s];4:triangle;4:green;4:triangle;4:implies[%s,%s];4:implies[%s,%s];4:triangle;4:blue;4:or[%s,%s];4:or[%s,%s];4:size3;4:triangle;4:or[%s,%s];4:iff[%s,%s];4:size2;4:and[%s,%s];4:circle;4:not[%s];4:not[%s];4:blue;4:blue;4:not[%s];4:size1;4:triangle;4:or[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:triangle;4:implies[%s,%s];4:blue;4:circle;4:and[%s,%s];4:or[%s,%s];4:circle;4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[iff[blue,green],size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:blue;4:green;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size2,iff[yellow,and[size3,triangle]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:iff[%s,%s];4:yellow;4:and[%s,%s];4:size3;4:triangle;1:%s.o;2:x
'λx.apply(iff[yellow,and[and[size1,and[or[rectangle,or[and[triangle,apply(same_size,iota(x.s))],not[green]]],size1]],size3]],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:iff[%s,%s];4:yellow;4:and[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:not[%s];4:green;4:size1;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(apply(same_size,x.o),iota(filter(x.s, or[size2,and[and[apply(same_color,iota(filter(x.s, green))),rectangle],green]])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle;4:green
'λx.forall(or[blue,or[and[size2,rectangle],circle]],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:blue;4:or[%s,%s];4:and[%s,%s];4:size2;4:rectangle;4:circle;3:%s.s;2:x
'λx.apply(iff[size3,or[size2,blue]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:size3;4:or[%s,%s];4:size2;4:blue;1:%s.o;2:x
'λx.apply(and[and[triangle,yellow],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:yellow;4:circle;1:%s.o;2:x
'λx.apply(or[size3,or[and[green,green],circle]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:or[%s,%s];4:and[%s,%s];4:green;4:green;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[circle],x.o)'	0:apply(%s,%s);4:not[%s];4:circle;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(filter(x.s, blue), size1), circle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1;4:circle
'λx.apply(nand[rectangle,yellow],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:rectangle;4:yellow;1:%s.o;2:x
'λx.apply(apply(size-geq,iota(filter(x.s, or[implies[yellow,rectangle],apply(size-lt,iota(x.s))]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:implies[%s,%s];4:yellow;4:rectangle;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(and[apply(same_shape,iota(x.s)),size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size1;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(filter(filter(x.s, circle), size3), size2), not[triangle])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3;4:size2;4:not[%s];4:triangle
'λx.apply(not[and[green,size1]],iota(filter(filter(x.s, green), size1)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:green;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1
'λx.apply(blue,iota(filter(x.s, apply(size-leq,iota(x.s)))))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(x.s, and[apply(same_color,iota(x.s)),yellow])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:yellow
'λx.apply(nor[triangle,circle],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:triangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(x.s, size2), apply(same_shape,x.o))), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(triangle,iota(filter(x.s, apply(same_size,x.o))))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.exists(and[rectangle,yellow], filter(x.s, size3))'	0:exists(%s, %s);4:and[%s,%s];4:rectangle;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.forall(implies[and[green,not[size3]],or[nand[rectangle,and[blue,size2]],and[rectangle,circle]]],filter(filter(filter(x.s, size3), and[size1,yellow]), apply(size-lt,iota(x.s))))'	0:forall(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:green;4:not[%s];4:size3;4:or[%s,%s];4:nand[%s,%s];4:rectangle;4:and[%s,%s];4:blue;4:size2;4:and[%s,%s];4:rectangle;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:size1;4:yellow;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(x.s, rectangle), triangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle
'λx.contains(iota(filter(filter(x.s, and[not[blue],apply(same_color,x.o)]), rectangle)), filter(x.s, triangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.empty(filter(filter(x.s, iff[yellow,blue]), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:yellow;4:blue;4:size3
'λx.forall(and[not[or[green,yellow]],and[apply(size-geq,iota(x.s)),implies[circle,rectangle]]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:not[%s];4:or[%s,%s];4:green;4:yellow;4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:implies[%s,%s];4:circle;4:rectangle;3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, size2), rectangle), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle;4:blue
'λx.apply(size2,iota(filter(filter(x.s, and[size1,apply(size-gt,x.o)]), green)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:green
'λx.exists(apply(same_color,iota(x.s)), filter(filter(filter(filter(filter(filter(filter(filter(filter(x.s, rectangle), green), and[rectangle,size1]), yellow), circle), and[rectangle,green]), not[or[blue,iff[green,nor[not[and[size3,size1]],and[size3,blue]]]]]), not[circle]), rectangle))'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green;4:and[%s,%s];4:rectangle;4:size1;4:yellow;4:circle;4:and[%s,%s];4:rectangle;4:green;4:not[%s];4:or[%s,%s];4:blue;4:iff[%s,%s];4:green;4:nor[%s,%s];4:not[%s];4:and[%s,%s];4:size3;4:size1;4:and[%s,%s];4:size3;4:blue;4:not[%s];4:circle;4:rectangle
'λx.apply(rectangle,iota(filter(filter(filter(x.s, size1), size2), and[blue,apply(same_color,iota(filter(x.s, or[blue,yellow])))])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:yellow
'λx.apply(and[rectangle,and[size1,and[nor[yellow,green],and[yellow,nand[size3,yellow]]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:size1;4:and[%s,%s];4:nor[%s,%s];4:yellow;4:green;4:and[%s,%s];4:yellow;4:nand[%s,%s];4:size3;4:yellow;1:%s.o;2:x
'λx.exists(or[triangle,blue], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:triangle;4:blue;3:%s.s;2:x
'λx.apply(not[green],iota(filter(x.s, and[and[triangle,apply(same_shape,x.o)],or[size2,green]])))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:size2;4:green
'λx.apply(nand[apply(size-gt,x.o),green],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:green;1:iota(%s);3:%s.s;2:x
'λx.exists(yellow, filter(filter(x.s, triangle), not[yellow]))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:not[%s];4:yellow
'λx.apply(implies[size2,yellow],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:implies[%s,%s];4:size2;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[blue,blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:blue;1:%s.o;2:x
'λx.apply(or[size2,size3],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(not[or[and[size2,and[nand[size1,apply(same_shape,x.o)],and[rectangle,yellow]]],yellow]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:nand[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:rectangle;4:yellow;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(x.s, green), not[or[and[triangle,iff[size1,apply(size-gt,iota(filter(x.s, rectangle)))]],size3]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:triangle;4:iff[%s,%s];4:size1;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3
'λx.empty(filter(x.s, apply(size-lt,iota(filter(filter(x.s, size3), and[or[and[rectangle,circle],not[rectangle]],size1])))))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:rectangle;4:circle;4:not[%s];4:rectangle;4:size1
'λx.apply(circle,iota(filter(filter(filter(filter(x.s, and[triangle,size2]), and[and[apply(same_size,x.o),or[not[circle],and[green,not[blue]]]],green]), size1), green)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:size2;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:not[%s];4:circle;4:and[%s,%s];4:green;4:not[%s];4:blue;4:green;4:size1;4:green
'λx.contains(iota(x.s), filter(x.s, or[size3,apply(size-lt,iota(filter(filter(filter(x.s, iff[rectangle,not[apply(same_shape,iota(filter(filter(filter(filter(filter(x.s, nand[triangle,triangle]), rectangle), size2), size3), blue)))]]), triangle), and[size2,circle])))]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:rectangle;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:triangle;4:triangle;4:rectangle;4:size2;4:size3;4:blue;4:triangle;4:and[%s,%s];4:size2;4:circle
'λx.exists(and[not[or[nor[and[apply(same_shape,iota(x.s)),size2],or[green,rectangle]],size2]],size2], filter(x.s, size3))'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:or[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:green;4:rectangle;4:size2;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(and[size1,rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:rectangle;1:%s.o;2:x
'λx.apply(or[apply(same_shape,iota(x.s)),not[yellow]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:not[%s];4:yellow;1:%s.o;2:x
'λx.apply(or[not[size1],rectangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:size1;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[or[not[not[and[rectangle,blue]]],blue],apply(same_shape,iota(x.s))],iota(filter(filter(x.s, or[blue,rectangle]), circle)))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:not[%s];4:not[%s];4:and[%s,%s];4:rectangle;4:blue;4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:rectangle;4:circle
'λx.apply(and[not[nor[circle,not[green]]],not[and[nor[size1,green],size1]]],iota(filter(filter(x.s, nor[blue,size1]), size1)))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:nor[%s,%s];4:circle;4:not[%s];4:green;4:not[%s];4:and[%s,%s];4:nor[%s,%s];4:size1;4:green;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:blue;4:size1;4:size1
'λx.apply(iff[triangle,apply(same_color,iota(x.s))],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.exists(or[blue,blue], filter(filter(x.s, triangle), and[size2,size3]))'	0:exists(%s, %s);4:or[%s,%s];4:blue;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:size2;4:size3
'λx.apply(nand[and[size1,size1],size2],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:size1;4:size1;4:size2;1:%s.o;2:x
'λx.contains(iota(filter(x.s, rectangle)), filter(filter(filter(filter(filter(filter(x.s, green), yellow), size3), and[rectangle,size1]), size3), nand[size2,iff[size1,yellow]]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow;4:size3;4:and[%s,%s];4:rectangle;4:size1;4:size3;4:nand[%s,%s];4:size2;4:iff[%s,%s];4:size1;4:yellow
'λx.apply(size1,iota(filter(filter(x.s, rectangle), rectangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle
'λx.exists(green, filter(x.s, circle))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.forall(size2,filter(filter(filter(filter(x.s, circle), blue), yellow), and[triangle,triangle]))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue;4:yellow;4:and[%s,%s];4:triangle;4:triangle
'λx.apply(and[circle,and[size2,size3]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:and[%s,%s];4:size2;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[size3,implies[yellow,rectangle]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size3;4:implies[%s,%s];4:yellow;4:rectangle;1:%s.o;2:x
'λx.apply(apply(same_color,x.o),iota(filter(filter(x.s, not[size1]), apply(size-leq,x.o))))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:apply(%s,%s);5:size-leq;1:%s.o;2:x
'λx.apply(triangle,iota(filter(x.s, and[iff[yellow,not[and[and[not[size1],circle],size3]]],yellow])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:iff[%s,%s];4:yellow;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size1;4:circle;4:size3;4:yellow
'λx.apply(nand[and[blue,and[or[and[and[or[rectangle,nand[implies[not[blue],nor[size2,size2]],rectangle]],yellow],rectangle],not[not[blue]]],and[not[circle],circle]]],or[size1,and[size2,size3]]],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:rectangle;4:nand[%s,%s];4:implies[%s,%s];4:not[%s];4:blue;4:nor[%s,%s];4:size2;4:size2;4:rectangle;4:yellow;4:rectangle;4:not[%s];4:not[%s];4:blue;4:and[%s,%s];4:not[%s];4:circle;4:circle;4:or[%s,%s];4:size1;4:and[%s,%s];4:size2;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[not[green],green],iota(filter(x.s, green)))'	0:apply(%s,%s);4:implies[%s,%s];4:not[%s];4:green;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[size2,triangle],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.contains(iota(filter(filter(x.s, size1), circle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle;3:%s.s;2:x
'λx.apply(circle,iota(filter(x.s, not[yellow])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow
'λx.apply(and[blue,size3],iota(filter(filter(x.s, triangle), apply(same_shape,iota(filter(filter(x.s, and[blue,rectangle]), size1))))))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:rectangle;4:size1
'λx.apply(size3,iota(filter(x.s, not[triangle])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.apply(and[size2,size2],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(nor[implies[and[size2,triangle],apply(same_size,iota(filter(filter(x.s, size3), blue)))],size2], filter(filter(x.s, yellow), rectangle))'	0:exists(%s, %s);4:nor[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:size2;4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle
'λx.exists(rectangle, filter(filter(x.s, size3), size3))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3
'λx.exists(or[yellow,apply(size-leq,x.o)], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:yellow;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;3:%s.s;2:x
'λx.contains(iota(filter(x.s, size3)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;3:%s.s;2:x
'λx.apply(and[rectangle,and[green,size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:green;4:size1;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(x.s, circle), apply(size-geq,x.o))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.apply(and[size2,or[or[yellow,triangle],blue]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:or[%s,%s];4:or[%s,%s];4:yellow;4:triangle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_color,iota(x.s)),iota(filter(filter(filter(filter(filter(filter(x.s, not[size2]), nor[nor[circle,blue],size2]), size3), size2), apply(same_size,x.o)), blue)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:nor[%s,%s];4:nor[%s,%s];4:circle;4:blue;4:size2;4:size3;4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue
'λx.apply(apply(same_shape,iota(x.s)),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(x.s, implies[nand[size1,green],yellow])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:nand[%s,%s];4:size1;4:green;4:yellow
'λx.apply(blue,iota(filter(filter(filter(filter(filter(x.s, size1), circle), size1), triangle), size3)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle;4:size1;4:triangle;4:size3
'λx.apply(and[or[not[size3],size3],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:not[%s];4:size3;4:size3;4:blue;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(x.s, not[size1]), circle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:circle
'λx.apply(and[and[size1,size1],apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.exists(and[circle,triangle], filter(filter(filter(x.s, circle), iff[size3,yellow]), size3))'	0:exists(%s, %s);4:and[%s,%s];4:circle;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:iff[%s,%s];4:size3;4:yellow;4:size3
'λx.forall(size3,filter(filter(filter(filter(filter(filter(filter(filter(filter(filter(filter(filter(x.s, apply(same_shape,iota(filter(x.s, or[or[not[size3],circle],size2])))), not[green]), green), blue), size1), triangle), circle), circle), iff[green,blue]), and[iff[size1,size1],circle]), or[size1,circle]), and[rectangle,rectangle]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:not[%s];4:size3;4:circle;4:size2;4:not[%s];4:green;4:green;4:blue;4:size1;4:triangle;4:circle;4:circle;4:iff[%s,%s];4:green;4:blue;4:and[%s,%s];4:iff[%s,%s];4:size1;4:size1;4:circle;4:or[%s,%s];4:size1;4:circle;4:and[%s,%s];4:rectangle;4:rectangle
'λx.forall(and[size3,nand[not[yellow],blue]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:size3;4:nand[%s,%s];4:not[%s];4:yellow;4:blue;3:%s.s;2:x
'λx.empty(filter(filter(x.s, nor[nand[size1,green],size3]), not[and[yellow,nand[size3,size3]]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:nand[%s,%s];4:size1;4:green;4:size3;4:not[%s];4:and[%s,%s];4:yellow;4:nand[%s,%s];4:size3;4:size3
'λx.apply(implies[and[not[and[apply(same_size,iota(filter(filter(x.s, blue), rectangle))),blue]],or[size2,size3]],yellow],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle;4:blue;4:or[%s,%s];4:size2;4:size3;4:yellow;1:%s.o;2:x
'λx.forall(nor[circle,not[or[triangle,size3]]],filter(x.s, apply(same_color,iota(filter(x.s, size3)))))'	0:forall(%s,%s);4:nor[%s,%s];4:circle;4:not[%s];4:or[%s,%s];4:triangle;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(circle,iota(filter(filter(filter(x.s, apply(same_size,x.o)), yellow), not[not[size3]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow;4:not[%s];4:not[%s];4:size3
'λx.forall(size3,filter(x.s, apply(same_shape,iota(filter(x.s, size3)))))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(apply(same_color,iota(filter(filter(x.s, size1), blue))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, triangle), yellow))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:yellow
'λx.apply(or[triangle,not[circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:not[%s];4:circle;1:%s.o;2:x
'λx.apply(and[green,circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[green,or[or[size1,size2],and[green,triangle]]],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:nand[%s,%s];4:green;4:or[%s,%s];4:or[%s,%s];4:size1;4:size2;4:and[%s,%s];4:green;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.forall(rectangle,filter(x.s, circle))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[yellow,size1],iota(filter(filter(x.s, circle), nor[yellow,rectangle])))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:nor[%s,%s];4:yellow;4:rectangle
'λx.apply(rectangle,iota(filter(filter(x.s, size3), size3)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3
'λx.apply(and[size1,size3],iota(filter(x.s, and[blue,apply(same_size,x.o)])))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, blue), iff[green,rectangle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:iff[%s,%s];4:green;4:rectangle
'λx.apply(iff[rectangle,or[or[blue,size1],yellow]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:rectangle;4:or[%s,%s];4:or[%s,%s];4:blue;4:size1;4:yellow;1:%s.o;2:x
'λx.apply(not[and[blue,nand[blue,size1]]],iota(filter(x.s, not[triangle])))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:blue;4:nand[%s,%s];4:blue;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.apply(blue,iota(filter(filter(x.s, and[size2,yellow]), triangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:yellow;4:triangle
'λx.exists(circle, filter(x.s, rectangle))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(apply(same_shape,iota(x.s)),iota(filter(filter(x.s, and[apply(same_shape,x.o),and[and[or[rectangle,and[apply(same_shape,x.o),circle]],iff[size1,blue]],size1]]), size1)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;4:iff[%s,%s];4:size1;4:blue;4:size1;4:size1
'λx.apply(and[and[apply(same_shape,iota(x.s)),size2],nor[or[or[green,not[and[yellow,rectangle]]],triangle],triangle]],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size2;4:nor[%s,%s];4:or[%s,%s];4:or[%s,%s];4:green;4:not[%s];4:and[%s,%s];4:yellow;4:rectangle;4:triangle;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.forall(rectangle,filter(filter(filter(x.s, size1), nand[green,not[nor[circle,and[size2,triangle]]]]), size2))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:nand[%s,%s];4:green;4:not[%s];4:nor[%s,%s];4:circle;4:and[%s,%s];4:size2;4:triangle;4:size2
'λx.apply(and[apply(same_shape,iota(filter(x.s, circle))),circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:circle;1:%s.o;2:x
'λx.apply(apply(same_size,iota(filter(filter(filter(x.s, size1), size2), size3))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2;4:size3;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(x.s, and[and[green,size1],size2]), blue))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:green;4:size1;4:size2;4:blue
'λx.apply(not[and[and[size3,apply(same_shape,x.o)],size1]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;1:%s.o;2:x
'λx.contains(iota(filter(x.s, circle)), filter(filter(x.s, size3), and[size1,size2]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:size1;4:size2
'λx.contains(iota(filter(filter(x.s, triangle), and[blue,not[size1]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:blue;4:not[%s];4:size1;3:%s.s;2:x
'λx.empty(filter(x.s, iff[size2,size1]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size2;4:size1
'λx.apply(yellow,iota(filter(filter(x.s, not[yellow]), triangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:triangle
'λx.contains(x.o, filter(filter(filter(x.s, green), yellow), size2))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow;4:size2
'λx.apply(blue,iota(filter(filter(x.s, apply(same_shape,iota(x.s))), not[or[size2,blue]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:size2;4:blue
'λx.empty(filter(filter(x.s, triangle), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size1
'λx.contains(iota(filter(x.s, and[blue,size1])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size1;3:%s.s;2:x
'λx.apply(not[size3],iota(filter(x.s, apply(same_color,x.o))))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, rectangle), and[circle,circle]), not[size2]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:circle;4:circle;4:not[%s];4:size2
'λx.apply(and[apply(size-geq,iota(filter(filter(filter(filter(x.s, not[yellow]), and[and[apply(size-gt,x.o),size2],size3]), green), apply(same_shape,iota(x.s))))),green],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:size2;4:size3;4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[blue,and[size2,blue]],iota(filter(x.s, or[size1,circle])))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:size2;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:circle
'λx.forall(circle,filter(filter(filter(filter(x.s, or[and[nor[or[triangle,size2],size2],and[size2,yellow]],yellow]), and[circle,circle]), rectangle), rectangle))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:triangle;4:size2;4:size2;4:and[%s,%s];4:size2;4:yellow;4:yellow;4:and[%s,%s];4:circle;4:circle;4:rectangle;4:rectangle
'λx.apply(apply(same_shape,iota(filter(x.s, rectangle))),iota(filter(filter(filter(x.s, and[triangle,green]), or[size1,size3]), not[and[not[yellow],green]])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:green;4:or[%s,%s];4:size1;4:size3;4:not[%s];4:and[%s,%s];4:not[%s];4:yellow;4:green
'λx.contains(iota(x.s), filter(filter(x.s, triangle), and[size3,and[apply(size-leq,x.o),green]]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:size3;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:green
'λx.exists(green, filter(x.s, green))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.forall(and[size3,green],filter(x.s, and[yellow,size3]))'	0:forall(%s,%s);4:and[%s,%s];4:size3;4:green;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size3
'λx.exists(apply(size-geq,iota(filter(filter(x.s, blue), apply(same_size,iota(filter(x.s, yellow)))))), filter(filter(x.s, size3), and[green,and[blue,and[circle,size1]]]))'	0:exists(%s, %s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:green;4:and[%s,%s];4:blue;4:and[%s,%s];4:circle;4:size1
'λx.apply(and[not[circle],and[apply(same_size,x.o),or[green,blue]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:green;4:blue;1:%s.o;2:x
'λx.apply(and[and[circle,apply(size-geq,x.o)],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:size1;1:%s.o;2:x
'λx.apply(or[rectangle,or[triangle,not[circle]]],iota(filter(filter(x.s, blue), blue)))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:or[%s,%s];4:triangle;4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue
'λx.apply(and[and[size1,blue],and[apply(same_size,x.o),implies[or[apply(same_color,x.o),and[size2,implies[triangle,yellow]]],and[not[rectangle],rectangle]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:blue;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:implies[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:size2;4:implies[%s,%s];4:triangle;4:yellow;4:and[%s,%s];4:not[%s];4:rectangle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, circle), size3)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3
'λx.apply(not[circle],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, and[green,apply(same_color,iota(filter(filter(filter(x.s, and[triangle,and[triangle,or[and[yellow,or[yellow,green]],yellow]]]), yellow), green)))])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:and[%s,%s];4:triangle;4:or[%s,%s];4:and[%s,%s];4:yellow;4:or[%s,%s];4:yellow;4:green;4:yellow;4:yellow;4:green;3:%s.s;2:x
'λx.apply(green,iota(filter(filter(x.s, size1), yellow)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow
'λx.apply(nor[circle,size2],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:circle;4:size2;1:%s.o;2:x
'λx.apply(or[not[size2],yellow],iota(filter(filter(x.s, size1), yellow)))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:size2;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow
'λx.apply(and[yellow,rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:rectangle;1:%s.o;2:x
'λx.apply(or[blue,size3],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(or[circle,not[size1]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:not[%s];4:size1;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(filter(filter(x.s, size1), size1), size3), implies[and[and[or[and[triangle,triangle],size1],triangle],or[and[rectangle,size1],circle]],size3]), nor[nand[size1,implies[size2,size1]],size1])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1;4:size3;4:implies[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:triangle;4:triangle;4:size1;4:triangle;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:size1;4:circle;4:size3;4:nor[%s,%s];4:nand[%s,%s];4:size1;4:implies[%s,%s];4:size2;4:size1;4:size1;3:%s.s;2:x
'λx.forall(rectangle,filter(x.s, not[rectangle]))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle
'λx.contains(iota(filter(filter(x.s, or[size3,yellow]), not[triangle])), filter(x.s, size3))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:yellow;4:not[%s];4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(size2,iota(filter(filter(filter(filter(filter(x.s, size3), apply(size-geq,x.o)), apply(same_color,x.o)), size3), circle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3;4:circle
'λx.apply(and[not[size2],not[size3]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size2;4:not[%s];4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(filter(filter(filter(x.s, size3), not[apply(same_shape,x.o)]), yellow), not[size3]), or[nor[size1,size1],or[size1,nand[triangle,yellow]]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow;4:not[%s];4:size3;4:or[%s,%s];4:nor[%s,%s];4:size1;4:size1;4:or[%s,%s];4:size1;4:nand[%s,%s];4:triangle;4:yellow
'λx.apply(or[size3,nor[triangle,green]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:nor[%s,%s];4:triangle;4:green;1:%s.o;2:x
'λx.forall(green,filter(x.s, blue))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(circle,iota(filter(filter(x.s, apply(same_size,x.o)), size2)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2
'λx.apply(and[nor[implies[green,and[apply(size-geq,iota(filter(filter(filter(filter(filter(filter(x.s, blue), not[size2]), triangle), apply(same_size,iota(x.s))), yellow), or[and[size3,size1],triangle]))),green]],and[or[triangle,nor[yellow,size1]],not[rectangle]]],green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:implies[%s,%s];4:green;4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:size2;4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:and[%s,%s];4:size3;4:size1;4:triangle;4:green;4:and[%s,%s];4:or[%s,%s];4:triangle;4:nor[%s,%s];4:yellow;4:size1;4:not[%s];4:rectangle;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(x.s, green), or[triangle,not[yellow]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:triangle;4:not[%s];4:yellow
'λx.apply(and[size3,size3],iota(filter(x.s, or[green,size1])))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:size1
'λx.forall(rectangle,filter(x.s, or[and[nand[and[apply(size-geq,iota(filter(x.s, apply(same_shape,iota(x.s))))),rectangle],blue],rectangle],blue]))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:rectangle;4:blue;4:rectangle;4:blue
'λx.apply(nor[size1,triangle],iota(filter(filter(filter(x.s, not[size1]), yellow), size1)))'	0:apply(%s,%s);4:nor[%s,%s];4:size1;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:yellow;4:size1
'λx.apply(nand[iff[nor[size3,circle],and[rectangle,not[blue]]],apply(same_size,iota(x.s))],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:iff[%s,%s];4:nor[%s,%s];4:size3;4:circle;4:and[%s,%s];4:rectangle;4:not[%s];4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.exists(or[yellow,green], filter(x.s, size2))'	0:exists(%s, %s);4:or[%s,%s];4:yellow;4:green;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.contains(iota(x.s), filter(filter(x.s, circle), yellow))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow
'λx.apply(and[yellow,green],iota(filter(filter(filter(x.s, rectangle), triangle), not[rectangle])))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle;4:not[%s];4:rectangle
'λx.apply(and[circle,and[not[rectangle],size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:and[%s,%s];4:not[%s];4:rectangle;4:size2;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(x.s, apply(same_color,iota(filter(x.s, rectangle)))), blue), size3)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue;4:size3;3:%s.s;2:x
'λx.apply(and[size1,size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[circle,rectangle],iota(filter(filter(x.s, circle), green)))'	0:apply(%s,%s);4:implies[%s,%s];4:circle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green
'λx.forall(and[rectangle,rectangle],filter(x.s, circle))'	0:forall(%s,%s);4:and[%s,%s];4:rectangle;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.exists(and[not[triangle],yellow], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:triangle;4:yellow;3:%s.s;2:x
'λx.apply(nor[size1,rectangle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size1;4:rectangle;1:%s.o;2:x
'λx.exists(yellow, filter(x.s, and[and[circle,and[yellow,triangle]],blue]))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:yellow;4:triangle;4:blue
'λx.apply(or[rectangle,blue],iota(filter(filter(x.s, size3), and[and[not[blue],size2],triangle])))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:blue;4:size2;4:triangle
'λx.apply(and[yellow,nand[blue,rectangle]],iota(filter(filter(x.s, not[rectangle]), not[green])))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:nand[%s,%s];4:blue;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;4:not[%s];4:green
'λx.apply(not[size1],x.o)'	0:apply(%s,%s);4:not[%s];4:size1;1:%s.o;2:x
'λx.apply(size3,iota(filter(x.s, and[not[size3],size3])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:size3;4:size3
'λx.empty(filter(filter(filter(filter(filter(x.s, yellow), green), rectangle), size3), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green;4:rectangle;4:size3;4:blue
'λx.apply(and[rectangle,not[or[blue,implies[green,nand[circle,blue]]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:not[%s];4:or[%s,%s];4:blue;4:implies[%s,%s];4:green;4:nand[%s,%s];4:circle;4:blue;1:%s.o;2:x
'λx.apply(and[size2,triangle],iota(filter(x.s, apply(same_color,x.o))))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.forall(and[yellow,apply(same_size,iota(x.s))],filter(filter(x.s, size2), and[apply(same_size,iota(x.s)),and[green,rectangle]]))'	0:forall(%s,%s);4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:green;4:rectangle
'λx.apply(and[size3,green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(not[not[size3]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:size3;1:%s.o;2:x
'λx.apply(and[size2,and[nor[rectangle,blue],blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:nor[%s,%s];4:rectangle;4:blue;4:blue;1:%s.o;2:x
'λx.apply(or[triangle,or[blue,size3]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:or[%s,%s];4:blue;4:size3;1:%s.o;2:x
'λx.apply(and[size3,rectangle],iota(filter(filter(x.s, green), size1)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1
'λx.apply(and[size1,rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[and[not[rectangle],yellow]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:rectangle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(not[and[not[or[size3,rectangle]],apply(same_color,x.o)]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:or[%s,%s];4:size3;4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.forall(size2,filter(x.s, and[yellow,size3]))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size3
'λx.apply(or[size1,yellow],iota(filter(x.s, not[and[circle,circle]])))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:circle;4:circle
'λx.exists(blue, filter(filter(x.s, not[circle]), blue))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:blue
'λx.apply(not[and[blue,or[blue,triangle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:blue;4:or[%s,%s];4:blue;4:triangle;1:%s.o;2:x
'λx.apply(and[nand[yellow,size1],nand[size2,circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:yellow;4:size1;4:nand[%s,%s];4:size2;4:circle;1:%s.o;2:x
'λx.apply(apply(same_shape,x.o),iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(or[triangle,not[size2]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:not[%s];4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(or[not[or[and[blue,size2],green]],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:or[%s,%s];4:and[%s,%s];4:blue;4:size2;4:green;4:blue;1:%s.o;2:x
'λx.empty(filter(filter(x.s, size1), or[or[triangle,or[rectangle,apply(same_size,x.o)]],size2]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:or[%s,%s];4:or[%s,%s];4:triangle;4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2
'λx.apply(triangle,iota(filter(filter(x.s, blue), green)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green
'λx.exists(or[nand[apply(same_size,x.o),rectangle],nor[size2,nor[and[triangle,and[size2,apply(same_color,x.o)]],triangle]]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:nand[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:rectangle;4:nor[%s,%s];4:size2;4:nor[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;3:%s.s;2:x
'λx.apply(and[yellow,and[circle,and[green,blue]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:and[%s,%s];4:circle;4:and[%s,%s];4:green;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(and[not[or[triangle,size2]],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:or[%s,%s];4:triangle;4:size2;4:green;1:%s.o;2:x
'λx.apply(or[or[green,not[yellow]],and[blue,size1]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:green;4:not[%s];4:yellow;4:and[%s,%s];4:blue;4:size1;1:%s.o;2:x
'λx.apply(and[or[blue,yellow],or[size3,size2]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:blue;4:yellow;4:or[%s,%s];4:size3;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[or[apply(same_color,iota(filter(filter(x.s, circle), rectangle))),yellow],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle;4:yellow;4:yellow;1:%s.o;2:x
'λx.exists(green, x.s)'	0:exists(%s, %s);4:green;3:%s.s;2:x
'λx.forall(iff[not[green],and[green,not[and[circle,blue]]]],x.s)'	0:forall(%s,%s);4:iff[%s,%s];4:not[%s];4:green;4:and[%s,%s];4:green;4:not[%s];4:and[%s,%s];4:circle;4:blue;3:%s.s;2:x
'λx.exists(nand[not[and[size1,and[size1,size1]]],size1], filter(x.s, triangle))'	0:exists(%s, %s);4:nand[%s,%s];4:not[%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:size1;4:size1;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(or[or[size3,not[yellow]],size1],iota(filter(filter(x.s, not[apply(same_shape,x.o)]), size2)))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:size3;4:not[%s];4:yellow;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2
'λx.apply(or[triangle,triangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.exists(green, filter(x.s, blue))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(blue,iota(filter(filter(x.s, not[circle]), triangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:triangle
'λx.apply(triangle,iota(filter(x.s, not[iff[not[rectangle],apply(same_shape,x.o)]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:iff[%s,%s];4:not[%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(or[and[apply(same_color,x.o),and[yellow,circle]],circle],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:yellow;4:circle;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.exists(green, filter(filter(filter(x.s, not[yellow]), blue), circle))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:blue;4:circle
'λx.empty(filter(filter(filter(x.s, or[size2,circle]), or[size2,triangle]), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:circle;4:or[%s,%s];4:size2;4:triangle;4:rectangle
'λx.apply(or[size2,size1],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.exists(green, filter(x.s, size1))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(blue,iota(filter(x.s, not[yellow])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow
'λx.contains(x.o, filter(filter(filter(filter(filter(filter(x.s, size1), size1), triangle), size3), size3), size2))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1;4:triangle;4:size3;4:size3;4:size2
'λx.apply(not[not[green]],iota(filter(filter(filter(x.s, green), green), size1)))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:green;4:size1
'λx.apply(or[rectangle,size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:size1;1:%s.o;2:x
'λx.apply(or[apply(same_shape,x.o),not[circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:circle;1:%s.o;2:x
'λx.forall(yellow,filter(filter(x.s, and[blue,implies[size1,and[implies[size1,or[yellow,not[and[size2,and[rectangle,or[and[size1,or[or[yellow,nor[rectangle,blue]],rectangle]],rectangle]]]]]],size3]]]), circle))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:implies[%s,%s];4:size1;4:and[%s,%s];4:implies[%s,%s];4:size1;4:or[%s,%s];4:yellow;4:not[%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:or[%s,%s];4:yellow;4:nor[%s,%s];4:rectangle;4:blue;4:rectangle;4:rectangle;4:size3;4:circle
'λx.apply(blue,iota(filter(filter(filter(filter(x.s, circle), size3), green), or[green,apply(same_color,x.o)])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3;4:green;4:or[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(and[or[triangle,rectangle],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:triangle;4:rectangle;4:size3;1:%s.o;2:x
'λx.apply(or[and[size1,size2],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size1;4:size2;4:blue;1:%s.o;2:x
'λx.apply(apply(same_size,iota(filter(filter(x.s, green), triangle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:triangle;1:%s.o;2:x
'λx.apply(or[yellow,not[yellow]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:not[%s];4:yellow;1:iota(%s);3:%s.s;2:x
'λx.exists(triangle, filter(x.s, rectangle))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(or[and[iff[nand[not[size3],and[rectangle,size2]],size2],triangle],not[or[apply(same_shape,x.o),and[size1,triangle]]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:nand[%s,%s];4:not[%s];4:size3;4:and[%s,%s];4:rectangle;4:size2;4:size2;4:triangle;4:not[%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:size1;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[triangle,not[triangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:not[%s];4:triangle;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(filter(x.s, green), or[green,blue]), not[circle])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:green;4:blue;4:not[%s];4:circle
'λx.apply(size3,iota(filter(filter(x.s, circle), not[size2])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:size2
'λx.apply(and[and[circle,circle],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:circle;4:yellow;1:%s.o;2:x
'λx.apply(and[not[size2],and[size1,size3]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size2;4:and[%s,%s];4:size1;4:size3;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, apply(same_color,x.o)), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size2
'λx.apply(nor[circle,size3],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:circle;4:size3;1:%s.o;2:x
'λx.apply(implies[not[rectangle],nand[size1,rectangle]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:not[%s];4:rectangle;4:nand[%s,%s];4:size1;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[apply(same_color,x.o),size1],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(and[triangle,apply(same_shape,x.o)],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(or[or[blue,green],size2],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:blue;4:green;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(or[and[size3,apply(same_shape,iota(x.s))],or[blue,yellow]],iota(filter(filter(x.s, size1), blue)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue
'λx.apply(rectangle,iota(filter(filter(x.s, size2), or[and[and[and[green,apply(same_color,iota(filter(x.s, and[size1,size1])))],apply(same_size,x.o)],size1],nand[blue,rectangle]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1;4:nand[%s,%s];4:blue;4:rectangle
'λx.apply(or[size1,apply(same_shape,iota(x.s))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, and[size1,and[rectangle,yellow]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:and[%s,%s];4:rectangle;4:yellow
'λx.apply(rectangle,iota(filter(x.s, implies[yellow,rectangle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:yellow;4:rectangle
'λx.apply(implies[circle,triangle],iota(filter(filter(x.s, size3), triangle)))'	0:apply(%s,%s);4:implies[%s,%s];4:circle;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle
'λx.empty(filter(filter(x.s, rectangle), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2
'λx.apply(and[nand[size2,yellow],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:size2;4:yellow;4:circle;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(filter(filter(filter(filter(filter(filter(x.s, triangle), apply(size-gt,iota(filter(x.s, size3)))), apply(same_color,iota(filter(x.s, triangle)))), and[circle,or[circle,nor[size3,rectangle]]]), blue), yellow), nor[green,and[and[not[rectangle],size1],or[or[apply(same_size,iota(filter(x.s, yellow))),apply(same_shape,x.o)],green]]]), size2)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:circle;4:or[%s,%s];4:circle;4:nor[%s,%s];4:size3;4:rectangle;4:blue;4:yellow;4:nor[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:rectangle;4:size1;4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green;4:size2
'λx.apply(and[size3,circle],iota(filter(x.s, green)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[apply(same_size,x.o),and[and[triangle,and[rectangle,triangle]],rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:rectangle;4:triangle;4:rectangle;1:%s.o;2:x
'λx.apply(or[size1,and[triangle,green]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:and[%s,%s];4:triangle;4:green;1:iota(%s);3:%s.s;2:x
'λx.forall(and[apply(size-geq,iota(filter(x.s, and[and[and[not[nand[iff[rectangle,circle],not[size2]]],and[triangle,and[circle,green]]],rectangle],and[size2,nand[not[size2],triangle]]]))),green],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:nand[%s,%s];4:iff[%s,%s];4:rectangle;4:circle;4:not[%s];4:size2;4:and[%s,%s];4:triangle;4:and[%s,%s];4:circle;4:green;4:rectangle;4:and[%s,%s];4:size2;4:nand[%s,%s];4:not[%s];4:size2;4:triangle;4:green;3:%s.s;2:x
'λx.exists(size3, filter(x.s, iff[size1,size1]))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size1;4:size1
'λx.apply(or[nand[triangle,and[yellow,triangle]],implies[and[size2,yellow],or[nand[and[size1,triangle],not[yellow]],apply(same_size,iota(x.s))]]],iota(filter(filter(filter(x.s, yellow), blue), and[circle,implies[size3,size2]])))'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:triangle;4:and[%s,%s];4:yellow;4:triangle;4:implies[%s,%s];4:and[%s,%s];4:size2;4:yellow;4:or[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:size1;4:triangle;4:not[%s];4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:blue;4:and[%s,%s];4:circle;4:implies[%s,%s];4:size3;4:size2
'λx.apply(apply(same_color,x.o),iota(filter(filter(x.s, circle), circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:circle
'λx.apply(or[circle,implies[or[size2,and[and[yellow,and[blue,apply(size-geq,iota(x.s))]],size1]],blue]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:implies[%s,%s];4:or[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:blue;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:size1;4:blue;1:%s.o;2:x
'λx.apply(nor[blue,size1],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:blue;4:size1;1:%s.o;2:x
'λx.apply(size2,iota(filter(x.s, not[not[implies[size1,circle]]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:implies[%s,%s];4:size1;4:circle
'λx.forall(or[green,not[and[green,apply(size-lt,iota(x.s))]]],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:green;4:not[%s];4:and[%s,%s];4:green;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, circle), and[triangle,not[and[green,apply(same_color,iota(filter(filter(x.s, size3), size3)))]]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:triangle;4:not[%s];4:and[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3
'λx.contains(iota(filter(x.s, blue)), filter(x.s, blue))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(or[circle,size2],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(filter(filter(filter(x.s, rectangle), blue), yellow), rectangle), blue)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue;4:yellow;4:rectangle;4:blue
'λx.apply(size3,iota(filter(filter(x.s, apply(same_shape,x.o)), size2)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2
'λx.forall(rectangle,filter(filter(x.s, size1), rectangle))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle
'λx.contains(iota(filter(x.s, or[not[size3],rectangle])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:size3;4:rectangle;3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(x.s, size1), apply(same_color,x.o))))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(and[circle,size2],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(and[apply(size-gt,iota(filter(x.s, circle))),and[and[and[not[size3],size2],or[blue,and[and[rectangle,not[green]],green]]],triangle]],iota(filter(filter(filter(filter(filter(x.s, not[circle]), rectangle), not[implies[nand[nand[or[rectangle,circle],size3],and[not[apply(same_shape,iota(filter(x.s, circle)))],blue]],green]]), circle), green)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size3;4:size2;4:or[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:not[%s];4:green;4:green;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:rectangle;4:not[%s];4:implies[%s,%s];4:nand[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:rectangle;4:circle;4:size3;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue;4:green;4:circle;4:green
'λx.apply(or[not[green],size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:green;4:size3;1:%s.o;2:x
'λx.apply(implies[rectangle,size2],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:rectangle;4:size2;1:%s.o;2:x
'λx.apply(and[or[blue,triangle],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:blue;4:triangle;4:circle;1:%s.o;2:x
'λx.contains(iota(filter(x.s, triangle)), filter(filter(x.s, or[size2,yellow]), size2))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:yellow;4:size2
'λx.apply(not[and[and[yellow,triangle],or[green,circle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:triangle;4:or[%s,%s];4:green;4:circle;1:%s.o;2:x
'λx.apply(or[green,iff[or[rectangle,size1],circle]],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:iff[%s,%s];4:or[%s,%s];4:rectangle;4:size1;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(apply(same_color,iota(filter(filter(filter(x.s, apply(size-lt,x.o)), green), circle))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:green;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size2,or[circle,size2]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:or[%s,%s];4:circle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[triangle,not[green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:not[%s];4:green;1:%s.o;2:x
'λx.exists(or[and[and[rectangle,blue],apply(size-geq,iota(x.s))],blue], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:blue;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:blue;3:%s.s;2:x
'λx.apply(circle,iota(filter(x.s, iff[size3,circle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size3;4:circle
'λx.apply(green,iota(filter(filter(x.s, and[size1,green]), size2)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:green;4:size2
'λx.exists(apply(same_shape,iota(filter(x.s, blue))), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;3:%s.s;2:x
'λx.empty(filter(x.s, and[size3,nand[apply(same_size,iota(x.s)),size2]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:nand[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size2
'λx.apply(triangle,iota(filter(filter(filter(x.s, triangle), implies[not[and[or[size3,and[size1,and[and[implies[apply(same_shape,x.o),or[apply(same_shape,x.o),nor[or[not[circle],triangle],and[rectangle,blue]]]],and[green,blue]],triangle]]],iff[and[rectangle,iff[green,not[size3]]],or[not[triangle],size1]]]],size1]), triangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:implies[%s,%s];4:not[%s];4:and[%s,%s];4:or[%s,%s];4:size3;4:and[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:nor[%s,%s];4:or[%s,%s];4:not[%s];4:circle;4:triangle;4:and[%s,%s];4:rectangle;4:blue;4:and[%s,%s];4:green;4:blue;4:triangle;4:iff[%s,%s];4:and[%s,%s];4:rectangle;4:iff[%s,%s];4:green;4:not[%s];4:size3;4:or[%s,%s];4:not[%s];4:triangle;4:size1;4:size1;4:triangle
'λx.apply(or[size3,or[size3,apply(same_shape,iota(filter(filter(x.s, blue), size1)))]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1;1:%s.o;2:x
'λx.apply(apply(same_color,iota(filter(x.s, green))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;1:%s.o;2:x
'λx.apply(or[size1,circle],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.forall(circle,filter(filter(filter(x.s, yellow), yellow), and[size2,circle]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:yellow;4:and[%s,%s];4:size2;4:circle
'λx.apply(implies[nand[size2,not[or[triangle,green]]],and[circle,or[rectangle,yellow]]],iota(filter(x.s, apply(size-lt,x.o))))'	0:apply(%s,%s);4:implies[%s,%s];4:nand[%s,%s];4:size2;4:not[%s];4:or[%s,%s];4:triangle;4:green;4:and[%s,%s];4:circle;4:or[%s,%s];4:rectangle;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.apply(size1,iota(filter(x.s, and[not[apply(size-leq,iota(x.s))],triangle])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:triangle
'λx.apply(triangle,iota(filter(filter(filter(filter(filter(filter(filter(filter(filter(x.s, yellow), size1), triangle), yellow), and[green,yellow]), not[yellow]), green), yellow), size1)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;4:triangle;4:yellow;4:and[%s,%s];4:green;4:yellow;4:not[%s];4:yellow;4:green;4:yellow;4:size1
'λx.empty(filter(x.s, and[and[yellow,circle],or[or[circle,and[triangle,size3]],circle]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:yellow;4:circle;4:or[%s,%s];4:or[%s,%s];4:circle;4:and[%s,%s];4:triangle;4:size3;4:circle
'λx.exists(size2, filter(filter(x.s, circle), green))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green
'λx.apply(and[yellow,and[size2,yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:and[%s,%s];4:size2;4:yellow;1:%s.o;2:x
'λx.apply(nor[iff[green,size3],blue],iota(filter(x.s, or[green,or[yellow,iff[not[blue],apply(size-geq,x.o)]]])))'	0:apply(%s,%s);4:nor[%s,%s];4:iff[%s,%s];4:green;4:size3;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:or[%s,%s];4:yellow;4:iff[%s,%s];4:not[%s];4:blue;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.apply(and[or[and[not[circle],yellow],yellow],yellow],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:not[%s];4:circle;4:yellow;4:yellow;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(and[not[size3],apply(same_color,x.o)],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[or[size2,yellow],yellow],not[rectangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size2;4:yellow;4:yellow;4:not[%s];4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_color,iota(filter(filter(x.s, yellow), blue))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:blue;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(filter(x.s, size1), apply(size-gt,iota(filter(x.s, size2)))), and[apply(size-leq,iota(x.s)),size3])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:size3
'λx.empty(filter(x.s, nor[size1,size1]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size1;4:size1
'λx.apply(or[size3,and[apply(same_shape,iota(filter(x.s, triangle))),circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle;1:%s.o;2:x
'λx.exists(and[implies[circle,not[circle]],size2], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:implies[%s,%s];4:circle;4:not[%s];4:circle;4:size2;3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(filter(x.s, rectangle), triangle), or[size1,rectangle])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle;4:or[%s,%s];4:size1;4:rectangle
'λx.forall(rectangle,filter(filter(x.s, size3), and[not[apply(same_shape,iota(filter(filter(filter(filter(filter(filter(x.s, apply(same_shape,x.o)), or[and[circle,size1],nor[and[and[or[blue,triangle],triangle],green],size2]]), green), not[blue]), rectangle), green)))],size3]))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:and[%s,%s];4:circle;4:size1;4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:blue;4:triangle;4:triangle;4:green;4:size2;4:green;4:not[%s];4:blue;4:rectangle;4:green;4:size3
'λx.apply(or[rectangle,apply(same_color,iota(x.s))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.exists(or[green,rectangle], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:green;4:rectangle;3:%s.s;2:x
'λx.apply(or[size2,blue],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(x.s, size3), not[size2])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:size2
'λx.apply(triangle,iota(filter(filter(x.s, size3), apply(same_size,x.o))))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.forall(size2,filter(filter(x.s, rectangle), not[nand[or[blue,and[apply(same_color,iota(x.s)),size1]],size3]]))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:nand[%s,%s];4:or[%s,%s];4:blue;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size1;4:size3
'λx.apply(green,iota(filter(filter(x.s, rectangle), rectangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle
'λx.apply(iff[yellow,or[size2,green]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:yellow;4:or[%s,%s];4:size2;4:green;1:%s.o;2:x
'λx.apply(and[triangle,size2],iota(filter(x.s, not[size3])))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3
'λx.apply(implies[yellow,apply(same_shape,iota(filter(filter(filter(filter(x.s, not[green]), rectangle), green), circle)))],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:rectangle;4:green;4:circle;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, or[size1,size1])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:size1
'λx.apply(and[and[apply(same_color,iota(x.s)),rectangle],nor[and[and[apply(same_shape,iota(x.s)),circle],green],circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:rectangle;4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle;4:green;4:circle;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, not[rectangle]), or[size3,and[apply(size-lt,x.o),and[size1,rectangle]]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;4:or[%s,%s];4:size3;4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:and[%s,%s];4:size1;4:rectangle
'λx.contains(x.o, filter(filter(x.s, apply(size-lt,iota(x.s))), and[rectangle,rectangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:rectangle
'λx.contains(x.o, filter(filter(x.s, size1), size2))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2
'λx.apply(apply(same_size,x.o),iota(filter(x.s, and[circle,and[size2,apply(same_shape,iota(filter(filter(x.s, green), size2)))]])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size2
'λx.apply(blue,iota(filter(filter(x.s, and[and[not[triangle],circle],size3]), not[size3])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:triangle;4:circle;4:size3;4:not[%s];4:size3
'λx.apply(green,iota(filter(filter(filter(x.s, and[iff[size2,size3],blue]), size1), yellow)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:iff[%s,%s];4:size2;4:size3;4:blue;4:size1;4:yellow
'λx.apply(nand[or[size1,rectangle],yellow],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:or[%s,%s];4:size1;4:rectangle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.exists(blue, filter(x.s, green))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[and[not[not[green]],size2],size3],iota(filter(x.s, and[size2,green])))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:not[%s];4:green;4:size2;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:green
'λx.empty(filter(filter(x.s, yellow), not[green]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:green
'λx.apply(rectangle,iota(filter(filter(x.s, blue), green)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green
'λx.apply(iff[rectangle,size2],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:rectangle;4:size2;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, blue), size2)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2
'λx.forall(size3,filter(filter(filter(x.s, rectangle), not[circle]), rectangle))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:circle;4:rectangle
'λx.apply(implies[size3,apply(same_size,x.o)],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(x.s, size2), iff[triangle,not[and[rectangle,and[blue,size2]]]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:iff[%s,%s];4:triangle;4:not[%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:blue;4:size2
'λx.apply(iff[size3,not[blue]],iota(filter(filter(x.s, size3), blue)))'	0:apply(%s,%s);4:iff[%s,%s];4:size3;4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue
'λx.apply(triangle,iota(filter(filter(filter(x.s, triangle), and[triangle,circle]), and[yellow,size1])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:triangle;4:circle;4:and[%s,%s];4:yellow;4:size1
'λx.apply(or[apply(same_shape,x.o),apply(same_size,x.o)],iota(filter(x.s, not[not[not[rectangle]]])))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:not[%s];4:rectangle
'λx.apply(or[nor[nand[and[rectangle,not[blue]],size1],blue],or[yellow,and[yellow,size3]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:nor[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:rectangle;4:not[%s];4:blue;4:size1;4:blue;4:or[%s,%s];4:yellow;4:and[%s,%s];4:yellow;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[green,circle],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:implies[%s,%s];4:green;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.forall(size3,filter(x.s, not[circle]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.apply(blue,iota(filter(x.s, blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(not[rectangle],iota(filter(filter(x.s, and[triangle,blue]), and[rectangle,blue])))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:blue;4:and[%s,%s];4:rectangle;4:blue
'λx.exists(size3, filter(filter(x.s, and[rectangle,size1]), apply(size-leq,x.o)))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:size1;4:apply(%s,%s);5:size-leq;1:%s.o;2:x
'λx.exists(triangle, filter(filter(filter(x.s, apply(same_size,iota(x.s))), blue), iff[and[size1,circle],triangle]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:blue;4:iff[%s,%s];4:and[%s,%s];4:size1;4:circle;4:triangle
'λx.apply(blue,iota(filter(x.s, not[circle])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.apply(apply(size-gt,iota(filter(filter(x.s, nor[size3,circle]), apply(same_color,iota(x.s))))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size3;4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.exists(and[not[circle],yellow], filter(filter(x.s, green), size3))'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:circle;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size3
'λx.forall(and[and[size1,rectangle],apply(same_size,iota(x.s))],filter(x.s, and[and[not[and[yellow,yellow]],rectangle],or[triangle,green]]))'	0:forall(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:yellow;4:yellow;4:rectangle;4:or[%s,%s];4:triangle;4:green
'λx.apply(and[rectangle,blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.forall(blue,filter(filter(x.s, blue), blue))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue
'λx.forall(apply(same_size,iota(x.s)),filter(x.s, nor[yellow,green]))'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:yellow;4:green
'λx.apply(and[green,nand[size3,apply(same_size,x.o)]],iota(filter(filter(filter(x.s, and[nor[or[size3,yellow],not[triangle]],size2]), circle), apply(same_color,x.o))))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:nand[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:size3;4:yellow;4:not[%s];4:triangle;4:size2;4:circle;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(x.s)),iota(filter(filter(x.s, size3), yellow)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow
'λx.apply(nor[blue,apply(same_shape,iota(x.s))],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(implies[not[yellow],yellow],iota(filter(filter(filter(x.s, yellow), nor[blue,rectangle]), size1)))'	0:apply(%s,%s);4:implies[%s,%s];4:not[%s];4:yellow;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:nor[%s,%s];4:blue;4:rectangle;4:size1
'λx.apply(and[implies[iff[not[not[and[not[rectangle],nand[blue,not[blue]]]]],triangle],yellow],apply(same_color,x.o)],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:iff[%s,%s];4:not[%s];4:not[%s];4:and[%s,%s];4:not[%s];4:rectangle;4:nand[%s,%s];4:blue;4:not[%s];4:blue;4:triangle;4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.exists(circle, filter(filter(filter(x.s, and[size3,yellow]), size2), nand[size3,circle]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:yellow;4:size2;4:nand[%s,%s];4:size3;4:circle
'λx.apply(not[apply(same_shape,iota(filter(filter(filter(filter(filter(filter(x.s, triangle), iff[nor[size2,not[rectangle]],not[blue]]), triangle), and[size2,rectangle]), size3), and[apply(same_shape,x.o),nand[size3,or[iff[blue,circle],circle]]])))],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:iff[%s,%s];4:nor[%s,%s];4:size2;4:not[%s];4:rectangle;4:not[%s];4:blue;4:triangle;4:and[%s,%s];4:size2;4:rectangle;4:size3;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:nand[%s,%s];4:size3;4:or[%s,%s];4:iff[%s,%s];4:blue;4:circle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[or[rectangle,apply(same_color,iota(filter(x.s, circle)))]],iota(filter(filter(x.s, rectangle), and[apply(same_color,x.o),or[not[green],green]])))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:or[%s,%s];4:not[%s];4:green;4:green
'λx.contains(iota(filter(filter(x.s, yellow), triangle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle;3:%s.s;2:x
'λx.apply(and[apply(same_color,iota(filter(x.s, apply(same_size,x.o)))),green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;1:%s.o;2:x
'λx.forall(size2,filter(filter(filter(filter(filter(filter(x.s, not[yellow]), yellow), apply(same_size,x.o)), and[circle,and[apply(same_shape,iota(x.s)),rectangle]]), size2), blue))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:rectangle;4:size2;4:blue
'λx.apply(and[size2,triangle],iota(filter(x.s, apply(same_shape,x.o))))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(x.s, size1), size2)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2
'λx.apply(blue,iota(filter(x.s, and[apply(same_size,x.o),and[blue,size3]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:blue;4:size3
'λx.apply(and[apply(same_shape,iota(filter(x.s, size3))),and[size2,yellow]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:size2;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, yellow), rectangle), apply(same_shape,x.o)))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(apply(size-gt,iota(filter(filter(x.s, circle), triangle))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.exists(and[and[size2,iff[or[size2,apply(same_shape,x.o)],size2]],implies[green,rectangle]], filter(x.s, and[size1,and[not[green],circle]]))'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:size2;4:iff[%s,%s];4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2;4:implies[%s,%s];4:green;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:and[%s,%s];4:not[%s];4:green;4:circle
'λx.apply(nor[iff[size2,apply(same_color,x.o)],size2],iota(filter(filter(x.s, not[green]), blue)))'	0:apply(%s,%s);4:nor[%s,%s];4:iff[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:blue
'λx.apply(apply(size-lt,x.o),iota(filter(filter(filter(filter(filter(filter(x.s, yellow), iff[triangle,size3]), iff[triangle,triangle]), blue), or[size1,or[yellow,triangle]]), blue)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:iff[%s,%s];4:triangle;4:size3;4:iff[%s,%s];4:triangle;4:triangle;4:blue;4:or[%s,%s];4:size1;4:or[%s,%s];4:yellow;4:triangle;4:blue
'λx.contains(iota(x.s), filter(x.s, blue))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.empty(filter(filter(filter(x.s, triangle), circle), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle;4:size1
'λx.contains(iota(x.s), filter(filter(filter(x.s, green), apply(same_color,x.o)), and[not[rectangle],yellow]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:not[%s];4:rectangle;4:yellow
'λx.apply(and[and[size3,apply(same_size,x.o)],yellow],iota(filter(x.s, nand[apply(same_size,iota(x.s)),yellow])))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:yellow
'λx.forall(and[and[and[rectangle,or[apply(same_shape,iota(x.s)),size2]],size1],triangle],filter(x.s, and[size2,and[circle,green]]))'	0:forall(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size2;4:size1;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:and[%s,%s];4:circle;4:green
'λx.forall(size3,filter(filter(x.s, triangle), and[blue,size2]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:blue;4:size2
'λx.apply(and[and[green,blue],apply(same_color,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:green;4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.exists(circle, filter(filter(filter(filter(filter(x.s, circle), not[size3]), size3), apply(same_color,iota(x.s))), size2))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:size3;4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size2
'λx.apply(or[green,size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:size3;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(filter(x.s, apply(same_size,x.o)), nand[implies[apply(same_color,iota(filter(x.s, rectangle))),nand[yellow,size3]],rectangle]), size3)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:nand[%s,%s];4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:nand[%s,%s];4:yellow;4:size3;4:rectangle;4:size3
'λx.apply(size1,iota(filter(x.s, green)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(size2,iota(filter(filter(x.s, or[size2,implies[size2,not[triangle]]]), blue)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:implies[%s,%s];4:size2;4:not[%s];4:triangle;4:blue
'λx.apply(implies[not[blue],yellow],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:not[%s];4:blue;4:yellow;1:%s.o;2:x
'λx.empty(filter(x.s, not[triangle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.contains(iota(filter(x.s, yellow)), filter(x.s, yellow))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.forall(blue,filter(x.s, and[blue,and[size1,nor[iff[size3,size3],circle]]]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:and[%s,%s];4:size1;4:nor[%s,%s];4:iff[%s,%s];4:size3;4:size3;4:circle
'λx.contains(iota(x.s), filter(filter(x.s, and[triangle,triangle]), yellow))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:triangle;4:yellow
'λx.forall(not[apply(same_color,iota(filter(x.s, yellow)))],filter(x.s, size3))'	0:forall(%s,%s);4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.contains(x.o, filter(filter(x.s, rectangle), triangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle
'λx.contains(x.o, filter(filter(x.s, rectangle), or[green,and[not[and[apply(same_shape,iota(filter(x.s, triangle))),size3]],green]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:or[%s,%s];4:green;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3;4:green
'λx.empty(filter(x.s, nor[apply(same_color,x.o),not[green]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:green
'λx.apply(yellow,iota(filter(filter(filter(filter(filter(filter(x.s, rectangle), not[size3]), size2), implies[size1,yellow]), green), and[size2,iff[rectangle,and[or[rectangle,rectangle],green]]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:size3;4:size2;4:implies[%s,%s];4:size1;4:yellow;4:green;4:and[%s,%s];4:size2;4:iff[%s,%s];4:rectangle;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:rectangle;4:green
'λx.apply(and[and[blue,green],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:green;4:size1;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(filter(x.s, yellow), triangle), size1)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle;4:size1
'λx.apply(or[and[size3,size1],or[or[blue,and[apply(same_color,x.o),yellow]],size1]],iota(filter(filter(filter(x.s, size3), size3), apply(same_shape,x.o))))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size3;4:size1;4:or[%s,%s];4:or[%s,%s];4:blue;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(or[size1,yellow],iota(filter(filter(x.s, apply(same_shape,x.o)), apply(size-gt,x.o))))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.forall(not[size2],filter(filter(filter(filter(x.s, or[size2,or[not[apply(same_color,x.o)],circle]]), size2), yellow), triangle))'	0:forall(%s,%s);4:not[%s];4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;4:size2;4:yellow;4:triangle
'λx.forall(apply(same_shape,x.o),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(or[triangle,rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:rectangle;1:%s.o;2:x
'λx.apply(or[green,apply(same_shape,iota(filter(filter(filter(x.s, not[size1]), size2), triangle)))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:size2;4:triangle;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(x.s, apply(same_color,iota(x.s))), triangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:triangle
'λx.apply(or[size1,yellow],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(x.s, or[apply(size-geq,x.o),yellow])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:yellow
'λx.apply(iff[rectangle,rectangle],iota(filter(filter(x.s, size2), size3)))'	0:apply(%s,%s);4:iff[%s,%s];4:rectangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3
'λx.apply(and[yellow,green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(x.s, nand[implies[iff[or[implies[blue,circle],yellow],yellow],apply(same_size,iota(x.s))],circle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:implies[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:blue;4:circle;4:yellow;4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:circle
'λx.apply(or[and[not[circle],triangle],nand[circle,and[rectangle,size2]]],iota(filter(filter(filter(x.s, size2), or[implies[yellow,yellow],blue]), green)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:not[%s];4:circle;4:triangle;4:nand[%s,%s];4:circle;4:and[%s,%s];4:rectangle;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:implies[%s,%s];4:yellow;4:yellow;4:blue;4:green
'λx.forall(not[blue],filter(filter(x.s, or[triangle,size2]), apply(same_color,iota(x.s))))'	0:forall(%s,%s);4:not[%s];4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_color,x.o),iota(filter(x.s, size2)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.forall(rectangle,filter(x.s, apply(same_color,x.o)))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.forall(or[rectangle,or[yellow,circle]],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:rectangle;4:or[%s,%s];4:yellow;4:circle;3:%s.s;2:x
'λx.apply(and[not[green],iff[size1,yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:green;4:iff[%s,%s];4:size1;4:yellow;1:%s.o;2:x
'λx.apply(not[circle],iota(filter(filter(filter(x.s, rectangle), rectangle), blue)))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle;4:blue
'λx.apply(not[and[green,green]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:green;4:green;1:iota(%s);3:%s.s;2:x
'λx.exists(and[size1,size2], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:size1;4:size2;3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(x.s, green), green)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:green
'λx.apply(or[rectangle,apply(same_size,iota(x.s))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.empty(filter(x.s, yellow))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(and[circle,triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, size3)), filter(x.s, blue))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[green,and[blue,yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:blue;4:yellow;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(x.s, size2), blue)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue
'λx.apply(or[size1,or[triangle,or[size3,apply(size-leq,x.o)]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:or[%s,%s];4:triangle;4:or[%s,%s];4:size3;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(x.s, nor[yellow,green]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:yellow;4:green
'λx.contains(x.o, filter(filter(filter(filter(x.s, size2), size2), or[size3,size1]), size2))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2;4:or[%s,%s];4:size3;4:size1;4:size2
'λx.empty(filter(filter(x.s, iff[and[size3,iff[green,size2]],green]), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:and[%s,%s];4:size3;4:iff[%s,%s];4:green;4:size2;4:green;4:green
'λx.apply(green,iota(filter(x.s, not[green])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green
'λx.exists(implies[rectangle,or[not[triangle],size2]], filter(filter(x.s, yellow), size2))'	0:exists(%s, %s);4:implies[%s,%s];4:rectangle;4:or[%s,%s];4:not[%s];4:triangle;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2
'λx.apply(and[and[size1,not[iff[triangle,rectangle]]],or[nor[apply(same_size,x.o),green],apply(same_shape,x.o)]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:not[%s];4:iff[%s,%s];4:triangle;4:rectangle;4:or[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[green,and[not[and[apply(same_color,iota(filter(x.s, rectangle))),green]],yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green;4:yellow;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(x.s, size3), not[not[circle]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:not[%s];4:circle
'λx.apply(blue,iota(filter(x.s, apply(same_shape,iota(x.s)))))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(and[implies[size1,size3],not[size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:size1;4:size3;4:not[%s];4:size2;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, yellow), size2)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2
'λx.apply(apply(same_size,x.o),iota(filter(x.s, size3)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(and[and[blue,apply(size-lt,x.o)],and[size3,apply(size-gt,x.o)]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:and[%s,%s];4:size3;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(x.s, size2)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.forall(and[green,not[size3]],filter(filter(filter(x.s, blue), apply(same_color,iota(x.s))), yellow))'	0:forall(%s,%s);4:and[%s,%s];4:green;4:not[%s];4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:yellow
'λx.apply(and[not[implies[blue,and[not[size3],rectangle]]],circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:implies[%s,%s];4:blue;4:and[%s,%s];4:not[%s];4:size3;4:rectangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size3,rectangle],iota(filter(filter(x.s, size2), size1)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1
'λx.exists(apply(same_shape,iota(filter(x.s, not[blue]))), filter(filter(filter(x.s, size1), rectangle), blue))'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle;4:blue
'λx.apply(not[green],iota(filter(filter(x.s, size1), and[size2,size1])))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:size2;4:size1
'λx.contains(iota(x.s), filter(x.s, size1))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(yellow,iota(filter(x.s, and[yellow,size2])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size2
'λx.exists(yellow, filter(filter(x.s, circle), rectangle))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle
'λx.apply(apply(same_size,iota(filter(filter(filter(x.s, size1), apply(same_color,iota(filter(x.s, blue)))), size2))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2;1:%s.o;2:x
'λx.apply(apply(same_shape,x.o),iota(filter(x.s, and[green,circle])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:circle
'λx.exists(not[blue], x.s)'	0:exists(%s, %s);4:not[%s];4:blue;3:%s.s;2:x
'λx.apply(or[size2,blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:blue;1:%s.o;2:x
'λx.exists(and[green,yellow], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:green;4:yellow;3:%s.s;2:x
'λx.apply(not[yellow],iota(filter(filter(x.s, iff[iff[size3,and[and[yellow,yellow],green]],nor[blue,apply(same_size,iota(filter(filter(filter(x.s, yellow), size3), apply(same_color,iota(x.s)))))]]), nand[blue,triangle])))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:iff[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:yellow;4:yellow;4:green;4:nor[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:nand[%s,%s];4:blue;4:triangle
'λx.exists(or[rectangle,circle], filter(x.s, or[and[iff[not[green],and[size2,green]],size3],or[iff[green,or[size3,green]],iff[or[implies[yellow,or[size1,size3]],and[circle,apply(same_size,x.o)]],triangle]]]))'	0:exists(%s, %s);4:or[%s,%s];4:rectangle;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:not[%s];4:green;4:and[%s,%s];4:size2;4:green;4:size3;4:or[%s,%s];4:iff[%s,%s];4:green;4:or[%s,%s];4:size3;4:green;4:iff[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:yellow;4:or[%s,%s];4:size1;4:size3;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle
'λx.apply(size2,iota(filter(filter(x.s, not[and[triangle,size2]]), nor[size2,size1])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:triangle;4:size2;4:nor[%s,%s];4:size2;4:size1
'λx.exists(and[and[and[size3,size2],blue],size3], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:size2;4:blue;4:size3;3:%s.s;2:x
'λx.forall(triangle,filter(x.s, triangle))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(iff[and[size3,yellow],apply(size-geq,x.o)],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:size3;4:yellow;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[rectangle,size2],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(and[triangle,size2],iota(filter(filter(x.s, or[not[circle],and[rectangle,implies[or[green,apply(size-geq,x.o)],not[and[implies[circle,nand[blue,triangle]],yellow]]]]]), or[not[and[not[green],triangle]],rectangle])))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:circle;4:and[%s,%s];4:rectangle;4:implies[%s,%s];4:or[%s,%s];4:green;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:implies[%s,%s];4:circle;4:nand[%s,%s];4:blue;4:triangle;4:yellow;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:not[%s];4:green;4:triangle;4:rectangle
'λx.apply(not[and[iff[size1,green],and[size2,apply(same_shape,x.o)]]],iota(filter(x.s, and[not[blue],size1])))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:iff[%s,%s];4:size1;4:green;4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:blue;4:size1
'λx.apply(circle,iota(filter(filter(x.s, circle), size3)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3
'λx.forall(not[size1],filter(filter(filter(x.s, apply(size-gt,iota(x.s))), rectangle), triangle))'	0:forall(%s,%s);4:not[%s];4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:rectangle;4:triangle
'λx.forall(size1,filter(filter(x.s, rectangle), or[triangle,or[blue,size3]]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:or[%s,%s];4:triangle;4:or[%s,%s];4:blue;4:size3
'λx.apply(iff[yellow,size1],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:yellow;4:size1;1:%s.o;2:x
'λx.apply(and[not[blue],or[triangle,or[and[yellow,circle],and[size2,size1]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:blue;4:or[%s,%s];4:triangle;4:or[%s,%s];4:and[%s,%s];4:yellow;4:circle;4:and[%s,%s];4:size2;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(not[and[not[green],circle]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:green;4:circle;1:iota(%s);3:%s.s;2:x
'λx.exists(rectangle, filter(filter(x.s, circle), apply(size-lt,iota(x.s))))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x
'λx.apply(and[or[and[and[yellow,green],rectangle],nand[size1,or[size3,blue]]],and[yellow,blue]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:green;4:rectangle;4:nand[%s,%s];4:size1;4:or[%s,%s];4:size3;4:blue;4:and[%s,%s];4:yellow;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(filter(filter(filter(filter(filter(filter(x.s, size2), size2), iff[size3,not[and[size2,or[yellow,size3]]]]), not[and[rectangle,blue]]), size3), apply(size-geq,iota(x.s))), and[apply(same_shape,x.o),or[circle,size2]]), size1)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2;4:iff[%s,%s];4:size3;4:not[%s];4:and[%s,%s];4:size2;4:or[%s,%s];4:yellow;4:size3;4:not[%s];4:and[%s,%s];4:rectangle;4:blue;4:size3;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:circle;4:size2;4:size1
'λx.empty(filter(filter(filter(x.s, and[size3,blue]), or[size2,and[apply(same_size,iota(x.s)),rectangle]]), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:blue;4:or[%s,%s];4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:rectangle;4:green
'λx.apply(and[circle,size3],iota(filter(filter(filter(filter(filter(filter(x.s, blue), apply(size-lt,iota(filter(filter(x.s, green), size3)))), triangle), or[size3,yellow]), rectangle), or[size3,size2])))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size3;4:triangle;4:or[%s,%s];4:size3;4:yellow;4:rectangle;4:or[%s,%s];4:size3;4:size2
'λx.apply(size3,iota(filter(filter(filter(filter(filter(filter(x.s, size1), size1), yellow), green), and[blue,not[or[not[not[apply(same_shape,iota(filter(x.s, or[triangle,iff[size2,or[yellow,size2]]])))]],and[or[or[rectangle,green],size1],size1]]]]), rectangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1;4:yellow;4:green;4:and[%s,%s];4:blue;4:not[%s];4:or[%s,%s];4:not[%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:iff[%s,%s];4:size2;4:or[%s,%s];4:yellow;4:size2;4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:rectangle;4:green;4:size1;4:size1;4:rectangle
'λx.apply(or[rectangle,blue],iota(filter(filter(x.s, yellow), size1)))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1
'λx.apply(and[or[not[size3],triangle],or[blue,apply(same_shape,iota(filter(x.s, green)))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:not[%s];4:size3;4:triangle;4:or[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;1:%s.o;2:x
'λx.exists(and[yellow,triangle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:yellow;4:triangle;3:%s.s;2:x
'λx.contains(iota(filter(x.s, rectangle)), filter(filter(filter(x.s, or[and[size3,blue],yellow]), yellow), implies[implies[rectangle,size1],size2]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size3;4:blue;4:yellow;4:yellow;4:implies[%s,%s];4:implies[%s,%s];4:rectangle;4:size1;4:size2
'λx.contains(x.o, filter(x.s, and[size2,not[or[rectangle,and[nand[apply(same_size,x.o),circle],not[rectangle]]]]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:not[%s];4:or[%s,%s];4:rectangle;4:and[%s,%s];4:nand[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;4:not[%s];4:rectangle
'λx.apply(and[or[size1,rectangle],circle],iota(filter(x.s, apply(same_color,x.o))))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size1;4:rectangle;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(and[size1,circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(filter(filter(filter(x.s, yellow), size3), rectangle), not[yellow]), apply(size-gt,x.o))))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size3;4:rectangle;4:not[%s];4:yellow;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.apply(and[blue,size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:size3;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, not[implies[green,rectangle]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:implies[%s,%s];4:green;4:rectangle;3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, and[circle,circle]), circle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:circle;4:circle
'λx.apply(or[not[size2],rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:size2;4:rectangle;1:%s.o;2:x
'λx.apply(not[rectangle],iota(filter(filter(filter(x.s, size3), and[size1,size1]), nand[circle,circle])))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:size1;4:size1;4:nand[%s,%s];4:circle;4:circle
'λx.apply(circle,iota(filter(filter(filter(x.s, and[or[and[triangle,implies[blue,blue]],not[green]],size1]), triangle), or[blue,size2])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:triangle;4:implies[%s,%s];4:blue;4:blue;4:not[%s];4:green;4:size1;4:triangle;4:or[%s,%s];4:blue;4:size2
'λx.apply(or[blue,and[yellow,size2]],iota(filter(filter(x.s, yellow), size3)))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:and[%s,%s];4:yellow;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size3
'λx.empty(filter(filter(filter(filter(x.s, size1), green), size3), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green;4:size3;4:blue
'λx.apply(and[nand[and[yellow,green],rectangle],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:yellow;4:green;4:rectangle;4:triangle;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, blue), size1)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1
'λx.apply(apply(size-lt,iota(x.s)),iota(filter(filter(filter(x.s, blue), size1), circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1;4:circle
'λx.contains(iota(filter(filter(filter(x.s, rectangle), apply(same_shape,iota(x.s))), green)), filter(filter(x.s, and[or[green,and[triangle,implies[green,size1]]],or[apply(same_color,iota(filter(filter(x.s, not[or[nand[size1,and[circle,yellow]],size2]]), size3))),size3]]), and[yellow,size3]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:green;4:and[%s,%s];4:triangle;4:implies[%s,%s];4:green;4:size1;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:nand[%s,%s];4:size1;4:and[%s,%s];4:circle;4:yellow;4:size2;4:size3;4:size3;4:and[%s,%s];4:yellow;4:size3
'λx.apply(size1,iota(filter(filter(x.s, blue), or[green,blue])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:green;4:blue
'λx.forall(apply(same_size,x.o),filter(filter(filter(x.s, apply(same_size,x.o)), nand[not[and[blue,blue]],implies[size3,rectangle]]), rectangle))'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:nand[%s,%s];4:not[%s];4:and[%s,%s];4:blue;4:blue;4:implies[%s,%s];4:size3;4:rectangle;4:rectangle
'λx.apply(nand[blue,nor[apply(size-leq,x.o),triangle]],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:blue;4:nor[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(x.s, iff[nand[blue,triangle],blue])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:nand[%s,%s];4:blue;4:triangle;4:blue
'λx.apply(or[circle,or[blue,size1]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:or[%s,%s];4:blue;4:size1;1:%s.o;2:x
'λx.apply(and[and[or[size1,size2],size1],iff[and[yellow,apply(same_size,x.o)],or[blue,triangle]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size1;4:size2;4:size1;4:iff[%s,%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:blue;4:triangle;1:%s.o;2:x
'λx.apply(apply(same_color,iota(x.s)),iota(filter(x.s, circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.empty(filter(x.s, and[or[blue,apply(same_shape,x.o)],green]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green
'λx.apply(and[size2,apply(same_shape,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(filter(x.s, yellow), green), yellow)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green;4:yellow
'λx.apply(size1,iota(filter(filter(x.s, not[green]), size3)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:size3
'λx.apply(rectangle,iota(filter(x.s, not[size1])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1
'λx.apply(or[and[rectangle,yellow],circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:rectangle;4:yellow;4:circle;1:%s.o;2:x
'λx.contains(iota(filter(x.s, or[yellow,green])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:green;3:%s.s;2:x
'λx.apply(or[size3,or[blue,yellow]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:or[%s,%s];4:blue;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(x.s, and[circle,and[circle,size2]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:and[%s,%s];4:circle;4:size2
'λx.forall(blue,filter(filter(x.s, apply(same_shape,x.o)), yellow))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow
'λx.apply(and[size2,blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:blue;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, apply(size-gt,x.o)), nand[yellow,or[size1,and[triangle,not[size1]]]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:nand[%s,%s];4:yellow;4:or[%s,%s];4:size1;4:and[%s,%s];4:triangle;4:not[%s];4:size1
'λx.exists(iff[green,and[circle,not[and[and[apply(size-lt,x.o),not[nand[blue,size3]]],yellow]]]], x.s)'	0:exists(%s, %s);4:iff[%s,%s];4:green;4:and[%s,%s];4:circle;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:not[%s];4:nand[%s,%s];4:blue;4:size3;4:yellow;3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(filter(filter(filter(filter(filter(x.s, size3), and[green,not[size2]]), implies[triangle,size2]), or[size2,circle]), rectangle), not[size2]), and[rectangle,yellow])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:green;4:not[%s];4:size2;4:implies[%s,%s];4:triangle;4:size2;4:or[%s,%s];4:size2;4:circle;4:rectangle;4:not[%s];4:size2;4:and[%s,%s];4:rectangle;4:yellow
'λx.apply(apply(size-leq,x.o),iota(filter(x.s, and[and[and[size3,apply(size-gt,x.o)],implies[green,circle]],yellow])))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:implies[%s,%s];4:green;4:circle;4:yellow
'λx.empty(filter(filter(filter(filter(x.s, apply(same_color,iota(filter(x.s, rectangle)))), triangle), apply(same_size,x.o)), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow
'λx.apply(or[size1,rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:rectangle;1:%s.o;2:x
'λx.exists(or[or[and[not[not[and[size3,circle]]],size1],size2],size3], filter(filter(filter(x.s, and[and[apply(size-gt,x.o),apply(size-leq,x.o)],circle]), size3), size3))'	0:exists(%s, %s);4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:not[%s];4:not[%s];4:and[%s,%s];4:size3;4:circle;4:size1;4:size2;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:circle;4:size3;4:size3
'λx.apply(and[yellow,not[and[apply(same_color,x.o),size3]]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[green,not[apply(size-lt,x.o)]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:not[%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:%s.o;2:x
'λx.exists(blue, filter(x.s, size2))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(not[not[or[size3,size2]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:or[%s,%s];4:size3;4:size2;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, blue), triangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle
'λx.apply(apply(size-gt,iota(filter(x.s, circle))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[nor[or[circle,circle],size3],blue],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:circle;4:circle;4:size3;4:blue;1:%s.o;2:x
'λx.exists(and[triangle,triangle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:triangle;4:triangle;3:%s.s;2:x
'λx.exists(rectangle, filter(x.s, or[or[green,or[circle,rectangle]],or[blue,and[triangle,not[or[not[implies[blue,size2]],apply(same_shape,x.o)]]]]]))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:green;4:or[%s,%s];4:circle;4:rectangle;4:or[%s,%s];4:blue;4:and[%s,%s];4:triangle;4:not[%s];4:or[%s,%s];4:not[%s];4:implies[%s,%s];4:blue;4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.forall(triangle,filter(x.s, size1))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(and[size2,and[size2,size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:size2;4:size3;1:%s.o;2:x
'λx.apply(and[apply(size-leq,x.o),blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(and[circle,triangle],iota(filter(x.s, not[size2])))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2
'λx.apply(size2,iota(filter(filter(filter(filter(x.s, circle), green), green), circle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green;4:green;4:circle
'λx.apply(iff[green,size1],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:green;4:size1;1:%s.o;2:x
'λx.apply(or[triangle,and[blue,triangle]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:and[%s,%s];4:blue;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[and[size3,yellow],yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size3;4:yellow;4:yellow;1:%s.o;2:x
'λx.apply(and[iff[triangle,rectangle],nor[size2,size2]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:triangle;4:rectangle;4:nor[%s,%s];4:size2;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[circle,circle],iota(filter(filter(filter(filter(filter(filter(filter(x.s, and[triangle,not[yellow]]), yellow), size1), and[and[green,apply(size-lt,x.o)],triangle]), iff[circle,not[nor[size1,size1]]]), circle), size1)))'	0:apply(%s,%s);4:nor[%s,%s];4:circle;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:not[%s];4:yellow;4:yellow;4:size1;4:and[%s,%s];4:and[%s,%s];4:green;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:triangle;4:iff[%s,%s];4:circle;4:not[%s];4:nor[%s,%s];4:size1;4:size1;4:circle;4:size1
'λx.apply(and[yellow,triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:triangle;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, size2), size1))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1
'λx.apply(or[size3,yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:yellow;1:%s.o;2:x
'λx.empty(filter(filter(x.s, apply(same_shape,iota(filter(x.s, size3)))), apply(same_color,iota(x.s))))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[blue,circle],and[apply(size-gt,iota(x.s)),apply(same_size,iota(x.s))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:circle;4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.contains(iota(filter(x.s, not[triangle])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;3:%s.s;2:x
'λx.apply(and[size2,apply(same_color,iota(filter(x.s, size1)))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;1:%s.o;2:x
'λx.apply(or[triangle,iff[apply(same_color,iota(x.s)),and[not[or[size1,size1]],blue]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:iff[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:or[%s,%s];4:size1;4:size1;4:blue;1:%s.o;2:x
'λx.apply(apply(same_size,x.o),iota(filter(filter(x.s, not[size3]), size2)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;4:size2
'λx.contains(iota(filter(filter(filter(x.s, size1), circle), and[apply(same_color,iota(x.s)),or[rectangle,blue]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:blue;3:%s.s;2:x
'λx.empty(filter(filter(filter(filter(x.s, apply(same_color,x.o)), size3), green), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3;4:green;4:blue
'λx.exists(blue, filter(x.s, not[and[rectangle,yellow]]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:rectangle;4:yellow
'λx.apply(size3,iota(filter(x.s, not[not[not[size3]]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:not[%s];4:size3
'λx.apply(apply(same_shape,x.o),iota(filter(filter(x.s, implies[yellow,and[rectangle,triangle]]), size3)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:yellow;4:and[%s,%s];4:rectangle;4:triangle;4:size3
'λx.exists(or[size1,triangle], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:size1;4:triangle;3:%s.s;2:x
'λx.apply(or[circle,not[yellow]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:not[%s];4:yellow;1:%s.o;2:x
'λx.exists(size3, filter(x.s, nand[or[not[size1],not[and[size3,yellow]]],circle]))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:or[%s,%s];4:not[%s];4:size1;4:not[%s];4:and[%s,%s];4:size3;4:yellow;4:circle
'λx.forall(iff[apply(same_color,iota(x.s)),yellow],filter(x.s, size3))'	0:forall(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(and[iff[nand[not[size2],circle],size2],triangle],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:nand[%s,%s];4:not[%s];4:size2;4:circle;4:size2;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(circle,iota(filter(filter(x.s, size1), triangle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle
'λx.apply(or[triangle,size2],iota(filter(filter(filter(filter(filter(filter(filter(filter(filter(filter(x.s, circle), size1), green), rectangle), apply(size-leq,x.o)), size3), blue), size2), and[green,size2]), size3)))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1;4:green;4:rectangle;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size3;4:blue;4:size2;4:and[%s,%s];4:green;4:size2;4:size3
'λx.apply(size2,iota(filter(x.s, size2)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.exists(or[not[nand[yellow,and[size3,size2]]],and[rectangle,nand[triangle,size2]]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:not[%s];4:nand[%s,%s];4:yellow;4:and[%s,%s];4:size3;4:size2;4:and[%s,%s];4:rectangle;4:nand[%s,%s];4:triangle;4:size2;3:%s.s;2:x
'λx.apply(apply(same_color,x.o),iota(filter(filter(filter(x.s, rectangle), not[apply(same_size,x.o)]), or[and[yellow,size3],size3])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:and[%s,%s];4:yellow;4:size3;4:size3
'λx.apply(size1,iota(filter(x.s, and[circle,circle])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:circle
'λx.apply(and[green,apply(same_shape,x.o)],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, triangle), size3), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3;4:circle
'λx.apply(circle,iota(filter(x.s, or[green,and[circle,blue]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:and[%s,%s];4:circle;4:blue
'λx.apply(or[size1,blue],iota(filter(filter(filter(filter(filter(x.s, and[triangle,blue]), rectangle), size1), and[triangle,size1]), or[blue,nand[size3,size1]])))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:blue;4:rectangle;4:size1;4:and[%s,%s];4:triangle;4:size1;4:or[%s,%s];4:blue;4:nand[%s,%s];4:size3;4:size1
'λx.apply(or[or[rectangle,not[triangle]],blue],iota(filter(x.s, not[triangle])))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:rectangle;4:not[%s];4:triangle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.apply(and[or[triangle,apply(size-lt,x.o)],not[size2]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:triangle;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:not[%s];4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(filter(filter(x.s, blue), green), and[rectangle,size1]), green)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green;4:and[%s,%s];4:rectangle;4:size1;4:green
'λx.apply(nand[size1,blue],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size1;4:blue;1:%s.o;2:x
'λx.apply(or[size3,size1],iota(filter(filter(filter(filter(filter(filter(x.s, triangle), size2), size3), and[size3,apply(same_color,x.o)]), not[or[blue,size2]]), and[size1,blue])))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2;4:size3;4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:or[%s,%s];4:blue;4:size2;4:and[%s,%s];4:size1;4:blue
'λx.forall(or[yellow,green],filter(filter(filter(filter(filter(x.s, size2), size3), triangle), triangle), size3))'	0:forall(%s,%s);4:or[%s,%s];4:yellow;4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3;4:triangle;4:triangle;4:size3
'λx.apply(not[and[nand[or[green,implies[and[triangle,not[not[circle]]],yellow]],and[green,size3]],triangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:green;4:implies[%s,%s];4:and[%s,%s];4:triangle;4:not[%s];4:not[%s];4:circle;4:yellow;4:and[%s,%s];4:green;4:size3;4:triangle;1:%s.o;2:x
'λx.apply(iff[blue,iff[rectangle,circle]],iota(filter(filter(x.s, blue), rectangle)))'	0:apply(%s,%s);4:iff[%s,%s];4:blue;4:iff[%s,%s];4:rectangle;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle
'λx.empty(filter(x.s, and[size1,apply(same_shape,iota(filter(x.s, and[rectangle,size2])))]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:size2
'λx.apply(or[circle,nor[size2,size3]],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:nor[%s,%s];4:size2;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.contains(iota(filter(filter(filter(filter(x.s, and[iff[and[apply(same_color,iota(x.s)),apply(size-leq,x.o)],size2],triangle]), size3), size3), yellow)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size2;4:triangle;4:size3;4:size3;4:yellow;3:%s.s;2:x
'λx.apply(and[apply(same_color,x.o),blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue;1:iota(%s);3:%s.s;2:x
'λx.exists(size2, filter(x.s, yellow))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.contains(iota(filter(filter(filter(x.s, implies[yellow,and[not[triangle],yellow]]), size2), green)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:yellow;4:and[%s,%s];4:not[%s];4:triangle;4:yellow;4:size2;4:green;3:%s.s;2:x
'λx.apply(and[rectangle,apply(same_size,x.o)],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size3,and[rectangle,size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:rectangle;4:size1;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(x.s, nor[size2,triangle]), or[size1,yellow]), not[triangle]), or[circle,size2]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size2;4:triangle;4:or[%s,%s];4:size1;4:yellow;4:not[%s];4:triangle;4:or[%s,%s];4:circle;4:size2
'λx.apply(iff[circle,rectangle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:circle;4:rectangle;1:%s.o;2:x
'λx.apply(and[or[green,and[blue,nand[rectangle,circle]]],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:green;4:and[%s,%s];4:blue;4:nand[%s,%s];4:rectangle;4:circle;4:green;1:%s.o;2:x
'λx.apply(and[circle,green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:green;1:iota(%s);3:%s.s;2:x
'λx.exists(implies[green,and[apply(same_shape,iota(x.s)),not[size2]]], x.s)'	0:exists(%s, %s);4:implies[%s,%s];4:green;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:not[%s];4:size2;3:%s.s;2:x
'λx.apply(and[or[size1,size1],apply(same_size,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size1;4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.empty(filter(filter(x.s, blue), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle
'λx.apply(or[and[yellow,blue],yellow],iota(filter(filter(x.s, circle), nor[size1,apply(same_size,x.o)])))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:yellow;4:blue;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:nor[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.forall(green,filter(filter(x.s, triangle), size1))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size1
'λx.apply(not[green],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(circle,iota(filter(x.s, and[blue,apply(same_shape,x.o)])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(not[and[size3,size1]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size3;4:size1;1:%s.o;2:x
'λx.apply(or[apply(same_size,iota(filter(filter(x.s, not[blue]), blue))),size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:blue;4:size3;1:%s.o;2:x
'λx.exists(and[blue,size2], filter(x.s, yellow))'	0:exists(%s, %s);4:and[%s,%s];4:blue;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(or[rectangle,rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:rectangle;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, rectangle), and[size2,size1]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:size2;4:size1
'λx.apply(or[and[rectangle,blue],green],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:rectangle;4:blue;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(x.s, and[rectangle,apply(size-gt,x.o)])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.empty(filter(x.s, or[triangle,green]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:green
'λx.forall(apply(same_shape,iota(filter(x.s, apply(size-leq,iota(x.s))))),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.exists(green, filter(filter(x.s, triangle), apply(same_size,x.o)))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(and[size1,yellow],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(size2,iota(filter(filter(x.s, size1), size1)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1
'λx.apply(or[not[not[circle]],and[yellow,triangle]],iota(filter(x.s, apply(same_shape,x.o))))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:not[%s];4:circle;4:and[%s,%s];4:yellow;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.forall(green,filter(x.s, size3))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(circle,iota(filter(filter(filter(x.s, triangle), apply(same_size,x.o)), green)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green
'λx.forall(or[size1,nand[green,size2]],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:size1;4:nand[%s,%s];4:green;4:size2;3:%s.s;2:x
'λx.apply(and[blue,green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:green;1:%s.o;2:x
'λx.apply(and[yellow,and[size1,iff[not[blue],triangle]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:and[%s,%s];4:size1;4:iff[%s,%s];4:not[%s];4:blue;4:triangle;1:%s.o;2:x
'λx.exists(apply(same_size,x.o), filter(x.s, not[size1]))'	0:exists(%s, %s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1
'λx.contains(x.o, filter(filter(filter(filter(filter(x.s, or[nand[circle,triangle],and[circle,or[nand[blue,yellow],green]]]), green), size3), not[green]), and[circle,triangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:nand[%s,%s];4:circle;4:triangle;4:and[%s,%s];4:circle;4:or[%s,%s];4:nand[%s,%s];4:blue;4:yellow;4:green;4:green;4:size3;4:not[%s];4:green;4:and[%s,%s];4:circle;4:triangle
'λx.empty(filter(filter(x.s, rectangle), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle
'λx.contains(iota(x.s), filter(x.s, nand[blue,apply(size-geq,x.o)]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:blue;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.forall(size3,filter(filter(x.s, blue), green))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green
'λx.apply(and[yellow,blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:blue;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, green)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.forall(apply(same_size,iota(x.s)),filter(x.s, not[rectangle]))'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle
'λx.exists(or[size2,size2], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:size2;4:size2;3:%s.s;2:x
'λx.apply(and[not[green],not[and[circle,size1]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:green;4:not[%s];4:and[%s,%s];4:circle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[size2,not[yellow]],triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size2;4:not[%s];4:yellow;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[circle,and[and[yellow,rectangle],and[green,not[yellow]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:yellow;4:rectangle;4:and[%s,%s];4:green;4:not[%s];4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(and[not[size1],nand[green,green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size1;4:nand[%s,%s];4:green;4:green;1:%s.o;2:x
'λx.apply(or[and[triangle,size1],apply(same_shape,iota(filter(filter(filter(x.s, size2), triangle), size3)))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:triangle;4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:triangle;4:size3;1:%s.o;2:x
'λx.apply(iff[size3,size3],iota(filter(x.s, or[or[green,not[size1]],triangle])))'	0:apply(%s,%s);4:iff[%s,%s];4:size3;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:green;4:not[%s];4:size1;4:triangle
'λx.contains(iota(x.s), filter(filter(filter(filter(filter(filter(x.s, triangle), blue), triangle), nor[size3,rectangle]), or[size1,or[size1,triangle]]), yellow))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue;4:triangle;4:nor[%s,%s];4:size3;4:rectangle;4:or[%s,%s];4:size1;4:or[%s,%s];4:size1;4:triangle;4:yellow
'λx.apply(and[apply(same_color,x.o),or[blue,blue]],iota(filter(x.s, or[triangle,blue])))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:or[%s,%s];4:blue;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:blue
'λx.apply(nor[and[size2,size1],circle],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:size2;4:size1;4:circle;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, nor[not[size1],apply(size-lt,iota(x.s))]), and[or[not[yellow],triangle],implies[rectangle,and[circle,and[and[yellow,not[size3]],blue]]]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:not[%s];4:size1;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:yellow;4:triangle;4:implies[%s,%s];4:rectangle;4:and[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:yellow;4:not[%s];4:size3;4:blue
'λx.forall(and[implies[and[yellow,apply(same_size,iota(x.s))],rectangle],circle],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:rectangle;4:circle;3:%s.s;2:x
'λx.apply(blue,iota(filter(x.s, green)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[green,size3],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.forall(implies[iff[size1,or[not[nand[size2,and[and[yellow,size2],size3]]],rectangle]],rectangle],filter(x.s, circle))'	0:forall(%s,%s);4:implies[%s,%s];4:iff[%s,%s];4:size1;4:or[%s,%s];4:not[%s];4:nand[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:yellow;4:size2;4:size3;4:rectangle;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.contains(iota(x.s), filter(filter(filter(x.s, blue), rectangle), size3))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle;4:size3
'λx.apply(circle,iota(filter(x.s, not[size2])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2
'λx.apply(yellow,iota(filter(x.s, not[or[and[circle,yellow],green]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:circle;4:yellow;4:green
'λx.apply(not[apply(same_color,x.o)],iota(filter(filter(filter(x.s, nor[or[green,size1],size2]), blue), size1)))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:or[%s,%s];4:green;4:size1;4:size2;4:blue;4:size1
'λx.forall(apply(same_size,iota(filter(x.s, and[not[or[blue,size1]],size3]))),filter(x.s, or[green,circle]))'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:or[%s,%s];4:blue;4:size1;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:circle
'λx.apply(and[not[rectangle],green],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:rectangle;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.contains(iota(x.s), filter(x.s, not[circle]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.apply(rectangle,iota(filter(filter(filter(filter(filter(x.s, yellow), and[size3,size2]), size3), size2), blue)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:size3;4:size2;4:size3;4:size2;4:blue
'λx.apply(triangle,iota(filter(filter(filter(filter(filter(x.s, nand[not[circle],blue]), size3), yellow), implies[size1,size2]), apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:not[%s];4:circle;4:blue;4:size3;4:yellow;4:implies[%s,%s];4:size1;4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(x.s, yellow), yellow)), filter(filter(filter(x.s, size1), and[size2,rectangle]), yellow))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:size2;4:rectangle;4:yellow
'λx.forall(rectangle,filter(filter(filter(filter(filter(x.s, iff[size3,green]), not[not[size2]]), blue), yellow), triangle))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size3;4:green;4:not[%s];4:not[%s];4:size2;4:blue;4:yellow;4:triangle
'λx.apply(and[green,or[apply(same_shape,x.o),green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green;1:%s.o;2:x
'λx.apply(or[apply(same_color,x.o),circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;1:%s.o;2:x
'λx.contains(iota(filter(x.s, and[apply(same_shape,x.o),nor[apply(same_shape,x.o),size1]])), filter(filter(filter(filter(x.s, or[size2,and[and[and[not[size3],size3],triangle],or[or[yellow,rectangle],circle]]]), yellow), blue), or[and[not[size3],rectangle],and[or[green,triangle],yellow]]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size3;4:size3;4:triangle;4:or[%s,%s];4:or[%s,%s];4:yellow;4:rectangle;4:circle;4:yellow;4:blue;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:size3;4:rectangle;4:and[%s,%s];4:or[%s,%s];4:green;4:triangle;4:yellow
'λx.exists(iff[green,yellow], filter(filter(x.s, size1), size2))'	0:exists(%s, %s);4:iff[%s,%s];4:green;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2
'λx.apply(and[blue,or[not[size2],not[size3]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:or[%s,%s];4:not[%s];4:size2;4:not[%s];4:size3;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(x.s, and[size3,yellow]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:yellow
'λx.apply(or[yellow,apply(size-gt,x.o)],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_shape,iota(filter(filter(x.s, rectangle), blue))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(filter(filter(filter(filter(filter(filter(filter(x.s, triangle), size2), and[nor[not[size3],size3],circle]), nor[size3,apply(same_color,x.o)]), apply(same_color,iota(x.s))), implies[and[size3,yellow],rectangle]), size1), blue), green)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2;4:and[%s,%s];4:nor[%s,%s];4:not[%s];4:size3;4:size3;4:circle;4:nor[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:implies[%s,%s];4:and[%s,%s];4:size3;4:yellow;4:rectangle;4:size1;4:blue;4:green
'λx.apply(green,iota(filter(filter(filter(x.s, triangle), implies[size3,not[circle]]), blue)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:implies[%s,%s];4:size3;4:not[%s];4:circle;4:blue
'λx.apply(iff[iff[yellow,size1],and[circle,or[yellow,yellow]]],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:iff[%s,%s];4:yellow;4:size1;4:and[%s,%s];4:circle;4:or[%s,%s];4:yellow;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(x.s, rectangle), nor[rectangle,nand[apply(same_shape,x.o),and[blue,and[apply(same_shape,iota(x.s)),not[not[not[yellow]]]]]]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:nor[%s,%s];4:rectangle;4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:blue;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:not[%s];4:not[%s];4:not[%s];4:yellow
'λx.apply(not[triangle],iota(filter(x.s, nand[triangle,nand[apply(same_shape,x.o),size2]])))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:triangle;4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2
'λx.apply(and[size3,and[yellow,size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:yellow;4:size2;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(filter(filter(x.s, size1), or[size2,size1]), size3), triangle), blue), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:or[%s,%s];4:size2;4:size1;4:size3;4:triangle;4:blue;4:size2
'λx.contains(iota(filter(filter(filter(x.s, blue), or[size2,triangle]), size1)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:size2;4:triangle;4:size1;3:%s.s;2:x
'λx.apply(and[and[triangle,or[blue,not[size2]]],triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:or[%s,%s];4:blue;4:not[%s];4:size2;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.exists(triangle, filter(filter(filter(filter(x.s, rectangle), size2), not[green]), triangle))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2;4:not[%s];4:green;4:triangle
'λx.forall(not[or[circle,size1]],x.s)'	0:forall(%s,%s);4:not[%s];4:or[%s,%s];4:circle;4:size1;3:%s.s;2:x
'λx.apply(green,iota(filter(filter(x.s, apply(same_shape,x.o)), size2)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2
'λx.apply(size1,iota(filter(filter(filter(x.s, size2), or[size3,apply(same_shape,iota(filter(x.s, rectangle)))]), yellow)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:yellow
'λx.apply(not[iff[circle,and[not[rectangle],or[rectangle,size2]]]],iota(filter(x.s, and[and[and[not[nand[green,yellow]],and[size2,green]],and[triangle,yellow]],circle])))'	0:apply(%s,%s);4:not[%s];4:iff[%s,%s];4:circle;4:and[%s,%s];4:not[%s];4:rectangle;4:or[%s,%s];4:rectangle;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:nand[%s,%s];4:green;4:yellow;4:and[%s,%s];4:size2;4:green;4:and[%s,%s];4:triangle;4:yellow;4:circle
'λx.apply(nor[size3,or[green,size3]],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:size3;4:or[%s,%s];4:green;4:size3;1:iota(%s);3:%s.s;2:x
'λx.forall(and[green,and[green,blue]],filter(x.s, circle))'	0:forall(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:green;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[and[yellow,and[apply(same_color,x.o),and[or[apply(same_size,x.o),size2],yellow]]],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2;4:yellow;4:green;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(filter(x.s, circle), apply(same_color,x.o)), green)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green
'λx.apply(or[circle,not[not[apply(same_shape,iota(x.s))]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:not[%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size3,size2],iota(filter(x.s, not[and[size2,apply(same_size,x.o)]])))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.exists(iff[apply(same_color,iota(filter(filter(filter(x.s, green), iff[rectangle,blue]), green))),rectangle], x.s)'	0:exists(%s, %s);4:iff[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:iff[%s,%s];4:rectangle;4:blue;4:green;4:rectangle;3:%s.s;2:x
'λx.contains(iota(x.s), filter(filter(x.s, size1), implies[yellow,blue]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:implies[%s,%s];4:yellow;4:blue
'λx.empty(filter(filter(x.s, circle), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle
'λx.apply(size2,iota(filter(x.s, circle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(or[size1,circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:circle;1:%s.o;2:x
'λx.forall(iff[size2,apply(same_color,x.o)],x.s)'	0:forall(%s,%s);4:iff[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(not[not[not[and[circle,triangle]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:not[%s];4:and[%s,%s];4:circle;4:triangle;1:%s.o;2:x
'λx.apply(not[size1],iota(filter(filter(x.s, triangle), green)))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green
'λx.apply(or[not[triangle],size3],iota(filter(filter(x.s, apply(same_size,iota(x.s))), blue)))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:triangle;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:blue
'λx.apply(rectangle,iota(filter(x.s, nand[apply(same_size,x.o),apply(same_color,x.o)])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.exists(rectangle, filter(filter(x.s, size3), size1))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size1
'λx.forall(size3,filter(x.s, size1))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(and[apply(same_color,x.o),iff[size3,green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:iff[%s,%s];4:size3;4:green;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, apply(same_shape,x.o))))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(and[triangle,green],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(not[yellow],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.exists(size1, filter(x.s, and[blue,triangle]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:triangle
'λx.exists(rectangle, filter(x.s, blue))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.exists(rectangle, filter(x.s, and[apply(same_shape,x.o),size2]))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2
'λx.apply(iff[size3,size3],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:size3;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[blue,and[not[apply(same_size,iota(filter(filter(x.s, size1), blue)))],apply(same_size,iota(filter(x.s, or[size2,rectangle])))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:rectangle;1:%s.o;2:x
'λx.exists(size1, filter(filter(filter(x.s, size3), or[size1,circle]), not[size3]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:size1;4:circle;4:not[%s];4:size3
'λx.apply(not[green],iota(filter(filter(filter(filter(x.s, size3), rectangle), triangle), apply(size-geq,x.o))))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle;4:triangle;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, and[size1,size1])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size1
'λx.apply(and[green,size3],iota(filter(filter(x.s, size3), or[rectangle,yellow])))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:rectangle;4:yellow
'λx.exists(not[and[green,or[iff[size1,size1],and[iff[nand[size3,apply(same_color,iota(x.s))],nor[size1,size3]],size3]]]], filter(x.s, circle))'	0:exists(%s, %s);4:not[%s];4:and[%s,%s];4:green;4:or[%s,%s];4:iff[%s,%s];4:size1;4:size1;4:and[%s,%s];4:iff[%s,%s];4:nand[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:nor[%s,%s];4:size1;4:size3;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.exists(apply(size-gt,x.o), filter(x.s, size3))'	0:exists(%s, %s);4:apply(%s,%s);5:size-gt;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.forall(not[triangle],filter(filter(x.s, and[size3,yellow]), size1))'	0:forall(%s,%s);4:not[%s];4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:yellow;4:size1
'λx.exists(implies[blue,not[size2]], filter(filter(filter(x.s, triangle), triangle), apply(size-geq,iota(filter(x.s, yellow)))))'	0:exists(%s, %s);4:implies[%s,%s];4:blue;4:not[%s];4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:triangle;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(and[and[triangle,not[and[and[not[and[size3,and[nor[rectangle,triangle],size2]]],size2],triangle]]],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:nor[%s,%s];4:rectangle;4:triangle;4:size2;4:size2;4:triangle;4:green;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, rectangle), triangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle
'λx.apply(size3,iota(filter(x.s, not[and[circle,green]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:circle;4:green
'λx.apply(yellow,iota(filter(filter(x.s, iff[blue,or[and[triangle,and[apply(size-lt,x.o),apply(same_shape,iota(filter(x.s, size2)))]],rectangle]]), blue)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:blue;4:or[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle;4:blue
'λx.contains(iota(filter(filter(x.s, triangle), rectangle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle;3:%s.s;2:x
'λx.apply(not[apply(same_size,iota(filter(x.s, and[size3,apply(same_shape,iota(x.s))])))],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(not[nor[and[yellow,apply(same_shape,iota(filter(x.s, size1)))],or[green,triangle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:nor[%s,%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:or[%s,%s];4:green;4:triangle;1:%s.o;2:x
'λx.apply(and[and[not[rectangle],size2],apply(same_shape,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:rectangle;4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(and[and[and[green,and[circle,circle]],rectangle],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:circle;4:circle;4:rectangle;4:yellow;1:%s.o;2:x
'λx.apply(or[or[yellow,size1],and[blue,green]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:yellow;4:size1;4:and[%s,%s];4:blue;4:green;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(filter(filter(x.s, size1), size3), nand[yellow,triangle]), not[nor[circle,triangle]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size3;4:nand[%s,%s];4:yellow;4:triangle;4:not[%s];4:nor[%s,%s];4:circle;4:triangle;3:%s.s;2:x
'λx.exists(or[and[size3,apply(same_color,iota(filter(x.s, and[blue,blue])))],apply(size-gt,x.o)], filter(x.s, apply(same_color,x.o)))'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:blue;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(x.s, implies[circle,blue]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:circle;4:blue;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, not[size1]), apply(same_size,x.o))))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(x.s, size1), not[yellow])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:not[%s];4:yellow
'λx.apply(and[and[circle,size1],and[blue,size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:size1;4:and[%s,%s];4:blue;4:size2;1:%s.o;2:x
'λx.exists(size1, x.s)'	0:exists(%s, %s);4:size1;3:%s.s;2:x
'λx.apply(not[apply(same_shape,iota(filter(x.s, yellow)))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(filter(x.s, green), and[or[and[apply(same_shape,iota(x.s)),implies[size1,circle]],size1],size1]), size1))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:implies[%s,%s];4:size1;4:circle;4:size1;4:size1;4:size1
'λx.apply(circle,iota(filter(filter(filter(x.s, yellow), not[circle]), nor[nand[implies[blue,triangle],green],or[apply(size-leq,iota(filter(x.s, or[rectangle,circle]))),and[circle,rectangle]]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:circle;4:nor[%s,%s];4:nand[%s,%s];4:implies[%s,%s];4:blue;4:triangle;4:green;4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:circle;4:and[%s,%s];4:circle;4:rectangle
'λx.forall(size1,filter(filter(x.s, or[blue,implies[rectangle,not[circle]]]), circle))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:implies[%s,%s];4:rectangle;4:not[%s];4:circle;4:circle
'λx.apply(rectangle,iota(filter(x.s, blue)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(size1,iota(filter(filter(filter(x.s, yellow), triangle), triangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle;4:triangle
'λx.exists(not[yellow], filter(filter(x.s, green), and[and[or[rectangle,green],rectangle],rectangle]))'	0:exists(%s, %s);4:not[%s];4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:rectangle;4:green;4:rectangle;4:rectangle
'λx.apply(iff[not[yellow],size3],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:not[%s];4:yellow;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[green,not[and[size3,and[apply(same_size,iota(filter(x.s, green))),nor[and[and[rectangle,rectangle],size3],rectangle]]]]],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:not[%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:rectangle;4:size3;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(and[and[or[circle,and[blue,yellow]],and[rectangle,and[and[blue,size2],blue]]],triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:circle;4:and[%s,%s];4:blue;4:yellow;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:blue;4:size2;4:blue;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[and[green,rectangle],not[implies[circle,or[or[or[size2,apply(same_shape,x.o)],apply(same_shape,x.o)],size2]]]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:green;4:rectangle;4:not[%s];4:implies[%s,%s];4:circle;4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2;1:%s.o;2:x
'λx.apply(implies[triangle,and[blue,green]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:triangle;4:and[%s,%s];4:blue;4:green;1:%s.o;2:x
'λx.apply(or[size3,size1],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(and[triangle,circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:circle;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(filter(x.s, circle), blue))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue;1:%s.o;2:x
'λx.apply(size1,iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(implies[triangle,not[green]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:triangle;4:not[%s];4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size3,and[apply(same_size,iota(x.s)),yellow]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:yellow;1:%s.o;2:x
'λx.exists(or[blue,apply(same_size,iota(x.s))], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(filter(filter(x.s, size3), and[not[yellow],yellow]), circle), rectangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:not[%s];4:yellow;4:yellow;4:circle;4:rectangle
'λx.apply(size2,iota(filter(filter(filter(x.s, size1), blue), triangle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue;4:triangle
'λx.apply(and[green,yellow],iota(filter(x.s, nor[size1,blue])))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size1;4:blue
'λx.exists(nor[rectangle,nor[circle,and[size3,size3]]], filter(filter(filter(filter(x.s, circle), iff[rectangle,size2]), apply(same_size,x.o)), triangle))'	0:exists(%s, %s);4:nor[%s,%s];4:rectangle;4:nor[%s,%s];4:circle;4:and[%s,%s];4:size3;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:iff[%s,%s];4:rectangle;4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle
'λx.apply(size3,iota(filter(filter(filter(filter(x.s, and[green,not[blue]]), nor[nor[size1,circle],nor[nor[triangle,rectangle],not[and[blue,size2]]]]), size2), and[size1,iff[green,not[blue]]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:not[%s];4:blue;4:nor[%s,%s];4:nor[%s,%s];4:size1;4:circle;4:nor[%s,%s];4:nor[%s,%s];4:triangle;4:rectangle;4:not[%s];4:and[%s,%s];4:blue;4:size2;4:size2;4:and[%s,%s];4:size1;4:iff[%s,%s];4:green;4:not[%s];4:blue
'λx.apply(blue,iota(filter(filter(filter(x.s, circle), and[not[iff[yellow,and[green,rectangle]]],size1]), rectangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:not[%s];4:iff[%s,%s];4:yellow;4:and[%s,%s];4:green;4:rectangle;4:size1;4:rectangle
'λx.apply(and[size3,circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:circle;1:%s.o;2:x
'λx.apply(or[and[circle,green],and[circle,and[size2,blue]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:circle;4:green;4:and[%s,%s];4:circle;4:and[%s,%s];4:size2;4:blue;1:%s.o;2:x
'λx.apply(and[and[and[implies[not[or[size2,triangle]],and[green,size3]],nand[implies[blue,apply(same_color,iota(x.s))],triangle]],size2],and[blue,size3]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:not[%s];4:or[%s,%s];4:size2;4:triangle;4:and[%s,%s];4:green;4:size3;4:nand[%s,%s];4:implies[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:triangle;4:size2;4:and[%s,%s];4:blue;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[green,size3],iota(filter(filter(x.s, yellow), and[not[size3],not[triangle]])))'	0:apply(%s,%s);4:implies[%s,%s];4:green;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:not[%s];4:size3;4:not[%s];4:triangle
'λx.exists(implies[size3,apply(size-lt,x.o)], filter(x.s, triangle))'	0:exists(%s, %s);4:implies[%s,%s];4:size3;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(and[rectangle,or[blue,size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:or[%s,%s];4:blue;4:size3;1:%s.o;2:x
'λx.apply(nand[size3,apply(same_shape,iota(filter(filter(filter(x.s, or[not[yellow],not[blue]]), rectangle), yellow)))],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:yellow;4:not[%s];4:blue;4:rectangle;4:yellow;1:%s.o;2:x
'λx.apply(nor[rectangle,circle],iota(filter(filter(filter(filter(filter(x.s, and[or[rectangle,apply(same_color,x.o)],nand[size3,green]]), size1), rectangle), rectangle), not[size2])))'	0:apply(%s,%s);4:nor[%s,%s];4:rectangle;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:nand[%s,%s];4:size3;4:green;4:size1;4:rectangle;4:rectangle;4:not[%s];4:size2
'λx.apply(yellow,iota(filter(filter(x.s, green), not[and[triangle,and[size3,rectangle]]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:size3;4:rectangle
'λx.forall(blue,filter(filter(x.s, and[circle,green]), size2))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:green;4:size2
'λx.apply(or[size1,not[rectangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(x.s, not[and[or[green,yellow],nor[or[triangle,and[yellow,rectangle]],size2]]]), and[and[and[rectangle,blue],apply(size-lt,iota(x.s))],and[size1,size1]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:or[%s,%s];4:green;4:yellow;4:nor[%s,%s];4:or[%s,%s];4:triangle;4:and[%s,%s];4:yellow;4:rectangle;4:size2;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:blue;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size1
'λx.apply(size1,iota(filter(x.s, and[rectangle,rectangle])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:rectangle
'λx.apply(size3,iota(filter(filter(x.s, yellow), green)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green
'λx.apply(implies[circle,blue],iota(filter(filter(x.s, green), circle)))'	0:apply(%s,%s);4:implies[%s,%s];4:circle;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:circle
'λx.contains(iota(x.s), filter(x.s, or[and[apply(size-gt,iota(x.s)),apply(size-leq,x.o)],size3]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size3
'λx.apply(implies[size2,size3],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:size2;4:size3;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(x.s, and[size1,and[apply(same_size,iota(filter(x.s, size1))),size1]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1
'λx.apply(apply(same_shape,iota(filter(filter(filter(filter(x.s, and[circle,green]), not[apply(same_color,iota(x.s))]), blue), triangle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:green;4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:blue;4:triangle;1:%s.o;2:x
'λx.apply(size2,iota(filter(x.s, apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(and[triangle,and[or[implies[blue,yellow],and[or[size2,and[and[iff[size3,size3],size3],and[and[or[yellow,rectangle],apply(same_color,iota(x.s))],triangle]]],triangle]],size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:blue;4:yellow;4:and[%s,%s];4:or[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:size3;4:size3;4:size3;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:yellow;4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:triangle;4:triangle;4:size3;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(filter(filter(x.s, or[green,yellow]), apply(same_size,x.o)), not[circle]), iff[triangle,triangle])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:not[%s];4:circle;4:iff[%s,%s];4:triangle;4:triangle
'λx.apply(or[and[nor[size2,green],size1],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:size2;4:green;4:size1;4:blue;1:%s.o;2:x
'λx.apply(nor[nor[size1,nand[yellow,yellow]],apply(same_shape,iota(x.s))],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:nor[%s,%s];4:size1;4:nand[%s,%s];4:yellow;4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(x.s), filter(x.s, or[yellow,iff[rectangle,triangle]]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:iff[%s,%s];4:rectangle;4:triangle
'λx.exists(and[triangle,rectangle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:triangle;4:rectangle;3:%s.s;2:x
'λx.apply(or[nand[green,and[triangle,blue]],size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:green;4:and[%s,%s];4:triangle;4:blue;4:size3;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, and[or[circle,not[blue]],yellow])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:circle;4:not[%s];4:blue;4:yellow
'λx.apply(size2,iota(filter(x.s, or[yellow,triangle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:triangle
'λx.exists(and[size2,yellow], filter(filter(x.s, triangle), and[and[apply(same_shape,iota(filter(x.s, rectangle))),nand[circle,blue]],apply(same_color,iota(filter(filter(filter(filter(filter(x.s, blue), implies[and[circle,nand[size1,circle]],or[apply(same_shape,iota(x.s)),circle]]), circle), nor[not[and[size1,not[yellow]]],yellow]), circle)))]))'	0:exists(%s, %s);4:and[%s,%s];4:size2;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:nand[%s,%s];4:circle;4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:implies[%s,%s];4:and[%s,%s];4:circle;4:nand[%s,%s];4:size1;4:circle;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle;4:circle;4:nor[%s,%s];4:not[%s];4:and[%s,%s];4:size1;4:not[%s];4:yellow;4:yellow;4:circle
'λx.apply(circle,iota(filter(filter(filter(filter(x.s, size1), circle), size1), size1)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle;4:size1;4:size1
'λx.apply(triangle,iota(filter(filter(x.s, triangle), circle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle
'λx.apply(and[circle,blue],iota(filter(x.s, green)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.empty(filter(x.s, or[and[or[size3,apply(same_color,iota(filter(filter(filter(x.s, blue), size3), triangle)))],size2],blue]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3;4:triangle;4:size2;4:blue
'λx.apply(or[blue,size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:size2;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, and[yellow,green]), or[triangle,size3])), filter(x.s, rectangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:green;4:or[%s,%s];4:triangle;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.contains(iota(x.s), filter(x.s, size2))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(not[and[or[or[or[triangle,and[apply(size-lt,iota(x.s)),rectangle]],yellow],green],size1]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:rectangle;4:yellow;4:green;4:size1;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, rectangle), blue)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue
'λx.contains(x.o, filter(filter(filter(filter(x.s, iff[size3,green]), size2), implies[blue,apply(same_color,iota(x.s))]), and[iff[green,triangle],green]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size3;4:green;4:size2;4:implies[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:iff[%s,%s];4:green;4:triangle;4:green
'λx.apply(green,iota(filter(x.s, not[blue])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.apply(or[size2,not[yellow]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:not[%s];4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(x.s, and[size3,circle]), apply(same_size,x.o))))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(not[not[green]],iota(filter(filter(x.s, or[nor[not[or[triangle,not[green]]],not[green]],size2]), green)))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:nor[%s,%s];4:not[%s];4:or[%s,%s];4:triangle;4:not[%s];4:green;4:not[%s];4:green;4:size2;4:green
'λx.apply(apply(same_shape,x.o),iota(filter(x.s, and[size2,green])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:green
'λx.apply(or[and[blue,circle],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:blue;4:circle;4:blue;1:%s.o;2:x
'λx.apply(apply(size-gt,iota(filter(filter(x.s, green), green))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size3,nor[circle,blue]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:nor[%s,%s];4:circle;4:blue;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(filter(x.s, size3), rectangle), or[nor[and[iff[size2,and[size3,rectangle]],not[rectangle]],and[blue,and[rectangle,or[blue,circle]]]],not[size3]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle;4:or[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:size2;4:and[%s,%s];4:size3;4:rectangle;4:not[%s];4:rectangle;4:and[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:blue;4:circle;4:not[%s];4:size3
'λx.forall(circle,filter(x.s, implies[yellow,nor[size1,nand[green,size1]]]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:yellow;4:nor[%s,%s];4:size1;4:nand[%s,%s];4:green;4:size1
'λx.apply(or[nand[triangle,apply(same_color,iota(filter(x.s, size3)))],size2],iota(filter(filter(x.s, and[rectangle,size1]), apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(and[apply(same_color,iota(x.s)),blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.apply(apply(same_color,x.o),iota(filter(filter(x.s, rectangle), blue)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue
'λx.apply(and[size2,nand[circle,size2]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:nand[%s,%s];4:circle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(filter(x.s, apply(size-lt,x.o)), size1), or[triangle,circle]), blue))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:size1;4:or[%s,%s];4:triangle;4:circle;4:blue
'λx.apply(green,iota(filter(filter(x.s, triangle), and[blue,size2])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:blue;4:size2
'λx.apply(nand[size2,green],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size2;4:green;1:%s.o;2:x
'λx.exists(and[yellow,green], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:yellow;4:green;3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(x.s, rectangle), blue)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue
'λx.apply(nand[rectangle,rectangle],iota(filter(x.s, or[yellow,circle])))'	0:apply(%s,%s);4:nand[%s,%s];4:rectangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:circle
'λx.contains(iota(filter(filter(filter(filter(filter(x.s, size3), triangle), not[size2]), and[not[rectangle],implies[blue,rectangle]]), yellow)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle;4:not[%s];4:size2;4:and[%s,%s];4:not[%s];4:rectangle;4:implies[%s,%s];4:blue;4:rectangle;4:yellow;3:%s.s;2:x
'λx.forall(apply(same_shape,iota(filter(x.s, green))),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;3:%s.s;2:x
'λx.forall(not[and[size3,green]],x.s)'	0:forall(%s,%s);4:not[%s];4:and[%s,%s];4:size3;4:green;3:%s.s;2:x
'λx.apply(not[and[triangle,or[or[implies[not[and[rectangle,and[nor[size1,size3],nand[size3,or[apply(size-lt,iota(x.s)),not[apply(same_shape,iota(filter(x.s, blue)))]]]]]],circle],triangle],or[size2,rectangle]]]],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:triangle;4:or[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:not[%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:nor[%s,%s];4:size1;4:size3;4:nand[%s,%s];4:size3;4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle;4:triangle;4:or[%s,%s];4:size2;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(circle,iota(filter(x.s, and[yellow,blue])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:blue
'λx.contains(iota(filter(filter(x.s, size1), not[or[blue,not[triangle]]])), filter(x.s, not[not[circle]]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:not[%s];4:or[%s,%s];4:blue;4:not[%s];4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:circle
'λx.apply(iff[or[iff[not[circle],circle],size1],yellow],iota(filter(filter(x.s, circle), apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:iff[%s,%s];4:or[%s,%s];4:iff[%s,%s];4:not[%s];4:circle;4:circle;4:size1;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[circle,and[apply(size-lt,x.o),size2]],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:nor[%s,%s];4:circle;4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(rectangle,iota(filter(filter(x.s, size2), size2)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2
'λx.apply(implies[yellow,apply(same_size,iota(x.s))],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(green,iota(x.s))'	0:apply(%s,%s);4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(x.s, size3), size2)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2
'λx.apply(and[apply(size-gt,iota(x.s)),not[nand[green,circle]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:not[%s];4:nand[%s,%s];4:green;4:circle;1:%s.o;2:x
'λx.forall(yellow,filter(x.s, blue))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(implies[blue,blue],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:blue;4:blue;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(filter(x.s, size1), circle), and[size2,nand[triangle,rectangle]]), blue))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle;4:and[%s,%s];4:size2;4:nand[%s,%s];4:triangle;4:rectangle;4:blue
'λx.apply(size2,iota(filter(filter(x.s, or[iff[not[size1],yellow],size2]), green)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:iff[%s,%s];4:not[%s];4:size1;4:yellow;4:size2;4:green
'λx.contains(x.o, filter(filter(x.s, yellow), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green
'λx.apply(nor[implies[and[blue,size1],apply(size-leq,iota(x.s))],green],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:blue;4:size1;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[size3,apply(same_size,iota(filter(filter(filter(x.s, apply(same_size,x.o)), not[size3]), yellow)))],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:not[%s];4:size3;4:yellow;1:%s.o;2:x
'λx.forall(and[apply(size-lt,iota(x.s)),circle],filter(filter(x.s, circle), and[yellow,implies[apply(same_color,x.o),not[blue]]]))'	0:forall(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:yellow;4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:blue
'λx.apply(apply(size-lt,iota(x.s)),iota(filter(filter(x.s, size3), or[or[size2,yellow],triangle])))'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:or[%s,%s];4:size2;4:yellow;4:triangle
'λx.apply(nor[rectangle,size1],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:rectangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.forall(and[apply(same_size,x.o),yellow],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow;3:%s.s;2:x
'λx.forall(yellow,filter(filter(filter(filter(filter(filter(x.s, and[circle,size1]), rectangle), apply(size-leq,iota(x.s))), size2), blue), size1))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size1;4:rectangle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:size2;4:blue;4:size1
'λx.apply(nand[size2,blue],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:size2;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size2,apply(same_size,iota(filter(filter(x.s, yellow), circle)))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle;1:%s.o;2:x
'λx.contains(iota(filter(x.s, iff[green,size2])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:green;4:size2;3:%s.s;2:x
'λx.apply(or[size3,or[green,circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:or[%s,%s];4:green;4:circle;1:%s.o;2:x
'λx.apply(and[size1,and[size3,size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:and[%s,%s];4:size3;4:size3;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(filter(x.s, blue), implies[and[size1,circle],and[nor[size3,blue],apply(same_shape,x.o)]]), rectangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:implies[%s,%s];4:and[%s,%s];4:size1;4:circle;4:and[%s,%s];4:nor[%s,%s];4:size3;4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle
'λx.apply(and[and[green,green],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:green;4:green;4:yellow;1:%s.o;2:x
'λx.forall(or[yellow,or[and[and[size3,apply(same_size,iota(x.s))],circle],or[nand[and[yellow,nor[or[rectangle,and[size3,rectangle]],green]],rectangle],or[size1,size3]]]],filter(filter(filter(filter(x.s, size3), blue), apply(size-leq,iota(x.s))), apply(same_size,x.o)))'	0:forall(%s,%s);4:or[%s,%s];4:yellow;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:yellow;4:nor[%s,%s];4:or[%s,%s];4:rectangle;4:and[%s,%s];4:size3;4:rectangle;4:green;4:rectangle;4:or[%s,%s];4:size1;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(size1,iota(filter(x.s, and[apply(same_size,x.o),or[yellow,size1]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:yellow;4:size1
'λx.apply(nor[apply(same_size,iota(filter(filter(x.s, and[and[circle,size1],and[and[circle,blue],rectangle]]), green))),triangle],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:circle;4:size1;4:and[%s,%s];4:and[%s,%s];4:circle;4:blue;4:rectangle;4:green;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[size2,not[triangle]],not[size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size2;4:not[%s];4:triangle;4:not[%s];4:size1;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(x.s, green), or[iff[triangle,triangle],yellow])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:iff[%s,%s];4:triangle;4:triangle;4:yellow
'λx.exists(not[implies[size1,not[and[circle,triangle]]]], x.s)'	0:exists(%s, %s);4:not[%s];4:implies[%s,%s];4:size1;4:not[%s];4:and[%s,%s];4:circle;4:triangle;3:%s.s;2:x
'λx.apply(and[implies[not[apply(size-gt,x.o)],size1],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:not[%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:size1;4:size1;1:%s.o;2:x
'λx.apply(and[triangle,and[size2,not[circle]]],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:size2;4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.exists(circle, filter(filter(x.s, or[apply(same_color,x.o),rectangle]), circle))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle;4:circle
'λx.apply(rectangle,iota(filter(filter(x.s, size1), and[size2,apply(same_size,x.o)])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(and[yellow,or[triangle,triangle]],iota(filter(filter(x.s, size1), size1)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:or[%s,%s];4:triangle;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1
'λx.apply(apply(same_color,x.o),iota(filter(x.s, apply(same_shape,x.o))))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(filter(filter(x.s, size2), or[size1,rectangle]), size1), blue)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:size1;4:rectangle;4:size1;4:blue
'λx.exists(iff[size3,size1], x.s)'	0:exists(%s, %s);4:iff[%s,%s];4:size3;4:size1;3:%s.s;2:x
'λx.exists(rectangle, filter(x.s, and[apply(same_color,iota(x.s)),circle]))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:circle
'λx.exists(and[green,blue], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:green;4:blue;3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(filter(x.s, not[circle]), size1), and[rectangle,blue])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:size1;4:and[%s,%s];4:rectangle;4:blue
'λx.apply(and[yellow,triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size1,apply(same_shape,x.o)],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(nand[and[and[size2,apply(same_color,iota(filter(x.s, green)))],size2],circle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size2;4:circle;1:%s.o;2:x
'λx.apply(nor[and[green,and[blue,circle]],or[triangle,yellow]],iota(filter(x.s, or[blue,and[not[iff[and[size1,apply(same_size,x.o)],rectangle]],size1]])))'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:blue;4:circle;4:or[%s,%s];4:triangle;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:and[%s,%s];4:not[%s];4:iff[%s,%s];4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:rectangle;4:size1
'λx.apply(size3,iota(filter(x.s, or[or[triangle,nand[size3,and[circle,or[size1,size3]]]],not[rectangle]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:triangle;4:nand[%s,%s];4:size3;4:and[%s,%s];4:circle;4:or[%s,%s];4:size1;4:size3;4:not[%s];4:rectangle
'λx.apply(implies[and[and[yellow,iff[apply(same_color,x.o),and[circle,iff[yellow,apply(same_color,iota(filter(filter(x.s, circle), rectangle)))]]]],circle],rectangle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:iff[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:circle;4:iff[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle;4:circle;4:rectangle;1:%s.o;2:x
'λx.apply(nor[or[size1,size1],apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:or[%s,%s];4:size1;4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.forall(not[blue],filter(x.s, circle))'	0:forall(%s,%s);4:not[%s];4:blue;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[apply(size-lt,x.o),green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:green;1:%s.o;2:x
'λx.apply(iff[green,and[or[yellow,size1],nand[and[and[size1,triangle],iff[circle,or[blue,size2]]],green]]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:green;4:and[%s,%s];4:or[%s,%s];4:yellow;4:size1;4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:triangle;4:iff[%s,%s];4:circle;4:or[%s,%s];4:blue;4:size2;4:green;1:%s.o;2:x
'λx.apply(or[circle,and[and[blue,not[triangle]],iff[and[circle,rectangle],blue]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:blue;4:not[%s];4:triangle;4:iff[%s,%s];4:and[%s,%s];4:circle;4:rectangle;4:blue;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, nand[size2,size1]), or[and[triangle,size2],rectangle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size2;4:size1;4:or[%s,%s];4:and[%s,%s];4:triangle;4:size2;4:rectangle
'λx.apply(or[or[size1,rectangle],size3],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:size1;4:rectangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[and[yellow,triangle],blue],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:yellow;4:triangle;4:blue;1:%s.o;2:x
'λx.forall(rectangle,filter(filter(filter(x.s, not[apply(same_size,iota(x.s))]), apply(size-leq,x.o)), size2))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size2
'λx.apply(size3,iota(filter(filter(filter(x.s, and[triangle,yellow]), circle), circle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:yellow;4:circle;4:circle
'λx.forall(size3,filter(x.s, and[triangle,size3]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:size3
'λx.apply(blue,iota(filter(x.s, size2)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(and[or[size2,size1],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size2;4:size1;4:size2;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, or[size2,size1])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:size1
'λx.forall(size3,filter(filter(filter(filter(filter(filter(x.s, iff[not[and[and[size2,circle],rectangle]],circle]), and[yellow,and[size3,apply(size-gt,iota(x.s))]]), size3), size1), and[size2,and[not[and[green,green]],triangle]]), blue))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:circle;4:rectangle;4:circle;4:and[%s,%s];4:yellow;4:and[%s,%s];4:size3;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:size3;4:size1;4:and[%s,%s];4:size2;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:green;4:green;4:triangle;4:blue
'λx.contains(x.o, filter(filter(x.s, size1), size3))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size3
'λx.apply(and[triangle,yellow],iota(filter(filter(x.s, size3), and[green,green])))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:green;4:green
'λx.empty(filter(x.s, and[size2,and[size3,green]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:and[%s,%s];4:size3;4:green
'λx.apply(or[green,size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:size1;1:%s.o;2:x
'λx.apply(or[blue,size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:size1;1:%s.o;2:x
'λx.contains(iota(filter(x.s, size1)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;3:%s.s;2:x
'λx.forall(green,filter(filter(x.s, rectangle), size1))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1
'λx.exists(and[apply(same_shape,x.o),size3], filter(filter(x.s, size3), circle))'	0:exists(%s, %s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle
'λx.apply(and[blue,not[iff[size3,and[circle,apply(same_color,x.o)]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:not[%s];4:iff[%s,%s];4:size3;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.exists(green, filter(x.s, rectangle))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(not[nand[and[circle,not[or[or[not[nand[size1,nand[yellow,apply(same_size,iota(x.s))]]],circle],size2]]],and[triangle,size1]]],x.o)'	0:apply(%s,%s);4:not[%s];4:nand[%s,%s];4:and[%s,%s];4:circle;4:not[%s];4:or[%s,%s];4:or[%s,%s];4:not[%s];4:nand[%s,%s];4:size1;4:nand[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:circle;4:size2;4:and[%s,%s];4:triangle;4:size1;1:%s.o;2:x
'λx.apply(and[and[rectangle,apply(same_size,iota(x.s))],rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[and[size3,blue]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size3;4:blue;1:iota(%s);3:%s.s;2:x
'λx.forall(circle,filter(x.s, apply(size-gt,iota(x.s))))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(x.s, apply(size-leq,x.o)))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:%s.o;2:x
'λx.forall(triangle,filter(filter(filter(filter(filter(x.s, size2), size3), blue), circle), rectangle))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3;4:blue;4:circle;4:rectangle
'λx.apply(or[triangle,and[not[blue],yellow]],iota(filter(x.s, apply(same_size,iota(x.s)))))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:and[%s,%s];4:not[%s];4:blue;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(x.s, nor[size2,rectangle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size2;4:rectangle
'λx.apply(and[size3,or[circle,blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:or[%s,%s];4:circle;4:blue;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(filter(filter(x.s, size3), size3), green), size3), and[circle,and[and[yellow,blue],blue]]), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3;4:green;4:size3;4:and[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:yellow;4:blue;4:blue;4:rectangle
'λx.apply(and[size1,size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:size1;1:%s.o;2:x
'λx.apply(or[and[size2,size3],green],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size2;4:size3;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[green,rectangle],iota(filter(x.s, or[size2,circle])))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:circle
'λx.apply(or[blue,and[circle,size3]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:and[%s,%s];4:circle;4:size3;1:%s.o;2:x
'λx.apply(implies[triangle,size1],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:triangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(size-lt,x.o),iota(filter(x.s, size1)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(yellow, filter(x.s, apply(same_size,iota(filter(filter(x.s, and[and[triangle,circle],green]), circle)))))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:triangle;4:circle;4:green;4:circle
'λx.empty(filter(filter(filter(filter(x.s, or[not[and[not[apply(same_shape,iota(x.s))],rectangle]],not[or[and[not[size2],and[triangle,circle]],size2]]]), not[rectangle]), circle), nand[size3,circle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:rectangle;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:not[%s];4:size2;4:and[%s,%s];4:triangle;4:circle;4:size2;4:not[%s];4:rectangle;4:circle;4:nand[%s,%s];4:size3;4:circle
'λx.apply(rectangle,iota(filter(filter(filter(filter(filter(x.s, blue), rectangle), size1), and[size3,triangle]), not[circle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle;4:size1;4:and[%s,%s];4:size3;4:triangle;4:not[%s];4:circle
'λx.contains(x.o, filter(filter(filter(x.s, size2), green), size1))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green;4:size1
'λx.contains(iota(x.s), filter(filter(x.s, and[apply(size-geq,iota(x.s)),and[and[and[yellow,circle],implies[size3,size3]],size2]]), and[size3,triangle]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:circle;4:implies[%s,%s];4:size3;4:size3;4:size2;4:and[%s,%s];4:size3;4:triangle
'λx.apply(yellow,iota(filter(filter(filter(x.s, rectangle), green), size2)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green;4:size2
'λx.apply(nand[apply(same_size,iota(filter(filter(x.s, triangle), rectangle))),and[and[not[and[green,not[triangle]]],triangle],yellow]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:green;4:not[%s];4:triangle;4:triangle;4:yellow;1:%s.o;2:x
'λx.apply(or[implies[apply(same_size,x.o),apply(same_color,x.o)],apply(same_shape,x.o)],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:or[%s,%s];4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(nor[and[size1,size3],triangle],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:size1;4:size3;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[green,triangle],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:green;4:triangle;4:green;1:%s.o;2:x
'λx.apply(size3,iota(filter(x.s, circle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[green,and[size3,blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:size3;4:blue;1:%s.o;2:x
'λx.forall(and[green,and[size1,size2]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:size1;4:size2;3:%s.s;2:x
'λx.exists(and[size3,apply(same_shape,x.o)], filter(x.s, size1))'	0:exists(%s, %s);4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(size2,iota(filter(filter(filter(x.s, apply(same_color,x.o)), not[and[circle,and[yellow,size2]]]), and[triangle,circle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:yellow;4:size2;4:and[%s,%s];4:triangle;4:circle
'λx.apply(nand[rectangle,and[triangle,green]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:rectangle;4:and[%s,%s];4:triangle;4:green;1:%s.o;2:x
'λx.apply(triangle,iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.exists(circle, filter(filter(filter(filter(x.s, triangle), circle), not[apply(same_size,iota(filter(filter(x.s, size1), rectangle)))]), rectangle))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle;4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle;4:rectangle
'λx.apply(or[and[green,size2],green],iota(filter(filter(x.s, green), circle)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:green;4:size2;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:circle
'λx.contains(x.o, filter(filter(filter(x.s, size1), nand[or[yellow,not[or[rectangle,and[triangle,not[blue]]]]],triangle]), blue))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:nand[%s,%s];4:or[%s,%s];4:yellow;4:not[%s];4:or[%s,%s];4:rectangle;4:and[%s,%s];4:triangle;4:not[%s];4:blue;4:triangle;4:blue
'λx.apply(or[and[apply(same_shape,x.o),size1],apply(same_shape,x.o)],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[green,green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[yellow,size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(x.s, and[size3,apply(size-leq,iota(filter(filter(filter(x.s, triangle), blue), yellow)))]), size2)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue;4:yellow;4:size2
'λx.apply(or[and[size2,rectangle],and[apply(same_size,x.o),size2]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size2;4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2;1:%s.o;2:x
'λx.apply(or[nand[or[triangle,apply(same_size,x.o)],and[blue,blue]],not[yellow]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:blue;4:blue;4:not[%s];4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size1,triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:triangle;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(filter(x.s, size1), green), nor[circle,size3])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green;4:nor[%s,%s];4:circle;4:size3
'λx.apply(and[yellow,or[or[or[size3,circle],size1],apply(same_shape,iota(filter(filter(x.s, size3), size3)))]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:size3;4:circle;4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(or[apply(size-leq,x.o),size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size2;1:%s.o;2:x
'λx.apply(nor[rectangle,triangle],iota(filter(filter(filter(filter(filter(x.s, nand[size3,and[size3,not[nor[circle,circle]]]]), size1), or[not[apply(same_color,x.o)],or[and[not[size2],size3],and[and[green,and[size1,size3]],and[blue,nand[and[size2,and[green,or[size2,triangle]]],not[circle]]]]]]), yellow), apply(same_shape,x.o))))'	0:apply(%s,%s);4:nor[%s,%s];4:rectangle;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size3;4:and[%s,%s];4:size3;4:not[%s];4:nor[%s,%s];4:circle;4:circle;4:size1;4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:size2;4:size3;4:and[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:size1;4:size3;4:and[%s,%s];4:blue;4:nand[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:green;4:or[%s,%s];4:size2;4:triangle;4:not[%s];4:circle;4:yellow;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.exists(size1, filter(x.s, apply(same_color,iota(x.s))))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[nand[size1,or[rectangle,blue]],circle],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:implies[%s,%s];4:nand[%s,%s];4:size1;4:or[%s,%s];4:rectangle;4:blue;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(size1,iota(filter(filter(x.s, circle), and[blue,circle])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:blue;4:circle
'λx.apply(and[and[implies[or[and[green,size2],size1],yellow],blue],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:and[%s,%s];4:green;4:size2;4:size1;4:yellow;4:blue;4:green;1:%s.o;2:x
'λx.apply(not[implies[circle,blue]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:implies[%s,%s];4:circle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(filter(filter(x.s, size1), and[implies[triangle,implies[rectangle,circle]],or[green,and[size3,triangle]]]), implies[size1,size3]), green), nor[blue,apply(size-leq,iota(filter(filter(x.s, and[apply(size-gt,x.o),blue]), blue)))]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:implies[%s,%s];4:triangle;4:implies[%s,%s];4:rectangle;4:circle;4:or[%s,%s];4:green;4:and[%s,%s];4:size3;4:triangle;4:implies[%s,%s];4:size1;4:size3;4:green;4:nor[%s,%s];4:blue;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:blue;4:blue
'λx.contains(iota(filter(filter(x.s, green), size2)), filter(filter(filter(x.s, circle), triangle), triangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle;4:triangle
'λx.apply(or[apply(same_color,x.o),apply(size-leq,x.o)],iota(filter(filter(x.s, and[rectangle,rectangle]), triangle)))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:rectangle;4:triangle
'λx.apply(iff[or[apply(same_color,x.o),not[triangle]],blue],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:triangle;4:blue;1:%s.o;2:x
'λx.exists(circle, filter(filter(x.s, rectangle), circle))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle
'λx.apply(apply(size-gt,iota(filter(filter(filter(x.s, nor[and[or[rectangle,or[and[blue,or[size1,rectangle]],or[blue,size2]]],green],size1]), green), green))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:and[%s,%s];4:or[%s,%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:blue;4:or[%s,%s];4:size1;4:rectangle;4:or[%s,%s];4:blue;4:size2;4:green;4:size1;4:green;4:green;1:%s.o;2:x
'λx.forall(apply(same_color,x.o),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(implies[green,apply(size-gt,iota(x.s))],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:green;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(or[triangle,yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:yellow;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(filter(filter(filter(x.s, circle), or[or[not[circle],circle],size1]), yellow), yellow), and[size3,apply(same_size,x.o)])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:or[%s,%s];4:not[%s];4:circle;4:circle;4:size1;4:yellow;4:yellow;4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(or[green,circle],iota(filter(x.s, not[size3])))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3
'λx.apply(or[green,and[and[size1,rectangle],green]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:size1;4:rectangle;4:green;1:%s.o;2:x
'λx.forall(and[and[size3,circle],rectangle],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size3;4:circle;4:rectangle;3:%s.s;2:x
'λx.forall(or[not[blue],nand[triangle,yellow]],filter(filter(x.s, green), and[size2,apply(same_size,iota(x.s))]))'	0:forall(%s,%s);4:or[%s,%s];4:not[%s];4:blue;4:nand[%s,%s];4:triangle;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.forall(and[green,size2],filter(x.s, size1))'	0:forall(%s,%s);4:and[%s,%s];4:green;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(not[or[size2,apply(same_size,iota(x.s))]], filter(filter(x.s, size3), triangle))'	0:exists(%s, %s);4:not[%s];4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle
'λx.apply(triangle,iota(filter(filter(filter(filter(x.s, apply(same_size,x.o)), size1), size3), not[or[yellow,and[blue,size1]]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1;4:size3;4:not[%s];4:or[%s,%s];4:yellow;4:and[%s,%s];4:blue;4:size1
'λx.contains(x.o, filter(filter(filter(x.s, or[apply(same_shape,iota(x.s)),green]), rectangle), yellow))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:green;4:rectangle;4:yellow
'λx.exists(green, filter(filter(x.s, blue), blue))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue
'λx.apply(circle,iota(filter(filter(filter(x.s, green), green), yellow)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:green;4:yellow
'λx.apply(and[apply(same_color,iota(x.s)),circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:circle;1:%s.o;2:x
'λx.apply(not[not[yellow]],iota(filter(filter(x.s, and[not[size3],and[triangle,and[apply(same_color,iota(x.s)),size2]]]), not[green])))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:size3;4:and[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size2;4:not[%s];4:green
'λx.apply(or[and[not[green],and[and[and[size2,and[size3,and[and[apply(same_shape,x.o),not[rectangle]],green]]],size3],apply(same_shape,iota(x.s))]],yellow],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:not[%s];4:green;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:rectangle;4:green;4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(and[or[size1,green],iff[triangle,and[blue,size3]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size1;4:green;4:iff[%s,%s];4:triangle;4:and[%s,%s];4:blue;4:size3;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(x.s, blue))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[yellow,or[or[apply(same_shape,iota(x.s)),yellow],triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:yellow;4:triangle;1:%s.o;2:x
'λx.apply(and[and[size1,not[not[blue]]],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:not[%s];4:not[%s];4:blue;4:size3;1:%s.o;2:x
'λx.apply(apply(same_size,iota(filter(filter(filter(filter(filter(x.s, blue), size1), triangle), yellow), nor[triangle,rectangle]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1;4:triangle;4:yellow;4:nor[%s,%s];4:triangle;4:rectangle;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, implies[nor[and[green,size3],yellow],yellow])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:green;4:size3;4:yellow;4:yellow
'λx.apply(or[blue,apply(same_color,x.o)],iota(filter(filter(filter(x.s, size1), size3), and[not[green],rectangle])))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size3;4:and[%s,%s];4:not[%s];4:green;4:rectangle
'λx.apply(and[rectangle,or[and[yellow,size1],or[circle,not[green]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:yellow;4:size1;4:or[%s,%s];4:circle;4:not[%s];4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[size3,apply(same_shape,iota(x.s))],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:green;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, size2), apply(same_color,x.o))))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(implies[and[nand[circle,blue],size2],size3],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:circle;4:blue;4:size2;4:size3;1:%s.o;2:x
'λx.exists(size3, filter(x.s, apply(size-gt,iota(filter(x.s, rectangle)))))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(or[and[yellow,and[or[and[size2,size1],circle],or[size2,or[circle,not[size3]]]]],rectangle],iota(filter(filter(filter(x.s, circle), and[yellow,nand[circle,yellow]]), or[and[apply(same_shape,iota(filter(x.s, size2))),and[rectangle,circle]],green])))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size2;4:size1;4:circle;4:or[%s,%s];4:size2;4:or[%s,%s];4:circle;4:not[%s];4:size3;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:yellow;4:nand[%s,%s];4:circle;4:yellow;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:rectangle;4:circle;4:green
'λx.forall(apply(same_color,x.o),filter(x.s, and[size2,circle]))'	0:forall(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:circle
'λx.apply(nand[blue,nor[green,size2]],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:blue;4:nor[%s,%s];4:green;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(x.s, nor[triangle,and[yellow,rectangle]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:triangle;4:and[%s,%s];4:yellow;4:rectangle
'λx.forall(green,filter(filter(x.s, not[size1]), and[not[and[green,iff[and[size2,and[circle,circle]],apply(size-leq,iota(filter(filter(filter(x.s, or[not[green],blue]), blue), not[circle])))]]],apply(size-geq,x.o)]))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:green;4:iff[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:circle;4:circle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:green;4:blue;4:blue;4:not[%s];4:circle;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, size1), not[and[size2,triangle]])), filter(filter(x.s, blue), size1))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:not[%s];4:and[%s,%s];4:size2;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1
'λx.apply(and[rectangle,and[size1,rectangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:size1;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(filter(x.s, size3), blue), size1)), filter(x.s, size1))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(size2,iota(filter(filter(x.s, apply(same_color,x.o)), triangle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle
'λx.apply(and[apply(size-gt,x.o),size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(filter(x.s, triangle), size2), triangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2;4:triangle
'λx.apply(green,iota(filter(filter(filter(filter(filter(x.s, circle), green), and[iff[size1,and[green,yellow]],or[yellow,and[and[size1,or[size2,and[triangle,size3]]],rectangle]]]), and[not[and[size2,size3]],circle]), yellow)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green;4:and[%s,%s];4:iff[%s,%s];4:size1;4:and[%s,%s];4:green;4:yellow;4:or[%s,%s];4:yellow;4:and[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:size2;4:and[%s,%s];4:triangle;4:size3;4:rectangle;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:size2;4:size3;4:circle;4:yellow
'λx.apply(size1,iota(filter(filter(filter(x.s, size2), green), yellow)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green;4:yellow
'λx.exists(not[yellow], filter(filter(filter(x.s, yellow), size3), triangle))'	0:exists(%s, %s);4:not[%s];4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size3;4:triangle
'λx.forall(or[blue,yellow],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:blue;4:yellow;3:%s.s;2:x
'λx.forall(size3,filter(filter(x.s, circle), and[yellow,or[implies[circle,and[apply(size-leq,iota(filter(filter(filter(filter(filter(filter(filter(x.s, circle), circle), rectangle), or[triangle,or[size1,yellow]]), yellow), green), not[rectangle]))),yellow]],blue]]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:yellow;4:or[%s,%s];4:implies[%s,%s];4:circle;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:circle;4:rectangle;4:or[%s,%s];4:triangle;4:or[%s,%s];4:size1;4:yellow;4:yellow;4:green;4:not[%s];4:rectangle;4:yellow;4:blue
'λx.apply(and[not[nor[green,blue]],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:nor[%s,%s];4:green;4:blue;4:yellow;1:%s.o;2:x
'λx.empty(filter(filter(x.s, yellow), or[size2,apply(same_color,iota(filter(x.s, or[size2,size1])))]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:size1
'λx.apply(or[size3,apply(same_size,iota(x.s))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(or[size2,or[not[triangle],and[size2,circle]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:or[%s,%s];4:not[%s];4:triangle;4:and[%s,%s];4:size2;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(x.s, and[blue,triangle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:triangle
'λx.contains(iota(filter(x.s, blue)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;3:%s.s;2:x
'λx.exists(or[yellow,size1], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:yellow;4:size1;3:%s.s;2:x
'λx.apply(circle,iota(filter(x.s, or[rectangle,and[circle,green]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:and[%s,%s];4:circle;4:green
'λx.apply(and[or[size3,implies[implies[nor[yellow,size3],not[not[apply(same_color,x.o)]]],and[green,and[green,yellow]]]],blue],iota(filter(filter(x.s, size3), and[rectangle,and[size1,rectangle]])))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size3;4:implies[%s,%s];4:implies[%s,%s];4:nor[%s,%s];4:yellow;4:size3;4:not[%s];4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:green;4:and[%s,%s];4:green;4:yellow;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:size1;4:rectangle
'λx.apply(nand[size2,blue],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:nand[%s,%s];4:size2;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(or[size2,not[and[green,size2]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:not[%s];4:and[%s,%s];4:green;4:size2;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(x.s, triangle), size1))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size1
'λx.apply(circle,iota(filter(x.s, apply(size-lt,x.o))))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, or[blue,blue])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:blue
'λx.apply(circle,iota(filter(filter(x.s, size3), size2)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2
'λx.forall(blue,filter(filter(x.s, blue), green))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green
'λx.apply(not[size1],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(blue,iota(filter(filter(filter(x.s, iff[green,size2]), green), or[size2,size1])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:green;4:size2;4:green;4:or[%s,%s];4:size2;4:size1
'λx.empty(filter(filter(filter(filter(filter(x.s, size2), triangle), green), blue), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:triangle;4:green;4:blue;4:size2
'λx.apply(circle,iota(filter(filter(filter(x.s, blue), or[rectangle,size2]), green)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:rectangle;4:size2;4:green
'λx.apply(and[size1,not[not[green]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:not[%s];4:not[%s];4:green;1:%s.o;2:x
'λx.apply(and[rectangle,triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[not[and[blue,rectangle]],size1],iota(filter(x.s, and[rectangle,yellow])))'	0:apply(%s,%s);4:iff[%s,%s];4:not[%s];4:and[%s,%s];4:blue;4:rectangle;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:yellow
'λx.forall(yellow,filter(filter(x.s, or[or[triangle,circle],and[size2,size2]]), apply(same_color,x.o)))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:triangle;4:circle;4:and[%s,%s];4:size2;4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.contains(x.o, filter(filter(filter(x.s, and[apply(same_color,iota(x.s)),green]), size3), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:green;4:size3;4:green
'λx.empty(filter(filter(x.s, size2), iff[and[and[circle,not[triangle]],apply(same_shape,iota(x.s))],not[and[triangle,and[and[circle,or[and[and[or[implies[not[nand[yellow,blue]],blue],blue],blue],size1],and[triangle,and[rectangle,not[and[apply(same_shape,x.o),or[yellow,yellow]]]]]]],and[implies[size3,or[not[blue],iff[triangle,and[yellow,green]]]],yellow]]]]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:iff[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:not[%s];4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:and[%s,%s];4:circle;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:not[%s];4:nand[%s,%s];4:yellow;4:blue;4:blue;4:blue;4:blue;4:size1;4:and[%s,%s];4:triangle;4:and[%s,%s];4:rectangle;4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:yellow;4:yellow;4:and[%s,%s];4:implies[%s,%s];4:size3;4:or[%s,%s];4:not[%s];4:blue;4:iff[%s,%s];4:triangle;4:and[%s,%s];4:yellow;4:green;4:yellow
'λx.exists(green, filter(x.s, apply(same_shape,x.o)))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(apply(same_color,x.o),iota(filter(x.s, and[not[apply(same_color,x.o)],not[circle]])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:circle
'λx.apply(or[size2,or[apply(same_shape,x.o),triangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle;1:%s.o;2:x
'λx.apply(or[and[or[yellow,rectangle],green],circle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:yellow;4:rectangle;4:green;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[circle,or[apply(same_size,x.o),rectangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[apply(same_color,iota(x.s)),blue],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:blue;4:blue;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, apply(size-lt,x.o))))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.apply(nand[green,circle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:green;4:circle;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, and[and[and[iff[blue,rectangle],size2],green],or[yellow,size2]]), size3)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:blue;4:rectangle;4:size2;4:green;4:or[%s,%s];4:yellow;4:size2;4:size3;3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(x.s, blue), size2)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2
'λx.apply(apply(same_shape,iota(x.s)),iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(nand[yellow,not[triangle]],iota(filter(x.s, not[blue])))'	0:apply(%s,%s);4:nand[%s,%s];4:yellow;4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.empty(filter(filter(filter(x.s, yellow), implies[apply(same_color,iota(filter(x.s, triangle))),green]), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green;4:green
'λx.apply(and[size1,circle],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(implies[blue,and[blue,nand[not[triangle],triangle]]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:blue;4:and[%s,%s];4:blue;4:nand[%s,%s];4:not[%s];4:triangle;4:triangle;1:%s.o;2:x
'λx.exists(or[blue,apply(size-geq,x.o)], filter(filter(filter(x.s, apply(same_shape,iota(x.s))), and[and[green,triangle],size1]), triangle))'	0:exists(%s, %s);4:or[%s,%s];4:blue;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:green;4:triangle;4:size1;4:triangle
'λx.apply(implies[and[blue,apply(same_size,x.o)],not[nor[apply(same_shape,iota(x.s)),triangle]]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:not[%s];4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[apply(size-gt,iota(filter(filter(x.s, implies[nand[or[not[blue],size3],green],rectangle]), green)))],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:not[%s];4:blue;4:size3;4:green;4:rectangle;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.contains(x.o, filter(x.s, size1))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(size3,iota(filter(x.s, or[circle,size3])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:size3
'λx.apply(rectangle,iota(filter(filter(filter(x.s, and[triangle,iff[not[and[triangle,iff[not[blue],blue]]],apply(same_shape,x.o)]]), rectangle), or[iff[size2,and[not[circle],apply(same_size,x.o)]],and[circle,triangle]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:iff[%s,%s];4:not[%s];4:and[%s,%s];4:triangle;4:iff[%s,%s];4:not[%s];4:blue;4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle;4:or[%s,%s];4:iff[%s,%s];4:size2;4:and[%s,%s];4:not[%s];4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:circle;4:triangle
'λx.apply(iff[and[rectangle,green],blue],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:rectangle;4:green;4:blue;1:%s.o;2:x
'λx.apply(iff[green,rectangle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:green;4:rectangle;1:%s.o;2:x
'λx.exists(nor[apply(same_shape,iota(x.s)),size2], filter(x.s, size3))'	0:exists(%s, %s);4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(or[nand[or[blue,iff[yellow,and[green,implies[circle,size1]]]],size1],and[and[yellow,iff[blue,and[rectangle,green]]],not[circle]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:blue;4:iff[%s,%s];4:yellow;4:and[%s,%s];4:green;4:implies[%s,%s];4:circle;4:size1;4:size1;4:and[%s,%s];4:and[%s,%s];4:yellow;4:iff[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:green;4:not[%s];4:circle;1:%s.o;2:x
'λx.apply(size2,iota(filter(x.s, and[yellow,not[size3]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:not[%s];4:size3
'λx.forall(and[size1,and[triangle,size3]],filter(filter(filter(x.s, triangle), or[iff[size2,yellow],and[not[and[rectangle,size2]],and[blue,green]]]), size1))'	0:forall(%s,%s);4:and[%s,%s];4:size1;4:and[%s,%s];4:triangle;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:or[%s,%s];4:iff[%s,%s];4:size2;4:yellow;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:rectangle;4:size2;4:and[%s,%s];4:blue;4:green;4:size1
'λx.apply(and[size2,triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:triangle;1:%s.o;2:x
'λx.apply(size2,iota(filter(x.s, not[apply(same_shape,iota(x.s))])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(and[blue,triangle],iota(filter(filter(x.s, size1), size3)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size3
'λx.apply(and[size1,apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.empty(filter(x.s, blue))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[rectangle,apply(same_color,x.o)],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_color,iota(x.s)),iota(filter(x.s, blue)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(apply(size-lt,x.o),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(x.s, and[rectangle,green])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:green
'λx.forall(triangle,filter(filter(x.s, nor[and[circle,rectangle],triangle]), apply(same_size,x.o)))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:and[%s,%s];4:circle;4:rectangle;4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, not[size1]), triangle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:triangle;3:%s.s;2:x
'λx.apply(or[rectangle,rectangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(x.s, blue), triangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle
'λx.apply(apply(same_shape,x.o),iota(filter(filter(filter(filter(filter(filter(filter(filter(x.s, or[apply(same_shape,iota(x.s)),rectangle]), size3), circle), triangle), not[circle]), size2), rectangle), size3)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:rectangle;4:size3;4:circle;4:triangle;4:not[%s];4:circle;4:size2;4:rectangle;4:size3
'λx.apply(or[triangle,blue],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(or[circle,or[apply(same_color,iota(filter(filter(filter(x.s, size3), size3), rectangle))),iff[yellow,implies[size2,size3]]]],iota(filter(x.s, and[or[yellow,rectangle],circle])))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3;4:rectangle;4:iff[%s,%s];4:yellow;4:implies[%s,%s];4:size2;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:yellow;4:rectangle;4:circle
'λx.apply(implies[blue,size3],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:blue;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_size,iota(filter(x.s, implies[not[blue],triangle]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:not[%s];4:blue;4:triangle;1:%s.o;2:x
'λx.apply(or[iff[triangle,nand[not[apply(same_size,x.o)],apply(same_size,x.o)]],triangle],iota(filter(x.s, apply(same_shape,x.o))))'	0:apply(%s,%s);4:or[%s,%s];4:iff[%s,%s];4:triangle;4:nand[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(and[triangle,green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[triangle,apply(same_size,iota(filter(filter(filter(x.s, size3), nand[blue,rectangle]), blue)))],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:nand[%s,%s];4:blue;4:rectangle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.exists(and[yellow,and[not[circle],not[yellow]]], filter(filter(x.s, yellow), blue))'	0:exists(%s, %s);4:and[%s,%s];4:yellow;4:and[%s,%s];4:not[%s];4:circle;4:not[%s];4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:blue
'λx.apply(or[size2,size2],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:size2;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(x.s, and[blue,triangle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:triangle
'λx.exists(and[and[yellow,triangle],green], filter(filter(x.s, green), or[and[circle,green],blue]))'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:triangle;4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:and[%s,%s];4:circle;4:green;4:blue
'λx.empty(filter(filter(x.s, size3), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle
'λx.apply(apply(same_color,iota(filter(x.s, apply(same_shape,iota(filter(x.s, not[iff[yellow,rectangle]])))))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:iff[%s,%s];4:yellow;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[and[not[green],apply(same_shape,x.o)],green],iota(filter(filter(filter(filter(x.s, not[triangle]), and[yellow,circle]), not[size3]), circle)))'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:not[%s];4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:and[%s,%s];4:yellow;4:circle;4:not[%s];4:size3;4:circle
'λx.apply(not[not[rectangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:rectangle;1:%s.o;2:x
'λx.apply(not[or[and[and[green,circle],and[green,green]],triangle]],iota(filter(x.s, nand[and[size1,and[apply(same_size,x.o),size2]],circle])))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:circle;4:and[%s,%s];4:green;4:green;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2;4:circle
'λx.apply(and[size2,not[rectangle]],iota(filter(x.s, and[triangle,yellow])))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:yellow
'λx.apply(not[and[iff[or[size3,circle],yellow],green]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:size3;4:circle;4:yellow;4:green;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, apply(same_size,iota(x.s)))), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(filter(x.s, green), triangle), and[apply(same_color,iota(x.s)),triangle]), apply(same_size,x.o)))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(not[and[triangle,blue]],iota(filter(x.s, green)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:triangle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.empty(filter(x.s, size1))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(iff[and[blue,size1],and[not[size1],blue]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:blue;4:size1;4:and[%s,%s];4:not[%s];4:size1;4:blue;1:%s.o;2:x
'λx.apply(and[and[green,yellow],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:green;4:yellow;4:green;1:%s.o;2:x
'λx.apply(or[apply(same_size,iota(x.s)),size2],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(filter(x.s, circle), size3), nor[blue,and[apply(same_size,iota(x.s)),and[triangle,implies[apply(same_shape,iota(filter(x.s, or[and[size3,rectangle],circle]))),size1]]]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3;4:nor[%s,%s];4:blue;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:implies[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size3;4:rectangle;4:circle;4:size1
'λx.empty(filter(filter(filter(x.s, size3), size3), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3;4:green
'λx.apply(and[and[green,size2],apply(size-lt,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:green;4:size2;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(nand[size1,size1],iota(filter(filter(filter(x.s, not[yellow]), rectangle), nor[green,and[not[triangle],circle]])))'	0:apply(%s,%s);4:nand[%s,%s];4:size1;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:rectangle;4:nor[%s,%s];4:green;4:and[%s,%s];4:not[%s];4:triangle;4:circle
'λx.apply(or[yellow,and[and[rectangle,or[apply(same_shape,iota(x.s)),green]],or[size2,and[green,size3]]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:green;4:or[%s,%s];4:size2;4:and[%s,%s];4:green;4:size3;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(filter(x.s, not[size1]), nor[yellow,or[and[not[implies[circle,or[triangle,circle]]],triangle],and[triangle,triangle]]]), blue)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:nor[%s,%s];4:yellow;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:implies[%s,%s];4:circle;4:or[%s,%s];4:triangle;4:circle;4:triangle;4:and[%s,%s];4:triangle;4:triangle;4:blue
'λx.apply(green,iota(filter(filter(x.s, iff[or[size1,size1],blue]), blue)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:or[%s,%s];4:size1;4:size1;4:blue;4:blue
'λx.apply(or[not[triangle],triangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:triangle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(x.s, blue), apply(size-geq,iota(x.s)))))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x
'λx.apply(or[yellow,size3],iota(filter(x.s, apply(same_size,iota(x.s)))))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(x.s, not[not[and[circle,and[green,nor[size3,and[size3,and[nand[circle,blue],and[iff[not[size3],not[or[or[or[and[not[not[nor[implies[size3,yellow],not[size3]]]],size3],not[size1]],and[circle,triangle]],not[green]]]],not[yellow]]]]]]]]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:green;4:nor[%s,%s];4:size3;4:and[%s,%s];4:size3;4:and[%s,%s];4:nand[%s,%s];4:circle;4:blue;4:and[%s,%s];4:iff[%s,%s];4:not[%s];4:size3;4:not[%s];4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:not[%s];4:not[%s];4:nor[%s,%s];4:implies[%s,%s];4:size3;4:yellow;4:not[%s];4:size3;4:size3;4:not[%s];4:size1;4:and[%s,%s];4:circle;4:triangle;4:not[%s];4:green;4:not[%s];4:yellow
'λx.apply(and[rectangle,green],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(blue,iota(filter(x.s, size1)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(implies[circle,and[triangle,size3]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:circle;4:and[%s,%s];4:triangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size3,not[size3]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:not[%s];4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[rectangle,nand[apply(same_color,iota(filter(filter(x.s, apply(size-leq,x.o)), size3))),and[size1,blue]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:nand[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size3;4:and[%s,%s];4:size1;4:blue;1:%s.o;2:x
'λx.apply(and[blue,size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:size1;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(x.s), filter(x.s, rectangle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(size1,iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(size3,iota(filter(filter(filter(x.s, size2), and[green,or[size3,size2]]), apply(size-gt,iota(x.s)))))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:green;4:or[%s,%s];4:size3;4:size2;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(x.s, rectangle), not[green])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:green
'λx.apply(yellow,iota(filter(filter(filter(x.s, rectangle), apply(same_size,x.o)), circle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle
'λx.apply(size1,iota(filter(filter(x.s, rectangle), or[apply(same_size,x.o),and[size2,yellow]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:size2;4:yellow
'λx.apply(and[not[and[or[yellow,size3],green]],triangle],iota(filter(filter(filter(x.s, and[triangle,size1]), size1), green)))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:or[%s,%s];4:yellow;4:size3;4:green;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:size1;4:size1;4:green
'λx.contains(iota(filter(x.s, or[blue,or[size2,size2]])), filter(filter(x.s, circle), size1))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:or[%s,%s];4:size2;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1
'λx.apply(and[apply(same_color,iota(x.s)),nor[size1,green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:nor[%s,%s];4:size1;4:green;1:%s.o;2:x
'λx.apply(and[size3,apply(same_shape,iota(filter(filter(x.s, circle), and[apply(same_color,x.o),green])))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green;1:%s.o;2:x
'λx.apply(and[nor[yellow,green],green],iota(filter(filter(filter(x.s, not[or[yellow,blue]]), size3), not[size2])))'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:yellow;4:green;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:yellow;4:blue;4:size3;4:not[%s];4:size2
'λx.contains(iota(filter(x.s, not[blue])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;3:%s.s;2:x
'λx.apply(apply(size-lt,iota(filter(x.s, and[not[size3],yellow]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:size3;4:yellow;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(filter(x.s, or[rectangle,or[and[size2,size3],size2]]), green), apply(same_shape,x.o))))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:size2;4:size3;4:size2;4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(or[circle,and[blue,or[and[nor[apply(same_color,iota(filter(x.s, triangle))),circle],size3],and[or[not[size2],rectangle],triangle]]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:and[%s,%s];4:blue;4:or[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle;4:size3;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:size2;4:rectangle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size2,circle],iota(filter(filter(x.s, green), or[or[apply(size-geq,iota(x.s)),green],green])))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:green;4:green
'λx.apply(and[and[rectangle,nor[blue,and[circle,size1]]],not[yellow]],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:rectangle;4:nor[%s,%s];4:blue;4:and[%s,%s];4:circle;4:size1;4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(or[triangle,or[circle,circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:or[%s,%s];4:circle;4:circle;1:%s.o;2:x
'λx.contains(iota(x.s), filter(x.s, not[or[size1,or[blue,and[size3,and[size1,size3]]]]]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:size1;4:or[%s,%s];4:blue;4:and[%s,%s];4:size3;4:and[%s,%s];4:size1;4:size3
'λx.apply(size2,iota(filter(filter(filter(filter(x.s, size1), size1), and[size2,nor[size2,implies[size1,size2]]]), and[green,size2])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1;4:and[%s,%s];4:size2;4:nor[%s,%s];4:size2;4:implies[%s,%s];4:size1;4:size2;4:and[%s,%s];4:green;4:size2
'λx.apply(implies[or[not[yellow],or[circle,yellow]],circle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:or[%s,%s];4:not[%s];4:yellow;4:or[%s,%s];4:circle;4:yellow;4:circle;1:%s.o;2:x
'λx.apply(or[nand[size3,and[and[circle,triangle],and[blue,blue]]],or[and[not[size1],iff[apply(size-lt,iota(filter(filter(x.s, size3), yellow))),size1]],apply(same_color,iota(filter(filter(x.s, rectangle), size3)))]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:circle;4:triangle;4:and[%s,%s];4:blue;4:blue;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:size1;4:iff[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow;4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3;1:%s.o;2:x
'λx.apply(and[apply(same_color,iota(filter(x.s, yellow))),circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(filter(filter(x.s, blue), circle), circle), yellow)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle;4:circle;4:yellow
'λx.apply(iff[not[not[green]],nor[apply(same_size,iota(x.s)),nand[circle,size3]]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:not[%s];4:not[%s];4:green;4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:nand[%s,%s];4:circle;4:size3;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, size3)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(or[nand[triangle,or[not[and[green,or[or[rectangle,and[apply(same_shape,iota(filter(x.s, nor[triangle,size3]))),and[blue,triangle]]],size2]]],blue]],and[and[yellow,apply(same_size,iota(filter(filter(filter(x.s, or[circle,triangle]), circle), nand[green,triangle])))],rectangle]],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:triangle;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:green;4:or[%s,%s];4:or[%s,%s];4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:triangle;4:size3;4:and[%s,%s];4:blue;4:triangle;4:size2;4:blue;4:and[%s,%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:triangle;4:circle;4:nand[%s,%s];4:green;4:triangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.exists(and[size1,yellow], filter(x.s, size1))'	0:exists(%s, %s);4:and[%s,%s];4:size1;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(and[green,circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:circle;1:%s.o;2:x
'λx.apply(implies[size1,triangle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size1;4:triangle;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, green), and[yellow,circle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:yellow;4:circle
'λx.empty(filter(filter(x.s, or[triangle,and[yellow,size1]]), implies[apply(size-leq,iota(filter(filter(filter(x.s, size1), circle), circle))),and[green,yellow]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:and[%s,%s];4:yellow;4:size1;4:implies[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle;4:circle;4:and[%s,%s];4:green;4:yellow
'λx.apply(apply(size-gt,iota(filter(x.s, triangle))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.forall(blue,filter(filter(x.s, green), blue))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue
'λx.exists(and[rectangle,not[rectangle]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:rectangle;4:not[%s];4:rectangle;3:%s.s;2:x
'λx.apply(iff[size1,circle],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:size1;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[size2,size2],iota(filter(x.s, and[triangle,rectangle])))'	0:apply(%s,%s);4:nand[%s,%s];4:size2;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:rectangle
'λx.contains(iota(x.s), filter(filter(x.s, green), circle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:circle
'λx.apply(nand[and[and[size1,nand[circle,rectangle]],blue],and[triangle,not[triangle]]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:nand[%s,%s];4:circle;4:rectangle;4:blue;4:and[%s,%s];4:triangle;4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(green,iota(filter(filter(x.s, and[nor[rectangle,size2],triangle]), size2)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:rectangle;4:size2;4:triangle;4:size2
'λx.apply(size3,iota(filter(x.s, not[apply(same_shape,iota(filter(filter(x.s, and[circle,rectangle]), triangle)))])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:rectangle;4:triangle
'λx.apply(size1,iota(filter(filter(x.s, green), size2)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size2
'λx.forall(circle,filter(x.s, green))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(or[or[rectangle,triangle],not[triangle]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:rectangle;4:triangle;4:not[%s];4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[or[triangle,rectangle],not[blue]],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:or[%s,%s];4:triangle;4:rectangle;4:not[%s];4:blue;1:iota(%s);3:%s.s;2:x
'λx.exists(yellow, filter(filter(x.s, and[yellow,size1]), and[triangle,blue]))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size1;4:and[%s,%s];4:triangle;4:blue
'λx.apply(iff[and[green,circle],apply(same_shape,x.o)],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:green;4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(or[yellow,implies[size2,iff[size1,blue]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:implies[%s,%s];4:size2;4:iff[%s,%s];4:size1;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(filter(x.s, iff[blue,not[rectangle]]), green), circle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:blue;4:not[%s];4:rectangle;4:green;4:circle
'λx.apply(triangle,iota(filter(filter(filter(filter(filter(x.s, not[size3]), circle), and[size1,size1]), size1), triangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;4:circle;4:and[%s,%s];4:size1;4:size1;4:size1;4:triangle
'λx.apply(or[blue,green],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[rectangle,blue],iota(filter(x.s, not[triangle])))'	0:apply(%s,%s);4:implies[%s,%s];4:rectangle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.apply(or[circle,green],iota(filter(filter(x.s, size3), size3)))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3
'λx.apply(or[green,size1],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(and[blue,yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(x.s, and[blue,apply(same_size,x.o)])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(and[size2,implies[and[triangle,yellow],rectangle]],iota(filter(filter(x.s, and[blue,size2]), rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:implies[%s,%s];4:and[%s,%s];4:triangle;4:yellow;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size2;4:rectangle
'λx.apply(iff[or[size3,size3],and[circle,apply(same_color,iota(x.s))]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:or[%s,%s];4:size3;4:size3;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, rectangle), and[apply(size-geq,x.o),green])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:green
'λx.apply(size3,iota(filter(x.s, or[and[apply(same_color,x.o),size1],yellow])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1;4:yellow
'λx.apply(or[circle,and[not[rectangle],and[triangle,or[green,rectangle]]]],iota(filter(x.s, green)))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:and[%s,%s];4:not[%s];4:rectangle;4:and[%s,%s];4:triangle;4:or[%s,%s];4:green;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(size3,iota(filter(x.s, and[or[iff[size2,and[rectangle,yellow]],blue],blue])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:iff[%s,%s];4:size2;4:and[%s,%s];4:rectangle;4:yellow;4:blue;4:blue
'λx.apply(circle,iota(filter(filter(filter(x.s, rectangle), size1), nor[triangle,size3])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1;4:nor[%s,%s];4:triangle;4:size3
'λx.apply(and[and[circle,iff[not[size2],triangle]],size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:iff[%s,%s];4:not[%s];4:size2;4:triangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[and[or[size3,size3],or[iff[blue,and[rectangle,or[size3,and[green,implies[triangle,and[yellow,or[size1,circle]]]]]]],green]],size3],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size3;4:size3;4:or[%s,%s];4:iff[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:size3;4:and[%s,%s];4:green;4:implies[%s,%s];4:triangle;4:and[%s,%s];4:yellow;4:or[%s,%s];4:size1;4:circle;4:green;4:size3;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(filter(x.s, rectangle), apply(size-geq,x.o)), triangle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:triangle
'λx.apply(and[iff[not[and[blue,iff[rectangle,size1]]],circle],yellow],iota(filter(filter(x.s, triangle), apply(same_shape,iota(x.s)))))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:not[%s];4:and[%s,%s];4:blue;4:iff[%s,%s];4:rectangle;4:size1;4:circle;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(or[yellow,size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:size2;1:%s.o;2:x
'λx.apply(apply(size-leq,iota(filter(x.s, iff[rectangle,or[apply(same_size,iota(filter(filter(filter(filter(filter(filter(filter(filter(x.s, triangle), or[green,yellow]), and[size3,not[size2]]), green), blue), rectangle), and[blue,or[size1,green]]), iff[size1,and[blue,size1]]))),apply(size-lt,iota(x.s))]]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:rectangle;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:or[%s,%s];4:green;4:yellow;4:and[%s,%s];4:size3;4:not[%s];4:size2;4:green;4:blue;4:rectangle;4:and[%s,%s];4:blue;4:or[%s,%s];4:size1;4:green;4:iff[%s,%s];4:size1;4:and[%s,%s];4:blue;4:size1;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(and[rectangle,circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.exists(blue, filter(filter(filter(x.s, not[not[not[size2]]]), apply(same_shape,iota(x.s))), and[apply(size-gt,x.o),size1]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:not[%s];4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:size1
'λx.contains(iota(filter(x.s, triangle)), filter(filter(x.s, triangle), or[yellow,size3]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:or[%s,%s];4:yellow;4:size3
'λx.apply(and[size1,or[rectangle,or[and[apply(size-lt,iota(x.s)),apply(size-lt,iota(x.s))],yellow]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:or[%s,%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:yellow;1:%s.o;2:x
'λx.exists(rectangle, filter(filter(filter(x.s, circle), not[size3]), size1))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:size3;4:size1
'λx.apply(circle,iota(filter(filter(filter(filter(x.s, triangle), and[size1,size3]), yellow), size1)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:size1;4:size3;4:yellow;4:size1
'λx.apply(apply(same_shape,iota(x.s)),iota(filter(x.s, size1)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(and[size1,not[or[or[not[size2],circle],implies[size1,nand[triangle,or[yellow,and[size1,rectangle]]]]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:not[%s];4:or[%s,%s];4:or[%s,%s];4:not[%s];4:size2;4:circle;4:implies[%s,%s];4:size1;4:nand[%s,%s];4:triangle;4:or[%s,%s];4:yellow;4:and[%s,%s];4:size1;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, size1)), filter(filter(x.s, circle), and[green,implies[green,rectangle]]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:green;4:implies[%s,%s];4:green;4:rectangle
'λx.apply(iff[circle,not[not[and[rectangle,green]]]],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:iff[%s,%s];4:circle;4:not[%s];4:not[%s];4:and[%s,%s];4:rectangle;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(size2,iota(filter(filter(filter(filter(x.s, circle), size1), implies[not[and[and[blue,blue],apply(same_color,x.o)]],blue]), size1)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1;4:implies[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue;4:size1
'λx.apply(and[nor[and[nand[not[and[green,apply(same_size,x.o)]],green],size3],size1],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:not[%s];4:and[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;4:size3;4:size1;4:blue;1:%s.o;2:x
'λx.apply(or[and[size1,size1],nand[or[circle,blue],and[iff[triangle,size3],size1]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size1;4:size1;4:nand[%s,%s];4:or[%s,%s];4:circle;4:blue;4:and[%s,%s];4:iff[%s,%s];4:triangle;4:size3;4:size1;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(x.s, rectangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.forall(circle,filter(x.s, size1))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(nor[green,size1],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:green;4:size1;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, size1)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(blue,iota(filter(filter(filter(x.s, green), rectangle), size1)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle;4:size1
'λx.apply(apply(size-geq,x.o),iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(nand[triangle,rectangle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:rectangle;1:%s.o;2:x
'λx.apply(and[rectangle,green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:green;1:%s.o;2:x
'λx.apply(apply(same_size,x.o),iota(filter(filter(filter(filter(filter(filter(x.s, or[or[apply(same_shape,x.o),and[implies[and[apply(same_shape,iota(filter(filter(x.s, and[apply(size-geq,x.o),not[yellow]]), and[blue,not[triangle]]))),apply(same_shape,x.o)],rectangle],blue]],yellow]), and[size1,size1]), rectangle), apply(same_color,x.o)), size3), and[rectangle,not[yellow]])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:not[%s];4:yellow;4:and[%s,%s];4:blue;4:not[%s];4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle;4:blue;4:yellow;4:and[%s,%s];4:size1;4:size1;4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3;4:and[%s,%s];4:rectangle;4:not[%s];4:yellow
'λx.apply(or[blue,rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:rectangle;1:%s.o;2:x
'λx.contains(iota(x.s), filter(x.s, size3))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(size1,iota(filter(filter(x.s, and[and[blue,rectangle],not[and[and[and[not[size1],size3],green],blue]]]), size2)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:blue;4:rectangle;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size1;4:size3;4:green;4:blue;4:size2
'λx.apply(or[rectangle,size3],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_color,iota(filter(filter(filter(filter(filter(x.s, iff[blue,iff[or[rectangle,and[not[rectangle],and[apply(same_color,x.o),size1]]],size1]]), green), apply(same_color,x.o)), circle), size1))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:blue;4:iff[%s,%s];4:or[%s,%s];4:rectangle;4:and[%s,%s];4:not[%s];4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1;4:size1;4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;4:size1;1:%s.o;2:x
'λx.apply(and[triangle,and[not[size1],circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:not[%s];4:size1;4:circle;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, blue), size2)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2
'λx.apply(or[or[apply(same_size,x.o),size3],green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;4:green;1:%s.o;2:x
'λx.apply(or[size2,nor[apply(same_color,iota(x.s)),triangle]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:nor[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[circle,apply(same_size,iota(filter(x.s, circle)))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;1:%s.o;2:x
'λx.empty(filter(x.s, not[apply(same_color,iota(filter(x.s, and[apply(same_shape,x.o),not[size1]])))]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:size1
'λx.forall(not[size1],filter(filter(x.s, size2), circle))'	0:forall(%s,%s);4:not[%s];4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle
'λx.apply(and[size2,and[green,triangle]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:green;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.forall(size1,filter(filter(filter(filter(filter(x.s, green), size2), or[and[rectangle,size1],triangle]), or[size1,green]), iff[size3,and[size2,size1]]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size2;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:size1;4:triangle;4:or[%s,%s];4:size1;4:green;4:iff[%s,%s];4:size3;4:and[%s,%s];4:size2;4:size1
'λx.apply(size2,iota(filter(filter(filter(x.s, size1), size2), size1)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2;4:size1
'λx.apply(or[circle,apply(size-lt,x.o)],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:%s.o;2:x
'λx.empty(filter(x.s, apply(same_shape,x.o)))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(and[rectangle,nor[green,and[and[size2,size2],not[yellow]]]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:nor[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:size2;4:size2;4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.contains(iota(filter(x.s, nor[size2,size2])), filter(filter(filter(filter(x.s, iff[triangle,not[or[circle,size2]]]), size1), triangle), rectangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size2;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:triangle;4:not[%s];4:or[%s,%s];4:circle;4:size2;4:size1;4:triangle;4:rectangle
'λx.forall(green,filter(x.s, implies[rectangle,size2]))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:rectangle;4:size2
'λx.apply(and[or[apply(size-leq,x.o),triangle],size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:triangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.forall(or[green,and[blue,implies[blue,size3]]],filter(filter(filter(x.s, triangle), apply(same_size,x.o)), iff[not[size2],apply(same_color,iota(filter(x.s, apply(same_color,x.o))))]))'	0:forall(%s,%s);4:or[%s,%s];4:green;4:and[%s,%s];4:blue;4:implies[%s,%s];4:blue;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:iff[%s,%s];4:not[%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(and[and[and[blue,and[size1,triangle]],nor[or[circle,and[blue,circle]],green]],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:size1;4:triangle;4:nor[%s,%s];4:or[%s,%s];4:circle;4:and[%s,%s];4:blue;4:circle;4:green;4:blue;1:%s.o;2:x
'λx.exists(size1, filter(x.s, blue))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(circle,iota(filter(x.s, size1)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(apply(size-gt,iota(x.s)),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(x.s, rectangle), apply(same_size,x.o)))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, size1)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(yellow,iota(filter(filter(x.s, yellow), yellow)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:yellow
'λx.apply(and[size1,rectangle],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(nand[blue,and[iff[triangle,size1],size1]],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:nand[%s,%s];4:blue;4:and[%s,%s];4:iff[%s,%s];4:triangle;4:size1;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(and[or[size2,green],not[size3]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size2;4:green;4:not[%s];4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size2,size3],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(size-gt,iota(filter(filter(filter(x.s, size1), rectangle), rectangle))),iota(filter(x.s, not[apply(same_shape,iota(x.s))])))'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(filter(filter(filter(x.s, size2), or[and[rectangle,and[triangle,not[or[nor[triangle,circle],triangle]]]],size1]), rectangle), size2), not[blue])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:triangle;4:not[%s];4:or[%s,%s];4:nor[%s,%s];4:triangle;4:circle;4:triangle;4:size1;4:rectangle;4:size2;4:not[%s];4:blue
'λx.apply(iff[nor[not[blue],apply(size-lt,x.o)],rectangle],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:nor[%s,%s];4:not[%s];4:blue;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_size,iota(filter(x.s, or[blue,triangle]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:triangle;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, not[green]), and[yellow,triangle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:and[%s,%s];4:yellow;4:triangle
'λx.apply(and[nor[not[triangle],yellow],iff[circle,or[rectangle,yellow]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:not[%s];4:triangle;4:yellow;4:iff[%s,%s];4:circle;4:or[%s,%s];4:rectangle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[blue,and[size3,and[green,size2]]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:blue;4:and[%s,%s];4:size3;4:and[%s,%s];4:green;4:size2;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, blue), or[triangle,apply(same_size,iota(x.s))])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[blue,size3],not[rectangle]],iota(filter(filter(x.s, triangle), size3)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:size3;4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3
'λx.exists(circle, filter(x.s, blue))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.forall(yellow,filter(filter(x.s, green), not[green]))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:green
'λx.apply(not[not[apply(size-leq,iota(filter(x.s, circle)))]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;1:%s.o;2:x
'λx.apply(not[and[triangle,circle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:triangle;4:circle;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(x.s, circle), not[not[rectangle]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:not[%s];4:rectangle
'λx.contains(x.o, filter(x.s, and[size3,size2]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:size2
'λx.apply(blue,iota(filter(filter(x.s, circle), not[rectangle])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:rectangle
'λx.apply(and[triangle,triangle],iota(filter(x.s, apply(size-leq,iota(filter(x.s, and[blue,rectangle]))))))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:rectangle
'λx.contains(iota(filter(x.s, yellow)), filter(filter(filter(filter(x.s, implies[or[apply(same_shape,x.o),rectangle],and[nor[yellow,not[size3]],rectangle]]), size3), circle), not[apply(same_size,x.o)]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle;4:and[%s,%s];4:nor[%s,%s];4:yellow;4:not[%s];4:size3;4:rectangle;4:size3;4:circle;4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.empty(filter(filter(x.s, size3), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size1
'λx.apply(apply(same_shape,x.o),iota(filter(filter(filter(x.s, size1), triangle), circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle;4:circle
'λx.apply(not[size2],iota(filter(filter(x.s, blue), size1)))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1
'λx.apply(implies[rectangle,implies[apply(same_size,iota(x.s)),yellow]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:rectangle;4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:yellow;1:%s.o;2:x
'λx.forall(size3,filter(x.s, or[and[circle,or[not[size1],size1]],or[and[size1,green],size2]]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:circle;4:or[%s,%s];4:not[%s];4:size1;4:size1;4:or[%s,%s];4:and[%s,%s];4:size1;4:green;4:size2
'λx.apply(and[or[and[rectangle,or[size1,green]],apply(same_shape,x.o)],and[or[apply(same_size,x.o),green],and[and[triangle,yellow],or[apply(same_color,iota(x.s)),nand[size3,circle]]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:rectangle;4:or[%s,%s];4:size1;4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;4:and[%s,%s];4:and[%s,%s];4:triangle;4:yellow;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:nand[%s,%s];4:size3;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[blue,apply(same_color,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(not[and[yellow,triangle]],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:yellow;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(apply(same_size,iota(filter(x.s, yellow))),iota(filter(x.s, and[not[rectangle],green])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:rectangle;4:green
'λx.apply(and[blue,not[iff[blue,yellow]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:not[%s];4:iff[%s,%s];4:blue;4:yellow;1:%s.o;2:x
'λx.forall(and[not[triangle],rectangle],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:not[%s];4:triangle;4:rectangle;3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, circle), rectangle), nand[size2,apply(same_shape,x.o)]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle;4:nand[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(nor[size2,circle],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:size2;4:circle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, not[rectangle])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;3:%s.s;2:x
'λx.apply(and[and[not[and[or[size1,triangle],blue]],yellow],or[rectangle,rectangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:or[%s,%s];4:size1;4:triangle;4:blue;4:yellow;4:or[%s,%s];4:rectangle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[size3,and[size2,yellow]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size3;4:and[%s,%s];4:size2;4:yellow;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(filter(x.s, circle), triangle), size3), blue), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle;4:size3;4:blue;4:yellow
'λx.apply(or[not[circle],size1],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:circle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(filter(filter(filter(x.s, size2), blue), and[yellow,yellow]), yellow), triangle), size3))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue;4:and[%s,%s];4:yellow;4:yellow;4:yellow;4:triangle;4:size3
'λx.apply(circle,iota(filter(filter(x.s, size2), green)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green
'λx.apply(not[apply(same_size,iota(filter(filter(filter(x.s, size1), triangle), circle)))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle;4:circle;1:%s.o;2:x
'λx.apply(not[apply(same_shape,iota(x.s))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(x.s, or[apply(same_shape,iota(filter(x.s, green))),not[circle]]), triangle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:circle;4:triangle
'λx.contains(iota(filter(filter(x.s, size2), size3)), filter(filter(filter(x.s, size2), green), triangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green;4:triangle
'λx.forall(or[not[rectangle],size2],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:not[%s];4:rectangle;4:size2;3:%s.s;2:x
'λx.apply(and[or[circle,and[rectangle,size2]],size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:circle;4:and[%s,%s];4:rectangle;4:size2;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(or[rectangle,green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:green;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, size3), and[size3,or[yellow,size2]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:size3;4:or[%s,%s];4:yellow;4:size2
'λx.apply(not[and[or[and[size3,rectangle],and[blue,yellow]],blue]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size3;4:rectangle;4:and[%s,%s];4:blue;4:yellow;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(x.s, and[or[size3,size1],rectangle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:size3;4:size1;4:rectangle
'λx.apply(rectangle,iota(filter(filter(filter(x.s, and[size1,size2]), or[rectangle,or[rectangle,and[not[size1],nand[blue,size1]]]]), green)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size2;4:or[%s,%s];4:rectangle;4:or[%s,%s];4:rectangle;4:and[%s,%s];4:not[%s];4:size1;4:nand[%s,%s];4:blue;4:size1;4:green
'λx.apply(size2,iota(filter(filter(filter(x.s, size3), size2), yellow)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2;4:yellow
'λx.apply(implies[or[and[not[circle],not[and[blue,blue]]],or[size1,and[circle,green]]],size3],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:or[%s,%s];4:and[%s,%s];4:not[%s];4:circle;4:not[%s];4:and[%s,%s];4:blue;4:blue;4:or[%s,%s];4:size1;4:and[%s,%s];4:circle;4:green;4:size3;1:%s.o;2:x
'λx.apply(and[not[or[nor[apply(same_shape,iota(filter(x.s, yellow))),circle],size2]],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:or[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle;4:size2;4:yellow;1:%s.o;2:x
'λx.apply(or[apply(same_color,iota(filter(filter(x.s, size1), size2))),blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2;4:blue;1:%s.o;2:x
'λx.apply(or[and[circle,circle],yellow],iota(filter(filter(filter(x.s, size2), apply(same_color,iota(filter(filter(filter(filter(filter(filter(x.s, apply(same_size,iota(filter(x.s, yellow)))), and[green,size2]), yellow), blue), implies[green,circle]), or[or[size3,size3],size3])))), circle)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:circle;4:circle;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:green;4:size2;4:yellow;4:blue;4:implies[%s,%s];4:green;4:circle;4:or[%s,%s];4:or[%s,%s];4:size3;4:size3;4:size3;4:circle
'λx.apply(implies[green,size1],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:green;4:size1;1:%s.o;2:x
'λx.apply(iff[apply(same_color,x.o),blue],iota(filter(filter(filter(x.s, size1), blue), yellow)))'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue;4:yellow
'λx.apply(circle,iota(filter(filter(x.s, apply(same_size,iota(filter(x.s, circle)))), or[size1,circle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:size1;4:circle
'λx.empty(filter(filter(filter(filter(filter(x.s, circle), and[and[size2,blue],yellow]), size2), triangle), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:and[%s,%s];4:size2;4:blue;4:yellow;4:size2;4:triangle;4:blue
'λx.apply(not[apply(size-gt,x.o)],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(or[and[not[size1],and[and[blue,triangle],green]],apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:not[%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:blue;4:triangle;4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(filter(filter(filter(filter(filter(x.s, green), and[and[rectangle,size2],size3]), size2), size2), size3), iff[apply(same_color,iota(filter(filter(filter(filter(x.s, rectangle), nand[and[not[size2],blue],green]), size1), blue))),green]), circle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size2;4:size3;4:size2;4:size2;4:size3;4:iff[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:nand[%s,%s];4:and[%s,%s];4:not[%s];4:size2;4:blue;4:green;4:size1;4:blue;4:green;4:circle
'λx.forall(blue,filter(x.s, green))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[size2,size3],iota(filter(filter(x.s, apply(size-lt,iota(x.s))), rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:rectangle
'λx.forall(not[and[and[blue,yellow],size1]],x.s)'	0:forall(%s,%s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:yellow;4:size1;3:%s.s;2:x
'λx.apply(and[and[triangle,rectangle],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:rectangle;4:size3;1:%s.o;2:x
'λx.apply(and[apply(size-gt,iota(x.s)),and[size3,yellow]],iota(filter(filter(filter(filter(filter(x.s, triangle), rectangle), apply(size-leq,iota(x.s))), not[size1]), and[green,not[or[blue,and[size1,circle]]]])))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:not[%s];4:size1;4:and[%s,%s];4:green;4:not[%s];4:or[%s,%s];4:blue;4:and[%s,%s];4:size1;4:circle
'λx.exists(size1, filter(filter(x.s, triangle), or[size2,blue]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:or[%s,%s];4:size2;4:blue
'λx.exists(apply(size-geq,iota(filter(filter(x.s, iff[and[not[size1],rectangle],size3]), apply(same_color,iota(x.s))))), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:and[%s,%s];4:not[%s];4:size1;4:rectangle;4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(green,iota(filter(filter(x.s, apply(same_shape,iota(filter(filter(filter(x.s, not[blue]), green), blue)))), circle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:green;4:blue;4:circle
'λx.apply(or[not[green],rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:green;4:rectangle;1:%s.o;2:x
'λx.apply(and[implies[size3,triangle],green],iota(filter(x.s, green)))'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:size3;4:triangle;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.contains(x.o, filter(filter(filter(filter(x.s, or[blue,triangle]), size2), or[or[nand[triangle,green],or[triangle,yellow]],rectangle]), blue))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:triangle;4:size2;4:or[%s,%s];4:or[%s,%s];4:nand[%s,%s];4:triangle;4:green;4:or[%s,%s];4:triangle;4:yellow;4:rectangle;4:blue
'λx.apply(implies[blue,apply(size-lt,iota(filter(filter(x.s, yellow), or[blue,rectangle])))],iota(filter(filter(filter(x.s, yellow), green), yellow)))'	0:apply(%s,%s);4:implies[%s,%s];4:blue;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:blue;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green;4:yellow
'λx.apply(and[and[apply(same_size,iota(x.s)),not[not[blue]]],size1],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:not[%s];4:not[%s];4:blue;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(blue,iota(filter(x.s, not[nor[size2,apply(same_size,x.o)]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:nor[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.contains(x.o, filter(filter(filter(filter(x.s, or[triangle,not[apply(size-lt,x.o)]]), apply(same_size,x.o)), green), and[size1,and[size3,triangle]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:not[%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;4:and[%s,%s];4:size1;4:and[%s,%s];4:size3;4:triangle
'λx.apply(nand[rectangle,size2],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:rectangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(not[size2],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.forall(rectangle,filter(filter(x.s, apply(size-leq,iota(x.s))), apply(same_color,iota(filter(filter(filter(filter(filter(x.s, apply(same_shape,x.o)), size2), implies[rectangle,triangle]), green), size1)))))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2;4:implies[%s,%s];4:rectangle;4:triangle;4:green;4:size1
'λx.forall(iff[nor[nand[blue,iff[size3,or[circle,not[yellow]]]],green],size1],x.s)'	0:forall(%s,%s);4:iff[%s,%s];4:nor[%s,%s];4:nand[%s,%s];4:blue;4:iff[%s,%s];4:size3;4:or[%s,%s];4:circle;4:not[%s];4:yellow;4:green;4:size1;3:%s.s;2:x
'λx.forall(and[blue,green],filter(filter(x.s, green), green))'	0:forall(%s,%s);4:and[%s,%s];4:blue;4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:green
'λx.apply(and[not[apply(same_color,x.o)],or[size3,blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:or[%s,%s];4:size3;4:blue;1:%s.o;2:x
'λx.apply(and[size1,not[rectangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:not[%s];4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[apply(same_size,iota(filter(x.s, and[rectangle,size3])))],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(x.s, size2), size2)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2
'λx.apply(or[not[and[size1,size3]],apply(same_shape,iota(x.s))],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:and[%s,%s];4:size1;4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(not[nand[not[size1],and[and[yellow,size2],implies[yellow,or[green,size1]]]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:nand[%s,%s];4:not[%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:yellow;4:size2;4:implies[%s,%s];4:yellow;4:or[%s,%s];4:green;4:size1;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(x.s, or[yellow,green]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:green
'λx.apply(and[size1,size1],iota(filter(x.s, not[green])))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green
'λx.empty(filter(filter(x.s, or[green,apply(size-lt,iota(x.s))]), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:size2
'λx.apply(nand[rectangle,yellow],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:rectangle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(or[green,rectangle],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.contains(x.o, filter(filter(filter(x.s, nor[and[size3,implies[blue,green]],or[yellow,circle]]), blue), and[size2,yellow]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:and[%s,%s];4:size3;4:implies[%s,%s];4:blue;4:green;4:or[%s,%s];4:yellow;4:circle;4:blue;4:and[%s,%s];4:size2;4:yellow
'λx.apply(size2,iota(filter(filter(x.s, circle), triangle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle
'λx.apply(apply(same_size,iota(x.s)),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_shape,iota(filter(x.s, nand[triangle,size1]))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:triangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.exists(and[iff[blue,and[and[not[blue],yellow],and[size3,rectangle]]],and[size1,rectangle]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:iff[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:blue;4:yellow;4:and[%s,%s];4:size3;4:rectangle;4:and[%s,%s];4:size1;4:rectangle;3:%s.s;2:x
'λx.apply(and[not[implies[yellow,green]],and[or[and[blue,not[blue]],and[green,apply(same_shape,x.o)]],size3]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:implies[%s,%s];4:yellow;4:green;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:blue;4:not[%s];4:blue;4:and[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[apply(same_shape,x.o),yellow],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(size3,iota(filter(x.s, nor[and[blue,yellow],circle])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:and[%s,%s];4:blue;4:yellow;4:circle
'λx.apply(and[triangle,rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:rectangle;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, and[blue,green])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:green
'λx.forall(green,filter(filter(filter(x.s, yellow), not[or[circle,apply(same_size,iota(x.s))]]), size3))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:or[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size3
'λx.exists(blue, filter(x.s, apply(same_size,iota(x.s))))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, circle), and[size3,size1]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:size3;4:size1
'λx.apply(and[size3,not[yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:not[%s];4:yellow;1:%s.o;2:x
'λx.apply(apply(same_color,iota(x.s)),iota(filter(x.s, size1)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(and[triangle,or[apply(same_shape,x.o),size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(filter(x.s, implies[or[and[circle,not[blue]],green],size3]), yellow), nor[circle,and[size1,yellow]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:or[%s,%s];4:and[%s,%s];4:circle;4:not[%s];4:blue;4:green;4:size3;4:yellow;4:nor[%s,%s];4:circle;4:and[%s,%s];4:size1;4:yellow
'λx.apply(nand[green,green],iota(filter(filter(filter(x.s, blue), triangle), yellow)))'	0:apply(%s,%s);4:nand[%s,%s];4:green;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle;4:yellow
'λx.contains(iota(filter(filter(x.s, green), or[apply(size-lt,iota(filter(x.s, and[yellow,and[blue,green]]))),size2])), filter(x.s, blue))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:and[%s,%s];4:blue;4:green;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(implies[and[or[not[and[or[size3,and[green,rectangle]],yellow]],yellow],green],and[size2,nor[implies[apply(same_size,iota(x.s)),size2],yellow]]],iota(filter(filter(x.s, and[triangle,circle]), size2)))'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:or[%s,%s];4:not[%s];4:and[%s,%s];4:or[%s,%s];4:size3;4:and[%s,%s];4:green;4:rectangle;4:yellow;4:yellow;4:green;4:and[%s,%s];4:size2;4:nor[%s,%s];4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size2;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:circle;4:size2
'λx.exists(and[blue,rectangle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:blue;4:rectangle;3:%s.s;2:x
'λx.exists(blue, filter(x.s, circle))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(apply(same_shape,iota(filter(filter(filter(x.s, blue), and[blue,or[or[not[or[and[blue,size2],not[apply(same_size,x.o)]]],blue],apply(size-gt,iota(filter(filter(filter(filter(x.s, green), circle), rectangle), circle)))]]), or[blue,blue]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:blue;4:or[%s,%s];4:or[%s,%s];4:not[%s];4:or[%s,%s];4:and[%s,%s];4:blue;4:size2;4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:circle;4:rectangle;4:circle;4:or[%s,%s];4:blue;4:blue;1:%s.o;2:x
'λx.forall(blue,filter(filter(x.s, blue), not[nand[blue,and[size2,and[and[and[size1,and[circle,iff[size1,rectangle]]],not[not[or[or[not[rectangle],size2],rectangle]]]],circle]]]]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:nand[%s,%s];4:blue;4:and[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:circle;4:iff[%s,%s];4:size1;4:rectangle;4:not[%s];4:not[%s];4:or[%s,%s];4:or[%s,%s];4:not[%s];4:rectangle;4:size2;4:rectangle;4:circle
'λx.apply(or[size1,rectangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(size-gt,iota(filter(x.s, yellow))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(x.s, or[rectangle,triangle])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:triangle
'λx.apply(and[rectangle,apply(same_size,iota(filter(x.s, size2)))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;1:%s.o;2:x
'λx.apply(iff[green,implies[blue,circle]],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:green;4:implies[%s,%s];4:blue;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[green,and[blue,green]],iota(filter(x.s, and[rectangle,size2])))'	0:apply(%s,%s);4:nand[%s,%s];4:green;4:and[%s,%s];4:blue;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:size2
'λx.apply(yellow,iota(filter(filter(filter(filter(x.s, circle), triangle), nand[circle,green]), rectangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle;4:nand[%s,%s];4:circle;4:green;4:rectangle
'λx.apply(nor[rectangle,size1],iota(filter(filter(filter(x.s, circle), apply(same_color,iota(x.s))), yellow)))'	0:apply(%s,%s);4:nor[%s,%s];4:rectangle;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:yellow
'λx.apply(green,iota(filter(filter(x.s, or[blue,and[circle,size1]]), nor[iff[size3,iff[green,or[triangle,circle]]],green])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:and[%s,%s];4:circle;4:size1;4:nor[%s,%s];4:iff[%s,%s];4:size3;4:iff[%s,%s];4:green;4:or[%s,%s];4:triangle;4:circle;4:green
'λx.apply(green,iota(filter(filter(filter(x.s, blue), circle), triangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle;4:triangle
'λx.exists(iff[and[triangle,iff[and[size3,size1],green]],green], x.s)'	0:exists(%s, %s);4:iff[%s,%s];4:and[%s,%s];4:triangle;4:iff[%s,%s];4:and[%s,%s];4:size3;4:size1;4:green;4:green;3:%s.s;2:x
'λx.exists(green, filter(x.s, apply(size-leq,iota(filter(filter(x.s, yellow), green)))))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green
'λx.apply(and[and[yellow,or[or[triangle,size1],rectangle]],size1],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:or[%s,%s];4:or[%s,%s];4:triangle;4:size1;4:rectangle;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(circle,iota(filter(x.s, apply(same_color,x.o))))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, size1), apply(size-gt,x.o))))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.forall(not[and[or[triangle,apply(same_size,x.o)],size1]],x.s)'	0:forall(%s,%s);4:not[%s];4:and[%s,%s];4:or[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1;3:%s.s;2:x
'λx.apply(or[size1,not[triangle]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:not[%s];4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.exists(yellow, filter(x.s, not[green]))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green
'λx.exists(size3, filter(filter(filter(x.s, triangle), and[and[circle,iff[size3,green]],rectangle]), size3))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:and[%s,%s];4:circle;4:iff[%s,%s];4:size3;4:green;4:rectangle;4:size3
'λx.apply(apply(same_shape,iota(filter(filter(x.s, and[size1,blue]), nand[apply(same_shape,x.o),green]))),iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:blue;4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.forall(not[size2],filter(filter(filter(x.s, apply(same_shape,x.o)), size2), size3))'	0:forall(%s,%s);4:not[%s];4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2;4:size3
'λx.apply(and[iff[or[or[rectangle,size1],yellow],and[or[size1,size1],circle]],apply(same_size,x.o)],iota(filter(filter(filter(filter(filter(filter(x.s, not[triangle]), size3), and[not[yellow],or[or[size1,size2],size1]]), size2), rectangle), circle)))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:or[%s,%s];4:rectangle;4:size1;4:yellow;4:and[%s,%s];4:or[%s,%s];4:size1;4:size1;4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:size3;4:and[%s,%s];4:not[%s];4:yellow;4:or[%s,%s];4:or[%s,%s];4:size1;4:size2;4:size1;4:size2;4:rectangle;4:circle
'λx.apply(apply(size-geq,iota(filter(x.s, not[rectangle]))),iota(filter(x.s, size3)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.forall(not[size1],x.s)'	0:forall(%s,%s);4:not[%s];4:size1;3:%s.s;2:x
'λx.contains(iota(x.s), filter(x.s, green))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(circle,iota(filter(filter(x.s, green), or[triangle,rectangle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:triangle;4:rectangle
'λx.apply(or[yellow,circle],iota(filter(x.s, and[size1,size3])))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size3
'λx.forall(and[rectangle,circle],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:rectangle;4:circle;3:%s.s;2:x
'λx.apply(yellow,iota(filter(x.s, or[apply(size-leq,x.o),nand[yellow,or[rectangle,and[not[circle],and[size2,apply(size-leq,iota(x.s))]]]]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:nand[%s,%s];4:yellow;4:or[%s,%s];4:rectangle;4:and[%s,%s];4:not[%s];4:circle;4:and[%s,%s];4:size2;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size1,and[size3,apply(same_color,x.o)]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.exists(not[triangle], filter(x.s, and[size3,apply(same_color,x.o)]))'	0:exists(%s, %s);4:not[%s];4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, or[and[size3,green],size2]), size3)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size3;4:green;4:size2;4:size3
'λx.contains(iota(filter(filter(x.s, triangle), and[and[size2,nand[and[size1,blue],yellow]],and[size3,yellow]])), filter(filter(x.s, not[not[and[triangle,or[size3,blue]]]]), size2))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:and[%s,%s];4:size2;4:nand[%s,%s];4:and[%s,%s];4:size1;4:blue;4:yellow;4:and[%s,%s];4:size3;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:and[%s,%s];4:triangle;4:or[%s,%s];4:size3;4:blue;4:size2
'λx.contains(iota(x.s), filter(filter(x.s, circle), implies[blue,rectangle]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:implies[%s,%s];4:blue;4:rectangle
'λx.apply(and[size2,apply(same_shape,x.o)],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(x.s, and[apply(same_size,x.o),yellow])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow
'λx.forall(not[apply(size-gt,iota(filter(x.s, rectangle)))],x.s)'	0:forall(%s,%s);4:not[%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, and[or[size2,rectangle],and[not[size2],apply(same_shape,x.o)]]), not[and[circle,blue]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:size2;4:rectangle;4:and[%s,%s];4:not[%s];4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:circle;4:blue
'λx.contains(iota(x.s), filter(filter(x.s, circle), size2))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size2
'λx.apply(nand[rectangle,size1],iota(filter(x.s, apply(same_color,iota(filter(x.s, or[apply(same_shape,iota(filter(filter(x.s, and[iff[rectangle,triangle],triangle]), and[and[circle,rectangle],blue]))),and[size2,and[or[not[and[size3,apply(same_color,iota(x.s))]],size3],size1]]]))))))'	0:apply(%s,%s);4:nand[%s,%s];4:rectangle;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:iff[%s,%s];4:rectangle;4:triangle;4:triangle;4:and[%s,%s];4:and[%s,%s];4:circle;4:rectangle;4:blue;4:and[%s,%s];4:size2;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size3;4:size1
'λx.apply(or[apply(same_size,x.o),circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;1:%s.o;2:x
'λx.apply(nand[circle,size1],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:circle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(not[and[triangle,or[or[not[blue],not[and[rectangle,blue]]],not[and[size2,and[yellow,yellow]]]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:triangle;4:or[%s,%s];4:or[%s,%s];4:not[%s];4:blue;4:not[%s];4:and[%s,%s];4:rectangle;4:blue;4:not[%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:yellow;4:yellow;1:%s.o;2:x
'λx.apply(or[nor[size3,rectangle],blue],iota(filter(filter(filter(filter(filter(filter(x.s, rectangle), blue), yellow), blue), not[or[blue,or[and[green,triangle],or[green,not[size1]]]]]), and[iff[not[yellow],apply(size-lt,x.o)],not[blue]])))'	0:apply(%s,%s);4:or[%s,%s];4:nor[%s,%s];4:size3;4:rectangle;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue;4:yellow;4:blue;4:not[%s];4:or[%s,%s];4:blue;4:or[%s,%s];4:and[%s,%s];4:green;4:triangle;4:or[%s,%s];4:green;4:not[%s];4:size1;4:and[%s,%s];4:iff[%s,%s];4:not[%s];4:yellow;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:not[%s];4:blue
'λx.apply(size3,iota(filter(filter(filter(x.s, triangle), and[not[circle],implies[size3,blue]]), and[iff[blue,size2],size2])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:not[%s];4:circle;4:implies[%s,%s];4:size3;4:blue;4:and[%s,%s];4:iff[%s,%s];4:blue;4:size2;4:size2
'λx.apply(apply(size-gt,iota(filter(x.s, size2))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;1:%s.o;2:x
'λx.forall(apply(size-geq,iota(filter(filter(filter(x.s, or[triangle,size2]), circle), and[rectangle,size2]))),filter(x.s, not[size3]))'	0:forall(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:size2;4:circle;4:and[%s,%s];4:rectangle;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3
'λx.exists(implies[or[rectangle,apply(size-lt,iota(x.s))],circle], x.s)'	0:exists(%s, %s);4:implies[%s,%s];4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:circle;3:%s.s;2:x
'λx.apply(and[nor[and[not[circle],not[not[nand[rectangle,apply(same_shape,iota(filter(filter(filter(x.s, yellow), rectangle), blue)))]]]],or[yellow,size3]],apply(same_size,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:not[%s];4:circle;4:not[%s];4:not[%s];4:nand[%s,%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle;4:blue;4:or[%s,%s];4:yellow;4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(filter(filter(x.s, yellow), size1), apply(same_shape,x.o)), yellow), size2)), filter(filter(x.s, yellow), implies[size1,or[blue,and[implies[yellow,triangle],green]]]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:implies[%s,%s];4:size1;4:or[%s,%s];4:blue;4:and[%s,%s];4:implies[%s,%s];4:yellow;4:triangle;4:green
'λx.apply(size3,iota(filter(x.s, not[green])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green
'λx.exists(rectangle, filter(x.s, not[apply(same_color,x.o)]))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(or[apply(same_color,iota(x.s)),not[green]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:not[%s];4:green;1:%s.o;2:x
'λx.apply(size1,iota(filter(x.s, not[yellow])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow
'λx.apply(and[implies[and[triangle,implies[green,rectangle]],not[size3]],yellow],iota(filter(filter(x.s, iff[blue,size1]), nor[nand[circle,nand[and[rectangle,or[not[or[green,size3]],green]],not[triangle]]],size2])))'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:triangle;4:implies[%s,%s];4:green;4:rectangle;4:not[%s];4:size3;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:blue;4:size1;4:nor[%s,%s];4:nand[%s,%s];4:circle;4:nand[%s,%s];4:and[%s,%s];4:rectangle;4:or[%s,%s];4:not[%s];4:or[%s,%s];4:green;4:size3;4:green;4:not[%s];4:triangle;4:size2
'λx.apply(green,iota(filter(x.s, apply(same_color,x.o))))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(filter(x.s, size3), triangle), green)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle;4:green
'λx.apply(yellow,iota(filter(x.s, and[circle,or[green,circle]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:or[%s,%s];4:green;4:circle
'λx.forall(or[or[triangle,green],size1],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:or[%s,%s];4:triangle;4:green;4:size1;3:%s.s;2:x
'λx.contains(iota(filter(x.s, green)), filter(x.s, apply(same_size,x.o)))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(filter(filter(x.s, green), nand[blue,circle]), not[size2]), nand[size3,green]), size3)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:nand[%s,%s];4:blue;4:circle;4:not[%s];4:size2;4:nand[%s,%s];4:size3;4:green;4:size3;3:%s.s;2:x
'λx.apply(and[nand[and[not[size2],not[nand[and[rectangle,or[size1,or[blue,and[not[and[apply(same_color,iota(x.s)),nand[not[size2],implies[rectangle,implies[size1,iff[rectangle,rectangle]]]]]],size1]]]],apply(size-geq,x.o)]]],not[and[triangle,size2]]],yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:not[%s];4:size2;4:not[%s];4:nand[%s,%s];4:and[%s,%s];4:rectangle;4:or[%s,%s];4:size1;4:or[%s,%s];4:blue;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:nand[%s,%s];4:not[%s];4:size2;4:implies[%s,%s];4:rectangle;4:implies[%s,%s];4:size1;4:iff[%s,%s];4:rectangle;4:rectangle;4:size1;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:triangle;4:size2;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(x.s, iff[rectangle,blue])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:rectangle;4:blue
'λx.apply(and[and[apply(same_shape,iota(x.s)),size1],and[blue,not[size1]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:blue;4:not[%s];4:size1;1:iota(%s);3:%s.s;2:x
'λx.exists(size2, filter(filter(x.s, apply(same_size,x.o)), green))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green
'λx.apply(green,iota(filter(x.s, or[blue,or[not[green],apply(same_shape,x.o)]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:or[%s,%s];4:not[%s];4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(x.s, and[nand[yellow,yellow],not[and[rectangle,yellow]]]), rectangle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nand[%s,%s];4:yellow;4:yellow;4:not[%s];4:and[%s,%s];4:rectangle;4:yellow;4:rectangle
'λx.apply(yellow,iota(filter(x.s, and[or[size1,and[yellow,yellow]],size1])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:size1;4:and[%s,%s];4:yellow;4:yellow;4:size1
'λx.empty(filter(filter(filter(filter(x.s, size1), yellow), or[blue,yellow]), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow;4:or[%s,%s];4:blue;4:yellow;4:size1
'λx.apply(size2,iota(filter(x.s, apply(same_shape,x.o))))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(filter(x.s, triangle), not[size3]), circle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:not[%s];4:size3;4:circle
'λx.contains(x.o, filter(filter(filter(filter(x.s, size3), not[size3]), green), yellow))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:size3;4:green;4:yellow
'λx.contains(iota(x.s), filter(filter(x.s, blue), size3))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3
'λx.apply(and[circle,size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[blue,triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:triangle;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(filter(filter(filter(filter(x.s, blue), size3), not[nand[and[iff[rectangle,yellow],nor[and[apply(same_shape,x.o),size1],triangle]],not[and[implies[green,green],and[nor[yellow,yellow],size2]]]]]), iff[green,rectangle]), green), or[green,apply(same_size,iota(filter(filter(x.s, not[green]), yellow)))])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3;4:not[%s];4:nand[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:rectangle;4:yellow;4:nor[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;4:triangle;4:not[%s];4:and[%s,%s];4:implies[%s,%s];4:green;4:green;4:and[%s,%s];4:nor[%s,%s];4:yellow;4:yellow;4:size2;4:iff[%s,%s];4:green;4:rectangle;4:green;4:or[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:yellow
'λx.contains(x.o, filter(filter(filter(x.s, not[size1]), rectangle), size1))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:rectangle;4:size1
'λx.forall(rectangle,filter(filter(filter(filter(filter(x.s, and[yellow,apply(same_color,iota(x.s))]), circle), green), blue), or[size2,size2]))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:circle;4:green;4:blue;4:or[%s,%s];4:size2;4:size2
'λx.forall(size3,filter(x.s, rectangle))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(size1,iota(filter(x.s, and[size3,and[and[or[green,and[blue,implies[apply(size-geq,x.o),size1]]],size1],apply(same_color,x.o)]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:green;4:and[%s,%s];4:blue;4:implies[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:size1;4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.contains(x.o, filter(filter(filter(x.s, green), size3), rectangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size3;4:rectangle
'λx.apply(and[and[yellow,blue],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:blue;4:triangle;1:%s.o;2:x
'λx.apply(and[and[triangle,not[and[or[or[rectangle,blue],triangle],triangle]]],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:not[%s];4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:rectangle;4:blue;4:triangle;4:triangle;4:triangle;1:%s.o;2:x
'λx.apply(size1,iota(filter(x.s, or[apply(same_color,x.o),apply(same_color,iota(filter(filter(filter(x.s, yellow), apply(same_size,iota(x.s))), blue)))])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:blue
'λx.apply(iff[size1,size1],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:size1;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(filter(filter(x.s, iff[circle,yellow]), circle), blue), nor[apply(same_size,iota(filter(x.s, rectangle))),size1])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:circle;4:yellow;4:circle;4:blue;4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1
'λx.apply(or[size1,apply(size-leq,x.o)],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(x.s, apply(same_color,iota(x.s))), size2))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size2
'λx.apply(nor[green,apply(same_size,x.o)],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, size2), and[green,implies[blue,yellow]]), and[size3,size3]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:green;4:implies[%s,%s];4:blue;4:yellow;4:and[%s,%s];4:size3;4:size3
'λx.contains(iota(filter(filter(filter(filter(x.s, green), implies[rectangle,size2]), implies[blue,green]), yellow)), filter(x.s, implies[not[or[apply(same_shape,iota(x.s)),triangle]],green]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:implies[%s,%s];4:rectangle;4:size2;4:implies[%s,%s];4:blue;4:green;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:not[%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle;4:green
'λx.contains(x.o, filter(filter(x.s, and[size1,or[or[size1,blue],triangle]]), blue))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:or[%s,%s];4:or[%s,%s];4:size1;4:blue;4:triangle;4:blue
'λx.forall(or[green,size1],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:green;4:size1;3:%s.s;2:x
'λx.empty(filter(x.s, and[size1,rectangle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:rectangle
'λx.apply(or[apply(size-leq,x.o),triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:triangle;1:%s.o;2:x
'λx.apply(or[and[nand[implies[triangle,rectangle],blue],apply(same_shape,x.o)],apply(same_size,x.o)],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:implies[%s,%s];4:triangle;4:rectangle;4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.forall(apply(same_shape,iota(filter(filter(x.s, green), and[size2,not[green]]))),filter(x.s, nor[not[circle],size1]))'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:size2;4:not[%s];4:green;3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:not[%s];4:circle;4:size1
'λx.contains(iota(filter(x.s, or[not[nand[not[size1],circle]],nand[size1,apply(same_size,iota(x.s))]])), filter(filter(filter(filter(x.s, size1), blue), rectangle), circle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:nand[%s,%s];4:not[%s];4:size1;4:circle;4:nand[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue;4:rectangle;4:circle
'λx.apply(circle,iota(filter(filter(filter(filter(x.s, and[green,or[triangle,size3]]), implies[yellow,yellow]), not[size3]), or[iff[size3,yellow],size2])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:or[%s,%s];4:triangle;4:size3;4:implies[%s,%s];4:yellow;4:yellow;4:not[%s];4:size3;4:or[%s,%s];4:iff[%s,%s];4:size3;4:yellow;4:size2
'λx.exists(rectangle, filter(filter(x.s, and[size3,or[circle,nand[or[yellow,rectangle],yellow]]]), size2))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:or[%s,%s];4:circle;4:nand[%s,%s];4:or[%s,%s];4:yellow;4:rectangle;4:yellow;4:size2
'λx.apply(implies[apply(same_color,iota(x.s)),size1],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size1;1:iota(%s);3:%s.s;2:x
'λx.forall(and[not[and[not[circle],or[size3,blue]]],or[not[rectangle],apply(same_size,iota(filter(filter(filter(filter(x.s, iff[triangle,blue]), triangle), and[not[triangle],size2]), or[nand[circle,nor[yellow,triangle]],or[triangle,size2]])))]],filter(x.s, yellow))'	0:forall(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:not[%s];4:circle;4:or[%s,%s];4:size3;4:blue;4:or[%s,%s];4:not[%s];4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:triangle;4:blue;4:triangle;4:and[%s,%s];4:not[%s];4:triangle;4:size2;4:or[%s,%s];4:nand[%s,%s];4:circle;4:nor[%s,%s];4:yellow;4:triangle;4:or[%s,%s];4:triangle;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(and[circle,size1],iota(filter(filter(x.s, blue), triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle
'λx.contains(iota(filter(x.s, or[and[yellow,size3],circle])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:yellow;4:size3;4:circle;3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(filter(filter(x.s, size2), green), rectangle), and[not[circle],apply(same_size,iota(filter(x.s, apply(same_size,iota(x.s)))))])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green;4:rectangle;4:and[%s,%s];4:not[%s];4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[apply(same_size,x.o),not[blue]],iota(filter(x.s, and[not[and[green,apply(same_shape,x.o)]],or[green,circle]])))'	0:apply(%s,%s);4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:green;4:circle
'λx.contains(iota(filter(filter(filter(x.s, or[size3,apply(size-leq,iota(filter(filter(x.s, rectangle), green)))]), size2), implies[nor[green,rectangle],apply(size-lt,x.o)])), filter(filter(x.s, rectangle), and[apply(size-geq,x.o),and[not[green],triangle]]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green;4:size2;4:implies[%s,%s];4:nor[%s,%s];4:green;4:rectangle;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:and[%s,%s];4:not[%s];4:green;4:triangle
'λx.apply(size3,iota(filter(x.s, or[triangle,circle])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:circle
'λx.apply(and[and[triangle,size2],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:size2;4:triangle;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, apply(size-gt,iota(filter(x.s, green))))))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(apply(same_shape,x.o),iota(filter(filter(filter(x.s, size1), size3), and[yellow,size3])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size3;4:and[%s,%s];4:yellow;4:size3
'λx.apply(apply(same_size,iota(filter(x.s, size3))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;1:%s.o;2:x
'λx.exists(triangle, filter(x.s, size1))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(iff[size3,circle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:size3;4:circle;1:%s.o;2:x
'λx.apply(apply(size-leq,iota(filter(filter(filter(x.s, yellow), rectangle), size1))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle;4:size1;1:%s.o;2:x
'λx.apply(iff[and[size2,or[triangle,and[blue,yellow]]],triangle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:size2;4:or[%s,%s];4:triangle;4:and[%s,%s];4:blue;4:yellow;4:triangle;1:%s.o;2:x
'λx.exists(yellow, filter(filter(filter(x.s, size2), circle), not[nand[size2,or[blue,and[size1,apply(same_size,iota(filter(x.s, yellow)))]]]]))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle;4:not[%s];4:nand[%s,%s];4:size2;4:or[%s,%s];4:blue;4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(apply(same_shape,iota(x.s)),iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(size1,iota(filter(x.s, or[size1,green])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:green
'λx.apply(size3,iota(filter(filter(x.s, not[rectangle]), blue)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;4:blue
'λx.apply(blue,iota(filter(filter(filter(x.s, yellow), and[size2,size2]), green)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:size2;4:size2;4:green
'λx.apply(and[and[rectangle,and[triangle,size2]],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:triangle;4:size2;4:rectangle;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, not[green]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green
'λx.apply(and[not[not[green]],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:not[%s];4:green;4:size2;1:%s.o;2:x
'λx.apply(and[or[apply(size-gt,iota(filter(x.s, size3))),size3],size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3;4:size3;1:iota(%s);3:%s.s;2:x
'λx.exists(or[and[yellow,triangle],not[nand[triangle,and[and[size2,size2],apply(same_shape,iota(filter(x.s, and[and[and[iff[green,and[rectangle,green]],or[and[and[blue,and[yellow,not[size3]]],apply(same_color,iota(filter(x.s, yellow)))],and[triangle,rectangle]]],triangle],or[blue,apply(same_shape,x.o)]])))]]]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:yellow;4:triangle;4:not[%s];4:nand[%s,%s];4:triangle;4:and[%s,%s];4:and[%s,%s];4:size2;4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:green;4:and[%s,%s];4:rectangle;4:green;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:yellow;4:not[%s];4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:triangle;4:rectangle;4:triangle;4:or[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.exists(not[green], filter(x.s, and[blue,apply(same_shape,x.o)]))'	0:exists(%s, %s);4:not[%s];4:green;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(implies[size3,size3],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size3;4:size3;1:%s.o;2:x
'λx.exists(yellow, filter(filter(filter(x.s, nor[blue,yellow]), green), size2))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:blue;4:yellow;4:green;4:size2
'λx.contains(iota(filter(x.s, nor[nor[nor[size2,apply(same_shape,iota(filter(filter(filter(filter(x.s, size1), size3), and[and[rectangle,size1],not[green]]), yellow)))],size2],nor[size2,size3]])), filter(x.s, rectangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:nor[%s,%s];4:nor[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size3;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size1;4:not[%s];4:green;4:yellow;4:size2;4:nor[%s,%s];4:size2;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.empty(filter(filter(x.s, yellow), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle
'λx.contains(x.o, filter(filter(x.s, or[blue,not[circle]]), not[triangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:not[%s];4:circle;4:not[%s];4:triangle
'λx.apply(circle,iota(filter(filter(filter(filter(x.s, triangle), size2), rectangle), circle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2;4:rectangle;4:circle
'λx.apply(or[nand[and[rectangle,and[and[nand[and[size1,nand[circle,size2]],size2],and[not[circle],yellow]],size3]],size2],apply(same_color,iota(filter(filter(filter(filter(x.s, yellow), iff[circle,yellow]), size1), size2)))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:size1;4:nand[%s,%s];4:circle;4:size2;4:size2;4:and[%s,%s];4:not[%s];4:circle;4:yellow;4:size3;4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:iff[%s,%s];4:circle;4:yellow;4:size1;4:size2;1:%s.o;2:x
'λx.apply(and[not[or[size1,size1]],triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:or[%s,%s];4:size1;4:size1;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, rectangle), rectangle), not[yellow]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle;4:not[%s];4:yellow
'λx.apply(and[triangle,circle],iota(filter(filter(filter(x.s, rectangle), or[size2,triangle]), or[nor[green,or[size3,not[and[or[iff[or[yellow,triangle],triangle],green],size2]]]],size2])))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:or[%s,%s];4:size2;4:triangle;4:or[%s,%s];4:nor[%s,%s];4:green;4:or[%s,%s];4:size3;4:not[%s];4:and[%s,%s];4:or[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:yellow;4:triangle;4:triangle;4:green;4:size2;4:size2
'λx.forall(circle,filter(filter(x.s, size3), size1))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size1
'λx.empty(filter(filter(filter(filter(x.s, circle), and[rectangle,apply(same_color,iota(filter(x.s, size1)))]), size2), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2;4:yellow
'λx.apply(and[green,rectangle],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(or[size3,rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:rectangle;1:%s.o;2:x
'λx.apply(or[blue,size2],iota(filter(filter(x.s, triangle), and[green,and[circle,and[size1,size3]]])))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:green;4:and[%s,%s];4:circle;4:and[%s,%s];4:size1;4:size3
'λx.empty(filter(x.s, not[size2]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2
'λx.forall(circle,filter(filter(x.s, and[yellow,nand[and[circle,apply(same_color,x.o)],and[and[apply(same_shape,iota(filter(filter(x.s, not[blue]), size2))),circle],and[and[size3,blue],circle]]]]), size3))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:nand[%s,%s];4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:size2;4:circle;4:and[%s,%s];4:and[%s,%s];4:size3;4:blue;4:circle;4:size3
'λx.apply(size1,iota(filter(x.s, and[rectangle,nor[not[green],rectangle]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:nor[%s,%s];4:not[%s];4:green;4:rectangle
'λx.apply(and[green,iff[size2,circle]],iota(filter(filter(filter(x.s, size1), not[and[rectangle,size3]]), size2)))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:iff[%s,%s];4:size2;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:not[%s];4:and[%s,%s];4:rectangle;4:size3;4:size2
'λx.apply(and[size2,or[blue,implies[green,or[and[size1,and[and[size1,or[apply(same_shape,x.o),size3]],iff[circle,circle]]],and[triangle,or[green,and[or[not[size2],rectangle],and[blue,size1]]]]]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:or[%s,%s];4:blue;4:implies[%s,%s];4:green;4:or[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3;4:iff[%s,%s];4:circle;4:circle;4:and[%s,%s];4:triangle;4:or[%s,%s];4:green;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:size2;4:rectangle;4:and[%s,%s];4:blue;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[size2,green],iota(filter(filter(x.s, size3), green)))'	0:apply(%s,%s);4:nor[%s,%s];4:size2;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green
'λx.apply(or[or[blue,nor[iff[and[size1,and[not[size3],circle]],size1],size3]],circle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:blue;4:nor[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:not[%s];4:size3;4:circle;4:size1;4:size3;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[apply(same_color,iota(x.s)),size3],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size3;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, iff[size3,size3]), apply(same_shape,x.o)), and[green,and[yellow,nor[rectangle,size3]]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size3;4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:green;4:and[%s,%s];4:yellow;4:nor[%s,%s];4:rectangle;4:size3
'λx.apply(rectangle,iota(filter(filter(x.s, yellow), blue)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:blue
'λx.apply(size2,iota(filter(filter(filter(x.s, size2), and[rectangle,not[and[rectangle,size1]]]), green)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:rectangle;4:not[%s];4:and[%s,%s];4:rectangle;4:size1;4:green
'λx.exists(apply(size-gt,x.o), filter(filter(x.s, yellow), not[size1]))'	0:exists(%s, %s);4:apply(%s,%s);5:size-gt;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:size1
'λx.forall(size2,filter(x.s, and[not[yellow],and[yellow,triangle]]))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:yellow;4:and[%s,%s];4:yellow;4:triangle
'λx.empty(filter(filter(x.s, apply(size-gt,iota(x.s))), not[and[triangle,and[or[or[green,size1],triangle],size2]]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:green;4:size1;4:triangle;4:size2
'λx.apply(or[blue,blue],iota(filter(filter(filter(filter(x.s, yellow), yellow), circle), size3)))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:yellow;4:circle;4:size3
'λx.apply(size3,iota(filter(filter(x.s, triangle), rectangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle
'λx.apply(size2,iota(filter(x.s, size3)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(or[and[size3,size1],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size3;4:size1;4:blue;1:%s.o;2:x
'λx.apply(nand[triangle,not[or[green,and[and[triangle,not[blue]],size2]]]],iota(filter(x.s, green)))'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:not[%s];4:or[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:triangle;4:not[%s];4:blue;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.exists(green, filter(filter(x.s, green), not[and[and[triangle,blue],implies[size3,size2]]]))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:blue;4:implies[%s,%s];4:size3;4:size2
'λx.apply(and[size3,or[triangle,nand[size3,circle]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:or[%s,%s];4:triangle;4:nand[%s,%s];4:size3;4:circle;1:iota(%s);3:%s.s;2:x
'λx.forall(yellow,filter(filter(filter(filter(filter(filter(filter(x.s, nand[size1,and[size2,implies[not[or[blue,circle]],triangle]]]), not[green]), apply(same_shape,x.o)), or[blue,triangle]), or[size2,apply(same_shape,iota(x.s))]), blue), size3))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size1;4:and[%s,%s];4:size2;4:implies[%s,%s];4:not[%s];4:or[%s,%s];4:blue;4:circle;4:triangle;4:not[%s];4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:blue;4:triangle;4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:blue;4:size3
'λx.forall(not[blue],filter(x.s, triangle))'	0:forall(%s,%s);4:not[%s];4:blue;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(circle,iota(filter(x.s, not[blue])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.apply(and[nand[or[not[apply(same_size,x.o)],size1],nand[nand[size3,apply(same_shape,x.o)],circle]],nand[size1,size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1;4:nand[%s,%s];4:nand[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;4:nand[%s,%s];4:size1;4:size3;1:%s.o;2:x
'λx.apply(and[blue,size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:size3;1:%s.o;2:x
'λx.apply(and[apply(same_shape,iota(x.s)),not[size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:not[%s];4:size3;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(filter(filter(x.s, circle), size2), not[and[yellow,and[apply(size-gt,x.o),and[size2,size3]]]]), blue), circle)), filter(x.s, green))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size2;4:not[%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:and[%s,%s];4:size2;4:size3;4:blue;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.exists(rectangle, filter(filter(x.s, nand[size2,green]), green))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size2;4:green;4:green
'λx.apply(yellow,iota(filter(x.s, not[size2])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2
'λx.apply(size3,iota(filter(filter(x.s, or[size1,and[yellow,iff[or[and[not[iff[size1,and[triangle,size3]]],rectangle],circle],green]]]), size3)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:and[%s,%s];4:yellow;4:iff[%s,%s];4:or[%s,%s];4:and[%s,%s];4:not[%s];4:iff[%s,%s];4:size1;4:and[%s,%s];4:triangle;4:size3;4:rectangle;4:circle;4:green;4:size3
'λx.apply(and[triangle,not[size2]],iota(filter(x.s, and[size1,nor[blue,blue]])))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:nor[%s,%s];4:blue;4:blue
'λx.apply(rectangle,iota(filter(filter(x.s, size1), yellow)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow
'λx.apply(and[circle,circle],iota(filter(filter(x.s, blue), or[not[yellow],circle])))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:not[%s];4:yellow;4:circle
'λx.apply(or[and[size2,apply(same_shape,iota(filter(filter(filter(x.s, triangle), size2), apply(same_size,x.o))))],blue],iota(filter(x.s, and[blue,size3])))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size3
'λx.apply(apply(same_shape,iota(x.s)),iota(filter(x.s, circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(size2,iota(filter(filter(x.s, size1), rectangle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle
'λx.apply(triangle,iota(filter(x.s, not[blue])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.forall(and[and[nor[size3,not[size1]],not[apply(same_size,x.o)]],or[size3,apply(same_shape,x.o)]],filter(filter(x.s, nand[blue,green]), apply(same_size,iota(x.s))))'	0:forall(%s,%s);4:and[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:size3;4:not[%s];4:size1;4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:blue;4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(filter(x.s, not[and[yellow,size1]]), size3), size3)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:yellow;4:size1;4:size3;4:size3
'λx.apply(and[implies[circle,apply(same_size,x.o)],size2],iota(filter(x.s, and[rectangle,rectangle])))'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:rectangle
'λx.apply(apply(size-lt,iota(filter(filter(x.s, size3), iff[apply(same_color,iota(filter(x.s, blue))),green]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:iff[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, or[rectangle,circle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:circle
'λx.apply(nand[triangle,circle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:circle;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, green), and[and[size1,blue],size2])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:and[%s,%s];4:size1;4:blue;4:size2
'λx.apply(nand[or[implies[rectangle,green],and[rectangle,size2]],size1],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:rectangle;4:green;4:and[%s,%s];4:rectangle;4:size2;4:size1;1:%s.o;2:x
'λx.forall(size2,filter(filter(filter(x.s, apply(size-gt,iota(x.s))), triangle), not[triangle]))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:triangle;4:not[%s];4:triangle
'λx.apply(not[green],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(and[apply(size-gt,x.o),and[green,and[and[rectangle,rectangle],and[blue,iff[size2,not[green]]]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:and[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:rectangle;4:and[%s,%s];4:blue;4:iff[%s,%s];4:size2;4:not[%s];4:green;1:%s.o;2:x
'λx.apply(implies[yellow,circle],iota(filter(filter(x.s, yellow), and[yellow,blue])))'	0:apply(%s,%s);4:implies[%s,%s];4:yellow;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:yellow;4:blue
'λx.contains(iota(x.s), filter(filter(filter(x.s, size1), triangle), size3))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle;4:size3
'λx.apply(yellow,iota(filter(x.s, apply(size-geq,x.o))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.apply(and[apply(same_color,x.o),apply(same_shape,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.forall(triangle,filter(filter(filter(x.s, size2), rectangle), circle))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle;4:circle
'λx.forall(size2,filter(filter(filter(x.s, iff[or[not[apply(same_color,iota(filter(x.s, and[size1,rectangle])))],blue],size2]), size1), size2))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:rectangle;4:blue;4:size2;4:size1;4:size2
'λx.apply(and[not[yellow],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:yellow;4:blue;1:%s.o;2:x
'λx.exists(rectangle, filter(filter(x.s, blue), blue))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue
'λx.apply(implies[circle,size1],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:circle;4:size1;1:%s.o;2:x
'λx.apply(or[triangle,size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:size1;1:%s.o;2:x
'λx.forall(circle,filter(filter(x.s, and[size2,iff[rectangle,apply(same_shape,x.o)]]), apply(size-lt,iota(x.s))))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:iff[%s,%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(filter(filter(x.s, and[green,size3]), not[triangle]), blue), triangle), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:size3;4:not[%s];4:triangle;4:blue;4:triangle;4:triangle
'λx.apply(and[rectangle,size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(filter(x.s, size3), green), and[or[nor[and[nor[triangle,blue],implies[size1,circle]],triangle],triangle],size2])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green;4:and[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:triangle;4:blue;4:implies[%s,%s];4:size1;4:circle;4:triangle;4:triangle;4:size2
'λx.empty(filter(filter(x.s, and[rectangle,green]), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:green;4:triangle
'λx.apply(blue,iota(filter(filter(filter(x.s, circle), circle), yellow)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:circle;4:yellow
'λx.apply(and[not[size3],blue],iota(filter(x.s, and[nand[not[yellow],rectangle],and[nor[not[triangle],size1],and[yellow,and[implies[circle,and[nor[blue,size1],size2]],nand[or[rectangle,triangle],or[size3,apply(same_shape,x.o)]]]]]])))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size3;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nand[%s,%s];4:not[%s];4:yellow;4:rectangle;4:and[%s,%s];4:nor[%s,%s];4:not[%s];4:triangle;4:size1;4:and[%s,%s];4:yellow;4:and[%s,%s];4:implies[%s,%s];4:circle;4:and[%s,%s];4:nor[%s,%s];4:blue;4:size1;4:size2;4:nand[%s,%s];4:or[%s,%s];4:rectangle;4:triangle;4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(nor[and[size1,not[not[triangle]]],and[nor[triangle,size3],blue]],iota(filter(filter(x.s, circle), yellow)))'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:size1;4:not[%s];4:not[%s];4:triangle;4:and[%s,%s];4:nor[%s,%s];4:triangle;4:size3;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow
'λx.apply(yellow,iota(filter(filter(filter(x.s, not[or[and[green,green],blue]]), nand[or[circle,or[apply(same_size,iota(x.s)),size2]],size3]), circle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:green;4:green;4:blue;4:nand[%s,%s];4:or[%s,%s];4:circle;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size2;4:size3;4:circle
'λx.forall(apply(same_size,iota(x.s)),filter(filter(x.s, circle), and[size3,and[size3,size1]]))'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:size3;4:and[%s,%s];4:size3;4:size1
'λx.apply(not[and[yellow,and[apply(size-gt,x.o),triangle]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[not[implies[blue,yellow]]],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:implies[%s,%s];4:blue;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.forall(size3,filter(x.s, blue))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(or[size1,apply(size-lt,iota(x.s))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(implies[or[yellow,or[triangle,size3]],size2],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:or[%s,%s];4:yellow;4:or[%s,%s];4:triangle;4:size3;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(x.s, blue), yellow)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow
'λx.apply(apply(size-leq,x.o),iota(filter(filter(x.s, and[size3,and[not[circle],rectangle]]), circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:and[%s,%s];4:not[%s];4:circle;4:rectangle;4:circle
'λx.apply(triangle,iota(filter(filter(filter(x.s, nand[apply(same_size,x.o),size3]), green), nand[not[size1],not[green]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;4:green;4:nand[%s,%s];4:not[%s];4:size1;4:not[%s];4:green
'λx.apply(or[size2,apply(same_shape,x.o)],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(x.s, triangle), green)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green
'λx.forall(and[not[nor[rectangle,size2]],size2],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:not[%s];4:nor[%s,%s];4:rectangle;4:size2;4:size2;3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, blue), size3))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3
'λx.apply(nor[size1,size3],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:size1;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[apply(same_size,iota(filter(filter(x.s, circle), rectangle))),blue],iota(filter(filter(x.s, size3), blue)))'	0:apply(%s,%s);4:nand[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue
'λx.apply(iff[apply(size-gt,x.o),or[nor[size3,green],nor[yellow,circle]]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:or[%s,%s];4:nor[%s,%s];4:size3;4:green;4:nor[%s,%s];4:yellow;4:circle;1:%s.o;2:x
'λx.apply(apply(same_size,iota(filter(filter(x.s, yellow), green))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green;1:%s.o;2:x
'λx.apply(and[rectangle,size2],iota(filter(filter(x.s, size1), rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle
'λx.apply(triangle,iota(filter(filter(x.s, size3), circle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle
'λx.apply(and[not[blue],size3],iota(filter(filter(x.s, blue), triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:blue;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle
'λx.forall(and[size1,circle],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:size1;4:circle;3:%s.s;2:x
'λx.apply(apply(same_color,x.o),iota(filter(x.s, blue)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(green,iota(filter(x.s, apply(same_color,iota(filter(x.s, apply(size-lt,iota(filter(filter(filter(filter(filter(filter(filter(filter(filter(x.s, rectangle), size1), blue), not[green]), nand[nor[nor[size1,green],and[triangle,rectangle]],blue]), size2), circle), rectangle), and[and[apply(same_shape,x.o),size1],yellow])))))))))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1;4:blue;4:not[%s];4:green;4:nand[%s,%s];4:nor[%s,%s];4:nor[%s,%s];4:size1;4:green;4:and[%s,%s];4:triangle;4:rectangle;4:blue;4:size2;4:circle;4:rectangle;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;4:yellow
'λx.apply(triangle,iota(filter(filter(x.s, green), or[blue,rectangle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:blue;4:rectangle
'λx.apply(nand[and[triangle,blue],blue],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:triangle;4:blue;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(apply(size-gt,x.o),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(iff[size2,rectangle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:size2;4:rectangle;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, size3), triangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle
'λx.apply(and[size2,size3],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[yellow,apply(same_shape,iota(filter(x.s, and[iff[not[nor[size2,blue]],and[nand[triangle,rectangle],blue]],and[nand[or[rectangle,yellow],green],size2]])))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:iff[%s,%s];4:not[%s];4:nor[%s,%s];4:size2;4:blue;4:and[%s,%s];4:nand[%s,%s];4:triangle;4:rectangle;4:blue;4:and[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:rectangle;4:yellow;4:green;4:size2;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(x.s, yellow), apply(size-leq,iota(filter(x.s, green)))), yellow)), filter(x.s, not[rectangle]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle
'λx.apply(and[apply(size-leq,x.o),yellow],iota(filter(filter(x.s, size1), size2)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2
'λx.apply(size1,iota(filter(filter(filter(filter(x.s, size1), rectangle), apply(same_size,x.o)), green)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green
'λx.apply(blue,iota(filter(x.s, and[size3,green])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:green
'λx.apply(and[circle,apply(size-gt,iota(filter(filter(x.s, apply(same_shape,iota(x.s))), yellow)))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:yellow;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(filter(filter(filter(x.s, size2), triangle), green), rectangle), size3)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:triangle;4:green;4:rectangle;4:size3
'λx.apply(green,iota(filter(filter(filter(x.s, not[size3]), not[circle]), size2)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;4:not[%s];4:circle;4:size2
'λx.exists(or[size1,size3], filter(filter(x.s, size3), blue))'	0:exists(%s, %s);4:or[%s,%s];4:size1;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue
'λx.empty(filter(x.s, and[blue,apply(same_shape,x.o)]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(not[size1],iota(filter(filter(x.s, nor[rectangle,and[size2,and[green,circle]]]), yellow)))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:rectangle;4:and[%s,%s];4:size2;4:and[%s,%s];4:green;4:circle;4:yellow
'λx.apply(yellow,iota(filter(x.s, or[not[iff[apply(size-leq,iota(x.s)),green]],nor[apply(same_shape,iota(filter(x.s, or[apply(same_size,x.o),apply(same_color,x.o)]))),triangle]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:iff[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:green;4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle
'λx.apply(nand[size3,blue],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:nand[%s,%s];4:size3;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.contains(x.o, filter(filter(filter(filter(x.s, and[yellow,and[triangle,and[circle,nor[triangle,size1]]]]), blue), size2), blue))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:and[%s,%s];4:triangle;4:and[%s,%s];4:circle;4:nor[%s,%s];4:triangle;4:size1;4:blue;4:size2;4:blue
'λx.apply(nand[size3,circle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size3;4:circle;1:%s.o;2:x
'λx.contains(iota(filter(x.s, not[size3])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;3:%s.s;2:x
'λx.apply(or[not[blue],blue],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:blue;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(or[and[yellow,size3],and[size1,size2]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:yellow;4:size3;4:and[%s,%s];4:size1;4:size2;1:%s.o;2:x
'λx.forall(size3,filter(x.s, green))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(implies[green,green],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:green;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[rectangle,rectangle],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:rectangle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.exists(apply(same_color,x.o), filter(x.s, yellow))'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(size2,iota(filter(filter(x.s, and[and[triangle,apply(same_size,x.o)],size1]), size2)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1;4:size2
'λx.forall(and[size1,size2],filter(x.s, size1))'	0:forall(%s,%s);4:and[%s,%s];4:size1;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(yellow, filter(x.s, implies[blue,size2]))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:blue;4:size2
'λx.apply(size1,iota(filter(filter(x.s, or[or[and[nand[circle,apply(same_color,x.o)],size3],and[apply(same_shape,x.o),yellow]],or[apply(same_color,iota(x.s)),size1]]), blue)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size1;4:blue
'λx.apply(and[apply(same_shape,iota(filter(filter(filter(filter(filter(filter(filter(filter(x.s, yellow), nand[blue,blue]), apply(same_size,iota(x.s))), size1), circle), size1), yellow), and[size3,size1]))),rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:nand[%s,%s];4:blue;4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size1;4:circle;4:size1;4:yellow;4:and[%s,%s];4:size3;4:size1;4:rectangle;1:%s.o;2:x
'λx.apply(and[size2,iff[size3,rectangle]],iota(filter(filter(filter(filter(filter(filter(x.s, and[and[size1,implies[green,and[size1,yellow]]],size2]), size3), and[rectangle,yellow]), blue), green), not[and[rectangle,or[not[blue],circle]]])))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:iff[%s,%s];4:size3;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size1;4:implies[%s,%s];4:green;4:and[%s,%s];4:size1;4:yellow;4:size2;4:size3;4:and[%s,%s];4:rectangle;4:yellow;4:blue;4:green;4:not[%s];4:and[%s,%s];4:rectangle;4:or[%s,%s];4:not[%s];4:blue;4:circle
'λx.apply(green,iota(filter(filter(filter(x.s, size3), blue), circle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue;4:circle
'λx.forall(rectangle,filter(filter(filter(x.s, blue), or[size2,apply(size-gt,iota(x.s))]), rectangle))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:size2;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:rectangle
'λx.apply(nand[size2,iff[and[not[size2],circle],size3]],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:size2;4:iff[%s,%s];4:and[%s,%s];4:not[%s];4:size2;4:circle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(not[or[and[nand[circle,or[nand[triangle,or[yellow,size2]],not[implies[green,blue]]]],nand[and[implies[size3,or[rectangle,not[and[size3,circle]]]],triangle],apply(size-gt,iota(x.s))]],iff[green,size3]]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:circle;4:or[%s,%s];4:nand[%s,%s];4:triangle;4:or[%s,%s];4:yellow;4:size2;4:not[%s];4:implies[%s,%s];4:green;4:blue;4:nand[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:size3;4:or[%s,%s];4:rectangle;4:not[%s];4:and[%s,%s];4:size3;4:circle;4:triangle;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:iff[%s,%s];4:green;4:size3;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, apply(size-geq,iota(x.s)))))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x
'λx.apply(not[not[and[circle,and[implies[size2,blue],nor[rectangle,and[not[size2],rectangle]]]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:implies[%s,%s];4:size2;4:blue;4:nor[%s,%s];4:rectangle;4:and[%s,%s];4:not[%s];4:size2;4:rectangle;1:%s.o;2:x
'λx.contains(x.o, filter(filter(filter(filter(filter(filter(x.s, triangle), size1), size1), or[and[rectangle,not[green]],and[yellow,size1]]), and[apply(same_color,iota(x.s)),green]), apply(same_size,iota(x.s))))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size1;4:size1;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:not[%s];4:green;4:and[%s,%s];4:yellow;4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(and[rectangle,not[or[and[and[blue,size3],not[size1]],blue]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:size3;4:not[%s];4:size1;4:blue;1:%s.o;2:x
'λx.apply(or[and[not[triangle],size2],and[nand[triangle,rectangle],blue]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:not[%s];4:triangle;4:size2;4:and[%s,%s];4:nand[%s,%s];4:triangle;4:rectangle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(x.s), filter(filter(x.s, or[rectangle,blue]), not[or[and[triangle,circle],not[triangle]]]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:blue;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:triangle;4:circle;4:not[%s];4:triangle
'λx.exists(and[blue,circle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:blue;4:circle;3:%s.s;2:x
'λx.apply(nor[triangle,implies[apply(same_shape,iota(x.s)),size2]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:triangle;4:implies[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size2;1:%s.o;2:x
'λx.apply(iff[or[size1,apply(same_shape,x.o)],size1],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:or[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(filter(x.s, and[triangle,yellow]), rectangle), circle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:yellow;4:rectangle;4:circle
'λx.apply(yellow,iota(filter(filter(filter(filter(x.s, circle), green), green), triangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green;4:green;4:triangle
'λx.apply(and[and[yellow,and[or[triangle,size1],green]],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:or[%s,%s];4:triangle;4:size1;4:green;4:triangle;1:%s.o;2:x
'λx.exists(nor[circle,green], filter(filter(filter(x.s, size3), or[size3,yellow]), or[size1,and[size2,rectangle]]))'	0:exists(%s, %s);4:nor[%s,%s];4:circle;4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:size3;4:yellow;4:or[%s,%s];4:size1;4:and[%s,%s];4:size2;4:rectangle
'λx.apply(and[size1,nand[triangle,and[green,and[size3,blue]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:nand[%s,%s];4:triangle;4:and[%s,%s];4:green;4:and[%s,%s];4:size3;4:blue;1:%s.o;2:x
'λx.forall(rectangle,filter(x.s, yellow))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(triangle,iota(filter(filter(x.s, blue), size2)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2
'λx.exists(and[green,and[rectangle,size2]], filter(x.s, nor[size3,size2]))'	0:exists(%s, %s);4:and[%s,%s];4:green;4:and[%s,%s];4:rectangle;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size3;4:size2
'λx.apply(and[size1,not[or[or[triangle,or[apply(same_color,iota(x.s)),and[size2,yellow]]],rectangle]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:not[%s];4:or[%s,%s];4:or[%s,%s];4:triangle;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:yellow;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(x.s, apply(same_shape,iota(filter(filter(filter(filter(filter(x.s, size2), circle), yellow), circle), circle)))), rectangle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle;4:yellow;4:circle;4:circle;4:rectangle;3:%s.s;2:x
'λx.exists(rectangle, filter(filter(filter(x.s, circle), not[triangle]), nor[or[apply(same_color,x.o),yellow],size1]))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:triangle;4:nor[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;4:size1
'λx.empty(filter(filter(x.s, apply(same_shape,iota(x.s))), not[blue]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:not[%s];4:blue
'λx.forall(and[iff[yellow,size3],apply(size-leq,iota(filter(x.s, nand[apply(same_shape,iota(x.s)),size3])))],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:yellow;4:size3;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size3;3:%s.s;2:x
'λx.apply(or[size3,triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:triangle;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(x.s, implies[yellow,not[green]]), size2), blue)), filter(x.s, size1))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:yellow;4:not[%s];4:green;4:size2;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(iff[and[size1,not[size2]],blue],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:size1;4:not[%s];4:size2;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(and[rectangle,yellow],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(triangle,iota(filter(filter(filter(filter(filter(filter(x.s, circle), and[or[blue,size3],and[and[size2,triangle],and[size2,green]]]), size1), green), size3), nor[not[size1],apply(same_size,iota(filter(filter(filter(filter(filter(filter(x.s, not[size2]), triangle), and[size2,size1]), not[size3]), circle), and[size3,and[and[blue,size1],size3]])))])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:or[%s,%s];4:blue;4:size3;4:and[%s,%s];4:and[%s,%s];4:size2;4:triangle;4:and[%s,%s];4:size2;4:green;4:size1;4:green;4:size3;4:nor[%s,%s];4:not[%s];4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:triangle;4:and[%s,%s];4:size2;4:size1;4:not[%s];4:size3;4:circle;4:and[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:blue;4:size1;4:size3
'λx.exists(and[not[or[size1,apply(same_size,x.o)]],size1], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:or[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1;3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(x.s, and[blue,yellow]), circle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:yellow;4:circle
'λx.apply(and[not[and[triangle,or[rectangle,yellow]]],green],iota(filter(filter(x.s, apply(same_size,iota(filter(filter(x.s, rectangle), rectangle)))), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:triangle;4:or[%s,%s];4:rectangle;4:yellow;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle;4:blue
'λx.apply(size2,iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(and[and[size3,rectangle],and[iff[implies[nand[and[blue,or[size2,and[blue,blue]]],and[and[nor[size2,size1],triangle],nor[not[iff[blue,size3]],triangle]]],size2],and[yellow,size2]],blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size3;4:rectangle;4:and[%s,%s];4:iff[%s,%s];4:implies[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:blue;4:or[%s,%s];4:size2;4:and[%s,%s];4:blue;4:blue;4:and[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:size2;4:size1;4:triangle;4:nor[%s,%s];4:not[%s];4:iff[%s,%s];4:blue;4:size3;4:triangle;4:size2;4:and[%s,%s];4:yellow;4:size2;4:blue;1:%s.o;2:x
'λx.apply(or[not[implies[circle,apply(same_size,x.o)]],size1],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:implies[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(x.s, rectangle), size1)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1
'λx.forall(iff[and[size3,yellow],rectangle],x.s)'	0:forall(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:size3;4:yellow;4:rectangle;3:%s.s;2:x
'λx.apply(and[apply(same_shape,iota(x.s)),triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle;1:%s.o;2:x
'λx.apply(nor[green,apply(same_color,iota(filter(x.s, blue)))],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.apply(and[triangle,and[size1,circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:size1;4:circle;1:%s.o;2:x
'λx.contains(x.o, filter(filter(filter(x.s, size3), and[size3,and[rectangle,and[or[and[size3,triangle],circle],triangle]]]), size3))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:size3;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size3;4:triangle;4:circle;4:triangle;4:size3
'λx.empty(filter(filter(x.s, size1), and[size3,rectangle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:size3;4:rectangle
'λx.forall(implies[apply(same_color,x.o),and[yellow,size1]],x.s)'	0:forall(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:yellow;4:size1;3:%s.s;2:x
'λx.apply(not[apply(same_shape,x.o)],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, apply(size-geq,iota(x.s))))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_color,iota(x.s)),iota(filter(filter(filter(x.s, circle), triangle), and[yellow,size1])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle;4:and[%s,%s];4:yellow;4:size1
'λx.contains(iota(filter(x.s, and[apply(same_color,iota(x.s)),triangle])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:triangle;3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(x.s, nand[rectangle,blue]), blue)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:rectangle;4:blue;4:blue
'λx.forall(or[size1,triangle],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:size1;4:triangle;3:%s.s;2:x
'λx.apply(iff[nor[blue,rectangle],or[green,size1]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:nor[%s,%s];4:blue;4:rectangle;4:or[%s,%s];4:green;4:size1;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, apply(size-geq,x.o))))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(filter(filter(x.s, and[yellow,size3]), or[or[size3,triangle],and[and[and[and[apply(same_color,x.o),yellow],circle],size3],yellow]]), or[yellow,yellow]), implies[blue,rectangle])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size3;4:or[%s,%s];4:or[%s,%s];4:size3;4:triangle;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;4:circle;4:size3;4:yellow;4:or[%s,%s];4:yellow;4:yellow;4:implies[%s,%s];4:blue;4:rectangle
'λx.apply(or[green,rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:rectangle;1:%s.o;2:x
'λx.exists(size3, filter(x.s, nor[yellow,yellow]))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:yellow;4:yellow
'λx.apply(size2,iota(filter(filter(x.s, nand[iff[blue,triangle],and[apply(same_size,x.o),iff[circle,triangle]]]), iff[blue,yellow])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:iff[%s,%s];4:blue;4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:iff[%s,%s];4:circle;4:triangle;4:iff[%s,%s];4:blue;4:yellow
'λx.apply(or[and[green,or[and[rectangle,green],size3]],size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:green;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:green;4:size3;4:size3;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(size1,iota(filter(filter(x.s, and[not[size1],size3]), size3)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:size1;4:size3;4:size3
'λx.apply(not[implies[apply(same_shape,x.o),or[and[implies[yellow,green],yellow],size3]]],x.o)'	0:apply(%s,%s);4:not[%s];4:implies[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:yellow;4:green;4:yellow;4:size3;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, apply(size-gt,iota(x.s))), blue)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:blue
'λx.apply(apply(same_color,x.o),iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(or[circle,and[size3,green]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:and[%s,%s];4:size3;4:green;1:%s.o;2:x
'λx.apply(and[and[size1,iff[or[and[size3,size1],size3],green]],size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:iff[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size3;4:size1;4:size3;4:green;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(x.s, and[blue,green]), blue)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:green;4:blue
'λx.apply(not[or[circle,triangle]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:circle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[size1,green],iota(filter(filter(x.s, nor[circle,triangle]), triangle)))'	0:apply(%s,%s);4:nor[%s,%s];4:size1;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:circle;4:triangle;4:triangle
'λx.exists(yellow, filter(x.s, size2))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.forall(circle,filter(x.s, blue))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[and[and[green,and[or[size1,or[triangle,rectangle]],size1]],or[blue,not[apply(same_color,iota(filter(x.s, and[not[size1],green])))]]],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:or[%s,%s];4:size1;4:or[%s,%s];4:triangle;4:rectangle;4:size1;4:or[%s,%s];4:blue;4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:size1;4:green;4:green;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(filter(filter(x.s, and[green,blue]), apply(same_shape,x.o)), size2), or[not[triangle],blue]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2;4:or[%s,%s];4:not[%s];4:triangle;4:blue
'λx.apply(and[blue,size3],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(iff[triangle,size2],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:triangle;4:size2;1:%s.o;2:x
'λx.exists(blue, filter(filter(filter(x.s, and[and[apply(same_color,iota(x.s)),rectangle],size3]), size1), size2))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:rectangle;4:size3;4:size1;4:size2
'λx.apply(or[size3,blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:blue;1:%s.o;2:x
'λx.apply(size3,iota(filter(x.s, apply(size-leq,x.o))))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:%s.o;2:x
'λx.contains(iota(x.s), filter(x.s, circle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(blue,iota(filter(filter(x.s, and[apply(same_size,x.o),size2]), and[yellow,green])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2;4:and[%s,%s];4:yellow;4:green
'λx.apply(not[not[size3]],iota(filter(filter(filter(x.s, size3), circle), size1)))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle;4:size1
'λx.apply(nand[size2,size3],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size2;4:size3;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(filter(x.s, yellow), yellow), and[yellow,and[rectangle,size2]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:yellow;4:and[%s,%s];4:yellow;4:and[%s,%s];4:rectangle;4:size2
'λx.forall(apply(same_shape,iota(filter(filter(filter(filter(filter(filter(filter(x.s, rectangle), and[size2,rectangle]), size2), apply(same_color,x.o)), and[yellow,yellow]), blue), not[size2]))),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:size2;4:rectangle;4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:yellow;4:yellow;4:blue;4:not[%s];4:size2;3:%s.s;2:x
'λx.apply(and[size1,size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:size3;1:%s.o;2:x
'λx.apply(and[size3,size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(filter(x.s, circle), blue), and[size3,circle])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue;4:and[%s,%s];4:size3;4:circle
'λx.apply(and[and[size3,blue],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size3;4:blue;4:size1;1:%s.o;2:x
'λx.exists(not[apply(same_color,x.o)], x.s)'	0:exists(%s, %s);4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(nand[not[and[size1,iff[and[triangle,and[size1,rectangle]],rectangle]]],yellow],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:not[%s];4:and[%s,%s];4:size1;4:iff[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:size1;4:rectangle;4:rectangle;4:yellow;1:%s.o;2:x
'λx.empty(filter(filter(x.s, implies[circle,triangle]), not[blue]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:circle;4:triangle;4:not[%s];4:blue
'λx.contains(x.o, filter(filter(x.s, blue), apply(size-leq,x.o)))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:size-leq;1:%s.o;2:x
'λx.forall(or[yellow,iff[apply(same_size,iota(x.s)),blue]],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:yellow;4:iff[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:blue;3:%s.s;2:x
'λx.apply(and[yellow,apply(same_size,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.exists(or[and[yellow,circle],triangle], filter(filter(x.s, size3), yellow))'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:yellow;4:circle;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow
'λx.apply(not[triangle],iota(filter(filter(filter(filter(filter(filter(x.s, and[circle,circle]), or[rectangle,or[and[blue,rectangle],size3]]), not[and[size2,size2]]), circle), green), nor[circle,size1])))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:circle;4:or[%s,%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:blue;4:rectangle;4:size3;4:not[%s];4:and[%s,%s];4:size2;4:size2;4:circle;4:green;4:nor[%s,%s];4:circle;4:size1
'λx.apply(apply(same_color,iota(x.s)),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.exists(apply(same_color,iota(filter(x.s, size3))), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;3:%s.s;2:x
'λx.apply(and[triangle,size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:size3;1:%s.o;2:x
'λx.exists(nor[size1,blue], x.s)'	0:exists(%s, %s);4:nor[%s,%s];4:size1;4:blue;3:%s.s;2:x
'λx.apply(and[iff[not[size1],size3],and[and[size1,or[or[circle,yellow],and[size3,rectangle]]],or[apply(size-lt,x.o),size2]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:not[%s];4:size1;4:size3;4:and[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:or[%s,%s];4:circle;4:yellow;4:and[%s,%s];4:size3;4:rectangle;4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:size2;1:%s.o;2:x
'λx.apply(and[not[triangle],blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:triangle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(x.s, size3), or[not[apply(same_color,iota(filter(x.s, blue)))],and[nand[circle,blue],triangle]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:nand[%s,%s];4:circle;4:blue;4:triangle
'λx.exists(circle, filter(filter(filter(filter(x.s, yellow), size1), blue), blue))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;4:blue;4:blue
'λx.apply(nand[triangle,and[and[size3,rectangle],triangle]],iota(filter(x.s, and[apply(same_shape,x.o),and[and[apply(same_shape,iota(filter(filter(filter(x.s, green), green), size3))),and[and[not[size3],yellow],apply(same_size,iota(x.s))]],or[not[size2],yellow]]])))'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:and[%s,%s];4:and[%s,%s];4:size3;4:rectangle;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:green;4:size3;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size3;4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:size2;4:yellow
'λx.apply(green,iota(filter(filter(x.s, and[blue,circle]), not[and[and[triangle,size1],and[size3,nor[size2,size3]]]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:circle;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:size1;4:and[%s,%s];4:size3;4:nor[%s,%s];4:size2;4:size3
'λx.apply(yellow,iota(filter(x.s, or[and[size1,size1],circle])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size1;4:size1;4:circle
'λx.apply(not[blue],iota(filter(filter(filter(x.s, rectangle), triangle), and[size2,apply(same_size,x.o)])))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle;4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, blue), blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue
'λx.exists(not[blue], filter(x.s, rectangle))'	0:exists(%s, %s);4:not[%s];4:blue;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(yellow,iota(filter(x.s, or[size3,size2])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:size2
'λx.exists(triangle, x.s)'	0:exists(%s, %s);4:triangle;3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, circle), not[triangle]), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:triangle;4:yellow
'λx.apply(yellow,iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(implies[apply(same_size,iota(filter(filter(x.s, apply(same_size,x.o)), or[and[size3,apply(same_shape,x.o)],rectangle]))),not[circle]],iota(filter(x.s, or[apply(same_color,iota(filter(x.s, apply(size-gt,x.o)))),green])))'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle;4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:green
'λx.apply(circle,iota(filter(x.s, and[and[nand[rectangle,blue],yellow],triangle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:rectangle;4:blue;4:yellow;4:triangle
'λx.apply(and[apply(same_size,iota(filter(x.s, circle))),green],iota(filter(x.s, and[circle,green])))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:green
'λx.apply(yellow,iota(filter(filter(x.s, rectangle), apply(same_shape,iota(filter(x.s, size2))))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(and[size3,or[triangle,and[and[triangle,green],and[triangle,and[and[circle,green],and[size1,and[blue,size1]]]]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:or[%s,%s];4:triangle;4:and[%s,%s];4:and[%s,%s];4:triangle;4:green;4:and[%s,%s];4:triangle;4:and[%s,%s];4:and[%s,%s];4:circle;4:green;4:and[%s,%s];4:size1;4:and[%s,%s];4:blue;4:size1;1:%s.o;2:x
'λx.apply(nand[circle,or[apply(same_color,x.o),size3]],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:circle;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(x.s, blue), triangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle
'λx.apply(size1,iota(filter(filter(filter(x.s, apply(size-gt,x.o)), size1), blue)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:size1;4:blue
'λx.apply(green,iota(filter(x.s, size2)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.contains(iota(x.s), filter(filter(filter(filter(filter(x.s, nor[rectangle,yellow]), yellow), size1), not[green]), yellow))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:rectangle;4:yellow;4:yellow;4:size1;4:not[%s];4:green;4:yellow
'λx.apply(green,iota(filter(filter(x.s, and[or[triangle,size2],size3]), iff[and[green,or[size2,and[rectangle,size2]]],size3])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:triangle;4:size2;4:size3;4:iff[%s,%s];4:and[%s,%s];4:green;4:or[%s,%s];4:size2;4:and[%s,%s];4:rectangle;4:size2;4:size3
'λx.apply(implies[apply(same_size,iota(x.s)),implies[and[triangle,size3],or[and[size1,or[blue,size2]],triangle]]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:implies[%s,%s];4:and[%s,%s];4:triangle;4:size3;4:or[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:blue;4:size2;4:triangle;1:%s.o;2:x
'λx.apply(and[apply(same_shape,x.o),yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, and[circle,size1])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size1
'λx.apply(green,iota(filter(x.s, nor[blue,blue])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:blue;4:blue
'λx.apply(blue,x.o)'	0:apply(%s,%s);4:blue;1:%s.o;2:x
'λx.apply(apply(size-leq,iota(filter(x.s, size1))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;1:%s.o;2:x
'λx.apply(and[nor[or[size2,not[blue]],apply(size-gt,iota(filter(x.s, yellow)))],and[blue,nor[rectangle,circle]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:size2;4:not[%s];4:blue;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:blue;4:nor[%s,%s];4:rectangle;4:circle;1:%s.o;2:x
'λx.apply(triangle,iota(filter(x.s, or[yellow,yellow])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:yellow
'λx.apply(and[size3,or[size3,size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:or[%s,%s];4:size3;4:size3;1:%s.o;2:x
'λx.exists(triangle, filter(x.s, or[or[size3,size1],size2]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:size3;4:size1;4:size2
'λx.apply(and[blue,apply(size-lt,x.o)],iota(filter(x.s, iff[apply(size-gt,x.o),green])))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:green
'λx.apply(size2,iota(filter(filter(filter(filter(x.s, blue), and[not[and[green,or[and[circle,rectangle],size2]]],size3]), apply(same_color,x.o)), circle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:green;4:or[%s,%s];4:and[%s,%s];4:circle;4:rectangle;4:size2;4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle
'λx.apply(size3,iota(filter(x.s, and[and[triangle,blue],size1])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:triangle;4:blue;4:size1
'λx.apply(triangle,iota(filter(filter(x.s, not[rectangle]), and[not[apply(size-lt,x.o)],or[size2,size3]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:or[%s,%s];4:size2;4:size3
'λx.apply(nand[blue,size3],iota(filter(filter(filter(filter(x.s, or[size1,size1]), and[size3,size2]), not[and[or[or[apply(same_color,x.o),or[size2,circle]],blue],not[apply(same_size,iota(x.s))]]]), nand[implies[rectangle,triangle],not[circle]])))'	0:apply(%s,%s);4:nand[%s,%s];4:blue;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:size1;4:and[%s,%s];4:size3;4:size2;4:not[%s];4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:or[%s,%s];4:size2;4:circle;4:blue;4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:nand[%s,%s];4:implies[%s,%s];4:rectangle;4:triangle;4:not[%s];4:circle
'λx.apply(apply(size-lt,iota(x.s)),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(x.s, or[implies[iff[yellow,yellow],nor[yellow,rectangle]],yellow]), size2)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:implies[%s,%s];4:iff[%s,%s];4:yellow;4:yellow;4:nor[%s,%s];4:yellow;4:rectangle;4:yellow;4:size2
'λx.apply(or[and[implies[or[nor[and[or[or[rectangle,not[size1]],not[size2]],circle],blue],nand[green,not[size3]]],apply(size-gt,x.o)],triangle],yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:rectangle;4:not[%s];4:size1;4:not[%s];4:size2;4:circle;4:blue;4:nand[%s,%s];4:green;4:not[%s];4:size3;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:triangle;4:yellow;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, rectangle), size2)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2
'λx.apply(apply(size-gt,iota(filter(x.s, and[circle,rectangle]))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[yellow,or[blue,not[implies[size2,size3]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:or[%s,%s];4:blue;4:not[%s];4:implies[%s,%s];4:size2;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_shape,iota(filter(x.s, size2))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[triangle,and[size3,green]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:triangle;4:and[%s,%s];4:size3;4:green;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, nor[circle,circle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:circle;4:circle
'λx.apply(yellow,iota(filter(x.s, apply(same_size,iota(filter(x.s, rectangle))))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[triangle,apply(size-geq,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, yellow), rectangle), apply(same_size,x.o)))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(and[yellow,nor[size1,nand[apply(size-leq,iota(x.s)),green]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:nor[%s,%s];4:size1;4:nand[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:green;1:%s.o;2:x
'λx.apply(or[and[implies[rectangle,implies[and[and[rectangle,circle],and[green,green]],rectangle]],blue],green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:rectangle;4:implies[%s,%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:circle;4:and[%s,%s];4:green;4:green;4:rectangle;4:blue;4:green;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, triangle), triangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:triangle
'λx.apply(or[and[size2,and[size1,not[rectangle]]],rectangle],iota(filter(filter(x.s, not[not[circle]]), blue)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:size1;4:not[%s];4:rectangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:circle;4:blue
'λx.apply(size2,iota(filter(x.s, and[size2,and[blue,apply(same_color,iota(filter(filter(x.s, or[green,triangle]), size1)))]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:triangle;4:size1
'λx.apply(rectangle,iota(filter(x.s, not[apply(same_size,iota(filter(filter(x.s, not[and[rectangle,blue]]), apply(same_color,x.o))))])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:rectangle;4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.contains(iota(filter(x.s, or[implies[size1,not[iff[apply(same_size,iota(filter(filter(x.s, green), not[and[yellow,size1]]))),and[size2,implies[apply(size-gt,x.o),size2]]]]],rectangle])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:implies[%s,%s];4:size1;4:not[%s];4:iff[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:and[%s,%s];4:yellow;4:size1;4:and[%s,%s];4:size2;4:implies[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:size2;4:rectangle;3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, yellow), size2))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2
'λx.apply(apply(size-leq,iota(x.s)),iota(filter(x.s, circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(rectangle,iota(filter(filter(filter(x.s, size2), and[yellow,green]), or[size3,size3])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:yellow;4:green;4:or[%s,%s];4:size3;4:size3
'λx.apply(green,iota(filter(filter(x.s, yellow), green)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green
'λx.forall(size1,filter(x.s, green))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[size3,and[nor[yellow,yellow],iff[circle,size3]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:nor[%s,%s];4:yellow;4:yellow;4:iff[%s,%s];4:circle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, green), not[and[size2,and[apply(same_shape,iota(x.s)),blue]]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:blue
'λx.contains(x.o, filter(filter(x.s, size2), blue))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue
'λx.forall(green,filter(x.s, size2))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(yellow,iota(filter(filter(x.s, size2), and[or[size2,green],and[and[iff[and[triangle,size2],yellow],circle],and[not[size3],and[size1,iff[and[size2,green],blue]]]]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:or[%s,%s];4:size2;4:green;4:and[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:triangle;4:size2;4:yellow;4:circle;4:and[%s,%s];4:not[%s];4:size3;4:and[%s,%s];4:size1;4:iff[%s,%s];4:and[%s,%s];4:size2;4:green;4:blue
'λx.exists(size2, filter(x.s, and[blue,apply(same_color,iota(x.s))]))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(x.s, blue), yellow)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow;3:%s.s;2:x
'λx.apply(size2,iota(filter(x.s, apply(same_size,x.o))))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(x.s, triangle))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[triangle,size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:size1;1:%s.o;2:x
'λx.exists(circle, filter(filter(filter(x.s, triangle), and[yellow,triangle]), blue))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:yellow;4:triangle;4:blue
'λx.apply(size1,iota(filter(filter(filter(filter(filter(x.s, triangle), blue), not[green]), size3), and[blue,circle])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue;4:not[%s];4:green;4:size3;4:and[%s,%s];4:blue;4:circle
'λx.apply(and[or[apply(size-gt,iota(filter(filter(filter(filter(filter(x.s, iff[size1,rectangle]), or[yellow,or[apply(same_color,x.o),and[size2,apply(size-lt,x.o)]]]), yellow), green), size3))),size1],implies[size1,nand[circle,apply(same_size,iota(filter(filter(x.s, green), and[size1,nand[not[green],and[and[green,rectangle],rectangle]]])))]]],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size1;4:rectangle;4:or[%s,%s];4:yellow;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:size2;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:yellow;4:green;4:size3;4:size1;4:implies[%s,%s];4:size1;4:nand[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:size1;4:nand[%s,%s];4:not[%s];4:green;4:and[%s,%s];4:and[%s,%s];4:green;4:rectangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(and[not[nor[triangle,rectangle]],and[and[size2,green],blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:nor[%s,%s];4:triangle;4:rectangle;4:and[%s,%s];4:and[%s,%s];4:size2;4:green;4:blue;1:%s.o;2:x
'λx.apply(and[not[and[size1,blue]],size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:size1;4:blue;4:size3;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(x.s), filter(filter(filter(x.s, size3), rectangle), circle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle;4:circle
'λx.apply(triangle,iota(filter(filter(x.s, not[triangle]), blue)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:blue
'λx.apply(nor[blue,size2],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:blue;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(x.s, nor[green,and[blue,apply(same_size,iota(filter(filter(x.s, rectangle), and[size3,or[triangle,iff[circle,not[triangle]]]])))]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:green;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:size3;4:or[%s,%s];4:triangle;4:iff[%s,%s];4:circle;4:not[%s];4:triangle
'λx.apply(and[and[yellow,size2],not[not[blue]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:size2;4:not[%s];4:not[%s];4:blue;1:%s.o;2:x
'λx.contains(iota(filter(x.s, not[not[apply(same_size,x.o)]])), filter(x.s, green))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(implies[rectangle,yellow],iota(filter(filter(filter(x.s, rectangle), and[triangle,circle]), size2)))'	0:apply(%s,%s);4:implies[%s,%s];4:rectangle;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:triangle;4:circle;4:size2
'λx.apply(apply(size-leq,x.o),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[implies[not[size3],circle],apply(same_size,iota(x.s))],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:implies[%s,%s];4:not[%s];4:size3;4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(iff[and[implies[not[and[nand[blue,and[rectangle,circle]],size3]],rectangle],yellow],iff[size3,and[size2,rectangle]]],iota(filter(filter(x.s, apply(same_color,x.o)), size3)))'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:not[%s];4:and[%s,%s];4:nand[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:circle;4:size3;4:rectangle;4:yellow;4:iff[%s,%s];4:size3;4:and[%s,%s];4:size2;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3
'λx.apply(and[apply(same_shape,iota(filter(filter(x.s, circle), circle))),circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:circle;4:circle;1:%s.o;2:x
'λx.apply(apply(size-leq,x.o),iota(filter(filter(filter(x.s, not[circle]), and[not[size2],and[green,apply(size-leq,x.o)]]), and[implies[rectangle,size2],size1])))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:and[%s,%s];4:not[%s];4:size2;4:and[%s,%s];4:green;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:and[%s,%s];4:implies[%s,%s];4:rectangle;4:size2;4:size1
'λx.apply(and[not[circle],apply(same_shape,iota(filter(filter(x.s, blue), iff[not[size1],size2])))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:iff[%s,%s];4:not[%s];4:size1;4:size2;1:%s.o;2:x
'λx.apply(and[size3,apply(same_shape,iota(x.s))],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.contains(iota(filter(x.s, apply(same_color,x.o))), filter(x.s, nand[size3,size2]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size3;4:size2
'λx.apply(size3,iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.contains(iota(x.s), filter(x.s, nor[size3,triangle]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size3;4:triangle
'λx.exists(not[rectangle], filter(filter(x.s, apply(size-lt,iota(filter(x.s, and[iff[size1,nand[yellow,rectangle]],rectangle])))), or[size3,triangle]))'	0:exists(%s, %s);4:not[%s];4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:iff[%s,%s];4:size1;4:nand[%s,%s];4:yellow;4:rectangle;4:rectangle;4:or[%s,%s];4:size3;4:triangle
'λx.forall(size1,filter(filter(x.s, yellow), and[size3,not[and[and[green,yellow],or[or[implies[triangle,circle],triangle],apply(same_color,iota(x.s))]]]]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:size3;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:green;4:yellow;4:or[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:triangle;4:circle;4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.forall(circle,filter(x.s, circle))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(nor[and[apply(same_size,iota(filter(filter(x.s, rectangle), not[rectangle]))),size3],triangle],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:rectangle;4:size3;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(size2,iota(filter(filter(filter(filter(x.s, size1), green), size1), and[triangle,implies[green,size3]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green;4:size1;4:and[%s,%s];4:triangle;4:implies[%s,%s];4:green;4:size3
'λx.apply(and[triangle,not[circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:not[%s];4:circle;1:%s.o;2:x
'λx.apply(iff[green,circle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:green;4:circle;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(filter(filter(filter(filter(filter(filter(filter(filter(filter(x.s, rectangle), apply(same_shape,x.o)), and[size1,and[size1,or[green,rectangle]]]), green), blue), blue), size3), circle), and[circle,or[not[circle],rectangle]]), yellow), and[apply(size-gt,iota(filter(x.s, triangle))),blue])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:size1;4:and[%s,%s];4:size1;4:or[%s,%s];4:green;4:rectangle;4:green;4:blue;4:blue;4:size3;4:circle;4:and[%s,%s];4:circle;4:or[%s,%s];4:not[%s];4:circle;4:rectangle;4:yellow;4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue
'λx.apply(rectangle,iota(filter(x.s, or[blue,rectangle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:rectangle
'λx.apply(circle,iota(filter(x.s, and[size2,circle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:circle
'λx.contains(x.o, filter(filter(x.s, circle), implies[size1,not[and[and[circle,green],and[yellow,green]]]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:implies[%s,%s];4:size1;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:green;4:and[%s,%s];4:yellow;4:green
'λx.apply(apply(same_shape,iota(filter(filter(x.s, blue), yellow))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow;1:%s.o;2:x
'λx.empty(filter(x.s, and[and[not[size3],not[circle]],or[triangle,circle]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size3;4:not[%s];4:circle;4:or[%s,%s];4:triangle;4:circle
'λx.apply(triangle,iota(filter(filter(x.s, and[and[triangle,green],apply(same_shape,x.o)]), and[size3,triangle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:triangle;4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:size3;4:triangle
'λx.apply(apply(same_color,iota(x.s)),iota(filter(x.s, and[and[circle,triangle],green])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:circle;4:triangle;4:green
'λx.apply(and[or[yellow,or[or[and[apply(same_shape,iota(x.s)),circle],implies[not[apply(same_shape,x.o)],size1]],apply(same_color,iota(filter(x.s, not[triangle])))]],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:yellow;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle;4:implies[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:rectangle;1:%s.o;2:x
'λx.exists(size1, filter(filter(filter(filter(x.s, size3), apply(same_color,x.o)), and[nor[and[size1,circle],size1],green]), and[green,rectangle]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:size1;4:circle;4:size1;4:green;4:and[%s,%s];4:green;4:rectangle
'λx.apply(iff[apply(same_size,iota(x.s)),size2],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size2;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(filter(filter(x.s, and[and[not[or[apply(size-gt,x.o),size2]],size3],blue]), and[size1,triangle]), size1), or[or[apply(same_size,x.o),rectangle],and[yellow,size1]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:size2;4:size3;4:blue;4:and[%s,%s];4:size1;4:triangle;4:size1;4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:rectangle;4:and[%s,%s];4:yellow;4:size1
'λx.apply(size1,iota(filter(filter(filter(filter(filter(filter(x.s, rectangle), and[size3,circle]), and[or[size3,or[apply(size-leq,iota(filter(x.s, triangle))),yellow]],size1]), green), or[not[size1],iff[not[green],and[and[apply(same_shape,iota(filter(filter(filter(filter(x.s, yellow), yellow), size2), size3))),triangle],implies[size2,rectangle]]]]), size1)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:size3;4:circle;4:and[%s,%s];4:or[%s,%s];4:size3;4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:yellow;4:size1;4:green;4:or[%s,%s];4:not[%s];4:size1;4:iff[%s,%s];4:not[%s];4:green;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:yellow;4:size2;4:size3;4:triangle;4:implies[%s,%s];4:size2;4:rectangle;4:size1
'λx.exists(not[green], filter(x.s, green))'	0:exists(%s, %s);4:not[%s];4:green;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.contains(iota(filter(x.s, circle)), filter(x.s, size1))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(or[and[triangle,size2],triangle],iota(filter(x.s, apply(size-geq,x.o))))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:triangle;4:size2;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, or[triangle,blue]), not[and[or[size2,size3],size3]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:blue;4:not[%s];4:and[%s,%s];4:or[%s,%s];4:size2;4:size3;4:size3
'λx.apply(and[yellow,nand[circle,triangle]],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:nand[%s,%s];4:circle;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(and[size1,apply(same_size,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(filter(x.s, size2), size3), nand[implies[yellow,size1],implies[rectangle,or[not[rectangle],circle]]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3;4:nand[%s,%s];4:implies[%s,%s];4:yellow;4:size1;4:implies[%s,%s];4:rectangle;4:or[%s,%s];4:not[%s];4:rectangle;4:circle
'λx.contains(x.o, filter(x.s, implies[circle,triangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:circle;4:triangle
'λx.forall(not[and[blue,or[apply(size-geq,x.o),yellow]]],filter(x.s, and[yellow,rectangle]))'	0:forall(%s,%s);4:not[%s];4:and[%s,%s];4:blue;4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:rectangle
'λx.apply(and[size1,or[and[size2,or[rectangle,rectangle]],and[blue,and[not[circle],and[blue,circle]]]]],iota(filter(filter(x.s, not[blue]), size1)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:or[%s,%s];4:and[%s,%s];4:size2;4:or[%s,%s];4:rectangle;4:rectangle;4:and[%s,%s];4:blue;4:and[%s,%s];4:not[%s];4:circle;4:and[%s,%s];4:blue;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:size1
'λx.apply(and[nor[and[apply(same_color,iota(x.s)),size2],or[size2,yellow]],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:size2;4:yellow;4:yellow;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(filter(x.s, iff[blue,size2]), size1), green)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:blue;4:size2;4:size1;4:green
'λx.apply(apply(same_size,iota(filter(filter(filter(x.s, not[circle]), size2), apply(same_color,x.o)))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[and[triangle,triangle],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:triangle;4:yellow;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, size2), rectangle), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle;4:size1
'λx.contains(x.o, filter(filter(x.s, apply(same_size,iota(x.s))), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:green
'λx.apply(and[and[size2,not[not[nor[apply(size-leq,x.o),implies[green,or[and[and[or[size2,circle],iff[apply(same_shape,x.o),and[yellow,nor[size1,apply(size-geq,iota(x.s))]]]],size3],nor[size3,and[not[circle],nand[and[blue,size3],not[and[size3,circle]]]]]]]]]]],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size2;4:not[%s];4:not[%s];4:nor[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:implies[%s,%s];4:green;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size2;4:circle;4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:yellow;4:nor[%s,%s];4:size1;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:size3;4:nor[%s,%s];4:size3;4:and[%s,%s];4:not[%s];4:circle;4:nand[%s,%s];4:and[%s,%s];4:blue;4:size3;4:not[%s];4:and[%s,%s];4:size3;4:circle;4:size2;1:%s.o;2:x
'λx.forall(rectangle,filter(x.s, size1))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(iff[and[rectangle,blue],yellow],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:rectangle;4:blue;4:yellow;1:%s.o;2:x
'λx.apply(and[not[and[size3,blue]],circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:size3;4:blue;4:circle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, and[green,triangle])), filter(x.s, yellow))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.contains(x.o, filter(filter(x.s, and[yellow,and[green,size3]]), size3))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:and[%s,%s];4:green;4:size3;4:size3
'λx.apply(size1,iota(filter(filter(x.s, size3), size1)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size1
'λx.apply(and[rectangle,rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:rectangle;1:%s.o;2:x
'λx.exists(and[or[not[nand[size3,rectangle]],or[green,blue]],not[not[rectangle]]], filter(x.s, yellow))'	0:exists(%s, %s);4:and[%s,%s];4:or[%s,%s];4:not[%s];4:nand[%s,%s];4:size3;4:rectangle;4:or[%s,%s];4:green;4:blue;4:not[%s];4:not[%s];4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(size1,iota(filter(filter(x.s, triangle), yellow)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:yellow
'λx.apply(nor[circle,or[size3,size1]],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:nor[%s,%s];4:circle;4:or[%s,%s];4:size3;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.exists(triangle, filter(filter(x.s, and[apply(size-geq,iota(x.s)),and[green,size2]]), yellow))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:green;4:size2;4:yellow
'λx.apply(nand[size3,triangle],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:size3;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(filter(filter(x.s, iff[and[size3,size3],green]), not[triangle]), circle), size1)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:and[%s,%s];4:size3;4:size3;4:green;4:not[%s];4:triangle;4:circle;4:size1
'λx.exists(blue, filter(filter(x.s, size3), circle))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle
'λx.apply(green,iota(filter(x.s, not[triangle])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.forall(apply(size-leq,iota(filter(x.s, triangle))),filter(x.s, yellow))'	0:forall(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.contains(iota(filter(filter(filter(x.s, blue), size1), green)), filter(x.s, rectangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1;4:green;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(size2,iota(filter(filter(x.s, rectangle), yellow)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:yellow
'λx.apply(apply(same_size,x.o),iota(filter(x.s, and[blue,or[blue,circle]])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:or[%s,%s];4:blue;4:circle
'λx.forall(and[size2,size2],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:size2;4:size2;3:%s.s;2:x
'λx.apply(and[nor[circle,implies[blue,rectangle]],size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:circle;4:implies[%s,%s];4:blue;4:rectangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(and[rectangle,apply(same_size,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(and[blue,not[yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:not[%s];4:yellow;1:%s.o;2:x
'λx.apply(and[not[blue],or[circle,circle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:blue;4:or[%s,%s];4:circle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[or[blue,yellow]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:blue;4:yellow;1:%s.o;2:x
'λx.apply(and[size3,and[and[size1,green],and[size1,size3]]],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:size1;4:green;4:and[%s,%s];4:size1;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(circle, filter(filter(x.s, triangle), blue))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue
'λx.apply(and[apply(same_shape,iota(x.s)),rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:rectangle;1:%s.o;2:x
'λx.apply(not[size3],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(filter(filter(x.s, circle), green), size3), or[or[and[and[green,rectangle],not[size3]],not[apply(same_size,x.o)]],iff[nand[not[and[circle,circle]],and[nand[size2,not[yellow]],not[or[triangle,nor[yellow,blue]]]]],rectangle]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green;4:size3;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:rectangle;4:not[%s];4:size3;4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:iff[%s,%s];4:nand[%s,%s];4:not[%s];4:and[%s,%s];4:circle;4:circle;4:and[%s,%s];4:nand[%s,%s];4:size2;4:not[%s];4:yellow;4:not[%s];4:or[%s,%s];4:triangle;4:nor[%s,%s];4:yellow;4:blue;4:rectangle
'λx.empty(filter(filter(filter(filter(filter(x.s, blue), and[rectangle,and[iff[green,and[apply(same_size,iota(x.s)),circle]],or[nand[size2,size3],and[size3,size1]]]]), circle), rectangle), and[yellow,circle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:iff[%s,%s];4:green;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:nand[%s,%s];4:size2;4:size3;4:and[%s,%s];4:size3;4:size1;4:circle;4:rectangle;4:and[%s,%s];4:yellow;4:circle
'λx.apply(green,iota(filter(x.s, implies[not[blue],circle])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:not[%s];4:blue;4:circle
'λx.apply(not[circle],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.empty(filter(filter(filter(x.s, not[and[and[apply(same_shape,iota(filter(x.s, and[blue,circle]))),circle],rectangle]]), yellow), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:circle;4:circle;4:rectangle;4:yellow;4:yellow
'λx.apply(and[apply(same_color,x.o),blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(filter(x.s, or[nand[size3,size3],size3]), implies[size3,apply(same_color,x.o)]), triangle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:nand[%s,%s];4:size3;4:size3;4:size3;4:implies[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle
'λx.apply(green,iota(filter(filter(x.s, size3), or[iff[or[apply(same_color,x.o),blue],size3],blue])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue;4:size3;4:blue
'λx.exists(blue, filter(filter(x.s, not[blue]), implies[yellow,yellow]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:implies[%s,%s];4:yellow;4:yellow
'λx.apply(circle,iota(filter(x.s, or[size3,rectangle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:rectangle
'λx.apply(size1,iota(filter(filter(filter(x.s, apply(same_color,x.o)), size3), triangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3;4:triangle
'λx.exists(apply(same_color,iota(filter(filter(filter(x.s, yellow), and[apply(same_size,x.o),not[rectangle]]), rectangle))), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:not[%s];4:rectangle;4:rectangle;3:%s.s;2:x
'λx.apply(apply(same_color,iota(filter(x.s, blue))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.apply(or[and[and[size1,blue],and[implies[size1,size1],triangle]],nand[rectangle,size2]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:blue;4:and[%s,%s];4:implies[%s,%s];4:size1;4:size1;4:triangle;4:nand[%s,%s];4:rectangle;4:size2;1:%s.o;2:x
'λx.contains(x.o, filter(filter(filter(x.s, triangle), green), and[rectangle,triangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green;4:and[%s,%s];4:rectangle;4:triangle
'λx.apply(yellow,iota(filter(filter(x.s, blue), or[triangle,circle])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:triangle;4:circle
'λx.apply(nor[circle,and[blue,size2]],iota(filter(filter(filter(x.s, triangle), size1), not[size3])))'	0:apply(%s,%s);4:nor[%s,%s];4:circle;4:and[%s,%s];4:blue;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size1;4:not[%s];4:size3
'λx.exists(and[and[and[circle,and[or[blue,size3],triangle]],triangle],iff[yellow,yellow]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:or[%s,%s];4:blue;4:size3;4:triangle;4:triangle;4:iff[%s,%s];4:yellow;4:yellow;3:%s.s;2:x
'λx.apply(not[or[and[or[and[or[and[and[circle,or[yellow,blue]],not[rectangle]],circle],blue],apply(same_size,x.o)],apply(same_size,iota(x.s))],rectangle]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:or[%s,%s];4:yellow;4:blue;4:not[%s];4:rectangle;4:circle;4:blue;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(yellow,iota(filter(x.s, nand[size1,rectangle])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size1;4:rectangle
'λx.apply(and[circle,circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[or[green,size1],and[rectangle,circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:green;4:size1;4:and[%s,%s];4:rectangle;4:circle;1:%s.o;2:x
'λx.apply(or[yellow,implies[apply(same_color,iota(filter(filter(x.s, yellow), apply(same_shape,iota(filter(filter(x.s, triangle), triangle)))))),rectangle]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:triangle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[apply(same_color,x.o),iff[size3,green]],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:iff[%s,%s];4:size3;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(or[apply(same_size,iota(x.s)),blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.apply(not[or[circle,triangle]],iota(filter(filter(x.s, or[and[apply(same_color,iota(x.s)),size2],size3]), nand[yellow,or[size2,size3]])))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:circle;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size2;4:size3;4:nand[%s,%s];4:yellow;4:or[%s,%s];4:size2;4:size3
'λx.apply(iff[blue,and[rectangle,circle]],iota(filter(filter(x.s, size1), triangle)))'	0:apply(%s,%s);4:iff[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle
'λx.apply(and[apply(same_color,x.o),size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3;1:%s.o;2:x
'λx.apply(and[size2,yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(and[circle,implies[size2,green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:implies[%s,%s];4:size2;4:green;1:%s.o;2:x
'λx.apply(and[not[and[yellow,size3]],size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:yellow;4:size3;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(not[and[size1,not[size1]]],iota(filter(filter(filter(x.s, triangle), size2), and[yellow,apply(same_size,iota(x.s))])))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size1;4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2;4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, apply(same_shape,x.o))), filter(filter(x.s, and[blue,size2]), rectangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size2;4:rectangle
'λx.apply(and[circle,size2],iota(filter(filter(x.s, yellow), triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle
'λx.apply(not[green],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[green,yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.exists(apply(same_color,x.o), filter(filter(filter(filter(x.s, blue), size2), nand[or[apply(same_color,x.o),circle],or[circle,or[circle,size2]]]), or[size1,size3]))'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2;4:nand[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;4:or[%s,%s];4:circle;4:or[%s,%s];4:circle;4:size2;4:or[%s,%s];4:size1;4:size3
'λx.apply(size3,iota(filter(filter(x.s, blue), green)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green
'λx.apply(and[circle,size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[and[triangle,circle],not[green]],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:triangle;4:circle;4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.forall(rectangle,filter(filter(filter(x.s, nor[triangle,size2]), and[size2,yellow]), rectangle))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:triangle;4:size2;4:and[%s,%s];4:size2;4:yellow;4:rectangle
'λx.apply(nand[green,and[circle,triangle]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:green;4:and[%s,%s];4:circle;4:triangle;1:%s.o;2:x
'λx.empty(filter(filter(x.s, and[circle,yellow]), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:yellow;4:triangle
'λx.apply(and[size2,triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(x.s, and[rectangle,size1]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:size1
'λx.apply(not[size2],iota(filter(x.s, apply(same_size,iota(x.s)))))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, size3), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle
'λx.apply(or[apply(same_size,iota(filter(filter(x.s, rectangle), and[rectangle,yellow]))),yellow],iota(filter(filter(filter(filter(x.s, and[or[implies[and[size1,nand[or[and[and[size1,blue],not[triangle]],size1],size1]],yellow],size3],rectangle]), green), rectangle), not[blue])))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:rectangle;4:yellow;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:size1;4:nand[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:blue;4:not[%s];4:triangle;4:size1;4:size1;4:yellow;4:size3;4:rectangle;4:green;4:rectangle;4:not[%s];4:blue
'λx.apply(implies[size3,yellow],iota(filter(filter(filter(x.s, size2), and[or[or[triangle,not[circle]],not[size2]],circle]), size3)))'	0:apply(%s,%s);4:implies[%s,%s];4:size3;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:triangle;4:not[%s];4:circle;4:not[%s];4:size2;4:circle;4:size3
'λx.apply(circle,iota(filter(filter(x.s, size3), rectangle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle
'λx.apply(apply(same_size,iota(filter(filter(filter(x.s, size1), triangle), yellow))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle;4:yellow;1:%s.o;2:x
'λx.apply(not[and[blue,size3]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:blue;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[not[triangle],iff[and[yellow,or[apply(same_size,x.o),rectangle]],circle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:triangle;4:iff[%s,%s];4:and[%s,%s];4:yellow;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:rectangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.forall(triangle,filter(x.s, not[size1]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1
'λx.apply(apply(same_shape,x.o),iota(filter(filter(filter(x.s, size1), green), rectangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green;4:rectangle
'λx.apply(yellow,x.o)'	0:apply(%s,%s);4:yellow;1:%s.o;2:x
'λx.apply(or[yellow,not[triangle]],iota(filter(x.s, and[nand[triangle,nor[green,and[size1,size3]]],green])))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nand[%s,%s];4:triangle;4:nor[%s,%s];4:green;4:and[%s,%s];4:size1;4:size3;4:green
'λx.apply(size1,iota(filter(filter(filter(x.s, and[rectangle,and[size3,not[blue]]]), and[yellow,circle]), not[blue])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:size3;4:not[%s];4:blue;4:and[%s,%s];4:yellow;4:circle;4:not[%s];4:blue
'λx.exists(rectangle, filter(x.s, not[green]))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green
'λx.apply(size3,iota(filter(filter(x.s, apply(size-geq,x.o)), circle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:circle
'λx.apply(circle,iota(filter(filter(x.s, size2), and[circle,or[yellow,yellow]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:circle;4:or[%s,%s];4:yellow;4:yellow
'λx.apply(apply(size-gt,iota(filter(filter(filter(x.s, green), triangle), or[size2,green]))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:triangle;4:or[%s,%s];4:size2;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(x.s, iff[nor[green,green],circle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:nor[%s,%s];4:green;4:green;4:circle
'λx.apply(and[blue,or[rectangle,yellow]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:or[%s,%s];4:rectangle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[size2,size2],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size2;4:size2;1:%s.o;2:x
'λx.empty(filter(filter(x.s, size3), apply(same_size,x.o)))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(not[apply(same_size,iota(x.s))],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(filter(filter(x.s, or[not[yellow],size2]), blue), triangle), triangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:yellow;4:size2;4:blue;4:triangle;4:triangle
'λx.apply(not[rectangle],iota(filter(x.s, green)))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(or[green,and[green,size3]],iota(filter(x.s, not[circle])))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:and[%s,%s];4:green;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.apply(yellow,iota(filter(filter(filter(filter(x.s, not[or[and[size2,and[size1,size1]],implies[rectangle,circle]]]), size3), not[iff[yellow,size3]]), green)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:size1;4:size1;4:implies[%s,%s];4:rectangle;4:circle;4:size3;4:not[%s];4:iff[%s,%s];4:yellow;4:size3;4:green
'λx.apply(implies[green,size1],iota(filter(filter(filter(filter(x.s, rectangle), and[triangle,size1]), implies[yellow,rectangle]), size3)))'	0:apply(%s,%s);4:implies[%s,%s];4:green;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:triangle;4:size1;4:implies[%s,%s];4:yellow;4:rectangle;4:size3
'λx.apply(or[and[implies[and[blue,and[yellow,and[and[and[yellow,yellow],size1],and[and[and[and[green,and[size2,green]],size3],size3],yellow]]]],not[yellow]],or[implies[apply(same_size,x.o),size3],or[and[rectangle,and[or[iff[circle,and[apply(same_color,x.o),blue]],circle],iff[apply(same_size,iota(x.s)),blue]]],not[or[size2,or[yellow,yellow]]]]]],size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:yellow;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:yellow;4:size1;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:size2;4:green;4:size3;4:size3;4:yellow;4:not[%s];4:yellow;4:or[%s,%s];4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:or[%s,%s];4:iff[%s,%s];4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue;4:circle;4:iff[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:blue;4:not[%s];4:or[%s,%s];4:size2;4:or[%s,%s];4:yellow;4:yellow;4:size1;1:%s.o;2:x
'λx.apply(iff[or[rectangle,yellow],yellow],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:or[%s,%s];4:rectangle;4:yellow;4:yellow;1:%s.o;2:x
'λx.contains(iota(filter(x.s, apply(same_shape,x.o))), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(triangle,iota(filter(x.s, apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size3,and[rectangle,and[circle,size3]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:circle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(filter(filter(filter(filter(filter(filter(x.s, green), triangle), green), rectangle), not[size3]), circle), not[yellow]), size1), apply(same_shape,iota(x.s))))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:triangle;4:green;4:rectangle;4:not[%s];4:size3;4:circle;4:not[%s];4:yellow;4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(and[yellow,yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.forall(size1,filter(x.s, and[size2,rectangle]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:rectangle
'λx.apply(apply(size-gt,iota(x.s)),iota(filter(filter(x.s, and[size1,green]), blue)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:green;4:blue
'λx.apply(nand[triangle,or[implies[yellow,green],not[green]]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:or[%s,%s];4:implies[%s,%s];4:yellow;4:green;4:not[%s];4:green;1:%s.o;2:x
'λx.forall(green,filter(x.s, apply(same_shape,x.o)))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(apply(same_color,iota(filter(filter(filter(x.s, nor[rectangle,size1]), triangle), size3))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:rectangle;4:size1;4:triangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size3,and[iff[size2,triangle],or[size1,iff[circle,not[size3]]]]],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:iff[%s,%s];4:size2;4:triangle;4:or[%s,%s];4:size1;4:iff[%s,%s];4:circle;4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.forall(not[and[and[blue,apply(same_size,iota(x.s))],and[circle,and[yellow,and[size2,size2]]]]],filter(x.s, and[nor[yellow,size2],and[circle,blue]]))'	0:forall(%s,%s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:and[%s,%s];4:yellow;4:and[%s,%s];4:size2;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:yellow;4:size2;4:and[%s,%s];4:circle;4:blue
'λx.apply(nor[size1,blue],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size1;4:blue;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, not[yellow]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow
'λx.forall(apply(same_shape,iota(filter(x.s, triangle))),filter(filter(filter(x.s, green), or[not[and[or[size2,nor[circle,apply(same_size,x.o)]],size2]],triangle]), size1))'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:or[%s,%s];4:size2;4:nor[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2;4:triangle;4:size1
'λx.apply(and[rectangle,circle],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(blue,iota(filter(filter(x.s, apply(same_shape,iota(filter(x.s, size3)))), triangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle
'λx.apply(size2,iota(filter(filter(filter(filter(x.s, not[blue]), blue), or[blue,rectangle]), size2)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:blue;4:or[%s,%s];4:blue;4:rectangle;4:size2
'λx.apply(green,iota(filter(x.s, nand[and[blue,circle],yellow])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:and[%s,%s];4:blue;4:circle;4:yellow
'λx.apply(yellow,iota(filter(filter(filter(x.s, nand[blue,and[yellow,and[apply(same_color,iota(filter(x.s, or[size2,rectangle]))),apply(same_color,iota(filter(x.s, blue)))]]]), size1), apply(same_size,x.o))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:blue;4:and[%s,%s];4:yellow;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(size1,iota(filter(x.s, and[circle,size1])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size1
'λx.apply(implies[triangle,size3],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:triangle;4:size3;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(filter(x.s, apply(same_color,x.o)), blue), triangle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue;4:triangle
'λx.apply(size1,iota(filter(x.s, and[size3,circle])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:circle
'λx.apply(triangle,iota(filter(x.s, and[blue,blue])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:blue
'λx.apply(size1,iota(filter(x.s, or[rectangle,blue])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:blue
'λx.forall(or[rectangle,rectangle],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:rectangle;4:rectangle;3:%s.s;2:x
'λx.apply(and[size3,triangle],iota(filter(x.s, implies[yellow,and[not[green],size2]])))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:yellow;4:and[%s,%s];4:not[%s];4:green;4:size2
'λx.contains(x.o, filter(filter(x.s, and[not[green],and[size1,apply(same_size,iota(x.s))]]), size3))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:green;4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size3
'λx.apply(size3,iota(filter(filter(filter(x.s, not[triangle]), or[blue,size1]), size3)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:or[%s,%s];4:blue;4:size1;4:size3
'λx.apply(and[rectangle,and[blue,apply(same_color,iota(filter(x.s, circle)))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;1:%s.o;2:x
'λx.apply(not[blue],iota(filter(filter(filter(filter(filter(filter(filter(x.s, rectangle), circle), size1), or[size3,and[size2,not[size3]]]), blue), size1), size1)))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle;4:size1;4:or[%s,%s];4:size3;4:and[%s,%s];4:size2;4:not[%s];4:size3;4:blue;4:size1;4:size1
'λx.apply(apply(same_shape,x.o),iota(filter(x.s, apply(same_shape,iota(filter(x.s, iff[size1,or[nand[circle,size1],yellow]]))))))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size1;4:or[%s,%s];4:nand[%s,%s];4:circle;4:size1;4:yellow
'λx.apply(implies[apply(same_shape,x.o),size3],iota(filter(x.s, and[yellow,nor[blue,apply(size-geq,iota(x.s))]])))'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:nor[%s,%s];4:blue;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(x.s, size2), size2)), filter(x.s, size1))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(apply(same_shape,iota(filter(filter(x.s, size1), triangle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle;1:%s.o;2:x
'λx.apply(apply(same_size,x.o),iota(filter(x.s, green)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.forall(green,filter(x.s, triangle))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(triangle,iota(filter(filter(x.s, and[apply(same_size,x.o),green]), circle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;4:circle
'λx.apply(iff[yellow,green],iota(filter(filter(filter(filter(x.s, size2), blue), and[not[size1],apply(same_size,iota(filter(x.s, size1)))]), circle)))'	0:apply(%s,%s);4:iff[%s,%s];4:yellow;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue;4:and[%s,%s];4:not[%s];4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle
'λx.forall(apply(same_size,iota(filter(filter(filter(x.s, triangle), circle), green))),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle;4:green;3:%s.s;2:x
'λx.contains(iota(filter(x.s, and[rectangle,circle])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:circle;3:%s.s;2:x
'λx.forall(not[and[green,size2]],filter(x.s, blue))'	0:forall(%s,%s);4:not[%s];4:and[%s,%s];4:green;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.empty(filter(x.s, and[or[not[size3],and[size1,green]],size3]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:size3;4:and[%s,%s];4:size1;4:green;4:size3
'λx.exists(yellow, filter(filter(filter(x.s, and[blue,triangle]), circle), yellow))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:triangle;4:circle;4:yellow
'λx.contains(iota(filter(x.s, circle)), filter(filter(x.s, rectangle), and[nor[green,apply(same_size,iota(filter(filter(x.s, blue), not[blue])))],iff[green,size1]]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:nor[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:blue;4:iff[%s,%s];4:green;4:size1
'λx.exists(circle, filter(filter(filter(filter(filter(filter(filter(x.s, size2), blue), yellow), triangle), triangle), triangle), size3))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue;4:yellow;4:triangle;4:triangle;4:triangle;4:size3
'λx.apply(circle,iota(filter(filter(filter(filter(x.s, circle), or[not[and[size3,green]],green]), size3), implies[triangle,nor[size2,and[yellow,blue]]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:size3;4:green;4:green;4:size3;4:implies[%s,%s];4:triangle;4:nor[%s,%s];4:size2;4:and[%s,%s];4:yellow;4:blue
'λx.forall(yellow,filter(x.s, yellow))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(or[apply(same_shape,x.o),triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle;1:%s.o;2:x
'λx.apply(not[and[implies[and[and[blue,circle],nor[or[rectangle,not[size3]],yellow]],yellow],or[nand[triangle,nor[apply(size-geq,iota(x.s)),iff[rectangle,circle]]],not[size2]]]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:circle;4:nor[%s,%s];4:or[%s,%s];4:rectangle;4:not[%s];4:size3;4:yellow;4:yellow;4:or[%s,%s];4:nand[%s,%s];4:triangle;4:nor[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:iff[%s,%s];4:rectangle;4:circle;4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(or[blue,rectangle],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.contains(iota(filter(x.s, circle)), filter(x.s, and[and[yellow,blue],triangle]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:yellow;4:blue;4:triangle
'λx.apply(nor[yellow,yellow],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:yellow;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size2,size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[implies[size2,yellow],green],iota(filter(filter(x.s, and[and[green,iff[rectangle,and[circle,blue]]],yellow]), and[green,iff[size3,yellow]])))'	0:apply(%s,%s);4:nand[%s,%s];4:implies[%s,%s];4:size2;4:yellow;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:green;4:iff[%s,%s];4:rectangle;4:and[%s,%s];4:circle;4:blue;4:yellow;4:and[%s,%s];4:green;4:iff[%s,%s];4:size3;4:yellow
'λx.apply(size2,iota(filter(x.s, nand[size3,green])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size3;4:green
'λx.exists(and[size3,yellow], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:size3;4:yellow;3:%s.s;2:x
'λx.apply(and[yellow,size1],iota(filter(filter(x.s, and[size3,or[green,not[apply(same_size,x.o)]]]), apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:or[%s,%s];4:green;4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(filter(x.s, green), triangle), green)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:triangle;4:green
'λx.apply(nand[and[or[and[size2,size1],iff[and[iff[yellow,iff[size1,or[blue,triangle]]],and[green,size3]],apply(size-leq,x.o)]],circle],and[size2,not[yellow]]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size2;4:size1;4:iff[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:yellow;4:iff[%s,%s];4:size1;4:or[%s,%s];4:blue;4:triangle;4:and[%s,%s];4:green;4:size3;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:circle;4:and[%s,%s];4:size2;4:not[%s];4:yellow;1:%s.o;2:x
'λx.forall(rectangle,filter(x.s, blue))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.forall(or[triangle,and[size2,size2]],filter(filter(x.s, apply(same_shape,iota(filter(x.s, triangle)))), rectangle))'	0:forall(%s,%s);4:or[%s,%s];4:triangle;4:and[%s,%s];4:size2;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle
'λx.apply(size2,iota(filter(filter(x.s, green), blue)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue
'λx.forall(and[rectangle,green],filter(filter(x.s, apply(same_color,iota(x.s))), not[apply(same_size,iota(x.s))]))'	0:forall(%s,%s);4:and[%s,%s];4:rectangle;4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(or[circle,circle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(filter(filter(filter(x.s, yellow), rectangle), apply(same_shape,iota(filter(filter(x.s, size3), size2)))), apply(same_color,x.o)), apply(same_color,x.o))))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.exists(and[nor[triangle,and[rectangle,triangle]],circle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:nor[%s,%s];4:triangle;4:and[%s,%s];4:rectangle;4:triangle;4:circle;3:%s.s;2:x
'λx.apply(and[and[and[size3,implies[not[green],and[blue,size1]]],yellow],not[blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:implies[%s,%s];4:not[%s];4:green;4:and[%s,%s];4:blue;4:size1;4:yellow;4:not[%s];4:blue;1:%s.o;2:x
'λx.forall(apply(same_size,iota(filter(filter(x.s, size2), and[size1,size2]))),filter(filter(x.s, and[nor[and[or[yellow,size2],size3],and[green,size1]],not[circle]]), nand[circle,apply(same_size,iota(filter(x.s, and[triangle,size3])))]))'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:size1;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:or[%s,%s];4:yellow;4:size2;4:size3;4:and[%s,%s];4:green;4:size1;4:not[%s];4:circle;4:nand[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:size3
'λx.exists(blue, filter(filter(x.s, iff[blue,or[triangle,and[or[yellow,not[size1]],and[not[yellow],and[not[green],or[apply(size-leq,iota(filter(filter(filter(x.s, and[green,green]), rectangle), apply(same_shape,iota(x.s))))),not[and[rectangle,nor[size3,size3]]]]]]]]]), apply(size-leq,x.o)))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:blue;4:or[%s,%s];4:triangle;4:and[%s,%s];4:or[%s,%s];4:yellow;4:not[%s];4:size1;4:and[%s,%s];4:not[%s];4:yellow;4:and[%s,%s];4:not[%s];4:green;4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:green;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:rectangle;4:nor[%s,%s];4:size3;4:size3;4:apply(%s,%s);5:size-leq;1:%s.o;2:x
'λx.exists(or[size1,size1], filter(x.s, triangle))'	0:exists(%s, %s);4:or[%s,%s];4:size1;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(or[triangle,and[rectangle,apply(same_size,x.o)]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[and[triangle,and[triangle,circle]],nor[and[size1,and[or[size2,blue],triangle]],blue]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:triangle;4:circle;4:nor[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:or[%s,%s];4:size2;4:blue;4:triangle;4:blue;1:%s.o;2:x
'λx.forall(triangle,filter(filter(filter(x.s, size2), size1), yellow))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1;4:yellow
'λx.contains(iota(filter(x.s, nor[or[or[yellow,and[or[circle,yellow],and[yellow,green]]],size1],or[size3,not[rectangle]]])), filter(x.s, or[size1,and[size3,rectangle]]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:or[%s,%s];4:or[%s,%s];4:yellow;4:and[%s,%s];4:or[%s,%s];4:circle;4:yellow;4:and[%s,%s];4:yellow;4:green;4:size1;4:or[%s,%s];4:size3;4:not[%s];4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:and[%s,%s];4:size3;4:rectangle
'λx.exists(yellow, filter(x.s, implies[and[size3,apply(same_shape,iota(x.s))],not[or[and[yellow,size2],iff[blue,and[or[nor[green,nand[green,size3]],size3],nand[size1,triangle]]]]]]))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:yellow;4:size2;4:iff[%s,%s];4:blue;4:and[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:green;4:nand[%s,%s];4:green;4:size3;4:size3;4:nand[%s,%s];4:size1;4:triangle
'λx.apply(apply(size-lt,iota(x.s)),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(and[apply(same_color,x.o),or[blue,and[triangle,and[not[size2],and[triangle,and[circle,triangle]]]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:or[%s,%s];4:blue;4:and[%s,%s];4:triangle;4:and[%s,%s];4:not[%s];4:size2;4:and[%s,%s];4:triangle;4:and[%s,%s];4:circle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.false'	0:false
'λx.apply(and[green,yellow],iota(filter(filter(filter(filter(filter(x.s, not[size1]), or[triangle,or[apply(size-geq,x.o),size1]]), size2), blue), rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:or[%s,%s];4:triangle;4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:size1;4:size2;4:blue;4:rectangle
'λx.forall(size2,filter(filter(filter(x.s, circle), yellow), and[not[green],blue]))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow;4:and[%s,%s];4:not[%s];4:green;4:blue
'λx.empty(filter(filter(x.s, and[or[apply(same_shape,x.o),triangle],or[circle,apply(size-lt,x.o)]]), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle;4:or[%s,%s];4:circle;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:rectangle
'λx.apply(and[and[blue,triangle],not[apply(same_color,x.o)]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:triangle;4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(or[yellow,circle],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(blue,iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(and[and[and[or[nand[implies[size1,circle],apply(size-geq,iota(filter(filter(x.s, and[green,and[size3,triangle]]), nand[triangle,size1])))],size1],size1],or[size3,size3]],triangle],iota(filter(x.s, or[rectangle,and[size2,circle]])))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:nand[%s,%s];4:implies[%s,%s];4:size1;4:circle;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:and[%s,%s];4:size3;4:triangle;4:nand[%s,%s];4:triangle;4:size1;4:size1;4:size1;4:or[%s,%s];4:size3;4:size3;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:and[%s,%s];4:size2;4:circle
'λx.apply(and[size2,and[or[and[green,apply(size-lt,x.o)],rectangle],not[yellow]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:green;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:rectangle;4:not[%s];4:yellow;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(x.s, rectangle), and[or[and[size3,circle],or[and[not[size2],and[triangle,apply(same_color,iota(x.s))]],size2]],size2]), nand[and[and[and[size2,apply(same_color,iota(filter(x.s, size2)))],size1],size2],not[rectangle]])), filter(x.s, and[and[circle,circle],implies[circle,and[and[and[and[blue,triangle],size1],yellow],size2]]]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size3;4:circle;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:size2;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size2;4:size2;4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1;4:size2;4:not[%s];4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:circle;4:circle;4:implies[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:triangle;4:size1;4:yellow;4:size2
'λx.apply(not[not[or[nor[and[and[or[apply(size-geq,x.o),green],yellow],and[triangle,size1]],size3],nor[apply(same_color,iota(filter(filter(filter(filter(filter(x.s, blue), size3), yellow), or[apply(same_shape,iota(x.s)),circle]), size2))),not[rectangle]]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:or[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:green;4:yellow;4:and[%s,%s];4:triangle;4:size1;4:size3;4:nor[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3;4:yellow;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle;4:size2;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, triangle), circle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle
'λx.apply(and[implies[not[triangle],not[yellow]],blue],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:not[%s];4:triangle;4:not[%s];4:yellow;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(size1,iota(filter(filter(filter(x.s, yellow), apply(same_size,x.o)), and[blue,blue])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:blue;4:blue
'λx.exists(blue, filter(x.s, or[and[size2,yellow],and[circle,green]]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size2;4:yellow;4:and[%s,%s];4:circle;4:green
'λx.contains(iota(filter(x.s, blue)), filter(filter(x.s, implies[or[nand[or[blue,and[size2,circle]],size3],size2],size1]), size2))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:or[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:blue;4:and[%s,%s];4:size2;4:circle;4:size3;4:size2;4:size1;4:size2
'λx.apply(or[triangle,size3],iota(filter(filter(filter(x.s, rectangle), and[size3,size1]), size1)))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:size3;4:size1;4:size1
'λx.apply(not[size3],iota(filter(x.s, or[size1,yellow])))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:yellow
'λx.apply(yellow,iota(filter(x.s, not[circle])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.apply(and[implies[and[and[not[size1],nor[size1,and[and[size3,size1],triangle]]],circle],size1],circle],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size1;4:nor[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:size3;4:size1;4:triangle;4:circle;4:size1;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(or[size3,apply(same_color,x.o)],iota(filter(x.s, and[triangle,and[apply(same_size,x.o),and[blue,circle]]])))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:blue;4:circle
'λx.apply(size1,iota(filter(x.s, or[circle,size1])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:size1
'λx.apply(nor[yellow,apply(same_size,iota(x.s))],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(not[green],iota(filter(filter(x.s, size2), triangle)))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:triangle
'λx.apply(or[triangle,and[circle,apply(same_size,iota(x.s))]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, yellow), size2)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2
'λx.apply(apply(same_size,iota(filter(filter(filter(filter(x.s, triangle), size1), and[size1,blue]), rectangle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size1;4:and[%s,%s];4:size1;4:blue;4:rectangle;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(filter(filter(x.s, yellow), blue), size2), iff[and[and[size2,size1],blue],nand[rectangle,triangle]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:blue;4:size2;4:iff[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:size1;4:blue;4:nand[%s,%s];4:rectangle;4:triangle
'λx.exists(yellow, filter(filter(x.s, and[circle,not[yellow]]), size3))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:not[%s];4:yellow;4:size3
'λx.apply(triangle,iota(filter(x.s, or[size1,and[blue,rectangle]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:and[%s,%s];4:blue;4:rectangle
'λx.exists(size3, x.s)'	0:exists(%s, %s);4:size3;3:%s.s;2:x
'λx.apply(and[green,size2],iota(filter(filter(filter(x.s, size2), or[triangle,circle]), rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:triangle;4:circle;4:rectangle
'λx.exists(circle, filter(x.s, and[yellow,size1]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size1
'λx.apply(triangle,iota(filter(filter(x.s, rectangle), triangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle
'λx.contains(x.o, filter(filter(x.s, nor[nor[rectangle,apply(same_shape,x.o)],iff[or[circle,apply(same_color,iota(filter(x.s, apply(same_size,iota(x.s)))))],rectangle]]), rectangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:nor[%s,%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:iff[%s,%s];4:or[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:rectangle;4:rectangle
'λx.empty(filter(filter(filter(x.s, size3), size2), and[size2,size3]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2;4:and[%s,%s];4:size2;4:size3
'λx.apply(size2,iota(filter(x.s, and[and[iff[size3,yellow],size2],size3])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:size3;4:yellow;4:size2;4:size3
'λx.contains(iota(filter(x.s, size2)), filter(filter(filter(x.s, or[yellow,size3]), implies[nand[apply(same_size,iota(filter(x.s, blue))),iff[iff[yellow,circle],iff[size1,size2]]],nand[rectangle,not[circle]]]), size3))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:size3;4:implies[%s,%s];4:nand[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:iff[%s,%s];4:iff[%s,%s];4:yellow;4:circle;4:iff[%s,%s];4:size1;4:size2;4:nand[%s,%s];4:rectangle;4:not[%s];4:circle;4:size3
'λx.contains(iota(filter(filter(x.s, triangle), rectangle)), filter(filter(x.s, nor[apply(same_shape,iota(filter(x.s, size3))),nand[rectangle,size3]]), triangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:nand[%s,%s];4:rectangle;4:size3;4:triangle
'λx.contains(x.o, filter(filter(x.s, size3), blue))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue
'λx.exists(apply(size-geq,x.o), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:size-geq;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(x.s, blue), and[yellow,triangle])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:yellow;4:triangle
'λx.contains(iota(x.s), filter(filter(filter(x.s, size2), not[not[rectangle]]), nand[and[blue,size2],blue]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:not[%s];4:not[%s];4:rectangle;4:nand[%s,%s];4:and[%s,%s];4:blue;4:size2;4:blue
'λx.apply(triangle,iota(filter(x.s, or[not[size3],blue])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:size3;4:blue
'λx.apply(and[implies[size3,circle],not[circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:size3;4:circle;4:not[%s];4:circle;1:%s.o;2:x
'λx.apply(and[iff[not[triangle],size2],size1],iota(filter(x.s, not[size1])))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:not[%s];4:triangle;4:size2;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1
'λx.exists(size1, filter(x.s, size3))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.forall(not[or[yellow,triangle]],filter(filter(filter(filter(x.s, and[and[size1,circle],green]), nor[triangle,or[size1,circle]]), size1), size1))'	0:forall(%s,%s);4:not[%s];4:or[%s,%s];4:yellow;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size1;4:circle;4:green;4:nor[%s,%s];4:triangle;4:or[%s,%s];4:size1;4:circle;4:size1;4:size1
'λx.apply(apply(size-leq,x.o),iota(filter(x.s, or[yellow,rectangle])))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:rectangle
'λx.contains(x.o, filter(x.s, not[circle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.exists(circle, filter(x.s, size3))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(green, filter(filter(filter(x.s, green), or[triangle,green]), size3))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:triangle;4:green;4:size3
'λx.apply(and[circle,not[apply(same_shape,x.o)]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[and[blue,green],rectangle],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:green;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.forall(implies[nor[nand[apply(size-gt,iota(x.s)),rectangle],rectangle],rectangle],filter(x.s, size1))'	0:forall(%s,%s);4:implies[%s,%s];4:nor[%s,%s];4:nand[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:rectangle;4:rectangle;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(yellow, filter(filter(filter(x.s, not[and[or[or[and[circle,circle],size1],rectangle],circle]]), size2), yellow))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:circle;4:circle;4:size1;4:rectangle;4:circle;4:size2;4:yellow
'λx.apply(circle,iota(filter(filter(x.s, green), apply(size-lt,x.o))))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(x.s, size3), and[size3,and[or[triangle,not[and[triangle,apply(same_shape,iota(x.s))]]],not[size2]]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:size3;4:and[%s,%s];4:or[%s,%s];4:triangle;4:not[%s];4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:not[%s];4:size2
'λx.apply(not[or[triangle,apply(size-geq,iota(filter(x.s, triangle)))]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:triangle;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;1:%s.o;2:x
'λx.exists(triangle, filter(filter(filter(x.s, circle), size1), yellow))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1;4:yellow
'λx.apply(nor[yellow,triangle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:yellow;4:triangle;1:%s.o;2:x
'λx.apply(size2,iota(filter(x.s, not[circle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.apply(blue,iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(and[size3,circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[triangle,or[yellow,green]],iota(filter(filter(filter(x.s, yellow), apply(same_shape,x.o)), size3)))'	0:apply(%s,%s);4:implies[%s,%s];4:triangle;4:or[%s,%s];4:yellow;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3
'λx.forall(and[triangle,and[nand[circle,nand[nand[green,apply(same_size,x.o)],and[apply(size-geq,x.o),blue]]],rectangle]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:nand[%s,%s];4:circle;4:nand[%s,%s];4:nand[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:blue;4:rectangle;3:%s.s;2:x
'λx.apply(and[size2,triangle],iota(filter(filter(filter(x.s, and[not[size2],not[and[nor[triangle,size2],not[rectangle]]]]), yellow), circle)))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:size2;4:not[%s];4:and[%s,%s];4:nor[%s,%s];4:triangle;4:size2;4:not[%s];4:rectangle;4:yellow;4:circle
'λx.apply(triangle,iota(filter(filter(x.s, circle), size3)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3
'λx.apply(and[and[blue,rectangle],not[size2]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:rectangle;4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.contains(x.o, filter(x.s, or[not[not[and[triangle,and[and[blue,yellow],or[and[circle,not[and[nand[and[blue,and[triangle,or[yellow,size2]]],or[apply(size-gt,x.o),triangle]],rectangle]]],not[size3]]]]]],and[apply(same_color,x.o),size1]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:not[%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:and[%s,%s];4:blue;4:yellow;4:or[%s,%s];4:and[%s,%s];4:circle;4:not[%s];4:and[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:triangle;4:or[%s,%s];4:yellow;4:size2;4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:triangle;4:rectangle;4:not[%s];4:size3;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1
'λx.empty(filter(x.s, not[rectangle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle
'λx.apply(and[rectangle,rectangle],iota(filter(filter(filter(filter(x.s, size2), size1), not[green]), circle)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1;4:not[%s];4:green;4:circle
'λx.empty(filter(x.s, apply(size-geq,iota(filter(filter(x.s, yellow), not[and[size3,not[rectangle]]])))))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:and[%s,%s];4:size3;4:not[%s];4:rectangle
'λx.forall(size3,filter(filter(x.s, size3), yellow))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow
'λx.apply(or[and[green,and[and[green,size3],or[and[and[triangle,green],nor[and[yellow,size2],size1]],blue]]],size1],iota(filter(x.s, or[not[size2],rectangle])))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:green;4:size3;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:green;4:nor[%s,%s];4:and[%s,%s];4:yellow;4:size2;4:size1;4:blue;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:size2;4:rectangle
'λx.apply(nor[and[apply(same_size,x.o),circle],apply(same_size,x.o)],iota(filter(filter(filter(filter(x.s, rectangle), size3), or[and[rectangle,size3],triangle]), nor[size1,rectangle])))'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:size3;4:triangle;4:nor[%s,%s];4:size1;4:rectangle
'λx.contains(x.o, filter(x.s, or[or[implies[size3,triangle],size2],size1]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:size3;4:triangle;4:size2;4:size1
'λx.apply(rectangle,iota(filter(x.s, nand[rectangle,size2])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:rectangle;4:size2
'λx.apply(and[triangle,circle],iota(filter(x.s, and[not[size2],rectangle])))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:size2;4:rectangle
'λx.forall(rectangle,filter(x.s, or[green,size1]))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:size1
'λx.apply(or[and[green,triangle],size2],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:green;4:triangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.exists(apply(size-geq,iota(filter(filter(x.s, rectangle), nand[green,triangle]))), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:nand[%s,%s];4:green;4:triangle;3:%s.s;2:x
'λx.empty(filter(filter(x.s, green), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size2
'λx.apply(iff[and[rectangle,rectangle],yellow],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:rectangle;4:rectangle;4:yellow;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(x.s, apply(size-lt,iota(x.s))), and[size1,green]), iff[size2,not[size1]]), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:green;4:iff[%s,%s];4:size2;4:not[%s];4:size1;4:size1
'λx.true'	0:true
'λx.apply(and[size2,and[size1,or[and[and[triangle,triangle],circle],iff[size1,and[triangle,and[and[yellow,not[size1]],circle]]]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:size1;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:triangle;4:circle;4:iff[%s,%s];4:size1;4:and[%s,%s];4:triangle;4:and[%s,%s];4:and[%s,%s];4:yellow;4:not[%s];4:size1;4:circle;1:%s.o;2:x
'λx.apply(rectangle,x.o)'	0:apply(%s,%s);4:rectangle;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, and[green,apply(size-geq,iota(filter(filter(filter(x.s, blue), circle), iff[green,size2])))])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle;4:iff[%s,%s];4:green;4:size2
'λx.apply(implies[blue,and[size2,and[blue,and[and[size3,and[or[apply(same_shape,iota(x.s)),blue],size3]],triangle]]]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:blue;4:and[%s,%s];4:size2;4:and[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:blue;4:size3;4:triangle;1:%s.o;2:x
'λx.apply(and[size3,size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[rectangle,size3],nand[triangle,green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size3;4:nand[%s,%s];4:triangle;4:green;1:%s.o;2:x
'λx.apply(and[not[yellow],not[rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:yellow;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, implies[implies[or[and[size3,yellow],size1],green],size3]), apply(same_shape,iota(x.s))))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size3;4:yellow;4:size1;4:green;4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(filter(x.s, yellow), circle), size3)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle;4:size3
'λx.contains(x.o, filter(x.s, size3))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(nor[blue,or[blue,size3]],iota(filter(filter(filter(x.s, circle), size1), iff[size3,size3])))'	0:apply(%s,%s);4:nor[%s,%s];4:blue;4:or[%s,%s];4:blue;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1;4:iff[%s,%s];4:size3;4:size3
'λx.apply(and[and[not[size2],circle],or[green,apply(same_size,iota(filter(filter(x.s, green), size2)))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size2;4:circle;4:or[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size2;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(filter(x.s, nor[or[and[or[and[not[and[size1,or[green,green]]],green],yellow],green],green],size3]), circle), or[yellow,or[size3,size3]]), circle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:green;4:green;4:green;4:yellow;4:green;4:green;4:size3;4:circle;4:or[%s,%s];4:yellow;4:or[%s,%s];4:size3;4:size3;4:circle;3:%s.s;2:x
'λx.apply(or[nor[green,triangle],size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:nor[%s,%s];4:green;4:triangle;4:size2;1:%s.o;2:x
'λx.apply(or[circle,size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:size2;1:%s.o;2:x
'λx.exists(apply(same_color,x.o), filter(filter(x.s, size3), circle))'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle
'λx.apply(size1,iota(filter(filter(filter(filter(filter(x.s, and[rectangle,yellow]), size3), blue), triangle), yellow)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:yellow;4:size3;4:blue;4:triangle;4:yellow
'λx.apply(not[rectangle],iota(filter(x.s, iff[circle,and[green,green]])))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:circle;4:and[%s,%s];4:green;4:green
'λx.exists(implies[rectangle,or[green,green]], x.s)'	0:exists(%s, %s);4:implies[%s,%s];4:rectangle;4:or[%s,%s];4:green;4:green;3:%s.s;2:x
'λx.forall(blue,filter(filter(x.s, and[and[iff[and[yellow,triangle],or[and[triangle,green],and[and[and[and[size1,size3],nand[rectangle,yellow]],green],apply(size-leq,x.o)]]],size3],circle]), size1))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:yellow;4:triangle;4:or[%s,%s];4:and[%s,%s];4:triangle;4:green;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:size3;4:nand[%s,%s];4:rectangle;4:yellow;4:green;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size3;4:circle;4:size1
'λx.contains(iota(filter(x.s, circle)), filter(filter(x.s, and[or[blue,not[size1]],nor[or[blue,rectangle],rectangle]]), size3))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:blue;4:not[%s];4:size1;4:nor[%s,%s];4:or[%s,%s];4:blue;4:rectangle;4:rectangle;4:size3
'λx.forall(triangle,filter(x.s, implies[rectangle,triangle]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:rectangle;4:triangle
'λx.apply(or[yellow,yellow],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.forall(iff[not[blue],rectangle],filter(x.s, size2))'	0:forall(%s,%s);4:iff[%s,%s];4:not[%s];4:blue;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.contains(x.o, filter(x.s, not[size2]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2
'λx.apply(yellow,iota(filter(filter(filter(x.s, size2), size1), triangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1;4:triangle
'λx.apply(not[yellow],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.forall(not[circle],x.s)'	0:forall(%s,%s);4:not[%s];4:circle;3:%s.s;2:x
'λx.apply(not[or[blue,apply(same_color,iota(x.s))]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(not[not[not[blue]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:not[%s];4:blue;1:%s.o;2:x
'λx.apply(iff[size2,size3],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:size2;4:size3;1:iota(%s);3:%s.s;2:x
'λx.forall(blue,filter(filter(x.s, yellow), green))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green
'λx.apply(nor[and[size1,green],and[size2,and[rectangle,green]]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:size1;4:green;4:and[%s,%s];4:size2;4:and[%s,%s];4:rectangle;4:green;1:%s.o;2:x
'λx.apply(or[size1,apply(same_color,iota(filter(filter(x.s, apply(same_size,iota(x.s))), yellow)))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:yellow;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, or[not[yellow],apply(same_size,iota(x.s))]), yellow)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:yellow
'λx.apply(green,iota(filter(x.s, nor[circle,size2])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:circle;4:size2
'λx.apply(rectangle,iota(filter(filter(x.s, circle), blue)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue
'λx.apply(and[green,triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.exists(size2, filter(filter(filter(filter(x.s, apply(same_color,iota(x.s))), green), not[circle]), size1))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:green;4:not[%s];4:circle;4:size1
'λx.apply(yellow,iota(filter(filter(filter(x.s, triangle), circle), triangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle;4:triangle
'λx.apply(apply(same_shape,iota(filter(x.s, implies[nor[iff[triangle,green],size3],size3]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:nor[%s,%s];4:iff[%s,%s];4:triangle;4:green;4:size3;4:size3;1:%s.o;2:x
'λx.apply(iff[rectangle,not[size2]],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:rectangle;4:not[%s];4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[size3,blue],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:size3;4:blue;1:%s.o;2:x
'λx.empty(filter(filter(x.s, green), not[size3]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:size3
'λx.forall(and[green,circle],filter(filter(x.s, apply(same_size,iota(filter(x.s, and[circle,and[size3,and[and[and[size3,triangle],and[and[size3,size2],blue]],size1]]])))), size2))'	0:forall(%s,%s);4:and[%s,%s];4:green;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:and[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:triangle;4:and[%s,%s];4:and[%s,%s];4:size3;4:size2;4:blue;4:size1;4:size2
'λx.forall(triangle,filter(filter(x.s, circle), and[rectangle,triangle]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:rectangle;4:triangle
'λx.apply(or[yellow,not[apply(same_size,iota(x.s))]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(or[triangle,nor[circle,size3]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:nor[%s,%s];4:circle;4:size3;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, nor[apply(same_shape,x.o),circle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle
'λx.apply(and[not[size1],apply(size-geq,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size1;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(nand[and[not[size1],yellow],and[blue,size1]],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:not[%s];4:size1;4:yellow;4:and[%s,%s];4:blue;4:size1;1:iota(%s);3:%s.s;2:x
'λx.forall(and[or[not[iff[green,size1]],and[and[circle,blue],yellow]],circle],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:or[%s,%s];4:not[%s];4:iff[%s,%s];4:green;4:size1;4:and[%s,%s];4:and[%s,%s];4:circle;4:blue;4:yellow;4:circle;3:%s.s;2:x
'λx.apply(and[green,and[apply(same_color,x.o),yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(filter(filter(x.s, apply(same_color,x.o)), apply(size-geq,iota(x.s))), or[size2,rectangle]), yellow)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:rectangle;4:yellow
'λx.apply(circle,iota(filter(x.s, and[circle,triangle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:triangle
'λx.apply(size2,iota(filter(x.s, nor[blue,not[or[apply(same_shape,iota(x.s)),and[rectangle,yellow]]]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:blue;4:not[%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:yellow
'λx.exists(or[size3,circle], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:size3;4:circle;3:%s.s;2:x
'λx.apply(size1,iota(filter(x.s, size3)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(implies[circle,blue],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:circle;4:blue;1:%s.o;2:x
'λx.apply(and[rectangle,and[and[circle,implies[and[or[apply(same_color,iota(x.s)),and[green,triangle]],or[blue,triangle]],circle]],not[rectangle]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:circle;4:implies[%s,%s];4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:green;4:triangle;4:or[%s,%s];4:blue;4:triangle;4:circle;4:not[%s];4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, and[and[apply(same_shape,x.o),circle],not[and[green,rectangle]]]), and[size2,size3])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;4:not[%s];4:and[%s,%s];4:green;4:rectangle;4:and[%s,%s];4:size2;4:size3
'λx.empty(filter(x.s, apply(same_shape,iota(filter(x.s, and[size1,rectangle])))))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:rectangle
'λx.apply(or[blue,blue],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(filter(x.s, or[circle,nand[size1,rectangle]]), triangle), size1)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:nand[%s,%s];4:size1;4:rectangle;4:triangle;4:size1
'λx.apply(not[or[apply(same_color,iota(filter(x.s, yellow))),not[size2]]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:size2;1:%s.o;2:x
'λx.apply(and[implies[size3,or[or[not[apply(size-gt,iota(filter(x.s, circle)))],yellow],yellow]],and[not[rectangle],rectangle]],iota(filter(filter(x.s, blue), not[or[not[and[size2,iff[size2,apply(size-geq,x.o)]]],size3]])))'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:size3;4:or[%s,%s];4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow;4:yellow;4:and[%s,%s];4:not[%s];4:rectangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:or[%s,%s];4:not[%s];4:and[%s,%s];4:size2;4:iff[%s,%s];4:size2;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:size3
'λx.apply(and[triangle,apply(same_color,iota(x.s))],iota(filter(x.s, apply(same_shape,x.o))))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(x.s, size2), rectangle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle
'λx.apply(nand[green,blue],iota(filter(filter(filter(filter(filter(x.s, rectangle), yellow), size1), rectangle), and[circle,or[blue,and[triangle,size2]]])))'	0:apply(%s,%s);4:nand[%s,%s];4:green;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:yellow;4:size1;4:rectangle;4:and[%s,%s];4:circle;4:or[%s,%s];4:blue;4:and[%s,%s];4:triangle;4:size2
'λx.apply(and[circle,and[rectangle,yellow]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:and[%s,%s];4:rectangle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(filter(filter(x.s, or[blue,size3]), not[size3]), size3), rectangle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:size3;4:not[%s];4:size3;4:size3;4:rectangle
'λx.apply(iff[triangle,circle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:triangle;4:circle;1:%s.o;2:x
'λx.apply(nor[rectangle,blue],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:rectangle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(or[not[size1],green],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:size1;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[yellow,and[rectangle,apply(same_color,iota(filter(filter(filter(filter(filter(x.s, blue), and[circle,triangle]), size3), or[and[rectangle,circle],triangle]), and[yellow,or[or[yellow,triangle],not[size2]]])))]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:circle;4:triangle;4:size3;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:circle;4:triangle;4:and[%s,%s];4:yellow;4:or[%s,%s];4:or[%s,%s];4:yellow;4:triangle;4:not[%s];4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[not[size2],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size2;4:size2;1:%s.o;2:x
'λx.apply(or[yellow,and[rectangle,and[implies[triangle,size2],nor[and[iff[green,size2],size1],blue]]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:implies[%s,%s];4:triangle;4:size2;4:nor[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:green;4:size2;4:size1;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[and[and[circle,circle],yellow],size3],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:circle;4:yellow;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(filter(filter(filter(x.s, and[or[green,green],size2]), size2), or[size1,yellow]), size2), yellow)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:green;4:green;4:size2;4:size2;4:or[%s,%s];4:size1;4:yellow;4:size2;4:yellow
'λx.apply(green,iota(filter(filter(filter(filter(x.s, size2), yellow), not[triangle]), circle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:yellow;4:not[%s];4:triangle;4:circle
'λx.forall(or[green,or[and[not[yellow],circle],and[rectangle,yellow]]],filter(filter(x.s, iff[blue,not[and[triangle,triangle]]]), circle))'	0:forall(%s,%s);4:or[%s,%s];4:green;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:yellow;4:circle;4:and[%s,%s];4:rectangle;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:blue;4:not[%s];4:and[%s,%s];4:triangle;4:triangle;4:circle
'λx.forall(nand[size1,apply(size-leq,iota(filter(filter(filter(filter(x.s, iff[size1,size3]), green), and[blue,size3]), apply(same_color,x.o))))],x.s)'	0:forall(%s,%s);4:nand[%s,%s];4:size1;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size1;4:size3;4:green;4:and[%s,%s];4:blue;4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:%s.s;2:x
'λx.forall(nor[or[apply(same_color,x.o),size3],and[blue,rectangle]],x.s)'	0:forall(%s,%s);4:nor[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3;4:and[%s,%s];4:blue;4:rectangle;3:%s.s;2:x
'λx.apply(and[apply(same_size,iota(x.s)),and[and[blue,circle],iff[and[not[apply(same_color,x.o)],size3],and[green,green]]]],iota(filter(filter(x.s, green), and[nand[nor[iff[rectangle,rectangle],size3],yellow],size2])))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:blue;4:circle;4:iff[%s,%s];4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3;4:and[%s,%s];4:green;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:nand[%s,%s];4:nor[%s,%s];4:iff[%s,%s];4:rectangle;4:rectangle;4:size3;4:yellow;4:size2
'λx.exists(apply(same_shape,x.o), filter(filter(x.s, and[blue,apply(same_shape,x.o)]), green))'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green
'λx.apply(triangle,iota(filter(filter(x.s, nor[and[blue,size1],blue]), size2)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:and[%s,%s];4:blue;4:size1;4:blue;4:size2
'λx.apply(not[not[not[not[nand[nor[apply(same_size,x.o),green],triangle]]]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:not[%s];4:not[%s];4:nand[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[yellow,and[size1,and[green,size2]]],iota(filter(x.s, apply(size-lt,iota(x.s)))))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:and[%s,%s];4:size1;4:and[%s,%s];4:green;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x
'λx.exists(size2, filter(filter(x.s, not[and[and[size1,or[and[not[and[apply(size-leq,iota(filter(filter(x.s, apply(same_size,x.o)), size3))),and[size2,blue]]],size2],apply(same_shape,iota(filter(x.s, size3)))]],size1]]), triangle))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;4:and[%s,%s];4:size2;4:blue;4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size1;4:triangle
'λx.exists(iff[and[size3,size2],size3], x.s)'	0:exists(%s, %s);4:iff[%s,%s];4:and[%s,%s];4:size3;4:size2;4:size3;3:%s.s;2:x
'λx.forall(yellow,filter(filter(filter(x.s, size3), implies[size3,apply(same_color,iota(filter(x.s, triangle)))]), not[triangle]))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:implies[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:not[%s];4:triangle
'λx.contains(iota(filter(x.s, rectangle)), filter(filter(filter(x.s, apply(same_size,iota(x.s))), yellow), blue))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:yellow;4:blue
'λx.apply(circle,iota(filter(filter(x.s, size2), size2)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2
'λx.apply(size1,iota(filter(x.s, apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(and[triangle,triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size2,and[blue,size3]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:blue;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(filter(filter(filter(filter(filter(x.s, blue), and[apply(same_size,x.o),triangle]), and[not[nor[blue,not[and[size2,size3]]]],and[and[yellow,rectangle],not[circle]]]), green), and[green,not[triangle]]), nor[size3,green]), iff[circle,size1])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle;4:and[%s,%s];4:not[%s];4:nor[%s,%s];4:blue;4:not[%s];4:and[%s,%s];4:size2;4:size3;4:and[%s,%s];4:and[%s,%s];4:yellow;4:rectangle;4:not[%s];4:circle;4:green;4:and[%s,%s];4:green;4:not[%s];4:triangle;4:nor[%s,%s];4:size3;4:green;4:iff[%s,%s];4:circle;4:size1
'λx.apply(or[circle,implies[size1,size3]],iota(filter(x.s, apply(size-lt,x.o))))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:implies[%s,%s];4:size1;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, circle), circle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:circle;3:%s.s;2:x
'λx.apply(not[or[size1,rectangle]],iota(filter(filter(x.s, size2), or[triangle,size2])))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:size1;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:triangle;4:size2
'λx.apply(and[rectangle,yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:yellow;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, yellow), not[rectangle])), filter(x.s, implies[or[and[yellow,size2],yellow],or[rectangle,rectangle]]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:or[%s,%s];4:and[%s,%s];4:yellow;4:size2;4:yellow;4:or[%s,%s];4:rectangle;4:rectangle
'λx.exists(size2, filter(filter(x.s, nand[apply(same_shape,x.o),size3]), not[triangle]))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3;4:not[%s];4:triangle
'λx.exists(nor[blue,and[green,blue]], x.s)'	0:exists(%s, %s);4:nor[%s,%s];4:blue;4:and[%s,%s];4:green;4:blue;3:%s.s;2:x
'λx.apply(not[yellow],x.o)'	0:apply(%s,%s);4:not[%s];4:yellow;1:%s.o;2:x
'λx.apply(or[blue,size3],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.forall(or[circle,nor[apply(same_size,x.o),circle]],filter(filter(filter(filter(filter(x.s, nand[not[circle],blue]), and[circle,circle]), rectangle), and[size3,apply(same_shape,x.o)]), size3))'	0:forall(%s,%s);4:or[%s,%s];4:circle;4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:not[%s];4:circle;4:blue;4:and[%s,%s];4:circle;4:circle;4:rectangle;4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3
'λx.apply(and[green,or[and[apply(size-leq,iota(x.s)),yellow],or[green,yellow]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:green;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.exists(implies[size1,size3], x.s)'	0:exists(%s, %s);4:implies[%s,%s];4:size1;4:size3;3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(filter(filter(x.s, nand[apply(same_shape,iota(filter(x.s, circle))),rectangle]), triangle), circle), size3)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle;4:triangle;4:circle;4:size3
'λx.apply(not[and[and[blue,rectangle],and[or[not[rectangle],green],apply(same_shape,x.o)]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:rectangle;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:rectangle;4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(size3,iota(filter(x.s, and[size3,not[size2]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:not[%s];4:size2
'λx.apply(green,iota(filter(filter(x.s, not[not[size1]]), not[or[nor[circle,and[yellow,size1]],triangle]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:size1;4:not[%s];4:or[%s,%s];4:nor[%s,%s];4:circle;4:and[%s,%s];4:yellow;4:size1;4:triangle
'λx.apply(or[size1,not[rectangle]],iota(filter(x.s, and[yellow,size1])))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size1
'λx.apply(apply(same_size,x.o),iota(filter(filter(x.s, iff[green,size1]), size1)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:green;4:size1;4:size1
'λx.apply(triangle,iota(filter(filter(filter(filter(x.s, circle), apply(same_size,iota(filter(x.s, rectangle)))), green), not[yellow])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green;4:not[%s];4:yellow
'λx.empty(filter(filter(x.s, circle), not[and[nand[apply(size-gt,iota(filter(filter(filter(x.s, size1), or[rectangle,apply(same_size,iota(x.s))]), size1))),yellow],green]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:and[%s,%s];4:nand[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size1;4:yellow;4:green
'λx.apply(nand[size3,iff[size2,blue]],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:size3;4:iff[%s,%s];4:size2;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[blue,nor[size2,yellow]],iota(filter(x.s, and[rectangle,size1])))'	0:apply(%s,%s);4:iff[%s,%s];4:blue;4:nor[%s,%s];4:size2;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:size1
'λx.empty(filter(x.s, implies[size2,and[iff[and[implies[rectangle,size1],green],yellow],not[implies[and[iff[not[size3],size1],rectangle],and[implies[rectangle,green],size1]]]]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size2;4:and[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:rectangle;4:size1;4:green;4:yellow;4:not[%s];4:implies[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:not[%s];4:size3;4:size1;4:rectangle;4:and[%s,%s];4:implies[%s,%s];4:rectangle;4:green;4:size1
'λx.apply(implies[size1,blue],iota(filter(filter(filter(x.s, and[and[circle,and[green,size1]],blue]), blue), and[green,apply(same_color,iota(filter(x.s, green)))])))'	0:apply(%s,%s);4:implies[%s,%s];4:size1;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:green;4:size1;4:blue;4:blue;4:and[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(size3,iota(filter(filter(filter(x.s, and[nand[size2,green],triangle]), size2), and[and[and[rectangle,or[and[green,rectangle],and[circle,triangle]]],size3],apply(same_size,iota(x.s))])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nand[%s,%s];4:size2;4:green;4:triangle;4:size2;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:green;4:rectangle;4:and[%s,%s];4:circle;4:triangle;4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(x.s, green)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[circle,size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:size2;1:%s.o;2:x
'λx.exists(and[apply(size-gt,iota(filter(filter(filter(x.s, circle), apply(same_color,iota(x.s))), size1))),and[size1,circle]], filter(x.s, size1))'	0:exists(%s, %s);4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:size1;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(size3,iota(filter(x.s, nand[size3,size1])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size3;4:size1
'λx.apply(and[size3,and[and[size3,green],size3]],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:size3;4:green;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.empty(filter(filter(x.s, size3), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green
'λx.apply(or[and[triangle,green],size1],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:triangle;4:green;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(x.s, nand[nand[blue,size2],yellow])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:nand[%s,%s];4:blue;4:size2;4:yellow
'λx.apply(apply(same_size,iota(x.s)),iota(filter(filter(x.s, triangle), and[rectangle,rectangle])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:rectangle;4:rectangle
'λx.contains(x.o, filter(filter(x.s, size3), size2))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2
'λx.apply(apply(same_color,iota(x.s)),iota(filter(x.s, implies[size3,size3])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size3;4:size3
'λx.contains(iota(filter(filter(x.s, triangle), and[not[and[triangle,and[yellow,green]]],size2])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:yellow;4:green;4:size2;3:%s.s;2:x
'λx.forall(and[apply(same_color,iota(filter(filter(filter(x.s, rectangle), size2), not[yellow]))),yellow],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2;4:not[%s];4:yellow;4:yellow;3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(x.s, size3), triangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle
'λx.forall(triangle,filter(filter(x.s, apply(same_shape,iota(x.s))), and[size1,size2]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size2
'λx.apply(iff[rectangle,not[size1]],iota(filter(x.s, or[blue,iff[triangle,not[apply(size-leq,iota(x.s))]]])))'	0:apply(%s,%s);4:iff[%s,%s];4:rectangle;4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:iff[%s,%s];4:triangle;4:not[%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x
'λx.apply(and[green,and[size2,rectangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:size2;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(filter(x.s, and[triangle,size2]), and[or[size1,not[triangle]],size2]), triangle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:size2;4:and[%s,%s];4:or[%s,%s];4:size1;4:not[%s];4:triangle;4:size2;4:triangle;3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(filter(x.s, or[blue,size3]), green), size1)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:size3;4:green;4:size1
'λx.apply(size3,iota(filter(filter(x.s, not[size3]), circle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;4:circle
'λx.contains(iota(filter(filter(x.s, blue), yellow)), filter(filter(filter(x.s, yellow), size3), green))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size3;4:green
'λx.apply(circle,iota(filter(x.s, and[rectangle,size2])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:size2
'λx.contains(iota(x.s), filter(filter(x.s, yellow), rectangle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle
'λx.apply(size3,iota(filter(filter(filter(x.s, size2), rectangle), rectangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle;4:rectangle
'λx.forall(size2,x.s)'	0:forall(%s,%s);4:size2;3:%s.s;2:x
'λx.apply(nand[yellow,size3],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:yellow;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[blue,not[circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:not[%s];4:circle;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, and[rectangle,or[apply(same_color,iota(filter(x.s, and[nor[rectangle,green],not[rectangle]]))),or[iff[rectangle,size3],and[and[circle,apply(size-leq,x.o)],size2]]]]), rectangle), and[green,and[triangle,and[size3,nand[blue,size2]]]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:rectangle;4:green;4:not[%s];4:rectangle;4:or[%s,%s];4:iff[%s,%s];4:rectangle;4:size3;4:and[%s,%s];4:and[%s,%s];4:circle;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size2;4:rectangle;4:and[%s,%s];4:green;4:and[%s,%s];4:triangle;4:and[%s,%s];4:size3;4:nand[%s,%s];4:blue;4:size2
'λx.apply(rectangle,iota(x.s))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(filter(x.s, nand[size3,yellow]), yellow), size2), size1))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size3;4:yellow;4:yellow;4:size2;4:size1
'λx.apply(size3,iota(filter(filter(filter(filter(x.s, nor[and[size2,circle],green]), yellow), triangle), not[triangle])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:and[%s,%s];4:size2;4:circle;4:green;4:yellow;4:triangle;4:not[%s];4:triangle
'λx.apply(apply(same_shape,x.o),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(filter(x.s, rectangle), circle), size2), implies[size3,or[not[and[not[and[circle,nor[not[apply(size-geq,iota(filter(filter(filter(filter(filter(filter(filter(x.s, blue), triangle), triangle), size3), not[or[yellow,or[blue,circle]]]), and[circle,not[apply(size-leq,iota(x.s))]]), yellow)))],size3]]],implies[size2,and[circle,yellow]]]],green]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle;4:size2;4:implies[%s,%s];4:size3;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:circle;4:nor[%s,%s];4:not[%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle;4:triangle;4:size3;4:not[%s];4:or[%s,%s];4:yellow;4:or[%s,%s];4:blue;4:circle;4:and[%s,%s];4:circle;4:not[%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:yellow;4:size3;4:implies[%s,%s];4:size2;4:and[%s,%s];4:circle;4:yellow;4:green
'λx.contains(x.o, filter(x.s, and[and[triangle,rectangle],size3]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:triangle;4:rectangle;4:size3
'λx.exists(not[green], x.s)'	0:exists(%s, %s);4:not[%s];4:green;3:%s.s;2:x
'λx.apply(or[or[triangle,size1],yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:triangle;4:size1;4:yellow;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(x.s, and[not[yellow],blue]), circle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:yellow;4:blue;4:circle
'λx.apply(apply(size-geq,iota(filter(x.s, and[size2,not[nor[and[apply(same_shape,iota(x.s)),rectangle],green]]]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:not[%s];4:nor[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:rectangle;4:green;1:%s.o;2:x
'λx.apply(implies[apply(same_shape,x.o),not[and[iff[rectangle,or[size3,size3]],apply(size-leq,x.o)]]],iota(filter(filter(x.s, and[triangle,not[size3]]), rectangle)))'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:iff[%s,%s];4:rectangle;4:or[%s,%s];4:size3;4:size3;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:not[%s];4:size3;4:rectangle
'λx.apply(and[iff[size3,yellow],green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:size3;4:yellow;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[green,apply(same_size,x.o)],iota(filter(filter(filter(filter(x.s, size3), or[size3,size2]), size1), and[size3,not[blue]])))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:size3;4:size2;4:size1;4:and[%s,%s];4:size3;4:not[%s];4:blue
'λx.apply(green,iota(filter(filter(filter(x.s, green), green), green)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:green;4:green
'λx.apply(iff[nand[size3,and[or[size2,size1],size3]],and[or[size1,circle],iff[rectangle,and[apply(same_color,iota(x.s)),yellow]]]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:nand[%s,%s];4:size3;4:and[%s,%s];4:or[%s,%s];4:size2;4:size1;4:size3;4:and[%s,%s];4:or[%s,%s];4:size1;4:circle;4:iff[%s,%s];4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:yellow;1:%s.o;2:x
'λx.apply(or[not[size2],size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:size2;4:size2;1:%s.o;2:x
'λx.apply(or[apply(same_size,iota(x.s)),size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size1;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(x.s, apply(size-lt,iota(filter(filter(filter(x.s, blue), and[or[implies[and[green,and[apply(same_shape,x.o),green]],size1],yellow],apply(same_color,iota(filter(x.s, yellow)))]), apply(same_size,iota(filter(filter(x.s, not[blue]), circle))))))), triangle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green;4:size1;4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:circle;4:triangle
'λx.apply(apply(same_size,x.o),iota(filter(filter(filter(x.s, apply(same_shape,x.o)), circle), yellow)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;4:yellow
'λx.exists(iff[size2,apply(same_color,iota(filter(x.s, or[apply(same_shape,iota(x.s)),blue])))], x.s)'	0:exists(%s, %s);4:iff[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:blue;3:%s.s;2:x
'λx.exists(and[size3,green], filter(filter(x.s, size3), and[apply(same_size,iota(filter(x.s, and[green,not[apply(same_size,x.o)]]))),circle]))'	0:exists(%s, %s);4:and[%s,%s];4:size3;4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle
'λx.apply(rectangle,iota(filter(x.s, and[not[blue],green])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:blue;4:green
'λx.exists(yellow, filter(x.s, size3))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.forall(blue,filter(x.s, not[circle]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.apply(or[blue,triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:triangle;1:%s.o;2:x
'λx.empty(filter(x.s, not[apply(same_shape,iota(filter(x.s, and[rectangle,nand[triangle,triangle]])))]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:nand[%s,%s];4:triangle;4:triangle
'λx.apply(triangle,iota(filter(filter(x.s, blue), yellow)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow
'λx.apply(and[yellow,or[blue,size2]],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:or[%s,%s];4:blue;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.empty(filter(filter(x.s, blue), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow
'λx.apply(triangle,iota(filter(filter(x.s, size3), apply(same_size,iota(x.s)))))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[size2,circle],green],iota(filter(x.s, nor[yellow,triangle])))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size2;4:circle;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:yellow;4:triangle
'λx.apply(not[and[rectangle,not[apply(same_shape,iota(x.s))]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:rectangle;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(triangle,iota(filter(x.s, apply(same_color,x.o))))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(or[circle,apply(same_shape,iota(filter(filter(x.s, or[size3,and[blue,size2]]), implies[rectangle,circle])))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:and[%s,%s];4:blue;4:size2;4:implies[%s,%s];4:rectangle;4:circle;1:%s.o;2:x
'λx.empty(filter(x.s, or[blue,green]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:green
'λx.apply(not[blue],iota(filter(filter(x.s, blue), yellow)))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow
'λx.empty(filter(filter(x.s, not[rectangle]), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;4:size2
'λx.apply(nor[and[size3,green],size3],iota(filter(filter(filter(x.s, and[size2,and[apply(same_shape,x.o),or[yellow,and[blue,not[apply(size-gt,iota(x.s))]]]]]), size3), yellow)))'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:size3;4:green;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:yellow;4:and[%s,%s];4:blue;4:not[%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:size3;4:yellow
'λx.apply(and[and[triangle,size1],and[or[blue,circle],triangle]],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:size1;4:and[%s,%s];4:or[%s,%s];4:blue;4:circle;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.forall(size1,filter(x.s, iff[green,and[not[apply(same_shape,iota(x.s))],apply(same_shape,x.o)]]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:green;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.exists(circle, filter(filter(filter(x.s, apply(same_size,iota(filter(x.s, apply(same_color,x.o))))), nor[size1,apply(same_shape,iota(x.s))]), iff[blue,size2]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:nor[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:iff[%s,%s];4:blue;4:size2
'λx.exists(triangle, filter(x.s, size2))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(or[yellow,not[size2]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:not[%s];4:size2;1:%s.o;2:x
'λx.apply(and[not[rectangle],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:rectangle;4:rectangle;1:%s.o;2:x
'λx.forall(size1,filter(x.s, size3))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(yellow,iota(filter(x.s, and[and[apply(same_size,iota(x.s)),and[and[blue,size3],or[not[circle],circle]]],and[rectangle,triangle]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:blue;4:size3;4:or[%s,%s];4:not[%s];4:circle;4:circle;4:and[%s,%s];4:rectangle;4:triangle
'λx.contains(iota(x.s), filter(filter(filter(filter(x.s, rectangle), yellow), size3), size1))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:yellow;4:size3;4:size1
'λx.apply(nand[and[and[not[rectangle],size2],implies[yellow,triangle]],rectangle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:rectangle;4:size2;4:implies[%s,%s];4:yellow;4:triangle;4:rectangle;1:%s.o;2:x
'λx.apply(and[circle,yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:yellow;1:%s.o;2:x
'λx.apply(apply(size-geq,iota(x.s)),iota(filter(filter(x.s, size3), size1)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size1
'λx.contains(x.o, filter(filter(x.s, size2), and[and[and[size1,not[size3]],triangle],and[yellow,triangle]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:not[%s];4:size3;4:triangle;4:and[%s,%s];4:yellow;4:triangle
'λx.apply(or[and[green,triangle],rectangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:green;4:triangle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.exists(and[yellow,blue], filter(filter(filter(filter(filter(filter(filter(x.s, blue), apply(same_shape,x.o)), apply(size-geq,iota(x.s))), not[or[and[or[not[rectangle],triangle],size1],and[and[green,or[blue,and[not[nand[rectangle,rectangle]],apply(same_shape,x.o)]]],rectangle]]]), circle), iff[apply(same_color,x.o),not[blue]]), rectangle))'	0:exists(%s, %s);4:and[%s,%s];4:yellow;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:not[%s];4:rectangle;4:triangle;4:size1;4:and[%s,%s];4:and[%s,%s];4:green;4:or[%s,%s];4:blue;4:and[%s,%s];4:not[%s];4:nand[%s,%s];4:rectangle;4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle;4:circle;4:iff[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:blue;4:rectangle
'λx.apply(and[size2,green],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(not[not[size2]],iota(filter(x.s, and[implies[rectangle,and[apply(same_shape,iota(x.s)),or[size2,size3]]],triangle])))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:implies[%s,%s];4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:size3;4:triangle
'λx.empty(filter(filter(filter(filter(filter(x.s, blue), or[blue,blue]), nor[size3,size2]), yellow), or[apply(same_shape,iota(x.s)),and[and[green,size2],yellow]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:blue;4:blue;4:nor[%s,%s];4:size3;4:size2;4:yellow;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:green;4:size2;4:yellow
'λx.apply(and[circle,implies[triangle,apply(same_size,iota(x.s))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:implies[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(or[size2,and[nor[and[green,green],size3],rectangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:and[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:green;4:green;4:size3;4:rectangle;1:%s.o;2:x
'λx.empty(filter(x.s, and[and[triangle,and[yellow,and[size1,and[blue,blue]]]],size3]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:yellow;4:and[%s,%s];4:size1;4:and[%s,%s];4:blue;4:blue;4:size3
'λx.apply(not[nor[size1,blue]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:nor[%s,%s];4:size1;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(and[not[circle],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:circle;4:circle;1:%s.o;2:x
'λx.forall(not[rectangle],filter(filter(filter(filter(filter(filter(x.s, circle), or[triangle,yellow]), apply(size-leq,iota(x.s))), or[not[triangle],circle]), size3), or[not[nand[blue,size1]],not[not[size3]]]))'	0:forall(%s,%s);4:not[%s];4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:triangle;4:yellow;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:triangle;4:circle;4:size3;4:or[%s,%s];4:not[%s];4:nand[%s,%s];4:blue;4:size1;4:not[%s];4:not[%s];4:size3
'λx.apply(and[apply(same_size,iota(x.s)),not[or[size3,size3]]],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:size3;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(not[or[size1,and[not[apply(size-geq,x.o)],and[implies[not[apply(same_shape,iota(x.s))],size2],and[and[not[size1],size2],yellow]]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:size1;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:and[%s,%s];4:implies[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size1;4:size2;4:yellow;1:%s.o;2:x
'λx.apply(and[and[rectangle,and[and[or[green,apply(size-lt,x.o)],blue],circle]],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:green;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:blue;4:circle;4:rectangle;1:%s.o;2:x
'λx.apply(implies[and[not[size1],circle],green],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:not[%s];4:size1;4:circle;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(circle,iota(filter(x.s, not[and[green,iff[not[yellow],triangle]]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:green;4:iff[%s,%s];4:not[%s];4:yellow;4:triangle
'λx.apply(blue,iota(filter(x.s, apply(same_color,iota(filter(x.s, yellow))))))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.empty(filter(filter(x.s, rectangle), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:yellow
'λx.apply(nor[size2,green],iota(filter(x.s, or[size1,and[size1,not[not[yellow]]]])))'	0:apply(%s,%s);4:nor[%s,%s];4:size2;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:and[%s,%s];4:size1;4:not[%s];4:not[%s];4:yellow
'λx.contains(iota(filter(filter(x.s, rectangle), circle)), filter(x.s, size3))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(not[blue],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(yellow,iota(filter(filter(filter(filter(x.s, triangle), size2), apply(size-gt,x.o)), yellow)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:yellow
'λx.forall(yellow,filter(filter(filter(x.s, size3), and[green,size1]), not[size1]))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:green;4:size1;4:not[%s];4:size1
'λx.forall(green,filter(filter(filter(x.s, blue), size1), and[green,not[green]]))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1;4:and[%s,%s];4:green;4:not[%s];4:green
'λx.apply(yellow,iota(filter(filter(x.s, circle), green)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green
'λx.apply(size2,iota(filter(x.s, and[iff[size3,yellow],not[size3]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:iff[%s,%s];4:size3;4:yellow;4:not[%s];4:size3
'λx.apply(green,iota(filter(x.s, not[size2])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2
'λx.apply(or[size3,not[nor[yellow,circle]]],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:not[%s];4:nor[%s,%s];4:yellow;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.empty(filter(filter(x.s, not[not[or[yellow,iff[size3,green]]]]), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:or[%s,%s];4:yellow;4:iff[%s,%s];4:size3;4:green;4:yellow
'λx.apply(not[or[rectangle,size1]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:rectangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[size3,triangle],or[or[and[nor[size2,triangle],circle],size1],circle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size3;4:triangle;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:size2;4:triangle;4:circle;4:size1;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[blue,implies[apply(same_color,iota(x.s)),yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:yellow;1:%s.o;2:x
'λx.apply(size3,iota(filter(x.s, and[green,blue])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:blue
'λx.forall(iff[not[size1],blue],filter(x.s, and[yellow,nor[size3,rectangle]]))'	0:forall(%s,%s);4:iff[%s,%s];4:not[%s];4:size1;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:nor[%s,%s];4:size3;4:rectangle
'λx.apply(and[blue,size3],iota(filter(x.s, or[and[size3,circle],or[apply(same_color,x.o),apply(same_size,iota(x.s))]])))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size3;4:circle;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[rectangle,blue],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:rectangle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.exists(triangle, filter(filter(x.s, triangle), rectangle))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle
'λx.forall(iff[blue,green],filter(x.s, size2))'	0:forall(%s,%s);4:iff[%s,%s];4:blue;4:green;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(iff[circle,circle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:circle;4:circle;1:%s.o;2:x
'λx.apply(and[and[blue,iff[apply(same_color,iota(x.s)),blue]],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:iff[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:blue;4:size3;1:%s.o;2:x
'λx.apply(and[size1,circle],iota(filter(filter(x.s, and[nand[and[blue,green],rectangle],yellow]), yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:blue;4:green;4:rectangle;4:yellow;4:yellow
'λx.apply(and[or[size1,green],or[iff[circle,size3],and[and[not[circle],rectangle],apply(same_size,x.o)]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size1;4:green;4:or[%s,%s];4:iff[%s,%s];4:circle;4:size3;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:circle;4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.exists(not[size1], filter(filter(filter(x.s, green), nand[circle,size2]), and[circle,size2]))'	0:exists(%s, %s);4:not[%s];4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:nand[%s,%s];4:circle;4:size2;4:and[%s,%s];4:circle;4:size2
'λx.apply(blue,iota(filter(x.s, iff[green,nor[yellow,and[or[not[circle],size1],not[not[yellow]]]]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:green;4:nor[%s,%s];4:yellow;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:circle;4:size1;4:not[%s];4:not[%s];4:yellow
'λx.apply(or[circle,blue],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.forall(and[not[apply(size-leq,iota(x.s))],not[yellow]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:not[%s];4:yellow;3:%s.s;2:x
'λx.forall(and[green,yellow],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:green;4:yellow;3:%s.s;2:x
'λx.contains(iota(filter(x.s, apply(same_size,x.o))), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(and[not[size1],implies[blue,rectangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size1;4:implies[%s,%s];4:blue;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[blue],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[and[triangle,and[size2,triangle]],blue],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:size2;4:triangle;4:blue;1:%s.o;2:x
'λx.apply(not[apply(same_size,x.o)],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(filter(filter(filter(filter(filter(x.s, apply(same_size,iota(filter(x.s, blue)))), triangle), apply(size-lt,x.o)), iff[rectangle,size3]), and[green,blue]), or[size3,circle]), blue)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:iff[%s,%s];4:rectangle;4:size3;4:and[%s,%s];4:green;4:blue;4:or[%s,%s];4:size3;4:circle;4:blue
'λx.forall(green,filter(filter(filter(filter(x.s, not[yellow]), blue), blue), size3))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:blue;4:blue;4:size3
'λx.exists(yellow, x.s)'	0:exists(%s, %s);4:yellow;3:%s.s;2:x
'λx.empty(filter(x.s, apply(same_shape,iota(x.s))))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[and[triangle,size3],not[apply(size-leq,iota(filter(filter(filter(x.s, circle), circle), size1)))]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:triangle;4:size3;4:not[%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:circle;4:size1;1:%s.o;2:x
'λx.apply(triangle,iota(filter(x.s, not[and[size1,green]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:size1;4:green
'λx.apply(and[and[triangle,or[blue,triangle]],not[circle]],iota(filter(x.s, or[rectangle,and[size1,size3]])))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:or[%s,%s];4:blue;4:triangle;4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:and[%s,%s];4:size1;4:size3
'λx.exists(green, filter(x.s, implies[and[apply(size-geq,iota(filter(filter(x.s, size2), size1))),yellow],green]))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1;4:yellow;4:green
'λx.empty(filter(filter(x.s, apply(same_color,iota(x.s))), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:green
'λx.apply(iff[apply(same_size,x.o),not[and[not[circle],and[green,green]]]],iota(filter(x.s, not[apply(same_shape,iota(filter(x.s, blue)))])))'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:not[%s];4:circle;4:and[%s,%s];4:green;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(not[rectangle],iota(filter(filter(x.s, circle), yellow)))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow
'λx.apply(iff[apply(same_shape,iota(x.s)),blue],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(x.s, implies[and[not[and[not[circle],circle]],triangle],and[size3,triangle]]), triangle), size2), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:not[%s];4:circle;4:circle;4:triangle;4:and[%s,%s];4:size3;4:triangle;4:triangle;4:size2;4:green
'λx.apply(yellow,iota(filter(filter(filter(filter(x.s, rectangle), size2), and[circle,yellow]), rectangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2;4:and[%s,%s];4:circle;4:yellow;4:rectangle
'λx.empty(filter(filter(filter(filter(x.s, blue), circle), triangle), nor[size3,nand[not[yellow],yellow]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle;4:triangle;4:nor[%s,%s];4:size3;4:nand[%s,%s];4:not[%s];4:yellow;4:yellow
'λx.contains(iota(filter(filter(filter(x.s, apply(same_size,x.o)), implies[yellow,not[size1]]), size2)), filter(x.s, and[triangle,size2]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:implies[%s,%s];4:yellow;4:not[%s];4:size1;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:size2
'λx.apply(size2,iota(filter(x.s, and[rectangle,and[rectangle,or[size1,triangle]]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:size1;4:triangle
'λx.forall(triangle,filter(x.s, and[or[green,implies[blue,not[and[apply(size-lt,x.o),yellow]]]],and[blue,not[nor[and[apply(same_color,iota(filter(filter(filter(x.s, rectangle), green), circle))),size2],circle]]]]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:green;4:implies[%s,%s];4:blue;4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:yellow;4:and[%s,%s];4:blue;4:not[%s];4:nor[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green;4:circle;4:size2;4:circle
'λx.apply(rectangle,iota(filter(filter(filter(filter(x.s, circle), not[size1]), apply(size-lt,x.o)), and[blue,nor[apply(size-gt,iota(x.s)),yellow]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:size1;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:and[%s,%s];4:blue;4:nor[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:yellow
'λx.apply(or[and[rectangle,green],rectangle],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:rectangle;4:green;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.contains(x.o, filter(filter(filter(filter(x.s, and[circle,green]), blue), implies[size3,triangle]), not[circle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:green;4:blue;4:implies[%s,%s];4:size3;4:triangle;4:not[%s];4:circle
'λx.apply(not[rectangle],iota(filter(x.s, apply(same_size,iota(x.s)))))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(x.s, and[size3,size1])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:size1
'λx.apply(nor[or[size2,size2],and[blue,size3]],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:or[%s,%s];4:size2;4:size2;4:and[%s,%s];4:blue;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size2,apply(same_size,iota(x.s))],iota(filter(x.s, apply(same_size,x.o))))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(apply(same_color,iota(filter(x.s, and[size1,blue]))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[or[rectangle,rectangle],rectangle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:or[%s,%s];4:rectangle;4:rectangle;4:rectangle;1:%s.o;2:x
'λx.apply(or[circle,iff[yellow,size1]],iota(filter(filter(filter(filter(x.s, blue), yellow), apply(same_size,iota(x.s))), rectangle)))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:iff[%s,%s];4:yellow;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:rectangle
'λx.apply(nor[and[and[triangle,and[nand[blue,apply(same_shape,iota(filter(x.s, not[blue])))],and[rectangle,and[green,blue]]]],size3],size3],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:nand[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:green;4:blue;4:size3;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(filter(x.s, not[rectangle]), green), circle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;4:green;4:circle
'λx.apply(circle,iota(x.s))'	0:apply(%s,%s);4:circle;1:iota(%s);3:%s.s;2:x
'λx.exists(apply(same_size,x.o), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(x.s, implies[rectangle,blue]), apply(size-leq,iota(x.s)))))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:rectangle;4:blue;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x
'λx.forall(iff[not[nor[implies[green,triangle],yellow]],triangle],x.s)'	0:forall(%s,%s);4:iff[%s,%s];4:not[%s];4:nor[%s,%s];4:implies[%s,%s];4:green;4:triangle;4:yellow;4:triangle;3:%s.s;2:x
'λx.apply(or[green,yellow],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(and[rectangle,nand[rectangle,size2]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:nand[%s,%s];4:rectangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(x.s, not[iff[and[size3,and[or[and[and[nor[apply(same_shape,x.o),rectangle],apply(same_shape,iota(x.s))],or[blue,green]],iff[size2,and[or[and[not[not[and[size3,and[rectangle,not[and[triangle,green]]]]]],and[and[green,green],green]],and[rectangle,size1]],and[circle,yellow]]]],circle]],yellow]]), and[rectangle,apply(size-gt,iota(x.s))])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:iff[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:green;4:iff[%s,%s];4:size2;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:not[%s];4:not[%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:rectangle;4:not[%s];4:and[%s,%s];4:triangle;4:green;4:and[%s,%s];4:and[%s,%s];4:green;4:green;4:green;4:and[%s,%s];4:rectangle;4:size1;4:and[%s,%s];4:circle;4:yellow;4:circle;4:yellow;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[yellow,apply(same_color,iota(filter(filter(x.s, or[not[size2],rectangle]), apply(size-lt,x.o))))],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:size2;4:rectangle;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.forall(circle,filter(x.s, triangle))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.empty(filter(filter(filter(x.s, rectangle), and[apply(same_size,x.o),yellow]), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow;4:rectangle
'λx.exists(and[circle,size2], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:circle;4:size2;3:%s.s;2:x
'λx.apply(and[apply(same_color,x.o),and[rectangle,triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:rectangle;4:triangle;1:%s.o;2:x
'λx.apply(and[apply(size-gt,iota(x.s)),and[blue,or[blue,blue]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:or[%s,%s];4:blue;4:blue;1:%s.o;2:x
'λx.empty(filter(x.s, and[size3,and[yellow,circle]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:and[%s,%s];4:yellow;4:circle
'λx.apply(or[size1,size3],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,x.o)'	0:apply(%s,%s);4:circle;1:%s.o;2:x
'λx.apply(or[apply(same_size,x.o),apply(size-geq,x.o)],iota(filter(x.s, green)))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(or[rectangle,and[or[or[size2,size1],blue],size1]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:size2;4:size1;4:blue;4:size1;1:%s.o;2:x
'λx.apply(and[size2,and[and[and[rectangle,blue],blue],and[rectangle,green]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:blue;4:blue;4:and[%s,%s];4:rectangle;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(filter(x.s, triangle), blue), circle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue;4:circle
'λx.apply(yellow,iota(filter(filter(x.s, and[apply(same_size,iota(filter(filter(x.s, size2), green))),size3]), apply(same_color,iota(filter(filter(x.s, yellow), and[size2,or[size2,green]]))))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green;4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:size2;4:or[%s,%s];4:size2;4:green
'λx.contains(iota(x.s), filter(filter(x.s, green), not[circle]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:circle
'λx.apply(and[triangle,apply(same_shape,iota(filter(x.s, or[rectangle,size3])))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:size3;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, apply(same_size,x.o))))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.forall(and[blue,or[not[size3],not[and[rectangle,circle]]]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:blue;4:or[%s,%s];4:not[%s];4:size3;4:not[%s];4:and[%s,%s];4:rectangle;4:circle;3:%s.s;2:x
'λx.apply(and[or[yellow,and[not[nand[yellow,and[triangle,or[not[and[and[not[blue],triangle],nand[rectangle,not[triangle]]]],and[and[and[and[nor[not[yellow],blue],triangle],not[apply(same_shape,iota(filter(x.s, green)))]],blue],size1]]]]],size1]],circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:yellow;4:and[%s,%s];4:not[%s];4:nand[%s,%s];4:yellow;4:and[%s,%s];4:triangle;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:blue;4:triangle;4:nand[%s,%s];4:rectangle;4:not[%s];4:triangle;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:not[%s];4:yellow;4:blue;4:triangle;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue;4:size1;4:size1;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[or[or[size2,nor[size3,size1]],circle],triangle],blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:size2;4:nor[%s,%s];4:size3;4:size1;4:circle;4:triangle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(and[yellow,circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[rectangle,yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:yellow;1:%s.o;2:x
'λx.apply(not[and[nor[size2,yellow],not[triangle]]],iota(filter(x.s, or[and[green,circle],green])))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:nor[%s,%s];4:size2;4:yellow;4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:green;4:circle;4:green
'λx.apply(circle,iota(filter(filter(x.s, size1), circle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle
'λx.forall(not[apply(same_color,iota(filter(filter(filter(filter(x.s, size1), not[or[circle,apply(same_color,x.o)]]), size1), triangle)))],x.s)'	0:forall(%s,%s);4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:not[%s];4:or[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1;4:triangle;3:%s.s;2:x
'λx.apply(and[implies[size3,size2],blue],iota(filter(filter(x.s, size3), yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:size3;4:size2;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow
'λx.apply(size2,iota(filter(filter(x.s, size1), apply(same_color,iota(filter(filter(x.s, blue), or[and[implies[nor[size2,size1],green],and[circle,size3]],green]))))))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:nor[%s,%s];4:size2;4:size1;4:green;4:and[%s,%s];4:circle;4:size3;4:green
'λx.forall(apply(same_color,x.o),filter(filter(filter(filter(filter(filter(x.s, and[yellow,blue]), triangle), blue), blue), size2), or[circle,nor[size1,apply(size-gt,iota(filter(filter(filter(x.s, apply(same_color,x.o)), and[or[rectangle,rectangle],circle]), and[yellow,and[apply(same_color,iota(x.s)),and[size2,and[or[size2,green],size3]]]])))]]))'	0:forall(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:blue;4:triangle;4:blue;4:blue;4:size2;4:or[%s,%s];4:circle;4:nor[%s,%s];4:size1;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:rectangle;4:circle;4:and[%s,%s];4:yellow;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:and[%s,%s];4:or[%s,%s];4:size2;4:green;4:size3
'λx.apply(or[and[blue,and[apply(size-lt,iota(x.s)),green]],blue],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:green;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(and[not[yellow],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:yellow;4:triangle;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, size3), size2), not[rectangle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2;4:not[%s];4:rectangle
'λx.apply(or[circle,iff[green,green]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:iff[%s,%s];4:green;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[circle,nand[implies[triangle,green],and[size1,blue]]],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:circle;4:nand[%s,%s];4:implies[%s,%s];4:triangle;4:green;4:and[%s,%s];4:size1;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(x.s, not[green])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green
'λx.exists(apply(same_color,iota(x.s)), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(iff[not[or[blue,circle]],and[size2,size3]],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:not[%s];4:or[%s,%s];4:blue;4:circle;4:and[%s,%s];4:size2;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[rectangle,not[size1]],iota(filter(filter(filter(filter(filter(x.s, triangle), size2), implies[size2,and[or[size3,green],or[nand[iff[green,circle],not[green]],size3]]]), circle), apply(size-geq,iota(x.s)))))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2;4:implies[%s,%s];4:size2;4:and[%s,%s];4:or[%s,%s];4:size3;4:green;4:or[%s,%s];4:nand[%s,%s];4:iff[%s,%s];4:green;4:circle;4:not[%s];4:green;4:size3;4:circle;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x
'λx.forall(green,filter(filter(x.s, size1), triangle))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle
'λx.apply(and[blue,and[size2,and[and[nand[and[apply(size-gt,iota(x.s)),size2],size2],apply(size-geq,x.o)],not[triangle]]]],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:size2;4:size2;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.exists(not[rectangle], x.s)'	0:exists(%s, %s);4:not[%s];4:rectangle;3:%s.s;2:x
'λx.apply(and[nor[or[or[rectangle,triangle],size1],nor[or[nand[yellow,size2],and[size2,or[green,green]]],or[size3,size1]]],circle],iota(filter(filter(x.s, size3), and[green,triangle])))'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:or[%s,%s];4:rectangle;4:triangle;4:size1;4:nor[%s,%s];4:or[%s,%s];4:nand[%s,%s];4:yellow;4:size2;4:and[%s,%s];4:size2;4:or[%s,%s];4:green;4:green;4:or[%s,%s];4:size3;4:size1;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:green;4:triangle
'λx.apply(or[or[green,size1],yellow],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:green;4:size1;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(not[circle],iota(filter(filter(x.s, size1), circle)))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle
'λx.apply(or[apply(same_shape,iota(x.s)),or[apply(same_shape,x.o),green]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green;1:%s.o;2:x
'λx.apply(and[rectangle,and[green,size3]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:green;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_size,iota(filter(x.s, size3))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[yellow,apply(same_color,iota(x.s))],iota(filter(filter(x.s, not[size3]), size1)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;4:size1
'λx.apply(size2,iota(filter(filter(filter(filter(filter(x.s, apply(same_shape,iota(filter(x.s, size3)))), rectangle), and[size2,and[size1,rectangle]]), yellow), size1)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle;4:and[%s,%s];4:size2;4:and[%s,%s];4:size1;4:rectangle;4:yellow;4:size1
'λx.apply(and[size3,blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(not[rectangle],iota(filter(filter(x.s, rectangle), iff[green,blue])))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:iff[%s,%s];4:green;4:blue
'λx.contains(iota(filter(filter(filter(x.s, and[size1,size1]), green), and[green,yellow])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size1;4:green;4:and[%s,%s];4:green;4:yellow;3:%s.s;2:x
'λx.apply(or[size2,and[size2,yellow]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:and[%s,%s];4:size2;4:yellow;1:%s.o;2:x
'λx.apply(implies[size1,blue],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size1;4:blue;1:%s.o;2:x
'λx.apply(and[size2,size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:size2;1:iota(%s);3:%s.s;2:x
'λx.exists(blue, filter(filter(x.s, implies[apply(size-leq,iota(x.s)),size3]), not[circle]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:size3;4:not[%s];4:circle
'λx.apply(and[size3,green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:green;1:%s.o;2:x
'λx.apply(iff[rectangle,triangle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:rectangle;4:triangle;1:%s.o;2:x
'λx.apply(or[and[and[rectangle,and[green,apply(size-lt,iota(x.s))]],size1],size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:green;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:size1;4:size2;1:%s.o;2:x
'λx.empty(filter(x.s, and[green,size3]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:size3
'λx.apply(triangle,iota(x.s))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[not[nor[not[triangle],triangle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:nor[%s,%s];4:not[%s];4:triangle;4:triangle;1:%s.o;2:x
'λx.apply(apply(same_color,iota(filter(x.s, yellow))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size1,rectangle],iota(filter(filter(filter(x.s, circle), yellow), not[triangle])))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow;4:not[%s];4:triangle
'λx.apply(implies[and[blue,size1],yellow],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:blue;4:size1;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(size2,iota(filter(filter(x.s, and[blue,circle]), green)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:circle;4:green
'λx.apply(implies[green,or[nand[rectangle,not[yellow]],or[or[size3,size2],size3]]],iota(filter(filter(x.s, triangle), yellow)))'	0:apply(%s,%s);4:implies[%s,%s];4:green;4:or[%s,%s];4:nand[%s,%s];4:rectangle;4:not[%s];4:yellow;4:or[%s,%s];4:or[%s,%s];4:size3;4:size2;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:yellow
'λx.apply(apply(same_shape,x.o),iota(filter(filter(x.s, and[rectangle,and[circle,triangle]]), iff[blue,rectangle])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:circle;4:triangle;4:iff[%s,%s];4:blue;4:rectangle
'λx.contains(iota(x.s), filter(filter(x.s, yellow), and[iff[and[iff[iff[size1,rectangle],or[triangle,not[or[yellow,and[blue,size1]]]]],circle],circle],and[blue,blue]]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:iff[%s,%s];4:size1;4:rectangle;4:or[%s,%s];4:triangle;4:not[%s];4:or[%s,%s];4:yellow;4:and[%s,%s];4:blue;4:size1;4:circle;4:circle;4:and[%s,%s];4:blue;4:blue
'λx.contains(iota(filter(filter(x.s, size3), or[size1,nand[size2,yellow]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:size1;4:nand[%s,%s];4:size2;4:yellow;3:%s.s;2:x
'λx.empty(filter(filter(x.s, and[nand[and[size3,not[rectangle]],green],yellow]), implies[or[and[triangle,apply(same_shape,iota(filter(filter(filter(x.s, triangle), size3), yellow)))],size3],triangle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:size3;4:not[%s];4:rectangle;4:green;4:yellow;4:implies[%s,%s];4:or[%s,%s];4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3;4:yellow;4:size3;4:triangle
'λx.apply(not[apply(same_shape,x.o)],iota(filter(filter(filter(x.s, blue), circle), nand[and[triangle,nand[circle,yellow]],iff[size2,size3]])))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle;4:nand[%s,%s];4:and[%s,%s];4:triangle;4:nand[%s,%s];4:circle;4:yellow;4:iff[%s,%s];4:size2;4:size3
'λx.apply(and[apply(size-lt,iota(filter(filter(filter(filter(filter(filter(filter(x.s, or[blue,circle]), size2), and[size1,apply(same_shape,iota(x.s))]), green), or[or[yellow,size1],and[size1,or[blue,and[circle,blue]]]]), triangle), and[not[rectangle],yellow]))),size3],iota(filter(filter(x.s, blue), triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:circle;4:size2;4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:green;4:or[%s,%s];4:or[%s,%s];4:yellow;4:size1;4:and[%s,%s];4:size1;4:or[%s,%s];4:blue;4:and[%s,%s];4:circle;4:blue;4:triangle;4:and[%s,%s];4:not[%s];4:rectangle;4:yellow;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle
'λx.apply(nand[blue,yellow],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:blue;4:yellow;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(filter(x.s, size3), and[circle,triangle]), circle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:circle;4:triangle;4:circle
'λx.apply(size2,iota(filter(filter(filter(filter(x.s, green), size2), size2), circle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size2;4:size2;4:circle
'λx.apply(and[and[and[not[size2],size2],size1],or[nand[size3,triangle],size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size2;4:size2;4:size1;4:or[%s,%s];4:nand[%s,%s];4:size3;4:triangle;4:size3;1:%s.o;2:x
'λx.apply(or[rectangle,circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:circle;1:%s.o;2:x
'λx.apply(and[apply(same_size,x.o),apply(same_size,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.exists(not[yellow], x.s)'	0:exists(%s, %s);4:not[%s];4:yellow;3:%s.s;2:x
'λx.apply(green,iota(filter(x.s, and[size3,yellow])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:yellow
'λx.exists(size2, filter(x.s, size1))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(nand[rectangle,size3],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:rectangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(x.s, and[nand[not[size1],size2],nor[size2,and[or[size2,triangle],and[triangle,apply(same_color,x.o)]]]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nand[%s,%s];4:not[%s];4:size1;4:size2;4:nor[%s,%s];4:size2;4:and[%s,%s];4:or[%s,%s];4:size2;4:triangle;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.forall(iff[size1,or[nor[triangle,size2],apply(size-leq,x.o)]],filter(filter(filter(x.s, and[nand[blue,and[iff[size3,apply(same_shape,iota(x.s))],size3]],and[size1,size1]]), and[and[green,circle],and[size2,size1]]), size3))'	0:forall(%s,%s);4:iff[%s,%s];4:size1;4:or[%s,%s];4:nor[%s,%s];4:triangle;4:size2;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nand[%s,%s];4:blue;4:and[%s,%s];4:iff[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:size1;4:size1;4:and[%s,%s];4:and[%s,%s];4:green;4:circle;4:and[%s,%s];4:size2;4:size1;4:size3
'λx.apply(triangle,iota(filter(filter(x.s, green), apply(same_size,iota(filter(filter(x.s, iff[apply(same_shape,iota(x.s)),size1]), size2))))))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size1;4:size2
'λx.apply(and[apply(same_color,iota(filter(x.s, implies[not[blue],size3]))),size3],iota(filter(x.s, apply(same_shape,x.o))))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:not[%s];4:blue;4:size3;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(and[triangle,and[green,rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:green;4:rectangle;1:%s.o;2:x
'λx.exists(blue, filter(filter(x.s, size1), or[green,green]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:or[%s,%s];4:green;4:green
'λx.apply(or[circle,apply(same_shape,x.o)],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.forall(and[and[triangle,size3],nand[blue,not[size3]]],filter(x.s, size1))'	0:forall(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:size3;4:nand[%s,%s];4:blue;4:not[%s];4:size3;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(green,iota(filter(filter(x.s, and[triangle,and[triangle,blue]]), green)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:and[%s,%s];4:triangle;4:blue;4:green
'λx.apply(and[not[circle],green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:circle;4:green;1:iota(%s);3:%s.s;2:x
'λx.exists(nor[or[green,or[green,blue]],yellow], filter(filter(x.s, rectangle), not[and[size3,circle]]))'	0:exists(%s, %s);4:nor[%s,%s];4:or[%s,%s];4:green;4:or[%s,%s];4:green;4:blue;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:and[%s,%s];4:size3;4:circle
'λx.apply(size2,iota(filter(filter(filter(x.s, green), or[size3,apply(size-leq,x.o)]), yellow)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:size3;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:yellow
'λx.contains(iota(filter(filter(filter(filter(x.s, yellow), not[nor[or[rectangle,size1],blue]]), apply(size-gt,x.o)), circle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:nor[%s,%s];4:or[%s,%s];4:rectangle;4:size1;4:blue;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:circle;3:%s.s;2:x
'λx.forall(size3,filter(x.s, or[or[yellow,and[size3,size1]],nor[size2,green]]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:yellow;4:and[%s,%s];4:size3;4:size1;4:nor[%s,%s];4:size2;4:green
'λx.apply(and[or[yellow,size2],nor[blue,not[size1]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:yellow;4:size2;4:nor[%s,%s];4:blue;4:not[%s];4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(and[not[and[apply(same_size,x.o),apply(same_shape,x.o)]],triangle],iota(filter(filter(x.s, triangle), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue
'λx.apply(nor[blue,rectangle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:blue;4:rectangle;1:%s.o;2:x
'λx.apply(and[apply(size-leq,iota(x.s)),apply(same_size,x.o)],iota(filter(x.s, and[green,rectangle])))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:rectangle
'λx.apply(and[and[size2,and[and[blue,apply(same_shape,iota(x.s))],blue]],size1],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:blue;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.forall(size3,filter(filter(filter(filter(x.s, apply(same_color,iota(x.s))), blue), rectangle), circle))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:blue;4:rectangle;4:circle
'λx.apply(not[and[yellow,yellow]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:yellow;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[blue,apply(same_size,x.o)],not[blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:not[%s];4:blue;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, and[iff[rectangle,circle],and[blue,rectangle]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:iff[%s,%s];4:rectangle;4:circle;4:and[%s,%s];4:blue;4:rectangle
'λx.apply(nor[size3,or[and[size2,apply(size-gt,x.o)],size1]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size3;4:or[%s,%s];4:and[%s,%s];4:size2;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:size1;1:%s.o;2:x
'λx.apply(not[nand[circle,size3]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:nand[%s,%s];4:circle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(x.s, nor[rectangle,size3])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:rectangle;4:size3
'λx.exists(apply(size-leq,x.o), filter(x.s, green))'	0:exists(%s, %s);4:apply(%s,%s);5:size-leq;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[and[yellow,not[or[and[green,size3],yellow]]],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:green;4:size3;4:yellow;4:size1;1:%s.o;2:x
'λx.empty(filter(x.s, and[size3,size1]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:size1
'λx.apply(and[and[size1,and[circle,blue]],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:circle;4:blue;4:size1;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, rectangle), rectangle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle
'λx.contains(iota(filter(x.s, nor[size1,and[not[and[size1,yellow]],size2]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size1;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:size1;4:yellow;4:size2;3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, rectangle), and[green,yellow]), apply(same_size,x.o)))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:green;4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.exists(yellow, filter(x.s, and[apply(size-lt,iota(filter(filter(filter(filter(x.s, size2), size3), size2), size3))),and[nor[apply(same_shape,iota(filter(filter(filter(filter(x.s, apply(same_size,iota(x.s))), and[and[nor[circle,blue],not[green]],triangle]), size2), triangle))),not[green]],rectangle]]))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3;4:size2;4:size3;4:and[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:circle;4:blue;4:not[%s];4:green;4:triangle;4:size2;4:triangle;4:not[%s];4:green;4:rectangle
'λx.apply(apply(same_size,x.o),iota(filter(filter(x.s, size3), triangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle
'λx.contains(iota(filter(filter(filter(x.s, nand[blue,size1]), blue), and[not[circle],triangle])), filter(filter(x.s, size3), green))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:blue;4:size1;4:blue;4:and[%s,%s];4:not[%s];4:circle;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green
'λx.forall(size1,filter(filter(filter(x.s, and[nor[size3,triangle],and[size1,rectangle]]), and[and[apply(same_shape,iota(x.s)),not[or[size2,size1]]],triangle]), and[blue,or[blue,rectangle]]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:size3;4:triangle;4:and[%s,%s];4:size1;4:rectangle;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:size2;4:size1;4:triangle;4:and[%s,%s];4:blue;4:or[%s,%s];4:blue;4:rectangle
'λx.apply(or[or[yellow,yellow],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:yellow;4:yellow;4:blue;1:%s.o;2:x
'λx.apply(apply(same_color,x.o),iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[not[rectangle],green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:rectangle;4:green;1:iota(%s);3:%s.s;2:x
'λx.exists(triangle, filter(filter(filter(filter(x.s, apply(same_shape,iota(filter(filter(x.s, size3), apply(size-lt,x.o))))), and[and[or[yellow,yellow],and[size2,triangle]],size3]), yellow), and[triangle,and[size1,and[yellow,size3]]]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:yellow;4:yellow;4:and[%s,%s];4:size2;4:triangle;4:size3;4:yellow;4:and[%s,%s];4:triangle;4:and[%s,%s];4:size1;4:and[%s,%s];4:yellow;4:size3
'λx.apply(and[or[rectangle,rectangle],and[size2,size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:rectangle;4:rectangle;4:and[%s,%s];4:size2;4:size3;1:%s.o;2:x
'λx.apply(and[and[and[implies[rectangle,circle],size1],circle],nand[circle,circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:rectangle;4:circle;4:size1;4:circle;4:nand[%s,%s];4:circle;4:circle;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, apply(same_size,iota(x.s))))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size2,yellow],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(x.s, and[triangle,yellow]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:yellow
'λx.apply(apply(size-lt,x.o),iota(filter(filter(x.s, yellow), size3)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size3
'λx.apply(and[green,or[blue,blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:or[%s,%s];4:blue;4:blue;1:%s.o;2:x
'λx.apply(or[yellow,nand[yellow,triangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:nand[%s,%s];4:yellow;4:triangle;1:%s.o;2:x
'λx.apply(implies[or[size2,yellow],size2],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:or[%s,%s];4:size2;4:yellow;4:size2;1:%s.o;2:x
'λx.apply(nor[size3,and[size1,iff[triangle,size3]]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size3;4:and[%s,%s];4:size1;4:iff[%s,%s];4:triangle;4:size3;1:%s.o;2:x
'λx.apply(and[not[yellow],and[iff[or[rectangle,implies[and[size2,or[and[size2,circle],size1]],circle]],size2],nand[triangle,size2]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:yellow;4:and[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:rectangle;4:implies[%s,%s];4:and[%s,%s];4:size2;4:or[%s,%s];4:and[%s,%s];4:size2;4:circle;4:size1;4:circle;4:size2;4:nand[%s,%s];4:triangle;4:size2;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(filter(x.s, and[yellow,size2]), and[yellow,apply(same_color,iota(filter(filter(filter(filter(filter(filter(filter(x.s, blue), rectangle), green), size3), circle), green), yellow)))]), or[not[and[rectangle,rectangle]],apply(same_color,x.o)])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size2;4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle;4:green;4:size3;4:circle;4:green;4:yellow;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:rectangle;4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(filter(filter(x.s, size2), not[and[size3,nand[yellow,circle]]]), blue), rectangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:not[%s];4:and[%s,%s];4:size3;4:nand[%s,%s];4:yellow;4:circle;4:blue;4:rectangle
'λx.apply(not[and[not[size3],and[not[triangle],implies[not[triangle],and[size2,or[apply(size-gt,x.o),and[triangle,size2]]]]]]],iota(filter(filter(x.s, not[triangle]), and[yellow,circle])))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:size3;4:and[%s,%s];4:not[%s];4:triangle;4:implies[%s,%s];4:not[%s];4:triangle;4:and[%s,%s];4:size2;4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:and[%s,%s];4:triangle;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:and[%s,%s];4:yellow;4:circle
'λx.apply(triangle,iota(filter(filter(filter(x.s, size2), size2), apply(same_shape,x.o))))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(and[yellow,and[yellow,size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:and[%s,%s];4:yellow;4:size2;1:%s.o;2:x
'λx.apply(and[green,blue],iota(filter(x.s, apply(same_size,iota(filter(filter(x.s, triangle), circle))))))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle
'λx.apply(apply(size-geq,x.o),iota(filter(filter(filter(filter(x.s, circle), and[size2,size1]), circle), triangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:size2;4:size1;4:circle;4:triangle
'λx.apply(not[and[implies[rectangle,nand[size3,blue]],rectangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:implies[%s,%s];4:rectangle;4:nand[%s,%s];4:size3;4:blue;4:rectangle;1:%s.o;2:x
'λx.apply(and[and[green,size1],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:green;4:size1;4:green;1:%s.o;2:x
'λx.exists(circle, filter(filter(x.s, or[green,green]), triangle))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:green;4:triangle
'λx.contains(iota(filter(filter(x.s, triangle), iff[green,size1])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:iff[%s,%s];4:green;4:size1;3:%s.s;2:x
'λx.apply(nor[size3,apply(same_shape,iota(x.s))],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.exists(green, filter(x.s, triangle))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(green,iota(filter(filter(x.s, rectangle), green)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green
'λx.forall(apply(same_shape,iota(x.s)),filter(x.s, not[rectangle]))'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle
'λx.apply(nand[size3,not[size2]],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:size3;4:not[%s];4:size2;1:iota(%s);3:%s.s;2:x
'λx.forall(size2,filter(filter(x.s, rectangle), green))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green
'λx.apply(nor[size1,not[apply(same_size,x.o)]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size1;4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.exists(or[not[yellow],apply(same_color,iota(filter(filter(filter(filter(x.s, circle), circle), size1), triangle)))], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:not[%s];4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:circle;4:size1;4:triangle;3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(filter(x.s, rectangle), size3), size1)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3;4:size1
'λx.apply(or[nand[circle,rectangle],and[size3,yellow]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:circle;4:rectangle;4:and[%s,%s];4:size3;4:yellow;1:%s.o;2:x
'λx.exists(or[and[size1,triangle],green], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:size1;4:triangle;4:green;3:%s.s;2:x
'λx.exists(nand[iff[rectangle,size2],size1], x.s)'	0:exists(%s, %s);4:nand[%s,%s];4:iff[%s,%s];4:rectangle;4:size2;4:size1;3:%s.s;2:x
'λx.apply(nand[circle,circle],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:circle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[and[size3,size2],not[size1]],iota(filter(filter(filter(filter(filter(filter(x.s, size1), circle), and[or[triangle,yellow],blue]), or[blue,apply(same_color,iota(filter(x.s, apply(same_color,x.o))))]), size3), blue)))'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:size3;4:size2;4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle;4:and[%s,%s];4:or[%s,%s];4:triangle;4:yellow;4:blue;4:or[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3;4:blue
'λx.forall(or[apply(size-lt,iota(x.s)),blue],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:blue;3:%s.s;2:x
'λx.apply(and[or[rectangle,blue],size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:rectangle;4:blue;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(x.s, and[green,size1]), size3)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:size1;4:size3
'λx.contains(iota(x.s), filter(filter(x.s, not[blue]), green))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:green
'λx.forall(and[size1,yellow],filter(filter(x.s, size1), and[apply(size-leq,iota(filter(filter(filter(filter(filter(x.s, and[size3,and[green,green]]), apply(same_size,x.o)), size2), nor[size3,blue]), not[triangle]))),or[triangle,green]]))'	0:forall(%s,%s);4:and[%s,%s];4:size1;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:and[%s,%s];4:green;4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2;4:nor[%s,%s];4:size3;4:blue;4:not[%s];4:triangle;4:or[%s,%s];4:triangle;4:green
'λx.apply(or[and[size2,iff[blue,green]],green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size2;4:iff[%s,%s];4:blue;4:green;4:green;1:%s.o;2:x
'λx.exists(circle, filter(filter(filter(x.s, yellow), iff[circle,circle]), green))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:iff[%s,%s];4:circle;4:circle;4:green
'λx.apply(or[green,and[and[circle,blue],yellow]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:circle;4:blue;4:yellow;1:%s.o;2:x
'λx.exists(iff[nand[or[triangle,apply(same_color,iota(filter(x.s, apply(size-geq,iota(x.s)))))],size1],nand[blue,rectangle]], x.s)'	0:exists(%s, %s);4:iff[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:size1;4:nand[%s,%s];4:blue;4:rectangle;3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, size1), circle), or[and[size1,and[not[not[or[size3,not[green]]]],rectangle]],not[size1]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle;4:or[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:not[%s];4:not[%s];4:or[%s,%s];4:size3;4:not[%s];4:green;4:rectangle;4:not[%s];4:size1
'λx.apply(not[or[implies[size3,not[blue]],and[circle,circle]]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:implies[%s,%s];4:size3;4:not[%s];4:blue;4:and[%s,%s];4:circle;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(apply(size-lt,iota(x.s)),iota(filter(filter(filter(filter(filter(x.s, blue), apply(same_shape,x.o)), size2), and[yellow,size1]), green)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2;4:and[%s,%s];4:yellow;4:size1;4:green
'λx.apply(rectangle,iota(filter(filter(x.s, yellow), triangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle
'λx.exists(nand[nor[green,and[yellow,not[blue]]],rectangle], x.s)'	0:exists(%s, %s);4:nand[%s,%s];4:nor[%s,%s];4:green;4:and[%s,%s];4:yellow;4:not[%s];4:blue;4:rectangle;3:%s.s;2:x
'λx.forall(size2,filter(filter(x.s, not[not[size2]]), triangle))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:size2;4:triangle
'λx.exists(blue, filter(filter(filter(x.s, and[iff[blue,size3],size2]), green), size1))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:iff[%s,%s];4:blue;4:size3;4:size2;4:green;4:size1
'λx.apply(or[rectangle,triangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[triangle,rectangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(x.s, or[size2,and[size2,and[or[circle,blue],rectangle]]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:and[%s,%s];4:size2;4:and[%s,%s];4:or[%s,%s];4:circle;4:blue;4:rectangle
'λx.apply(and[and[size3,circle],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size3;4:circle;4:rectangle;1:%s.o;2:x
'λx.apply(or[circle,and[size1,and[circle,not[and[size2,implies[size3,size2]]]]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:and[%s,%s];4:size1;4:and[%s,%s];4:circle;4:not[%s];4:and[%s,%s];4:size2;4:implies[%s,%s];4:size3;4:size2;1:%s.o;2:x
'λx.apply(nand[rectangle,apply(same_size,x.o)],iota(filter(x.s, not[yellow])))'	0:apply(%s,%s);4:nand[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow
'λx.apply(and[or[nand[size2,iff[apply(same_color,iota(x.s)),and[size3,green]]],green],yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:nand[%s,%s];4:size2;4:iff[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:green;4:green;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(size-geq,x.o),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[rectangle,implies[not[rectangle],rectangle]],iota(filter(filter(filter(x.s, yellow), nor[blue,triangle]), size3)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:implies[%s,%s];4:not[%s];4:rectangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:nor[%s,%s];4:blue;4:triangle;4:size3
'λx.apply(and[size1,and[blue,size2]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:and[%s,%s];4:blue;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(or[blue,size3],iota(filter(filter(filter(filter(x.s, and[and[yellow,apply(size-lt,iota(filter(filter(filter(x.s, rectangle), and[or[circle,rectangle],and[circle,or[size3,triangle]]]), blue)))],triangle]), green), not[size1]), size1)))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:or[%s,%s];4:circle;4:rectangle;4:and[%s,%s];4:circle;4:or[%s,%s];4:size3;4:triangle;4:blue;4:triangle;4:green;4:not[%s];4:size1;4:size1
'λx.forall(rectangle,filter(filter(x.s, nor[green,size2]), rectangle))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:green;4:size2;4:rectangle
'λx.apply(apply(same_size,iota(filter(filter(x.s, blue), yellow))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(and[apply(size-lt,iota(filter(filter(x.s, green), and[not[not[and[circle,green]]],green]))),iff[and[and[not[blue],blue],size1],size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:not[%s];4:not[%s];4:and[%s,%s];4:circle;4:green;4:green;4:iff[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:blue;4:blue;4:size1;4:size2;1:%s.o;2:x
'λx.apply(or[size1,green],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:green;1:iota(%s);3:%s.s;2:x
'λx.forall(triangle,filter(x.s, implies[circle,and[and[green,green],green]]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:green;4:green;4:green
'λx.forall(and[size3,or[rectangle,triangle]],filter(x.s, not[blue]))'	0:forall(%s,%s);4:and[%s,%s];4:size3;4:or[%s,%s];4:rectangle;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.apply(or[green,apply(same_color,iota(filter(x.s, iff[and[size2,circle],rectangle])))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:and[%s,%s];4:size2;4:circle;4:rectangle;1:%s.o;2:x
'λx.apply(implies[rectangle,size3],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:rectangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(x.s, or[green,size2])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:size2
'λx.apply(apply(size-geq,iota(x.s)),iota(filter(x.s, and[and[triangle,apply(size-leq,iota(x.s))],size3])))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:triangle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:size3
'λx.empty(filter(filter(x.s, size3), and[green,circle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:green;4:circle
'λx.exists(size1, filter(x.s, and[circle,triangle]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:triangle
'λx.contains(iota(filter(x.s, green)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;3:%s.s;2:x
'λx.apply(and[size3,and[size1,circle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:size1;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[iff[green,or[size3,and[blue,not[or[and[or[size2,size2],and[yellow,and[and[and[blue,rectangle],yellow],and[size3,circle]]]],yellow]]]]],size2],iota(filter(filter(x.s, triangle), yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:green;4:or[%s,%s];4:size3;4:and[%s,%s];4:blue;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size2;4:size2;4:and[%s,%s];4:yellow;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:rectangle;4:yellow;4:and[%s,%s];4:size3;4:circle;4:yellow;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:yellow
'λx.exists(green, filter(filter(x.s, size2), size3))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3
'λx.empty(filter(filter(x.s, circle), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green
'λx.apply(size1,iota(filter(filter(x.s, and[yellow,blue]), triangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:blue;4:triangle
'λx.exists(not[triangle], x.s)'	0:exists(%s, %s);4:not[%s];4:triangle;3:%s.s;2:x
'λx.exists(and[size2,circle], filter(filter(filter(x.s, size1), and[circle,not[green]]), or[size2,size2]))'	0:exists(%s, %s);4:and[%s,%s];4:size2;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:circle;4:not[%s];4:green;4:or[%s,%s];4:size2;4:size2
'λx.forall(implies[size1,blue],filter(filter(x.s, blue), and[or[size1,and[and[and[or[size3,apply(size-leq,iota(filter(x.s, and[green,size3])))],green],triangle],yellow]],circle]))'	0:forall(%s,%s);4:implies[%s,%s];4:size1;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:or[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size3;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:size3;4:green;4:triangle;4:yellow;4:circle
'λx.apply(rectangle,iota(filter(filter(filter(x.s, and[green,green]), size1), apply(same_size,x.o))))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:green;4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(and[and[yellow,and[size2,circle]],and[green,apply(same_size,x.o)]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:size2;4:circle;4:and[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(x.s, and[green,triangle]), rectangle), apply(same_shape,x.o))), filter(x.s, circle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:triangle;4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.contains(iota(x.s), filter(filter(x.s, circle), not[not[triangle]]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:not[%s];4:triangle
'λx.apply(size3,iota(filter(filter(x.s, or[and[or[yellow,size3],circle],nand[triangle,implies[yellow,triangle]]]), apply(same_size,x.o))))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:yellow;4:size3;4:circle;4:nand[%s,%s];4:triangle;4:implies[%s,%s];4:yellow;4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(not[apply(size-leq,iota(x.s))],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(filter(filter(x.s, triangle), rectangle), rectangle), size1)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle;4:rectangle;4:size1
'λx.apply(or[yellow,yellow],iota(filter(filter(filter(x.s, triangle), size3), yellow)))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3;4:yellow
'λx.apply(nor[rectangle,rectangle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:rectangle;4:rectangle;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(filter(x.s, apply(same_color,x.o)), or[apply(size-geq,iota(filter(x.s, blue))),not[green]]), and[triangle,size3]), and[size3,size1]), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:green;4:and[%s,%s];4:triangle;4:size3;4:and[%s,%s];4:size3;4:size1;4:green
'λx.apply(green,iota(filter(filter(x.s, yellow), not[size3])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:size3
'λx.contains(iota(x.s), filter(x.s, triangle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(implies[or[or[and[size2,size3],nand[size1,circle]],circle],circle],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size2;4:size3;4:nand[%s,%s];4:size1;4:circle;4:circle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(size-gt,iota(filter(filter(filter(filter(x.s, circle), triangle), green), triangle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle;4:green;4:triangle;1:%s.o;2:x
'λx.apply(apply(same_color,iota(filter(x.s, or[yellow,rectangle]))),iota(filter(x.s, not[circle])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.exists(or[triangle,and[size1,and[size1,and[size1,and[size3,nand[triangle,apply(same_color,iota(x.s))]]]]]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:triangle;4:and[%s,%s];4:size1;4:and[%s,%s];4:size1;4:and[%s,%s];4:size1;4:and[%s,%s];4:size3;4:nand[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(or[size1,triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:triangle;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(x.s, and[size3,and[size3,triangle]]), yellow)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:and[%s,%s];4:size3;4:triangle;4:yellow
'λx.apply(green,iota(filter(filter(filter(x.s, not[or[not[size3],yellow]]), apply(same_shape,iota(x.s))), not[size3])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:not[%s];4:size3;4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:not[%s];4:size3
'λx.exists(apply(size-geq,x.o), filter(filter(filter(x.s, blue), circle), circle))'	0:exists(%s, %s);4:apply(%s,%s);5:size-geq;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle;4:circle
'λx.apply(size1,iota(filter(filter(filter(x.s, triangle), green), rectangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green;4:rectangle
'λx.apply(rectangle,iota(filter(x.s, and[apply(size-lt,iota(filter(x.s, triangle))),green])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green
'λx.apply(or[nand[size1,size2],and[apply(size-leq,iota(filter(x.s, apply(same_size,x.o)))),size1]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:size1;4:size2;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1;1:%s.o;2:x
'λx.apply(and[and[and[yellow,not[or[rectangle,size1]]],or[yellow,not[triangle]]],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:not[%s];4:or[%s,%s];4:rectangle;4:size1;4:or[%s,%s];4:yellow;4:not[%s];4:triangle;4:size2;1:%s.o;2:x
'λx.apply(and[green,size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[circle,size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:size3;1:%s.o;2:x
'λx.apply(or[apply(same_shape,x.o),yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow;1:%s.o;2:x
'λx.forall(size1,filter(x.s, circle))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(or[circle,circle],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.contains(x.o, filter(filter(filter(filter(x.s, implies[iff[circle,not[or[iff[blue,size3],blue]]],size2]), implies[circle,yellow]), iff[rectangle,blue]), apply(same_shape,iota(filter(filter(x.s, green), yellow)))))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:iff[%s,%s];4:circle;4:not[%s];4:or[%s,%s];4:iff[%s,%s];4:blue;4:size3;4:blue;4:size2;4:implies[%s,%s];4:circle;4:yellow;4:iff[%s,%s];4:rectangle;4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow
'λx.apply(size3,iota(filter(filter(x.s, size2), size2)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2
'λx.apply(and[and[green,apply(same_shape,iota(filter(filter(x.s, or[and[size3,rectangle],circle]), size1)))],implies[size3,yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size3;4:rectangle;4:circle;4:size1;4:implies[%s,%s];4:size3;4:yellow;1:%s.o;2:x
'λx.apply(or[size1,or[iff[blue,yellow],size3]],iota(filter(filter(x.s, and[size1,rectangle]), blue)))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:or[%s,%s];4:iff[%s,%s];4:blue;4:yellow;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:rectangle;4:blue
'λx.apply(triangle,iota(filter(filter(filter(filter(x.s, yellow), apply(same_color,x.o)), apply(same_size,iota(filter(filter(x.s, and[blue,or[not[circle],triangle]]), blue)))), yellow)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:or[%s,%s];4:not[%s];4:circle;4:triangle;4:blue;4:yellow
'λx.apply(and[implies[green,blue],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:green;4:blue;4:yellow;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, nand[size2,triangle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size2;4:triangle
'λx.apply(nand[and[blue,size3],and[yellow,and[size1,rectangle]]],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:blue;4:size3;4:and[%s,%s];4:yellow;4:and[%s,%s];4:size1;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, and[and[rectangle,blue],apply(same_color,x.o)])), filter(x.s, blue))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(rectangle,iota(filter(filter(filter(filter(filter(x.s, rectangle), size3), not[apply(same_size,iota(filter(filter(x.s, yellow), size3)))]), not[or[yellow,size2]]), size2)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3;4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size3;4:not[%s];4:or[%s,%s];4:yellow;4:size2;4:size2
'λx.apply(size2,iota(filter(filter(x.s, blue), not[circle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:circle
'λx.forall(size1,filter(filter(x.s, size2), apply(size-lt,x.o)))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(filter(x.s, or[apply(size-geq,iota(filter(x.s, or[and[size1,triangle],implies[not[rectangle],rectangle]]))),size3]), green), yellow)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size1;4:triangle;4:implies[%s,%s];4:not[%s];4:rectangle;4:rectangle;4:size3;4:green;4:yellow
'λx.contains(x.o, filter(filter(x.s, and[triangle,green]), rectangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:green;4:rectangle
'λx.exists(triangle, filter(x.s, and[and[rectangle,and[size3,yellow]],nand[triangle,and[size1,not[or[yellow,and[yellow,and[rectangle,size1]]]]]]]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:size3;4:yellow;4:nand[%s,%s];4:triangle;4:and[%s,%s];4:size1;4:not[%s];4:or[%s,%s];4:yellow;4:and[%s,%s];4:yellow;4:and[%s,%s];4:rectangle;4:size1
'λx.empty(filter(filter(x.s, not[apply(size-lt,x.o)]), and[or[blue,size1],size3]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:and[%s,%s];4:or[%s,%s];4:blue;4:size1;4:size3
'λx.apply(size3,iota(filter(filter(x.s, green), apply(size-leq,x.o))))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:size-leq;1:%s.o;2:x
'λx.apply(and[size3,apply(same_shape,iota(filter(filter(x.s, or[and[yellow,apply(same_size,iota(filter(x.s, rectangle)))],blue]), size1)))],iota(filter(filter(x.s, not[size1]), apply(same_shape,iota(filter(x.s, green))))))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(nand[triangle,not[circle]],iota(filter(filter(filter(x.s, and[or[and[not[not[triangle]],rectangle],or[and[apply(same_color,x.o),yellow],nor[green,yellow]]],apply(same_size,iota(x.s))]), rectangle), rectangle)))'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:not[%s];4:not[%s];4:triangle;4:rectangle;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;4:nor[%s,%s];4:green;4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:rectangle;4:rectangle
'λx.apply(or[triangle,apply(same_shape,iota(filter(filter(filter(x.s, blue), and[size3,yellow]), rectangle)))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:size3;4:yellow;4:rectangle;1:%s.o;2:x
'λx.apply(and[size2,rectangle],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(or[apply(same_size,iota(x.s)),yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:yellow;1:%s.o;2:x
'λx.apply(and[green,nand[apply(same_color,x.o),apply(same_shape,iota(x.s))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:nand[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(x.s, green), and[and[yellow,and[apply(size-geq,x.o),or[and[size2,apply(same_size,x.o)],nor[nor[size1,rectangle],green]]]],and[rectangle,circle]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:or[%s,%s];4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:nor[%s,%s];4:nor[%s,%s];4:size1;4:rectangle;4:green;4:and[%s,%s];4:rectangle;4:circle
'λx.forall(yellow,filter(filter(filter(filter(filter(x.s, size3), size2), green), size2), and[size3,yellow]))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2;4:green;4:size2;4:and[%s,%s];4:size3;4:yellow
'λx.apply(or[circle,rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:rectangle;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(filter(filter(x.s, and[size2,and[apply(same_color,x.o),and[size3,nor[not[circle],and[not[size2],size3]]]]]), yellow), not[rectangle]), apply(same_shape,iota(filter(filter(x.s, triangle), size1))))))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:size3;4:nor[%s,%s];4:not[%s];4:circle;4:and[%s,%s];4:not[%s];4:size2;4:size3;4:yellow;4:not[%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size1
'λx.apply(size2,iota(filter(x.s, not[green])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green
'λx.apply(nor[green,blue],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:green;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[apply(same_color,iota(filter(x.s, and[and[size1,size2],green]))),and[circle,apply(same_color,iota(x.s))]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size1;4:size2;4:green;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(x.s, size3), and[and[or[not[and[nand[green,or[green,size3]],size3]],nand[apply(same_size,iota(x.s)),blue]],nand[green,circle]],iff[apply(same_size,iota(x.s)),and[size2,triangle]]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:not[%s];4:and[%s,%s];4:nand[%s,%s];4:green;4:or[%s,%s];4:green;4:size3;4:size3;4:nand[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:blue;4:nand[%s,%s];4:green;4:circle;4:iff[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:triangle;3:%s.s;2:x
'λx.contains(iota(x.s), filter(filter(x.s, not[or[rectangle,not[and[rectangle,and[size1,circle]]]]]), yellow))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:rectangle;4:not[%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:size1;4:circle;4:yellow
'λx.apply(iff[size3,and[apply(same_color,x.o),size3]],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:size3;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(x.s, circle), or[triangle,and[size2,implies[not[yellow],nor[rectangle,triangle]]]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:triangle;4:and[%s,%s];4:size2;4:implies[%s,%s];4:not[%s];4:yellow;4:nor[%s,%s];4:rectangle;4:triangle
'λx.exists(apply(same_color,iota(filter(x.s, or[and[not[yellow],circle],apply(same_color,iota(filter(filter(x.s, yellow), size2)))]))), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:yellow;4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2;3:%s.s;2:x
'λx.apply(not[implies[not[triangle],rectangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:implies[%s,%s];4:not[%s];4:triangle;4:rectangle;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, size2), rectangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle
'λx.forall(green,filter(filter(filter(x.s, size1), apply(same_color,x.o)), rectangle))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle
'λx.contains(iota(x.s), x.s)'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(filter(x.s, and[triangle,or[or[and[blue,circle],triangle],triangle]]), circle), green)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:blue;4:circle;4:triangle;4:triangle;4:circle;4:green
'λx.apply(apply(same_shape,iota(filter(filter(x.s, rectangle), size2))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[rectangle,blue],iota(filter(filter(x.s, circle), and[or[triangle,green],apply(same_size,iota(x.s))])))'	0:apply(%s,%s);4:nor[%s,%s];4:rectangle;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:or[%s,%s];4:triangle;4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[and[circle,nor[and[apply(size-lt,iota(filter(x.s, size3))),yellow],and[or[and[blue,blue],apply(same_color,x.o)],yellow]]],and[size2,yellow]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:circle;4:nor[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:blue;4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;4:and[%s,%s];4:size2;4:yellow;1:%s.o;2:x
'λx.exists(circle, filter(x.s, or[and[and[and[size2,or[size3,green]],circle],and[or[apply(size-leq,x.o),apply(same_size,iota(filter(filter(x.s, yellow), and[nand[size2,blue],size1])))],implies[size2,not[rectangle]]]],blue]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:or[%s,%s];4:size3;4:green;4:circle;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:nand[%s,%s];4:size2;4:blue;4:size1;4:implies[%s,%s];4:size2;4:not[%s];4:rectangle;4:blue
'λx.apply(and[circle,size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[blue,and[apply(same_color,x.o),apply(size-gt,x.o)]],iota(filter(filter(filter(x.s, iff[green,blue]), green), triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:green;4:blue;4:green;4:triangle
'λx.apply(nand[triangle,blue],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:blue;1:%s.o;2:x
'λx.exists(size1, filter(filter(x.s, green), or[size2,apply(same_size,x.o)]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(iff[green,and[or[size2,and[or[size2,yellow],apply(size-geq,x.o)]],not[and[not[green],size1]]]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:green;4:and[%s,%s];4:or[%s,%s];4:size2;4:and[%s,%s];4:or[%s,%s];4:size2;4:yellow;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:not[%s];4:green;4:size1;1:%s.o;2:x
'λx.apply(and[size1,apply(same_size,iota(filter(filter(filter(x.s, circle), triangle), nand[size2,rectangle])))],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle;4:nand[%s,%s];4:size2;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[not[size3],rectangle],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:not[%s];4:size3;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(filter(filter(x.s, size1), not[green]), circle), or[rectangle,and[circle,green]]), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:not[%s];4:green;4:circle;4:or[%s,%s];4:rectangle;4:and[%s,%s];4:circle;4:green;4:circle
'λx.apply(and[size3,or[rectangle,or[and[size2,rectangle],size3]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:or[%s,%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:size2;4:rectangle;4:size3;1:%s.o;2:x
'λx.forall(nand[size3,green],filter(x.s, not[blue]))'	0:forall(%s,%s);4:nand[%s,%s];4:size3;4:green;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.contains(x.o, filter(x.s, not[rectangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle
'λx.forall(yellow,filter(filter(filter(x.s, yellow), size1), size1))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;4:size1
'λx.apply(yellow,iota(filter(x.s, apply(same_size,iota(filter(filter(filter(filter(filter(x.s, blue), yellow), blue), yellow), or[not[and[circle,yellow]],and[not[or[not[and[size2,size2]],and[and[size1,not[apply(same_size,x.o)]],yellow]]],blue]]))))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow;4:blue;4:yellow;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:circle;4:yellow;4:and[%s,%s];4:not[%s];4:or[%s,%s];4:not[%s];4:and[%s,%s];4:size2;4:size2;4:and[%s,%s];4:and[%s,%s];4:size1;4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow;4:blue
'λx.apply(and[and[green,blue],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:green;4:blue;4:green;1:%s.o;2:x
'λx.apply(or[blue,and[apply(same_shape,x.o),nand[apply(same_shape,iota(x.s)),rectangle]]],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.exists(size3, filter(filter(x.s, and[rectangle,or[yellow,size2]]), apply(same_size,x.o)))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:yellow;4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(apply(same_color,x.o),iota(filter(filter(filter(filter(filter(x.s, green), size2), size1), green), or[rectangle,triangle])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size2;4:size1;4:green;4:or[%s,%s];4:rectangle;4:triangle
'λx.apply(and[yellow,and[size2,circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:and[%s,%s];4:size2;4:circle;1:%s.o;2:x
'λx.apply(iff[yellow,size1],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:yellow;4:size1;1:iota(%s);3:%s.s;2:x
'λx.forall(circle,filter(filter(x.s, triangle), yellow))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:yellow
'λx.apply(and[and[and[size2,circle],yellow],size1],iota(filter(filter(filter(x.s, or[and[yellow,apply(same_shape,iota(filter(x.s, rectangle)))],circle]), yellow), rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:circle;4:yellow;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle;4:yellow;4:rectangle
'λx.apply(size3,iota(filter(filter(x.s, circle), and[circle,yellow])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:circle;4:yellow
'λx.apply(nor[blue,rectangle],iota(filter(filter(filter(filter(x.s, rectangle), blue), circle), apply(same_size,iota(filter(x.s, size2))))))'	0:apply(%s,%s);4:nor[%s,%s];4:blue;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue;4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.empty(filter(filter(x.s, size2), or[yellow,and[and[size1,apply(size-lt,iota(filter(filter(filter(filter(filter(x.s, rectangle), triangle), green), size3), apply(same_color,x.o))))],and[apply(same_color,x.o),and[size2,rectangle]]]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:yellow;4:and[%s,%s];4:and[%s,%s];4:size1;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle;4:green;4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:size2;4:rectangle
'λx.exists(size3, filter(x.s, size3))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(and[size1,apply(same_shape,x.o)],iota(filter(x.s, and[size1,nand[and[apply(same_size,x.o),apply(same_size,x.o)],circle]])))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:nand[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle
'λx.apply(apply(size-lt,iota(filter(x.s, green))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(filter(x.s, blue), yellow), size3)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow;4:size3
'λx.apply(circle,iota(filter(filter(filter(x.s, or[nand[nor[rectangle,triangle],not[size1]],yellow]), blue), yellow)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:nand[%s,%s];4:nor[%s,%s];4:rectangle;4:triangle;4:not[%s];4:size1;4:yellow;4:blue;4:yellow
'λx.apply(and[size1,and[triangle,rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:and[%s,%s];4:triangle;4:rectangle;1:%s.o;2:x
'λx.apply(nand[green,size3],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:green;4:size3;1:%s.o;2:x
'λx.empty(filter(filter(x.s, or[size2,circle]), not[apply(same_size,iota(x.s))]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:circle;4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(x.s), filter(filter(x.s, green), green))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:green
'λx.exists(and[apply(same_size,iota(filter(filter(x.s, not[green]), not[rectangle]))),circle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:not[%s];4:rectangle;4:circle;3:%s.s;2:x
'λx.exists(and[yellow,not[circle]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:yellow;4:not[%s];4:circle;3:%s.s;2:x
'λx.apply(implies[or[size2,rectangle],size1],iota(filter(filter(x.s, size1), triangle)))'	0:apply(%s,%s);4:implies[%s,%s];4:or[%s,%s];4:size2;4:rectangle;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle
'λx.apply(yellow,iota(filter(filter(filter(x.s, implies[circle,yellow]), apply(same_color,x.o)), size3)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:circle;4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3
'λx.apply(nor[apply(same_shape,iota(x.s)),yellow],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(x.s, green), triangle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:triangle
'λx.exists(and[and[yellow,or[nand[yellow,green],and[blue,triangle]]],or[size2,and[size3,size1]]], filter(filter(x.s, not[blue]), and[green,not[size2]]))'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:or[%s,%s];4:nand[%s,%s];4:yellow;4:green;4:and[%s,%s];4:blue;4:triangle;4:or[%s,%s];4:size2;4:and[%s,%s];4:size3;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:and[%s,%s];4:green;4:not[%s];4:size2
'λx.apply(iff[triangle,not[size2]],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:triangle;4:not[%s];4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(or[nand[not[size2],yellow],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:not[%s];4:size2;4:yellow;4:blue;1:%s.o;2:x
'λx.apply(or[and[size3,yellow],or[triangle,and[circle,circle]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size3;4:yellow;4:or[%s,%s];4:triangle;4:and[%s,%s];4:circle;4:circle;1:%s.o;2:x
'λx.apply(or[blue,yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:yellow;1:%s.o;2:x
'λx.apply(and[apply(size-gt,iota(x.s)),size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:size2;1:%s.o;2:x
'λx.forall(apply(same_shape,iota(x.s)),filter(x.s, green))'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(not[and[and[yellow,circle],and[size3,apply(same_color,x.o)]]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:circle;4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[size3,not[rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.apply(or[size1,size1],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:size1;1:iota(%s);3:%s.s;2:x
'λx.exists(rectangle, filter(filter(filter(x.s, rectangle), or[and[iff[yellow,rectangle],blue],rectangle]), size3))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:or[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:yellow;4:rectangle;4:blue;4:rectangle;4:size3
'λx.apply(triangle,iota(filter(filter(filter(filter(filter(x.s, not[blue]), yellow), size3), apply(same_shape,x.o)), yellow)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:yellow;4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow
'λx.apply(yellow,iota(filter(x.s, and[and[size3,or[circle,size1]],size1])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size3;4:or[%s,%s];4:circle;4:size1;4:size1
'λx.forall(apply(same_shape,iota(filter(x.s, apply(size-geq,iota(x.s))))),filter(x.s, size3))'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(implies[circle,yellow], x.s)'	0:exists(%s, %s);4:implies[%s,%s];4:circle;4:yellow;3:%s.s;2:x
'λx.apply(or[size2,and[and[blue,yellow],rectangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:blue;4:yellow;4:rectangle;1:%s.o;2:x
'λx.forall(size3,filter(filter(x.s, circle), or[triangle,and[triangle,triangle]]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:triangle;4:and[%s,%s];4:triangle;4:triangle
'λx.contains(x.o, filter(filter(x.s, or[size3,yellow]), size2))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:yellow;4:size2
'λx.apply(apply(same_size,iota(filter(filter(filter(filter(filter(filter(x.s, not[size2]), blue), size2), rectangle), nand[circle,not[green]]), and[size3,yellow]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:blue;4:size2;4:rectangle;4:nand[%s,%s];4:circle;4:not[%s];4:green;4:and[%s,%s];4:size3;4:yellow;1:%s.o;2:x
'λx.apply(not[yellow],iota(filter(x.s, and[rectangle,or[and[green,size2],blue]])))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:green;4:size2;4:blue
'λx.exists(apply(same_color,iota(filter(x.s, and[apply(same_shape,iota(x.s)),nand[blue,circle]]))), filter(x.s, size3))'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:nand[%s,%s];4:blue;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(and[not[or[blue,circle]],and[and[blue,green],green]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:or[%s,%s];4:blue;4:circle;4:and[%s,%s];4:and[%s,%s];4:blue;4:green;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[triangle,nor[yellow,rectangle]],and[size2,yellow]],iota(filter(filter(filter(x.s, size3), green), apply(size-leq,iota(x.s)))))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:nor[%s,%s];4:yellow;4:rectangle;4:and[%s,%s];4:size2;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size1,or[apply(same_shape,iota(filter(x.s, blue))),triangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle;1:%s.o;2:x
'λx.apply(and[apply(size-geq,iota(filter(filter(x.s, size2), and[iff[and[circle,rectangle],not[or[size1,green]]],iff[green,or[rectangle,blue]]]))),size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:circle;4:rectangle;4:not[%s];4:or[%s,%s];4:size1;4:green;4:iff[%s,%s];4:green;4:or[%s,%s];4:rectangle;4:blue;4:size3;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(filter(x.s, triangle), and[apply(size-lt,x.o),not[nand[yellow,yellow]]]), size1)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:not[%s];4:nand[%s,%s];4:yellow;4:yellow;4:size1
'λx.apply(and[or[size2,size3],size1],iota(filter(filter(x.s, or[size3,triangle]), rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size2;4:size3;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:triangle;4:rectangle
'λx.apply(apply(same_size,x.o),iota(filter(filter(x.s, apply(same_size,iota(filter(x.s, size2)))), triangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:triangle
'λx.forall(iff[nor[size1,or[yellow,rectangle]],and[triangle,size3]],x.s)'	0:forall(%s,%s);4:iff[%s,%s];4:nor[%s,%s];4:size1;4:or[%s,%s];4:yellow;4:rectangle;4:and[%s,%s];4:triangle;4:size3;3:%s.s;2:x
'λx.apply(or[iff[size2,size2],circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:iff[%s,%s];4:size2;4:size2;4:circle;1:%s.o;2:x
'λx.exists(size1, filter(x.s, or[size1,not[size2]]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:not[%s];4:size2
'λx.apply(implies[iff[apply(size-geq,iota(x.s)),nand[green,triangle]],circle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:iff[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:nand[%s,%s];4:green;4:triangle;4:circle;1:%s.o;2:x
'λx.apply(or[apply(size-leq,x.o),and[size2,size1]],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:and[%s,%s];4:size2;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(and[apply(size-gt,x.o),size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:size1;1:iota(%s);3:%s.s;2:x
'λx.exists(nand[yellow,nor[size2,and[rectangle,green]]], filter(x.s, size3))'	0:exists(%s, %s);4:nand[%s,%s];4:yellow;4:nor[%s,%s];4:size2;4:and[%s,%s];4:rectangle;4:green;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(or[not[yellow],size1], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:not[%s];4:yellow;4:size1;3:%s.s;2:x
'λx.apply(or[size1,circle],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.forall(green,filter(filter(filter(x.s, apply(same_shape,iota(x.s))), size1), apply(size-gt,x.o)))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.apply(not[not[nand[blue,apply(same_size,iota(filter(x.s, and[triangle,size2])))]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:nand[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:size2;1:%s.o;2:x
'λx.exists(size2, filter(filter(filter(x.s, circle), triangle), or[size3,green]))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle;4:or[%s,%s];4:size3;4:green
'λx.apply(not[or[not[blue],and[size1,size2]]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:not[%s];4:blue;4:and[%s,%s];4:size1;4:size2;1:%s.o;2:x
'λx.apply(or[yellow,size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:size3;1:%s.o;2:x
'λx.apply(not[size1],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(apply(same_shape,x.o),iota(filter(x.s, circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.forall(blue,filter(filter(x.s, circle), yellow))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow
'λx.apply(size3,iota(filter(filter(x.s, yellow), size2)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2
'λx.apply(yellow,iota(filter(filter(x.s, apply(same_size,x.o)), triangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle
'λx.forall(green,x.s)'	0:forall(%s,%s);4:green;3:%s.s;2:x
'λx.apply(not[yellow],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(and[yellow,not[size1]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:not[%s];4:size1;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(x.s, and[or[rectangle,green],and[apply(same_color,iota(x.s)),not[apply(same_color,iota(x.s))]]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:green;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(not[or[circle,and[blue,or[size3,yellow]]]],iota(filter(x.s, and[triangle,and[size3,and[apply(same_color,x.o),size3]]])))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:circle;4:and[%s,%s];4:blue;4:or[%s,%s];4:size3;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:and[%s,%s];4:size3;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3
'λx.apply(and[apply(size-leq,iota(filter(filter(x.s, blue), apply(same_color,x.o)))),circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;1:%s.o;2:x
'λx.exists(apply(same_shape,iota(filter(x.s, iff[triangle,blue]))), filter(x.s, size2))'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:triangle;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(or[yellow,size3],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:size3;1:iota(%s);3:%s.s;2:x
'λx.forall(apply(size-leq,x.o),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:size-leq;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(apply(same_size,iota(filter(x.s, apply(same_size,iota(x.s))))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(nor[not[rectangle],green],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:not[%s];4:rectangle;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(or[triangle,circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:circle;1:%s.o;2:x
'λx.empty(filter(filter(x.s, yellow), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2
'λx.exists(or[rectangle,blue], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:rectangle;4:blue;3:%s.s;2:x
'λx.apply(and[triangle,circle],iota(filter(filter(x.s, size2), size2)))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2
'λx.exists(size1, filter(filter(filter(filter(x.s, green), circle), rectangle), and[triangle,not[circle]]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:circle;4:rectangle;4:and[%s,%s];4:triangle;4:not[%s];4:circle
'λx.apply(nor[size2,and[green,and[triangle,and[nor[size3,and[yellow,implies[circle,rectangle]]],triangle]]]],iota(filter(x.s, and[size3,green])))'	0:apply(%s,%s);4:nor[%s,%s];4:size2;4:and[%s,%s];4:green;4:and[%s,%s];4:triangle;4:and[%s,%s];4:nor[%s,%s];4:size3;4:and[%s,%s];4:yellow;4:implies[%s,%s];4:circle;4:rectangle;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:green
'λx.apply(and[and[apply(same_size,x.o),and[circle,not[iff[or[and[apply(same_size,x.o),green],yellow],yellow]]]],not[circle]],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:circle;4:not[%s];4:iff[%s,%s];4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;4:yellow;4:yellow;4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.contains(iota(filter(x.s, yellow)), filter(filter(filter(x.s, and[yellow,rectangle]), size2), not[not[or[apply(same_shape,iota(x.s)),size3]]]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:rectangle;4:size2;4:not[%s];4:not[%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size3
'λx.apply(and[circle,or[nor[not[not[and[size2,rectangle]]],or[green,size1]],size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:or[%s,%s];4:nor[%s,%s];4:not[%s];4:not[%s];4:and[%s,%s];4:size2;4:rectangle;4:or[%s,%s];4:green;4:size1;4:size3;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(x.s, not[nand[rectangle,yellow]]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:nand[%s,%s];4:rectangle;4:yellow;1:%s.o;2:x
'λx.apply(size3,iota(filter(x.s, and[and[or[and[or[yellow,circle],size3],blue],or[or[iff[nor[nand[not[circle],rectangle],not[and[not[blue],apply(same_color,x.o)]]],and[yellow,size2]],green],iff[and[size3,and[circle,size1]],circle]]],size3])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:yellow;4:circle;4:size3;4:blue;4:or[%s,%s];4:or[%s,%s];4:iff[%s,%s];4:nor[%s,%s];4:nand[%s,%s];4:not[%s];4:circle;4:rectangle;4:not[%s];4:and[%s,%s];4:not[%s];4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:yellow;4:size2;4:green;4:iff[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:circle;4:size1;4:circle;4:size3
'λx.apply(size1,iota(filter(filter(x.s, rectangle), and[size1,size3])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:size1;4:size3
'λx.apply(apply(size-lt,x.o),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(or[or[triangle,blue],iff[apply(same_size,iota(x.s)),and[not[yellow],size1]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:triangle;4:blue;4:iff[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:yellow;4:size1;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, and[or[size3,size2],and[triangle,yellow]]), not[yellow])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:size3;4:size2;4:and[%s,%s];4:triangle;4:yellow;4:not[%s];4:yellow
'λx.apply(and[size3,or[yellow,green]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:or[%s,%s];4:yellow;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[green,size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:size3;1:%s.o;2:x
'λx.forall(apply(size-leq,iota(x.s)),filter(x.s, yellow))'	0:forall(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(and[circle,size1],iota(filter(x.s, not[blue])))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.apply(size3,iota(filter(x.s, and[rectangle,and[rectangle,size2]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:rectangle;4:size2
'λx.forall(apply(size-geq,iota(filter(x.s, size2))),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;3:%s.s;2:x
'λx.apply(iff[triangle,not[nor[or[and[blue,or[size2,yellow]],triangle],and[rectangle,size2]]]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:triangle;4:not[%s];4:nor[%s,%s];4:or[%s,%s];4:and[%s,%s];4:blue;4:or[%s,%s];4:size2;4:yellow;4:triangle;4:and[%s,%s];4:rectangle;4:size2;1:%s.o;2:x
'λx.apply(implies[circle,rectangle],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:circle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.forall(or[iff[not[rectangle],size2],size2],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:iff[%s,%s];4:not[%s];4:rectangle;4:size2;4:size2;3:%s.s;2:x
'λx.contains(iota(filter(x.s, circle)), filter(x.s, apply(same_size,x.o)))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.exists(not[not[apply(same_shape,iota(filter(filter(x.s, not[blue]), size3)))]], x.s)'	0:exists(%s, %s);4:not[%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:size3;3:%s.s;2:x
'λx.exists(blue, filter(filter(filter(filter(x.s, iff[size3,and[rectangle,apply(same_size,iota(filter(x.s, green)))]]), yellow), size2), apply(same_size,x.o)))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size3;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow;4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, circle), and[not[circle],not[rectangle]])), filter(filter(x.s, apply(same_shape,x.o)), circle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:not[%s];4:circle;4:not[%s];4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle
'λx.apply(and[apply(same_shape,x.o),and[blue,green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:blue;4:green;1:%s.o;2:x
'λx.contains(iota(filter(x.s, and[size2,or[triangle,rectangle]])), filter(x.s, size3))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:or[%s,%s];4:triangle;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(nand[size2,size1],iota(filter(x.s, green)))'	0:apply(%s,%s);4:nand[%s,%s];4:size2;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.contains(x.o, filter(filter(filter(filter(x.s, or[green,and[size1,size2]]), green), circle), yellow))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:and[%s,%s];4:size1;4:size2;4:green;4:circle;4:yellow
'λx.apply(implies[blue,yellow],iota(filter(filter(filter(x.s, size3), apply(same_shape,x.o)), apply(same_size,iota(x.s)))))'	0:apply(%s,%s);4:implies[%s,%s];4:blue;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[or[iff[green,iff[rectangle,blue]],triangle],rectangle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:or[%s,%s];4:iff[%s,%s];4:green;4:iff[%s,%s];4:rectangle;4:blue;4:triangle;4:rectangle;1:%s.o;2:x
'λx.forall(size2,filter(x.s, and[and[circle,rectangle],and[circle,green]]))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:circle;4:rectangle;4:and[%s,%s];4:circle;4:green
'λx.exists(and[not[green],nor[size1,apply(size-gt,iota(x.s))]], filter(x.s, or[or[nor[and[triangle,size1],blue],yellow],implies[nand[and[rectangle,apply(same_shape,x.o)],size3],green]]))'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:green;4:nor[%s,%s];4:size1;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:triangle;4:size1;4:blue;4:yellow;4:implies[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3;4:green
'λx.apply(yellow,iota(filter(filter(x.s, not[nand[blue,nor[triangle,yellow]]]), or[size1,blue])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:nand[%s,%s];4:blue;4:nor[%s,%s];4:triangle;4:yellow;4:or[%s,%s];4:size1;4:blue
'λx.contains(x.o, filter(filter(filter(x.s, blue), circle), apply(same_shape,x.o)))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(not[triangle],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(x.s, triangle), green)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green;3:%s.s;2:x
'λx.forall(size3,filter(x.s, not[size3]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3
'λx.forall(implies[blue,not[yellow]],filter(x.s, size3))'	0:forall(%s,%s);4:implies[%s,%s];4:blue;4:not[%s];4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.forall(rectangle,filter(filter(filter(x.s, size1), apply(same_size,x.o)), size2))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2
'λx.exists(or[apply(same_color,x.o),green], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green;3:%s.s;2:x
'λx.contains(iota(x.s), filter(filter(filter(filter(filter(filter(x.s, and[blue,nor[green,and[size3,circle]]]), not[nor[green,and[size2,size1]]]), rectangle), or[nor[size1,not[size2]],and[not[or[size2,rectangle]],size1]]), not[yellow]), yellow))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:nor[%s,%s];4:green;4:and[%s,%s];4:size3;4:circle;4:not[%s];4:nor[%s,%s];4:green;4:and[%s,%s];4:size2;4:size1;4:rectangle;4:or[%s,%s];4:nor[%s,%s];4:size1;4:not[%s];4:size2;4:and[%s,%s];4:not[%s];4:or[%s,%s];4:size2;4:rectangle;4:size1;4:not[%s];4:yellow;4:yellow
'λx.forall(not[size1],filter(filter(x.s, size2), rectangle))'	0:forall(%s,%s);4:not[%s];4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle
'λx.apply(and[not[and[apply(same_color,x.o),circle]],and[rectangle,size3]],iota(filter(filter(filter(x.s, blue), green), and[circle,yellow])))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;4:and[%s,%s];4:rectangle;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green;4:and[%s,%s];4:circle;4:yellow
'λx.apply(not[apply(size-geq,iota(x.s))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.forall(size3,filter(filter(x.s, apply(same_shape,iota(x.s))), and[green,and[blue,yellow]]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:green;4:and[%s,%s];4:blue;4:yellow
'λx.exists(and[rectangle,apply(size-lt,x.o)], filter(filter(filter(x.s, circle), circle), rectangle))'	0:exists(%s, %s);4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:circle;4:rectangle
'λx.exists(size1, filter(x.s, size2))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(and[rectangle,nor[and[blue,apply(same_color,iota(x.s))],size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:nor[%s,%s];4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size3;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(x.s, and[and[and[and[size2,and[size2,size2]],iff[and[apply(same_size,iota(filter(filter(filter(filter(x.s, or[blue,size2]), apply(size-geq,x.o)), circle), size3))),and[size2,not[size2]]],size2]],rectangle],size1]), and[apply(size-leq,iota(x.s)),yellow]), not[blue])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:size2;4:size2;4:iff[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:size2;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:circle;4:size3;4:and[%s,%s];4:size2;4:not[%s];4:size2;4:size2;4:rectangle;4:size1;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:yellow;4:not[%s];4:blue;3:%s.s;2:x
'λx.apply(and[and[not[size2],circle],size3],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size2;4:circle;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.contains(iota(filter(filter(x.s, or[apply(same_size,x.o),blue]), not[yellow])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;4:not[%s];4:yellow;3:%s.s;2:x
'λx.apply(and[and[rectangle,blue],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:rectangle;4:blue;4:blue;1:%s.o;2:x
'λx.apply(not[rectangle],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(not[size2],iota(filter(x.s, and[blue,rectangle])))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:rectangle
'λx.apply(not[yellow],iota(filter(filter(x.s, not[yellow]), green)))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:green
'λx.apply(apply(same_size,iota(filter(x.s, and[nand[blue,yellow],blue]))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nand[%s,%s];4:blue;4:yellow;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_size,iota(filter(x.s, and[or[size2,yellow],apply(same_shape,x.o)]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:size2;4:yellow;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.exists(and[green,rectangle], filter(x.s, apply(size-gt,x.o)))'	0:exists(%s, %s);4:and[%s,%s];4:green;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.apply(not[circle],iota(filter(filter(filter(x.s, yellow), size2), size3)))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2;4:size3
'λx.forall(size3,filter(filter(filter(x.s, size2), size3), green))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3;4:green
'λx.apply(not[and[not[rectangle],rectangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:rectangle;4:rectangle;1:%s.o;2:x
'λx.apply(and[rectangle,and[and[size3,size2],circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:size3;4:size2;4:circle;1:%s.o;2:x
'λx.apply(nor[size2,size3],iota(filter(filter(filter(x.s, not[and[apply(same_shape,x.o),triangle]]), and[circle,circle]), yellow)))'	0:apply(%s,%s);4:nor[%s,%s];4:size2;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle;4:and[%s,%s];4:circle;4:circle;4:yellow
'λx.apply(or[iff[size2,yellow],triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:iff[%s,%s];4:size2;4:yellow;4:triangle;1:%s.o;2:x
'λx.apply(implies[and[triangle,size1],blue],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:triangle;4:size1;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(not[implies[blue,rectangle]],iota(filter(x.s, green)))'	0:apply(%s,%s);4:not[%s];4:implies[%s,%s];4:blue;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[nor[and[and[size2,blue],triangle],nand[size2,size2]],size1],iota(filter(filter(filter(x.s, apply(size-lt,x.o)), implies[and[nor[circle,blue],rectangle],not[not[not[green]]]]), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:blue;4:triangle;4:nand[%s,%s];4:size2;4:size2;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:implies[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:circle;4:blue;4:rectangle;4:not[%s];4:not[%s];4:not[%s];4:green;4:blue
'λx.apply(and[or[size1,green],not[and[rectangle,size1]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size1;4:green;4:not[%s];4:and[%s,%s];4:rectangle;4:size1;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, size2), or[blue,rectangle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:blue;4:rectangle
'λx.apply(size1,iota(filter(x.s, or[size2,and[triangle,rectangle]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:and[%s,%s];4:triangle;4:rectangle
'λx.forall(and[size1,triangle],filter(x.s, apply(same_color,iota(filter(filter(filter(x.s, green), nor[and[size3,blue],size2]), circle)))))'	0:forall(%s,%s);4:and[%s,%s];4:size1;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:nor[%s,%s];4:and[%s,%s];4:size3;4:blue;4:size2;4:circle
'λx.exists(not[triangle], filter(filter(filter(x.s, and[iff[nand[blue,size2],circle],circle]), apply(same_size,iota(filter(x.s, triangle)))), rectangle))'	0:exists(%s, %s);4:not[%s];4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:iff[%s,%s];4:nand[%s,%s];4:blue;4:size2;4:circle;4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle
'λx.apply(and[size2,not[and[triangle,yellow]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:not[%s];4:and[%s,%s];4:triangle;4:yellow;1:%s.o;2:x
'λx.apply(nor[implies[circle,not[apply(same_color,x.o)]],yellow],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:implies[%s,%s];4:circle;4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(x.s, apply(size-geq,x.o)), green)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:green
'λx.empty(filter(x.s, iff[nand[size2,apply(size-leq,iota(x.s))],circle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:nand[%s,%s];4:size2;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:circle
'λx.apply(yellow,iota(filter(filter(filter(filter(filter(filter(filter(x.s, nor[size1,or[and[size1,and[yellow,blue]],and[apply(size-geq,iota(x.s)),triangle]]]), size2), yellow), size3), nor[yellow,size1]), blue), triangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size1;4:or[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:yellow;4:blue;4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:triangle;4:size2;4:yellow;4:size3;4:nor[%s,%s];4:yellow;4:size1;4:blue;4:triangle
'λx.contains(iota(filter(filter(x.s, size2), not[green])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:not[%s];4:green;3:%s.s;2:x
'λx.apply(and[not[green],apply(size-leq,iota(x.s))],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:green;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(filter(x.s, not[not[rectangle]]), circle), size1), and[or[size2,size3],circle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:rectangle;4:circle;4:size1;4:and[%s,%s];4:or[%s,%s];4:size2;4:size3;4:circle
'λx.forall(or[and[not[yellow],and[green,not[and[yellow,or[apply(same_size,iota(filter(filter(filter(filter(filter(x.s, iff[yellow,circle]), iff[size3,circle]), and[blue,nor[size3,and[yellow,size3]]]), rectangle), and[size2,and[size3,size2]]))),and[size2,circle]]]]]],circle],filter(filter(filter(x.s, and[and[size3,nor[rectangle,size2]],green]), circle), green))'	0:forall(%s,%s);4:or[%s,%s];4:and[%s,%s];4:not[%s];4:yellow;4:and[%s,%s];4:green;4:not[%s];4:and[%s,%s];4:yellow;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:yellow;4:circle;4:iff[%s,%s];4:size3;4:circle;4:and[%s,%s];4:blue;4:nor[%s,%s];4:size3;4:and[%s,%s];4:yellow;4:size3;4:rectangle;4:and[%s,%s];4:size2;4:and[%s,%s];4:size3;4:size2;4:and[%s,%s];4:size2;4:circle;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size3;4:nor[%s,%s];4:rectangle;4:size2;4:green;4:circle;4:green
'λx.exists(not[or[implies[nand[apply(same_size,x.o),and[rectangle,and[and[size2,blue],and[apply(same_color,iota(x.s)),or[circle,size2]]]]],circle],circle]], x.s)'	0:exists(%s, %s);4:not[%s];4:or[%s,%s];4:implies[%s,%s];4:nand[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:size2;4:blue;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:size2;4:circle;4:circle;3:%s.s;2:x
'λx.exists(size1, filter(x.s, implies[or[rectangle,and[size1,size1]],apply(same_shape,iota(x.s))]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:or[%s,%s];4:rectangle;4:and[%s,%s];4:size1;4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(x.s, not[and[and[size3,size2],nand[and[blue,green],rectangle]]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:size2;4:nand[%s,%s];4:and[%s,%s];4:blue;4:green;4:rectangle
'λx.apply(and[or[triangle,yellow],apply(size-lt,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:triangle;4:yellow;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.contains(iota(filter(x.s, circle)), filter(filter(filter(filter(x.s, circle), and[triangle,size1]), triangle), green))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:triangle;4:size1;4:triangle;4:green
'λx.apply(and[yellow,rectangle],iota(filter(x.s, and[yellow,triangle])))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:triangle
'λx.empty(filter(filter(filter(filter(filter(x.s, not[yellow]), or[triangle,and[not[yellow],apply(same_color,x.o)]]), size1), and[size2,blue]), and[green,size1]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:or[%s,%s];4:triangle;4:and[%s,%s];4:not[%s];4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1;4:and[%s,%s];4:size2;4:blue;4:and[%s,%s];4:green;4:size1
'λx.apply(and[implies[not[circle],size1],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:not[%s];4:circle;4:size1;4:triangle;1:%s.o;2:x
'λx.forall(size1,filter(x.s, rectangle))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.contains(iota(filter(filter(x.s, green), and[triangle,green])), filter(x.s, size1))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:triangle;4:green;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(and[size3,not[nand[green,or[and[not[or[size3,and[apply(same_color,x.o),circle]]],nand[and[blue,not[rectangle]],not[rectangle]]],nand[triangle,green]]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:not[%s];4:nand[%s,%s];4:green;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:or[%s,%s];4:size3;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;4:nand[%s,%s];4:and[%s,%s];4:blue;4:not[%s];4:rectangle;4:not[%s];4:rectangle;4:nand[%s,%s];4:triangle;4:green;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, and[green,or[or[green,size1],nor[not[and[green,and[not[size1],circle]]],rectangle]]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:or[%s,%s];4:or[%s,%s];4:green;4:size1;4:nor[%s,%s];4:not[%s];4:and[%s,%s];4:green;4:and[%s,%s];4:not[%s];4:size1;4:circle;4:rectangle
'λx.apply(or[and[apply(same_color,x.o),rectangle],triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle;4:triangle;1:%s.o;2:x
'λx.contains(iota(filter(x.s, rectangle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;3:%s.s;2:x
'λx.apply(and[size2,or[not[not[iff[blue,size2]]],blue]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:or[%s,%s];4:not[%s];4:not[%s];4:iff[%s,%s];4:blue;4:size2;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(filter(x.s, or[nor[triangle,blue],size1]), and[and[and[green,apply(same_size,iota(filter(filter(x.s, apply(same_color,x.o)), apply(size-leq,x.o))))],not[size2]],circle]), yellow)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:nor[%s,%s];4:triangle;4:blue;4:size1;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:not[%s];4:size2;4:circle;4:yellow
'λx.apply(or[rectangle,and[not[not[yellow]],circle]],iota(filter(x.s, green)))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:and[%s,%s];4:not[%s];4:not[%s];4:yellow;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.exists(implies[apply(size-leq,x.o),or[size3,size3]], filter(filter(filter(filter(filter(filter(filter(filter(filter(x.s, or[triangle,rectangle]), nand[not[and[circle,not[yellow]]],not[and[and[triangle,circle],size2]]]), apply(size-geq,iota(x.s))), apply(size-gt,iota(x.s))), rectangle), size2), rectangle), iff[size1,apply(same_color,x.o)]), yellow))'	0:exists(%s, %s);4:implies[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:or[%s,%s];4:size3;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:rectangle;4:nand[%s,%s];4:not[%s];4:and[%s,%s];4:circle;4:not[%s];4:yellow;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:circle;4:size2;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:rectangle;4:size2;4:rectangle;4:iff[%s,%s];4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow
'λx.apply(and[size3,and[and[apply(same_color,x.o),nor[not[blue],iff[green,and[and[blue,apply(size-lt,x.o)],blue]]]],and[circle,nand[and[and[green,and[triangle,yellow]],circle],size1]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:nor[%s,%s];4:not[%s];4:blue;4:iff[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:blue;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:blue;4:and[%s,%s];4:circle;4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:triangle;4:yellow;4:circle;4:size1;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, rectangle), and[and[nand[size2,size1],circle],size3])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:size2;4:size1;4:circle;4:size3
'λx.forall(apply(same_color,iota(filter(x.s, and[size2,size2]))),filter(filter(x.s, size1), circle))'	0:forall(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle
'λx.apply(and[size3,triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(x.s, nor[and[apply(same_size,iota(filter(x.s, apply(same_size,iota(filter(x.s, circle)))))),circle],or[and[and[not[blue],size2],triangle],blue]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:circle;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:blue;4:size2;4:triangle;4:blue
'λx.exists(and[size3,not[circle]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:size3;4:not[%s];4:circle;3:%s.s;2:x
'λx.apply(rectangle,iota(filter(x.s, size3)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(or[yellow,and[iff[circle,size2],rectangle]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:and[%s,%s];4:iff[%s,%s];4:circle;4:size2;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[circle,and[size3,triangle]],iota(filter(filter(filter(filter(filter(filter(x.s, not[size1]), yellow), green), size1), green), triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:and[%s,%s];4:size3;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:yellow;4:green;4:size1;4:green;4:triangle
'λx.exists(size1, filter(filter(x.s, circle), rectangle))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle
'λx.apply(apply(same_size,iota(filter(filter(filter(filter(filter(filter(filter(filter(x.s, and[iff[iff[size3,and[green,triangle]],circle],blue]), apply(same_color,iota(filter(x.s, implies[size2,rectangle])))), yellow), yellow), size1), rectangle), circle), implies[size3,size3]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:iff[%s,%s];4:iff[%s,%s];4:size3;4:and[%s,%s];4:green;4:triangle;4:circle;4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size2;4:rectangle;4:yellow;4:yellow;4:size1;4:rectangle;4:circle;4:implies[%s,%s];4:size3;4:size3;1:%s.o;2:x
'λx.apply(and[and[circle,triangle],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:triangle;4:size2;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, yellow), green)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green
'λx.apply(and[not[iff[circle,rectangle]],not[and[or[rectangle,green],rectangle]]],iota(filter(filter(filter(filter(filter(filter(filter(filter(filter(filter(filter(x.s, size3), triangle), rectangle), not[green]), not[and[size1,green]]), size1), apply(same_shape,iota(filter(filter(x.s, apply(size-geq,x.o)), yellow)))), circle), apply(same_color,iota(x.s))), or[not[and[size2,triangle]],yellow]), size3)))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:iff[%s,%s];4:circle;4:rectangle;4:not[%s];4:and[%s,%s];4:or[%s,%s];4:rectangle;4:green;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle;4:rectangle;4:not[%s];4:green;4:not[%s];4:and[%s,%s];4:size1;4:green;4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:yellow;4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:size2;4:triangle;4:yellow;4:size3
'λx.apply(size2,iota(x.s))'	0:apply(%s,%s);4:size2;1:iota(%s);3:%s.s;2:x
'λx.exists(apply(size-gt,x.o), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:size-gt;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(not[or[blue,and[apply(size-geq,x.o),apply(same_size,x.o)]]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:blue;4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.exists(and[not[not[and[size3,not[apply(same_size,iota(filter(x.s, triangle)))]]]],size2], filter(x.s, apply(same_shape,x.o)))'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:not[%s];4:and[%s,%s];4:size3;4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(or[green,circle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(x.s, and[circle,apply(size-gt,x.o)]), size2)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:size2
'λx.forall(circle,filter(filter(x.s, not[green]), green))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:green
'λx.forall(rectangle,filter(filter(filter(filter(x.s, size1), and[or[blue,size1],yellow]), triangle), apply(size-gt,x.o)))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:or[%s,%s];4:blue;4:size1;4:yellow;4:triangle;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.apply(or[or[apply(size-gt,x.o),size1],and[nand[and[iff[not[size1],or[and[and[and[and[green,and[rectangle,size3]],green],green],not[triangle]],not[iff[size2,size3]]]],triangle],size2],circle]],iota(filter(filter(filter(x.s, yellow), size1), circle)))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:size1;4:and[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:not[%s];4:size1;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:rectangle;4:size3;4:green;4:green;4:not[%s];4:triangle;4:not[%s];4:iff[%s,%s];4:size2;4:size3;4:triangle;4:size2;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;4:circle
'λx.contains(iota(filter(x.s, and[iff[triangle,not[triangle]],rectangle])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:iff[%s,%s];4:triangle;4:not[%s];4:triangle;4:rectangle;3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(filter(filter(filter(filter(x.s, circle), or[circle,and[and[and[not[triangle],size3],apply(size-geq,iota(filter(filter(x.s, apply(size-gt,iota(x.s))), size3)))],green]]), green), size2), blue), or[size2,iff[green,size3]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:triangle;4:size3;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:size3;4:green;4:green;4:size2;4:blue;4:or[%s,%s];4:size2;4:iff[%s,%s];4:green;4:size3
'λx.empty(filter(filter(filter(filter(filter(filter(x.s, and[size1,not[rectangle]]), size1), implies[circle,blue]), size2), size3), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:not[%s];4:rectangle;4:size1;4:implies[%s,%s];4:circle;4:blue;4:size2;4:size3;4:circle
'λx.apply(and[circle,and[or[size1,and[or[size2,green],circle]],size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:and[%s,%s];4:or[%s,%s];4:size1;4:and[%s,%s];4:or[%s,%s];4:size2;4:green;4:circle;4:size2;1:%s.o;2:x
'λx.apply(size1,iota(filter(x.s, and[iff[implies[triangle,and[apply(same_color,x.o),size3]],size1],apply(same_shape,iota(filter(filter(filter(filter(x.s, triangle), and[green,green]), apply(size-leq,x.o)), implies[yellow,not[blue]])))])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:iff[%s,%s];4:implies[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3;4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:green;4:green;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:implies[%s,%s];4:yellow;4:not[%s];4:blue
'λx.apply(not[and[green,blue]],iota(filter(x.s, apply(same_size,iota(filter(filter(x.s, circle), and[size2,green]))))))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:green;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:size2;4:green
'λx.contains(x.o, filter(x.s, and[and[circle,yellow],triangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:circle;4:yellow;4:triangle
'λx.apply(not[and[size3,rectangle]],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size3;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.exists(size2, filter(filter(x.s, rectangle), and[size2,or[blue,rectangle]]))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:size2;4:or[%s,%s];4:blue;4:rectangle
'λx.apply(and[and[yellow,size1],apply(size-leq,x.o)],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:size1;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.forall(green,filter(x.s, not[not[and[green,or[nand[implies[size2,or[nand[triangle,size1],not[circle]]],or[and[size2,implies[rectangle,and[yellow,size1]]],and[blue,not[circle]]]],and[triangle,circle]]]]]))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:and[%s,%s];4:green;4:or[%s,%s];4:nand[%s,%s];4:implies[%s,%s];4:size2;4:or[%s,%s];4:nand[%s,%s];4:triangle;4:size1;4:not[%s];4:circle;4:or[%s,%s];4:and[%s,%s];4:size2;4:implies[%s,%s];4:rectangle;4:and[%s,%s];4:yellow;4:size1;4:and[%s,%s];4:blue;4:not[%s];4:circle;4:and[%s,%s];4:triangle;4:circle
'λx.apply(size2,iota(filter(filter(filter(filter(x.s, green), size3), not[or[or[or[or[triangle,or[yellow,size2]],green],size3],size2]]), and[size3,rectangle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size3;4:not[%s];4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:triangle;4:or[%s,%s];4:yellow;4:size2;4:green;4:size3;4:size2;4:and[%s,%s];4:size3;4:rectangle
'λx.apply(size2,iota(filter(filter(x.s, size3), size1)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size1
'λx.apply(and[rectangle,size2],iota(filter(filter(x.s, yellow), circle)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle
'λx.empty(filter(filter(filter(filter(x.s, apply(same_shape,iota(x.s))), green), apply(same_size,x.o)), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow
'λx.exists(or[apply(size-leq,x.o),apply(size-leq,iota(x.s))], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(or[size1,and[and[triangle,size2],size3]],iota(filter(filter(x.s, and[green,and[size1,rectangle]]), not[not[green]])))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:triangle;4:size2;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:and[%s,%s];4:size1;4:rectangle;4:not[%s];4:not[%s];4:green
'λx.apply(rectangle,iota(filter(x.s, and[or[apply(same_color,iota(filter(filter(filter(filter(filter(filter(filter(filter(x.s, circle), apply(same_shape,iota(x.s))), size3), green), size2), blue), and[or[size3,not[circle]],rectangle]), rectangle))),or[triangle,implies[blue,size3]]],rectangle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size3;4:green;4:size2;4:blue;4:and[%s,%s];4:or[%s,%s];4:size3;4:not[%s];4:circle;4:rectangle;4:rectangle;4:or[%s,%s];4:triangle;4:implies[%s,%s];4:blue;4:size3;4:rectangle
'λx.apply(and[apply(same_color,x.o),circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;1:%s.o;2:x
'λx.exists(and[apply(same_color,x.o),not[green]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:green;3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(filter(filter(x.s, rectangle), or[size1,and[and[and[yellow,and[blue,green]],size3],triangle]]), triangle), and[and[yellow,blue],rectangle])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:or[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:blue;4:green;4:size3;4:triangle;4:triangle;4:and[%s,%s];4:and[%s,%s];4:yellow;4:blue;4:rectangle
'λx.forall(and[yellow,size1],filter(filter(x.s, apply(size-leq,iota(filter(x.s, triangle)))), size3))'	0:forall(%s,%s);4:and[%s,%s];4:yellow;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3
'λx.apply(and[size1,size1],iota(filter(x.s, green)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[not[blue],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:blue;4:green;1:%s.o;2:x
'λx.apply(and[apply(same_color,iota(filter(filter(x.s, iff[implies[size2,green],size1]), or[rectangle,and[size1,triangle]]))),rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:implies[%s,%s];4:size2;4:green;4:size1;4:or[%s,%s];4:rectangle;4:and[%s,%s];4:size1;4:triangle;4:rectangle;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(x.s, yellow), and[size3,size1]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:size3;4:size1
'λx.apply(apply(same_shape,x.o),iota(filter(filter(filter(x.s, green), yellow), circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow;4:circle
'λx.apply(and[circle,apply(same_size,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, size2), circle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle
'λx.apply(size1,iota(filter(x.s, circle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[and[circle,or[or[size3,apply(same_size,x.o)],circle]],yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:or[%s,%s];4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_shape,iota(filter(x.s, triangle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;1:%s.o;2:x
'λx.apply(and[nor[green,nand[and[yellow,and[not[size3],rectangle]],yellow]],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:green;4:nand[%s,%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:not[%s];4:size3;4:rectangle;4:yellow;4:circle;1:%s.o;2:x
'λx.apply(apply(same_size,iota(filter(x.s, apply(same_size,x.o)))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(nand[size2,size3],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:size2;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(not[yellow],iota(filter(x.s, and[green,green])))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:green
'λx.apply(implies[and[yellow,and[rectangle,rectangle]],size1],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:rectangle;4:rectangle;4:size1;1:%s.o;2:x
'λx.apply(size3,iota(filter(x.s, not[size1])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1
'λx.contains(iota(filter(filter(x.s, rectangle), triangle)), filter(filter(x.s, and[circle,circle]), and[size3,size1]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:circle;4:and[%s,%s];4:size3;4:size1
'λx.apply(rectangle,iota(filter(filter(x.s, size2), not[or[not[size3],triangle]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:not[%s];4:or[%s,%s];4:not[%s];4:size3;4:triangle
'λx.exists(apply(same_color,iota(filter(x.s, size2))), filter(x.s, and[and[circle,circle],blue]))'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:circle;4:circle;4:blue
'λx.apply(triangle,iota(filter(filter(filter(x.s, or[size2,and[size3,green]]), rectangle), size3)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:and[%s,%s];4:size3;4:green;4:rectangle;4:size3
'λx.empty(filter(filter(filter(x.s, or[triangle,size1]), triangle), and[apply(size-geq,iota(x.s)),size2]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:size1;4:triangle;4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:size2
'λx.apply(or[size3,size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:size3;1:%s.o;2:x
'λx.apply(triangle,iota(filter(x.s, circle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.empty(filter(filter(filter(x.s, not[blue]), and[rectangle,size3]), and[or[rectangle,size2],rectangle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:and[%s,%s];4:rectangle;4:size3;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:size2;4:rectangle
'λx.empty(filter(filter(x.s, size1), and[iff[green,size3],not[circle]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:iff[%s,%s];4:green;4:size3;4:not[%s];4:circle
'λx.apply(nand[apply(same_size,x.o),size2],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size1,yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:yellow;1:%s.o;2:x
'λx.empty(filter(x.s, or[blue,triangle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:triangle
'λx.apply(and[iff[size2,triangle],and[size2,rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:size2;4:triangle;4:and[%s,%s];4:size2;4:rectangle;1:%s.o;2:x
'λx.empty(filter(x.s, or[blue,yellow]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:yellow
'λx.exists(rectangle, filter(x.s, not[apply(size-lt,iota(x.s))]))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x
'λx.apply(or[or[or[rectangle,and[or[and[apply(same_shape,iota(x.s)),blue],rectangle],green]],or[apply(same_color,x.o),size2]],or[yellow,rectangle]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:rectangle;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:blue;4:rectangle;4:green;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size2;4:or[%s,%s];4:yellow;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, blue), size3), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3;4:circle
'λx.apply(and[size1,and[triangle,size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:and[%s,%s];4:triangle;4:size3;1:%s.o;2:x
'λx.apply(and[and[apply(same_size,x.o),size1],yellow],iota(filter(filter(x.s, and[apply(size-geq,iota(filter(filter(x.s, iff[green,rectangle]), blue))),yellow]), nor[apply(same_size,iota(filter(filter(x.s, nand[rectangle,size3]), yellow))),apply(same_shape,x.o)])))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:green;4:rectangle;4:blue;4:yellow;4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:rectangle;4:size3;4:yellow;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.forall(iff[or[blue,apply(size-geq,iota(filter(filter(filter(filter(filter(x.s, and[and[triangle,nand[and[not[and[green,triangle]],triangle],apply(same_shape,x.o)]],size2]), not[and[nor[not[nand[or[size1,apply(size-leq,x.o)],and[rectangle,size2]]],blue],rectangle]]), size3), circle), and[size1,or[circle,yellow]])))],rectangle],x.s)'	0:forall(%s,%s);4:iff[%s,%s];4:or[%s,%s];4:blue;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:triangle;4:nand[%s,%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:green;4:triangle;4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2;4:not[%s];4:and[%s,%s];4:nor[%s,%s];4:not[%s];4:nand[%s,%s];4:or[%s,%s];4:size1;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:and[%s,%s];4:rectangle;4:size2;4:blue;4:rectangle;4:size3;4:circle;4:and[%s,%s];4:size1;4:or[%s,%s];4:circle;4:yellow;4:rectangle;3:%s.s;2:x
'λx.exists(size2, filter(filter(x.s, size1), blue))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue
'λx.apply(not[rectangle],iota(filter(x.s, apply(same_color,x.o))))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(filter(x.s, rectangle), triangle), blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle;4:blue
'λx.apply(not[apply(same_color,iota(x.s))],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.exists(apply(same_size,iota(filter(x.s, apply(same_size,x.o)))), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(and[size3,yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:yellow;1:%s.o;2:x
'λx.apply(or[triangle,and[nor[green,green],green]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:and[%s,%s];4:nor[%s,%s];4:green;4:green;4:green;1:iota(%s);3:%s.s;2:x
'λx.exists(and[and[yellow,green],green], filter(filter(filter(filter(x.s, size3), triangle), green), green))'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:green;4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle;4:green;4:green
'λx.apply(and[not[size3],triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size3;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(filter(filter(x.s, yellow), and[green,size2]), rectangle), size3), and[size1,or[size3,circle]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:green;4:size2;4:rectangle;4:size3;4:and[%s,%s];4:size1;4:or[%s,%s];4:size3;4:circle
'λx.exists(size1, filter(filter(filter(filter(x.s, rectangle), rectangle), size2), size1))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle;4:size2;4:size1
'λx.apply(circle,iota(filter(filter(x.s, circle), green)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green
'λx.apply(nor[and[size2,circle],yellow],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:size2;4:circle;4:yellow;1:%s.o;2:x
'λx.exists(size3, filter(filter(x.s, size1), and[apply(same_color,iota(x.s)),size3]))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size3
'λx.apply(or[and[size2,blue],rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size2;4:blue;4:rectangle;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, and[not[or[circle,circle]],or[and[size3,yellow],green]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:or[%s,%s];4:circle;4:circle;4:or[%s,%s];4:and[%s,%s];4:size3;4:yellow;4:green
'λx.exists(circle, filter(x.s, apply(size-gt,iota(x.s))))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(x.s, size2), yellow)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:yellow
'λx.apply(or[yellow,triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:triangle;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, apply(size-geq,x.o)), triangle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:triangle
'λx.apply(triangle,iota(filter(filter(filter(filter(x.s, circle), not[yellow]), rectangle), rectangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:yellow;4:rectangle;4:rectangle
'λx.empty(filter(filter(filter(filter(x.s, or[rectangle,yellow]), circle), circle), not[apply(same_color,iota(filter(x.s, size2)))]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:yellow;4:circle;4:circle;4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.contains(iota(filter(x.s, circle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(x.s, yellow), rectangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle
'λx.forall(size3,filter(filter(filter(filter(filter(filter(filter(filter(x.s, green), circle), rectangle), rectangle), triangle), triangle), triangle), iff[rectangle,and[blue,and[apply(same_size,iota(filter(filter(filter(filter(x.s, size1), and[circle,and[apply(same_color,iota(x.s)),circle]]), iff[and[yellow,size2],yellow]), size2))),blue]]]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:circle;4:rectangle;4:rectangle;4:triangle;4:triangle;4:triangle;4:iff[%s,%s];4:rectangle;4:and[%s,%s];4:blue;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:circle;4:iff[%s,%s];4:and[%s,%s];4:yellow;4:size2;4:yellow;4:size2;4:blue
'λx.contains(x.o, filter(filter(filter(x.s, size3), yellow), blue))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow;4:blue
'λx.forall(and[size3,nor[or[size3,size3],size3]],filter(filter(x.s, and[size3,and[apply(same_shape,iota(filter(filter(x.s, apply(size-lt,x.o)), size2))),rectangle]]), not[apply(same_color,iota(x.s))]))'	0:forall(%s,%s);4:and[%s,%s];4:size3;4:nor[%s,%s];4:or[%s,%s];4:size3;4:size3;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:size2;4:rectangle;4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(or[rectangle,not[yellow]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:not[%s];4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[green,size2],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:green;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size2,or[size2,and[apply(same_color,iota(x.s)),size1]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:or[%s,%s];4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size1;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(filter(x.s, and[apply(same_shape,iota(filter(x.s, not[circle]))),yellow]), circle), blue)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:yellow;4:circle;4:blue
'λx.apply(circle,iota(filter(x.s, and[blue,not[blue]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:not[%s];4:blue
'λx.forall(or[size3,size2],filter(x.s, and[blue,yellow]))'	0:forall(%s,%s);4:or[%s,%s];4:size3;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:yellow
'λx.apply(size1,iota(filter(filter(x.s, yellow), green)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green
'λx.apply(size1,iota(filter(filter(x.s, not[blue]), apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(x.s, and[green,yellow]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:yellow
'λx.apply(and[rectangle,not[and[yellow,size2]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:not[%s];4:and[%s,%s];4:yellow;4:size2;1:%s.o;2:x
'λx.apply(and[green,apply(same_size,x.o)],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(x.s, apply(same_color,x.o)))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(filter(x.s, nor[size1,circle]), blue))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size1;4:circle;4:blue;1:%s.o;2:x
'λx.exists(and[yellow,circle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:yellow;4:circle;3:%s.s;2:x
'λx.apply(green,iota(filter(x.s, not[and[and[and[iff[size3,rectangle],rectangle],size1],nand[yellow,yellow]]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:size3;4:rectangle;4:rectangle;4:size1;4:nand[%s,%s];4:yellow;4:yellow
'λx.apply(implies[blue,and[iff[blue,green],size3]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:blue;4:and[%s,%s];4:iff[%s,%s];4:blue;4:green;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[circle,iff[size3,triangle]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:circle;4:iff[%s,%s];4:size3;4:triangle;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, triangle), green)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green
'λx.empty(filter(x.s, or[yellow,and[yellow,rectangle]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:and[%s,%s];4:yellow;4:rectangle
'λx.apply(yellow,iota(filter(filter(x.s, size2), and[blue,green])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:blue;4:green
'λx.exists(and[rectangle,rectangle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:rectangle;4:rectangle;3:%s.s;2:x
'λx.apply(iff[yellow,triangle],iota(filter(filter(x.s, not[not[size2]]), size1)))'	0:apply(%s,%s);4:iff[%s,%s];4:yellow;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:size2;4:size1
'λx.apply(and[not[apply(size-lt,iota(filter(x.s, or[yellow,blue])))],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:blue;4:yellow;1:%s.o;2:x
'λx.apply(and[implies[blue,circle],or[size3,and[implies[size3,and[size2,triangle]],and[not[green],size2]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:blue;4:circle;4:or[%s,%s];4:size3;4:and[%s,%s];4:implies[%s,%s];4:size3;4:and[%s,%s];4:size2;4:triangle;4:and[%s,%s];4:not[%s];4:green;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_shape,iota(filter(x.s, size1))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;1:iota(%s);3:%s.s;2:x
'λx.exists(yellow, filter(x.s, green))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(yellow,iota(filter(x.s, or[and[blue,circle],green])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:blue;4:circle;4:green
'λx.empty(filter(filter(filter(x.s, blue), size3), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3;4:size1
'λx.apply(iff[or[and[iff[apply(same_color,iota(filter(x.s, or[green,or[rectangle,size2]]))),or[not[size3],size1]],and[or[rectangle,and[size2,green]],rectangle]],or[circle,and[size1,size3]]],triangle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:or[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:or[%s,%s];4:rectangle;4:size2;4:or[%s,%s];4:not[%s];4:size3;4:size1;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:and[%s,%s];4:size2;4:green;4:rectangle;4:or[%s,%s];4:circle;4:and[%s,%s];4:size1;4:size3;4:triangle;1:%s.o;2:x
'λx.apply(or[or[not[green],triangle],and[nor[and[nor[yellow,size1],blue],yellow],size2]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:not[%s];4:green;4:triangle;4:and[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:yellow;4:size1;4:blue;4:yellow;4:size2;1:iota(%s);3:%s.s;2:x
'λx.exists(green, filter(filter(x.s, or[and[yellow,or[apply(size-geq,iota(filter(x.s, not[size3]))),blue]],rectangle]), and[green,yellow]))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:yellow;4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;4:blue;4:rectangle;4:and[%s,%s];4:green;4:yellow
'λx.apply(size2,iota(filter(filter(filter(x.s, size1), size3), yellow)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size3;4:yellow
'λx.apply(or[or[apply(same_shape,x.o),circle],not[yellow]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;4:not[%s];4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(not[apply(same_shape,iota(filter(x.s, rectangle)))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;1:%s.o;2:x
'λx.apply(not[blue],iota(filter(filter(filter(filter(filter(x.s, size3), green), size1), yellow), implies[size1,triangle])))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green;4:size1;4:yellow;4:implies[%s,%s];4:size1;4:triangle
'λx.apply(or[size3,nand[not[size2],circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:nand[%s,%s];4:not[%s];4:size2;4:circle;1:%s.o;2:x
'λx.apply(not[not[and[circle,and[circle,circle]]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:circle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(x.s, blue)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[green,or[yellow,nor[circle,rectangle]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:or[%s,%s];4:yellow;4:nor[%s,%s];4:circle;4:rectangle;1:%s.o;2:x
'λx.empty(filter(x.s, and[rectangle,or[green,size3]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:green;4:size3
'λx.empty(filter(filter(x.s, blue), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green
'λx.apply(rectangle,iota(filter(filter(x.s, rectangle), triangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle
'λx.exists(or[and[size3,not[blue]],triangle], filter(filter(x.s, blue), size1))'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:size3;4:not[%s];4:blue;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1
'λx.apply(or[and[size1,or[and[yellow,size1],rectangle]],nor[size1,apply(same_color,iota(x.s))]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:and[%s,%s];4:yellow;4:size1;4:rectangle;4:nor[%s,%s];4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(filter(x.s, size2), size1), size1))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1;4:size1
'λx.forall(not[and[and[circle,and[apply(same_color,iota(x.s)),circle]],blue]],filter(x.s, triangle))'	0:forall(%s,%s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:circle;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(iff[green,not[size1]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:green;4:not[%s];4:size1;1:%s.o;2:x
'λx.apply(or[circle,green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:green;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(x.s, size2), size1), and[size1,blue]), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1;4:and[%s,%s];4:size1;4:blue;4:size1
'λx.empty(filter(filter(filter(filter(filter(x.s, apply(same_color,x.o)), and[or[rectangle,not[triangle]],yellow]), size1), yellow), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:not[%s];4:triangle;4:yellow;4:size1;4:yellow;4:green
'λx.apply(apply(same_shape,x.o),iota(filter(filter(x.s, not[size1]), iff[apply(size-gt,iota(filter(filter(x.s, nand[nor[size3,and[not[yellow],triangle]],circle]), circle))),and[yellow,and[nand[and[circle,circle],circle],and[blue,triangle]]]])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:iff[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:nor[%s,%s];4:size3;4:and[%s,%s];4:not[%s];4:yellow;4:triangle;4:circle;4:circle;4:and[%s,%s];4:yellow;4:and[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:circle;4:circle;4:circle;4:and[%s,%s];4:blue;4:triangle
'λx.forall(not[triangle],filter(x.s, and[and[not[not[and[and[and[green,blue],implies[green,apply(size-leq,iota(x.s))]],size2]]],size1],nand[apply(same_shape,x.o),and[size2,size3]]]))'	0:forall(%s,%s);4:not[%s];4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:blue;4:implies[%s,%s];4:green;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:size2;4:size1;4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:size2;4:size3
'λx.forall(size2,filter(filter(x.s, not[size2]), and[green,triangle]))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:and[%s,%s];4:green;4:triangle
'λx.apply(or[size2,size1],iota(filter(filter(filter(filter(x.s, size3), size1), size2), and[blue,size3])))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size1;4:size2;4:and[%s,%s];4:blue;4:size3
'λx.apply(and[circle,rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:rectangle;1:%s.o;2:x
'λx.apply(or[green,triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:triangle;1:%s.o;2:x
'λx.empty(filter(x.s, and[yellow,circle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:circle
'λx.apply(iff[triangle,size3],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:triangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(not[not[yellow]],iota(filter(filter(x.s, iff[triangle,and[size2,green]]), green)))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:triangle;4:and[%s,%s];4:size2;4:green;4:green
'λx.apply(rectangle,iota(filter(filter(x.s, or[rectangle,size1]), blue)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:size1;4:blue
'λx.apply(or[size2,size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:size3;1:%s.o;2:x
'λx.apply(not[nor[blue,triangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:nor[%s,%s];4:blue;4:triangle;1:%s.o;2:x
'λx.apply(implies[size2,triangle],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:size2;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(x.s, not[and[size3,size3]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:size3;4:size3
'λx.apply(size2,iota(filter(x.s, or[and[yellow,rectangle],green])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:yellow;4:rectangle;4:green
'λx.apply(rectangle,iota(filter(filter(x.s, and[green,and[and[triangle,circle],and[rectangle,rectangle]]]), size2)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:triangle;4:circle;4:and[%s,%s];4:rectangle;4:rectangle;4:size2
'λx.apply(apply(size-leq,iota(x.s)),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(apply(size-leq,x.o),iota(filter(filter(x.s, blue), size3)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3
'λx.apply(or[circle,green],iota(filter(x.s, not[and[and[triangle,and[apply(same_size,x.o),or[and[blue,blue],and[and[not[size1],circle],green]]]],green]])))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:and[%s,%s];4:blue;4:blue;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size1;4:circle;4:green;4:green
'λx.apply(triangle,iota(filter(x.s, and[size3,triangle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:triangle
'λx.apply(or[implies[and[iff[and[size2,and[size3,nand[triangle,or[triangle,size2]]]],or[blue,nor[triangle,size1]]],size2],apply(same_size,x.o)],rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:size3;4:nand[%s,%s];4:triangle;4:or[%s,%s];4:triangle;4:size2;4:or[%s,%s];4:blue;4:nor[%s,%s];4:triangle;4:size1;4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:rectangle;1:%s.o;2:x
'λx.contains(x.o, filter(filter(filter(x.s, triangle), and[blue,or[blue,green]]), not[apply(size-leq,iota(filter(x.s, circle)))]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:blue;4:or[%s,%s];4:blue;4:green;4:not[%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(or[apply(same_color,iota(x.s)),triangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, circle), rectangle), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle;4:size3
'λx.apply(and[triangle,rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size3,size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:size1;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, size2), nand[apply(size-leq,iota(x.s)),apply(size-geq,x.o)]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:nand[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.empty(filter(x.s, iff[rectangle,not[triangle]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:rectangle;4:not[%s];4:triangle
'λx.apply(not[or[nand[and[blue,size3],size2],rectangle]],iota(filter(x.s, or[or[nor[nor[size3,or[rectangle,and[rectangle,not[circle]]]],implies[apply(same_shape,iota(x.s)),green]],nor[size3,or[green,size2]]],circle])))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:blue;4:size3;4:size2;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:nor[%s,%s];4:size3;4:or[%s,%s];4:rectangle;4:and[%s,%s];4:rectangle;4:not[%s];4:circle;4:implies[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:green;4:nor[%s,%s];4:size3;4:or[%s,%s];4:green;4:size2;4:circle
'λx.apply(circle,iota(filter(x.s, not[and[nor[implies[not[and[yellow,yellow]],and[size2,and[circle,circle]]],and[or[nand[green,blue],or[or[or[size2,and[size3,and[size1,apply(same_color,x.o)]]],apply(same_color,iota(x.s))],yellow]],apply(same_shape,x.o)]],green]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:nor[%s,%s];4:implies[%s,%s];4:not[%s];4:and[%s,%s];4:yellow;4:yellow;4:and[%s,%s];4:size2;4:and[%s,%s];4:circle;4:circle;4:and[%s,%s];4:or[%s,%s];4:nand[%s,%s];4:green;4:blue;4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:size2;4:and[%s,%s];4:size3;4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green
'λx.apply(or[not[yellow],rectangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:yellow;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(x.s, blue), apply(same_size,x.o))))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(filter(x.s, green), and[and[size3,size1],triangle]), and[and[size3,triangle],not[blue]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:and[%s,%s];4:size3;4:size1;4:triangle;4:and[%s,%s];4:and[%s,%s];4:size3;4:triangle;4:not[%s];4:blue
'λx.apply(or[green,and[size2,or[or[green,blue],nand[apply(size-gt,iota(x.s)),or[triangle,not[and[not[or[triangle,rectangle]],apply(same_size,iota(filter(filter(x.s, size1), size2)))]]]]]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:and[%s,%s];4:size2;4:or[%s,%s];4:or[%s,%s];4:green;4:blue;4:nand[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:not[%s];4:and[%s,%s];4:not[%s];4:or[%s,%s];4:triangle;4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2;1:%s.o;2:x
'λx.apply(triangle,iota(filter(x.s, and[not[yellow],implies[size2,circle]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:yellow;4:implies[%s,%s];4:size2;4:circle
'λx.contains(x.o, filter(filter(x.s, and[rectangle,circle]), triangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:circle;4:triangle
'λx.forall(and[or[and[blue,not[and[and[size1,not[size2]],and[size3,yellow]]]],and[nor[size3,iff[and[triangle,triangle],implies[or[green,nand[circle,blue]],and[blue,and[blue,rectangle]]]]],nor[size2,not[blue]]]],and[and[yellow,apply(size-leq,x.o)],circle]],filter(x.s, circle))'	0:forall(%s,%s);4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:blue;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:not[%s];4:size2;4:and[%s,%s];4:size3;4:yellow;4:and[%s,%s];4:nor[%s,%s];4:size3;4:iff[%s,%s];4:and[%s,%s];4:triangle;4:triangle;4:implies[%s,%s];4:or[%s,%s];4:green;4:nand[%s,%s];4:circle;4:blue;4:and[%s,%s];4:blue;4:and[%s,%s];4:blue;4:rectangle;4:nor[%s,%s];4:size2;4:not[%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.empty(filter(x.s, apply(same_size,iota(filter(x.s, and[or[apply(same_size,iota(filter(filter(x.s, size2), and[apply(same_color,x.o),yellow]))),blue],blue])))))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;4:blue;4:blue
'λx.apply(apply(same_size,iota(filter(filter(filter(filter(x.s, circle), rectangle), blue), green))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle;4:blue;4:green;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, or[blue,apply(same_size,x.o)]), size1)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1
'λx.apply(and[not[size3],and[green,rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size3;4:and[%s,%s];4:green;4:rectangle;1:%s.o;2:x
'λx.apply(nand[size1,and[and[not[size3],or[size3,circle]],size2]],iota(filter(x.s, or[apply(size-gt,iota(filter(x.s, triangle))),apply(size-leq,x.o)])))'	0:apply(%s,%s);4:nand[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size3;4:or[%s,%s];4:size3;4:circle;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:apply(%s,%s);5:size-leq;1:%s.o;2:x
'λx.apply(and[yellow,size2],iota(filter(x.s, green)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.contains(x.o, filter(filter(x.s, rectangle), circle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle
'λx.exists(yellow, filter(filter(filter(x.s, and[circle,and[nand[green,rectangle],nor[size2,size3]]]), circle), yellow))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:and[%s,%s];4:nand[%s,%s];4:green;4:rectangle;4:nor[%s,%s];4:size2;4:size3;4:circle;4:yellow
'λx.apply(size3,iota(filter(x.s, and[not[size1],apply(same_size,x.o)])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(x.s, size1), size1))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1
'λx.apply(and[rectangle,and[apply(same_shape,iota(x.s)),yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:yellow;1:%s.o;2:x
'λx.exists(circle, filter(filter(filter(x.s, green), blue), not[yellow]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue;4:not[%s];4:yellow
'λx.apply(nand[yellow,yellow],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:yellow;4:yellow;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, or[size3,apply(same_color,iota(filter(x.s, implies[size1,rectangle])))]), nand[and[and[size2,triangle],rectangle],apply(same_size,x.o)])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size1;4:rectangle;4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:triangle;4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(implies[blue,or[size3,and[size3,and[green,circle]]]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:blue;4:or[%s,%s];4:size3;4:and[%s,%s];4:size3;4:and[%s,%s];4:green;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[circle,triangle],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:circle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[triangle,or[and[yellow,rectangle],and[or[or[green,triangle],apply(same_size,x.o)],nand[size1,size3]]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:or[%s,%s];4:and[%s,%s];4:yellow;4:rectangle;4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:green;4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:nand[%s,%s];4:size1;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[and[rectangle,blue],and[not[and[apply(same_shape,iota(x.s)),size3]],size1]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:rectangle;4:blue;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size3;4:size1;1:%s.o;2:x
'λx.apply(and[and[and[blue,and[circle,blue]],iff[nor[apply(same_color,x.o),yellow],blue]],size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:circle;4:blue;4:iff[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;4:blue;4:size3;1:iota(%s);3:%s.s;2:x
'λx.exists(yellow, filter(filter(filter(filter(x.s, apply(same_shape,iota(x.s))), green), and[size3,or[and[and[circle,triangle],or[nor[not[and[blue,size1]],green],not[size1]]],and[size2,size3]]]), size1))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:green;4:and[%s,%s];4:size3;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:triangle;4:or[%s,%s];4:nor[%s,%s];4:not[%s];4:and[%s,%s];4:blue;4:size1;4:green;4:not[%s];4:size1;4:and[%s,%s];4:size2;4:size3;4:size1
'λx.apply(not[triangle],iota(filter(filter(x.s, yellow), and[apply(size-geq,x.o),blue])))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:blue
'λx.apply(not[yellow],iota(filter(filter(x.s, green), and[green,size1])))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:green;4:size1
'λx.apply(or[circle,size1],iota(filter(filter(filter(filter(x.s, triangle), and[and[green,and[rectangle,yellow]],rectangle]), circle), and[size3,green])))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:rectangle;4:yellow;4:rectangle;4:circle;4:and[%s,%s];4:size3;4:green
'λx.apply(implies[not[nor[green,rectangle]],or[size1,rectangle]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:not[%s];4:nor[%s,%s];4:green;4:rectangle;4:or[%s,%s];4:size1;4:rectangle;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, nand[size2,size2]), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size2;4:size2;4:green
'λx.apply(and[triangle,and[blue,and[and[and[green,circle],blue],not[circle]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:circle;4:blue;4:not[%s];4:circle;1:%s.o;2:x
'λx.exists(circle, filter(x.s, size2))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(nor[rectangle,or[apply(size-leq,x.o),and[green,green]]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:rectangle;4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:and[%s,%s];4:green;4:green;1:%s.o;2:x
'λx.apply(not[green],iota(filter(filter(filter(x.s, not[green]), green), and[rectangle,rectangle])))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:green;4:and[%s,%s];4:rectangle;4:rectangle
'λx.apply(and[size2,nor[and[and[and[or[or[nand[blue,yellow],apply(size-gt,iota(x.s))],and[circle,size2]],size3],rectangle],circle],blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:nand[%s,%s];4:blue;4:yellow;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size2;4:size3;4:rectangle;4:circle;4:blue;1:%s.o;2:x
'λx.forall(or[rectangle,circle],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:rectangle;4:circle;3:%s.s;2:x
'λx.apply(not[and[size1,implies[blue,and[apply(same_size,iota(x.s)),blue]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size1;4:implies[%s,%s];4:blue;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.apply(and[apply(same_color,iota(x.s)),size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size2;1:%s.o;2:x
'λx.apply(not[blue],iota(filter(x.s, nor[apply(same_color,iota(x.s)),yellow])))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:yellow
'λx.apply(and[green,yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:yellow;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(filter(x.s, size2), circle), rectangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle;4:rectangle
'λx.forall(and[and[yellow,size2],green],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:size2;4:green;3:%s.s;2:x
'λx.contains(iota(x.s), filter(filter(filter(x.s, and[size3,size2]), yellow), rectangle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:size2;4:yellow;4:rectangle
'λx.apply(or[green,or[or[size1,apply(same_shape,iota(x.s))],apply(size-leq,x.o)]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:or[%s,%s];4:or[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size3,not[apply(same_color,x.o)]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[apply(same_color,iota(filter(filter(filter(filter(filter(x.s, or[size2,apply(size-leq,x.o)]), yellow), green), size2), yellow))),and[yellow,or[size2,and[circle,size3]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:yellow;4:green;4:size2;4:yellow;4:and[%s,%s];4:yellow;4:or[%s,%s];4:size2;4:and[%s,%s];4:circle;4:size3;1:%s.o;2:x
'λx.forall(and[nand[triangle,yellow],apply(same_color,iota(x.s))],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:triangle;4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(and[or[circle,yellow],size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:circle;4:yellow;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[circle,size2],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:size2;4:size3;1:%s.o;2:x
'λx.apply(and[triangle,size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[and[or[and[size2,size3],yellow],rectangle],triangle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size2;4:size3;4:yellow;4:rectangle;4:triangle;1:%s.o;2:x
'λx.exists(iff[not[or[and[circle,circle],green]],circle], x.s)'	0:exists(%s, %s);4:iff[%s,%s];4:not[%s];4:or[%s,%s];4:and[%s,%s];4:circle;4:circle;4:green;4:circle;3:%s.s;2:x
'λx.forall(not[and[not[size2],apply(same_shape,iota(filter(filter(x.s, yellow), or[yellow,or[yellow,triangle]])))]],filter(x.s, and[size3,circle]))'	0:forall(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:yellow;4:or[%s,%s];4:yellow;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:circle
'λx.apply(circle,iota(filter(filter(x.s, apply(size-lt,x.o)), green)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:green
'λx.contains(x.o, filter(filter(filter(filter(filter(filter(x.s, green), size1), yellow), yellow), and[blue,yellow]), and[size1,or[size1,apply(size-gt,x.o)]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1;4:yellow;4:yellow;4:and[%s,%s];4:blue;4:yellow;4:and[%s,%s];4:size1;4:or[%s,%s];4:size1;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, and[size3,size2]), yellow)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:size2;4:yellow
'λx.contains(iota(filter(filter(x.s, implies[size3,triangle]), and[triangle,implies[size1,yellow]])), filter(filter(x.s, triangle), not[or[and[apply(size-gt,x.o),size2],size2]]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size3;4:triangle;4:and[%s,%s];4:triangle;4:implies[%s,%s];4:size1;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:size2;4:size2
'λx.apply(size2,iota(filter(filter(x.s, circle), green)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green
'λx.apply(or[not[size1],nand[circle,or[triangle,green]]],iota(filter(filter(x.s, nor[circle,and[triangle,size3]]), or[yellow,size2])))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:size1;4:nand[%s,%s];4:circle;4:or[%s,%s];4:triangle;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:circle;4:and[%s,%s];4:triangle;4:size3;4:or[%s,%s];4:yellow;4:size2
'λx.apply(implies[size3,and[apply(size-leq,iota(x.s)),or[iff[green,and[or[triangle,circle],circle]],and[nand[size3,not[size2]],size3]]]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size3;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:iff[%s,%s];4:green;4:and[%s,%s];4:or[%s,%s];4:triangle;4:circle;4:circle;4:and[%s,%s];4:nand[%s,%s];4:size3;4:not[%s];4:size2;4:size3;1:%s.o;2:x
'λx.exists(not[apply(same_size,iota(x.s))], filter(filter(filter(filter(x.s, size3), rectangle), size3), and[size1,triangle]))'	0:exists(%s, %s);4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle;4:size3;4:and[%s,%s];4:size1;4:triangle
'λx.apply(implies[apply(same_size,x.o),size2],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[blue,apply(size-geq,iota(x.s))],iota(filter(x.s, iff[yellow,yellow])))'	0:apply(%s,%s);4:nor[%s,%s];4:blue;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:yellow;4:yellow
'λx.apply(or[size2,apply(same_size,iota(x.s))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.forall(circle,filter(filter(x.s, nand[nand[apply(same_size,iota(x.s)),triangle],blue]), and[apply(same_color,iota(filter(filter(filter(x.s, size2), apply(same_color,iota(filter(filter(filter(filter(filter(filter(filter(x.s, rectangle), size3), apply(same_size,x.o)), or[triangle,size3]), size3), or[blue,nor[and[triangle,triangle],yellow]]), nand[size3,and[size2,and[blue,size3]]])))), triangle))),yellow]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:nand[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:triangle;4:blue;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:triangle;4:size3;4:size3;4:or[%s,%s];4:blue;4:nor[%s,%s];4:and[%s,%s];4:triangle;4:triangle;4:yellow;4:nand[%s,%s];4:size3;4:and[%s,%s];4:size2;4:and[%s,%s];4:blue;4:size3;4:triangle;4:yellow
'λx.apply(or[or[yellow,apply(size-lt,iota(filter(filter(x.s, implies[rectangle,yellow]), or[size2,triangle])))],yellow],iota(filter(filter(x.s, circle), size3)))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:yellow;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:rectangle;4:yellow;4:or[%s,%s];4:size2;4:triangle;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3
'λx.apply(not[not[triangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:triangle;1:%s.o;2:x
'λx.apply(implies[rectangle,apply(same_color,iota(x.s))],iota(filter(filter(filter(x.s, yellow), blue), size1)))'	0:apply(%s,%s);4:implies[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:blue;4:size1
'λx.exists(not[circle], x.s)'	0:exists(%s, %s);4:not[%s];4:circle;3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(x.s, not[size1]), triangle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:triangle
'λx.apply(or[green,not[and[yellow,circle]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:not[%s];4:and[%s,%s];4:yellow;4:circle;1:%s.o;2:x
'λx.apply(apply(same_size,iota(x.s)),iota(filter(x.s, size2)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(nor[triangle,size2],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:nor[%s,%s];4:triangle;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(and[apply(same_size,iota(x.s)),triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:triangle;1:%s.o;2:x
'λx.apply(iff[triangle,or[nor[size3,triangle],triangle]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:triangle;4:or[%s,%s];4:nor[%s,%s];4:size3;4:triangle;4:triangle;1:%s.o;2:x
'λx.apply(and[circle,not[rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(filter(x.s, triangle), blue), green))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue;4:green
'λx.forall(or[triangle,blue],filter(x.s, apply(same_color,iota(filter(filter(x.s, triangle), size3)))))'	0:forall(%s,%s);4:or[%s,%s];4:triangle;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3
'λx.forall(size3,filter(filter(filter(x.s, yellow), implies[blue,not[yellow]]), yellow))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:implies[%s,%s];4:blue;4:not[%s];4:yellow;4:yellow
'λx.contains(iota(x.s), filter(filter(filter(x.s, and[rectangle,yellow]), nor[apply(same_size,x.o),or[or[triangle,green],apply(same_color,iota(filter(x.s, blue)))]]), size2))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:yellow;4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:or[%s,%s];4:triangle;4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2
'λx.apply(implies[rectangle,triangle],iota(filter(filter(x.s, and[triangle,or[blue,and[apply(same_shape,x.o),size3]]]), iff[or[implies[size3,blue],or[circle,apply(same_size,x.o)]],circle])))'	0:apply(%s,%s);4:implies[%s,%s];4:rectangle;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:or[%s,%s];4:blue;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3;4:iff[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:size3;4:blue;4:or[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle
'λx.apply(size1,iota(filter(filter(x.s, rectangle), implies[circle,size3])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:implies[%s,%s];4:circle;4:size3
'λx.exists(size3, filter(filter(filter(x.s, triangle), apply(same_shape,iota(x.s))), circle))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle
'λx.contains(iota(filter(x.s, yellow)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(x.s, circle), triangle), triangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle;4:triangle
'λx.exists(and[size1,size1], filter(filter(x.s, size2), green))'	0:exists(%s, %s);4:and[%s,%s];4:size1;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green
'λx.apply(not[and[size2,size1]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size2;4:size1;1:%s.o;2:x
'λx.forall(and[and[triangle,yellow],circle],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:yellow;4:circle;3:%s.s;2:x
'λx.apply(implies[size3,triangle],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:implies[%s,%s];4:size3;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(circle,iota(filter(filter(filter(filter(x.s, and[size2,blue]), nand[size2,blue]), blue), triangle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:blue;4:nand[%s,%s];4:size2;4:blue;4:blue;4:triangle
'λx.apply(or[apply(same_size,x.o),size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, rectangle), size2), and[implies[size1,blue],apply(same_color,iota(x.s))]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2;4:and[%s,%s];4:implies[%s,%s];4:size1;4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(and[rectangle,or[yellow,blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:or[%s,%s];4:yellow;4:blue;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(x.s, triangle), or[not[green],apply(same_shape,iota(filter(x.s, blue)))]), rectangle)), filter(filter(x.s, not[green]), blue))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:or[%s,%s];4:not[%s];4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:blue
'λx.apply(size3,iota(filter(filter(x.s, size3), yellow)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow
'λx.apply(and[and[yellow,apply(size-lt,iota(x.s))],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:size1;1:%s.o;2:x
'λx.apply(and[yellow,yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:yellow;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(filter(x.s, apply(same_color,iota(filter(filter(filter(filter(filter(filter(filter(x.s, size1), and[and[nor[and[nand[size3,size1],size2],triangle],nor[nor[rectangle,or[and[blue,size3],size1]],size3]],size2]), size3), size3), circle), apply(same_size,x.o)), green)))), size1), not[yellow]), yellow), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:size3;4:size1;4:size2;4:triangle;4:nor[%s,%s];4:nor[%s,%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:blue;4:size3;4:size1;4:size3;4:size2;4:size3;4:size3;4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;4:size1;4:not[%s];4:yellow;4:yellow;4:size1
'λx.apply(rectangle,iota(filter(filter(filter(x.s, circle), not[yellow]), not[blue])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:yellow;4:not[%s];4:blue
'λx.apply(and[or[size2,triangle],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size2;4:triangle;4:blue;1:%s.o;2:x
'λx.exists(size3, filter(x.s, iff[and[blue,rectangle],apply(size-lt,iota(x.s))]))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:and[%s,%s];4:blue;4:rectangle;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x
'λx.forall(circle,filter(x.s, apply(same_color,iota(x.s))))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(filter(x.s, and[or[green,apply(same_shape,iota(x.s))],implies[and[rectangle,and[triangle,and[or[and[rectangle,triangle],nor[size1,or[size1,green]]],green]]],green]]), blue), size2)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:implies[%s,%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:triangle;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:rectangle;4:triangle;4:nor[%s,%s];4:size1;4:or[%s,%s];4:size1;4:green;4:green;4:green;4:blue;4:size2
'λx.apply(iff[not[apply(same_color,x.o)],blue],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(x.s, yellow), yellow)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:yellow
'λx.apply(green,iota(filter(filter(x.s, green), not[size1])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:size1
'λx.contains(iota(filter(x.s, not[size1])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;3:%s.s;2:x
'λx.forall(nand[and[apply(same_shape,iota(x.s)),size3],blue],x.s)'	0:forall(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size3;4:blue;3:%s.s;2:x
'λx.forall(and[not[rectangle],circle],filter(filter(x.s, rectangle), circle))'	0:forall(%s,%s);4:and[%s,%s];4:not[%s];4:rectangle;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle
'λx.apply(nor[and[yellow,size1],size2],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:yellow;4:size1;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size2,and[green,size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:green;4:size2;1:%s.o;2:x
'λx.apply(yellow,iota(filter(x.s, apply(size-leq,iota(filter(filter(filter(x.s, iff[blue,not[size1]]), size1), and[apply(same_color,iota(filter(filter(filter(x.s, or[yellow,or[and[green,apply(size-geq,x.o)],yellow]]), size2), nand[blue,triangle]))),size2]))))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:blue;4:not[%s];4:size1;4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:or[%s,%s];4:and[%s,%s];4:green;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:yellow;4:size2;4:nand[%s,%s];4:blue;4:triangle;4:size2
'λx.empty(filter(filter(x.s, triangle), and[size2,and[green,green]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:size2;4:and[%s,%s];4:green;4:green
'λx.apply(blue,iota(filter(filter(filter(x.s, yellow), triangle), size3)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle;4:size3
'λx.apply(size2,iota(filter(filter(x.s, or[or[not[size1],apply(size-lt,iota(x.s))],and[blue,rectangle]]), circle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:not[%s];4:size1;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:rectangle;4:circle
'λx.apply(not[not[triangle]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[apply(size-gt,x.o),rectangle],iota(filter(x.s, green)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(iff[and[and[and[size2,green],apply(same_color,x.o)],rectangle],and[green,green]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle;4:and[%s,%s];4:green;4:green;1:%s.o;2:x
'λx.apply(or[blue,triangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(x.s), filter(filter(x.s, green), and[and[blue,iff[and[triangle,iff[size2,blue]],blue]],not[green]]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:and[%s,%s];4:blue;4:iff[%s,%s];4:and[%s,%s];4:triangle;4:iff[%s,%s];4:size2;4:blue;4:blue;4:not[%s];4:green
'λx.forall(blue,filter(filter(x.s, apply(same_color,x.o)), or[not[triangle],size2]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:or[%s,%s];4:not[%s];4:triangle;4:size2
'λx.apply(triangle,iota(filter(filter(filter(filter(filter(filter(filter(filter(filter(x.s, triangle), circle), or[triangle,apply(size-gt,x.o)]), yellow), blue), yellow), apply(same_shape,x.o)), size3), size1)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle;4:or[%s,%s];4:triangle;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:yellow;4:blue;4:yellow;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3;4:size1
'λx.apply(triangle,iota(filter(filter(x.s, nor[and[size1,green],and[circle,blue]]), not[green])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:and[%s,%s];4:size1;4:green;4:and[%s,%s];4:circle;4:blue;4:not[%s];4:green
'λx.exists(implies[or[circle,not[implies[size2,rectangle]]],and[blue,apply(same_size,iota(filter(x.s, green)))]], filter(x.s, size2))'	0:exists(%s, %s);4:implies[%s,%s];4:or[%s,%s];4:circle;4:not[%s];4:implies[%s,%s];4:size2;4:rectangle;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(rectangle,iota(filter(x.s, apply(same_size,iota(filter(filter(filter(x.s, yellow), and[blue,green]), and[triangle,circle]))))))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:blue;4:green;4:and[%s,%s];4:triangle;4:circle
'λx.apply(or[size3,apply(same_color,iota(x.s))],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(x.s), filter(filter(filter(filter(x.s, green), blue), not[size3]), and[size1,triangle]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue;4:not[%s];4:size3;4:and[%s,%s];4:size1;4:triangle
'λx.empty(filter(x.s, or[size2,or[apply(same_color,iota(x.s)),rectangle]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:rectangle
'λx.apply(and[and[circle,size3],blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:size3;4:blue;1:iota(%s);3:%s.s;2:x
'λx.forall(or[and[blue,nand[size2,triangle]],apply(size-lt,x.o)],filter(x.s, and[green,circle]))'	0:forall(%s,%s);4:or[%s,%s];4:and[%s,%s];4:blue;4:nand[%s,%s];4:size2;4:triangle;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:circle
'λx.apply(blue,iota(filter(x.s, not[size1])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1
'λx.exists(not[and[and[green,yellow],yellow]], filter(x.s, or[circle,apply(same_shape,x.o)]))'	0:exists(%s, %s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:green;4:yellow;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, not[triangle]), green), apply(same_color,iota(x.s))))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.forall(and[circle,nand[size1,triangle]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:circle;4:nand[%s,%s];4:size1;4:triangle;3:%s.s;2:x
'λx.contains(iota(filter(x.s, circle)), filter(filter(x.s, size2), size1))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1
'λx.exists(triangle, filter(filter(x.s, or[circle,size2]), size1))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:size2;4:size1
'λx.apply(and[not[or[or[yellow,size2],apply(same_shape,iota(x.s))]],size1],iota(filter(x.s, green)))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:or[%s,%s];4:or[%s,%s];4:yellow;4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.contains(iota(filter(x.s, size1)), filter(filter(x.s, blue), and[not[and[size3,not[blue]]],apply(size-geq,iota(filter(x.s, not[size1])))]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:size3;4:not[%s];4:blue;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1
'λx.apply(and[circle,yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(or[rectangle,implies[triangle,and[and[not[or[or[circle,size2],apply(same_shape,x.o)]],size2],not[not[size2]]]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:implies[%s,%s];4:triangle;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:or[%s,%s];4:or[%s,%s];4:circle;4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2;4:not[%s];4:not[%s];4:size2;1:iota(%s);3:%s.s;2:x
'λx.exists(circle, filter(filter(filter(x.s, apply(size-lt,x.o)), blue), rectangle))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:blue;4:rectangle
'λx.apply(size2,iota(filter(x.s, not[not[blue]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:blue
'λx.apply(nor[size2,triangle],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:size2;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[triangle,and[yellow,size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:yellow;4:size3;1:%s.o;2:x
'λx.apply(or[nand[size1,rectangle],circle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:size1;4:rectangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(x.s, apply(same_color,x.o)))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(size1,iota(filter(x.s, apply(same_shape,iota(filter(filter(x.s, yellow), blue))))))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:blue
'λx.apply(apply(same_color,iota(filter(x.s, nor[green,or[blue,blue]]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:green;4:or[%s,%s];4:blue;4:blue;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(filter(x.s, blue), iff[yellow,and[apply(size-lt,iota(x.s)),yellow]]), size2)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:iff[%s,%s];4:yellow;4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:yellow;4:size2
'λx.exists(size1, filter(filter(filter(filter(filter(x.s, rectangle), triangle), size3), yellow), size1))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle;4:size3;4:yellow;4:size1
'λx.apply(and[rectangle,yellow],iota(filter(filter(filter(x.s, size1), iff[nor[not[iff[size3,green]],and[and[triangle,and[apply(same_size,iota(x.s)),size3]],size3]],green]), and[not[size3],size1])))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:iff[%s,%s];4:nor[%s,%s];4:not[%s];4:iff[%s,%s];4:size3;4:green;4:and[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size3;4:size3;4:green;4:and[%s,%s];4:not[%s];4:size3;4:size1
'λx.apply(and[not[and[green,size2]],nand[size3,circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:green;4:size2;4:nand[%s,%s];4:size3;4:circle;1:%s.o;2:x
'λx.apply(and[rectangle,or[green,not[and[triangle,or[or[size2,implies[and[circle,yellow],size2]],or[apply(size-gt,x.o),and[size3,size3]]]]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:or[%s,%s];4:green;4:not[%s];4:and[%s,%s];4:triangle;4:or[%s,%s];4:or[%s,%s];4:size2;4:implies[%s,%s];4:and[%s,%s];4:circle;4:yellow;4:size2;4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:and[%s,%s];4:size3;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size1,or[and[blue,yellow],green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:or[%s,%s];4:and[%s,%s];4:blue;4:yellow;4:green;1:%s.o;2:x
'λx.apply(implies[iff[not[size3],green],or[and[and[size2,size2],rectangle],green]],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:implies[%s,%s];4:iff[%s,%s];4:not[%s];4:size3;4:green;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:size2;4:rectangle;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(and[blue,green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:green;1:iota(%s);3:%s.s;2:x
'λx.forall(size1,filter(filter(x.s, blue), and[nor[apply(same_color,iota(x.s)),green],circle]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:green;4:circle
'λx.exists(and[yellow,circle], filter(x.s, size2))'	0:exists(%s, %s);4:and[%s,%s];4:yellow;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(implies[triangle,and[size2,size2]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:triangle;4:and[%s,%s];4:size2;4:size2;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(filter(x.s, blue), not[green]), yellow)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:green;4:yellow
'λx.apply(triangle,iota(filter(filter(x.s, and[green,rectangle]), implies[and[size3,size1],iff[apply(size-leq,x.o),blue]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:rectangle;4:implies[%s,%s];4:and[%s,%s];4:size3;4:size1;4:iff[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:blue
'λx.apply(apply(size-geq,iota(filter(x.s, yellow))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, implies[rectangle,and[not[size3],nor[apply(size-lt,x.o),yellow]]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:rectangle;4:and[%s,%s];4:not[%s];4:size3;4:nor[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:yellow
'λx.apply(or[apply(size-leq,iota(filter(x.s, implies[apply(same_size,x.o),or[apply(same_size,x.o),or[size3,triangle]]]))),and[triangle,apply(same_shape,iota(filter(filter(x.s, size1), and[green,size2])))]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:size3;4:triangle;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:green;4:size2;1:%s.o;2:x
'λx.apply(yellow,iota(filter(x.s, size1)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(green,iota(filter(filter(x.s, yellow), not[or[yellow,size3]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:or[%s,%s];4:yellow;4:size3
'λx.apply(and[or[and[and[size1,yellow],yellow],apply(same_shape,iota(x.s))],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:yellow;4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle;1:%s.o;2:x
'λx.apply(and[yellow,not[and[triangle,or[rectangle,and[size2,triangle]]]]],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:not[%s];4:and[%s,%s];4:triangle;4:or[%s,%s];4:rectangle;4:and[%s,%s];4:size2;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(apply(same_shape,x.o),iota(filter(filter(x.s, size1), rectangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle
'λx.exists(iff[green,and[rectangle,circle]], filter(x.s, or[size2,yellow]))'	0:exists(%s, %s);4:iff[%s,%s];4:green;4:and[%s,%s];4:rectangle;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:yellow
'λx.apply(iff[green,size1],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:iff[%s,%s];4:green;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(or[nand[or[size2,circle],size2],and[size3,size2]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:size2;4:circle;4:size2;4:and[%s,%s];4:size3;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[apply(same_color,iota(filter(filter(filter(filter(filter(x.s, or[and[size3,not[apply(same_color,x.o)]],triangle]), circle), and[circle,green]), not[size2]), blue))),triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size3;4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;4:circle;4:and[%s,%s];4:circle;4:green;4:not[%s];4:size2;4:blue;4:triangle;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(filter(filter(filter(filter(x.s, size3), circle), or[not[yellow],and[triangle,circle]]), nor[size2,blue]), size2), size3)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle;4:or[%s,%s];4:not[%s];4:yellow;4:and[%s,%s];4:triangle;4:circle;4:nor[%s,%s];4:size2;4:blue;4:size2;4:size3
'λx.apply(and[blue,apply(same_shape,x.o)],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[triangle,and[blue,rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:blue;4:rectangle;1:%s.o;2:x
'λx.apply(apply(same_size,x.o),iota(filter(x.s, size1)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(iff[or[triangle,circle],blue],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:or[%s,%s];4:triangle;4:circle;4:blue;1:%s.o;2:x
'λx.forall(or[not[and[size3,size2]],blue],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:not[%s];4:and[%s,%s];4:size3;4:size2;4:blue;3:%s.s;2:x
'λx.forall(blue,filter(x.s, blue))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(nand[or[yellow,or[and[triangle,not[green]],nor[blue,and[not[triangle],green]]]],blue],iota(filter(x.s, not[not[triangle]])))'	0:apply(%s,%s);4:nand[%s,%s];4:or[%s,%s];4:yellow;4:or[%s,%s];4:and[%s,%s];4:triangle;4:not[%s];4:green;4:nor[%s,%s];4:blue;4:and[%s,%s];4:not[%s];4:triangle;4:green;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:triangle
'λx.apply(or[yellow,rectangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.forall(apply(same_shape,iota(filter(x.s, size1))),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;3:%s.s;2:x
'λx.apply(not[or[size2,circle]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:size2;4:circle;1:%s.o;2:x
'λx.apply(nand[blue,green],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:blue;4:green;1:%s.o;2:x
'λx.apply(size1,iota(filter(x.s, not[size1])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1
'λx.exists(not[or[size2,apply(same_size,iota(filter(x.s, apply(same_color,iota(filter(x.s, triangle))))))]], filter(filter(x.s, rectangle), not[yellow]))'	0:exists(%s, %s);4:not[%s];4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:yellow
'λx.apply(nor[or[nand[triangle,size2],apply(same_size,iota(x.s))],size2],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:or[%s,%s];4:nand[%s,%s];4:triangle;4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size2;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(filter(filter(filter(x.s, apply(same_size,iota(x.s))), rectangle), apply(size-gt,iota(x.s))), rectangle), size2), not[green])), filter(x.s, yellow))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:rectangle;4:size2;4:not[%s];4:green;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.contains(x.o, filter(filter(filter(x.s, size1), size2), rectangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2;4:rectangle
'λx.contains(iota(filter(filter(filter(filter(x.s, blue), and[or[and[or[size3,size3],triangle],rectangle],size2]), yellow), apply(same_color,iota(x.s)))), filter(x.s, and[triangle,green]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size3;4:size3;4:triangle;4:rectangle;4:size2;4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:green
'λx.apply(and[apply(size-gt,iota(x.s)),size2],iota(filter(filter(x.s, size1), circle)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle
'λx.apply(and[triangle,and[and[size1,blue],and[blue,size3]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:and[%s,%s];4:size1;4:blue;4:and[%s,%s];4:blue;4:size3;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(x.s, and[yellow,triangle]), apply(same_size,iota(filter(x.s, blue))))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(or[and[size3,not[size1]],size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size3;4:not[%s];4:size1;4:size1;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, or[circle,triangle]), nor[or[size2,size2],not[circle]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:triangle;4:nor[%s,%s];4:or[%s,%s];4:size2;4:size2;4:not[%s];4:circle
'λx.apply(or[or[rectangle,apply(same_shape,x.o)],circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;1:%s.o;2:x
'λx.apply(and[size1,yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, yellow), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:blue
'λx.apply(and[and[yellow,and[or[or[green,and[apply(size-leq,iota(x.s)),size3]],size1],apply(size-lt,iota(filter(x.s, circle)))]],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:green;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:size3;4:size1;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3;1:%s.o;2:x
'λx.apply(apply(size-leq,iota(x.s)),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(x.s, and[yellow,green]), blue)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:green;4:blue
'λx.apply(yellow,iota(filter(filter(filter(x.s, size1), and[rectangle,circle]), not[blue])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:rectangle;4:circle;4:not[%s];4:blue
'λx.apply(yellow,iota(filter(x.s, apply(same_size,iota(filter(filter(filter(x.s, size3), apply(same_color,x.o)), blue))))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue
'λx.apply(nand[or[and[and[implies[blue,apply(same_size,x.o)],size1],circle],size2],circle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1;4:circle;4:size2;4:circle;1:%s.o;2:x
'λx.apply(and[green,and[circle,size1]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:circle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(not[not[not[triangle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:not[%s];4:triangle;1:%s.o;2:x
'λx.apply(and[blue,and[rectangle,yellow]],iota(filter(filter(x.s, size1), size1)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1
'λx.contains(iota(filter(x.s, or[size2,blue])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:blue;3:%s.s;2:x
'λx.exists(size3, filter(x.s, and[not[nor[or[circle,green],apply(same_size,x.o)]],apply(same_shape,iota(x.s))]))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:nor[%s,%s];4:or[%s,%s];4:circle;4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(x.s, iff[rectangle,size1])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:rectangle;4:size1
'λx.forall(not[size3],x.s)'	0:forall(%s,%s);4:not[%s];4:size3;3:%s.s;2:x
'λx.empty(filter(x.s, and[blue,yellow]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:yellow
'λx.apply(or[not[and[not[size2],size3]],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:and[%s,%s];4:not[%s];4:size2;4:size3;4:blue;1:%s.o;2:x
'λx.forall(rectangle,filter(x.s, apply(size-lt,x.o)))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.apply(and[or[and[size1,size3],size3],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size1;4:size3;4:size3;4:size3;1:%s.o;2:x
'λx.apply(iff[size2,implies[blue,blue]],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:size2;4:implies[%s,%s];4:blue;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(or[green,iff[apply(same_color,iota(x.s)),rectangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:iff[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:rectangle;1:%s.o;2:x
'λx.apply(not[size1],iota(filter(x.s, green)))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(iff[triangle,not[green]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:triangle;4:not[%s];4:green;1:%s.o;2:x
'λx.apply(implies[size1,implies[and[apply(same_shape,iota(x.s)),blue],triangle]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size1;4:implies[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:blue;4:triangle;1:%s.o;2:x
'λx.apply(and[size3,size3],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(and[size2,size2],iota(filter(x.s, nor[and[and[green,size1],size2],not[rectangle]])))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:size1;4:size2;4:not[%s];4:rectangle
'λx.apply(green,iota(filter(x.s, and[and[circle,apply(same_size,iota(x.s))],size3])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size3
'λx.contains(iota(filter(x.s, size3)), filter(filter(x.s, rectangle), size1))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1
'λx.apply(and[size2,or[yellow,rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:or[%s,%s];4:yellow;4:rectangle;1:%s.o;2:x
'λx.apply(and[blue,and[blue,rectangle]],iota(filter(x.s, and[green,circle])))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:blue;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:circle
'λx.apply(size3,iota(filter(x.s, size2)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(and[apply(same_shape,x.o),not[triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:triangle;1:%s.o;2:x
'λx.apply(and[not[size1],circle],iota(filter(filter(filter(x.s, size1), not[and[circle,apply(size-lt,x.o)]]), and[blue,and[apply(size-geq,x.o),size3]])))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size1;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:not[%s];4:and[%s,%s];4:circle;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:and[%s,%s];4:blue;4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:size3
'λx.apply(and[not[triangle],size3],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:triangle;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.empty(filter(filter(x.s, rectangle), and[implies[rectangle,rectangle],or[and[size1,size3],size1]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:implies[%s,%s];4:rectangle;4:rectangle;4:or[%s,%s];4:and[%s,%s];4:size1;4:size3;4:size1
'λx.apply(and[iff[yellow,blue],blue],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:yellow;4:blue;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.contains(iota(filter(filter(x.s, nor[blue,green]), size2)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:blue;4:green;4:size2;3:%s.s;2:x
'λx.apply(or[apply(same_color,iota(filter(x.s, nor[and[yellow,green],triangle]))),nand[green,size2]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:and[%s,%s];4:yellow;4:green;4:triangle;4:nand[%s,%s];4:green;4:size2;1:%s.o;2:x
'λx.apply(and[rectangle,size1],iota(filter(filter(x.s, and[nand[and[and[nand[and[green,triangle],or[not[green],green]],and[and[or[and[size2,size1],rectangle],rectangle],apply(same_color,iota(x.s))]],not[green]],green],triangle]), circle)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:green;4:triangle;4:or[%s,%s];4:not[%s];4:green;4:green;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size2;4:size1;4:rectangle;4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:not[%s];4:green;4:green;4:triangle;4:circle
'λx.forall(size1,filter(x.s, size1))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.forall(circle,filter(x.s, rectangle))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(green,iota(filter(filter(filter(filter(x.s, rectangle), triangle), and[size1,size3]), size2)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle;4:and[%s,%s];4:size1;4:size3;4:size2
'λx.apply(iff[apply(same_shape,iota(filter(x.s, size2))),not[green]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:not[%s];4:green;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(filter(filter(x.s, and[apply(same_color,iota(x.s)),size1]), green), not[size1]), apply(size-geq,x.o))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size1;4:green;4:not[%s];4:size1;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(filter(filter(x.s, not[and[iff[yellow,size2],size3]]), and[rectangle,size2]), circle), triangle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:iff[%s,%s];4:yellow;4:size2;4:size3;4:and[%s,%s];4:rectangle;4:size2;4:circle;4:triangle
'λx.apply(circle,iota(filter(filter(filter(x.s, size1), blue), triangle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue;4:triangle
'λx.apply(green,iota(filter(filter(filter(filter(x.s, blue), and[and[yellow,and[rectangle,size2]],rectangle]), apply(size-lt,iota(filter(x.s, apply(size-gt,iota(x.s)))))), rectangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:rectangle;4:size2;4:rectangle;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:rectangle
'λx.apply(yellow,iota(filter(x.s, green)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.contains(x.o, filter(x.s, nor[not[not[size1]],green]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:not[%s];4:not[%s];4:size1;4:green
'λx.contains(x.o, filter(filter(filter(filter(filter(x.s, rectangle), size1), and[apply(same_size,iota(x.s)),and[rectangle,and[or[rectangle,green],apply(same_size,x.o)]]]), and[rectangle,blue]), not[green]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:rectangle;4:blue;4:not[%s];4:green
'λx.contains(x.o, filter(x.s, size2))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(size1,iota(filter(filter(filter(x.s, size1), size2), size3)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2;4:size3
'λx.contains(x.o, filter(filter(filter(x.s, triangle), and[rectangle,triangle]), triangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:rectangle;4:triangle;4:triangle
'λx.apply(size2,iota(filter(x.s, nand[and[circle,blue],size3])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:and[%s,%s];4:circle;4:blue;4:size3
'λx.exists(or[and[or[rectangle,circle],size3],and[and[size3,rectangle],implies[and[triangle,and[green,yellow]],size1]]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:rectangle;4:circle;4:size3;4:and[%s,%s];4:and[%s,%s];4:size3;4:rectangle;4:implies[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:green;4:yellow;4:size1;3:%s.s;2:x
'λx.apply(iff[green,triangle],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:green;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[size1,size3],iota(filter(filter(filter(filter(x.s, size1), nand[size1,or[green,blue]]), and[triangle,size2]), and[circle,or[size2,or[triangle,and[size3,circle]]]])))'	0:apply(%s,%s);4:nand[%s,%s];4:size1;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:nand[%s,%s];4:size1;4:or[%s,%s];4:green;4:blue;4:and[%s,%s];4:triangle;4:size2;4:and[%s,%s];4:circle;4:or[%s,%s];4:size2;4:or[%s,%s];4:triangle;4:and[%s,%s];4:size3;4:circle
'λx.forall(rectangle,x.s)'	0:forall(%s,%s);4:rectangle;3:%s.s;2:x
'λx.apply(or[size1,size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:size3;1:%s.o;2:x
'λx.apply(green,x.o)'	0:apply(%s,%s);4:green;1:%s.o;2:x
'λx.contains(iota(filter(x.s, and[size1,and[implies[and[nand[and[apply(same_shape,x.o),and[yellow,size1]],and[and[yellow,circle],triangle]],circle],circle],iff[size3,size3]]])), filter(filter(filter(x.s, not[or[and[size1,size3],circle]]), rectangle), triangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:and[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:yellow;4:size1;4:and[%s,%s];4:and[%s,%s];4:yellow;4:circle;4:triangle;4:circle;4:circle;4:iff[%s,%s];4:size3;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:size1;4:size3;4:circle;4:rectangle;4:triangle
'λx.forall(yellow,filter(x.s, and[or[apply(size-gt,x.o),yellow],or[and[circle,green],yellow]]))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:yellow;4:or[%s,%s];4:and[%s,%s];4:circle;4:green;4:yellow
'λx.apply(and[yellow,size3],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(and[and[green,apply(same_size,x.o)],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle;1:%s.o;2:x
'λx.exists(not[size1], filter(x.s, size3))'	0:exists(%s, %s);4:not[%s];4:size1;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(iff[blue,and[not[apply(same_color,iota(x.s))],or[not[size2],apply(same_color,iota(filter(filter(filter(x.s, triangle), size1), rectangle)))]]],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:blue;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size1;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.exists(triangle, filter(filter(x.s, blue), size1))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1
'λx.apply(size1,iota(filter(filter(filter(x.s, size2), circle), circle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle;4:circle
'λx.apply(and[size1,circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:circle;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(filter(x.s, blue), iff[yellow,yellow]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:iff[%s,%s];4:yellow;4:yellow;1:%s.o;2:x
'λx.apply(nand[and[apply(same_shape,iota(filter(filter(x.s, green), circle))),iff[triangle,size3]],rectangle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:circle;4:iff[%s,%s];4:triangle;4:size3;4:rectangle;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(filter(filter(filter(x.s, triangle), size1), and[blue,and[blue,or[nor[yellow,yellow],or[not[size3],size1]]]]), or[nand[yellow,size2],implies[triangle,rectangle]]), and[green,and[circle,and[triangle,not[not[size3]]]]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size1;4:and[%s,%s];4:blue;4:and[%s,%s];4:blue;4:or[%s,%s];4:nor[%s,%s];4:yellow;4:yellow;4:or[%s,%s];4:not[%s];4:size3;4:size1;4:or[%s,%s];4:nand[%s,%s];4:yellow;4:size2;4:implies[%s,%s];4:triangle;4:rectangle;4:and[%s,%s];4:green;4:and[%s,%s];4:circle;4:and[%s,%s];4:triangle;4:not[%s];4:not[%s];4:size3
'λx.forall(not[and[and[rectangle,iff[size1,circle]],size2]],x.s)'	0:forall(%s,%s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:iff[%s,%s];4:size1;4:circle;4:size2;3:%s.s;2:x
'λx.forall(apply(size-gt,iota(filter(filter(x.s, green), and[implies[apply(same_shape,x.o),size1],size1]))),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:implies[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;4:size1;3:%s.s;2:x
'λx.apply(and[yellow,implies[rectangle,circle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:implies[%s,%s];4:rectangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_color,iota(filter(x.s, apply(size-gt,x.o)))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(nor[or[not[or[triangle,circle]],green],triangle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:or[%s,%s];4:not[%s];4:or[%s,%s];4:triangle;4:circle;4:green;4:triangle;1:%s.o;2:x
'λx.contains(iota(x.s), filter(x.s, not[not[triangle]]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:triangle
'λx.apply(nand[size2,blue],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size2;4:blue;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, iff[size3,circle]), apply(same_color,x.o)))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size3;4:circle;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(size3,iota(x.s))'	0:apply(%s,%s);4:size3;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, apply(same_color,iota(x.s))), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:triangle
'λx.apply(and[yellow,green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:green;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(filter(filter(x.s, or[rectangle,not[rectangle]]), size2), triangle), size2)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:not[%s];4:rectangle;4:size2;4:triangle;4:size2
'λx.apply(nor[triangle,blue],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:triangle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.exists(apply(same_shape,iota(x.s)), filter(filter(x.s, green), size3))'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size3
'λx.apply(and[triangle,not[not[blue]]],iota(filter(x.s, green)))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:not[%s];4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.exists(iff[and[size1,rectangle],apply(same_shape,iota(x.s))], x.s)'	0:exists(%s, %s);4:iff[%s,%s];4:and[%s,%s];4:size1;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(and[blue,yellow],iota(filter(filter(x.s, and[apply(same_color,x.o),not[triangle]]), nand[apply(size-lt,iota(filter(filter(filter(filter(filter(x.s, circle), size3), size3), or[yellow,triangle]), iff[size1,size3]))),triangle])))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:triangle;4:nand[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3;4:size3;4:or[%s,%s];4:yellow;4:triangle;4:iff[%s,%s];4:size1;4:size3;4:triangle
'λx.apply(size3,iota(filter(filter(filter(filter(x.s, or[size2,and[size2,triangle]]), yellow), and[apply(same_size,x.o),apply(same_shape,iota(filter(x.s, apply(same_size,x.o))))]), size1)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:and[%s,%s];4:size2;4:triangle;4:yellow;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1
'λx.apply(size1,iota(filter(filter(filter(x.s, and[nor[triangle,iff[and[or[and[rectangle,size1],nand[nor[not[or[yellow,blue]],yellow],nand[size2,or[apply(same_size,iota(filter(x.s, size2))),yellow]]]],or[and[triangle,blue],green]],not[rectangle]]],triangle]), and[size3,yellow]), size1)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:triangle;4:iff[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:rectangle;4:size1;4:nand[%s,%s];4:nor[%s,%s];4:not[%s];4:or[%s,%s];4:yellow;4:blue;4:yellow;4:nand[%s,%s];4:size2;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:yellow;4:or[%s,%s];4:and[%s,%s];4:triangle;4:blue;4:green;4:not[%s];4:rectangle;4:triangle;4:and[%s,%s];4:size3;4:yellow;4:size1
'λx.apply(not[and[and[iff[and[green,size3],size1],and[rectangle,blue]],and[size3,blue]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:green;4:size3;4:size1;4:and[%s,%s];4:rectangle;4:blue;4:and[%s,%s];4:size3;4:blue;1:%s.o;2:x
'λx.apply(nor[size2,and[and[nand[or[blue,and[apply(same_color,x.o),apply(same_color,iota(x.s))]],triangle],size1],triangle]],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:blue;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:triangle;4:size1;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.exists(green, filter(filter(x.s, or[apply(same_shape,x.o),apply(same_size,x.o)]), yellow))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow
'λx.apply(or[green,apply(size-leq,iota(x.s))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(filter(x.s, not[size1]), size3))),iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(and[or[green,circle],apply(same_shape,x.o)],iota(filter(filter(x.s, or[yellow,not[blue]]), rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:green;4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:not[%s];4:blue;4:rectangle
'λx.apply(nand[triangle,iff[size2,circle]],iota(filter(filter(filter(x.s, circle), and[nand[size2,not[rectangle]],triangle]), green)))'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:iff[%s,%s];4:size2;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:nand[%s,%s];4:size2;4:not[%s];4:rectangle;4:triangle;4:green
'λx.apply(and[size2,green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[implies[not[and[blue,not[and[circle,nand[yellow,size3]]]]],triangle],or[triangle,not[and[not[green],size2]]]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:implies[%s,%s];4:not[%s];4:and[%s,%s];4:blue;4:not[%s];4:and[%s,%s];4:circle;4:nand[%s,%s];4:yellow;4:size3;4:triangle;4:or[%s,%s];4:triangle;4:not[%s];4:and[%s,%s];4:not[%s];4:green;4:size2;1:%s.o;2:x
'λx.apply(and[size1,or[size1,apply(same_shape,x.o)]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:or[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(x.s, implies[nand[green,and[rectangle,and[apply(same_shape,iota(x.s)),circle]]],not[size2]]), blue)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:nand[%s,%s];4:green;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle;4:not[%s];4:size2;4:blue
'λx.apply(and[not[green],and[or[circle,green],not[rectangle]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:green;4:and[%s,%s];4:or[%s,%s];4:circle;4:green;4:not[%s];4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(x.s, and[nor[circle,yellow],yellow])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:circle;4:yellow;4:yellow
'λx.apply(and[nor[or[size1,green],and[triangle,triangle]],rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:size1;4:green;4:and[%s,%s];4:triangle;4:triangle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[or[and[or[apply(same_shape,x.o),size3],circle],not[size3]],not[size1]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3;4:circle;4:not[%s];4:size3;4:not[%s];4:size1;1:iota(%s);3:%s.s;2:x
'λx.forall(size3,filter(x.s, and[triangle,rectangle]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:rectangle
'λx.apply(triangle,iota(filter(filter(x.s, and[size2,green]), implies[yellow,size3])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:green;4:implies[%s,%s];4:yellow;4:size3
'λx.apply(nor[or[triangle,size3],size1],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:nor[%s,%s];4:or[%s,%s];4:triangle;4:size3;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[rectangle,size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(x.s, and[not[size3],green])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:size3;4:green
'λx.exists(size3, filter(x.s, rectangle))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(not[or[rectangle,apply(size-lt,iota(x.s))]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(iff[size2,not[size1]],iota(filter(filter(filter(x.s, implies[and[and[circle,triangle],and[yellow,and[apply(same_size,iota(filter(x.s, green))),rectangle]]],size2]), green), and[apply(same_shape,iota(x.s)),size1])))'	0:apply(%s,%s);4:iff[%s,%s];4:size2;4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:triangle;4:and[%s,%s];4:yellow;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle;4:size2;4:green;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size1
'λx.apply(nor[apply(same_shape,iota(x.s)),yellow],iota(filter(filter(x.s, size3), size3)))'	0:apply(%s,%s);4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3
'λx.apply(and[green,size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:size2;1:%s.o;2:x
'λx.contains(iota(filter(x.s, nand[not[and[triangle,blue]],or[triangle,blue]])), filter(x.s, or[size1,blue]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:not[%s];4:and[%s,%s];4:triangle;4:blue;4:or[%s,%s];4:triangle;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:blue
'λx.forall(iff[or[blue,size1],rectangle],x.s)'	0:forall(%s,%s);4:iff[%s,%s];4:or[%s,%s];4:blue;4:size1;4:rectangle;3:%s.s;2:x
'λx.apply(nand[blue,implies[rectangle,apply(same_shape,iota(x.s))]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:blue;4:implies[%s,%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.exists(rectangle, filter(filter(x.s, yellow), triangle))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle
'λx.empty(filter(filter(x.s, triangle), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green
'λx.empty(filter(x.s, and[and[blue,triangle],rectangle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:blue;4:triangle;4:rectangle
'λx.forall(and[apply(same_size,x.o),triangle],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle;3:%s.s;2:x
'λx.apply(not[and[circle,and[green,yellow]]],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:green;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(blue,iota(filter(filter(x.s, apply(same_color,x.o)), green)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green
'λx.apply(rectangle,iota(filter(filter(filter(filter(filter(x.s, not[apply(same_size,x.o)]), size3), not[triangle]), size2), size2)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;4:not[%s];4:triangle;4:size2;4:size2
'λx.apply(and[size3,or[triangle,triangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:or[%s,%s];4:triangle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[circle,circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:circle;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(filter(x.s, apply(size-lt,x.o)), size3), or[apply(same_size,iota(x.s)),not[rectangle]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:size3;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:not[%s];4:rectangle
'λx.empty(filter(x.s, and[and[green,blue],size1]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:green;4:blue;4:size1
'λx.exists(and[or[size3,circle],green], filter(x.s, yellow))'	0:exists(%s, %s);4:and[%s,%s];4:or[%s,%s];4:size3;4:circle;4:green;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.forall(and[size2,yellow],filter(x.s, size2))'	0:forall(%s,%s);4:and[%s,%s];4:size2;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.contains(iota(filter(x.s, not[size3])), filter(filter(x.s, implies[triangle,and[and[rectangle,rectangle],apply(same_color,x.o)]]), and[green,apply(same_shape,x.o)]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:triangle;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(filter(filter(filter(filter(x.s, yellow), implies[nor[or[or[size1,blue],triangle],blue],triangle]), rectangle), size2), yellow), blue)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:implies[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:or[%s,%s];4:size1;4:blue;4:triangle;4:blue;4:triangle;4:rectangle;4:size2;4:yellow;4:blue
'λx.apply(not[size3],x.o)'	0:apply(%s,%s);4:not[%s];4:size3;1:%s.o;2:x
'λx.exists(size1, filter(filter(filter(x.s, triangle), rectangle), blue))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle;4:blue
'λx.apply(and[size3,and[and[green,size2],triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:green;4:size2;4:triangle;1:%s.o;2:x
'λx.apply(not[nor[apply(same_size,iota(filter(x.s, size1))),apply(size-geq,iota(filter(x.s, rectangle)))]],x.o)'	0:apply(%s,%s);4:not[%s];4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;1:%s.o;2:x
'λx.apply(and[apply(same_size,x.o),and[or[size2,not[or[and[blue,nand[and[rectangle,blue],and[rectangle,and[green,yellow]]]],apply(same_size,iota(filter(x.s, blue)))]]],triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:or[%s,%s];4:size2;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:blue;4:nand[%s,%s];4:and[%s,%s];4:rectangle;4:blue;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:green;4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(filter(filter(filter(x.s, size2), and[and[size2,and[rectangle,and[and[nor[triangle,circle],implies[size3,yellow]],nand[rectangle,implies[and[and[blue,yellow],not[size2]],or[green,yellow]]]]]],and[circle,circle]]), or[yellow,circle]), or[blue,blue]), circle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:triangle;4:circle;4:implies[%s,%s];4:size3;4:yellow;4:nand[%s,%s];4:rectangle;4:implies[%s,%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:yellow;4:not[%s];4:size2;4:or[%s,%s];4:green;4:yellow;4:and[%s,%s];4:circle;4:circle;4:or[%s,%s];4:yellow;4:circle;4:or[%s,%s];4:blue;4:blue;4:circle
'λx.apply(or[apply(same_color,iota(filter(x.s, size2))),not[and[implies[or[yellow,not[implies[and[not[triangle],blue],nand[and[and[not[not[size3]],not[apply(same_size,x.o)]],iff[green,and[triangle,rectangle]]],size2]]]],blue],size1]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:not[%s];4:and[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:yellow;4:not[%s];4:implies[%s,%s];4:and[%s,%s];4:not[%s];4:triangle;4:blue;4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:not[%s];4:size3;4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:iff[%s,%s];4:green;4:and[%s,%s];4:triangle;4:rectangle;4:size2;4:blue;4:size1;1:%s.o;2:x
'λx.apply(not[and[size1,apply(size-leq,x.o)]],iota(filter(filter(filter(x.s, blue), blue), yellow)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size1;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue;4:yellow
'λx.contains(x.o, filter(x.s, and[and[not[iff[and[size1,size3],green]],or[not[green],and[circle,not[and[circle,green]]]]],nand[blue,and[size3,not[triangle]]]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:iff[%s,%s];4:and[%s,%s];4:size1;4:size3;4:green;4:or[%s,%s];4:not[%s];4:green;4:and[%s,%s];4:circle;4:not[%s];4:and[%s,%s];4:circle;4:green;4:nand[%s,%s];4:blue;4:and[%s,%s];4:size3;4:not[%s];4:triangle
'λx.apply(not[or[nand[not[apply(same_size,iota(filter(x.s, iff[green,or[size3,and[triangle,and[blue,size3]]]])))],apply(same_size,x.o)],blue]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:nand[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:green;4:or[%s,%s];4:size3;4:and[%s,%s];4:triangle;4:and[%s,%s];4:blue;4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[rectangle,size2],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:rectangle;4:size2;1:%s.o;2:x
'λx.contains(x.o, filter(filter(filter(x.s, triangle), size3), circle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3;4:circle
'λx.apply(and[size2,size2],iota(filter(filter(x.s, and[size1,rectangle]), green)))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:rectangle;4:green
'λx.apply(rectangle,iota(filter(filter(filter(x.s, size1), green), nor[size2,implies[size1,triangle]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green;4:nor[%s,%s];4:size2;4:implies[%s,%s];4:size1;4:triangle
'λx.apply(green,iota(filter(filter(x.s, size1), size1)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1
'λx.apply(not[size3],iota(filter(filter(x.s, nand[size1,circle]), not[and[yellow,size3]])))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size1;4:circle;4:not[%s];4:and[%s,%s];4:yellow;4:size3
'λx.apply(size1,iota(filter(filter(x.s, size1), green)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green
'λx.apply(green,iota(filter(x.s, implies[rectangle,implies[or[green,size3],or[yellow,iff[triangle,yellow]]]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:rectangle;4:implies[%s,%s];4:or[%s,%s];4:green;4:size3;4:or[%s,%s];4:yellow;4:iff[%s,%s];4:triangle;4:yellow
'λx.apply(and[rectangle,and[nor[size2,size1],circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:nor[%s,%s];4:size2;4:size1;4:circle;1:%s.o;2:x
'λx.apply(not[circle],iota(filter(filter(filter(x.s, size3), triangle), size3)))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle;4:size3
'λx.apply(and[size1,blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:blue;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, and[triangle,and[size3,size2]]), blue), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:and[%s,%s];4:size3;4:size2;4:blue;4:rectangle
'λx.exists(not[size3], filter(x.s, size1))'	0:exists(%s, %s);4:not[%s];4:size3;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.empty(filter(x.s, apply(same_color,iota(filter(filter(filter(filter(filter(x.s, or[triangle,nand[blue,triangle]]), or[blue,rectangle]), or[size2,or[and[size3,size2],size2]]), nor[size1,circle]), size1)))))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:nand[%s,%s];4:blue;4:triangle;4:or[%s,%s];4:blue;4:rectangle;4:or[%s,%s];4:size2;4:or[%s,%s];4:and[%s,%s];4:size3;4:size2;4:size2;4:nor[%s,%s];4:size1;4:circle;4:size1
'λx.forall(triangle,filter(filter(filter(filter(x.s, size2), rectangle), circle), and[size2,apply(same_color,iota(x.s))]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle;4:circle;4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(size-lt,iota(filter(filter(x.s, circle), iff[circle,rectangle]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:iff[%s,%s];4:circle;4:rectangle;1:%s.o;2:x
'λx.apply(and[nor[not[circle],yellow],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:not[%s];4:circle;4:yellow;4:yellow;1:%s.o;2:x
'λx.empty(filter(x.s, and[size3,apply(same_size,x.o)]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(or[circle,green],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:green;1:iota(%s);3:%s.s;2:x
'λx.exists(blue, filter(x.s, or[apply(same_size,iota(filter(filter(x.s, and[green,green]), blue))),and[apply(same_size,x.o),size3]]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:green;4:blue;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3
'λx.apply(and[and[size3,rectangle],size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size3;4:rectangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, or[size3,circle]), and[apply(same_size,x.o),rectangle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:rectangle
'λx.apply(iff[size3,size1],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:size3;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(and[rectangle,implies[iff[or[triangle,blue],size3],circle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:implies[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:triangle;4:blue;4:size3;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[not[nor[blue,apply(same_shape,x.o)]]],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:nor[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(or[or[yellow,triangle],blue],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:yellow;4:triangle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[green,triangle],iota(filter(filter(filter(x.s, blue), and[or[and[yellow,green],circle],blue]), rectangle)))'	0:apply(%s,%s);4:nor[%s,%s];4:green;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:yellow;4:green;4:circle;4:blue;4:rectangle
'λx.apply(and[or[not[size3],and[size3,green]],triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:not[%s];4:size3;4:and[%s,%s];4:size3;4:green;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(x.s, not[and[not[implies[and[or[or[and[and[triangle,or[implies[triangle,circle],not[implies[apply(size-lt,x.o),blue]]]],size1],triangle],apply(same_size,x.o)],yellow],and[rectangle,size3]]],circle]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:not[%s];4:implies[%s,%s];4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:or[%s,%s];4:implies[%s,%s];4:triangle;4:circle;4:not[%s];4:implies[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:blue;4:size1;4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow;4:and[%s,%s];4:rectangle;4:size3;4:circle
'λx.apply(triangle,iota(filter(filter(x.s, and[size1,rectangle]), circle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:rectangle;4:circle
'λx.contains(iota(x.s), filter(x.s, nor[yellow,apply(same_shape,iota(filter(x.s, rectangle)))]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(blue,iota(filter(x.s, apply(same_shape,iota(filter(filter(filter(x.s, triangle), yellow), green))))))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:yellow;4:green
'λx.apply(and[implies[size2,and[size2,blue]],iff[size1,rectangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:size2;4:and[%s,%s];4:size2;4:blue;4:iff[%s,%s];4:size1;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.forall(not[yellow],filter(filter(x.s, circle), circle))'	0:forall(%s,%s);4:not[%s];4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:circle
'λx.apply(implies[yellow,or[rectangle,size3]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:yellow;4:or[%s,%s];4:rectangle;4:size3;1:%s.o;2:x
'λx.forall(rectangle,filter(filter(x.s, size2), triangle))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:triangle
'λx.apply(not[apply(size-leq,iota(filter(x.s, yellow)))],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.forall(not[apply(size-leq,iota(x.s))],filter(x.s, yellow))'	0:forall(%s,%s);4:not[%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(green,iota(filter(filter(filter(filter(x.s, or[and[rectangle,not[blue]],size2]), size1), circle), and[blue,apply(same_shape,x.o)])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:not[%s];4:blue;4:size2;4:size1;4:circle;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(and[or[yellow,not[and[triangle,blue]]],not[green]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:yellow;4:not[%s];4:and[%s,%s];4:triangle;4:blue;4:not[%s];4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(filter(x.s, and[size2,size1]), size3), size1)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:size1;4:size3;4:size1
'λx.apply(and[yellow,apply(same_shape,iota(filter(filter(x.s, and[or[apply(same_shape,iota(x.s)),nor[not[and[not[apply(same_color,x.o)],and[size3,size2]]],green]],and[and[yellow,apply(same_color,x.o)],and[size2,yellow]]]), green)))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:nor[%s,%s];4:not[%s];4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:size3;4:size2;4:green;4:and[%s,%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:size2;4:yellow;4:green;1:%s.o;2:x
'λx.apply(and[apply(size-leq,x.o),nor[size1,and[not[green],size1]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:nor[%s,%s];4:size1;4:and[%s,%s];4:not[%s];4:green;4:size1;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(filter(x.s, and[not[blue],circle]), and[size1,and[or[rectangle,not[size2]],and[yellow,or[implies[blue,and[green,or[and[nand[green,blue],and[and[or[green,and[rectangle,apply(size-lt,iota(x.s))]],size1],yellow]],blue]]],size3]]]]), yellow), iff[size2,green]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:blue;4:circle;4:and[%s,%s];4:size1;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:not[%s];4:size2;4:and[%s,%s];4:yellow;4:or[%s,%s];4:implies[%s,%s];4:blue;4:and[%s,%s];4:green;4:or[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:green;4:blue;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:green;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:size1;4:yellow;4:blue;4:size3;4:yellow;4:iff[%s,%s];4:size2;4:green
'λx.apply(and[and[blue,and[green,circle]],apply(same_color,x.o)],iota(filter(filter(x.s, size1), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:green;4:circle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue
'λx.contains(x.o, filter(x.s, iff[rectangle,and[and[yellow,rectangle],or[blue,blue]]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:yellow;4:rectangle;4:or[%s,%s];4:blue;4:blue
'λx.apply(or[or[not[circle],blue],triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:not[%s];4:circle;4:blue;4:triangle;1:%s.o;2:x
'λx.apply(or[implies[size1,apply(same_shape,x.o)],size2],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:implies[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(filter(x.s, size2), not[rectangle]), size1), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:not[%s];4:rectangle;4:size1;4:size3
'λx.apply(and[rectangle,yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(x.s, implies[circle,yellow])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:circle;4:yellow
'λx.apply(iff[size1,circle],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:iff[%s,%s];4:size1;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[blue,or[and[size1,or[and[or[blue,size2],apply(size-geq,iota(x.s))],not[blue]]],or[circle,apply(same_size,iota(filter(filter(filter(x.s, not[and[nand[or[size1,size2],size1],or[blue,circle]]]), and[size1,and[green,or[size1,blue]]]), and[yellow,rectangle])))]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:or[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:blue;4:size2;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:not[%s];4:blue;4:or[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:size1;4:size2;4:size1;4:or[%s,%s];4:blue;4:circle;4:and[%s,%s];4:size1;4:and[%s,%s];4:green;4:or[%s,%s];4:size1;4:blue;4:and[%s,%s];4:yellow;4:rectangle;1:%s.o;2:x
'λx.exists(apply(same_color,x.o), filter(filter(filter(x.s, size2), blue), size2))'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue;4:size2
'λx.apply(and[size2,and[size1,and[apply(same_color,x.o),circle]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;1:iota(%s);3:%s.s;2:x
'λx.forall(yellow,filter(filter(x.s, rectangle), circle))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle
'λx.exists(or[blue,implies[size2,size1]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:blue;4:implies[%s,%s];4:size2;4:size1;3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(x.s, green), circle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:circle
'λx.exists(apply(same_size,x.o), filter(x.s, and[rectangle,size1]))'	0:exists(%s, %s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:size1
'λx.apply(and[size2,or[size2,or[green,and[rectangle,or[rectangle,rectangle]]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:or[%s,%s];4:size2;4:or[%s,%s];4:green;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:rectangle;4:rectangle;1:%s.o;2:x
'λx.forall(or[size2,apply(same_size,iota(filter(x.s, apply(same_size,x.o))))],filter(filter(x.s, blue), rectangle))'	0:forall(%s,%s);4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle
'λx.apply(not[nand[size2,size3]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:nand[%s,%s];4:size2;4:size3;1:iota(%s);3:%s.s;2:x
'λx.forall(yellow,filter(filter(filter(filter(filter(filter(filter(filter(x.s, size2), and[size1,triangle]), apply(same_color,iota(filter(filter(x.s, green), and[and[apply(same_color,iota(x.s)),size2],size1])))), implies[size3,size1]), yellow), and[apply(same_size,x.o),apply(same_shape,x.o)]), triangle), or[triangle,implies[size2,yellow]]))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:size1;4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size2;4:size1;4:implies[%s,%s];4:size3;4:size1;4:yellow;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle;4:or[%s,%s];4:triangle;4:implies[%s,%s];4:size2;4:yellow
'λx.apply(and[not[circle],or[blue,blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:circle;4:or[%s,%s];4:blue;4:blue;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(filter(x.s, size1), circle), iff[triangle,blue]), rectangle)), filter(x.s, blue))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle;4:iff[%s,%s];4:triangle;4:blue;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.exists(iff[size1,size1], filter(x.s, and[and[or[green,green],size1],or[size2,triangle]]))'	0:exists(%s, %s);4:iff[%s,%s];4:size1;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:green;4:green;4:size1;4:or[%s,%s];4:size2;4:triangle
'λx.apply(and[size1,and[size2,size3]],iota(filter(filter(x.s, size2), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:and[%s,%s];4:size2;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue
'λx.forall(size1,filter(x.s, triangle))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.forall(and[nand[size3,nor[not[and[size2,size1]],not[circle]]],apply(same_shape,iota(x.s))],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:size3;4:nor[%s,%s];4:not[%s];4:and[%s,%s];4:size2;4:size1;4:not[%s];4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(yellow,iota(filter(x.s, nor[size1,iff[circle,green]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size1;4:iff[%s,%s];4:circle;4:green
'λx.apply(size1,iota(filter(filter(x.s, triangle), blue)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue
'λx.apply(triangle,iota(filter(x.s, and[apply(same_shape,x.o),nor[or[nor[yellow,and[yellow,and[size1,and[circle,apply(same_shape,iota(filter(x.s, not[size1])))]]]],yellow],and[size1,and[apply(same_color,x.o),not[apply(size-gt,x.o)]]]]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:nor[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:yellow;4:and[%s,%s];4:yellow;4:and[%s,%s];4:size1;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:yellow;4:and[%s,%s];4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.empty(filter(filter(x.s, and[green,yellow]), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:yellow;4:size1
'λx.apply(and[circle,rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[or[or[or[green,triangle],green],and[triangle,size3]],triangle],and[circle,size3]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:green;4:triangle;4:green;4:and[%s,%s];4:triangle;4:size3;4:triangle;4:and[%s,%s];4:circle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(x.s, triangle), nor[yellow,rectangle])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:nor[%s,%s];4:yellow;4:rectangle;3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(x.s, circle), and[size3,nand[and[and[implies[yellow,not[or[and[size3,or[circle,and[apply(size-gt,iota(filter(filter(filter(x.s, rectangle), circle), apply(same_shape,iota(x.s))))),not[size1]]]],triangle]]],yellow],and[blue,rectangle]],nand[circle,blue]]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:size3;4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:yellow;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:size3;4:or[%s,%s];4:circle;4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:not[%s];4:size1;4:triangle;4:yellow;4:and[%s,%s];4:blue;4:rectangle;4:nand[%s,%s];4:circle;4:blue
'λx.forall(triangle,filter(filter(filter(filter(x.s, triangle), blue), blue), and[rectangle,blue]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue;4:blue;4:and[%s,%s];4:rectangle;4:blue
'λx.contains(iota(filter(x.s, not[or[and[green,rectangle],rectangle]])), filter(x.s, and[and[and[yellow,size1],size3],apply(same_color,iota(x.s))]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:green;4:rectangle;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:size1;4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(not[and[yellow,and[rectangle,size2]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:rectangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size1,size1],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[blue,green],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[rectangle,circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:circle;1:%s.o;2:x
'λx.apply(not[not[size1]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:size1;1:%s.o;2:x
'λx.forall(size1,filter(filter(filter(filter(filter(filter(filter(x.s, implies[size3,size1]), size2), yellow), circle), implies[blue,green]), and[apply(same_color,x.o),yellow]), triangle))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size3;4:size1;4:size2;4:yellow;4:circle;4:implies[%s,%s];4:blue;4:green;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;4:triangle
'λx.forall(and[rectangle,size3],filter(filter(x.s, circle), blue))'	0:forall(%s,%s);4:and[%s,%s];4:rectangle;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue
'λx.apply(not[rectangle],iota(filter(filter(filter(x.s, or[blue,and[and[apply(same_shape,iota(x.s)),and[rectangle,blue]],yellow]]), triangle), rectangle)))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:blue;4:yellow;4:triangle;4:rectangle
'λx.apply(or[yellow,yellow],iota(filter(x.s, green)))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.forall(and[green,and[or[apply(same_shape,iota(x.s)),and[rectangle,size2]],or[iff[or[rectangle,blue],size2],and[not[green],and[rectangle,or[implies[or[circle,size3],triangle],or[apply(same_shape,x.o),size2]]]]]]],filter(filter(filter(x.s, and[triangle,nand[size3,or[size2,not[or[size3,or[and[blue,and[triangle,yellow]],nand[iff[size2,yellow],circle]]]]]]]), size2), blue))'	0:forall(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:size2;4:or[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:rectangle;4:blue;4:size2;4:and[%s,%s];4:not[%s];4:green;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:circle;4:size3;4:triangle;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:nand[%s,%s];4:size3;4:or[%s,%s];4:size2;4:not[%s];4:or[%s,%s];4:size3;4:or[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:triangle;4:yellow;4:nand[%s,%s];4:iff[%s,%s];4:size2;4:yellow;4:circle;4:size2;4:blue
'λx.apply(rectangle,iota(filter(filter(filter(filter(x.s, and[or[green,yellow],rectangle]), size3), triangle), not[blue])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:green;4:yellow;4:rectangle;4:size3;4:triangle;4:not[%s];4:blue
'λx.apply(and[or[size1,rectangle],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size1;4:rectangle;4:size2;1:%s.o;2:x
'λx.apply(apply(same_color,iota(filter(filter(filter(x.s, blue), or[size1,rectangle]), circle))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:size1;4:rectangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[circle,apply(size-gt,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(not[size2],iota(filter(filter(filter(x.s, implies[size3,nor[not[nor[and[or[or[circle,size2],rectangle],and[size3,circle]],yellow]],and[apply(size-lt,iota(x.s)),size3]]]), size1), size1)))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size3;4:nor[%s,%s];4:not[%s];4:nor[%s,%s];4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:circle;4:size2;4:rectangle;4:and[%s,%s];4:size3;4:circle;4:yellow;4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:size3;4:size1;4:size1
'λx.apply(or[size3,and[rectangle,and[size2,triangle]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:size2;4:triangle;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(filter(filter(filter(filter(x.s, size1), iff[size1,or[triangle,circle]]), or[nor[triangle,size2],yellow]), triangle), size3), and[size1,size3])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:iff[%s,%s];4:size1;4:or[%s,%s];4:triangle;4:circle;4:or[%s,%s];4:nor[%s,%s];4:triangle;4:size2;4:yellow;4:triangle;4:size3;4:and[%s,%s];4:size1;4:size3
'λx.apply(triangle,iota(filter(filter(filter(x.s, green), size1), size2)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1;4:size2
'λx.apply(implies[size1,rectangle],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:implies[%s,%s];4:size1;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(nor[size3,size3],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size3;4:size3;1:%s.o;2:x
'λx.apply(iff[blue,apply(same_color,iota(x.s))],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.forall(and[yellow,apply(same_size,iota(x.s))],filter(filter(x.s, size2), circle))'	0:forall(%s,%s);4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle
'λx.apply(not[implies[nand[size2,and[circle,or[circle,circle]]],circle]],iota(filter(x.s, apply(same_color,x.o))))'	0:apply(%s,%s);4:not[%s];4:implies[%s,%s];4:nand[%s,%s];4:size2;4:and[%s,%s];4:circle;4:or[%s,%s];4:circle;4:circle;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.forall(nor[apply(same_color,x.o),size3],filter(filter(filter(filter(filter(x.s, apply(size-geq,iota(filter(x.s, yellow)))), yellow), triangle), yellow), circle))'	0:forall(%s,%s);4:nor[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:yellow;4:triangle;4:yellow;4:circle
'λx.apply(and[green,green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:green;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(x.s, and[circle,implies[circle,yellow]]), size1)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:implies[%s,%s];4:circle;4:yellow;4:size1
'λx.apply(nor[iff[or[yellow,and[green,blue]],circle],and[and[not[triangle],apply(same_shape,iota(filter(x.s, rectangle)))],triangle]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:yellow;4:and[%s,%s];4:green;4:blue;4:circle;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle;1:%s.o;2:x
'λx.apply(iff[blue,triangle],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:blue;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, yellow)), filter(filter(filter(x.s, iff[circle,green]), and[yellow,apply(size-leq,x.o)]), size1))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:circle;4:green;4:and[%s,%s];4:yellow;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size1
'λx.forall(triangle,filter(filter(x.s, size2), apply(same_color,x.o)))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(implies[green,circle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:green;4:circle;1:%s.o;2:x
'λx.forall(apply(same_color,iota(x.s)),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.exists(and[triangle,blue], filter(filter(filter(x.s, triangle), blue), blue))'	0:exists(%s, %s);4:and[%s,%s];4:triangle;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue;4:blue
'λx.apply(nand[circle,nor[blue,triangle]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:circle;4:nor[%s,%s];4:blue;4:triangle;1:%s.o;2:x
'λx.apply(or[blue,apply(same_size,iota(filter(filter(x.s, blue), and[implies[blue,triangle],size2])))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:implies[%s,%s];4:blue;4:triangle;4:size2;1:%s.o;2:x
'λx.exists(blue, filter(filter(filter(x.s, and[apply(same_shape,iota(x.s)),circle]), triangle), blue))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle;4:triangle;4:blue
'λx.forall(and[or[and[yellow,size3],not[circle]],or[not[size1],green]],filter(x.s, size1))'	0:forall(%s,%s);4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:yellow;4:size3;4:not[%s];4:circle;4:or[%s,%s];4:not[%s];4:size1;4:green;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(not[size2],x.o)'	0:apply(%s,%s);4:not[%s];4:size2;1:%s.o;2:x
'λx.apply(not[not[blue]],iota(filter(filter(x.s, blue), apply(same_size,iota(filter(x.s, nor[size2,implies[blue,and[not[implies[size2,nor[not[not[size3]],and[apply(size-leq,x.o),size3]]]],green]]]))))))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size2;4:implies[%s,%s];4:blue;4:and[%s,%s];4:not[%s];4:implies[%s,%s];4:size2;4:nor[%s,%s];4:not[%s];4:not[%s];4:size3;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size3;4:green
'λx.apply(size2,iota(filter(filter(filter(x.s, size1), green), nor[size1,triangle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green;4:nor[%s,%s];4:size1;4:triangle
'λx.apply(size1,iota(filter(filter(filter(filter(x.s, green), circle), yellow), size1)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:circle;4:yellow;4:size1
'λx.forall(and[circle,and[and[green,size2],and[and[size3,size1],triangle]]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:green;4:size2;4:and[%s,%s];4:and[%s,%s];4:size3;4:size1;4:triangle;3:%s.s;2:x
'λx.exists(circle, filter(filter(filter(x.s, rectangle), size3), yellow))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3;4:yellow
'λx.apply(triangle,iota(filter(filter(filter(x.s, and[size2,size3]), rectangle), and[and[size3,size2],not[and[and[green,yellow],triangle]]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:size3;4:rectangle;4:and[%s,%s];4:and[%s,%s];4:size3;4:size2;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:green;4:yellow;4:triangle
'λx.empty(filter(filter(x.s, blue), or[yellow,circle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:yellow;4:circle
'λx.apply(size3,iota(filter(filter(filter(filter(x.s, nor[circle,and[rectangle,or[and[circle,triangle],green]]]), circle), rectangle), green)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:circle;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:circle;4:triangle;4:green;4:circle;4:rectangle;4:green
'λx.apply(and[size3,green],iota(filter(x.s, green)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.exists(blue, filter(filter(x.s, and[green,size3]), and[nand[yellow,size2],rectangle]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:size3;4:and[%s,%s];4:nand[%s,%s];4:yellow;4:size2;4:rectangle
'λx.empty(filter(filter(filter(filter(filter(x.s, circle), apply(same_shape,x.o)), and[rectangle,iff[size2,apply(same_shape,x.o)]]), green), apply(same_color,iota(x.s))))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:rectangle;4:iff[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(and[triangle,apply(same_color,iota(x.s))],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(x.s, implies[triangle,size2])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:triangle;4:size2
'λx.apply(or[apply(size-leq,x.o),apply(same_color,iota(x.s))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(nor[or[circle,green],size3],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:or[%s,%s];4:circle;4:green;4:size3;1:%s.o;2:x
'λx.contains(x.o, filter(filter(filter(x.s, apply(same_color,iota(x.s))), blue), size3))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:blue;4:size3
'λx.contains(x.o, filter(x.s, or[or[apply(size-leq,x.o),size3],nor[nor[yellow,nor[and[circle,iff[size1,yellow]],apply(size-leq,x.o)]],and[size3,green]]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size3;4:nor[%s,%s];4:nor[%s,%s];4:yellow;4:nor[%s,%s];4:and[%s,%s];4:circle;4:iff[%s,%s];4:size1;4:yellow;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:and[%s,%s];4:size3;4:green
'λx.apply(rectangle,iota(filter(filter(filter(x.s, and[not[circle],and[size2,apply(size-gt,x.o)]]), circle), size3)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:circle;4:and[%s,%s];4:size2;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:circle;4:size3
'λx.apply(not[and[size2,and[size2,or[size3,circle]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:size2;4:or[%s,%s];4:size3;4:circle;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, and[rectangle,yellow]), yellow)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:yellow;4:yellow
'λx.apply(apply(same_shape,iota(filter(x.s, yellow))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, green), and[blue,size3]), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:blue;4:size3;4:green
'λx.apply(and[triangle,blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:blue;1:%s.o;2:x
'λx.apply(nor[or[blue,circle],and[rectangle,and[and[triangle,apply(size-lt,iota(x.s))],size3]]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:or[%s,%s];4:blue;4:circle;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:triangle;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:size3;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, size3), iff[or[size2,triangle],and[size3,nor[yellow,and[rectangle,and[apply(same_size,iota(filter(x.s, rectangle))),apply(same_size,x.o)]]]]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:iff[%s,%s];4:or[%s,%s];4:size2;4:triangle;4:and[%s,%s];4:size3;4:nor[%s,%s];4:yellow;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, apply(same_shape,x.o)), and[or[rectangle,blue],triangle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:blue;4:triangle
'λx.apply(and[size2,and[iff[size3,and[not[not[apply(same_color,iota(x.s))]],and[size3,triangle]]],nand[green,size1]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:iff[%s,%s];4:size3;4:and[%s,%s];4:not[%s];4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:triangle;4:nand[%s,%s];4:green;4:size1;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, yellow), implies[circle,blue]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:implies[%s,%s];4:circle;4:blue
'λx.apply(blue,iota(filter(filter(filter(x.s, or[triangle,triangle]), or[or[apply(same_color,x.o),blue],triangle]), size2)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:triangle;4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue;4:triangle;4:size2
'λx.apply(and[size3,iff[size2,size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:iff[%s,%s];4:size2;4:size1;1:%s.o;2:x
'λx.apply(and[or[nand[implies[and[triangle,circle],and[size3,not[yellow]]],or[size3,apply(same_size,iota(x.s))]],blue],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:nand[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:triangle;4:circle;4:and[%s,%s];4:size3;4:not[%s];4:yellow;4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:blue;4:blue;1:%s.o;2:x
'λx.apply(and[or[and[size1,size1],and[circle,green]],not[green]],iota(filter(x.s, or[green,size3])))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size1;4:size1;4:and[%s,%s];4:circle;4:green;4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:size3
'λx.apply(triangle,iota(filter(filter(x.s, nand[rectangle,green]), apply(same_shape,iota(x.s)))))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:rectangle;4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(x.s, size1), green)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green
'λx.contains(x.o, filter(x.s, triangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(not[triangle],iota(filter(filter(x.s, blue), size3)))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3
'λx.apply(nor[triangle,and[size1,circle]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:triangle;4:and[%s,%s];4:size1;4:circle;1:%s.o;2:x
'λx.apply(and[circle,apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[size1,implies[size1,iff[green,size3]]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:implies[%s,%s];4:size1;4:iff[%s,%s];4:green;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(not[size1],iota(filter(filter(x.s, circle), yellow)))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow
'λx.apply(not[or[blue,blue]],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:blue;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.exists(apply(same_size,iota(x.s)), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(and[iff[rectangle,blue],not[not[or[blue,yellow]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:rectangle;4:blue;4:not[%s];4:not[%s];4:or[%s,%s];4:blue;4:yellow;1:%s.o;2:x
'λx.contains(iota(filter(x.s, circle)), filter(filter(filter(x.s, circle), yellow), or[size2,yellow]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow;4:or[%s,%s];4:size2;4:yellow
'λx.exists(apply(same_shape,iota(filter(x.s, and[rectangle,size2]))), filter(x.s, size1))'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.forall(triangle,filter(filter(x.s, yellow), size1))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1
'λx.apply(size3,iota(filter(x.s, and[yellow,blue])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:blue
'λx.forall(yellow,filter(x.s, iff[size2,or[and[apply(same_color,iota(x.s)),size1],circle]]))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size2;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size1;4:circle
'λx.apply(size1,iota(filter(x.s, nand[and[blue,rectangle],apply(same_size,x.o)])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:and[%s,%s];4:blue;4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(filter(x.s, green), or[nor[rectangle,implies[size2,rectangle]],implies[green,size3]]), size2)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:nor[%s,%s];4:rectangle;4:implies[%s,%s];4:size2;4:rectangle;4:implies[%s,%s];4:green;4:size3;4:size2
'λx.forall(apply(same_size,iota(x.s)),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(x.s, rectangle), yellow)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:yellow
'λx.exists(size2, filter(filter(filter(x.s, green), yellow), size2))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow;4:size2
'λx.apply(nor[size1,and[green,green]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size1;4:and[%s,%s];4:green;4:green;1:%s.o;2:x
'λx.apply(not[apply(same_shape,iota(filter(x.s, triangle)))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;1:%s.o;2:x
'λx.apply(and[yellow,circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:circle;1:%s.o;2:x
'λx.apply(or[not[blue],iff[and[rectangle,green],triangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:blue;4:iff[%s,%s];4:and[%s,%s];4:rectangle;4:green;4:triangle;1:%s.o;2:x
'λx.exists(and[and[size1,size3],not[triangle]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:size1;4:size3;4:not[%s];4:triangle;3:%s.s;2:x
'λx.apply(apply(same_shape,iota(filter(x.s, size2))),iota(filter(filter(filter(filter(x.s, size1), nand[blue,size2]), size3), and[green,blue])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:nand[%s,%s];4:blue;4:size2;4:size3;4:and[%s,%s];4:green;4:blue
'λx.apply(apply(same_size,iota(filter(filter(filter(filter(filter(filter(x.s, triangle), not[implies[or[not[green],size1],or[rectangle,and[blue,size2]]]]), circle), green), not[size3]), blue))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:not[%s];4:implies[%s,%s];4:or[%s,%s];4:not[%s];4:green;4:size1;4:or[%s,%s];4:rectangle;4:and[%s,%s];4:blue;4:size2;4:circle;4:green;4:not[%s];4:size3;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(not[blue],iota(filter(filter(x.s, nor[implies[triangle,triangle],circle]), and[and[rectangle,size2],size1])))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:implies[%s,%s];4:triangle;4:triangle;4:circle;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size2;4:size1
'λx.apply(or[apply(same_color,iota(x.s)),and[not[circle],yellow]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:circle;4:yellow;1:%s.o;2:x
'λx.apply(nor[rectangle,or[circle,or[yellow,and[green,and[not[blue],size2]]]]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:rectangle;4:or[%s,%s];4:circle;4:or[%s,%s];4:yellow;4:and[%s,%s];4:green;4:and[%s,%s];4:not[%s];4:blue;4:size2;1:%s.o;2:x
'λx.apply(and[circle,or[blue,size1]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:or[%s,%s];4:blue;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(or[and[rectangle,and[not[yellow],and[circle,circle]]],and[nor[rectangle,green],green]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:not[%s];4:yellow;4:and[%s,%s];4:circle;4:circle;4:and[%s,%s];4:nor[%s,%s];4:rectangle;4:green;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(or[apply(same_color,iota(filter(filter(filter(filter(filter(x.s, or[implies[rectangle,size1],and[rectangle,size2]]), and[size2,not[triangle]]), size3), or[size1,circle]), size2))),size2],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:implies[%s,%s];4:rectangle;4:size1;4:and[%s,%s];4:rectangle;4:size2;4:and[%s,%s];4:size2;4:not[%s];4:triangle;4:size3;4:or[%s,%s];4:size1;4:circle;4:size2;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[size1,size1],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:size1;4:size1;1:%s.o;2:x
'λx.contains(x.o, filter(filter(filter(filter(filter(x.s, not[triangle]), rectangle), apply(same_size,iota(x.s))), green), iff[not[and[and[blue,and[green,yellow]],not[iff[or[circle,circle],nand[apply(same_size,iota(x.s)),yellow]]]]],not[green]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:green;4:iff[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:green;4:yellow;4:not[%s];4:iff[%s,%s];4:or[%s,%s];4:circle;4:circle;4:nand[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:yellow;4:not[%s];4:green
'λx.apply(and[and[yellow,blue],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:blue;4:yellow;1:%s.o;2:x
'λx.apply(apply(same_size,iota(filter(filter(filter(x.s, not[implies[not[blue],size1]]), size1), circle))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:implies[%s,%s];4:not[%s];4:blue;4:size1;4:size1;4:circle;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(x.s, circle), triangle), yellow))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle;4:yellow
'λx.apply(not[or[size3,green]],iota(filter(x.s, and[triangle,blue])))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:size3;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:blue
'λx.apply(triangle,iota(filter(filter(x.s, size3), not[rectangle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:rectangle
'λx.empty(filter(x.s, nor[not[apply(same_shape,x.o)],size2]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2
'λx.apply(and[not[and[and[size1,blue],and[size1,and[or[green,apply(same_size,iota(filter(x.s, size1)))],apply(size-leq,iota(x.s))]]]],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:blue;4:and[%s,%s];4:size1;4:and[%s,%s];4:or[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:green;1:%s.o;2:x
'λx.apply(or[not[blue],size1],iota(filter(x.s, and[apply(size-gt,x.o),nor[size3,size1]])))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:blue;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:nor[%s,%s];4:size3;4:size1
'λx.empty(filter(filter(x.s, apply(size-geq,iota(x.s))), or[green,not[apply(same_size,iota(x.s))]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:green;4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(or[triangle,or[or[size2,and[rectangle,and[yellow,green]]],rectangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:or[%s,%s];4:or[%s,%s];4:size2;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:yellow;4:green;4:rectangle;1:%s.o;2:x
'λx.apply(not[size2],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(nor[size2,green],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:size2;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[size1,not[size2]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:size1;4:not[%s];4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(filter(x.s, and[size2,green]), size1), rectangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:green;4:size1;4:rectangle
'λx.contains(x.o, filter(filter(filter(x.s, triangle), circle), nor[triangle,size1]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle;4:nor[%s,%s];4:triangle;4:size1
'λx.apply(rectangle,iota(filter(filter(filter(x.s, yellow), and[green,size3]), and[size2,rectangle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:green;4:size3;4:and[%s,%s];4:size2;4:rectangle
'λx.contains(iota(x.s), filter(filter(x.s, and[circle,size3]), size1))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size3;4:size1
'λx.forall(apply(same_size,x.o),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(and[and[size3,triangle],and[rectangle,size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size3;4:triangle;4:and[%s,%s];4:rectangle;4:size3;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, or[circle,triangle]), apply(same_shape,x.o))))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(nand[size1,triangle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size1;4:triangle;1:%s.o;2:x
'λx.apply(and[size1,size1],iota(filter(filter(x.s, size3), circle)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle
'λx.apply(apply(same_color,iota(filter(x.s, circle))),iota(filter(filter(filter(x.s, blue), green), not[circle])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green;4:not[%s];4:circle
'λx.apply(apply(size-gt,x.o),iota(filter(x.s, size3)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.contains(iota(filter(x.s, green)), filter(filter(x.s, rectangle), size1))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1
'λx.contains(x.o, filter(x.s, and[green,size3]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:size3
'λx.apply(and[not[rectangle],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:rectangle;4:blue;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, or[not[blue],blue])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:blue;4:blue
'λx.apply(or[green,size2],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(circle,iota(filter(filter(x.s, triangle), or[size1,blue])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:or[%s,%s];4:size1;4:blue
'λx.apply(or[apply(size-gt,x.o),nand[or[size3,and[size2,or[blue,blue]]],nor[size2,size2]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:nand[%s,%s];4:or[%s,%s];4:size3;4:and[%s,%s];4:size2;4:or[%s,%s];4:blue;4:blue;4:nor[%s,%s];4:size2;4:size2;1:%s.o;2:x
'λx.apply(implies[or[rectangle,or[nand[size2,iff[size1,size1]],green]],or[or[rectangle,triangle],rectangle]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:or[%s,%s];4:rectangle;4:or[%s,%s];4:nand[%s,%s];4:size2;4:iff[%s,%s];4:size1;4:size1;4:green;4:or[%s,%s];4:or[%s,%s];4:rectangle;4:triangle;4:rectangle;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, and[and[triangle,blue],or[not[green],apply(same_size,iota(filter(filter(filter(x.s, rectangle), apply(same_size,x.o)), blue)))]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:triangle;4:blue;4:or[%s,%s];4:not[%s];4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue
'λx.apply(or[apply(same_color,iota(x.s)),green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:green;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, apply(same_shape,x.o)))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(and[iff[size2,blue],and[circle,apply(same_shape,x.o)]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:size2;4:blue;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.exists(and[size1,green], filter(x.s, and[and[triangle,and[and[size2,circle],circle]],implies[or[size2,size2],not[size2]]]))'	0:exists(%s, %s);4:and[%s,%s];4:size1;4:green;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:and[%s,%s];4:size2;4:circle;4:circle;4:implies[%s,%s];4:or[%s,%s];4:size2;4:size2;4:not[%s];4:size2
'λx.apply(or[and[blue,circle],not[triangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:blue;4:circle;4:not[%s];4:triangle;1:%s.o;2:x
'λx.apply(and[blue,and[nor[triangle,yellow],not[size3]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:nor[%s,%s];4:triangle;4:yellow;4:not[%s];4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[circle,iff[apply(same_size,x.o),triangle]],iota(filter(x.s, and[nor[size1,and[size3,implies[triangle,blue]]],size2])))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:iff[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:size1;4:and[%s,%s];4:size3;4:implies[%s,%s];4:triangle;4:blue;4:size2
'λx.forall(yellow,filter(filter(filter(filter(x.s, and[rectangle,rectangle]), size2), or[rectangle,not[rectangle]]), green))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:rectangle;4:size2;4:or[%s,%s];4:rectangle;4:not[%s];4:rectangle;4:green
'λx.apply(and[size1,and[and[not[yellow],size3],not[size2]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:yellow;4:size3;4:not[%s];4:size2;1:%s.o;2:x
'λx.forall(and[and[triangle,size2],size1],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:size2;4:size1;3:%s.s;2:x
'λx.apply(green,iota(filter(x.s, blue)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(or[blue,or[size2,size2]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:or[%s,%s];4:size2;4:size2;1:iota(%s);3:%s.s;2:x
'λx.forall(not[size2],filter(filter(filter(x.s, or[not[size3],size3]), and[circle,or[green,yellow]]), blue))'	0:forall(%s,%s);4:not[%s];4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:size3;4:size3;4:and[%s,%s];4:circle;4:or[%s,%s];4:green;4:yellow;4:blue
'λx.contains(iota(x.s), filter(x.s, yellow))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(nand[size3,size2],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:size3;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(or[and[triangle,and[blue,nor[not[green],blue]]],size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:blue;4:nor[%s,%s];4:not[%s];4:green;4:blue;4:size3;1:%s.o;2:x
'λx.apply(and[size1,size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:size1;1:iota(%s);3:%s.s;2:x
'λx.forall(apply(size-geq,iota(x.s)),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(and[or[size3,or[rectangle,size1]],or[green,apply(same_size,x.o)]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size3;4:or[%s,%s];4:rectangle;4:size1;4:or[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(size1,iota(filter(x.s, or[and[not[size3],and[or[circle,green],blue]],and[not[apply(same_shape,x.o)],yellow]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:size3;4:and[%s,%s];4:or[%s,%s];4:circle;4:green;4:blue;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow
'λx.apply(or[size3,nor[apply(same_color,iota(x.s)),size2]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:nor[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size2;1:%s.o;2:x
'λx.apply(and[green,and[apply(same_shape,iota(filter(x.s, size2))),apply(size-geq,x.o)]],iota(filter(filter(filter(filter(filter(x.s, green), circle), nand[apply(same_shape,iota(x.s)),triangle]), implies[rectangle,size1]), and[circle,circle])))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:circle;4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle;4:implies[%s,%s];4:rectangle;4:size1;4:and[%s,%s];4:circle;4:circle
'λx.forall(apply(size-leq,iota(x.s)),filter(filter(filter(filter(filter(filter(x.s, rectangle), circle), and[triangle,size1]), not[size3]), green), and[not[circle],size3]))'	0:forall(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle;4:and[%s,%s];4:triangle;4:size1;4:not[%s];4:size3;4:green;4:and[%s,%s];4:not[%s];4:circle;4:size3
'λx.apply(size3,iota(filter(x.s, apply(size-lt,iota(x.s)))))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_shape,x.o),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[and[apply(same_shape,iota(x.s)),and[apply(same_color,x.o),not[blue]]],or[blue,triangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:blue;4:or[%s,%s];4:blue;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.exists(and[nand[and[circle,or[size1,and[or[yellow,triangle],and[and[size1,apply(same_size,x.o)],green]]]],and[rectangle,circle]],or[blue,rectangle]], filter(filter(filter(x.s, apply(same_color,x.o)), size1), yellow))'	0:exists(%s, %s);4:and[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:circle;4:or[%s,%s];4:size1;4:and[%s,%s];4:or[%s,%s];4:yellow;4:triangle;4:and[%s,%s];4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;4:and[%s,%s];4:rectangle;4:circle;4:or[%s,%s];4:blue;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1;4:yellow
'λx.contains(x.o, filter(filter(x.s, and[yellow,size1]), rectangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size1;4:rectangle
'λx.exists(and[rectangle,size2], filter(filter(x.s, size3), triangle))'	0:exists(%s, %s);4:and[%s,%s];4:rectangle;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle
'λx.contains(iota(x.s), filter(filter(x.s, blue), and[blue,size1]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:blue;4:size1
'λx.exists(yellow, filter(filter(x.s, size3), green))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green
'λx.apply(or[size2,size3],iota(filter(filter(x.s, triangle), or[or[size2,blue],or[not[rectangle],size1]])))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:or[%s,%s];4:or[%s,%s];4:size2;4:blue;4:or[%s,%s];4:not[%s];4:rectangle;4:size1
'λx.exists(and[and[yellow,size1],iff[green,rectangle]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:size1;4:iff[%s,%s];4:green;4:rectangle;3:%s.s;2:x
'λx.exists(or[not[green],apply(size-geq,iota(filter(filter(x.s, or[nand[size1,blue],circle]), and[size3,and[circle,and[and[yellow,or[green,rectangle]],size2]]])))], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:not[%s];4:green;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:nand[%s,%s];4:size1;4:blue;4:circle;4:and[%s,%s];4:size3;4:and[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:yellow;4:or[%s,%s];4:green;4:rectangle;4:size2;3:%s.s;2:x
'λx.exists(or[circle,triangle], filter(filter(x.s, rectangle), circle))'	0:exists(%s, %s);4:or[%s,%s];4:circle;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle
'λx.forall(blue,filter(x.s, size3))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(nand[size3,triangle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size3;4:triangle;1:%s.o;2:x
'λx.apply(or[or[apply(same_size,iota(filter(x.s, and[and[yellow,or[size2,apply(same_size,iota(x.s))]],blue]))),circle],rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:yellow;4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:blue;4:circle;4:rectangle;1:%s.o;2:x
'λx.apply(or[size1,blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:blue;1:%s.o;2:x
'λx.empty(filter(filter(x.s, and[and[or[blue,and[iff[apply(same_shape,x.o),or[apply(same_shape,x.o),not[and[not[implies[and[yellow,green],size1]],and[blue,iff[green,not[circle]]]]]]],green]],rectangle],size1]), or[and[rectangle,not[circle]],nand[blue,rectangle]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:blue;4:and[%s,%s];4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:not[%s];4:implies[%s,%s];4:and[%s,%s];4:yellow;4:green;4:size1;4:and[%s,%s];4:blue;4:iff[%s,%s];4:green;4:not[%s];4:circle;4:green;4:rectangle;4:size1;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:not[%s];4:circle;4:nand[%s,%s];4:blue;4:rectangle
'λx.forall(and[green,or[or[apply(same_shape,iota(x.s)),apply(same_shape,iota(filter(filter(x.s, nor[not[green],and[and[size1,size3],and[size2,or[rectangle,blue]]]]), size1)))],apply(same_size,x.o)]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:green;4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:not[%s];4:green;4:and[%s,%s];4:and[%s,%s];4:size1;4:size3;4:and[%s,%s];4:size2;4:or[%s,%s];4:rectangle;4:blue;4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:%s.s;2:x
'λx.exists(and[size2,size2], filter(x.s, not[triangle]))'	0:exists(%s, %s);4:and[%s,%s];4:size2;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.apply(rectangle,iota(filter(x.s, and[and[rectangle,green],or[blue,size1]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:green;4:or[%s,%s];4:blue;4:size1
'λx.apply(nand[size1,yellow],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size1;4:yellow;1:%s.o;2:x
'λx.apply(and[rectangle,and[and[or[circle,and[and[and[not[or[size2,apply(same_shape,iota(filter(x.s, and[yellow,green])))]],and[and[not[size3],yellow],size1]],green],apply(same_size,x.o)]],nand[not[yellow],green]],rectangle]],iota(filter(filter(filter(x.s, triangle), apply(same_size,x.o)), triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:green;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size3;4:yellow;4:size1;4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:nand[%s,%s];4:not[%s];4:yellow;4:green;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle
'λx.apply(not[circle],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(and[circle,or[and[size3,apply(same_shape,iota(x.s))],size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:or[%s,%s];4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size3;1:%s.o;2:x
'λx.apply(not[or[not[apply(same_size,iota(filter(filter(filter(x.s, green), triangle), size3)))],green]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:triangle;4:size3;4:green;1:%s.o;2:x
'λx.exists(and[blue,apply(same_color,iota(filter(filter(x.s, circle), triangle)))], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle;3:%s.s;2:x
'λx.apply(not[not[apply(same_color,iota(x.s))]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.exists(rectangle, filter(filter(filter(filter(x.s, not[yellow]), triangle), apply(same_color,iota(filter(x.s, yellow)))), and[not[blue],nor[iff[triangle,not[implies[circle,yellow]]],and[not[size2],triangle]]]))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:not[%s];4:blue;4:nor[%s,%s];4:iff[%s,%s];4:triangle;4:not[%s];4:implies[%s,%s];4:circle;4:yellow;4:and[%s,%s];4:not[%s];4:size2;4:triangle
'λx.apply(size3,iota(filter(x.s, size1)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(and[yellow,green],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[nand[apply(same_shape,x.o),yellow],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow;4:triangle;1:%s.o;2:x
'λx.apply(size3,iota(filter(x.s, and[blue,size2])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size2
'λx.apply(and[and[nor[not[iff[green,triangle]],size3],green],triangle],iota(filter(x.s, or[implies[and[triangle,or[and[yellow,rectangle],circle]],and[and[rectangle,size1],triangle]],size2])))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:not[%s];4:iff[%s,%s];4:green;4:triangle;4:size3;4:green;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:triangle;4:or[%s,%s];4:and[%s,%s];4:yellow;4:rectangle;4:circle;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size1;4:triangle;4:size2
'λx.apply(or[or[and[size1,and[and[size1,blue],size1]],iff[yellow,not[circle]]],and[size2,not[rectangle]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:size1;4:blue;4:size1;4:iff[%s,%s];4:yellow;4:not[%s];4:circle;4:and[%s,%s];4:size2;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.apply(and[blue,or[not[yellow],size3]],iota(filter(filter(x.s, triangle), not[and[nand[circle,triangle],triangle]])))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:or[%s,%s];4:not[%s];4:yellow;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:not[%s];4:and[%s,%s];4:nand[%s,%s];4:circle;4:triangle;4:triangle
'λx.exists(or[and[rectangle,not[size3]],not[implies[blue,rectangle]]], filter(filter(filter(filter(x.s, rectangle), size1), size3), size3))'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:rectangle;4:not[%s];4:size3;4:not[%s];4:implies[%s,%s];4:blue;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1;4:size3;4:size3
'λx.forall(not[size2],filter(x.s, yellow))'	0:forall(%s,%s);4:not[%s];4:size2;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(or[circle,rectangle],iota(filter(filter(filter(x.s, and[triangle,and[green,circle]]), and[and[triangle,blue],and[or[triangle,blue],or[triangle,or[blue,apply(size-leq,x.o)]]]]), or[circle,size3])))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:and[%s,%s];4:green;4:circle;4:and[%s,%s];4:and[%s,%s];4:triangle;4:blue;4:and[%s,%s];4:or[%s,%s];4:triangle;4:blue;4:or[%s,%s];4:triangle;4:or[%s,%s];4:blue;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:or[%s,%s];4:circle;4:size3
'λx.forall(circle,filter(filter(filter(x.s, size2), and[green,not[rectangle]]), iff[rectangle,nand[nor[or[and[and[iff[yellow,size1],size1],implies[size2,and[or[blue,not[and[and[green,circle],not[yellow]]]],blue]]],size2],triangle],apply(same_color,x.o)]]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:green;4:not[%s];4:rectangle;4:iff[%s,%s];4:rectangle;4:nand[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:yellow;4:size1;4:size1;4:implies[%s,%s];4:size2;4:and[%s,%s];4:or[%s,%s];4:blue;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:green;4:circle;4:not[%s];4:yellow;4:blue;4:size2;4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(and[green,size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:size1;1:%s.o;2:x
'λx.forall(and[not[not[and[apply(same_shape,iota(x.s)),or[blue,rectangle]]]],apply(same_shape,iota(filter(filter(x.s, yellow), iff[circle,green])))],filter(filter(x.s, and[circle,and[apply(same_color,iota(filter(filter(x.s, and[size1,yellow]), rectangle))),rectangle]]), size3))'	0:forall(%s,%s);4:and[%s,%s];4:not[%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:iff[%s,%s];4:circle;4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:yellow;4:rectangle;4:rectangle;4:size3
'λx.empty(filter(filter(filter(x.s, triangle), size1), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size1;4:rectangle
'λx.forall(blue,filter(x.s, size1))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(size3,iota(filter(filter(x.s, or[blue,rectangle]), size2)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:rectangle;4:size2
'λx.contains(x.o, filter(filter(filter(filter(filter(filter(x.s, and[size3,size3]), and[size2,and[and[not[yellow],apply(size-geq,iota(x.s))],green]]), iff[size3,size1]), size1), size1), rectangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:size3;4:and[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:yellow;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:green;4:iff[%s,%s];4:size3;4:size1;4:size1;4:size1;4:rectangle
'λx.apply(blue,iota(filter(filter(x.s, not[apply(same_color,iota(filter(x.s, blue)))]), circle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle
'λx.apply(circle,iota(filter(filter(filter(x.s, and[yellow,and[nor[rectangle,and[and[and[apply(size-geq,iota(filter(x.s, rectangle))),and[triangle,apply(same_size,x.o)]],blue],iff[or[and[and[size1,size1],and[and[size3,size1],and[rectangle,triangle]]],implies[apply(size-lt,iota(x.s)),size1]],rectangle]]],size3]]), size1), size1)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:and[%s,%s];4:nor[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;4:iff[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:size1;4:and[%s,%s];4:and[%s,%s];4:size3;4:size1;4:and[%s,%s];4:rectangle;4:triangle;4:implies[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:size1;4:rectangle;4:size3;4:size1;4:size1
'λx.apply(size3,iota(filter(filter(filter(filter(x.s, and[and[and[triangle,not[size3]],size1],not[or[blue,or[iff[size1,nand[and[rectangle,and[iff[and[blue,circle],size1],implies[and[size2,green],implies[and[and[yellow,circle],size1],and[circle,or[and[size3,circle],yellow]]]]]],apply(same_shape,x.o)]],yellow]]]]), and[not[iff[rectangle,circle]],blue]), circle), blue)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:not[%s];4:size3;4:size1;4:not[%s];4:or[%s,%s];4:blue;4:or[%s,%s];4:iff[%s,%s];4:size1;4:nand[%s,%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:blue;4:circle;4:size1;4:implies[%s,%s];4:and[%s,%s];4:size2;4:green;4:implies[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:circle;4:size1;4:and[%s,%s];4:circle;4:or[%s,%s];4:and[%s,%s];4:size3;4:circle;4:yellow;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow;4:and[%s,%s];4:not[%s];4:iff[%s,%s];4:rectangle;4:circle;4:blue;4:circle;4:blue
'λx.apply(circle,iota(filter(x.s, nor[yellow,and[yellow,blue]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:yellow;4:and[%s,%s];4:yellow;4:blue
'λx.exists(iff[apply(size-leq,x.o),size2], x.s)'	0:exists(%s, %s);4:iff[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size2;3:%s.s;2:x
'λx.apply(apply(size-gt,x.o),iota(filter(filter(x.s, and[triangle,nor[or[not[not[apply(same_color,iota(filter(x.s, size1)))]],yellow],size1]]), circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:nor[%s,%s];4:or[%s,%s];4:not[%s];4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow;4:size1;4:circle
'λx.contains(iota(filter(x.s, nor[not[iff[circle,blue]],size3])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:not[%s];4:iff[%s,%s];4:circle;4:blue;4:size3;3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(x.s, size3), rectangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle
'λx.apply(and[and[size1,implies[or[triangle,size2],and[rectangle,size3]]],or[yellow,apply(size-lt,x.o)]],iota(filter(filter(filter(filter(filter(filter(filter(filter(filter(x.s, size3), rectangle), size1), size1), nor[not[yellow],yellow]), green), triangle), rectangle), circle)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:implies[%s,%s];4:or[%s,%s];4:triangle;4:size2;4:and[%s,%s];4:rectangle;4:size3;4:or[%s,%s];4:yellow;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle;4:size1;4:size1;4:nor[%s,%s];4:not[%s];4:yellow;4:yellow;4:green;4:triangle;4:rectangle;4:circle
'λx.apply(not[implies[apply(same_shape,x.o),size2]],x.o)'	0:apply(%s,%s);4:not[%s];4:implies[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2;1:%s.o;2:x
'λx.exists(and[triangle,yellow], filter(filter(x.s, circle), triangle))'	0:exists(%s, %s);4:and[%s,%s];4:triangle;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle
'λx.contains(iota(filter(x.s, triangle)), filter(filter(filter(x.s, blue), or[not[and[triangle,triangle]],apply(same_size,x.o)]), blue))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:triangle;4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue
'λx.apply(iff[and[nand[not[and[or[size1,or[blue,circle]],not[implies[circle,blue]]]],circle],and[and[triangle,size3],apply(same_color,x.o)]],nor[not[rectangle],size3]],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:not[%s];4:and[%s,%s];4:or[%s,%s];4:size1;4:or[%s,%s];4:blue;4:circle;4:not[%s];4:implies[%s,%s];4:circle;4:blue;4:circle;4:and[%s,%s];4:and[%s,%s];4:triangle;4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:nor[%s,%s];4:not[%s];4:rectangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(or[apply(same_size,x.o),green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;1:%s.o;2:x
'λx.apply(apply(same_size,iota(x.s)),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(or[circle,size3],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.forall(or[and[triangle,size1],apply(same_shape,iota(x.s))],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:and[%s,%s];4:triangle;4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.contains(iota(filter(filter(x.s, triangle), and[size3,circle])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:size3;4:circle;3:%s.s;2:x
'λx.apply(and[and[green,rectangle],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:green;4:rectangle;4:size3;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, apply(size-gt,iota(x.s))), and[rectangle,apply(same_size,iota(filter(filter(filter(x.s, not[triangle]), green), green)))])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:green;4:green;3:%s.s;2:x
'λx.empty(filter(filter(x.s, size3), not[and[rectangle,and[nand[or[or[apply(size-leq,iota(filter(x.s, size3))),or[and[green,circle],and[size3,size2]]],nand[yellow,rectangle]],size2],green]]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:and[%s,%s];4:green;4:circle;4:and[%s,%s];4:size3;4:size2;4:nand[%s,%s];4:yellow;4:rectangle;4:size2;4:green
'λx.apply(blue,iota(filter(filter(filter(x.s, apply(same_size,iota(filter(x.s, blue)))), nand[triangle,and[or[size1,nor[size2,blue]],size3]]), size2)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:nand[%s,%s];4:triangle;4:and[%s,%s];4:or[%s,%s];4:size1;4:nor[%s,%s];4:size2;4:blue;4:size3;4:size2
'λx.exists(or[and[triangle,triangle],size1], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:triangle;4:triangle;4:size1;3:%s.s;2:x
'λx.apply(and[and[green,triangle],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:green;4:triangle;4:rectangle;1:%s.o;2:x
'λx.forall(yellow,filter(x.s, size3))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(and[size3,nor[green,and[size2,or[rectangle,or[size3,apply(size-leq,x.o)]]]]],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:nor[%s,%s];4:green;4:and[%s,%s];4:size2;4:or[%s,%s];4:rectangle;4:or[%s,%s];4:size3;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(triangle,iota(filter(filter(filter(filter(filter(filter(filter(filter(x.s, circle), size3), size3), yellow), size1), green), green), circle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3;4:size3;4:yellow;4:size1;4:green;4:green;4:circle
'λx.apply(and[implies[not[not[yellow]],not[not[size2]]],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:not[%s];4:not[%s];4:yellow;4:not[%s];4:not[%s];4:size2;4:size2;1:%s.o;2:x
'λx.forall(rectangle,filter(x.s, size3))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(apply(size-geq,x.o),iota(filter(filter(x.s, rectangle), rectangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle
'λx.apply(or[size1,not[apply(same_color,x.o)]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(or[yellow,iff[blue,not[rectangle]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:iff[%s,%s];4:blue;4:not[%s];4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size1,size3],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(nor[and[size1,triangle],not[triangle]],iota(filter(filter(filter(filter(filter(filter(filter(filter(x.s, circle), size1), rectangle), triangle), not[green]), rectangle), and[yellow,nand[green,circle]]), rectangle)))'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:size1;4:triangle;4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1;4:rectangle;4:triangle;4:not[%s];4:green;4:rectangle;4:and[%s,%s];4:yellow;4:nand[%s,%s];4:green;4:circle;4:rectangle
'λx.apply(rectangle,iota(filter(filter(x.s, and[yellow,or[or[green,circle],circle]]), apply(same_size,iota(filter(filter(x.s, rectangle), triangle))))))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:or[%s,%s];4:or[%s,%s];4:green;4:circle;4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle
'λx.apply(blue,iota(filter(x.s, or[rectangle,or[iff[not[green],and[triangle,size2]],size3]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:or[%s,%s];4:iff[%s,%s];4:not[%s];4:green;4:and[%s,%s];4:triangle;4:size2;4:size3
'λx.apply(and[circle,and[and[or[size3,and[size1,not[size3]]],size3],and[and[not[green],and[yellow,and[size2,circle]]],size1]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size3;4:and[%s,%s];4:size1;4:not[%s];4:size3;4:size3;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:green;4:and[%s,%s];4:yellow;4:and[%s,%s];4:size2;4:circle;4:size1;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, and[triangle,green]), or[and[or[and[or[and[nor[not[yellow],apply(same_shape,iota(x.s))],size3],circle],not[size3]],size3],or[size3,not[size3]]],not[rectangle]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:green;4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:not[%s];4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size3;4:circle;4:not[%s];4:size3;4:size3;4:or[%s,%s];4:size3;4:not[%s];4:size3;4:not[%s];4:rectangle
'λx.forall(implies[not[not[rectangle]],and[or[or[yellow,and[iff[yellow,and[not[circle],green]],size3]],yellow],green]],x.s)'	0:forall(%s,%s);4:implies[%s,%s];4:not[%s];4:not[%s];4:rectangle;4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:yellow;4:and[%s,%s];4:iff[%s,%s];4:yellow;4:and[%s,%s];4:not[%s];4:circle;4:green;4:size3;4:yellow;4:green;3:%s.s;2:x
'λx.apply(and[size2,blue],iota(filter(filter(x.s, yellow), circle)))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle
'λx.apply(and[iff[triangle,size3],or[implies[apply(same_color,iota(x.s)),size2],size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:triangle;4:size3;4:or[%s,%s];4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size2;4:size3;1:%s.o;2:x
'λx.apply(and[circle,nor[nand[size1,not[and[rectangle,size3]]],size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:nor[%s,%s];4:nand[%s,%s];4:size1;4:not[%s];4:and[%s,%s];4:rectangle;4:size3;4:size1;1:%s.o;2:x
'λx.apply(nand[circle,apply(size-geq,iota(x.s))],iota(filter(x.s, not[and[not[not[circle]],apply(same_size,x.o)]])))'	0:apply(%s,%s);4:nand[%s,%s];4:circle;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:not[%s];4:not[%s];4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.forall(apply(same_size,x.o),filter(filter(filter(x.s, blue), circle), apply(same_size,iota(filter(x.s, size3)))))'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.forall(circle,filter(filter(x.s, rectangle), circle))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle
'λx.apply(and[nand[rectangle,or[yellow,and[blue,rectangle]]],and[green,apply(same_color,x.o)]],iota(filter(filter(filter(filter(x.s, size3), green), and[size2,and[rectangle,circle]]), rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:rectangle;4:or[%s,%s];4:yellow;4:and[%s,%s];4:blue;4:rectangle;4:and[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green;4:and[%s,%s];4:size2;4:and[%s,%s];4:rectangle;4:circle;4:rectangle
'λx.apply(circle,iota(filter(filter(filter(x.s, apply(size-gt,iota(x.s))), nand[and[circle,triangle],size1]), or[or[iff[size2,apply(same_shape,x.o)],size3],rectangle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:nand[%s,%s];4:and[%s,%s];4:circle;4:triangle;4:size1;4:or[%s,%s];4:or[%s,%s];4:iff[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3;4:rectangle
'λx.apply(size3,iota(filter(filter(x.s, and[triangle,not[yellow]]), and[triangle,green])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:not[%s];4:yellow;4:and[%s,%s];4:triangle;4:green
'λx.apply(and[yellow,size1],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(size2,iota(filter(filter(filter(filter(x.s, triangle), apply(size-leq,iota(x.s))), size1), size3)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:size1;4:size3
'λx.apply(circle,iota(filter(x.s, apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.exists(green, filter(x.s, or[size3,implies[and[green,implies[blue,rectangle]],size2]]))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:implies[%s,%s];4:and[%s,%s];4:green;4:implies[%s,%s];4:blue;4:rectangle;4:size2
'λx.apply(and[and[blue,size1],size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:size1;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(x.s, not[green]), rectangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:rectangle
'λx.apply(apply(size-gt,x.o),iota(filter(filter(filter(filter(filter(filter(x.s, circle), apply(same_size,x.o)), or[or[nor[triangle,yellow],and[size1,and[blue,apply(same_color,iota(x.s))]]],rectangle]), and[blue,green]), and[size3,size3]), circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:triangle;4:yellow;4:and[%s,%s];4:size1;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:blue;4:green;4:and[%s,%s];4:size3;4:size3;4:circle
'λx.apply(apply(same_shape,iota(filter(x.s, not[rectangle]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, and[circle,nor[green,and[size3,and[or[apply(size-lt,x.o),rectangle],size2]]]]), size3)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:nor[%s,%s];4:green;4:and[%s,%s];4:size3;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:rectangle;4:size2;4:size3
'λx.contains(iota(x.s), filter(filter(filter(x.s, yellow), yellow), apply(same_color,x.o)))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(not[and[apply(same_shape,iota(filter(x.s, and[blue,size3]))),size3]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size3;4:size3;1:%s.o;2:x
'λx.exists(yellow, filter(x.s, rectangle))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[yellow,and[or[and[apply(same_size,iota(filter(filter(x.s, size2), and[and[circle,and[size1,size1]],size3]))),size2],green],triangle]],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:size1;4:size1;4:size3;4:size2;4:green;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[apply(size-geq,x.o),not[apply(same_color,iota(x.s))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(nand[not[rectangle],rectangle],iota(filter(x.s, and[circle,blue])))'	0:apply(%s,%s);4:nand[%s,%s];4:not[%s];4:rectangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:blue
'λx.apply(circle,iota(filter(x.s, implies[size3,and[size2,circle]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size3;4:and[%s,%s];4:size2;4:circle
'λx.apply(not[and[circle,and[triangle,yellow]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:triangle;4:yellow;1:%s.o;2:x
'λx.forall(iff[yellow,apply(size-leq,iota(x.s))],filter(filter(filter(x.s, blue), and[rectangle,circle]), blue))'	0:forall(%s,%s);4:iff[%s,%s];4:yellow;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:rectangle;4:circle;4:blue
'λx.apply(iff[green,rectangle],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:iff[%s,%s];4:green;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(not[and[rectangle,size2]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:rectangle;4:size2;1:%s.o;2:x
'λx.apply(nor[implies[triangle,triangle],or[and[green,and[rectangle,blue]],or[size1,rectangle]]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:implies[%s,%s];4:triangle;4:triangle;4:or[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:rectangle;4:blue;4:or[%s,%s];4:size1;4:rectangle;1:%s.o;2:x
'λx.contains(x.o, filter(filter(filter(filter(x.s, and[and[rectangle,size1],and[yellow,yellow]]), nand[and[size3,size1],and[not[or[not[size1],or[or[rectangle,size2],rectangle]]],size1]]), and[and[circle,green],size3]), circle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size1;4:and[%s,%s];4:yellow;4:yellow;4:nand[%s,%s];4:and[%s,%s];4:size3;4:size1;4:and[%s,%s];4:not[%s];4:or[%s,%s];4:not[%s];4:size1;4:or[%s,%s];4:or[%s,%s];4:rectangle;4:size2;4:rectangle;4:size1;4:and[%s,%s];4:and[%s,%s];4:circle;4:green;4:size3;4:circle
'λx.apply(and[yellow,or[size3,yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:or[%s,%s];4:size3;4:yellow;1:%s.o;2:x
'λx.apply(and[triangle,apply(same_color,iota(filter(x.s, rectangle)))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;1:%s.o;2:x
'λx.forall(not[or[size3,or[implies[circle,size1],circle]]],filter(x.s, triangle))'	0:forall(%s,%s);4:not[%s];4:or[%s,%s];4:size3;4:or[%s,%s];4:implies[%s,%s];4:circle;4:size1;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(rectangle,iota(filter(filter(filter(x.s, rectangle), apply(same_shape,iota(x.s))), nor[apply(same_size,x.o),and[and[green,and[nand[apply(size-gt,x.o),size2],and[not[implies[size3,implies[and[size3,blue],triangle]]],triangle]]],yellow]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:nand[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:size2;4:and[%s,%s];4:not[%s];4:implies[%s,%s];4:size3;4:implies[%s,%s];4:and[%s,%s];4:size3;4:blue;4:triangle;4:triangle;4:yellow
'λx.apply(apply(same_size,iota(x.s)),iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(green,iota(filter(filter(x.s, nand[circle,triangle]), implies[or[not[blue],blue],rectangle])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:circle;4:triangle;4:implies[%s,%s];4:or[%s,%s];4:not[%s];4:blue;4:blue;4:rectangle
'λx.contains(iota(x.s), filter(x.s, and[not[and[and[and[and[not[or[or[apply(same_color,x.o),implies[size2,yellow]],and[green,and[circle,green]]]],size1],apply(size-gt,x.o)],size3],triangle]],circle]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:implies[%s,%s];4:size2;4:yellow;4:and[%s,%s];4:green;4:and[%s,%s];4:circle;4:green;4:size1;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:size3;4:triangle;4:circle
'λx.apply(and[circle,apply(same_size,iota(filter(x.s, apply(same_shape,x.o))))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[size2,circle],iota(filter(filter(filter(x.s, yellow), blue), size3)))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:blue;4:size3
'λx.contains(iota(filter(filter(x.s, size1), and[triangle,and[rectangle,circle]])), filter(filter(x.s, blue), apply(same_color,x.o)))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:triangle;4:and[%s,%s];4:rectangle;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(apply(size-leq,x.o),iota(filter(filter(filter(filter(x.s, implies[or[and[size2,and[iff[iff[yellow,not[not[green]]],size1],rectangle]],yellow],apply(size-geq,iota(filter(x.s, green)))]), green), green), and[and[green,triangle],green])))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:iff[%s,%s];4:iff[%s,%s];4:yellow;4:not[%s];4:not[%s];4:green;4:size1;4:rectangle;4:yellow;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:green;4:green;4:and[%s,%s];4:and[%s,%s];4:green;4:triangle;4:green
'λx.contains(iota(filter(x.s, size3)), filter(filter(x.s, yellow), green))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green
'λx.apply(size1,iota(filter(filter(filter(x.s, size2), blue), size2)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue;4:size2
'λx.apply(green,iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(not[nand[or[and[implies[rectangle,apply(same_shape,iota(x.s))],or[implies[green,and[not[and[green,and[size2,green]]],apply(same_size,x.o)]],rectangle]],size2],and[blue,and[and[apply(size-geq,x.o),nor[size1,size2]],rectangle]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:nand[%s,%s];4:or[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:implies[%s,%s];4:green;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:green;4:and[%s,%s];4:size2;4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:rectangle;4:size2;4:and[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:nor[%s,%s];4:size1;4:size2;4:rectangle;1:%s.o;2:x
'λx.forall(and[apply(size-leq,x.o),not[apply(same_shape,iota(filter(filter(filter(x.s, size3), size1), green)))]],filter(filter(x.s, and[blue,size1]), or[circle,blue]))'	0:forall(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size1;4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size1;4:or[%s,%s];4:circle;4:blue
'λx.apply(nor[size2,yellow],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size2;4:yellow;1:%s.o;2:x
'λx.apply(and[iff[and[not[apply(size-leq,x.o)],size1],green],or[and[size3,circle],rectangle]],iota(filter(filter(x.s, circle), apply(size-gt,x.o))))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size1;4:green;4:or[%s,%s];4:and[%s,%s];4:size3;4:circle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.apply(nand[size3,yellow],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:size3;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[and[size1,apply(size-geq,iota(x.s))],and[size2,and[size1,or[blue,size3]]]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:size1;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:and[%s,%s];4:size1;4:or[%s,%s];4:blue;4:size3;1:%s.o;2:x
'λx.apply(implies[size2,apply(same_size,iota(x.s))],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(nor[size3,and[size3,size1]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size3;4:and[%s,%s];4:size3;4:size1;1:%s.o;2:x
'λx.apply(iff[green,yellow],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:green;4:yellow;1:%s.o;2:x
'λx.contains(iota(filter(x.s, triangle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;3:%s.s;2:x
'λx.contains(iota(x.s), filter(x.s, and[and[and[or[rectangle,size1],green],size2],circle]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:rectangle;4:size1;4:green;4:size2;4:circle
'λx.apply(apply(same_shape,iota(filter(filter(x.s, size3), size2))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(or[and[rectangle,triangle],and[triangle,rectangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:rectangle;4:triangle;4:and[%s,%s];4:triangle;4:rectangle;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, nor[size1,apply(same_color,iota(filter(x.s, or[circle,not[size1]])))]), green)), filter(x.s, green))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:not[%s];4:size1;4:green;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.forall(not[and[not[or[size1,and[green,triangle]]],circle]],filter(x.s, and[size1,size3]))'	0:forall(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:or[%s,%s];4:size1;4:and[%s,%s];4:green;4:triangle;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size3
'λx.apply(circle,iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.forall(size3,filter(filter(x.s, apply(size-leq,x.o)), circle))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:circle
'λx.contains(iota(filter(x.s, size2)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(filter(x.s, triangle), or[and[not[apply(same_size,x.o)],nand[not[triangle],and[or[rectangle,size2],or[or[yellow,size1],blue]]]],and[green,size2]]), rectangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:nand[%s,%s];4:not[%s];4:triangle;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:size2;4:or[%s,%s];4:or[%s,%s];4:yellow;4:size1;4:blue;4:and[%s,%s];4:green;4:size2;4:rectangle
'λx.apply(not[triangle],iota(filter(x.s, apply(same_shape,x.o))))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(filter(x.s, triangle), size1))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size1;1:%s.o;2:x
'λx.apply(nand[size2,yellow],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:size2;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.exists(size1, filter(filter(filter(filter(x.s, and[and[nor[green,and[and[and[and[size3,triangle],yellow],yellow],yellow]],blue],or[green,and[blue,green]]]), or[rectangle,yellow]), triangle), yellow))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:triangle;4:yellow;4:yellow;4:yellow;4:blue;4:or[%s,%s];4:green;4:and[%s,%s];4:blue;4:green;4:or[%s,%s];4:rectangle;4:yellow;4:triangle;4:yellow
'λx.apply(or[size3,or[implies[apply(same_color,x.o),circle],not[rectangle]]],iota(filter(x.s, and[implies[size2,not[size2]],and[or[implies[green,and[not[yellow],green]],size3],not[size3]]])))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:or[%s,%s];4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:implies[%s,%s];4:size2;4:not[%s];4:size2;4:and[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:green;4:and[%s,%s];4:not[%s];4:yellow;4:green;4:size3;4:not[%s];4:size3
'λx.forall(rectangle,filter(filter(x.s, green), circle))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:circle
'λx.empty(filter(filter(x.s, not[yellow]), nor[green,and[yellow,apply(same_size,x.o)]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:nor[%s,%s];4:green;4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, and[size2,size1]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:size1
'λx.apply(implies[or[apply(same_color,iota(x.s)),size2],yellow],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size2;4:yellow;1:%s.o;2:x
'λx.apply(nand[green,and[blue,yellow]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:green;4:and[%s,%s];4:blue;4:yellow;1:%s.o;2:x
'λx.exists(green, filter(filter(filter(filter(filter(x.s, size1), circle), or[size3,triangle]), apply(same_size,iota(x.s))), size3))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle;4:or[%s,%s];4:size3;4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size3
'λx.apply(and[and[apply(same_shape,x.o),blue],not[triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue;4:not[%s];4:triangle;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(filter(filter(filter(x.s, implies[not[not[rectangle]],and[and[triangle,size1],size2]]), blue), blue), blue), and[and[rectangle,size3],rectangle])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:not[%s];4:not[%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:triangle;4:size1;4:size2;4:blue;4:blue;4:blue;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size3;4:rectangle
'λx.apply(nand[triangle,size1],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:size1;1:%s.o;2:x
'λx.apply(not[apply(same_shape,x.o)],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(filter(x.s, green), blue), and[size1,size2]), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue;4:and[%s,%s];4:size1;4:size2;4:rectangle
'λx.apply(yellow,iota(filter(x.s, apply(same_color,x.o))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(and[and[size1,iff[and[rectangle,size1],not[and[yellow,apply(same_color,x.o)]]]],blue],iota(filter(x.s, and[rectangle,implies[size3,green]])))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:iff[%s,%s];4:and[%s,%s];4:rectangle;4:size1;4:not[%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:implies[%s,%s];4:size3;4:green
'λx.contains(x.o, filter(filter(filter(filter(filter(x.s, not[blue]), circle), rectangle), size2), apply(same_shape,x.o)))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:circle;4:rectangle;4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(and[and[size3,or[and[not[yellow],size3],size2]],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size3;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:yellow;4:size3;4:size2;4:size3;1:%s.o;2:x
'λx.apply(not[or[implies[triangle,triangle],size2]],iota(filter(x.s, apply(same_shape,iota(x.s)))))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:implies[%s,%s];4:triangle;4:triangle;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[circle,triangle],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:triangle;4:size1;1:%s.o;2:x
'λx.contains(iota(filter(x.s, circle)), filter(x.s, iff[not[yellow],yellow]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:not[%s];4:yellow;4:yellow
'λx.apply(implies[triangle,nor[triangle,circle]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:triangle;4:nor[%s,%s];4:triangle;4:circle;1:%s.o;2:x
'λx.apply(nand[and[not[blue],and[blue,blue]],apply(same_shape,iota(filter(x.s, not[size2])))],iota(filter(filter(filter(filter(x.s, or[apply(same_shape,x.o),size3]), apply(same_size,iota(filter(filter(filter(filter(filter(x.s, size3), not[and[blue,and[triangle,rectangle]]]), size3), and[size1,and[apply(same_color,x.o),rectangle]]), green)))), triangle), blue)))'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:not[%s];4:blue;4:and[%s,%s];4:blue;4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:triangle;4:rectangle;4:size3;4:and[%s,%s];4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle;4:green;4:triangle;4:blue
'λx.forall(not[size3],filter(x.s, size2))'	0:forall(%s,%s);4:not[%s];4:size3;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.empty(filter(x.s, green))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(size1,iota(filter(filter(x.s, nor[size1,green]), green)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size1;4:green;4:green
'λx.apply(apply(same_shape,iota(filter(filter(x.s, size1), rectangle))),iota(filter(x.s, green)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.contains(iota(filter(x.s, and[apply(same_color,iota(x.s)),triangle])), filter(filter(filter(x.s, blue), triangle), and[size2,not[size1]]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle;4:and[%s,%s];4:size2;4:not[%s];4:size1
'λx.apply(and[apply(same_shape,x.o),rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(filter(x.s, rectangle), or[and[blue,triangle],size2]), not[green]), rectangle), or[blue,implies[yellow,nand[green,rectangle]]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:or[%s,%s];4:and[%s,%s];4:blue;4:triangle;4:size2;4:not[%s];4:green;4:rectangle;4:or[%s,%s];4:blue;4:implies[%s,%s];4:yellow;4:nand[%s,%s];4:green;4:rectangle
'λx.apply(triangle,iota(filter(filter(x.s, size2), or[circle,and[apply(size-leq,iota(filter(filter(filter(filter(x.s, or[circle,rectangle]), or[circle,size2]), green), or[size2,size2]))),green]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:circle;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:rectangle;4:or[%s,%s];4:circle;4:size2;4:green;4:or[%s,%s];4:size2;4:size2;4:green
'λx.apply(apply(size-leq,iota(filter(x.s, green))),iota(filter(filter(filter(filter(x.s, size2), yellow), size2), circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:yellow;4:size2;4:circle
'λx.apply(rectangle,iota(filter(filter(x.s, blue), blue)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue
'λx.apply(and[iff[not[size2],apply(same_color,x.o)],apply(same_shape,iota(filter(filter(x.s, triangle), circle)))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:not[%s];4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle;1:%s.o;2:x
'λx.apply(or[triangle,apply(same_color,iota(x.s))],iota(filter(filter(filter(x.s, rectangle), nor[and[triangle,blue],not[iff[not[iff[size1,green]],rectangle]]]), circle)))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:nor[%s,%s];4:and[%s,%s];4:triangle;4:blue;4:not[%s];4:iff[%s,%s];4:not[%s];4:iff[%s,%s];4:size1;4:green;4:rectangle;4:circle
'λx.apply(and[and[yellow,size3],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:size3;4:blue;1:%s.o;2:x
'λx.forall(not[triangle],filter(x.s, or[yellow,size3]))'	0:forall(%s,%s);4:not[%s];4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:size3
'λx.contains(iota(filter(filter(filter(filter(x.s, or[green,not[not[size1]]]), and[size2,size1]), size3), yellow)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:not[%s];4:not[%s];4:size1;4:and[%s,%s];4:size2;4:size1;4:size3;4:yellow;3:%s.s;2:x
'λx.apply(and[size2,or[green,green]],iota(filter(x.s, nor[apply(size-geq,x.o),rectangle])))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:or[%s,%s];4:green;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:rectangle
'λx.apply(implies[size1,not[circle]],iota(filter(filter(x.s, and[apply(same_shape,x.o),green]), and[green,apply(same_shape,iota(x.s))])))'	0:apply(%s,%s);4:implies[%s,%s];4:size1;4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green;4:and[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(and[apply(same_size,x.o),green],iota(filter(filter(x.s, yellow), not[circle])))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:circle
'λx.exists(circle, filter(x.s, and[size2,yellow]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:yellow
'λx.apply(or[and[size1,triangle],circle],iota(filter(x.s, apply(same_shape,iota(x.s)))))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size1;4:triangle;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(and[blue,circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[triangle,and[yellow,size3]],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:yellow;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(size2,x.o)'	0:apply(%s,%s);4:size2;1:%s.o;2:x
'λx.apply(and[rectangle,size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.forall(nand[triangle,size2],filter(x.s, apply(same_size,x.o)))'	0:forall(%s,%s);4:nand[%s,%s];4:triangle;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(and[or[yellow,nor[triangle,size2]],implies[rectangle,circle]],iota(filter(x.s, not[and[not[and[iff[and[size3,circle],blue],and[not[implies[blue,yellow]],and[nand[rectangle,size1],and[green,apply(same_color,iota(x.s))]]]]],yellow]])))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:yellow;4:nor[%s,%s];4:triangle;4:size2;4:implies[%s,%s];4:rectangle;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:size3;4:circle;4:blue;4:and[%s,%s];4:not[%s];4:implies[%s,%s];4:blue;4:yellow;4:and[%s,%s];4:nand[%s,%s];4:rectangle;4:size1;4:and[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:yellow
'λx.apply(apply(same_color,iota(filter(filter(x.s, and[circle,size3]), size3))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size3;4:size3;1:%s.o;2:x
'λx.forall(triangle,filter(x.s, not[blue]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.apply(and[and[circle,and[and[yellow,yellow],size3]],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:yellow;4:yellow;4:size3;4:size3;1:%s.o;2:x
'λx.forall(size3,filter(x.s, yellow))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(apply(same_color,iota(filter(x.s, yellow))),iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(green,iota(filter(filter(x.s, size3), not[size2])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:size2
'λx.apply(rectangle,iota(filter(filter(x.s, and[and[yellow,rectangle],or[size3,triangle]]), size1)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:yellow;4:rectangle;4:or[%s,%s];4:size3;4:triangle;4:size1
'λx.empty(filter(filter(x.s, or[size3,not[or[triangle,implies[size2,iff[apply(size-gt,iota(x.s)),green]]]]]), and[blue,blue]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:not[%s];4:or[%s,%s];4:triangle;4:implies[%s,%s];4:size2;4:iff[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:green;4:and[%s,%s];4:blue;4:blue
'λx.apply(and[yellow,rectangle],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(yellow,iota(filter(filter(filter(x.s, circle), size2), green)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size2;4:green
'λx.apply(or[size2,size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:size2;1:%s.o;2:x
'λx.forall(size2,filter(filter(x.s, blue), green))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green
'λx.apply(and[yellow,yellow],iota(filter(filter(x.s, and[blue,size3]), implies[size1,size3])))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size3;4:implies[%s,%s];4:size1;4:size3
'λx.apply(and[and[yellow,circle],and[size1,not[rectangle]]],iota(filter(x.s, nand[green,yellow])))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:circle;4:and[%s,%s];4:size1;4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:green;4:yellow
'λx.exists(size3, filter(filter(x.s, yellow), blue))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:blue
'λx.apply(and[circle,and[yellow,green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:and[%s,%s];4:yellow;4:green;1:%s.o;2:x
'λx.apply(and[iff[size1,size2],and[nand[triangle,and[blue,blue]],size1]],iota(filter(filter(x.s, and[not[yellow],rectangle]), green)))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:size1;4:size2;4:and[%s,%s];4:nand[%s,%s];4:triangle;4:and[%s,%s];4:blue;4:blue;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:yellow;4:rectangle;4:green
'λx.apply(implies[size3,triangle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size3;4:triangle;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, circle), rectangle), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle;4:size2
'λx.apply(not[not[not[apply(same_shape,x.o)]]],iota(filter(filter(filter(filter(x.s, circle), rectangle), and[green,triangle]), apply(same_size,iota(x.s)))))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle;4:and[%s,%s];4:green;4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[apply(same_shape,x.o),yellow],iota(filter(x.s, iff[and[green,blue],triangle])))'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:and[%s,%s];4:green;4:blue;4:triangle
'λx.apply(apply(same_color,iota(x.s)),iota(filter(x.s, or[and[nor[blue,blue],and[size2,size3]],not[green]])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:blue;4:blue;4:and[%s,%s];4:size2;4:size3;4:not[%s];4:green
'λx.contains(iota(filter(filter(filter(filter(filter(x.s, and[yellow,not[rectangle]]), yellow), yellow), yellow), and[triangle,and[apply(same_shape,iota(x.s)),size1]])), filter(filter(filter(x.s, blue), nor[size1,or[rectangle,or[blue,or[size1,rectangle]]]]), nand[blue,size3]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:not[%s];4:rectangle;4:yellow;4:yellow;4:yellow;4:and[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:nor[%s,%s];4:size1;4:or[%s,%s];4:rectangle;4:or[%s,%s];4:blue;4:or[%s,%s];4:size1;4:rectangle;4:nand[%s,%s];4:blue;4:size3
'λx.forall(green,filter(filter(x.s, yellow), size1))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1
'λx.apply(or[nand[circle,and[size2,apply(same_shape,iota(filter(filter(filter(x.s, implies[or[size1,size3],circle]), and[blue,size1]), implies[and[and[apply(same_color,iota(filter(filter(filter(x.s, size1), size2), size2))),or[size3,rectangle]],size2],size1])))]],nor[and[rectangle,rectangle],green]],iota(filter(filter(x.s, apply(size-gt,x.o)), apply(same_color,x.o))))'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:circle;4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:or[%s,%s];4:size1;4:size3;4:circle;4:and[%s,%s];4:blue;4:size1;4:implies[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2;4:size2;4:or[%s,%s];4:size3;4:rectangle;4:size2;4:size1;4:nor[%s,%s];4:and[%s,%s];4:rectangle;4:rectangle;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.forall(size2,filter(x.s, or[blue,green]))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:green
'λx.apply(blue,iota(filter(filter(x.s, triangle), size1)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size1
'λx.apply(blue,iota(filter(x.s, or[or[implies[and[rectangle,or[rectangle,implies[size1,not[size2]]]],size1],size3],nor[blue,and[green,blue]]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:rectangle;4:or[%s,%s];4:rectangle;4:implies[%s,%s];4:size1;4:not[%s];4:size2;4:size1;4:size3;4:nor[%s,%s];4:blue;4:and[%s,%s];4:green;4:blue
'λx.apply(not[or[circle,or[circle,green]]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:circle;4:or[%s,%s];4:circle;4:green;1:%s.o;2:x
'λx.forall(and[blue,iff[rectangle,triangle]],filter(filter(filter(x.s, or[blue,and[green,blue]]), green), rectangle))'	0:forall(%s,%s);4:and[%s,%s];4:blue;4:iff[%s,%s];4:rectangle;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:and[%s,%s];4:green;4:blue;4:green;4:rectangle
'λx.contains(iota(filter(filter(x.s, blue), and[triangle,green])), filter(x.s, size2))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:triangle;4:green;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.empty(filter(filter(filter(x.s, and[and[blue,rectangle],nand[size3,circle]]), implies[nand[and[and[or[size1,size2],implies[apply(same_size,iota(x.s)),triangle]],size3],nor[green,apply(same_shape,x.o)]],triangle]), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:blue;4:rectangle;4:nand[%s,%s];4:size3;4:circle;4:implies[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size1;4:size2;4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:triangle;4:size3;4:nor[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle;4:circle
'λx.apply(not[or[and[and[or[size1,size2],size1],nor[blue,size3]],iff[and[size1,or[apply(same_shape,iota(x.s)),and[rectangle,blue]]],and[size2,yellow]]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size1;4:size2;4:size1;4:nor[%s,%s];4:blue;4:size3;4:iff[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:blue;4:and[%s,%s];4:size2;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[triangle,blue],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[triangle,triangle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:triangle;4:triangle;1:%s.o;2:x
'λx.apply(nand[size3,iff[circle,yellow]],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:size3;4:iff[%s,%s];4:circle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(not[size2],iota(filter(filter(filter(x.s, green), and[triangle,not[apply(size-gt,x.o)]]), rectangle)))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:triangle;4:not[%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:rectangle
'λx.forall(triangle,filter(x.s, circle))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(rectangle,iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(not[and[and[rectangle,size2],apply(same_color,iota(x.s))]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.contains(x.o, filter(filter(filter(filter(x.s, not[circle]), size1), or[and[size3,circle],green]), and[blue,size2]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:size1;4:or[%s,%s];4:and[%s,%s];4:size3;4:circle;4:green;4:and[%s,%s];4:blue;4:size2
'λx.apply(not[nand[nor[or[size2,or[size2,rectangle]],triangle],triangle]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:nand[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:size2;4:or[%s,%s];4:size2;4:rectangle;4:triangle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.forall(circle,filter(x.s, apply(same_color,x.o)))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(filter(x.s, circle), blue), iff[size3,and[or[triangle,nor[circle,and[size1,blue]]],apply(same_shape,iota(filter(filter(x.s, and[green,blue]), green)))]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue;4:iff[%s,%s];4:size3;4:and[%s,%s];4:or[%s,%s];4:triangle;4:nor[%s,%s];4:circle;4:and[%s,%s];4:size1;4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:blue;4:green
'λx.apply(nand[and[rectangle,rectangle],circle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:rectangle;4:rectangle;4:circle;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, apply(same_size,iota(x.s)))))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(not[or[triangle,not[nand[yellow,size3]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:triangle;4:not[%s];4:nand[%s,%s];4:yellow;4:size3;1:%s.o;2:x
'λx.apply(or[yellow,and[rectangle,green]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:and[%s,%s];4:rectangle;4:green;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, size1)), filter(x.s, size3))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.empty(filter(filter(filter(filter(filter(filter(filter(filter(filter(x.s, blue), size1), not[size3]), not[green]), yellow), circle), size1), yellow), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1;4:not[%s];4:size3;4:not[%s];4:green;4:yellow;4:circle;4:size1;4:yellow;4:triangle
'λx.apply(not[size3],iota(filter(filter(x.s, rectangle), circle)))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle
'λx.apply(and[circle,green],iota(filter(filter(x.s, or[nand[size1,apply(same_color,iota(x.s))],circle]), triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:nand[%s,%s];4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:circle;4:triangle
'λx.apply(apply(same_size,x.o),iota(filter(filter(filter(x.s, rectangle), blue), or[and[triangle,circle],apply(same_size,x.o)])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue;4:or[%s,%s];4:and[%s,%s];4:triangle;4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(iff[triangle,size3],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:triangle;4:size3;1:%s.o;2:x
'λx.apply(triangle,iota(filter(x.s, apply(same_color,iota(filter(filter(x.s, size3), not[apply(same_shape,iota(x.s))]))))))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, triangle), yellow), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:yellow;4:circle
'λx.exists(apply(same_color,x.o), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(and[and[or[size1,nand[size2,size3]],green],apply(same_shape,iota(x.s))],iota(filter(filter(filter(x.s, blue), size1), apply(same_shape,x.o))))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size1;4:nand[%s,%s];4:size2;4:size3;4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(or[and[and[and[blue,green],or[circle,and[and[size1,and[not[yellow],rectangle]],yellow]]],and[size3,not[and[size2,not[triangle]]]]],nor[size3,implies[apply(same_color,iota(x.s)),green]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:green;4:or[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:not[%s];4:yellow;4:rectangle;4:yellow;4:and[%s,%s];4:size3;4:not[%s];4:and[%s,%s];4:size2;4:not[%s];4:triangle;4:nor[%s,%s];4:size3;4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[size2,or[blue,blue]],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:size2;4:or[%s,%s];4:blue;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[size1,yellow],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:size1;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.exists(apply(size-lt,iota(filter(x.s, green))), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;3:%s.s;2:x
'λx.forall(and[triangle,triangle],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:triangle;4:triangle;3:%s.s;2:x
'λx.apply(or[size1,and[and[apply(same_shape,x.o),apply(size-gt,iota(filter(x.s, and[size3,nand[triangle,green]])))],yellow]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:nand[%s,%s];4:triangle;4:green;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.contains(iota(x.s), filter(x.s, or[green,size1]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:size1
'λx.contains(iota(x.s), filter(x.s, or[rectangle,nor[size1,not[not[rectangle]]]]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:nor[%s,%s];4:size1;4:not[%s];4:not[%s];4:rectangle
'λx.apply(not[not[yellow]],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.forall(size2,filter(x.s, rectangle))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.empty(filter(filter(filter(x.s, nor[green,yellow]), green), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:green;4:yellow;4:green;4:size3
'λx.exists(and[size3,size2], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:size3;4:size2;3:%s.s;2:x
'λx.exists(and[yellow,rectangle], filter(x.s, and[triangle,circle]))'	0:exists(%s, %s);4:and[%s,%s];4:yellow;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:circle
'λx.apply(and[size2,and[not[or[size3,iff[and[rectangle,size1],not[blue]]]],circle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:not[%s];4:or[%s,%s];4:size3;4:iff[%s,%s];4:and[%s,%s];4:rectangle;4:size1;4:not[%s];4:blue;4:circle;1:iota(%s);3:%s.s;2:x
'λx.forall(size3,filter(x.s, triangle))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(and[size1,apply(same_size,iota(filter(x.s, rectangle)))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;1:%s.o;2:x
'λx.apply(and[and[rectangle,size1],or[blue,circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size1;4:or[%s,%s];4:blue;4:circle;1:%s.o;2:x
'λx.exists(nand[rectangle,circle], filter(filter(x.s, blue), size2))'	0:exists(%s, %s);4:nand[%s,%s];4:rectangle;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2
'λx.apply(or[and[and[or[circle,green],size1],size3],and[circle,apply(same_color,iota(x.s))]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:circle;4:green;4:size1;4:size3;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(filter(x.s, size1), circle), or[size1,apply(same_size,x.o)]), yellow)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle;4:or[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow;3:%s.s;2:x
'λx.apply(iff[blue,nor[rectangle,size1]],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:iff[%s,%s];4:blue;4:nor[%s,%s];4:rectangle;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(or[nand[circle,blue],not[triangle]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:circle;4:blue;4:not[%s];4:triangle;1:iota(%s);3:%s.s;2:x
'λx.exists(or[and[size1,apply(same_size,iota(filter(filter(x.s, size2), blue)))],circle], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue;4:circle;3:%s.s;2:x
'λx.apply(nand[yellow,circle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:yellow;4:circle;1:%s.o;2:x
'λx.contains(iota(x.s), filter(x.s, not[size3]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3
'λx.apply(apply(same_shape,x.o),iota(filter(x.s, size1)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(not[not[apply(same_size,iota(x.s))]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[iff[size3,or[apply(size-lt,iota(filter(filter(filter(x.s, yellow), not[apply(size-leq,x.o)]), blue))),yellow]],and[yellow,green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:size3;4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:blue;4:yellow;4:and[%s,%s];4:yellow;4:green;1:%s.o;2:x
'λx.forall(and[size3,yellow],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:size3;4:yellow;3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(x.s, yellow), size1)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1
'λx.apply(and[triangle,or[or[rectangle,rectangle],green]],iota(filter(x.s, not[blue])))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:or[%s,%s];4:or[%s,%s];4:rectangle;4:rectangle;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.apply(and[and[circle,size3],rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:size3;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[size2,size3],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:size2;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size3,size2],iota(filter(filter(x.s, size1), circle)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle
'λx.apply(or[and[size1,yellow],yellow],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size1;4:yellow;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(blue,iota(filter(filter(filter(filter(x.s, and[not[size1],yellow]), apply(same_shape,iota(x.s))), rectangle), green)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:size1;4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:rectangle;4:green
'λx.apply(circle,iota(filter(filter(filter(x.s, or[size3,not[and[size2,implies[size1,size1]]]]), size2), not[blue])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:not[%s];4:and[%s,%s];4:size2;4:implies[%s,%s];4:size1;4:size1;4:size2;4:not[%s];4:blue
'λx.apply(nor[circle,green],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:circle;4:green;1:%s.o;2:x
'λx.exists(triangle, filter(x.s, size3))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.forall(not[rectangle],filter(filter(x.s, yellow), not[triangle]))'	0:forall(%s,%s);4:not[%s];4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:triangle
'λx.apply(and[size1,blue],iota(filter(filter(filter(filter(x.s, size3), blue), apply(same_size,x.o)), and[green,blue])))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:green;4:blue
'λx.apply(not[not[or[or[circle,and[or[size3,size2],or[blue,green]]],apply(size-lt,x.o)]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:or[%s,%s];4:or[%s,%s];4:circle;4:and[%s,%s];4:or[%s,%s];4:size3;4:size2;4:or[%s,%s];4:blue;4:green;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, and[circle,iff[size3,green]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:iff[%s,%s];4:size3;4:green
'λx.apply(size3,iota(filter(filter(x.s, size1), and[size1,rectangle])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:size1;4:rectangle
'λx.apply(and[size3,and[nor[iff[yellow,and[yellow,size1]],size1],green]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:nor[%s,%s];4:iff[%s,%s];4:yellow;4:and[%s,%s];4:yellow;4:size1;4:size1;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_shape,x.o),iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(implies[size2,iff[or[circle,rectangle],size1]],iota(filter(filter(x.s, not[yellow]), size1)))'	0:apply(%s,%s);4:implies[%s,%s];4:size2;4:iff[%s,%s];4:or[%s,%s];4:circle;4:rectangle;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:size1
'λx.apply(iff[not[or[yellow,rectangle]],blue],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:not[%s];4:or[%s,%s];4:yellow;4:rectangle;4:blue;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, or[rectangle,and[yellow,implies[or[apply(size-geq,x.o),blue],yellow]]]), size1)), filter(x.s, rectangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:and[%s,%s];4:yellow;4:implies[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:blue;4:yellow;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[circle,size3],iota(filter(filter(x.s, size2), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue
'λx.contains(iota(x.s), filter(filter(x.s, size3), circle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle
'λx.contains(iota(filter(filter(x.s, and[not[yellow],size1]), circle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:yellow;4:size1;4:circle;3:%s.s;2:x
'λx.apply(nor[green,and[triangle,apply(size-leq,x.o)]],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:nor[%s,%s];4:green;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(and[circle,and[blue,and[apply(size-leq,x.o),and[and[not[and[and[yellow,blue],or[yellow,yellow]]],blue],rectangle]]]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:and[%s,%s];4:blue;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:blue;4:or[%s,%s];4:yellow;4:yellow;4:blue;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[size1,size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:size2;1:%s.o;2:x
'λx.forall(and[blue,and[or[apply(same_color,iota(x.s)),green],not[size2]]],filter(x.s, circle))'	0:forall(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:green;4:not[%s];4:size2;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[size3,rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.forall(green,filter(x.s, not[not[blue]]))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:blue
'λx.apply(and[and[blue,size3],and[size2,or[blue,and[blue,apply(size-lt,x.o)]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:size3;4:and[%s,%s];4:size2;4:or[%s,%s];4:blue;4:and[%s,%s];4:blue;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:%s.o;2:x
'λx.forall(nor[and[apply(same_color,iota(x.s)),or[triangle,or[triangle,or[size3,circle]]]],yellow],filter(x.s, green))'	0:forall(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:or[%s,%s];4:triangle;4:or[%s,%s];4:size3;4:circle;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[not[circle],and[size1,size3]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:circle;4:and[%s,%s];4:size1;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[triangle,and[green,triangle]],iota(filter(x.s, not[blue])))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:green;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.apply(apply(same_size,iota(filter(x.s, and[size1,size3]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size3;1:%s.o;2:x
'λx.apply(or[size2,yellow],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.forall(blue,filter(filter(x.s, blue), not[rectangle]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:rectangle
'λx.apply(implies[not[not[size3]],size1],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:not[%s];4:not[%s];4:size3;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(or[and[yellow,yellow],triangle],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:yellow;4:yellow;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(or[apply(size-geq,x.o),or[size1,yellow]],iota(filter(filter(x.s, size3), rectangle)))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:or[%s,%s];4:size1;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle
'λx.apply(and[size2,not[and[triangle,triangle]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:not[%s];4:and[%s,%s];4:triangle;4:triangle;1:%s.o;2:x
'λx.apply(and[or[apply(same_color,iota(x.s)),and[or[not[size3],yellow],blue]],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:size3;4:yellow;4:blue;4:green;1:%s.o;2:x
'λx.apply(and[size2,size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:size2;1:%s.o;2:x
'λx.apply(or[green,triangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[yellow,not[rectangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, not[circle]), not[and[and[blue,size2],or[size1,size3]]]), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:size2;4:or[%s,%s];4:size1;4:size3;4:rectangle
'λx.apply(size2,iota(filter(x.s, and[triangle,apply(size-lt,iota(x.s))])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, size2), apply(same_color,iota(x.s))))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(or[or[apply(size-geq,iota(x.s)),size2],green],iota(filter(x.s, nand[nor[size2,size1],circle])))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:size2;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:nor[%s,%s];4:size2;4:size1;4:circle
'λx.apply(size2,iota(filter(x.s, not[blue])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.apply(and[circle,implies[and[blue,not[nand[rectangle,circle]]],size1]],iota(filter(filter(filter(x.s, size3), size2), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:implies[%s,%s];4:and[%s,%s];4:blue;4:not[%s];4:nand[%s,%s];4:rectangle;4:circle;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2;4:blue
'λx.apply(implies[nor[and[or[green,rectangle],or[iff[yellow,size1],and[triangle,apply(same_shape,iota(filter(filter(x.s, size2), size2)))]]],green],triangle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:or[%s,%s];4:green;4:rectangle;4:or[%s,%s];4:iff[%s,%s];4:yellow;4:size1;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2;4:green;4:triangle;1:%s.o;2:x
'λx.apply(implies[triangle,or[rectangle,size2]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:triangle;4:or[%s,%s];4:rectangle;4:size2;1:%s.o;2:x
'λx.apply(nor[triangle,circle],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:nor[%s,%s];4:triangle;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(size1,iota(filter(filter(x.s, and[and[or[rectangle,size1],size3],green]), circle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:rectangle;4:size1;4:size3;4:green;4:circle
'λx.empty(filter(x.s, nand[size3,and[size3,triangle]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size3;4:and[%s,%s];4:size3;4:triangle
'λx.apply(not[circle],iota(filter(filter(x.s, or[apply(size-gt,x.o),circle]), rectangle)))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:circle;4:rectangle
'λx.apply(green,iota(filter(x.s, apply(same_size,iota(filter(filter(x.s, yellow), and[circle,yellow]))))))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:circle;4:yellow
'λx.apply(rectangle,iota(filter(filter(filter(filter(x.s, size1), or[circle,green]), or[size3,yellow]), yellow)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:or[%s,%s];4:circle;4:green;4:or[%s,%s];4:size3;4:yellow;4:yellow
'λx.apply(rectangle,iota(filter(filter(filter(x.s, size1), and[green,size1]), green)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:green;4:size1;4:green
'λx.apply(size3,iota(filter(filter(x.s, green), rectangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle
'λx.apply(green,iota(filter(x.s, apply(size-lt,iota(x.s)))))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(x.s, apply(size-gt,iota(x.s))))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x
'λx.exists(not[size1], x.s)'	0:exists(%s, %s);4:not[%s];4:size1;3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, and[size3,not[triangle]]), or[triangle,apply(same_shape,iota(x.s))]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:not[%s];4:triangle;4:or[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(and[rectangle,and[circle,size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:circle;4:size2;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(filter(x.s, size1), triangle), size2), not[size2])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle;4:size2;4:not[%s];4:size2;3:%s.s;2:x
'λx.forall(size1,filter(filter(x.s, size1), triangle))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle
'λx.apply(size2,iota(filter(filter(x.s, yellow), triangle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle
'λx.apply(or[rectangle,circle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[green,rectangle],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:green;4:rectangle;4:size2;1:%s.o;2:x
'λx.exists(and[and[yellow,size2],triangle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:size2;4:triangle;3:%s.s;2:x
'λx.apply(and[size3,and[yellow,circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:yellow;4:circle;1:%s.o;2:x
'λx.forall(green,filter(filter(filter(x.s, green), yellow), and[triangle,yellow]))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow;4:and[%s,%s];4:triangle;4:yellow
'λx.empty(filter(filter(filter(filter(filter(x.s, rectangle), apply(size-lt,iota(x.s))), rectangle), size3), not[not[size2]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:rectangle;4:size3;4:not[%s];4:not[%s];4:size2
'λx.apply(rectangle,iota(filter(x.s, and[green,apply(same_shape,x.o)])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(or[and[green,rectangle],blue],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:green;4:rectangle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(or[blue,apply(same_size,iota(filter(filter(x.s, iff[and[and[size2,and[not[size2],triangle]],and[and[circle,size1],yellow]],and[rectangle,and[and[triangle,blue],apply(size-gt,iota(filter(x.s, blue)))]]]), implies[size1,triangle])))],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:not[%s];4:size2;4:triangle;4:and[%s,%s];4:and[%s,%s];4:circle;4:size1;4:yellow;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:triangle;4:blue;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:implies[%s,%s];4:size1;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(x.s, blue), apply(same_color,x.o))))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(size3,iota(filter(x.s, and[size3,size3])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:size3
'λx.empty(filter(filter(x.s, triangle), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle
'λx.apply(not[and[apply(same_size,x.o),and[size1,size1]]],iota(filter(filter(x.s, green), size3)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:size1;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size3
'λx.apply(nor[apply(size-lt,x.o),implies[size3,circle]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:implies[%s,%s];4:size3;4:circle;1:%s.o;2:x
'λx.forall(or[size1,size3],filter(x.s, yellow))'	0:forall(%s,%s);4:or[%s,%s];4:size1;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(not[or[apply(same_size,x.o),green]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;1:%s.o;2:x
'λx.apply(nor[triangle,size1],iota(filter(filter(x.s, size3), nand[blue,triangle])))'	0:apply(%s,%s);4:nor[%s,%s];4:triangle;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:nand[%s,%s];4:blue;4:triangle
'λx.apply(and[blue,not[size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:not[%s];4:size3;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, rectangle), circle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle
'λx.forall(rectangle,filter(filter(filter(filter(x.s, or[blue,green]), size3), circle), size3))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:green;4:size3;4:circle;4:size3
'λx.forall(size3,filter(filter(filter(x.s, blue), green), size2))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green;4:size2
'λx.apply(implies[and[green,blue],green],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:green;4:blue;4:green;1:%s.o;2:x
'λx.apply(and[size3,yellow],iota(filter(x.s, green)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(size2,iota(filter(filter(x.s, size1), or[size1,rectangle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:or[%s,%s];4:size1;4:rectangle
'λx.contains(iota(x.s), filter(x.s, not[size1]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1
'λx.contains(x.o, filter(filter(filter(filter(x.s, size3), and[green,apply(same_color,iota(x.s))]), or[circle,triangle]), circle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:triangle;4:circle
'λx.apply(apply(size-geq,x.o),iota(filter(filter(x.s, size2), and[and[size1,not[not[blue]]],circle])))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:and[%s,%s];4:size1;4:not[%s];4:not[%s];4:blue;4:circle
'λx.apply(circle,iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.exists(size2, filter(filter(x.s, size3), triangle))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle
'λx.apply(size3,iota(filter(filter(filter(x.s, green), rectangle), yellow)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle;4:yellow
'λx.apply(blue,iota(filter(filter(filter(x.s, size3), apply(size-leq,x.o)), nand[yellow,apply(same_size,x.o)])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:nand[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(x.s, yellow), and[circle,not[apply(size-geq,x.o)]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:circle;4:not[%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.exists(apply(same_color,iota(filter(x.s, apply(same_color,x.o)))), filter(x.s, size2))'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(and[circle,not[and[green,yellow]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:not[%s];4:and[%s,%s];4:green;4:yellow;1:%s.o;2:x
'λx.forall(rectangle,filter(filter(filter(filter(x.s, size1), or[nand[size1,green],blue]), green), blue))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:or[%s,%s];4:nand[%s,%s];4:size1;4:green;4:blue;4:green;4:blue
'λx.forall(or[implies[green,rectangle],yellow],filter(x.s, blue))'	0:forall(%s,%s);4:or[%s,%s];4:implies[%s,%s];4:green;4:rectangle;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(or[size2,and[blue,and[apply(same_size,x.o),and[apply(same_color,x.o),and[size3,or[blue,size3]]]]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:and[%s,%s];4:blue;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:size3;4:or[%s,%s];4:blue;4:size3;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(filter(filter(filter(x.s, green), not[size1]), green), rectangle), apply(size-leq,x.o))))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:size1;4:green;4:rectangle;4:apply(%s,%s);5:size-leq;1:%s.o;2:x
'λx.exists(and[yellow,size2], filter(x.s, green))'	0:exists(%s, %s);4:and[%s,%s];4:yellow;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(yellow,iota(filter(filter(filter(x.s, yellow), and[rectangle,yellow]), green)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:rectangle;4:yellow;4:green
'λx.forall(implies[nor[triangle,triangle],or[iff[size2,size3],and[not[and[and[or[and[apply(same_shape,iota(filter(x.s, not[iff[size1,green]]))),circle],triangle],and[size2,circle]],or[blue,green]]],and[size1,circle]]]],x.s)'	0:forall(%s,%s);4:implies[%s,%s];4:nor[%s,%s];4:triangle;4:triangle;4:or[%s,%s];4:iff[%s,%s];4:size2;4:size3;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:iff[%s,%s];4:size1;4:green;4:circle;4:triangle;4:and[%s,%s];4:size2;4:circle;4:or[%s,%s];4:blue;4:green;4:and[%s,%s];4:size1;4:circle;3:%s.s;2:x
'λx.apply(and[and[and[circle,size1],size3],not[not[size1]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:size1;4:size3;4:not[%s];4:not[%s];4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[size2,and[size1,not[blue]]],iota(filter(filter(filter(x.s, and[size3,blue]), rectangle), implies[green,apply(same_shape,x.o)])))'	0:apply(%s,%s);4:iff[%s,%s];4:size2;4:and[%s,%s];4:size1;4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:blue;4:rectangle;4:implies[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, and[apply(same_shape,iota(filter(filter(x.s, and[size1,green]), and[and[blue,green],triangle]))),blue]), triangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:green;4:and[%s,%s];4:and[%s,%s];4:blue;4:green;4:triangle;4:blue;4:triangle
'λx.empty(filter(x.s, apply(same_color,iota(filter(filter(filter(filter(x.s, yellow), rectangle), not[and[apply(same_color,x.o),circle]]), or[blue,and[apply(same_size,iota(filter(filter(filter(x.s, not[size1]), and[apply(same_shape,x.o),blue]), apply(same_shape,iota(filter(filter(x.s, size1), size2)))))),size1]])))))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle;4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;4:or[%s,%s];4:blue;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2;4:size1
'λx.empty(filter(filter(x.s, and[size3,or[and[triangle,blue],yellow]]), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:or[%s,%s];4:and[%s,%s];4:triangle;4:blue;4:yellow;4:size1
'λx.apply(circle,iota(filter(filter(x.s, rectangle), size2)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2
'λx.empty(filter(filter(filter(filter(x.s, green), size3), rectangle), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size3;4:rectangle;4:circle
'λx.apply(not[or[size2,apply(same_shape,iota(filter(x.s, size1)))]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, and[circle,yellow])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:yellow
'λx.apply(triangle,iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(or[triangle,size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:size3;1:%s.o;2:x
'λx.apply(and[not[blue],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:blue;4:blue;1:%s.o;2:x
'λx.apply(or[apply(same_color,iota(filter(filter(filter(filter(x.s, iff[circle,apply(size-gt,iota(x.s))]), or[apply(same_shape,iota(filter(x.s, blue))),size1]), and[size2,green]), size1))),apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:circle;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1;4:and[%s,%s];4:size2;4:green;4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(iff[circle,size1],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:circle;4:size1;1:%s.o;2:x
'λx.apply(and[size3,not[apply(same_size,x.o)]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(not[size1],iota(filter(filter(x.s, apply(size-geq,x.o)), size2)))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:size2
'λx.apply(and[not[or[rectangle,size2]],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:or[%s,%s];4:rectangle;4:size2;4:size3;1:%s.o;2:x
'λx.apply(or[size3,and[size3,rectangle]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:and[%s,%s];4:size3;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.forall(and[circle,size3],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:circle;4:size3;3:%s.s;2:x
'λx.forall(or[circle,implies[or[not[circle],apply(size-geq,iota(x.s))],and[or[triangle,rectangle],or[implies[size3,and[circle,triangle]],and[or[not[not[size3]],size3],yellow]]]]],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:circle;4:implies[%s,%s];4:or[%s,%s];4:not[%s];4:circle;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:triangle;4:rectangle;4:or[%s,%s];4:implies[%s,%s];4:size3;4:and[%s,%s];4:circle;4:triangle;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:not[%s];4:size3;4:size3;4:yellow;3:%s.s;2:x
'λx.apply(and[blue,or[and[or[green,not[green]],and[size3,nand[rectangle,circle]]],apply(same_shape,x.o)]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:green;4:not[%s];4:green;4:and[%s,%s];4:size3;4:nand[%s,%s];4:rectangle;4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(implies[circle,yellow],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:circle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(and[yellow,implies[not[and[and[or[green,rectangle],circle],apply(size-geq,x.o)]],size2]],iota(filter(filter(filter(x.s, yellow), blue), size1)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:implies[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:green;4:rectangle;4:circle;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:blue;4:size1
'λx.apply(and[size2,size1],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[and[size1,size1],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:size1;4:size3;1:%s.o;2:x
'λx.apply(not[not[circle]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(x.s, or[and[not[rectangle],or[size3,circle]],size1])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:rectangle;4:or[%s,%s];4:size3;4:circle;4:size1
'λx.forall(implies[apply(same_color,iota(x.s)),green],filter(filter(x.s, nor[green,size1]), apply(same_color,iota(x.s))))'	0:forall(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:green;4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(x.s, rectangle), apply(same_size,iota(x.s)))))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(x.s, triangle), circle), apply(same_size,iota(filter(x.s, green)))))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(or[and[rectangle,not[green]],apply(same_color,iota(x.s))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:rectangle;4:not[%s];4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.forall(apply(same_shape,iota(x.s)),filter(filter(filter(filter(filter(x.s, size1), yellow), blue), rectangle), or[and[rectangle,size1],or[size2,blue]]))'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow;4:blue;4:rectangle;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:size1;4:or[%s,%s];4:size2;4:blue
'λx.apply(circle,iota(filter(x.s, or[yellow,size1])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:size1
'λx.exists(and[circle,rectangle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:circle;4:rectangle;3:%s.s;2:x
'λx.apply(and[or[circle,circle],not[rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:circle;4:circle;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, and[blue,triangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:triangle
'λx.empty(filter(filter(filter(filter(filter(filter(filter(filter(x.s, apply(size-gt,x.o)), size2), and[yellow,not[green]]), or[green,or[or[yellow,green],triangle]]), blue), yellow), blue), and[apply(same_size,iota(x.s)),nor[and[triangle,size3],size3]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:size2;4:and[%s,%s];4:yellow;4:not[%s];4:green;4:or[%s,%s];4:green;4:or[%s,%s];4:or[%s,%s];4:yellow;4:green;4:triangle;4:blue;4:yellow;4:blue;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:nor[%s,%s];4:and[%s,%s];4:triangle;4:size3;4:size3
'λx.apply(size3,iota(filter(filter(x.s, apply(same_color,x.o)), apply(same_size,iota(x.s)))))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(and[nand[blue,not[implies[blue,size3]]],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:blue;4:not[%s];4:implies[%s,%s];4:blue;4:size3;4:green;1:%s.o;2:x
'λx.apply(and[blue,and[apply(size-lt,x.o),size3]],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.contains(iota(filter(x.s, implies[rectangle,implies[size2,nand[and[size3,triangle],triangle]]])), filter(filter(x.s, size2), apply(same_color,x.o)))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:rectangle;4:implies[%s,%s];4:size2;4:nand[%s,%s];4:and[%s,%s];4:size3;4:triangle;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(implies[size1,size2],iota(filter(filter(x.s, size2), and[or[apply(same_color,x.o),rectangle],blue])))'	0:apply(%s,%s);4:implies[%s,%s];4:size1;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle;4:blue
'λx.apply(or[iff[and[rectangle,green],green],size1],iota(filter(filter(filter(filter(x.s, blue), green), iff[rectangle,blue]), yellow)))'	0:apply(%s,%s);4:or[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:rectangle;4:green;4:green;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green;4:iff[%s,%s];4:rectangle;4:blue;4:yellow
'λx.apply(rectangle,iota(filter(filter(filter(x.s, size3), nand[blue,yellow]), iff[and[size2,nand[or[apply(same_size,x.o),apply(size-lt,x.o)],blue]],rectangle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:nand[%s,%s];4:blue;4:yellow;4:iff[%s,%s];4:and[%s,%s];4:size2;4:nand[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:blue;4:rectangle
'λx.apply(implies[rectangle,not[and[and[size3,size2],apply(same_size,iota(x.s))]]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:rectangle;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(iff[apply(same_shape,x.o),not[and[implies[yellow,size3],triangle]]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:implies[%s,%s];4:yellow;4:size3;4:triangle;1:%s.o;2:x
'λx.forall(and[and[and[blue,nor[size2,size3]],or[rectangle,size1]],rectangle],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:nor[%s,%s];4:size2;4:size3;4:or[%s,%s];4:rectangle;4:size1;4:rectangle;3:%s.s;2:x
'λx.forall(rectangle,filter(x.s, or[size3,and[or[apply(same_color,iota(x.s)),triangle],and[triangle,implies[not[or[rectangle,triangle]],circle]]]]))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:triangle;4:implies[%s,%s];4:not[%s];4:or[%s,%s];4:rectangle;4:triangle;4:circle
'λx.apply(nor[triangle,not[blue]],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:triangle;4:not[%s];4:blue;1:iota(%s);3:%s.s;2:x
'λx.forall(implies[and[nor[green,green],and[and[and[and[blue,size1],circle],apply(same_shape,x.o)],yellow]],and[blue,size2]],x.s)'	0:forall(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:green;4:green;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:size1;4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow;4:and[%s,%s];4:blue;4:size2;3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(filter(x.s, and[size3,not[triangle]]), nand[and[yellow,apply(same_shape,x.o)],size2]), and[apply(same_size,x.o),nand[size3,green]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:not[%s];4:triangle;4:nand[%s,%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:nand[%s,%s];4:size3;4:green
'λx.apply(and[triangle,or[blue,green]],iota(filter(x.s, and[and[rectangle,rectangle],blue])))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:or[%s,%s];4:blue;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:rectangle;4:blue
'λx.apply(blue,iota(filter(filter(x.s, and[size2,yellow]), and[triangle,and[size3,rectangle]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:yellow;4:and[%s,%s];4:triangle;4:and[%s,%s];4:size3;4:rectangle
'λx.contains(iota(filter(x.s, iff[triangle,or[size2,iff[size2,green]]])), filter(x.s, not[yellow]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:triangle;4:or[%s,%s];4:size2;4:iff[%s,%s];4:size2;4:green;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow
'λx.empty(filter(filter(x.s, size1), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle
'λx.contains(iota(filter(x.s, blue)), filter(x.s, yellow))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.contains(iota(filter(filter(filter(x.s, not[triangle]), apply(same_color,x.o)), size1)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1;3:%s.s;2:x
'λx.exists(yellow, filter(filter(filter(x.s, apply(same_color,x.o)), circle), circle))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;4:circle
'λx.empty(filter(filter(filter(filter(filter(x.s, circle), green), green), not[or[rectangle,size3]]), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green;4:green;4:not[%s];4:or[%s,%s];4:rectangle;4:size3;4:size1
'λx.apply(size1,iota(filter(filter(filter(x.s, size3), rectangle), apply(same_color,iota(filter(filter(filter(filter(x.s, yellow), nand[and[triangle,and[size3,and[and[and[blue,size3],triangle],implies[size1,nand[rectangle,and[and[or[circle,blue],triangle],or[and[size3,triangle],size2]]]]]]],nor[size2,size3]]), triangle), size1))))))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:nand[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:size3;4:triangle;4:implies[%s,%s];4:size1;4:nand[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:circle;4:blue;4:triangle;4:or[%s,%s];4:and[%s,%s];4:size3;4:triangle;4:size2;4:nor[%s,%s];4:size2;4:size3;4:triangle;4:size1
'λx.apply(and[rectangle,size1],iota(filter(filter(filter(x.s, nand[or[size1,iff[triangle,size2]],apply(same_color,x.o)]), blue), green)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:or[%s,%s];4:size1;4:iff[%s,%s];4:triangle;4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue;4:green
'λx.apply(not[triangle],iota(filter(x.s, and[yellow,green])))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:green
'λx.apply(iff[blue,circle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:blue;4:circle;1:%s.o;2:x
'λx.forall(or[size2,size3],filter(x.s, size2))'	0:forall(%s,%s);4:or[%s,%s];4:size2;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.exists(implies[blue,iff[rectangle,size1]], filter(filter(x.s, rectangle), yellow))'	0:exists(%s, %s);4:implies[%s,%s];4:blue;4:iff[%s,%s];4:rectangle;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:yellow
'λx.apply(rectangle,iota(filter(filter(filter(filter(x.s, iff[blue,blue]), triangle), blue), and[circle,circle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:blue;4:blue;4:triangle;4:blue;4:and[%s,%s];4:circle;4:circle
'λx.apply(nor[size1,rectangle],iota(filter(filter(x.s, and[circle,apply(same_size,x.o)]), and[circle,size2])))'	0:apply(%s,%s);4:nor[%s,%s];4:size1;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:circle;4:size2
'λx.apply(and[green,not[yellow]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:not[%s];4:yellow;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(x.s, yellow))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(and[apply(same_color,x.o),rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(filter(filter(filter(filter(x.s, and[size1,implies[or[implies[apply(same_size,iota(x.s)),triangle],triangle],triangle]]), rectangle), size1), and[blue,size2]), or[or[implies[size1,size2],rectangle],size3]), size2)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:implies[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:triangle;4:triangle;4:triangle;4:rectangle;4:size1;4:and[%s,%s];4:blue;4:size2;4:or[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:size1;4:size2;4:rectangle;4:size3;4:size2;3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(x.s, size3), and[size1,not[apply(same_color,x.o)]]), and[not[green],size2]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:size1;4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:not[%s];4:green;4:size2
'λx.exists(nand[triangle,size3], filter(x.s, circle))'	0:exists(%s, %s);4:nand[%s,%s];4:triangle;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.forall(or[size3,or[size2,size3]],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:size3;4:or[%s,%s];4:size2;4:size3;3:%s.s;2:x
'λx.apply(nand[rectangle,and[circle,blue]],iota(filter(filter(x.s, or[not[size1],rectangle]), and[yellow,apply(same_shape,x.o)])))'	0:apply(%s,%s);4:nand[%s,%s];4:rectangle;4:and[%s,%s];4:circle;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:size1;4:rectangle;4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(nor[size1,and[triangle,rectangle]],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:nor[%s,%s];4:size1;4:and[%s,%s];4:triangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(and[apply(same_color,x.o),or[green,apply(same_shape,x.o)]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:or[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[and[yellow,size1],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:size1;4:triangle;1:%s.o;2:x
'λx.apply(not[yellow],iota(filter(filter(x.s, triangle), rectangle)))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle
'λx.apply(and[apply(same_size,iota(x.s)),not[yellow]],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.contains(iota(filter(filter(x.s, yellow), size3)), filter(x.s, size1))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(and[not[triangle],size3],iota(filter(filter(filter(x.s, yellow), and[apply(same_color,x.o),blue]), apply(same_color,x.o))))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:triangle;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(filter(x.s, or[blue,green]), and[implies[circle,blue],size2]), rectangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:green;4:and[%s,%s];4:implies[%s,%s];4:circle;4:blue;4:size2;4:rectangle
'λx.apply(or[and[blue,size3],nand[size1,and[rectangle,nand[size1,blue]]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:blue;4:size3;4:nand[%s,%s];4:size1;4:and[%s,%s];4:rectangle;4:nand[%s,%s];4:size1;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[blue,blue],and[apply(same_color,iota(filter(filter(filter(filter(x.s, size3), or[or[triangle,or[size1,yellow]],size2]), size3), and[blue,or[circle,and[size1,size1]]]))),and[and[size1,not[circle]],size2]]],iota(filter(filter(x.s, size3), rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:blue;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:or[%s,%s];4:triangle;4:or[%s,%s];4:size1;4:yellow;4:size2;4:size3;4:and[%s,%s];4:blue;4:or[%s,%s];4:circle;4:and[%s,%s];4:size1;4:size1;4:and[%s,%s];4:and[%s,%s];4:size1;4:not[%s];4:circle;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle
'λx.contains(x.o, filter(filter(x.s, and[and[size3,blue],green]), yellow))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size3;4:blue;4:green;4:yellow
'λx.contains(iota(filter(filter(filter(filter(x.s, size3), yellow), and[yellow,triangle]), green)), filter(filter(filter(x.s, size1), rectangle), and[size1,triangle]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow;4:and[%s,%s];4:yellow;4:triangle;4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle;4:and[%s,%s];4:size1;4:triangle
'λx.forall(and[rectangle,circle],filter(x.s, apply(same_color,x.o)))'	0:forall(%s,%s);4:and[%s,%s];4:rectangle;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.exists(size1, filter(filter(x.s, yellow), green))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green
'λx.empty(filter(filter(x.s, size2), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:triangle
'λx.apply(and[iff[blue,and[or[size1,rectangle],blue]],triangle],iota(filter(filter(x.s, circle), and[nand[or[size1,and[size1,triangle]],apply(same_size,iota(x.s))],blue])))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:blue;4:and[%s,%s];4:or[%s,%s];4:size1;4:rectangle;4:blue;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:size1;4:and[%s,%s];4:size1;4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:blue
'λx.apply(size2,iota(filter(filter(x.s, rectangle), triangle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle
'λx.exists(size3, filter(x.s, not[and[iff[not[size2],not[size2]],blue]]))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:iff[%s,%s];4:not[%s];4:size2;4:not[%s];4:size2;4:blue
'λx.exists(apply(size-lt,iota(x.s)), filter(filter(filter(filter(x.s, or[size1,blue]), green), or[blue,green]), yellow))'	0:exists(%s, %s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:blue;4:green;4:or[%s,%s];4:blue;4:green;4:yellow
'λx.apply(apply(size-lt,iota(filter(x.s, size3))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;1:iota(%s);3:%s.s;2:x
'λx.forall(circle,filter(filter(x.s, size2), circle))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle
'λx.exists(green, filter(x.s, implies[implies[size2,size1],not[yellow]]))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:implies[%s,%s];4:size2;4:size1;4:not[%s];4:yellow
'λx.exists(size2, filter(filter(x.s, rectangle), size3))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3
'λx.contains(x.o, filter(filter(filter(x.s, rectangle), not[apply(size-leq,x.o)]), size3))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size3
'λx.empty(filter(filter(x.s, rectangle), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3
'λx.forall(green,filter(x.s, and[circle,apply(same_shape,iota(x.s))]))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.exists(and[circle,apply(same_shape,x.o)], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.forall(and[and[and[blue,not[green]],rectangle],rectangle],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:not[%s];4:green;4:rectangle;4:rectangle;3:%s.s;2:x
'λx.apply(green,iota(filter(x.s, apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[triangle,size2],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:size2;4:size1;1:%s.o;2:x
'λx.apply(implies[apply(same_shape,iota(filter(x.s, size2))),size2],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2;1:iota(%s);3:%s.s;2:x
'λx.exists(rectangle, filter(filter(x.s, and[green,size1]), blue))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:size1;4:blue
'λx.forall(size1,x.s)'	0:forall(%s,%s);4:size1;3:%s.s;2:x
'λx.apply(and[not[size3],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size3;4:circle;1:%s.o;2:x
'λx.apply(apply(same_size,iota(filter(filter(x.s, apply(size-lt,x.o)), apply(same_shape,x.o)))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(nor[size3,and[triangle,size2]],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:size3;4:and[%s,%s];4:triangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(not[not[not[and[rectangle,implies[circle,rectangle]]]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:not[%s];4:and[%s,%s];4:rectangle;4:implies[%s,%s];4:circle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(filter(filter(x.s, implies[size2,green]), size1), blue), size3)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size2;4:green;4:size1;4:blue;4:size3
'λx.apply(or[triangle,size2],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(filter(x.s, not[circle]), size2), rectangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:size2;4:rectangle
'λx.apply(rectangle,iota(filter(x.s, apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(and[triangle,yellow],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.forall(yellow,filter(filter(filter(filter(filter(x.s, green), rectangle), apply(same_size,x.o)), blue), circle))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;4:circle
'λx.apply(apply(same_size,x.o),iota(filter(filter(filter(x.s, size1), and[and[apply(size-geq,iota(x.s)),circle],size2]), or[apply(same_color,iota(x.s)),size3])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:circle;4:size2;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size3
'λx.apply(and[rectangle,or[size3,apply(size-leq,iota(x.s))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:or[%s,%s];4:size3;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(or[and[and[yellow,apply(same_size,x.o)],circle],not[size3]],iota(filter(filter(filter(x.s, and[yellow,not[circle]]), blue), iff[blue,size3])))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:not[%s];4:circle;4:blue;4:iff[%s,%s];4:blue;4:size3
'λx.forall(not[apply(same_shape,x.o)],filter(x.s, not[size3]))'	0:forall(%s,%s);4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3
'λx.apply(not[size2],iota(filter(filter(x.s, rectangle), not[implies[size2,apply(same_size,iota(filter(filter(filter(x.s, size1), and[not[size2],nor[green,yellow]]), and[green,rectangle])))]])))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:implies[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:not[%s];4:size2;4:nor[%s,%s];4:green;4:yellow;4:and[%s,%s];4:green;4:rectangle
'λx.apply(apply(same_shape,iota(filter(x.s, blue))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(and[circle,size2],iota(filter(filter(x.s, yellow), yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:yellow
'λx.contains(x.o, filter(x.s, apply(size-lt,x.o)))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.apply(apply(same_color,x.o),iota(filter(filter(x.s, size1), nor[size2,or[blue,green]])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:nor[%s,%s];4:size2;4:or[%s,%s];4:blue;4:green
'λx.apply(circle,iota(filter(filter(filter(filter(x.s, nand[apply(same_size,x.o),yellow]), blue), circle), not[triangle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow;4:blue;4:circle;4:not[%s];4:triangle
'λx.apply(apply(same_shape,iota(x.s)),iota(filter(filter(filter(filter(filter(filter(x.s, triangle), nor[implies[green,green],size1]), size1), size3), apply(same_size,x.o)), size2)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:nor[%s,%s];4:implies[%s,%s];4:green;4:green;4:size1;4:size1;4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2
'λx.forall(rectangle,filter(filter(filter(x.s, size2), triangle), circle))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:triangle;4:circle
'λx.apply(circle,iota(filter(filter(x.s, rectangle), yellow)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:yellow
'λx.apply(blue,iota(filter(x.s, implies[green,size1])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:green;4:size1
'λx.apply(nor[not[green],size3],iota(filter(filter(filter(filter(filter(x.s, or[yellow,not[yellow]]), blue), size2), size1), circle)))'	0:apply(%s,%s);4:nor[%s,%s];4:not[%s];4:green;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:not[%s];4:yellow;4:blue;4:size2;4:size1;4:circle
'λx.apply(or[green,blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:blue;1:%s.o;2:x
'λx.forall(green,filter(filter(filter(x.s, green), blue), size1))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue;4:size1
'λx.contains(x.o, filter(x.s, not[apply(size-geq,iota(x.s))]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size2,size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:size1;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(filter(x.s, and[and[yellow,not[and[green,and[green,circle]]]],blue]), triangle), circle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:yellow;4:not[%s];4:and[%s,%s];4:green;4:and[%s,%s];4:green;4:circle;4:blue;4:triangle;4:circle
'λx.apply(and[circle,and[or[triangle,rectangle],size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:and[%s,%s];4:or[%s,%s];4:triangle;4:rectangle;4:size3;1:%s.o;2:x
'λx.forall(and[circle,rectangle],filter(filter(filter(x.s, green), triangle), size1))'	0:forall(%s,%s);4:and[%s,%s];4:circle;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:triangle;4:size1
'λx.apply(nor[triangle,and[triangle,circle]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:triangle;4:and[%s,%s];4:triangle;4:circle;1:%s.o;2:x
'λx.apply(implies[iff[blue,circle],apply(same_size,iota(x.s))],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:iff[%s,%s];4:blue;4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(and[size3,apply(same_size,iota(filter(x.s, implies[or[rectangle,implies[rectangle,circle]],rectangle])))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:or[%s,%s];4:rectangle;4:implies[%s,%s];4:rectangle;4:circle;4:rectangle;1:%s.o;2:x
'λx.exists(triangle, filter(filter(x.s, size2), apply(same_shape,iota(filter(filter(filter(x.s, rectangle), blue), and[apply(same_size,iota(filter(x.s, size2))),rectangle])))))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle
'λx.contains(iota(filter(filter(x.s, yellow), rectangle)), filter(x.s, green))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(apply(same_color,iota(filter(x.s, nor[rectangle,and[or[size1,and[and[yellow,rectangle],nor[not[not[and[size1,size1]]],size2]]],yellow]]))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:rectangle;4:and[%s,%s];4:or[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:yellow;4:rectangle;4:nor[%s,%s];4:not[%s];4:not[%s];4:and[%s,%s];4:size1;4:size1;4:size2;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.forall(and[green,size3],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:green;4:size3;3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(x.s, iff[and[circle,nand[size2,green]],size1]), apply(size-lt,x.o))))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:and[%s,%s];4:circle;4:nand[%s,%s];4:size2;4:green;4:size1;4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.apply(and[nor[and[yellow,size3],triangle],triangle],iota(filter(filter(x.s, and[green,rectangle]), apply(same_size,iota(x.s)))))'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:yellow;4:size3;4:triangle;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[and[not[apply(same_color,x.o)],size3],apply(size-leq,iota(x.s))],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(size3,iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(not[not[blue]],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(nor[apply(same_shape,iota(x.s)),or[size2,or[nor[iff[size1,implies[size2,and[and[not[yellow],yellow],circle]]],blue],size3]]],iota(filter(filter(x.s, and[circle,size1]), size2)))'	0:apply(%s,%s);4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:or[%s,%s];4:nor[%s,%s];4:iff[%s,%s];4:size1;4:implies[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:yellow;4:yellow;4:circle;4:blue;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size1;4:size2
'λx.forall(yellow,filter(x.s, triangle))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.empty(filter(filter(filter(x.s, not[blue]), triangle), not[blue]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:triangle;4:not[%s];4:blue
'λx.exists(size3, filter(filter(x.s, not[yellow]), rectangle))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:rectangle
'λx.contains(x.o, filter(x.s, and[not[or[size2,apply(same_size,x.o)]],yellow]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow
'λx.apply(and[not[and[not[size2],iff[yellow,rectangle]]],rectangle],iota(filter(filter(x.s, size3), and[rectangle,implies[size1,rectangle]])))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:not[%s];4:size2;4:iff[%s,%s];4:yellow;4:rectangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:rectangle;4:implies[%s,%s];4:size1;4:rectangle
'λx.apply(implies[not[and[size3,triangle]],not[or[apply(same_color,iota(x.s)),apply(size-lt,x.o)]]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:not[%s];4:and[%s,%s];4:size3;4:triangle;4:not[%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.exists(and[iff[size1,and[nand[not[size3],blue],not[blue]]],not[yellow]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:iff[%s,%s];4:size1;4:and[%s,%s];4:nand[%s,%s];4:not[%s];4:size3;4:blue;4:not[%s];4:blue;4:not[%s];4:yellow;3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, and[size3,or[and[green,triangle],circle]]), size2)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:or[%s,%s];4:and[%s,%s];4:green;4:triangle;4:circle;4:size2
'λx.apply(size1,iota(filter(filter(filter(filter(filter(filter(x.s, or[size2,yellow]), apply(same_size,x.o)), size2), blue), apply(same_shape,x.o)), size3)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2;4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3
'λx.apply(size2,iota(filter(filter(x.s, circle), not[size2])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:size2
'λx.contains(x.o, filter(filter(filter(filter(x.s, or[iff[not[circle],apply(same_shape,iota(filter(x.s, rectangle)))],size3]), apply(size-geq,iota(filter(filter(x.s, apply(same_shape,x.o)), size2)))), size2), rectangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:iff[%s,%s];4:not[%s];4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2;4:size2;4:rectangle
'λx.apply(nand[apply(same_color,iota(x.s)),rectangle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:rectangle;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, rectangle), and[or[triangle,and[and[triangle,size2],and[yellow,and[not[rectangle],and[size1,triangle]]]]],circle])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:or[%s,%s];4:triangle;4:and[%s,%s];4:and[%s,%s];4:triangle;4:size2;4:and[%s,%s];4:yellow;4:and[%s,%s];4:not[%s];4:rectangle;4:and[%s,%s];4:size1;4:triangle;4:circle
'λx.apply(and[green,triangle],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(and[green,apply(same_size,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(apply(same_size,iota(filter(filter(x.s, implies[apply(same_size,x.o),apply(same_color,x.o)]), rectangle))),iota(filter(x.s, green)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(triangle,iota(filter(filter(x.s, and[iff[size3,and[or[apply(same_size,iota(filter(filter(filter(filter(x.s, or[size3,apply(size-lt,iota(x.s))]), size3), green), iff[and[or[or[rectangle,rectangle],rectangle],yellow],yellow]))),apply(same_shape,iota(x.s))],not[circle]]],and[size2,green]]), apply(size-lt,x.o))))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:iff[%s,%s];4:size3;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:size3;4:green;4:iff[%s,%s];4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:rectangle;4:rectangle;4:rectangle;4:yellow;4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:not[%s];4:circle;4:and[%s,%s];4:size2;4:green;4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.forall(apply(size-gt,x.o),filter(filter(filter(x.s, green), apply(same_color,x.o)), green))'	0:forall(%s,%s);4:apply(%s,%s);5:size-gt;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green
'λx.forall(not[size3],filter(x.s, blue))'	0:forall(%s,%s);4:not[%s];4:size3;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.contains(iota(x.s), filter(filter(x.s, implies[or[apply(size-lt,x.o),size2],size1]), nand[not[nor[green,and[circle,and[rectangle,size1]]]],not[circle]]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:size2;4:size1;4:nand[%s,%s];4:not[%s];4:nor[%s,%s];4:green;4:and[%s,%s];4:circle;4:and[%s,%s];4:rectangle;4:size1;4:not[%s];4:circle
'λx.apply(and[green,and[not[circle],size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:not[%s];4:circle;4:size1;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(filter(filter(x.s, iff[size1,blue]), circle), nand[apply(same_color,x.o),not[triangle]]), blue)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size1;4:blue;4:circle;4:nand[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:triangle;4:blue
'λx.apply(and[size1,not[blue]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:not[%s];4:blue;1:iota(%s);3:%s.s;2:x
'λx.forall(size2,filter(x.s, or[apply(same_shape,iota(x.s)),implies[blue,size2]]))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:implies[%s,%s];4:blue;4:size2
'λx.apply(nor[blue,or[yellow,and[and[yellow,green],not[green]]]],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:blue;4:or[%s,%s];4:yellow;4:and[%s,%s];4:and[%s,%s];4:yellow;4:green;4:not[%s];4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[or[circle,size2],apply(same_shape,x.o)],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:circle;4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(size3,iota(filter(filter(filter(filter(filter(filter(x.s, size3), green), green), size1), blue), size1)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green;4:green;4:size1;4:blue;4:size1
'λx.forall(nand[and[or[blue,apply(same_color,x.o)],or[rectangle,and[size2,rectangle]]],implies[blue,size1]],x.s)'	0:forall(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:or[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:or[%s,%s];4:rectangle;4:and[%s,%s];4:size2;4:rectangle;4:implies[%s,%s];4:blue;4:size1;3:%s.s;2:x
'λx.apply(apply(size-leq,x.o),iota(filter(filter(filter(x.s, green), rectangle), apply(size-geq,x.o))))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.apply(and[not[yellow],and[size2,blue]],iota(filter(filter(filter(x.s, and[circle,size3]), apply(same_shape,iota(filter(x.s, green)))), and[apply(same_shape,iota(filter(filter(x.s, size2), size1))),size3])))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:yellow;4:and[%s,%s];4:size2;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1;4:size3
'λx.exists(or[size3,size3], filter(filter(filter(x.s, size1), apply(same_shape,x.o)), nor[green,green]))'	0:exists(%s, %s);4:or[%s,%s];4:size3;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:nor[%s,%s];4:green;4:green
'λx.contains(x.o, filter(x.s, iff[and[yellow,green],rectangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:and[%s,%s];4:yellow;4:green;4:rectangle
'λx.apply(or[rectangle,apply(same_color,iota(filter(x.s, size2)))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;1:%s.o;2:x
'λx.apply(and[apply(same_color,iota(x.s)),triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:triangle;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.contains(iota(filter(x.s, yellow)), filter(x.s, rectangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(implies[triangle,blue],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:triangle;4:blue;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, not[or[circle,not[rectangle]]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:circle;4:not[%s];4:rectangle
'λx.forall(and[size1,size2],filter(filter(x.s, size1), blue))'	0:forall(%s,%s);4:and[%s,%s];4:size1;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue
'λx.exists(iff[or[apply(size-gt,iota(filter(x.s, circle))),not[nand[and[and[size3,yellow],green],blue]]],apply(same_color,x.o)], x.s)'	0:exists(%s, %s);4:iff[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:yellow;4:green;4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:%s.s;2:x
'λx.empty(filter(x.s, or[yellow,size3]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:size3
'λx.forall(or[size3,size2],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:size3;4:size2;3:%s.s;2:x
'λx.contains(iota(filter(filter(x.s, rectangle), size2)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2;3:%s.s;2:x
'λx.apply(size2,iota(filter(x.s, or[blue,yellow])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:yellow
'λx.apply(and[circle,rectangle],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.forall(and[yellow,triangle],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:yellow;4:triangle;3:%s.s;2:x
'λx.exists(or[and[size1,blue],rectangle], filter(x.s, size2))'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:size1;4:blue;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(or[implies[size1,size2],triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:implies[%s,%s];4:size1;4:size2;4:triangle;1:%s.o;2:x
'λx.empty(filter(filter(x.s, and[circle,and[size2,apply(same_size,iota(filter(x.s, blue)))]]), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle
'λx.apply(apply(size-lt,iota(x.s)),iota(filter(x.s, size1)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(implies[blue,yellow], filter(x.s, circle))'	0:exists(%s, %s);4:implies[%s,%s];4:blue;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.exists(and[circle,circle], filter(x.s, and[and[green,blue],size2]))'	0:exists(%s, %s);4:and[%s,%s];4:circle;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:green;4:blue;4:size2
'λx.apply(or[and[yellow,rectangle],triangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:yellow;4:rectangle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.forall(apply(same_size,iota(x.s)),filter(x.s, size3))'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(implies[rectangle,not[blue]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:rectangle;4:not[%s];4:blue;1:%s.o;2:x
'λx.forall(or[size3,circle],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:size3;4:circle;3:%s.s;2:x
'λx.apply(and[implies[rectangle,not[apply(size-geq,x.o)]],triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:rectangle;4:not[%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[rectangle,apply(same_color,iota(filter(filter(filter(x.s, triangle), green), yellow)))],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(not[size1],iota(filter(filter(filter(x.s, or[rectangle,yellow]), rectangle), rectangle)))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:yellow;4:rectangle;4:rectangle
'λx.apply(or[size3,green],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[yellow,green],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:yellow;4:green;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(x.s, blue), nor[nand[size2,nor[size1,yellow]],circle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:nor[%s,%s];4:nand[%s,%s];4:size2;4:nor[%s,%s];4:size1;4:yellow;4:circle
'λx.apply(and[size3,yellow],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.forall(implies[apply(size-geq,x.o),yellow],filter(filter(filter(filter(x.s, not[apply(size-lt,x.o)]), size2), triangle), and[or[green,not[size1]],size3]))'	0:forall(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:size2;4:triangle;4:and[%s,%s];4:or[%s,%s];4:green;4:not[%s];4:size1;4:size3
'λx.apply(or[rectangle,apply(same_size,iota(filter(filter(x.s, triangle), rectangle)))],iota(filter(x.s, green)))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.forall(size3,x.s)'	0:forall(%s,%s);4:size3;3:%s.s;2:x
'λx.apply(size1,iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(nor[not[apply(same_shape,iota(x.s))],rectangle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:rectangle;1:%s.o;2:x
'λx.apply(size1,iota(filter(x.s, implies[yellow,iff[and[triangle,nor[triangle,size2]],or[size1,and[iff[circle,triangle],and[size1,blue]]]]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:yellow;4:iff[%s,%s];4:and[%s,%s];4:triangle;4:nor[%s,%s];4:triangle;4:size2;4:or[%s,%s];4:size1;4:and[%s,%s];4:iff[%s,%s];4:circle;4:triangle;4:and[%s,%s];4:size1;4:blue
'λx.forall(not[rectangle],filter(filter(x.s, size2), size1))'	0:forall(%s,%s);4:not[%s];4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1
'λx.apply(and[and[not[green],and[yellow,circle]],circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:green;4:and[%s,%s];4:yellow;4:circle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(x.s, and[size3,size1])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:size1
'λx.exists(and[circle,green], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:circle;4:green;3:%s.s;2:x
'λx.apply(and[nor[yellow,nand[and[triangle,rectangle],and[and[blue,triangle],nor[size1,and[size1,blue]]]]],not[blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:yellow;4:nand[%s,%s];4:and[%s,%s];4:triangle;4:rectangle;4:and[%s,%s];4:and[%s,%s];4:blue;4:triangle;4:nor[%s,%s];4:size1;4:and[%s,%s];4:size1;4:blue;4:not[%s];4:blue;1:%s.o;2:x
'λx.apply(and[rectangle,apply(size-leq,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:%s.o;2:x
'λx.exists(triangle, filter(filter(x.s, apply(same_shape,iota(x.s))), not[size3]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:not[%s];4:size3
'λx.forall(or[triangle,apply(same_size,iota(filter(filter(filter(x.s, not[blue]), and[size3,blue]), yellow)))],filter(filter(filter(filter(x.s, yellow), size3), not[iff[green,yellow]]), circle))'	0:forall(%s,%s);4:or[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:and[%s,%s];4:size3;4:blue;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size3;4:not[%s];4:iff[%s,%s];4:green;4:yellow;4:circle
'λx.apply(or[rectangle,or[and[and[not[nand[not[rectangle],circle]],triangle],and[circle,size1]],rectangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:nand[%s,%s];4:not[%s];4:rectangle;4:circle;4:triangle;4:and[%s,%s];4:circle;4:size1;4:rectangle;1:%s.o;2:x
'λx.contains(iota(filter(x.s, blue)), filter(filter(filter(filter(filter(x.s, apply(same_size,iota(filter(filter(filter(filter(x.s, rectangle), circle), or[circle,green]), size1)))), and[and[yellow,yellow],not[and[rectangle,iff[circle,blue]]]]), and[rectangle,circle]), size1), green))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle;4:or[%s,%s];4:circle;4:green;4:size1;4:and[%s,%s];4:and[%s,%s];4:yellow;4:yellow;4:not[%s];4:and[%s,%s];4:rectangle;4:iff[%s,%s];4:circle;4:blue;4:and[%s,%s];4:rectangle;4:circle;4:size1;4:green
'λx.forall(blue,filter(x.s, nor[apply(same_color,x.o),apply(same_size,iota(x.s))]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_shape,iota(filter(x.s, apply(same_size,iota(x.s))))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, and[size2,triangle]), and[not[size1],and[size1,circle]]), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:triangle;4:and[%s,%s];4:not[%s];4:size1;4:and[%s,%s];4:size1;4:circle;4:size1
'λx.exists(size3, filter(filter(x.s, or[apply(size-leq,x.o),or[green,triangle]]), blue))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:or[%s,%s];4:green;4:triangle;4:blue
'λx.apply(and[rectangle,yellow],iota(filter(filter(x.s, not[yellow]), yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:yellow
'λx.apply(blue,iota(filter(filter(x.s, and[size3,rectangle]), and[triangle,size1])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:rectangle;4:and[%s,%s];4:triangle;4:size1
'λx.apply(green,iota(filter(filter(filter(filter(filter(filter(filter(filter(x.s, and[size2,not[or[size1,size2]]]), apply(size-geq,iota(filter(x.s, size1)))), triangle), blue), size3), size3), size2), triangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:not[%s];4:or[%s,%s];4:size1;4:size2;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle;4:blue;4:size3;4:size3;4:size2;4:triangle
'λx.apply(size1,iota(filter(filter(x.s, and[rectangle,size1]), size3)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:size1;4:size3
'λx.apply(or[size3,yellow],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(and[apply(size-gt,iota(filter(x.s, not[or[circle,size1]]))),nand[or[size2,yellow],green]],iota(filter(filter(filter(filter(x.s, and[triangle,not[blue]]), yellow), nand[size3,yellow]), green)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:circle;4:size1;4:nand[%s,%s];4:or[%s,%s];4:size2;4:yellow;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:not[%s];4:blue;4:yellow;4:nand[%s,%s];4:size3;4:yellow;4:green
'λx.apply(rectangle,iota(filter(x.s, and[or[rectangle,apply(same_color,iota(filter(x.s, blue)))],size2])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2
'λx.apply(apply(size-gt,iota(filter(x.s, and[implies[size1,or[size1,size2]],not[yellow]]))),iota(filter(filter(filter(x.s, rectangle), iff[circle,circle]), circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:implies[%s,%s];4:size1;4:or[%s,%s];4:size1;4:size2;4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:iff[%s,%s];4:circle;4:circle;4:circle
'λx.apply(or[blue,size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:size3;1:%s.o;2:x
'λx.exists(rectangle, filter(x.s, not[rectangle]))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle
'λx.apply(and[not[size1],size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size1;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(x.s, yellow), and[yellow,and[apply(same_color,iota(x.s)),size1]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:yellow;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size1
'λx.apply(or[yellow,green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:green;1:%s.o;2:x
'λx.apply(nand[circle,or[size2,nand[blue,apply(same_size,x.o)]]],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:nand[%s,%s];4:circle;4:or[%s,%s];4:size2;4:nand[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(nor[circle,rectangle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:circle;4:rectangle;1:%s.o;2:x
'λx.apply(and[green,iff[circle,apply(same_size,x.o)]],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:iff[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.exists(size2, filter(x.s, blue))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[and[triangle,size1],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:size1;4:triangle;1:%s.o;2:x
'λx.apply(or[apply(same_shape,iota(x.s)),blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(filter(x.s, and[green,triangle]), not[size2]), apply(same_size,iota(filter(filter(x.s, size2), yellow))))))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:triangle;4:not[%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:yellow
'λx.apply(apply(size-leq,x.o),iota(filter(filter(filter(x.s, iff[apply(same_color,iota(filter(filter(x.s, not[not[triangle]]), apply(same_size,iota(x.s))))),and[blue,yellow]]), size1), rectangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:yellow;4:size1;4:rectangle
'λx.exists(and[nand[and[and[apply(size-leq,iota(x.s)),blue],or[not[nand[implies[size3,and[nand[or[circle,not[size1]],size3],apply(same_size,iota(filter(filter(x.s, size3), circle)))]],rectangle]],and[triangle,circle]]],green],or[size2,size1]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:not[%s];4:nand[%s,%s];4:implies[%s,%s];4:size3;4:and[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:circle;4:not[%s];4:size1;4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle;4:rectangle;4:and[%s,%s];4:triangle;4:circle;4:green;4:or[%s,%s];4:size2;4:size1;3:%s.s;2:x
'λx.apply(and[size1,green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:green;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(filter(x.s, size3), size1), size1), apply(same_shape,iota(filter(filter(x.s, and[size3,size1]), and[green,apply(same_size,iota(filter(filter(x.s, size1), size2)))])))))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size1;4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:size1;4:and[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2
'λx.exists(and[yellow,size1], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:yellow;4:size1;3:%s.s;2:x
'λx.apply(and[rectangle,apply(size-lt,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:%s.o;2:x
'λx.forall(triangle,filter(filter(filter(filter(x.s, green), and[not[size3],apply(size-lt,iota(filter(x.s, not[apply(same_shape,iota(filter(filter(x.s, apply(size-leq,x.o)), and[yellow,blue])))])))]), circle), nand[rectangle,triangle]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:not[%s];4:size3;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:and[%s,%s];4:yellow;4:blue;4:circle;4:nand[%s,%s];4:rectangle;4:triangle
'λx.apply(not[and[apply(same_color,iota(x.s)),and[rectangle,or[rectangle,green]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:rectangle;4:green;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(filter(filter(filter(filter(filter(x.s, size3), implies[triangle,green]), and[and[and[nor[circle,yellow],size2],not[size3]],rectangle]), size1), and[size3,and[green,and[blue,size2]]]), and[size3,green]), yellow)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:implies[%s,%s];4:triangle;4:green;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:circle;4:yellow;4:size2;4:not[%s];4:size3;4:rectangle;4:size1;4:and[%s,%s];4:size3;4:and[%s,%s];4:green;4:and[%s,%s];4:blue;4:size2;4:and[%s,%s];4:size3;4:green;4:yellow
'λx.apply(or[apply(same_color,x.o),apply(same_shape,iota(x.s))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(or[yellow,size2],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size2,size2],iota(filter(filter(filter(x.s, circle), or[or[apply(same_shape,iota(filter(filter(filter(filter(filter(filter(x.s, green), blue), circle), blue), size3), apply(same_size,x.o)))),and[size3,yellow]],and[and[green,size2],green]]), nor[green,triangle])))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue;4:circle;4:blue;4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:size3;4:yellow;4:and[%s,%s];4:and[%s,%s];4:green;4:size2;4:green;4:nor[%s,%s];4:green;4:triangle
'λx.apply(blue,iota(filter(x.s, and[size3,apply(size-gt,iota(x.s))])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x
'λx.apply(and[yellow,apply(same_size,iota(x.s))],iota(filter(filter(filter(filter(x.s, implies[yellow,size3]), size2), nand[circle,not[yellow]]), circle)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:yellow;4:size3;4:size2;4:nand[%s,%s];4:circle;4:not[%s];4:yellow;4:circle
'λx.apply(and[and[yellow,size1],yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:size1;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.exists(and[blue,green], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:blue;4:green;3:%s.s;2:x
'λx.apply(and[green,size3],iota(filter(x.s, or[nor[blue,triangle],green])))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:nor[%s,%s];4:blue;4:triangle;4:green
'λx.apply(and[circle,apply(same_size,iota(x.s))],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[apply(same_color,iota(x.s)),size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size1;1:%s.o;2:x
'λx.forall(size3,filter(x.s, size3))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(implies[triangle,yellow], x.s)'	0:exists(%s, %s);4:implies[%s,%s];4:triangle;4:yellow;3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, nor[not[and[blue,blue]],nand[triangle,rectangle]]), size1), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:not[%s];4:and[%s,%s];4:blue;4:blue;4:nand[%s,%s];4:triangle;4:rectangle;4:size1;4:green
'λx.forall(circle,filter(filter(x.s, size3), circle))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle
'λx.apply(apply(same_size,iota(x.s)),iota(filter(filter(x.s, blue), iff[rectangle,size1])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:iff[%s,%s];4:rectangle;4:size1
'λx.apply(nand[triangle,size3],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[triangle,implies[green,yellow]],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:implies[%s,%s];4:green;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(implies[not[rectangle],iff[and[circle,size2],size2]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:not[%s];4:rectangle;4:iff[%s,%s];4:and[%s,%s];4:circle;4:size2;4:size2;1:%s.o;2:x
'λx.apply(or[and[blue,nor[circle,blue]],size2],iota(filter(filter(x.s, or[circle,and[circle,size1]]), apply(size-leq,x.o))))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:blue;4:nor[%s,%s];4:circle;4:blue;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:and[%s,%s];4:circle;4:size1;4:apply(%s,%s);5:size-leq;1:%s.o;2:x
'λx.contains(x.o, filter(filter(filter(filter(x.s, triangle), and[size3,yellow]), yellow), yellow))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:size3;4:yellow;4:yellow;4:yellow
'λx.apply(or[blue,or[and[nand[blue,green],yellow],green]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:or[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:blue;4:green;4:yellow;4:green;1:%s.o;2:x
'λx.apply(size3,iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(size2,iota(filter(filter(filter(filter(x.s, not[iff[size1,size1]]), yellow), green), size2)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:iff[%s,%s];4:size1;4:size1;4:yellow;4:green;4:size2
'λx.empty(filter(filter(filter(x.s, size3), green), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green;4:circle
'λx.apply(and[size3,size3],iota(filter(filter(x.s, circle), rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle
'λx.apply(and[size3,size1],iota(filter(filter(x.s, and[or[triangle,size1],green]), rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:triangle;4:size1;4:green;4:rectangle
'λx.contains(x.o, filter(filter(filter(x.s, and[size3,size3]), not[blue]), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:size3;4:not[%s];4:blue;4:green
'λx.forall(triangle,filter(x.s, or[not[rectangle],and[implies[triangle,yellow],and[and[apply(same_color,iota(filter(filter(x.s, size3), size1))),or[yellow,and[not[size2],green]]],iff[size2,triangle]]]]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:rectangle;4:and[%s,%s];4:implies[%s,%s];4:triangle;4:yellow;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size1;4:or[%s,%s];4:yellow;4:and[%s,%s];4:not[%s];4:size2;4:green;4:iff[%s,%s];4:size2;4:triangle
'λx.apply(and[not[and[iff[rectangle,blue],nor[circle,size3]]],yellow],iota(filter(filter(filter(x.s, and[blue,rectangle]), yellow), yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:iff[%s,%s];4:rectangle;4:blue;4:nor[%s,%s];4:circle;4:size3;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:rectangle;4:yellow;4:yellow
'λx.forall(or[size2,and[triangle,yellow]],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:size2;4:and[%s,%s];4:triangle;4:yellow;3:%s.s;2:x
'λx.apply(green,iota(filter(filter(x.s, green), rectangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle
'λx.apply(or[circle,size1],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.exists(triangle, filter(x.s, and[not[and[yellow,yellow]],nor[size1,apply(size-gt,iota(filter(x.s, not[size1])))]]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:yellow;4:yellow;4:nor[%s,%s];4:size1;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1
'λx.apply(size3,iota(filter(filter(x.s, not[size1]), nand[and[and[not[green],triangle],and[and[circle,size1],size1]],or[yellow,triangle]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:green;4:triangle;4:and[%s,%s];4:and[%s,%s];4:circle;4:size1;4:size1;4:or[%s,%s];4:yellow;4:triangle
'λx.empty(filter(filter(x.s, and[yellow,size1]), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size1;4:blue
'λx.apply(or[circle,triangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.exists(or[and[and[rectangle,apply(size-leq,x.o)],size1],blue], filter(x.s, size3))'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size1;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(green, filter(filter(x.s, size1), size2))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2
'λx.apply(and[yellow,size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:size2;1:%s.o;2:x
'λx.forall(not[apply(size-lt,x.o)],filter(x.s, not[not[blue]]))'	0:forall(%s,%s);4:not[%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:blue
'λx.exists(not[apply(same_color,x.o)], filter(filter(x.s, size2), and[and[implies[green,and[and[green,or[green,apply(same_color,x.o)]],or[not[blue],circle]]],triangle],triangle]))'	0:exists(%s, %s);4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:green;4:or[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:or[%s,%s];4:not[%s];4:blue;4:circle;4:triangle;4:triangle
'λx.apply(and[or[yellow,size1],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:yellow;4:size1;4:size1;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, not[circle]), and[size2,not[blue]]), and[apply(same_color,x.o),blue]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:and[%s,%s];4:size2;4:not[%s];4:blue;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue
'λx.apply(circle,iota(filter(x.s, circle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(size1,iota(filter(x.s, and[yellow,size2])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size2
'λx.empty(filter(filter(x.s, not[and[size2,triangle]]), and[circle,not[and[or[blue,blue],size1]]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:size2;4:triangle;4:and[%s,%s];4:circle;4:not[%s];4:and[%s,%s];4:or[%s,%s];4:blue;4:blue;4:size1
'λx.apply(rectangle,iota(filter(filter(x.s, and[circle,size1]), rectangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size1;4:rectangle
'λx.apply(and[size3,apply(size-lt,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(nor[implies[size3,blue],size2],iota(filter(filter(x.s, implies[and[and[triangle,yellow],not[triangle]],size3]), not[and[triangle,size2]])))'	0:apply(%s,%s);4:nor[%s,%s];4:implies[%s,%s];4:size3;4:blue;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:yellow;4:not[%s];4:triangle;4:size3;4:not[%s];4:and[%s,%s];4:triangle;4:size2
'λx.exists(and[green,rectangle], filter(x.s, size3))'	0:exists(%s, %s);4:and[%s,%s];4:green;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(and[yellow,rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, circle), implies[nand[triangle,triangle],and[size1,blue]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:implies[%s,%s];4:nand[%s,%s];4:triangle;4:triangle;4:and[%s,%s];4:size1;4:blue
'λx.apply(and[triangle,yellow],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(circle,iota(filter(x.s, size2)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.forall(rectangle,filter(x.s, and[size3,rectangle]))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:rectangle
'λx.apply(circle,iota(filter(filter(filter(x.s, implies[or[circle,size1],size1]), size2), and[not[size2],and[yellow,green]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:or[%s,%s];4:circle;4:size1;4:size1;4:size2;4:and[%s,%s];4:not[%s];4:size2;4:and[%s,%s];4:yellow;4:green
'λx.apply(and[nor[apply(same_size,iota(x.s)),or[yellow,apply(same_size,iota(x.s))]],and[or[triangle,apply(same_shape,x.o)],blue]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size2,and[rectangle,and[green,nor[size3,size3]]]],iota(filter(filter(filter(filter(filter(x.s, circle), or[size3,yellow]), not[and[blue,or[size1,size2]]]), rectangle), blue)))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:green;4:nor[%s,%s];4:size3;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:size3;4:yellow;4:not[%s];4:and[%s,%s];4:blue;4:or[%s,%s];4:size1;4:size2;4:rectangle;4:blue
'λx.apply(iff[green,size2],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:green;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size2,iff[or[size2,circle],blue]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:iff[%s,%s];4:or[%s,%s];4:size2;4:circle;4:blue;1:%s.o;2:x
'λx.apply(size2,iota(filter(x.s, or[apply(same_shape,iota(filter(filter(filter(x.s, size1), size1), circle))),not[or[yellow,and[size3,and[nand[and[and[size1,not[size1]],circle],not[apply(same_size,x.o)]],size1]]]]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1;4:circle;4:not[%s];4:or[%s,%s];4:yellow;4:and[%s,%s];4:size3;4:and[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:not[%s];4:size1;4:circle;4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1
'λx.exists(nor[size3,triangle], filter(x.s, size3))'	0:exists(%s, %s);4:nor[%s,%s];4:size3;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.contains(x.o, filter(filter(x.s, rectangle), apply(same_shape,x.o)))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(nor[implies[and[triangle,apply(size-lt,x.o)],size3],rectangle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:triangle;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:size3;4:rectangle;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, not[green]), nand[and[not[yellow],and[or[yellow,rectangle],size3]],apply(same_shape,iota(x.s))])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:nand[%s,%s];4:and[%s,%s];4:not[%s];4:yellow;4:and[%s,%s];4:or[%s,%s];4:yellow;4:rectangle;4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.forall(blue,filter(filter(x.s, green), not[size1]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:size1
'λx.exists(circle, filter(filter(filter(filter(x.s, iff[yellow,and[size1,and[not[not[yellow]],blue]]]), apply(same_shape,iota(filter(filter(filter(x.s, size3), size3), yellow)))), size2), size2))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:yellow;4:and[%s,%s];4:size1;4:and[%s,%s];4:not[%s];4:not[%s];4:yellow;4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3;4:yellow;4:size2;4:size2
'λx.apply(blue,iota(filter(filter(filter(filter(x.s, and[size2,not[blue]]), blue), triangle), blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:not[%s];4:blue;4:blue;4:triangle;4:blue
'λx.contains(iota(filter(filter(x.s, yellow), apply(same_shape,iota(filter(x.s, rectangle))))), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;3:%s.s;2:x
'λx.apply(and[apply(same_color,x.o),size3],iota(filter(filter(x.s, nand[size2,blue]), size2)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size2;4:blue;4:size2
'λx.apply(or[apply(same_shape,iota(filter(filter(x.s, size3), size3))),triangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[not[and[and[and[not[green],or[and[triangle,or[size2,yellow]],or[green,size2]]],triangle],triangle]],circle],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:green;4:or[%s,%s];4:and[%s,%s];4:triangle;4:or[%s,%s];4:size2;4:yellow;4:or[%s,%s];4:green;4:size2;4:triangle;4:triangle;4:circle;4:blue;1:%s.o;2:x
'λx.forall(apply(same_color,x.o),filter(filter(filter(x.s, size1), size2), green))'	0:forall(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2;4:green
'λx.empty(filter(x.s, not[circle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.apply(or[triangle,blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:blue;1:%s.o;2:x
'λx.apply(nand[yellow,rectangle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:yellow;4:rectangle;1:%s.o;2:x
'λx.apply(iff[and[green,not[or[rectangle,size3]]],yellow],iota(filter(filter(x.s, rectangle), size3)))'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:green;4:not[%s];4:or[%s,%s];4:rectangle;4:size3;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3
'λx.apply(and[or[size3,green],and[triangle,circle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size3;4:green;4:and[%s,%s];4:triangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(filter(x.s, rectangle), not[or[blue,iff[not[green],yellow]]]), and[size1,blue])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:or[%s,%s];4:blue;4:iff[%s,%s];4:not[%s];4:green;4:yellow;4:and[%s,%s];4:size1;4:blue
'λx.empty(filter(filter(filter(filter(x.s, size3), or[yellow,circle]), yellow), nor[rectangle,size2]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:yellow;4:circle;4:yellow;4:nor[%s,%s];4:rectangle;4:size2
'λx.apply(and[iff[rectangle,size2],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:rectangle;4:size2;4:triangle;1:%s.o;2:x
'λx.forall(blue,filter(filter(x.s, size3), and[apply(same_size,iota(filter(filter(x.s, not[or[or[apply(size-geq,x.o),and[and[apply(same_shape,iota(x.s)),yellow],size1]],size3]]), blue))),size3]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:yellow;4:size1;4:size3;4:blue;4:size3
'λx.forall(not[yellow],x.s)'	0:forall(%s,%s);4:not[%s];4:yellow;3:%s.s;2:x
'λx.apply(apply(size-gt,iota(x.s)),iota(filter(filter(x.s, or[apply(same_shape,iota(filter(x.s, or[not[iff[or[circle,and[circle,size3]],circle]],or[circle,blue]]))),blue]), triangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:iff[%s,%s];4:or[%s,%s];4:circle;4:and[%s,%s];4:circle;4:size3;4:circle;4:or[%s,%s];4:circle;4:blue;4:blue;4:triangle
'λx.empty(filter(filter(filter(filter(x.s, or[not[size1],implies[implies[rectangle,circle],nor[or[apply(size-gt,x.o),size2],and[triangle,circle]]]]), and[yellow,triangle]), size1), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:size1;4:implies[%s,%s];4:implies[%s,%s];4:rectangle;4:circle;4:nor[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:size2;4:and[%s,%s];4:triangle;4:circle;4:and[%s,%s];4:yellow;4:triangle;4:size1;4:size2
'λx.apply(implies[size2,circle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size2;4:circle;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(filter(filter(x.s, nand[not[size1],and[size1,and[apply(same_size,iota(filter(x.s, size1))),circle]]]), green), apply(size-leq,iota(x.s))), or[green,blue])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:not[%s];4:size1;4:and[%s,%s];4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle;4:green;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:green;4:blue
'λx.empty(filter(filter(filter(x.s, yellow), apply(same_shape,x.o)), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2
'λx.apply(or[implies[rectangle,size1],size2],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:or[%s,%s];4:implies[%s,%s];4:rectangle;4:size1;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(implies[or[and[and[size2,and[size2,triangle]],or[nor[and[and[not[triangle],size1],rectangle],nor[size2,rectangle]],blue]],size1],green],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:size2;4:triangle;4:or[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:triangle;4:size1;4:rectangle;4:nor[%s,%s];4:size2;4:rectangle;4:blue;4:size1;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(x.s, size3)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.empty(filter(filter(x.s, yellow), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle
'λx.apply(circle,iota(filter(filter(filter(x.s, rectangle), circle), green)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle;4:green
'λx.apply(and[and[green,yellow],apply(same_shape,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:green;4:yellow;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.forall(yellow,filter(filter(filter(x.s, circle), and[rectangle,blue]), apply(same_shape,x.o)))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:rectangle;4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(filter(x.s, blue), rectangle), or[or[and[apply(same_shape,x.o),size2],size2],size3])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2;4:size2;4:size3
'λx.apply(apply(same_color,iota(filter(x.s, not[circle]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;1:%s.o;2:x
'λx.forall(rectangle,filter(filter(filter(x.s, rectangle), size2), blue))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2;4:blue
'λx.apply(or[and[nor[triangle,size3],and[size2,yellow]],triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:triangle;4:size3;4:and[%s,%s];4:size2;4:yellow;4:triangle;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, rectangle), green)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green
'λx.apply(and[and[implies[yellow,and[apply(same_shape,x.o),or[or[apply(same_shape,x.o),size3],green]]],size3],rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:yellow;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3;4:green;4:size3;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.exists(not[and[size2,size2]], filter(x.s, and[size1,size2]))'	0:exists(%s, %s);4:not[%s];4:and[%s,%s];4:size2;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size2
'λx.apply(or[size3,rectangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[nand[size3,yellow],blue],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:nand[%s,%s];4:size3;4:yellow;4:blue;1:%s.o;2:x
'λx.apply(or[or[circle,circle],size3],iota(filter(filter(filter(x.s, size2), or[triangle,blue]), not[or[apply(same_color,iota(filter(x.s, or[size2,or[size1,nor[or[or[green,circle],circle],triangle]]]))),rectangle]])))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:circle;4:circle;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:triangle;4:blue;4:not[%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:or[%s,%s];4:size1;4:nor[%s,%s];4:or[%s,%s];4:or[%s,%s];4:green;4:circle;4:circle;4:triangle;4:rectangle
'λx.forall(and[apply(same_shape,iota(filter(filter(filter(filter(x.s, not[size3]), rectangle), rectangle), circle))),apply(same_size,x.o)],filter(filter(filter(x.s, rectangle), blue), and[or[green,and[size2,apply(same_color,iota(filter(x.s, blue)))]],and[triangle,yellow]]))'	0:forall(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;4:rectangle;4:rectangle;4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue;4:and[%s,%s];4:or[%s,%s];4:green;4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:triangle;4:yellow
'λx.exists(apply(same_shape,iota(x.s)), filter(filter(x.s, rectangle), circle))'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle
'λx.apply(green,iota(filter(filter(x.s, green), circle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:circle
'λx.apply(triangle,iota(filter(filter(filter(filter(x.s, apply(size-geq,iota(x.s))), not[implies[triangle,nand[rectangle,apply(same_shape,iota(x.s))]]]), or[blue,and[yellow,blue]]), circle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:not[%s];4:implies[%s,%s];4:triangle;4:nand[%s,%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:and[%s,%s];4:yellow;4:blue;4:circle
'λx.apply(or[not[and[and[green,circle],triangle]],triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:green;4:circle;4:triangle;4:triangle;1:%s.o;2:x
'λx.apply(implies[size1,or[apply(same_size,iota(filter(x.s, circle))),blue]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:size1;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(x.s, size1), circle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle
'λx.apply(triangle,iota(filter(x.s, and[apply(same_shape,x.o),size3])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3
'λx.contains(x.o, filter(filter(filter(filter(x.s, size2), blue), size2), nand[rectangle,not[not[blue]]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue;4:size2;4:nand[%s,%s];4:rectangle;4:not[%s];4:not[%s];4:blue
'λx.apply(and[circle,nand[nor[rectangle,size2],iff[apply(size-gt,iota(filter(filter(filter(x.s, green), triangle), green))),size2]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:nand[%s,%s];4:nor[%s,%s];4:rectangle;4:size2;4:iff[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:triangle;4:green;4:size2;1:%s.o;2:x
'λx.apply(or[size1,size1],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(nor[nor[size1,and[apply(same_shape,x.o),and[or[circle,not[size2]],size2]]],size2],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:nor[%s,%s];4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:or[%s,%s];4:circle;4:not[%s];4:size2;4:size2;4:size2;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, size1), blue))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue
'λx.apply(blue,iota(filter(x.s, and[green,or[size3,size2]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:or[%s,%s];4:size3;4:size2
'λx.apply(implies[triangle,size2],iota(filter(filter(filter(filter(filter(filter(x.s, yellow), and[or[iff[circle,not[circle]],and[triangle,size1]],triangle]), or[size1,size2]), green), triangle), and[triangle,rectangle])))'	0:apply(%s,%s);4:implies[%s,%s];4:triangle;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:or[%s,%s];4:iff[%s,%s];4:circle;4:not[%s];4:circle;4:and[%s,%s];4:triangle;4:size1;4:triangle;4:or[%s,%s];4:size1;4:size2;4:green;4:triangle;4:and[%s,%s];4:triangle;4:rectangle
'λx.apply(rectangle,iota(filter(filter(x.s, circle), triangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle
'λx.apply(and[not[size3],and[blue,green]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size3;4:and[%s,%s];4:blue;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[yellow,rectangle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:yellow;4:rectangle;1:%s.o;2:x
'λx.exists(or[size2,circle], filter(x.s, size2))'	0:exists(%s, %s);4:or[%s,%s];4:size2;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(implies[or[blue,yellow],size2],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:or[%s,%s];4:blue;4:yellow;4:size2;1:%s.o;2:x
'λx.apply(and[nor[rectangle,size2],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:rectangle;4:size2;4:blue;1:%s.o;2:x
'λx.apply(and[not[apply(same_shape,iota(filter(x.s, not[circle])))],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:size2;1:%s.o;2:x
'λx.apply(and[implies[apply(size-gt,iota(filter(filter(x.s, size3), rectangle))),green],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle;4:green;4:circle;1:%s.o;2:x
'λx.apply(apply(same_color,iota(filter(x.s, apply(same_size,x.o)))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[blue,size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(x.s))'	0:apply(%s,%s);4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, rectangle), circle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle
'λx.apply(size1,iota(filter(x.s, and[circle,triangle])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:triangle
'λx.apply(nor[circle,size2],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:nor[%s,%s];4:circle;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(not[yellow],iota(filter(x.s, apply(same_shape,x.o))))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.exists(yellow, filter(x.s, yellow))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(and[not[triangle],size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:triangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(filter(filter(x.s, circle), apply(same_color,iota(x.s))), and[size3,apply(size-geq,iota(x.s))]), size1)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:size1
'λx.apply(not[implies[green,or[implies[not[and[green,circle]],apply(same_color,iota(x.s))],triangle]]],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:not[%s];4:implies[%s,%s];4:green;4:or[%s,%s];4:implies[%s,%s];4:not[%s];4:and[%s,%s];4:green;4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(size2,iota(filter(filter(filter(filter(filter(x.s, or[size3,or[yellow,blue]]), and[iff[or[apply(same_shape,x.o),or[and[triangle,yellow],and[not[size1],and[apply(same_shape,iota(x.s)),circle]]]],triangle],apply(same_shape,x.o)]), and[size1,circle]), apply(size-geq,iota(filter(x.s, circle)))), implies[blue,rectangle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:or[%s,%s];4:yellow;4:blue;4:and[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:and[%s,%s];4:triangle;4:yellow;4:and[%s,%s];4:not[%s];4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle;4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:size1;4:circle;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:implies[%s,%s];4:blue;4:rectangle
'λx.exists(apply(same_size,iota(filter(x.s, and[and[rectangle,apply(same_size,iota(filter(filter(filter(filter(x.s, blue), apply(size-gt,x.o)), size1), blue)))],and[or[and[size3,not[green]],and[size3,yellow]],triangle]]))), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:size1;4:blue;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size3;4:not[%s];4:green;4:and[%s,%s];4:size3;4:yellow;4:triangle;3:%s.s;2:x
'λx.apply(not[and[circle,apply(same_size,x.o)]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[not[size2],circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size2;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_size,x.o),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(nor[apply(same_color,x.o),yellow],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(x.s, triangle))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.forall(implies[size2,circle],filter(filter(filter(x.s, green), and[size3,yellow]), triangle))'	0:forall(%s,%s);4:implies[%s,%s];4:size2;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:size3;4:yellow;4:triangle
'λx.contains(iota(filter(filter(filter(filter(filter(x.s, rectangle), size3), size1), triangle), size3)), filter(x.s, apply(size-geq,x.o)))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3;4:size1;4:triangle;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.apply(not[and[triangle,blue]],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:triangle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.contains(iota(x.s), filter(filter(filter(x.s, blue), not[circle]), green))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:circle;4:green
'λx.contains(x.o, filter(filter(x.s, circle), rectangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle
'λx.apply(size3,iota(filter(filter(x.s, and[size3,not[size2]]), apply(size-geq,x.o))))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:not[%s];4:size2;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.apply(iff[rectangle,yellow],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:rectangle;4:yellow;1:%s.o;2:x
'λx.apply(and[apply(same_size,iota(x.s)),and[triangle,nand[triangle,size1]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:nand[%s,%s];4:triangle;4:size1;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, rectangle), green)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green
'λx.exists(green, filter(x.s, yellow))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(implies[triangle,or[and[triangle,rectangle],and[and[and[size3,or[and[rectangle,or[or[blue,circle],or[rectangle,size1]]],and[not[apply(same_shape,x.o)],apply(same_color,iota(filter(filter(x.s, yellow), and[yellow,green])))]]],nor[size3,yellow]],size3]]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:triangle;4:or[%s,%s];4:and[%s,%s];4:triangle;4:rectangle;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:or[%s,%s];4:or[%s,%s];4:blue;4:circle;4:or[%s,%s];4:rectangle;4:size1;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:yellow;4:green;4:nor[%s,%s];4:size3;4:yellow;4:size3;1:%s.o;2:x
'λx.forall(triangle,filter(x.s, green))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.contains(iota(filter(x.s, blue)), filter(x.s, triangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(or[triangle,apply(same_color,x.o)],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, blue), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green
'λx.apply(or[and[size3,size3],size3],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size3;4:size3;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(x.s, and[size2,implies[circle,not[not[size3]]]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:implies[%s,%s];4:circle;4:not[%s];4:not[%s];4:size3
'λx.forall(triangle,filter(filter(filter(x.s, size2), rectangle), implies[rectangle,triangle]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle;4:implies[%s,%s];4:rectangle;4:triangle
'λx.contains(iota(filter(filter(filter(x.s, triangle), green), and[blue,blue])), filter(x.s, and[size3,not[yellow]]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green;4:and[%s,%s];4:blue;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:not[%s];4:yellow
'λx.apply(or[rectangle,size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:size3;1:%s.o;2:x
'λx.apply(nand[apply(same_size,iota(x.s)),triangle],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.exists(and[size3,green], filter(filter(filter(filter(x.s, rectangle), yellow), size2), apply(same_size,x.o)))'	0:exists(%s, %s);4:and[%s,%s];4:size3;4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:yellow;4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.forall(size2,filter(x.s, apply(same_color,iota(filter(filter(x.s, blue), apply(same_size,x.o))))))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, size3), apply(same_shape,iota(filter(x.s, or[size1,size1]))))))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:size1
'λx.apply(iff[triangle,not[yellow]],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:triangle;4:not[%s];4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[size2,triangle],iota(filter(filter(x.s, blue), green)))'	0:apply(%s,%s);4:iff[%s,%s];4:size2;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green
'λx.apply(apply(same_color,iota(filter(x.s, circle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;1:%s.o;2:x
'λx.apply(or[apply(same_shape,x.o),apply(size-geq,iota(filter(x.s, and[apply(same_size,x.o),iff[not[blue],and[and[size3,size1],blue]]])))],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:iff[%s,%s];4:not[%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:size3;4:size1;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(and[and[size1,size3],size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:size3;4:size1;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(x.s), filter(x.s, not[nand[and[size3,rectangle],iff[apply(same_shape,iota(x.s)),and[size3,apply(same_size,iota(filter(x.s, circle)))]]]]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:nand[%s,%s];4:and[%s,%s];4:size3;4:rectangle;4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[nand[and[blue,and[nor[and[and[size1,apply(same_color,iota(x.s))],iff[size1,blue]],circle],blue]],green],nand[and[blue,green],and[blue,blue]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:iff[%s,%s];4:size1;4:blue;4:circle;4:blue;4:green;4:nand[%s,%s];4:and[%s,%s];4:blue;4:green;4:and[%s,%s];4:blue;4:blue;1:%s.o;2:x
'λx.apply(apply(same_color,iota(x.s)),iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(and[green,circle],iota(filter(filter(filter(filter(x.s, triangle), triangle), or[triangle,size2]), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:triangle;4:or[%s,%s];4:triangle;4:size2;4:blue
'λx.apply(not[and[or[not[green],and[size1,size2]],green]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:or[%s,%s];4:not[%s];4:green;4:and[%s,%s];4:size1;4:size2;4:green;1:%s.o;2:x
'λx.exists(circle, filter(x.s, green))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[yellow,apply(size-gt,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(and[implies[or[size3,circle],rectangle],rectangle],iota(filter(filter(filter(x.s, rectangle), and[size3,rectangle]), green)))'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:size3;4:circle;4:rectangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:size3;4:rectangle;4:green
'λx.apply(not[and[circle,blue]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:circle;4:blue;1:%s.o;2:x
'λx.apply(and[or[triangle,green],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:triangle;4:green;4:size2;1:%s.o;2:x
'λx.forall(size2,filter(filter(x.s, yellow), not[blue]))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:blue
'λx.exists(apply(same_size,x.o), filter(filter(filter(filter(filter(filter(x.s, or[and[blue,blue],size2]), size2), size2), size2), iff[yellow,apply(same_color,iota(filter(x.s, green)))]), rectangle))'	0:exists(%s, %s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:blue;4:blue;4:size2;4:size2;4:size2;4:size2;4:iff[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle
'λx.apply(iff[size1,implies[apply(size-leq,x.o),not[circle]]],iota(filter(filter(filter(x.s, or[and[size3,size3],and[not[not[triangle]],rectangle]]), nand[triangle,green]), nor[blue,not[triangle]])))'	0:apply(%s,%s);4:iff[%s,%s];4:size1;4:implies[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size3;4:size3;4:and[%s,%s];4:not[%s];4:not[%s];4:triangle;4:rectangle;4:nand[%s,%s];4:triangle;4:green;4:nor[%s,%s];4:blue;4:not[%s];4:triangle
'λx.apply(or[blue,size2],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(x.s, yellow), or[size2,and[size2,triangle]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:size2;4:and[%s,%s];4:size2;4:triangle
'λx.contains(x.o, filter(filter(x.s, blue), and[triangle,size2]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:triangle;4:size2
'λx.apply(triangle,iota(filter(filter(filter(x.s, size2), rectangle), rectangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle;4:rectangle
'λx.exists(size1, filter(filter(x.s, size3), and[blue,not[nand[blue,or[rectangle,not[or[rectangle,not[size2]]]]]]]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:blue;4:not[%s];4:nand[%s,%s];4:blue;4:or[%s,%s];4:rectangle;4:not[%s];4:or[%s,%s];4:rectangle;4:not[%s];4:size2
'λx.apply(rectangle,iota(filter(filter(filter(filter(x.s, and[triangle,green]), not[triangle]), blue), green)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:green;4:not[%s];4:triangle;4:blue;4:green
'λx.apply(and[not[triangle],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:triangle;4:size2;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, not[and[not[iff[size2,blue]],or[size2,and[yellow,blue]]]]), yellow)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:not[%s];4:iff[%s,%s];4:size2;4:blue;4:or[%s,%s];4:size2;4:and[%s,%s];4:yellow;4:blue;4:yellow
'λx.apply(apply(size-lt,x.o),iota(filter(filter(filter(x.s, size2), blue), size3)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue;4:size3
'λx.apply(apply(size-lt,iota(filter(filter(filter(filter(filter(filter(x.s, implies[size1,size2]), implies[not[rectangle],circle]), size2), iff[not[and[rectangle,not[size1]]],size2]), or[green,rectangle]), circle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size1;4:size2;4:implies[%s,%s];4:not[%s];4:rectangle;4:circle;4:size2;4:iff[%s,%s];4:not[%s];4:and[%s,%s];4:rectangle;4:not[%s];4:size1;4:size2;4:or[%s,%s];4:green;4:rectangle;4:circle;1:%s.o;2:x
'λx.empty(filter(x.s, and[blue,and[size1,and[yellow,apply(same_size,iota(filter(filter(filter(filter(x.s, implies[not[size1],size3]), size3), or[apply(same_shape,iota(x.s)),not[or[triangle,size3]]]), not[triangle])))]]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:and[%s,%s];4:size1;4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:not[%s];4:size1;4:size3;4:size3;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:triangle;4:size3;4:not[%s];4:triangle
'λx.apply(or[size3,not[circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:not[%s];4:circle;1:%s.o;2:x
'λx.apply(and[nor[apply(same_color,iota(filter(filter(filter(x.s, blue), rectangle), apply(same_color,x.o)))),and[size1,yellow]],size2],iota(filter(filter(filter(filter(filter(x.s, size3), blue), blue), and[rectangle,yellow]), triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:size1;4:yellow;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue;4:blue;4:and[%s,%s];4:rectangle;4:yellow;4:triangle
'λx.apply(and[nand[or[or[rectangle,triangle],or[triangle,circle]],and[or[size1,rectangle],not[and[green,size2]]]],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:or[%s,%s];4:rectangle;4:triangle;4:or[%s,%s];4:triangle;4:circle;4:and[%s,%s];4:or[%s,%s];4:size1;4:rectangle;4:not[%s];4:and[%s,%s];4:green;4:size2;4:size1;1:%s.o;2:x
'λx.apply(and[size3,or[triangle,or[iff[green,circle],not[size1]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:or[%s,%s];4:triangle;4:or[%s,%s];4:iff[%s,%s];4:green;4:circle;4:not[%s];4:size1;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(filter(x.s, and[yellow,implies[size1,size1]]), size1), size1)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:implies[%s,%s];4:size1;4:size1;4:size1;4:size1
'λx.apply(or[green,apply(same_size,x.o)],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(filter(filter(x.s, yellow), and[nor[apply(size-geq,x.o),or[apply(size-lt,iota(filter(filter(x.s, triangle), or[circle,blue]))),size1]],implies[nor[and[and[iff[or[size2,circle],triangle],triangle],yellow],circle],circle]]), rectangle), apply(same_color,x.o))))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:or[%s,%s];4:circle;4:blue;4:size1;4:implies[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:size2;4:circle;4:triangle;4:triangle;4:yellow;4:circle;4:circle;4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(and[apply(same_size,x.o),size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1;1:%s.o;2:x
'λx.empty(filter(x.s, and[circle,nand[size3,or[blue,size1]]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:nand[%s,%s];4:size3;4:or[%s,%s];4:blue;4:size1
'λx.contains(x.o, filter(filter(filter(filter(x.s, size1), and[green,size1]), triangle), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:green;4:size1;4:triangle;4:green
'λx.forall(triangle,filter(filter(filter(x.s, circle), yellow), rectangle))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow;4:rectangle
'λx.contains(iota(filter(filter(filter(x.s, not[size2]), and[blue,green]), and[size3,size2])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:and[%s,%s];4:blue;4:green;4:and[%s,%s];4:size3;4:size2;3:%s.s;2:x
'λx.exists(circle, x.s)'	0:exists(%s, %s);4:circle;3:%s.s;2:x
'λx.contains(iota(filter(x.s, green)), filter(x.s, size3))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(and[green,and[green,circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:green;4:circle;1:%s.o;2:x
'λx.contains(x.o, filter(filter(filter(x.s, size2), yellow), size1))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:yellow;4:size1
'λx.apply(and[implies[or[green,rectangle],triangle],size3],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:green;4:rectangle;4:triangle;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.empty(filter(x.s, not[blue]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.contains(x.o, filter(filter(filter(x.s, or[or[yellow,apply(same_shape,iota(x.s))],apply(size-lt,x.o)]), triangle), rectangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:triangle;4:rectangle
'λx.forall(size2,filter(x.s, yellow))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(and[rectangle,and[circle,or[rectangle,rectangle]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:circle;4:or[%s,%s];4:rectangle;4:rectangle;1:%s.o;2:x
'λx.apply(not[and[size2,size1]],iota(filter(filter(x.s, triangle), and[or[rectangle,and[and[size2,and[green,green]],size1]],not[rectangle]])))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size2;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:green;4:green;4:size1;4:not[%s];4:rectangle
'λx.apply(or[blue,triangle],iota(filter(filter(filter(x.s, and[size1,or[and[not[green],circle],triangle]]), and[triangle,size2]), not[or[size1,apply(same_shape,x.o)]])))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:green;4:circle;4:triangle;4:and[%s,%s];4:triangle;4:size2;4:not[%s];4:or[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(x.s, rectangle), size3)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3
'λx.apply(and[apply(same_color,iota(filter(x.s, size2))),nor[triangle,rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:nor[%s,%s];4:triangle;4:rectangle;1:%s.o;2:x
'λx.apply(and[green,and[apply(size-geq,iota(filter(x.s, blue))),size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1;1:%s.o;2:x
'λx.apply(iff[triangle,triangle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:triangle;4:triangle;1:%s.o;2:x
'λx.apply(not[triangle],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(and[circle,green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:green;1:%s.o;2:x
'λx.exists(not[iff[size2,and[and[size1,size1],and[circle,or[rectangle,blue]]]]], x.s)'	0:exists(%s, %s);4:not[%s];4:iff[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:size1;4:size1;4:and[%s,%s];4:circle;4:or[%s,%s];4:rectangle;4:blue;3:%s.s;2:x
'λx.apply(apply(same_shape,iota(filter(x.s, and[triangle,yellow]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:yellow;1:%s.o;2:x
'λx.exists(yellow, filter(x.s, and[size3,and[and[yellow,nor[blue,nand[size2,size1]]],apply(same_shape,x.o)]]))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:yellow;4:nor[%s,%s];4:blue;4:nand[%s,%s];4:size2;4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(nor[circle,yellow],iota(filter(x.s, or[size3,size2])))'	0:apply(%s,%s);4:nor[%s,%s];4:circle;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:size2
'λx.forall(nor[size2,size2],x.s)'	0:forall(%s,%s);4:nor[%s,%s];4:size2;4:size2;3:%s.s;2:x
'λx.exists(or[or[green,size1],and[yellow,triangle]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:or[%s,%s];4:green;4:size1;4:and[%s,%s];4:yellow;4:triangle;3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(filter(filter(x.s, not[not[not[size3]]]), nand[green,iff[size2,blue]]), blue), and[rectangle,blue])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:not[%s];4:size3;4:nand[%s,%s];4:green;4:iff[%s,%s];4:size2;4:blue;4:blue;4:and[%s,%s];4:rectangle;4:blue
'λx.apply(and[and[yellow,green],size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:green;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(x.s, nand[nand[green,blue],apply(same_size,iota(filter(x.s, size3)))])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:nand[%s,%s];4:green;4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(blue,iota(filter(filter(x.s, green), not[green])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:green
'λx.apply(nand[or[blue,nor[and[not[and[circle,triangle]],green],rectangle]],rectangle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:or[%s,%s];4:blue;4:nor[%s,%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:circle;4:triangle;4:green;4:rectangle;4:rectangle;1:%s.o;2:x
'λx.apply(or[triangle,and[size1,size2]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:and[%s,%s];4:size1;4:size2;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, or[circle,circle])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:circle
'λx.apply(size3,iota(filter(x.s, size3)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.contains(x.o, filter(x.s, and[and[circle,blue],size3]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:circle;4:blue;4:size3
'λx.exists(yellow, filter(filter(filter(filter(x.s, green), triangle), apply(size-gt,x.o)), green))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:triangle;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:green
'λx.apply(circle,iota(filter(filter(filter(filter(x.s, apply(size-geq,x.o)), green), and[blue,green]), blue)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:green;4:and[%s,%s];4:blue;4:green;4:blue
'λx.apply(or[size2,yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:yellow;1:%s.o;2:x
'λx.exists(nand[circle,size3], filter(filter(filter(x.s, blue), or[blue,rectangle]), size3))'	0:exists(%s, %s);4:nand[%s,%s];4:circle;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:blue;4:rectangle;4:size3
'λx.apply(implies[green,green],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:green;4:green;1:%s.o;2:x
'λx.forall(implies[size2,not[apply(size-lt,iota(filter(x.s, or[size1,yellow])))]],filter(x.s, rectangle))'	0:forall(%s,%s);4:implies[%s,%s];4:size2;4:not[%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.empty(filter(filter(filter(filter(filter(x.s, yellow), or[size3,circle]), triangle), or[size3,size1]), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:size3;4:circle;4:triangle;4:or[%s,%s];4:size3;4:size1;4:size3
'λx.apply(blue,iota(filter(filter(filter(filter(filter(filter(filter(x.s, not[size2]), apply(same_color,x.o)), green), rectangle), size3), rectangle), blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green;4:rectangle;4:size3;4:rectangle;4:blue
'λx.apply(or[circle,and[size1,rectangle]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:and[%s,%s];4:size1;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[yellow,blue],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:yellow;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[and[and[rectangle,and[yellow,yellow]],yellow],size1],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:yellow;4:yellow;4:yellow;4:size1;1:%s.o;2:x
'λx.apply(or[not[triangle],or[apply(same_size,iota(x.s)),size1]],iota(filter(filter(filter(filter(filter(x.s, triangle), and[not[yellow],and[triangle,triangle]]), not[size1]), size1), and[triangle,triangle])))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:triangle;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:not[%s];4:yellow;4:and[%s,%s];4:triangle;4:triangle;4:not[%s];4:size1;4:size1;4:and[%s,%s];4:triangle;4:triangle
'λx.apply(nand[circle,size2],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:circle;4:size2;1:%s.o;2:x
'λx.apply(and[not[circle],and[or[circle,yellow],implies[and[and[and[rectangle,or[size3,rectangle]],size3],apply(size-lt,iota(x.s))],size2]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:circle;4:and[%s,%s];4:or[%s,%s];4:circle;4:yellow;4:implies[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:or[%s,%s];4:size3;4:rectangle;4:size3;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:size2;1:%s.o;2:x
'λx.apply(nand[triangle,apply(same_shape,iota(filter(filter(filter(filter(x.s, size3), yellow), yellow), yellow)))],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow;4:yellow;4:yellow;1:%s.o;2:x
'λx.apply(nand[green,size3],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:green;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size3,and[size3,size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:size3;4:size2;1:%s.o;2:x
'λx.forall(and[apply(same_size,x.o),and[size2,size1]],filter(x.s, size3))'	0:forall(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:size2;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(or[implies[not[blue],triangle],and[size2,and[size1,yellow]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:implies[%s,%s];4:not[%s];4:blue;4:triangle;4:and[%s,%s];4:size2;4:and[%s,%s];4:size1;4:yellow;1:%s.o;2:x
'λx.apply(and[or[yellow,size1],rectangle],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:yellow;4:size1;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(iff[size1,apply(same_color,iota(x.s))],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(x.s, and[apply(same_color,iota(x.s)),triangle]), size3)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:triangle;4:size3
'λx.apply(nor[apply(same_size,iota(filter(x.s, yellow))),circle],iota(filter(filter(x.s, and[green,and[size3,size3]]), blue)))'	0:apply(%s,%s);4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:and[%s,%s];4:size3;4:size3;4:blue
'λx.apply(not[implies[or[size2,size3],not[yellow]]],x.o)'	0:apply(%s,%s);4:not[%s];4:implies[%s,%s];4:or[%s,%s];4:size2;4:size3;4:not[%s];4:yellow;1:%s.o;2:x
'λx.exists(triangle, filter(filter(x.s, and[size1,size3]), not[and[size3,green]]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size3;4:not[%s];4:and[%s,%s];4:size3;4:green
'λx.apply(blue,iota(filter(filter(x.s, size1), and[size2,size2])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:size2;4:size2
'λx.contains(x.o, filter(filter(filter(x.s, iff[triangle,size1]), rectangle), size3))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:triangle;4:size1;4:rectangle;4:size3
'λx.exists(and[green,rectangle], filter(filter(x.s, rectangle), circle))'	0:exists(%s, %s);4:and[%s,%s];4:green;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle
'λx.apply(green,iota(filter(filter(x.s, circle), and[yellow,rectangle])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:yellow;4:rectangle
'λx.apply(and[and[size1,or[green,size2]],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:green;4:size2;4:size3;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(filter(x.s, and[and[and[green,green],apply(same_size,x.o)],rectangle]), iff[or[size1,or[size2,size1]],circle]), not[rectangle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:rectangle;4:iff[%s,%s];4:or[%s,%s];4:size1;4:or[%s,%s];4:size2;4:size1;4:circle;4:not[%s];4:rectangle
'λx.exists(and[triangle,circle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:triangle;4:circle;3:%s.s;2:x
'λx.apply(green,iota(filter(x.s, iff[nor[rectangle,not[green]],or[apply(size-leq,iota(filter(x.s, yellow))),circle]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:nor[%s,%s];4:rectangle;4:not[%s];4:green;4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle
'λx.exists(not[and[size2,triangle]], x.s)'	0:exists(%s, %s);4:not[%s];4:and[%s,%s];4:size2;4:triangle;3:%s.s;2:x
'λx.contains(iota(filter(x.s, green)), filter(x.s, nand[size3,circle]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size3;4:circle
'λx.apply(and[green,rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:rectangle;1:%s.o;2:x
'λx.empty(filter(x.s, and[circle,yellow]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:yellow
'λx.apply(and[or[size1,blue],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size1;4:blue;4:circle;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(x.s, size1), circle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle
'λx.apply(size1,iota(filter(x.s, or[apply(same_shape,x.o),green])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green
'λx.apply(and[triangle,rectangle],iota(filter(filter(filter(filter(filter(filter(x.s, rectangle), or[yellow,size1]), size2), apply(same_shape,iota(x.s))), not[green]), size2)))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:or[%s,%s];4:yellow;4:size1;4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:not[%s];4:green;4:size2
'λx.apply(not[and[size2,rectangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size2;4:rectangle;1:%s.o;2:x
'λx.apply(or[nor[triangle,circle],size1],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:nor[%s,%s];4:triangle;4:circle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(and[not[apply(same_shape,x.o)],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle;1:%s.o;2:x
'λx.forall(triangle,filter(filter(x.s, and[and[implies[apply(same_color,iota(filter(filter(filter(x.s, size3), rectangle), circle))),green],and[rectangle,size2]],rectangle]), or[not[blue],size1]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle;4:circle;4:green;4:and[%s,%s];4:rectangle;4:size2;4:rectangle;4:or[%s,%s];4:not[%s];4:blue;4:size1
'λx.apply(and[not[or[implies[and[yellow,size3],size1],green]],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:or[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:yellow;4:size3;4:size1;4:green;4:blue;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(filter(x.s, size3), yellow), and[circle,and[rectangle,blue]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow;4:and[%s,%s];4:circle;4:and[%s,%s];4:rectangle;4:blue
'λx.exists(or[size1,size2], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:size1;4:size2;3:%s.s;2:x
'λx.apply(size1,iota(filter(x.s, nor[and[triangle,and[yellow,size3]],yellow])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:yellow;4:size3;4:yellow
'λx.apply(or[or[size2,size3],yellow],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:size2;4:size3;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_color,iota(x.s)),iota(filter(x.s, size3)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.forall(not[and[size2,size3]],x.s)'	0:forall(%s,%s);4:not[%s];4:and[%s,%s];4:size2;4:size3;3:%s.s;2:x
'λx.contains(iota(filter(filter(x.s, blue), and[rectangle,triangle])), filter(x.s, circle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:rectangle;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.exists(nor[yellow,rectangle], x.s)'	0:exists(%s, %s);4:nor[%s,%s];4:yellow;4:rectangle;3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(x.s, circle), green)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green
'λx.apply(not[yellow],iota(filter(x.s, and[blue,or[and[size3,green],apply(same_color,x.o)]])))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:or[%s,%s];4:and[%s,%s];4:size3;4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(not[size2],iota(filter(filter(filter(filter(filter(x.s, size2), blue), triangle), size1), apply(size-gt,iota(filter(x.s, apply(same_color,x.o)))))))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue;4:triangle;4:size1;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, apply(same_size,iota(filter(filter(filter(x.s, size3), apply(same_size,iota(x.s))), green)))), iff[and[green,size3],nand[green,blue]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:green;4:iff[%s,%s];4:and[%s,%s];4:green;4:size3;4:nand[%s,%s];4:green;4:blue
'λx.apply(iff[and[size1,blue],triangle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:size1;4:blue;4:triangle;1:%s.o;2:x
'λx.forall(blue,filter(filter(x.s, implies[size3,green]), or[and[triangle,implies[size1,or[size3,apply(same_shape,iota(x.s))]]],size3]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size3;4:green;4:or[%s,%s];4:and[%s,%s];4:triangle;4:implies[%s,%s];4:size1;4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size3
'λx.apply(not[and[and[size2,triangle],size3]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:triangle;4:size3;1:%s.o;2:x
'λx.forall(rectangle,filter(x.s, and[or[size3,rectangle],yellow]))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:size3;4:rectangle;4:yellow
'λx.apply(and[and[blue,or[triangle,rectangle]],and[nand[and[circle,blue],not[triangle]],apply(same_color,iota(filter(x.s, iff[size2,implies[green,green]])))]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:or[%s,%s];4:triangle;4:rectangle;4:and[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:circle;4:blue;4:not[%s];4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size2;4:implies[%s,%s];4:green;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(or[triangle,size3],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(x.s, blue)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(size3,iota(filter(filter(x.s, not[or[rectangle,green]]), size3)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:rectangle;4:green;4:size3
'λx.forall(or[apply(same_size,x.o),not[size2]],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:not[%s];4:size2;3:%s.s;2:x
'λx.contains(iota(filter(x.s, and[or[not[size1],not[not[yellow]]],yellow])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:size1;4:not[%s];4:not[%s];4:yellow;4:yellow;3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(x.s, size1), blue)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue
'λx.apply(apply(same_color,x.o),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.exists(rectangle, filter(x.s, not[size3]))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3
'λx.apply(and[and[blue,green],rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:green;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[rectangle,size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:size3;1:%s.o;2:x
'λx.apply(triangle,iota(filter(x.s, not[and[iff[green,blue],and[and[triangle,circle],iff[size2,size2]]]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:iff[%s,%s];4:green;4:blue;4:and[%s,%s];4:and[%s,%s];4:triangle;4:circle;4:iff[%s,%s];4:size2;4:size2
'λx.apply(or[triangle,or[blue,blue]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:or[%s,%s];4:blue;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(x.s, and[size2,and[size1,or[size1,or[blue,blue]]]]), rectangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:and[%s,%s];4:size1;4:or[%s,%s];4:size1;4:or[%s,%s];4:blue;4:blue;4:rectangle
'λx.contains(iota(x.s), filter(x.s, apply(same_color,x.o)))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(and[apply(same_color,iota(filter(x.s, triangle))),circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(x.s, not[size1])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1
'λx.exists(apply(same_size,iota(filter(filter(filter(filter(filter(x.s, blue), blue), triangle), and[size1,nand[or[size3,size1],size3]]), not[or[size2,rectangle]]))), filter(filter(x.s, triangle), size2))'	0:exists(%s, %s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue;4:triangle;4:and[%s,%s];4:size1;4:nand[%s,%s];4:or[%s,%s];4:size3;4:size1;4:size3;4:not[%s];4:or[%s,%s];4:size2;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2
'λx.apply(or[or[nand[size2,green],rectangle],green],iota(filter(x.s, and[not[circle],blue])))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:nand[%s,%s];4:size2;4:green;4:rectangle;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:circle;4:blue
'λx.apply(size1,iota(filter(filter(filter(x.s, green), and[not[and[and[and[triangle,yellow],rectangle],size1]],triangle]), circle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:yellow;4:rectangle;4:size1;4:triangle;4:circle
'λx.apply(and[and[green,yellow],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:green;4:yellow;4:size2;1:%s.o;2:x
'λx.forall(apply(same_size,iota(filter(x.s, nor[green,size3]))),filter(x.s, rectangle))'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:green;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.forall(apply(size-lt,iota(x.s)),filter(x.s, nor[size2,implies[or[yellow,green],not[circle]]]))'	0:forall(%s,%s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size2;4:implies[%s,%s];4:or[%s,%s];4:yellow;4:green;4:not[%s];4:circle
'λx.exists(and[and[apply(size-gt,x.o),apply(size-leq,iota(x.s))],size2], filter(filter(x.s, not[or[yellow,not[size2]]]), and[yellow,green]))'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:yellow;4:not[%s];4:size2;4:and[%s,%s];4:yellow;4:green
'λx.apply(and[triangle,rectangle],iota(filter(filter(filter(filter(filter(filter(filter(filter(filter(filter(x.s, apply(same_size,x.o)), green), blue), and[rectangle,green]), and[apply(same_size,iota(x.s)),not[green]]), size3), size1), yellow), implies[size1,and[and[or[green,size1],and[size1,size2]],or[nor[and[size3,blue],rectangle],green]]]), and[green,or[rectangle,circle]])))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;4:blue;4:and[%s,%s];4:rectangle;4:green;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:not[%s];4:green;4:size3;4:size1;4:yellow;4:implies[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:green;4:size1;4:and[%s,%s];4:size1;4:size2;4:or[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:size3;4:blue;4:rectangle;4:green;4:and[%s,%s];4:green;4:or[%s,%s];4:rectangle;4:circle
'λx.apply(or[rectangle,nand[or[size1,or[triangle,apply(size-leq,iota(filter(x.s, rectangle)))]],not[rectangle]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:nand[%s,%s];4:or[%s,%s];4:size1;4:or[%s,%s];4:triangle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.apply(iff[size1,green],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:size1;4:green;1:%s.o;2:x
'λx.apply(or[and[not[iff[or[circle,green],or[yellow,and[and[rectangle,rectangle],or[or[not[not[not[circle]]],and[rectangle,blue]],yellow]]]]],circle],size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:not[%s];4:iff[%s,%s];4:or[%s,%s];4:circle;4:green;4:or[%s,%s];4:yellow;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:rectangle;4:or[%s,%s];4:or[%s,%s];4:not[%s];4:not[%s];4:not[%s];4:circle;4:and[%s,%s];4:rectangle;4:blue;4:yellow;4:circle;4:size3;1:%s.o;2:x
'λx.exists(circle, filter(filter(filter(x.s, rectangle), blue), size2))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue;4:size2
'λx.apply(circle,iota(filter(filter(x.s, and[size1,apply(same_size,x.o)]), size2)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2
'λx.apply(implies[size3,apply(size-leq,iota(filter(x.s, rectangle)))],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size3;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;1:%s.o;2:x
'λx.forall(size1,filter(filter(x.s, rectangle), rectangle))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle
'λx.apply(not[and[green,blue]],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:green;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(apply(same_color,iota(x.s)),iota(filter(filter(filter(filter(filter(x.s, yellow), size2), or[green,apply(size-gt,iota(x.s))]), size1), and[circle,size1])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2;4:or[%s,%s];4:green;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:circle;4:size1
'λx.empty(filter(x.s, nor[apply(size-lt,iota(filter(x.s, triangle))),size3]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3
'λx.apply(and[green,rectangle],iota(filter(x.s, not[rectangle])))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle
'λx.apply(size2,iota(filter(filter(filter(x.s, blue), triangle), circle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle;4:circle
'λx.apply(and[rectangle,triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:triangle;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(x.s, and[or[size1,size2],green]), blue)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:size1;4:size2;4:green;4:blue
'λx.exists(not[blue], filter(filter(x.s, iff[circle,yellow]), implies[circle,blue]))'	0:exists(%s, %s);4:not[%s];4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:circle;4:yellow;4:implies[%s,%s];4:circle;4:blue
'λx.apply(or[and[apply(size-gt,iota(x.s)),green],rectangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:green;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.forall(and[size1,apply(same_size,iota(filter(filter(x.s, size1), triangle)))],filter(x.s, triangle))'	0:forall(%s,%s);4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(rectangle,iota(filter(x.s, circle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.forall(and[or[size2,and[size2,or[and[or[green,size3],size3],and[and[yellow,size1],blue]]]],and[yellow,triangle]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size2;4:and[%s,%s];4:size2;4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:green;4:size3;4:size3;4:and[%s,%s];4:and[%s,%s];4:yellow;4:size1;4:blue;4:and[%s,%s];4:yellow;4:triangle;3:%s.s;2:x
'λx.forall(and[or[size1,not[size3]],rectangle],filter(filter(x.s, size3), and[yellow,green]))'	0:forall(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size1;4:not[%s];4:size3;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:yellow;4:green
'λx.apply(and[rectangle,and[rectangle,apply(size-leq,iota(x.s))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.forall(rectangle,filter(x.s, and[circle,yellow]))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:yellow
'λx.apply(circle,iota(filter(filter(x.s, size2), not[not[and[circle,triangle]]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:not[%s];4:not[%s];4:and[%s,%s];4:circle;4:triangle
'λx.forall(rectangle,filter(x.s, not[not[size3]]))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:size3
'λx.forall(circle,filter(x.s, size3))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(size1,iota(filter(filter(x.s, yellow), apply(same_shape,iota(x.s)))))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, iff[triangle,triangle])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:triangle;4:triangle;3:%s.s;2:x
'λx.apply(and[circle,not[apply(same_shape,iota(x.s))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.exists(size1, filter(filter(x.s, size3), nand[size2,and[apply(same_size,iota(filter(x.s, size3))),circle]]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:nand[%s,%s];4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle
'λx.apply(nand[and[apply(same_shape,iota(x.s)),blue],blue],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:blue;4:blue;1:%s.o;2:x
'λx.contains(iota(filter(x.s, not[not[blue]])), filter(filter(filter(x.s, size1), not[apply(same_size,iota(x.s))]), rectangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:rectangle
'λx.apply(apply(size-geq,iota(filter(filter(x.s, green), size1))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1;1:%s.o;2:x
'λx.forall(and[apply(same_color,x.o),or[apply(same_size,x.o),size2]],filter(filter(filter(x.s, yellow), circle), triangle))'	0:forall(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle;4:triangle
'λx.apply(and[not[not[size2]],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:not[%s];4:size2;4:circle;1:%s.o;2:x
'λx.apply(and[size1,green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:green;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(filter(filter(x.s, or[size1,yellow]), green), green), yellow)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:yellow;4:green;4:green;4:yellow
'λx.empty(filter(filter(filter(filter(filter(x.s, green), blue), blue), size2), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue;4:blue;4:size2;4:green
'λx.apply(and[and[triangle,and[blue,circle]],nor[nor[apply(same_color,iota(x.s)),size2],green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:blue;4:circle;4:nor[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size2;4:green;1:%s.o;2:x
'λx.empty(filter(filter(x.s, green), and[rectangle,circle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:rectangle;4:circle
'λx.apply(apply(same_size,iota(x.s)),iota(filter(x.s, green)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.exists(and[size2,not[and[and[circle,not[and[and[rectangle,nand[circle,apply(same_color,iota(filter(x.s, size1)))]],size1]]],blue]]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:size2;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:nand[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1;4:blue;3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(x.s, rectangle), circle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle
'λx.apply(size3,iota(filter(filter(x.s, or[not[size1],or[blue,circle]]), rectangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:size1;4:or[%s,%s];4:blue;4:circle;4:rectangle
'λx.apply(and[blue,apply(same_color,iota(filter(filter(x.s, not[triangle]), and[size1,size2])))],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:and[%s,%s];4:size1;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(x.s, apply(same_size,x.o))))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.exists(size2, filter(x.s, or[or[implies[implies[not[apply(size-geq,iota(x.s))],yellow],apply(same_shape,iota(x.s))],blue],and[nor[not[green],size2],size1]]))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:implies[%s,%s];4:not[%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:nor[%s,%s];4:not[%s];4:green;4:size2;4:size1
'λx.apply(or[size1,implies[and[yellow,triangle],circle]],iota(filter(filter(x.s, not[and[blue,apply(same_size,iota(x.s))]]), not[implies[size3,not[rectangle]]])))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:implies[%s,%s];4:and[%s,%s];4:yellow;4:triangle;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:not[%s];4:implies[%s,%s];4:size3;4:not[%s];4:rectangle
'λx.forall(circle,filter(x.s, yellow))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.empty(filter(filter(x.s, and[implies[size2,nand[and[iff[circle,size2],yellow],circle]],rectangle]), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:implies[%s,%s];4:size2;4:nand[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:circle;4:size2;4:yellow;4:circle;4:rectangle;4:size3
'λx.apply(size2,iota(filter(x.s, not[size1])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1
'λx.empty(filter(filter(filter(x.s, triangle), size2), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2;4:rectangle
'λx.apply(blue,iota(filter(filter(x.s, or[size3,green]), rectangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:green;4:rectangle
'λx.apply(implies[and[rectangle,circle],circle],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:rectangle;4:circle;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.forall(not[and[rectangle,green]],filter(filter(filter(x.s, iff[circle,circle]), nor[and[circle,size1],yellow]), and[not[apply(same_color,x.o)],triangle]))'	0:forall(%s,%s);4:not[%s];4:and[%s,%s];4:rectangle;4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:circle;4:circle;4:nor[%s,%s];4:and[%s,%s];4:circle;4:size1;4:yellow;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle
'λx.apply(size3,iota(filter(filter(x.s, yellow), blue)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:blue
'λx.apply(green,iota(filter(filter(x.s, blue), apply(same_size,x.o))))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.forall(and[not[green],and[and[apply(same_color,x.o),rectangle],and[apply(size-geq,x.o),rectangle]]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:not[%s];4:green;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:rectangle;3:%s.s;2:x
'λx.forall(and[and[triangle,size2],yellow],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:size2;4:yellow;3:%s.s;2:x
'λx.apply(and[yellow,and[size2,size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:and[%s,%s];4:size2;4:size3;1:%s.o;2:x
'λx.forall(blue,filter(x.s, not[or[nand[iff[green,implies[size2,size3]],size2],yellow]]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:nand[%s,%s];4:iff[%s,%s];4:green;4:implies[%s,%s];4:size2;4:size3;4:size2;4:yellow
'λx.contains(iota(x.s), filter(x.s, or[apply(same_size,iota(filter(filter(filter(x.s, not[blue]), implies[size1,and[yellow,green]]), triangle))),iff[triangle,size1]]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:implies[%s,%s];4:size1;4:and[%s,%s];4:yellow;4:green;4:triangle;4:iff[%s,%s];4:triangle;4:size1
'λx.forall(and[or[not[iff[circle,circle]],or[circle,size3]],or[green,not[and[or[triangle,blue],not[apply(size-gt,x.o)]]]]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:or[%s,%s];4:not[%s];4:iff[%s,%s];4:circle;4:circle;4:or[%s,%s];4:circle;4:size3;4:or[%s,%s];4:green;4:not[%s];4:and[%s,%s];4:or[%s,%s];4:triangle;4:blue;4:not[%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(or[and[and[green,and[nand[apply(same_shape,x.o),yellow],and[circle,size1]]],size3],circle],iota(filter(filter(filter(filter(x.s, blue), apply(same_shape,iota(x.s))), and[and[rectangle,and[size2,and[circle,blue]]],triangle]), green)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow;4:and[%s,%s];4:circle;4:size1;4:size3;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:size2;4:and[%s,%s];4:circle;4:blue;4:triangle;4:green
'λx.apply(green,iota(filter(filter(x.s, and[not[triangle],size3]), size1)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:triangle;4:size3;4:size1
'λx.forall(green,filter(filter(x.s, and[green,size1]), blue))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:size1;4:blue
'λx.apply(blue,iota(filter(filter(x.s, size1), blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue
'λx.apply(triangle,iota(filter(filter(filter(filter(x.s, triangle), and[apply(same_size,x.o),blue]), green), or[size1,triangle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;4:green;4:or[%s,%s];4:size1;4:triangle
'λx.apply(and[and[circle,size2],yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:size2;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(filter(x.s, nor[triangle,not[rectangle]]), size3), nand[and[and[size3,and[triangle,and[or[rectangle,not[or[iff[and[circle,blue],size3],size3]]],and[blue,or[size3,circle]]]]],implies[and[implies[green,circle],blue],triangle]],and[size2,size1]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:triangle;4:not[%s];4:rectangle;4:size3;4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:triangle;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:not[%s];4:or[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:circle;4:blue;4:size3;4:size3;4:and[%s,%s];4:blue;4:or[%s,%s];4:size3;4:circle;4:implies[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:green;4:circle;4:blue;4:triangle;4:and[%s,%s];4:size2;4:size1
'λx.apply(rectangle,iota(filter(filter(x.s, apply(same_size,x.o)), green)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green
'λx.forall(yellow,filter(filter(filter(filter(x.s, blue), not[yellow]), rectangle), size2))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:yellow;4:rectangle;4:size2
'λx.apply(and[and[iff[size1,apply(same_shape,iota(filter(x.s, blue)))],not[not[not[and[size1,and[nor[green,blue],green]]]]]],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:not[%s];4:not[%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:nor[%s,%s];4:green;4:blue;4:green;4:circle;1:%s.o;2:x
'λx.apply(apply(size-gt,iota(filter(x.s, or[or[and[and[yellow,and[green,nor[not[rectangle],yellow]]],green],and[or[implies[blue,and[and[size2,triangle],triangle]],yellow],size3]],or[blue,size3]]))),iota(filter(x.s, and[or[green,and[size1,and[nor[apply(same_color,x.o),circle],not[and[circle,nand[triangle,size2]]]]]],apply(same_color,x.o)])))'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:green;4:nor[%s,%s];4:not[%s];4:rectangle;4:yellow;4:green;4:and[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:size2;4:triangle;4:triangle;4:yellow;4:size3;4:or[%s,%s];4:blue;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:green;4:and[%s,%s];4:size1;4:and[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;4:not[%s];4:and[%s,%s];4:circle;4:nand[%s,%s];4:triangle;4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, and[blue,rectangle])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:rectangle
'λx.apply(and[size2,not[implies[triangle,nor[and[circle,iff[size3,yellow]],not[apply(size-lt,iota(filter(filter(filter(filter(x.s, rectangle), size2), not[size3]), or[and[implies[iff[size3,or[green,green]],size3],blue],blue])))]]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:not[%s];4:implies[%s,%s];4:triangle;4:nor[%s,%s];4:and[%s,%s];4:circle;4:iff[%s,%s];4:size3;4:yellow;4:not[%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2;4:not[%s];4:size3;4:or[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:iff[%s,%s];4:size3;4:or[%s,%s];4:green;4:green;4:size3;4:blue;4:blue;1:%s.o;2:x
'λx.apply(nand[and[size2,size3],blue],iota(filter(filter(x.s, size2), size2)))'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:size2;4:size3;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2
'λx.apply(or[size2,and[and[triangle,yellow],green]],iota(filter(filter(x.s, and[and[size1,not[and[size3,size3]]],rectangle]), implies[nand[and[or[not[rectangle],apply(same_size,x.o)],and[size3,apply(same_size,iota(x.s))]],size1],yellow])))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:triangle;4:yellow;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size1;4:not[%s];4:and[%s,%s];4:size3;4:size3;4:rectangle;4:implies[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:or[%s,%s];4:not[%s];4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size1;4:yellow
'λx.apply(or[not[green],circle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:green;4:circle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(filter(x.s, size3), rectangle), or[or[yellow,and[and[size1,size3],rectangle]],or[apply(same_shape,x.o),triangle]]), implies[triangle,blue]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle;4:or[%s,%s];4:or[%s,%s];4:yellow;4:and[%s,%s];4:and[%s,%s];4:size1;4:size3;4:rectangle;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle;4:implies[%s,%s];4:triangle;4:blue
'λx.apply(nor[size1,apply(size-gt,x.o)],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:size1;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[green,circle],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:green;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[circle,apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.forall(and[rectangle,size1],filter(filter(filter(filter(filter(x.s, size1), blue), yellow), green), yellow))'	0:forall(%s,%s);4:and[%s,%s];4:rectangle;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue;4:yellow;4:green;4:yellow
'λx.apply(apply(size-gt,iota(x.s)),iota(filter(filter(filter(x.s, circle), size1), size3)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1;4:size3
'λx.apply(apply(size-gt,iota(x.s)),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.exists(not[or[circle,nor[circle,size3]]], filter(x.s, size2))'	0:exists(%s, %s);4:not[%s];4:or[%s,%s];4:circle;4:nor[%s,%s];4:circle;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(yellow,iota(filter(x.s, and[green,triangle])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:triangle
'λx.apply(and[not[size2],and[circle,green]],iota(filter(filter(x.s, and[size1,size3]), size3)))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size2;4:and[%s,%s];4:circle;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size3;4:size3
'λx.apply(and[and[rectangle,green],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:rectangle;4:green;4:triangle;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, size3), yellow)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow
'λx.apply(yellow,iota(filter(filter(x.s, size2), circle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle
'λx.empty(filter(filter(x.s, green), and[green,green]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:green;4:green
'λx.contains(iota(x.s), filter(filter(filter(filter(filter(filter(x.s, apply(same_size,x.o)), rectangle), green), triangle), or[green,size3]), size2))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:rectangle;4:green;4:triangle;4:or[%s,%s];4:green;4:size3;4:size2
'λx.exists(or[not[green],apply(size-gt,x.o)], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:not[%s];4:green;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;3:%s.s;2:x
'λx.forall(green,filter(filter(filter(x.s, rectangle), green), apply(same_color,iota(filter(filter(filter(filter(filter(filter(x.s, triangle), apply(size-gt,iota(x.s))), green), not[triangle]), or[and[size1,apply(same_shape,x.o)],green]), green)))))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:green;4:not[%s];4:triangle;4:or[%s,%s];4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green;4:green
'λx.apply(not[size1],iota(filter(filter(x.s, rectangle), triangle)))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle
'λx.exists(yellow, filter(filter(filter(x.s, or[apply(same_size,x.o),green]), circle), apply(same_shape,iota(filter(filter(x.s, circle), and[blue,circle])))))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:blue;4:circle
'λx.apply(nand[apply(same_shape,iota(x.s)),nor[and[size2,and[green,iff[and[circle,rectangle],blue]]],or[yellow,size2]]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:nor[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:green;4:iff[%s,%s];4:and[%s,%s];4:circle;4:rectangle;4:blue;4:or[%s,%s];4:yellow;4:size2;1:%s.o;2:x
'λx.apply(and[and[size2,and[not[yellow],not[size3]]],not[nor[size2,and[apply(same_color,iota(x.s)),blue]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:not[%s];4:yellow;4:not[%s];4:size3;4:not[%s];4:nor[%s,%s];4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.apply(implies[size2,triangle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size2;4:triangle;1:%s.o;2:x
'λx.exists(or[and[apply(same_color,x.o),triangle],iff[yellow,or[triangle,yellow]]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;4:iff[%s,%s];4:yellow;4:or[%s,%s];4:triangle;4:yellow;3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(x.s, and[green,or[and[not[and[apply(same_color,iota(x.s)),size2]],green],not[rectangle]]]), size1)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size2;4:green;4:not[%s];4:rectangle;4:size1
'λx.exists(iff[size1,triangle], x.s)'	0:exists(%s, %s);4:iff[%s,%s];4:size1;4:triangle;3:%s.s;2:x
'λx.exists(triangle, filter(filter(filter(filter(filter(filter(x.s, nand[rectangle,triangle]), triangle), rectangle), circle), and[size1,size2]), or[not[blue],size2]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:rectangle;4:triangle;4:triangle;4:rectangle;4:circle;4:and[%s,%s];4:size1;4:size2;4:or[%s,%s];4:not[%s];4:blue;4:size2
'λx.apply(implies[rectangle,and[yellow,not[or[and[circle,blue],blue]]]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:rectangle;4:and[%s,%s];4:yellow;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:circle;4:blue;4:blue;1:%s.o;2:x
'λx.apply(and[and[size3,green],yellow],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size3;4:green;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(green,iota(filter(filter(x.s, apply(same_shape,iota(filter(filter(filter(filter(filter(x.s, rectangle), green), or[yellow,size3]), size1), triangle)))), blue)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green;4:or[%s,%s];4:yellow;4:size3;4:size1;4:triangle;4:blue
'λx.empty(filter(filter(filter(filter(x.s, and[size1,circle]), apply(same_shape,iota(x.s))), implies[blue,rectangle]), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:implies[%s,%s];4:blue;4:rectangle;4:blue
'λx.apply(size3,iota(filter(filter(filter(x.s, iff[apply(same_shape,iota(x.s)),triangle]), circle), size1)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle;4:circle;4:size1
'λx.apply(circle,iota(filter(filter(x.s, triangle), not[apply(same_shape,x.o)])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(or[size3,apply(size-lt,iota(x.s))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(x.s, yellow), apply(size-geq,x.o)), size2), or[and[and[triangle,triangle],apply(same_size,x.o)],rectangle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:size2;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:rectangle
'λx.contains(iota(filter(x.s, size3)), filter(x.s, not[size3]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3
'λx.apply(apply(same_shape,iota(filter(filter(x.s, not[green]), nand[size3,green]))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:nand[%s,%s];4:size3;4:green;1:iota(%s);3:%s.s;2:x
'λx.forall(and[triangle,size1],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:triangle;4:size1;3:%s.s;2:x
'λx.apply(nor[blue,yellow],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:blue;4:yellow;1:%s.o;2:x
'λx.apply(yellow,iota(filter(x.s, size2)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.forall(or[and[apply(same_color,iota(filter(x.s, size2))),blue],size2],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue;4:size2;3:%s.s;2:x
'λx.apply(triangle,iota(filter(x.s, not[yellow])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow
'λx.apply(triangle,x.o)'	0:apply(%s,%s);4:triangle;1:%s.o;2:x
'λx.forall(apply(same_color,iota(filter(filter(filter(filter(filter(x.s, blue), and[size1,not[apply(size-lt,x.o)]]), size1), nor[yellow,size3]), size1))),filter(x.s, and[or[and[rectangle,yellow],and[size1,triangle]],size3]))'	0:forall(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:size1;4:not[%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:size1;4:nor[%s,%s];4:yellow;4:size3;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:rectangle;4:yellow;4:and[%s,%s];4:size1;4:triangle;4:size3
'λx.apply(and[triangle,and[triangle,and[size2,size1]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:triangle;4:and[%s,%s];4:size2;4:size1;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(x.s, triangle), not[rectangle])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:not[%s];4:rectangle
'λx.apply(or[apply(same_color,x.o),not[size1]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:size1;1:%s.o;2:x
'λx.contains(x.o, filter(filter(filter(x.s, size1), not[and[size2,apply(same_size,x.o)]]), blue))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:not[%s];4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue
'λx.apply(and[not[implies[and[apply(same_color,iota(filter(filter(x.s, and[blue,size1]), size1))),not[apply(same_size,x.o)]],and[rectangle,or[rectangle,green]]]],yellow],iota(filter(filter(filter(filter(x.s, or[not[and[or[apply(same_color,x.o),apply(same_shape,iota(x.s))],triangle]],size1]), size2), size1), size1)))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:implies[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size1;4:size1;4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:rectangle;4:green;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle;4:size1;4:size2;4:size1;4:size1
'λx.apply(circle,iota(filter(filter(filter(filter(x.s, green), triangle), size2), rectangle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:triangle;4:size2;4:rectangle
'λx.contains(x.o, filter(filter(x.s, and[rectangle,and[implies[triangle,circle],yellow]]), circle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:implies[%s,%s];4:triangle;4:circle;4:yellow;4:circle
'λx.apply(or[nor[size2,nor[or[apply(same_size,x.o),not[and[size1,circle]]],and[apply(same_shape,x.o),size1]]],green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:nor[%s,%s];4:size2;4:nor[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:size1;4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;4:green;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, nand[size1,size2])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size1;4:size2
'λx.apply(apply(same_size,iota(filter(x.s, green))),iota(filter(x.s, apply(same_size,x.o))))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(or[or[implies[blue,triangle],or[nor[size3,size2],and[rectangle,or[or[nand[blue,not[iff[green,and[blue,size3]]]],implies[triangle,yellow]],size2]]]],nor[triangle,or[size3,triangle]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:blue;4:triangle;4:or[%s,%s];4:nor[%s,%s];4:size3;4:size2;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:or[%s,%s];4:nand[%s,%s];4:blue;4:not[%s];4:iff[%s,%s];4:green;4:and[%s,%s];4:blue;4:size3;4:implies[%s,%s];4:triangle;4:yellow;4:size2;4:nor[%s,%s];4:triangle;4:or[%s,%s];4:size3;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(x.s, nor[triangle,and[blue,yellow]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:triangle;4:and[%s,%s];4:blue;4:yellow
'λx.contains(iota(filter(filter(filter(x.s, yellow), and[circle,green]), and[size3,rectangle])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:circle;4:green;4:and[%s,%s];4:size3;4:rectangle;3:%s.s;2:x
'λx.apply(nor[nand[green,size3],circle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:nand[%s,%s];4:green;4:size3;4:circle;1:%s.o;2:x
'λx.apply(and[rectangle,rectangle],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(or[circle,triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:triangle;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(filter(filter(x.s, nor[size2,rectangle]), and[green,green]), size3), and[size1,apply(same_size,x.o)])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size2;4:rectangle;4:and[%s,%s];4:green;4:green;4:size3;4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, size1), blue)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue
'λx.exists(apply(same_shape,x.o), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.forall(yellow,filter(filter(filter(x.s, or[and[apply(same_color,iota(filter(x.s, rectangle))),size1],size3]), rectangle), yellow))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1;4:size3;4:rectangle;4:yellow
'λx.apply(apply(same_size,iota(filter(x.s, and[size2,apply(size-geq,x.o)]))),iota(filter(x.s, not[size2])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2
'λx.apply(or[iff[and[green,and[triangle,yellow]],nand[rectangle,and[and[implies[size3,iff[not[size2],blue]],yellow],and[triangle,triangle]]]],triangle],iota(filter(filter(filter(filter(filter(x.s, yellow), green), size1), apply(size-geq,x.o)), circle)))'	0:apply(%s,%s);4:or[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:triangle;4:yellow;4:nand[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:size3;4:iff[%s,%s];4:not[%s];4:size2;4:blue;4:yellow;4:and[%s,%s];4:triangle;4:triangle;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green;4:size1;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:circle
'λx.apply(yellow,iota(filter(filter(x.s, not[and[green,triangle]]), yellow)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:green;4:triangle;4:yellow
'λx.contains(iota(filter(filter(filter(x.s, circle), or[or[circle,triangle],size3]), not[size1])), filter(x.s, green))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:or[%s,%s];4:circle;4:triangle;4:size3;4:not[%s];4:size1;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.exists(size3, filter(filter(filter(filter(filter(filter(filter(filter(filter(x.s, blue), circle), rectangle), not[green]), size1), rectangle), rectangle), rectangle), or[blue,size2]))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle;4:rectangle;4:not[%s];4:green;4:size1;4:rectangle;4:rectangle;4:rectangle;4:or[%s,%s];4:blue;4:size2
'λx.apply(size2,iota(filter(filter(filter(filter(filter(x.s, size2), size1), size3), size1), and[green,nand[apply(size-lt,iota(filter(x.s, or[blue,size3]))),nor[and[triangle,size2],apply(same_color,x.o)]]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1;4:size3;4:size1;4:and[%s,%s];4:green;4:nand[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:size3;4:nor[%s,%s];4:and[%s,%s];4:triangle;4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(filter(x.s, not[green]), blue), nand[blue,yellow])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:blue;4:nand[%s,%s];4:blue;4:yellow
'λx.apply(and[iff[blue,or[circle,yellow]],rectangle],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:blue;4:or[%s,%s];4:circle;4:yellow;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(not[circle],iota(filter(filter(filter(x.s, green), blue), size3)))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue;4:size3
'λx.apply(and[and[green,and[not[blue],rectangle]],or[apply(same_color,x.o),or[size2,circle]]],iota(filter(filter(filter(filter(x.s, iff[yellow,implies[size2,blue]]), size2), size2), and[size2,triangle])))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:not[%s];4:blue;4:rectangle;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:or[%s,%s];4:size2;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:yellow;4:implies[%s,%s];4:size2;4:blue;4:size2;4:size2;4:and[%s,%s];4:size2;4:triangle
'λx.forall(and[yellow,rectangle],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:yellow;4:rectangle;3:%s.s;2:x
'λx.apply(apply(same_size,iota(x.s)),iota(filter(filter(x.s, size2), size2)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2
'λx.contains(x.o, filter(filter(filter(x.s, size1), and[circle,rectangle]), size1))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:circle;4:rectangle;4:size1
'λx.apply(iff[yellow,and[circle,apply(size-geq,x.o)]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:yellow;4:and[%s,%s];4:circle;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(filter(filter(filter(filter(x.s, not[size2]), yellow), size3), apply(size-geq,x.o)), blue))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:yellow;4:size3;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:blue;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(x.s, not[circle]), yellow)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:yellow
'λx.apply(rectangle,iota(filter(x.s, not[or[blue,blue]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:blue;4:blue
'λx.apply(triangle,iota(filter(filter(x.s, not[size1]), size3)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:size3
'λx.apply(not[and[triangle,apply(same_shape,x.o)]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(not[and[yellow,apply(same_color,x.o)]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.contains(iota(filter(x.s, not[size2])), filter(filter(x.s, size1), rectangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle
'λx.apply(implies[or[size1,triangle],rectangle],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:or[%s,%s];4:size1;4:triangle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, yellow), iff[size3,green]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:iff[%s,%s];4:size3;4:green
'λx.forall(iff[rectangle,blue],x.s)'	0:forall(%s,%s);4:iff[%s,%s];4:rectangle;4:blue;3:%s.s;2:x
'λx.apply(rectangle,iota(filter(x.s, and[and[not[nor[implies[triangle,not[blue]],green]],green],size3])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:nor[%s,%s];4:implies[%s,%s];4:triangle;4:not[%s];4:blue;4:green;4:green;4:size3
'λx.apply(and[circle,triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:triangle;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, nor[and[blue,apply(size-geq,iota(filter(x.s, and[triangle,blue])))],not[and[size3,triangle]]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:and[%s,%s];4:blue;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:blue;4:not[%s];4:and[%s,%s];4:size3;4:triangle
'λx.apply(nand[circle,and[apply(size-leq,x.o),size3]],iota(filter(filter(x.s, circle), size3)))'	0:apply(%s,%s);4:nand[%s,%s];4:circle;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3
'λx.apply(green,iota(filter(x.s, or[size1,triangle])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:triangle
'λx.empty(filter(filter(filter(filter(x.s, iff[nand[and[and[rectangle,size3],and[and[green,circle],apply(same_color,iota(filter(x.s, iff[and[rectangle,yellow],or[blue,size2]])))]],iff[blue,and[implies[circle,size3],and[iff[apply(same_color,x.o),and[apply(same_color,iota(x.s)),circle]],blue]]]],size1]), yellow), green), implies[size1,circle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size3;4:and[%s,%s];4:and[%s,%s];4:green;4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:and[%s,%s];4:rectangle;4:yellow;4:or[%s,%s];4:blue;4:size2;4:iff[%s,%s];4:blue;4:and[%s,%s];4:implies[%s,%s];4:circle;4:size3;4:and[%s,%s];4:iff[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:circle;4:blue;4:size1;4:yellow;4:green;4:implies[%s,%s];4:size1;4:circle
'λx.forall(yellow,filter(filter(filter(filter(x.s, triangle), and[not[triangle],apply(same_color,x.o)]), size1), apply(same_shape,x.o)))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:not[%s];4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.empty(filter(filter(x.s, and[circle,and[size3,size3]]), and[yellow,or[green,and[circle,rectangle]]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:and[%s,%s];4:size3;4:size3;4:and[%s,%s];4:yellow;4:or[%s,%s];4:green;4:and[%s,%s];4:circle;4:rectangle
'λx.apply(circle,iota(filter(x.s, and[or[size3,circle],yellow])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:size3;4:circle;4:yellow
'λx.apply(and[triangle,not[size1]],iota(filter(x.s, not[or[not[yellow],yellow]])))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:not[%s];4:yellow;4:yellow
'λx.apply(and[and[green,triangle],size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:green;4:triangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[size1,rectangle],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:size1;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(filter(x.s, circle), rectangle), apply(same_shape,iota(x.s)))))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(not[and[triangle,size3]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:triangle;4:size3;1:%s.o;2:x
'λx.forall(and[nor[apply(same_size,iota(filter(x.s, circle))),and[size3,rectangle]],size3],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:size3;4:rectangle;4:size3;3:%s.s;2:x
'λx.apply(or[blue,green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:green;1:%s.o;2:x
'λx.apply(and[blue,size3],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(or[nand[triangle,or[size2,size3]],size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:triangle;4:or[%s,%s];4:size2;4:size3;4:size3;1:%s.o;2:x
'λx.apply(yellow,iota(filter(x.s, iff[size2,blue])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size2;4:blue
'λx.apply(not[apply(same_color,iota(x.s))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(and[triangle,size3],iota(filter(filter(x.s, green), rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle
'λx.apply(and[apply(size-gt,iota(x.s)),blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(x.s, not[size2])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2
'λx.apply(and[size1,apply(same_shape,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[and[yellow,not[size3]],blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:not[%s];4:size3;4:blue;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(x.s), filter(filter(filter(x.s, yellow), not[apply(same_color,iota(filter(filter(filter(x.s, circle), size1), and[not[triangle],not[iff[size2,yellow]]])))]), apply(same_shape,iota(x.s))))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1;4:and[%s,%s];4:not[%s];4:triangle;4:not[%s];4:iff[%s,%s];4:size2;4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(not[rectangle],iota(filter(x.s, and[and[and[blue,green],yellow],and[size1,size2]])))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:green;4:yellow;4:and[%s,%s];4:size1;4:size2
'λx.apply(not[apply(size-geq,x.o)],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(or[size2,apply(same_shape,x.o)],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.empty(filter(filter(filter(x.s, circle), size2), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size2;4:rectangle
'λx.apply(green,iota(filter(filter(filter(x.s, triangle), circle), green)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle;4:green
'λx.exists(size2, filter(filter(x.s, circle), or[triangle,blue]))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:triangle;4:blue
'λx.apply(apply(same_size,iota(x.s)),iota(filter(x.s, implies[not[apply(same_shape,x.o)],green])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green
'λx.exists(size3, filter(x.s, not[triangle]))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.exists(green, filter(filter(filter(x.s, and[blue,green]), triangle), green))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:green;4:triangle;4:green
'λx.apply(and[triangle,blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(filter(filter(x.s, size2), apply(size-gt,x.o)), not[triangle]), or[apply(same_color,iota(filter(filter(x.s, triangle), green))),yellow])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:not[%s];4:triangle;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green;4:yellow
'λx.exists(apply(same_shape,x.o), filter(filter(x.s, circle), iff[triangle,rectangle]))'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:iff[%s,%s];4:triangle;4:rectangle
'λx.apply(not[size2],iota(filter(x.s, apply(same_color,iota(filter(x.s, yellow))))))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(nor[or[yellow,yellow],apply(same_color,x.o)],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:or[%s,%s];4:yellow;4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(filter(filter(x.s, size2), blue), implies[triangle,triangle]), green)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue;4:implies[%s,%s];4:triangle;4:triangle;4:green
'λx.apply(triangle,iota(filter(filter(filter(filter(x.s, size3), green), blue), size3)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green;4:blue;4:size3
'λx.apply(rectangle,iota(filter(filter(filter(filter(filter(x.s, green), size1), size1), not[blue]), blue)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1;4:size1;4:not[%s];4:blue;4:blue
'λx.contains(x.o, filter(filter(filter(filter(x.s, or[size3,size1]), not[blue]), size2), yellow))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:size1;4:not[%s];4:blue;4:size2;4:yellow
'λx.empty(filter(filter(x.s, and[rectangle,blue]), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:blue;4:green
'λx.apply(yellow,iota(filter(filter(x.s, rectangle), triangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle
'λx.apply(or[apply(same_shape,x.o),rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle;1:%s.o;2:x
'λx.forall(not[green],filter(x.s, circle))'	0:forall(%s,%s);4:not[%s];4:green;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[size2,blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:blue;1:%s.o;2:x
'λx.apply(or[not[triangle],circle],iota(filter(x.s, green)))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:triangle;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.exists(size3, filter(x.s, size1))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(and[size2,or[blue,blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:or[%s,%s];4:blue;4:blue;1:%s.o;2:x
'λx.forall(nand[and[size3,circle],rectangle],x.s)'	0:forall(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:size3;4:circle;4:rectangle;3:%s.s;2:x
'λx.apply(nor[apply(same_shape,iota(x.s)),green],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(x.s, yellow), nor[size2,rectangle])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:nor[%s,%s];4:size2;4:rectangle
'λx.apply(size3,iota(filter(x.s, and[size3,rectangle])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:rectangle
'λx.contains(iota(x.s), filter(filter(filter(x.s, and[rectangle,not[not[rectangle]]]), size2), blue))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:not[%s];4:not[%s];4:rectangle;4:size2;4:blue
'λx.apply(apply(size-leq,iota(x.s)),iota(filter(x.s, size1)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(iff[circle,blue],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:circle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(not[size1],iota(filter(filter(x.s, size2), size3)))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3
'λx.forall(circle,filter(x.s, implies[green,rectangle]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:green;4:rectangle
'λx.apply(not[apply(size-leq,iota(x.s))],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(yellow, filter(filter(x.s, size2), circle))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle
'λx.apply(and[size3,apply(same_shape,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(or[yellow,blue],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:blue;1:iota(%s);3:%s.s;2:x
'λx.forall(or[nand[size1,rectangle],green],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:size1;4:rectangle;4:green;3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(x.s, and[green,triangle]), rectangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:triangle;4:rectangle
'λx.apply(and[yellow,triangle],iota(filter(x.s, or[circle,size3])))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:size3
'λx.apply(nand[apply(same_shape,x.o),size1],iota(filter(x.s, or[apply(size-leq,x.o),size1])))'	0:apply(%s,%s);4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size1
'λx.apply(nor[iff[yellow,triangle],triangle],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:iff[%s,%s];4:yellow;4:triangle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[rectangle,blue],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:rectangle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(x.s, or[not[apply(same_shape,iota(x.s))],blue]), size3)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:blue;4:size3
'λx.forall(not[not[and[size2,or[not[apply(same_shape,x.o)],apply(same_shape,x.o)]]]],filter(x.s, not[size1]))'	0:forall(%s,%s);4:not[%s];4:not[%s];4:and[%s,%s];4:size2;4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1
'λx.exists(size2, x.s)'	0:exists(%s, %s);4:size2;3:%s.s;2:x
'λx.apply(and[green,blue],iota(filter(filter(filter(filter(filter(filter(x.s, size1), apply(size-geq,x.o)), iff[and[yellow,size3],size3]), rectangle), triangle), and[size2,triangle])))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:iff[%s,%s];4:and[%s,%s];4:yellow;4:size3;4:size3;4:rectangle;4:triangle;4:and[%s,%s];4:size2;4:triangle
'λx.exists(apply(same_shape,iota(x.s)), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(nor[and[yellow,iff[blue,or[green,rectangle]]],blue],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:yellow;4:iff[%s,%s];4:blue;4:or[%s,%s];4:green;4:rectangle;4:blue;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(x.s, size3), rectangle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle
'λx.apply(size1,iota(filter(filter(x.s, size2), size1)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1
'λx.apply(blue,iota(filter(filter(filter(x.s, triangle), size1), nor[green,and[size1,and[and[size2,and[size3,rectangle]],blue]]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size1;4:nor[%s,%s];4:green;4:and[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:size3;4:rectangle;4:blue
'λx.contains(iota(filter(filter(x.s, size2), circle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle;3:%s.s;2:x
'λx.apply(not[iff[size1,size1]],x.o)'	0:apply(%s,%s);4:not[%s];4:iff[%s,%s];4:size1;4:size1;1:%s.o;2:x
'λx.apply(iff[rectangle,circle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:rectangle;4:circle;1:%s.o;2:x
'λx.forall(triangle,filter(filter(filter(x.s, rectangle), apply(same_color,iota(filter(x.s, apply(size-gt,x.o))))), green))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:green
'λx.forall(rectangle,filter(filter(x.s, rectangle), and[and[or[green,or[size2,yellow]],iff[apply(same_size,iota(x.s)),not[iff[and[blue,yellow],rectangle]]]],green]))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:green;4:or[%s,%s];4:size2;4:yellow;4:iff[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:not[%s];4:iff[%s,%s];4:and[%s,%s];4:blue;4:yellow;4:rectangle;4:green
'λx.apply(size2,iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.exists(yellow, filter(filter(filter(x.s, triangle), not[triangle]), green))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:not[%s];4:triangle;4:green
'λx.apply(size3,iota(filter(filter(x.s, or[blue,blue]), green)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:blue;4:green
'λx.apply(implies[or[size2,rectangle],size1],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:or[%s,%s];4:size2;4:rectangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[yellow,size3],rectangle],iota(filter(filter(filter(filter(x.s, blue), apply(same_color,x.o)), apply(same_size,x.o)), size2)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:size3;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2
'λx.apply(and[blue,circle],iota(filter(filter(filter(filter(x.s, blue), apply(same_shape,iota(x.s))), circle), triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle;4:triangle
'λx.apply(yellow,iota(filter(filter(filter(x.s, triangle), nand[or[apply(size-leq,iota(x.s)),nand[size1,green]],circle]), size3)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:nand[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:nand[%s,%s];4:size1;4:green;4:circle;4:size3
'λx.forall(and[circle,not[triangle]],filter(x.s, yellow))'	0:forall(%s,%s);4:and[%s,%s];4:circle;4:not[%s];4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(and[blue,green],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.forall(apply(size-geq,x.o),filter(filter(x.s, or[rectangle,size1]), blue))'	0:forall(%s,%s);4:apply(%s,%s);5:size-geq;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:size1;4:blue
'λx.exists(yellow, filter(filter(filter(x.s, rectangle), and[not[or[yellow,and[size2,green]]],not[apply(size-gt,iota(x.s))]]), size2))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:not[%s];4:or[%s,%s];4:yellow;4:and[%s,%s];4:size2;4:green;4:not[%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:size2
'λx.exists(apply(same_color,x.o), filter(filter(x.s, yellow), and[green,blue]))'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:green;4:blue
'λx.apply(and[size2,circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:circle;1:%s.o;2:x
'λx.exists(and[blue,blue], filter(x.s, blue))'	0:exists(%s, %s);4:and[%s,%s];4:blue;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(triangle,iota(filter(filter(x.s, blue), not[triangle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:triangle
'λx.apply(not[and[and[size3,green],green]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:green;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(or[and[size2,and[size1,apply(same_size,x.o)]],nor[size1,size3]],iota(filter(filter(filter(x.s, not[nand[triangle,size2]]), not[nand[yellow,blue]]), apply(same_size,x.o))))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:nor[%s,%s];4:size1;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:nand[%s,%s];4:triangle;4:size2;4:not[%s];4:nand[%s,%s];4:yellow;4:blue;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.contains(x.o, filter(filter(filter(x.s, not[triangle]), circle), yellow))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:circle;4:yellow
'λx.apply(and[implies[yellow,green],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:yellow;4:green;4:blue;1:%s.o;2:x
'λx.apply(and[and[size3,size3],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size3;4:size3;4:size1;1:%s.o;2:x
'λx.apply(not[triangle],iota(filter(x.s, apply(size-lt,iota(filter(x.s, nor[blue,and[iff[green,apply(same_color,iota(filter(x.s, blue)))],circle]]))))))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:blue;4:and[%s,%s];4:iff[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle
'λx.apply(size1,iota(filter(filter(x.s, circle), blue)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue
'λx.apply(and[apply(same_color,x.o),and[triangle,apply(same_shape,x.o)]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.exists(triangle, filter(filter(x.s, apply(same_color,iota(x.s))), and[size1,rectangle]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:rectangle
'λx.apply(and[and[and[triangle,yellow],rectangle],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:yellow;4:rectangle;4:triangle;1:%s.o;2:x
'λx.apply(or[apply(size-gt,iota(filter(filter(x.s, and[yellow,rectangle]), blue))),not[not[apply(same_color,x.o)]]],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:rectangle;4:blue;4:not[%s];4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(size3,iota(filter(filter(filter(x.s, and[size1,green]), size1), yellow)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:green;4:size1;4:yellow
'λx.apply(and[size3,apply(same_shape,x.o)],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.forall(or[and[and[size3,size1],or[green,yellow]],size2],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:size1;4:or[%s,%s];4:green;4:yellow;4:size2;3:%s.s;2:x
'λx.apply(and[circle,apply(size-leq,iota(x.s))],iota(filter(filter(filter(x.s, rectangle), rectangle), size3)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle;4:size3
'λx.apply(not[implies[and[apply(size-leq,iota(filter(x.s, blue))),triangle],green]],iota(filter(filter(x.s, and[green,triangle]), and[and[not[apply(same_color,x.o)],green],blue])))'	0:apply(%s,%s);4:not[%s];4:implies[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:triangle;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green;4:blue
'λx.apply(triangle,iota(filter(x.s, not[size1])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1
'λx.apply(and[and[yellow,and[green,size2]],size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:green;4:size2;4:size3;1:iota(%s);3:%s.s;2:x
'λx.forall(blue,filter(x.s, rectangle))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[or[yellow,size2],apply(same_color,iota(filter(x.s, green)))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:yellow;4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;1:%s.o;2:x
'λx.forall(yellow,filter(x.s, not[not[and[or[apply(same_shape,iota(x.s)),triangle],triangle]]]))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle;4:triangle
'λx.apply(implies[circle,size3],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:circle;4:size3;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(filter(x.s, or[green,and[green,circle]]), size3), yellow)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:and[%s,%s];4:green;4:circle;4:size3;4:yellow
'λx.apply(not[and[or[and[yellow,apply(same_shape,iota(x.s))],yellow],implies[size2,green]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:yellow;4:implies[%s,%s];4:size2;4:green;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, triangle), apply(same_size,iota(x.s))), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:yellow
'λx.forall(triangle,filter(filter(filter(filter(x.s, implies[and[not[and[size3,green]],and[and[apply(size-geq,iota(filter(filter(x.s, yellow), circle))),or[yellow,circle]],yellow]],and[blue,apply(same_size,iota(x.s))]]), yellow), size2), or[size1,implies[and[not[yellow],and[or[circle,size1],rectangle]],size1]]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:size3;4:green;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle;4:or[%s,%s];4:yellow;4:circle;4:yellow;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:yellow;4:size2;4:or[%s,%s];4:size1;4:implies[%s,%s];4:and[%s,%s];4:not[%s];4:yellow;4:and[%s,%s];4:or[%s,%s];4:circle;4:size1;4:rectangle;4:size1
'λx.apply(rectangle,iota(filter(filter(filter(filter(x.s, size2), or[size3,blue]), circle), or[size1,and[blue,rectangle]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:size3;4:blue;4:circle;4:or[%s,%s];4:size1;4:and[%s,%s];4:blue;4:rectangle
'λx.apply(green,iota(filter(filter(filter(x.s, green), green), rectangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:green;4:rectangle
'λx.apply(apply(same_shape,x.o),iota(filter(x.s, blue)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.forall(size3,filter(filter(filter(x.s, size3), yellow), yellow))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow;4:yellow
'λx.contains(iota(x.s), filter(x.s, nor[size1,yellow]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size1;4:yellow
'λx.exists(and[apply(size-leq,iota(x.s)),and[not[rectangle],rectangle]], filter(x.s, apply(same_shape,x.o)))'	0:exists(%s, %s);4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:rectangle;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(and[not[apply(same_color,x.o)],not[size3]],iota(filter(x.s, and[and[rectangle,rectangle],yellow])))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:rectangle;4:yellow
'λx.apply(size3,iota(filter(x.s, or[nor[and[yellow,blue],size2],size2])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:yellow;4:blue;4:size2;4:size2
'λx.exists(circle, filter(x.s, apply(size-lt,iota(filter(filter(filter(filter(filter(x.s, blue), not[yellow]), not[blue]), yellow), apply(same_size,x.o))))))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:yellow;4:not[%s];4:blue;4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.forall(and[green,size2],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:green;4:size2;3:%s.s;2:x
'λx.contains(iota(filter(x.s, implies[green,green])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:green;4:green;3:%s.s;2:x
'λx.apply(apply(same_shape,iota(filter(filter(filter(x.s, size1), apply(size-gt,x.o)), circle))),iota(filter(filter(x.s, yellow), size1)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1
'λx.empty(filter(filter(x.s, rectangle), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1
'λx.apply(green,iota(filter(filter(x.s, yellow), triangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle
'λx.apply(and[size2,or[size1,size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:or[%s,%s];4:size1;4:size3;1:%s.o;2:x
'λx.apply(iff[blue,yellow],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:blue;4:yellow;1:%s.o;2:x
'λx.apply(and[rectangle,or[yellow,and[not[yellow],or[rectangle,and[and[iff[rectangle,size3],yellow],rectangle]]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:or[%s,%s];4:yellow;4:and[%s,%s];4:not[%s];4:yellow;4:or[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:rectangle;4:size3;4:yellow;4:rectangle;1:%s.o;2:x
'λx.forall(size2,filter(x.s, and[blue,and[circle,blue]]))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:and[%s,%s];4:circle;4:blue
'λx.forall(nand[rectangle,iff[and[or[green,and[or[and[yellow,size2],not[rectangle]],yellow]],iff[and[iff[rectangle,size2],and[rectangle,rectangle]],rectangle]],size3]],filter(filter(filter(x.s, apply(same_shape,iota(filter(x.s, circle)))), nor[size2,size1]), implies[size1,and[green,and[size2,not[circle]]]]))'	0:forall(%s,%s);4:nand[%s,%s];4:rectangle;4:iff[%s,%s];4:and[%s,%s];4:or[%s,%s];4:green;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:yellow;4:size2;4:not[%s];4:rectangle;4:yellow;4:iff[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:rectangle;4:size2;4:and[%s,%s];4:rectangle;4:rectangle;4:rectangle;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:nor[%s,%s];4:size2;4:size1;4:implies[%s,%s];4:size1;4:and[%s,%s];4:green;4:and[%s,%s];4:size2;4:not[%s];4:circle
'λx.apply(green,iota(filter(x.s, circle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.contains(iota(filter(x.s, and[size1,size3])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size3;3:%s.s;2:x
'λx.forall(blue,filter(filter(filter(filter(x.s, not[size2]), blue), circle), circle))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:blue;4:circle;4:circle
'λx.apply(blue,iota(filter(filter(x.s, size1), triangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle
'λx.apply(blue,iota(filter(filter(x.s, green), blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue
'λx.apply(yellow,iota(filter(filter(filter(filter(x.s, triangle), and[nor[size2,size3],circle]), blue), apply(size-geq,iota(filter(x.s, apply(same_color,iota(x.s))))))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:nor[%s,%s];4:size2;4:size3;4:circle;4:blue;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(filter(x.s, green), size2), circle), nand[blue,size3]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size2;4:circle;4:nand[%s,%s];4:blue;4:size3
'λx.apply(yellow,iota(filter(x.s, apply(same_shape,iota(x.s)))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(not[and[green,size3]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:green;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_size,iota(filter(filter(filter(filter(x.s, yellow), blue), blue), triangle))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:blue;4:blue;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[yellow,not[apply(size-gt,iota(x.s))]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:not[%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(x.s, rectangle), and[size2,not[size1]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:size2;4:not[%s];4:size1
'λx.apply(green,iota(filter(filter(filter(x.s, blue), yellow), and[triangle,size1])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow;4:and[%s,%s];4:triangle;4:size1
'λx.empty(filter(filter(filter(filter(filter(x.s, size1), not[apply(same_shape,x.o)]), nand[green,implies[size1,size3]]), green), and[circle,green]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:nand[%s,%s];4:green;4:implies[%s,%s];4:size1;4:size3;4:green;4:and[%s,%s];4:circle;4:green
'λx.apply(and[not[not[and[blue,size1]]],size3],iota(filter(x.s, and[implies[circle,green],size3])))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:not[%s];4:and[%s,%s];4:blue;4:size1;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:implies[%s,%s];4:circle;4:green;4:size3
'λx.exists(size2, filter(filter(filter(filter(x.s, apply(size-geq,x.o)), triangle), apply(same_color,x.o)), green))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green
'λx.apply(and[iff[or[circle,rectangle],green],size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:circle;4:rectangle;4:green;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size2,nand[and[green,size3],circle]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:nand[%s,%s];4:and[%s,%s];4:green;4:size3;4:circle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(x.s), filter(filter(filter(x.s, circle), circle), blue))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:circle;4:blue
'λx.apply(iff[apply(same_shape,iota(filter(filter(filter(filter(filter(x.s, apply(same_color,iota(filter(filter(x.s, size1), and[yellow,blue])))), and[or[size3,and[size1,size2]],circle]), blue), triangle), size2))),nor[triangle,circle]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:yellow;4:blue;4:and[%s,%s];4:or[%s,%s];4:size3;4:and[%s,%s];4:size1;4:size2;4:circle;4:blue;4:triangle;4:size2;4:nor[%s,%s];4:triangle;4:circle;1:%s.o;2:x
'λx.apply(apply(same_size,iota(filter(filter(x.s, and[size3,and[blue,size2]]), rectangle))),iota(filter(x.s, nor[not[size2],not[yellow]])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:and[%s,%s];4:blue;4:size2;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:not[%s];4:size2;4:not[%s];4:yellow
'λx.apply(nor[size3,yellow],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size3;4:yellow;1:%s.o;2:x
'λx.forall(size2,filter(filter(x.s, nor[or[and[rectangle,size3],or[green,size1]],size3]), and[apply(size-leq,iota(filter(x.s, yellow))),apply(same_size,x.o)]))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:or[%s,%s];4:and[%s,%s];4:rectangle;4:size3;4:or[%s,%s];4:green;4:size1;4:size3;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.exists(nor[iff[apply(size-leq,x.o),and[size3,apply(same_size,x.o)]],size1], x.s)'	0:exists(%s, %s);4:nor[%s,%s];4:iff[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1;3:%s.s;2:x
'λx.forall(rectangle,filter(x.s, not[circle]))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.apply(and[not[nand[not[not[blue]],size1]],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:nand[%s,%s];4:not[%s];4:not[%s];4:blue;4:size1;4:triangle;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, and[and[or[size3,or[and[iff[apply(size-lt,iota(filter(filter(filter(x.s, not[circle]), size2), rectangle))),or[green,triangle]],and[size1,green]],rectangle]],size1],and[apply(same_shape,x.o),size2]]), blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size3;4:or[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:size2;4:rectangle;4:or[%s,%s];4:green;4:triangle;4:and[%s,%s];4:size1;4:green;4:rectangle;4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2;4:blue
'λx.apply(or[apply(same_shape,x.o),blue],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(filter(filter(x.s, not[size1]), nand[and[and[rectangle,triangle],rectangle],apply(same_shape,iota(x.s))]), yellow), circle), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:triangle;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:yellow;4:circle;4:size3
'λx.exists(or[circle,yellow], filter(filter(x.s, and[yellow,circle]), or[blue,green]))'	0:exists(%s, %s);4:or[%s,%s];4:circle;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:circle;4:or[%s,%s];4:blue;4:green
'λx.empty(filter(filter(x.s, yellow), apply(same_size,iota(filter(filter(x.s, size1), size1)))))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1
'λx.apply(and[size1,and[green,size2]],iota(filter(filter(filter(x.s, yellow), apply(size-geq,x.o)), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:and[%s,%s];4:green;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:blue
'λx.apply(size2,iota(filter(x.s, or[green,rectangle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:rectangle
'λx.contains(iota(filter(filter(x.s, and[blue,size1]), or[circle,green])), filter(filter(x.s, and[triangle,yellow]), size1))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size1;4:or[%s,%s];4:circle;4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:yellow;4:size1
'λx.apply(implies[apply(same_color,iota(x.s)),circle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:circle;1:%s.o;2:x
'λx.apply(nor[not[triangle],triangle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:not[%s];4:triangle;4:triangle;1:%s.o;2:x
'λx.forall(nand[or[size1,size2],size3],x.s)'	0:forall(%s,%s);4:nand[%s,%s];4:or[%s,%s];4:size1;4:size2;4:size3;3:%s.s;2:x
'λx.apply(and[blue,triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(x.s, and[blue,and[and[green,triangle],yellow]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:green;4:triangle;4:yellow
'λx.apply(iff[rectangle,green],iota(filter(x.s, iff[yellow,yellow])))'	0:apply(%s,%s);4:iff[%s,%s];4:rectangle;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:yellow;4:yellow
'λx.empty(filter(filter(filter(x.s, size1), size1), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1;4:size3
'λx.exists(size2, filter(x.s, or[nor[size2,and[size2,and[and[size1,or[or[size2,blue],green]],circle]]],circle]))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:nor[%s,%s];4:size2;4:and[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:or[%s,%s];4:size2;4:blue;4:green;4:circle;4:circle
'λx.apply(and[triangle,green],iota(filter(filter(filter(filter(x.s, yellow), and[size2,size3]), and[size1,yellow]), yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:size2;4:size3;4:and[%s,%s];4:size1;4:yellow;4:yellow
'λx.contains(iota(filter(filter(x.s, yellow), circle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle;3:%s.s;2:x
'λx.exists(iff[size3,size3], filter(x.s, and[apply(same_shape,iota(filter(x.s, yellow))),blue]))'	0:exists(%s, %s);4:iff[%s,%s];4:size3;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:blue
'λx.apply(yellow,iota(filter(filter(x.s, and[apply(same_color,iota(x.s)),size3]), size1)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size3;4:size1
'λx.apply(or[size1,size2],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[apply(same_shape,x.o),and[or[size3,and[or[size2,size3],not[apply(same_size,x.o)]]],yellow]],iota(filter(filter(x.s, blue), yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:or[%s,%s];4:size3;4:and[%s,%s];4:or[%s,%s];4:size2;4:size3;4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow
'λx.apply(green,iota(filter(filter(x.s, and[size3,nor[triangle,implies[apply(size-geq,iota(filter(filter(filter(filter(x.s, blue), green), circle), circle))),blue]]]), rectangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:nor[%s,%s];4:triangle;4:implies[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green;4:circle;4:circle;4:blue;4:rectangle
'λx.apply(and[apply(same_shape,x.o),nor[size1,size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:nor[%s,%s];4:size1;4:size3;1:%s.o;2:x
'λx.exists(not[and[circle,apply(same_size,iota(filter(filter(filter(x.s, size3), blue), rectangle)))]], x.s)'	0:exists(%s, %s);4:not[%s];4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue;4:rectangle;3:%s.s;2:x
'λx.apply(not[not[and[yellow,or[size1,apply(size-gt,x.o)]]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:and[%s,%s];4:yellow;4:or[%s,%s];4:size1;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(x.s, rectangle), size1)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1
'λx.apply(blue,iota(filter(filter(filter(x.s, blue), size1), green)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1;4:green
'λx.apply(and[green,size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(filter(filter(x.s, size3), or[triangle,size3]), green), yellow)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:triangle;4:size3;4:green;4:yellow
'λx.apply(or[apply(same_shape,x.o),size2],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2;1:iota(%s);3:%s.s;2:x
'λx.forall(or[apply(same_color,x.o),or[yellow,triangle]],filter(x.s, not[rectangle]))'	0:forall(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:or[%s,%s];4:yellow;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle
'λx.apply(and[not[rectangle],yellow],iota(filter(x.s, not[and[size1,circle]])))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:rectangle;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:size1;4:circle
'λx.forall(blue,filter(filter(x.s, not[or[not[and[size1,yellow]],implies[size1,size2]]]), size3))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:not[%s];4:and[%s,%s];4:size1;4:yellow;4:implies[%s,%s];4:size1;4:size2;4:size3
'λx.apply(iff[and[circle,size2],yellow],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:circle;4:size2;4:yellow;1:%s.o;2:x
'λx.apply(and[and[green,rectangle],size3],iota(filter(x.s, or[blue,and[size2,size3]])))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:green;4:rectangle;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:and[%s,%s];4:size2;4:size3
'λx.apply(nor[green,and[size2,size1]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:nor[%s,%s];4:green;4:and[%s,%s];4:size2;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(apply(same_size,iota(filter(filter(x.s, size2), blue))),iota(filter(x.s, size3)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.contains(iota(filter(filter(filter(filter(filter(x.s, size1), size1), blue), or[and[size1,circle],size3]), blue)), filter(filter(x.s, and[triangle,circle]), yellow))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1;4:blue;4:or[%s,%s];4:and[%s,%s];4:size1;4:circle;4:size3;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:circle;4:yellow
'λx.forall(blue,filter(x.s, implies[size3,blue]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size3;4:blue
'λx.apply(blue,iota(filter(filter(x.s, rectangle), and[implies[or[blue,rectangle],and[not[circle],size3]],size2])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:blue;4:rectangle;4:and[%s,%s];4:not[%s];4:circle;4:size3;4:size2
'λx.apply(apply(same_shape,x.o),iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(not[apply(size-leq,x.o)],iota(filter(filter(x.s, circle), and[rectangle,yellow])))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:rectangle;4:yellow
'λx.apply(or[rectangle,nand[and[rectangle,blue],and[circle,apply(same_shape,iota(filter(filter(filter(filter(filter(filter(filter(filter(x.s, blue), rectangle), not[and[triangle,yellow]]), not[size3]), green), yellow), apply(same_color,x.o)), rectangle)))]]],iota(filter(filter(x.s, blue), and[size3,size1])))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:nand[%s,%s];4:and[%s,%s];4:rectangle;4:blue;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle;4:not[%s];4:and[%s,%s];4:triangle;4:yellow;4:not[%s];4:size3;4:green;4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:size3;4:size1
'λx.forall(or[triangle,and[triangle,circle]],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:triangle;4:and[%s,%s];4:triangle;4:circle;3:%s.s;2:x
'λx.apply(implies[or[iff[size1,size2],and[and[not[apply(same_color,iota(x.s))],rectangle],green]],or[apply(same_shape,x.o),size2]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:or[%s,%s];4:iff[%s,%s];4:size1;4:size2;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:rectangle;4:green;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, green), size2)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size2
'λx.apply(blue,iota(filter(x.s, apply(same_shape,x.o))))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(apply(same_size,x.o),iota(filter(filter(x.s, and[apply(same_color,iota(x.s)),circle]), rectangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:circle;4:rectangle
'λx.apply(and[iff[or[apply(same_color,x.o),triangle],green],and[and[green,green],triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;4:green;4:and[%s,%s];4:and[%s,%s];4:green;4:green;4:triangle;1:%s.o;2:x
'λx.apply(and[yellow,size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:size1;1:%s.o;2:x
'λx.apply(not[triangle],iota(filter(x.s, nand[size3,and[or[triangle,size2],implies[blue,blue]]])))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size3;4:and[%s,%s];4:or[%s,%s];4:triangle;4:size2;4:implies[%s,%s];4:blue;4:blue
'λx.apply(nand[not[or[rectangle,size1]],size2],iota(filter(filter(filter(x.s, triangle), size1), size3)))'	0:apply(%s,%s);4:nand[%s,%s];4:not[%s];4:or[%s,%s];4:rectangle;4:size1;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size1;4:size3
'λx.apply(apply(same_shape,x.o),iota(filter(filter(filter(filter(filter(filter(x.s, rectangle), size2), iff[rectangle,circle]), yellow), yellow), not[and[and[or[rectangle,and[blue,and[rectangle,size2]]],circle],and[rectangle,or[and[size3,size1],implies[size2,rectangle]]]]])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2;4:iff[%s,%s];4:rectangle;4:circle;4:yellow;4:yellow;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:rectangle;4:and[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:size2;4:circle;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:size3;4:size1;4:implies[%s,%s];4:size2;4:rectangle
'λx.empty(filter(filter(filter(filter(filter(filter(filter(filter(x.s, size2), yellow), rectangle), yellow), and[not[and[size2,size3]],size3]), and[size3,triangle]), size1), and[and[and[not[apply(same_color,x.o)],green],apply(same_shape,iota(x.s))],circle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:yellow;4:rectangle;4:yellow;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:size2;4:size3;4:size3;4:and[%s,%s];4:size3;4:triangle;4:size1;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle
'λx.empty(filter(filter(filter(x.s, size3), size1), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size1;4:size1
'λx.apply(or[size1,or[blue,implies[circle,size1]]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:or[%s,%s];4:blue;4:implies[%s,%s];4:circle;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(blue,iota(x.s))'	0:apply(%s,%s);4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[rectangle,and[size3,and[and[apply(size-leq,iota(x.s)),rectangle],apply(size-geq,iota(filter(filter(filter(filter(filter(x.s, circle), size1), triangle), triangle), rectangle)))]]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:rectangle;4:and[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1;4:triangle;4:triangle;4:rectangle;1:%s.o;2:x
'λx.forall(nand[rectangle,and[circle,rectangle]],x.s)'	0:forall(%s,%s);4:nand[%s,%s];4:rectangle;4:and[%s,%s];4:circle;4:rectangle;3:%s.s;2:x
'λx.apply(or[yellow,and[not[size3],apply(same_shape,iota(x.s))]],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:and[%s,%s];4:not[%s];4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(triangle,iota(filter(x.s, apply(same_shape,iota(filter(filter(x.s, rectangle), blue))))))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue
'λx.forall(circle,filter(x.s, and[yellow,size2]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size2
'λx.exists(blue, filter(x.s, size3))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.forall(and[implies[green,size1],circle],filter(filter(x.s, rectangle), apply(same_color,x.o)))'	0:forall(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:green;4:size1;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(and[size3,not[not[and[and[size3,size2],rectangle]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:not[%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:size2;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.exists(or[not[size3],size1], filter(filter(x.s, and[yellow,circle]), size1))'	0:exists(%s, %s);4:or[%s,%s];4:not[%s];4:size3;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:circle;4:size1
'λx.apply(iff[nand[size3,size2],size2],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:nand[%s,%s];4:size3;4:size2;4:size2;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, nor[size2,nor[apply(same_shape,iota(filter(x.s, circle))),apply(same_color,x.o)]]), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size2;4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue
'λx.apply(yellow,iota(filter(filter(x.s, green), size3)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size3

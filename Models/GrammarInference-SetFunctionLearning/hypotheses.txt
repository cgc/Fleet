'λx.forall(triangle,filter(x.s, and[yellow,and[triangle,size2]]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:and[%s,%s];4:triangle;4:size2
'λx.apply(size2,iota(filter(filter(x.s, green), and[and[not[not[triangle]],apply(same_shape,x.o)],yellow])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:not[%s];4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow
'λx.exists(and[circle,iff[and[yellow,iff[yellow,rectangle]],or[size2,yellow]]], filter(filter(x.s, yellow), green))'	0:exists(%s, %s);4:and[%s,%s];4:circle;4:iff[%s,%s];4:and[%s,%s];4:yellow;4:iff[%s,%s];4:yellow;4:rectangle;4:or[%s,%s];4:size2;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green
'λx.apply(size1,iota(filter(filter(x.s, apply(same_size,iota(x.s))), circle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:circle
'λx.apply(green,iota(filter(filter(x.s, apply(same_color,iota(filter(x.s, not[triangle])))), apply(same_shape,x.o))))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(not[or[triangle,triangle]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:triangle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(filter(x.s, and[and[not[apply(same_size,x.o)],size2],circle]), apply(same_size,x.o)), size1), size3))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2;4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1;4:size3
'λx.apply(green,iota(filter(filter(filter(filter(x.s, size2), rectangle), circle), and[circle,green])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle;4:circle;4:and[%s,%s];4:circle;4:green
'λx.true'	0:true
'λx.contains(iota(filter(x.s, not[not[triangle]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:triangle;3:%s.s;2:x
'λx.apply(iff[size3,size3],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:size3;4:size3;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(filter(x.s, size1), yellow), yellow)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow;4:yellow;3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(filter(x.s, not[size1]), blue), circle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:blue;4:circle
'λx.apply(or[and[apply(same_color,x.o),apply(same_size,iota(x.s))],yellow],iota(filter(filter(filter(x.s, blue), apply(same_color,x.o)), not[green])))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:green
'λx.apply(yellow,iota(filter(x.s, apply(same_shape,iota(filter(filter(x.s, green), and[apply(same_color,iota(filter(x.s, not[size2]))),size3]))))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:size3
'λx.forall(implies[and[not[green],not[and[size1,apply(same_color,iota(filter(filter(x.s, apply(size-leq,iota(filter(x.s, implies[size1,rectangle])))), and[size1,circle])))]]],green],filter(x.s, triangle))'	0:forall(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:not[%s];4:green;4:not[%s];4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size1;4:rectangle;4:and[%s,%s];4:size1;4:circle;4:green;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(and[rectangle,size2],iota(filter(filter(filter(x.s, iff[or[size1,not[not[and[circle,size2]]]],size3]), and[rectangle,apply(same_color,iota(x.s))]), not[circle])))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:or[%s,%s];4:size1;4:not[%s];4:not[%s];4:and[%s,%s];4:circle;4:size2;4:size3;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:not[%s];4:circle
'λx.apply(yellow,iota(filter(filter(filter(filter(x.s, rectangle), nand[green,or[or[or[size2,and[and[nand[triangle,triangle],green],circle]],size1],not[green]]]), and[green,yellow]), and[circle,circle])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:nand[%s,%s];4:green;4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:triangle;4:triangle;4:green;4:circle;4:size1;4:not[%s];4:green;4:and[%s,%s];4:green;4:yellow;4:and[%s,%s];4:circle;4:circle
'λx.forall(apply(same_size,iota(x.s)),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(x.s, nand[triangle,blue]), green)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:triangle;4:blue;4:green
'λx.apply(and[circle,size3],iota(filter(filter(x.s, triangle), size2)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2
'λx.apply(size1,iota(filter(filter(x.s, size3), or[or[blue,or[green,size3]],size1])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:or[%s,%s];4:blue;4:or[%s,%s];4:green;4:size3;4:size1
'λx.apply(triangle,iota(filter(x.s, or[green,blue])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:blue
'λx.apply(or[or[rectangle,size3],or[size2,and[rectangle,yellow]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:rectangle;4:size3;4:or[%s,%s];4:size2;4:and[%s,%s];4:rectangle;4:yellow;1:%s.o;2:x
'λx.apply(iff[size3,green],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:size3;4:green;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(filter(filter(filter(filter(filter(filter(x.s, and[circle,and[green,apply(size-gt,x.o)]]), triangle), size2), not[rectangle]), size1), rectangle), circle), circle), blue)), filter(x.s, circle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:and[%s,%s];4:green;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:triangle;4:size2;4:not[%s];4:rectangle;4:size1;4:rectangle;4:circle;4:circle;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(yellow,iota(filter(x.s, nand[size1,rectangle])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size1;4:rectangle
'λx.apply(and[and[size1,size3],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:size3;4:blue;1:%s.o;2:x
'λx.apply(not[apply(size-lt,iota(x.s))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(x.s, apply(same_shape,x.o)), nor[blue,and[yellow,and[green,triangle]]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:nor[%s,%s];4:blue;4:and[%s,%s];4:yellow;4:and[%s,%s];4:green;4:triangle
'λx.apply(apply(same_color,x.o),iota(filter(x.s, apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, size1)), filter(x.s, nand[rectangle,green]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:rectangle;4:green
'λx.apply(or[apply(same_shape,x.o),triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle;1:%s.o;2:x
'λx.apply(and[or[rectangle,size3],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:rectangle;4:size3;4:circle;1:%s.o;2:x
'λx.empty(filter(filter(x.s, and[rectangle,size1]), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:size1;4:yellow
'λx.apply(and[size3,and[apply(same_shape,iota(x.s)),and[triangle,blue]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:blue;1:%s.o;2:x
'λx.apply(and[and[green,green],and[implies[green,green],triangle]],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:green;4:green;4:and[%s,%s];4:implies[%s,%s];4:green;4:green;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[and[blue,green],and[and[nor[yellow,size2],circle],size3]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:green;4:and[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:yellow;4:size2;4:circle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(x.s, triangle), triangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:triangle
'λx.forall(yellow,filter(filter(filter(x.s, rectangle), rectangle), triangle))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle;4:triangle
'λx.contains(iota(filter(filter(filter(x.s, implies[circle,yellow]), circle), blue)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:circle;4:yellow;4:circle;4:blue;3:%s.s;2:x
'λx.exists(apply(same_size,iota(x.s)), filter(x.s, nand[green,implies[not[iff[green,and[and[circle,iff[nand[yellow,implies[size2,size3]],yellow]],size2]]],size1]]))'	0:exists(%s, %s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:green;4:implies[%s,%s];4:not[%s];4:iff[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:circle;4:iff[%s,%s];4:nand[%s,%s];4:yellow;4:implies[%s,%s];4:size2;4:size3;4:yellow;4:size2;4:size1
'λx.contains(iota(x.s), filter(x.s, and[or[or[rectangle,apply(same_shape,iota(x.s))],or[size1,size3]],yellow]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:size3;4:yellow
'λx.apply(or[size2,iff[rectangle,or[apply(same_color,x.o),circle]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:iff[%s,%s];4:rectangle;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, yellow), rectangle), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle;4:triangle
'λx.apply(not[triangle],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(apply(same_color,x.o),iota(filter(filter(x.s, blue), blue)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue
'λx.apply(blue,iota(filter(filter(x.s, rectangle), not[yellow])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:yellow
'λx.apply(and[blue,triangle],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.exists(rectangle, filter(filter(x.s, triangle), size3))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3
'λx.apply(or[apply(same_shape,iota(x.s)),or[implies[circle,and[size1,not[rectangle]]],size2]],iota(filter(x.s, or[blue,and[apply(same_color,iota(x.s)),circle]])))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:implies[%s,%s];4:circle;4:and[%s,%s];4:size1;4:not[%s];4:rectangle;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:circle
'λx.apply(yellow,iota(filter(x.s, apply(same_shape,x.o))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.forall(rectangle,filter(filter(x.s, or[not[size3],size1]), circle))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:size3;4:size1;4:circle
'λx.contains(iota(filter(filter(filter(x.s, blue), apply(size-gt,x.o)), green)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:green;3:%s.s;2:x
'λx.forall(blue,filter(filter(x.s, and[size1,size2]), blue))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size2;4:blue
'λx.contains(x.o, filter(filter(x.s, blue), blue))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue
'λx.empty(filter(filter(filter(filter(filter(x.s, size1), rectangle), implies[rectangle,size1]), not[and[triangle,size3]]), and[blue,not[yellow]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle;4:implies[%s,%s];4:rectangle;4:size1;4:not[%s];4:and[%s,%s];4:triangle;4:size3;4:and[%s,%s];4:blue;4:not[%s];4:yellow
'λx.exists(triangle, filter(filter(x.s, not[and[size2,not[and[apply(same_color,iota(x.s)),size1]]]]), implies[yellow,rectangle]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:size2;4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size1;4:implies[%s,%s];4:yellow;4:rectangle
'λx.exists(or[yellow,apply(same_color,iota(filter(filter(filter(filter(x.s, apply(size-geq,iota(x.s))), size3), triangle), and[size3,green])))], filter(x.s, or[and[size2,and[and[yellow,rectangle],blue]],not[size2]]))'	0:exists(%s, %s);4:or[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:size3;4:triangle;4:and[%s,%s];4:size3;4:green;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:yellow;4:rectangle;4:blue;4:not[%s];4:size2
'λx.apply(and[and[blue,size1],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:size1;4:circle;1:%s.o;2:x
'λx.contains(x.o, filter(filter(filter(x.s, or[size2,not[rectangle]]), implies[and[size1,size3],triangle]), and[size1,size1]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:not[%s];4:rectangle;4:implies[%s,%s];4:and[%s,%s];4:size1;4:size3;4:triangle;4:and[%s,%s];4:size1;4:size1
'λx.apply(and[or[not[size1],circle],not[size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:not[%s];4:size1;4:circle;4:not[%s];4:size1;1:%s.o;2:x
'λx.forall(size1,filter(x.s, nand[apply(same_shape,x.o),blue]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue
'λx.exists(triangle, filter(filter(x.s, blue), triangle))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle
'λx.apply(and[size3,and[not[and[and[blue,blue],blue]],size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:blue;4:blue;4:size1;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, not[apply(same_shape,x.o)])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(not[not[green]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:green;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, size3)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(blue,iota(filter(x.s, size2)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(blue,iota(filter(x.s, size1)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(implies[green,and[and[or[not[circle],not[blue]],and[size2,triangle]],implies[nor[not[and[and[triangle,triangle],size3]],size2],or[yellow,or[and[rectangle,size3],size1]]]]],iota(filter(filter(x.s, size3), apply(same_size,iota(filter(filter(x.s, rectangle), apply(same_size,iota(filter(filter(x.s, blue), not[yellow])))))))))'	0:apply(%s,%s);4:implies[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:not[%s];4:circle;4:not[%s];4:blue;4:and[%s,%s];4:size2;4:triangle;4:implies[%s,%s];4:nor[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:triangle;4:size3;4:size2;4:or[%s,%s];4:yellow;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:size3;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:yellow
'λx.apply(blue,iota(filter(x.s, green)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(triangle,iota(filter(x.s, iff[circle,and[blue,and[size2,green]]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:circle;4:and[%s,%s];4:blue;4:and[%s,%s];4:size2;4:green
'λx.apply(yellow,iota(filter(filter(filter(filter(filter(filter(filter(x.s, rectangle), yellow), and[rectangle,circle]), nor[not[circle],green]), yellow), or[blue,size1]), or[size1,size2])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:yellow;4:and[%s,%s];4:rectangle;4:circle;4:nor[%s,%s];4:not[%s];4:circle;4:green;4:yellow;4:or[%s,%s];4:blue;4:size1;4:or[%s,%s];4:size1;4:size2
'λx.apply(or[blue,triangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.forall(circle,filter(x.s, or[size2,blue]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:blue
'λx.apply(or[circle,green],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[triangle,rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:rectangle;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(filter(x.s, blue), size1), not[circle]), blue)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1;4:not[%s];4:circle;4:blue;3:%s.s;2:x
'λx.apply(and[circle,nand[circle,rectangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:nand[%s,%s];4:circle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size2,or[or[rectangle,blue],apply(same_shape,iota(filter(x.s, circle)))]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:or[%s,%s];4:or[%s,%s];4:rectangle;4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;1:%s.o;2:x
'λx.apply(iff[green,size3],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:green;4:size3;1:%s.o;2:x
'λx.apply(or[not[nand[or[green,size3],triangle]],size2],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:nand[%s,%s];4:or[%s,%s];4:green;4:size3;4:triangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.exists(size3, filter(filter(x.s, circle), iff[and[size1,or[implies[blue,apply(same_shape,x.o)],and[size2,circle]]],green]))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:iff[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:implies[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:size2;4:circle;4:green
'λx.apply(yellow,iota(filter(filter(filter(x.s, and[rectangle,not[size2]]), yellow), triangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:not[%s];4:size2;4:yellow;4:triangle
'λx.apply(or[size1,not[and[not[circle],size3]]],iota(filter(x.s, green)))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:not[%s];4:and[%s,%s];4:not[%s];4:circle;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(size1,iota(filter(filter(filter(x.s, not[implies[implies[nand[not[or[not[not[triangle]],not[and[circle,circle]]]],and[green,green]],size1],apply(same_shape,x.o)]]), triangle), nor[blue,triangle])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:implies[%s,%s];4:implies[%s,%s];4:nand[%s,%s];4:not[%s];4:or[%s,%s];4:not[%s];4:not[%s];4:triangle;4:not[%s];4:and[%s,%s];4:circle;4:circle;4:and[%s,%s];4:green;4:green;4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle;4:nor[%s,%s];4:blue;4:triangle
'λx.apply(and[green,nand[triangle,size2]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:nand[%s,%s];4:triangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size1,iff[blue,size2]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:iff[%s,%s];4:blue;4:size2;1:iota(%s);3:%s.s;2:x
'λx.forall(size2,filter(x.s, and[blue,triangle]))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:triangle
'λx.forall(circle,filter(x.s, rectangle))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(apply(same_size,x.o),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size2,and[rectangle,size2]],iota(filter(x.s, apply(size-leq,iota(filter(x.s, size2))))))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:rectangle;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(size3,iota(filter(filter(filter(filter(filter(filter(x.s, and[and[blue,size2],triangle]), green), yellow), nand[or[triangle,implies[circle,blue]],green]), iff[yellow,not[green]]), size2)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:blue;4:size2;4:triangle;4:green;4:yellow;4:nand[%s,%s];4:or[%s,%s];4:triangle;4:implies[%s,%s];4:circle;4:blue;4:green;4:iff[%s,%s];4:yellow;4:not[%s];4:green;4:size2
'λx.forall(size2,filter(x.s, size2))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.forall(size3,filter(x.s, size3))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.forall(size1,filter(x.s, size3))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.forall(size1,filter(x.s, size1))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.forall(size1,filter(x.s, size2))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.forall(size3,filter(x.s, green))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.forall(size1,filter(x.s, green))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(circle,iota(filter(filter(x.s, not[size2]), rectangle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:rectangle
'λx.apply(or[size1,size3],iota(filter(filter(x.s, green), circle)))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:circle
'λx.apply(implies[or[apply(same_color,x.o),rectangle],or[and[size1,or[triangle,green]],circle]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle;4:or[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:triangle;4:green;4:circle;1:%s.o;2:x
'λx.apply(apply(size-leq,x.o),iota(filter(filter(x.s, nor[not[not[rectangle]],and[triangle,and[rectangle,yellow]]]), iff[nor[and[size2,triangle],green],iff[green,size1]])))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:not[%s];4:not[%s];4:rectangle;4:and[%s,%s];4:triangle;4:and[%s,%s];4:rectangle;4:yellow;4:iff[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:size2;4:triangle;4:green;4:iff[%s,%s];4:green;4:size1
'λx.contains(x.o, filter(x.s, or[size1,yellow]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:yellow
'λx.forall(or[size1,not[apply(same_size,iota(x.s))]],filter(x.s, yellow))'	0:forall(%s,%s);4:or[%s,%s];4:size1;4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(and[apply(same_color,x.o),green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(filter(x.s, or[apply(size-geq,iota(x.s)),circle]), green), circle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:circle;4:green;4:circle
'λx.apply(apply(size-leq,iota(x.s)),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[blue,blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:blue;1:%s.o;2:x
'λx.apply(or[size3,not[triangle]],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.exists(and[triangle,size3], filter(x.s, circle))'	0:exists(%s, %s);4:and[%s,%s];4:triangle;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(not[and[apply(same_size,iota(filter(filter(filter(filter(x.s, yellow), size2), nand[triangle,triangle]), or[triangle,green]))),implies[iff[not[circle],triangle],size3]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2;4:nand[%s,%s];4:triangle;4:triangle;4:or[%s,%s];4:triangle;4:green;4:implies[%s,%s];4:iff[%s,%s];4:not[%s];4:circle;4:triangle;4:size3;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(filter(x.s, size2), rectangle), nand[circle,nand[triangle,or[or[nor[triangle,blue],not[and[size3,rectangle]]],size3]]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle;4:nand[%s,%s];4:circle;4:nand[%s,%s];4:triangle;4:or[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:triangle;4:blue;4:not[%s];4:and[%s,%s];4:size3;4:rectangle;4:size3
'λx.forall(size1,filter(x.s, and[apply(same_color,iota(filter(filter(x.s, circle), apply(same_shape,iota(filter(x.s, and[rectangle,green])))))),apply(same_color,iota(x.s))]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(x.s, and[size3,and[triangle,and[size2,yellow]]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:and[%s,%s];4:triangle;4:and[%s,%s];4:size2;4:yellow
'λx.exists(and[green,size2], filter(filter(x.s, and[blue,blue]), size2))'	0:exists(%s, %s);4:and[%s,%s];4:green;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:blue;4:size2
'λx.exists(apply(same_shape,iota(x.s)), filter(x.s, blue))'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.contains(x.o, filter(filter(x.s, green), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:green
'λx.contains(x.o, filter(filter(x.s, green), size1))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1
'λx.apply(apply(same_size,iota(filter(filter(filter(x.s, green), or[size1,yellow]), yellow))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:size1;4:yellow;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(x.s), filter(filter(filter(filter(x.s, blue), size3), not[and[not[blue],size2]]), yellow))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3;4:not[%s];4:and[%s,%s];4:not[%s];4:blue;4:size2;4:yellow
'λx.forall(or[nor[and[green,triangle],rectangle],yellow],filter(x.s, triangle))'	0:forall(%s,%s);4:or[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:green;4:triangle;4:rectangle;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.contains(x.o, filter(x.s, and[and[size3,size2],not[size2]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size3;4:size2;4:not[%s];4:size2
'λx.contains(iota(filter(filter(filter(filter(filter(x.s, yellow), triangle), green), triangle), triangle)), filter(x.s, size1))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle;4:green;4:triangle;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(and[and[circle,size1],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:size1;4:green;1:%s.o;2:x
'λx.exists(or[size2,yellow], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:size2;4:yellow;3:%s.s;2:x
'λx.forall(and[rectangle,size1],filter(filter(filter(x.s, size3), not[size3]), triangle))'	0:forall(%s,%s);4:and[%s,%s];4:rectangle;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:size3;4:triangle
'λx.apply(or[size2,iff[triangle,green]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:iff[%s,%s];4:triangle;4:green;1:%s.o;2:x
'λx.exists(and[yellow,blue], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:yellow;4:blue;3:%s.s;2:x
'λx.apply(apply(same_size,iota(filter(x.s, size3))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(filter(x.s, size1), rectangle), size1)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle;4:size1
'λx.apply(triangle,iota(filter(x.s, nand[size2,apply(same_color,x.o)])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.forall(and[not[nor[rectangle,or[rectangle,apply(size-leq,x.o)]]],blue],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:not[%s];4:nor[%s,%s];4:rectangle;4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:blue;3:%s.s;2:x
'λx.exists(implies[rectangle,or[size2,green]], filter(filter(x.s, apply(same_color,iota(filter(filter(x.s, blue), apply(same_color,x.o))))), circle))'	0:exists(%s, %s);4:implies[%s,%s];4:rectangle;4:or[%s,%s];4:size2;4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle
'λx.contains(iota(filter(x.s, nand[size1,size1])), filter(x.s, circle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size1;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(or[triangle,circle],iota(filter(filter(x.s, yellow), size3)))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size3
'λx.contains(x.o, filter(x.s, and[apply(same_color,x.o),green]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green
'λx.exists(and[triangle,and[green,size1]], filter(filter(x.s, and[green,green]), circle))'	0:exists(%s, %s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:green;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:green;4:circle
'λx.forall(size3,filter(x.s, not[and[iff[rectangle,blue],and[not[apply(size-geq,x.o)],iff[circle,size3]]]]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:iff[%s,%s];4:rectangle;4:blue;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:iff[%s,%s];4:circle;4:size3
'λx.apply(and[green,green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:green;1:%s.o;2:x
'λx.apply(implies[green,or[yellow,apply(same_size,x.o)]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:green;4:or[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[nand[green,size2],rectangle],iota(filter(x.s, and[circle,nor[nor[nor[green,not[size2]],size1],and[size3,or[yellow,circle]]]])))'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:green;4:size2;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:nor[%s,%s];4:nor[%s,%s];4:nor[%s,%s];4:green;4:not[%s];4:size2;4:size1;4:and[%s,%s];4:size3;4:or[%s,%s];4:yellow;4:circle
'λx.contains(x.o, filter(filter(x.s, green), apply(same_shape,iota(x.s))))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(and[not[rectangle],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:rectangle;4:circle;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(filter(x.s, and[blue,apply(same_size,x.o)]), size2), size1)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2;4:size1
'λx.apply(apply(same_size,iota(filter(x.s, blue))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.apply(implies[apply(same_color,x.o),rectangle],iota(filter(filter(filter(filter(x.s, triangle), circle), apply(same_shape,iota(filter(x.s, rectangle)))), rectangle)))'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle
'λx.empty(filter(filter(x.s, not[green]), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:size1
'λx.apply(or[and[green,rectangle],green],iota(filter(x.s, apply(same_shape,x.o))))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:green;4:rectangle;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.forall(blue,filter(x.s, apply(size-leq,x.o)))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:%s.o;2:x
'λx.forall(blue,filter(x.s, and[or[green,size3],yellow]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:green;4:size3;4:yellow
'λx.apply(or[yellow,not[and[triangle,size1]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:not[%s];4:and[%s,%s];4:triangle;4:size1;1:%s.o;2:x
'λx.apply(or[or[not[triangle],not[size2]],apply(same_color,iota(filter(filter(filter(x.s, rectangle), blue), size1)))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:not[%s];4:triangle;4:not[%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue;4:size1;1:%s.o;2:x
'λx.forall(triangle,filter(x.s, not[size2]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2
'λx.exists(and[and[blue,size1],green], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:blue;4:size1;4:green;3:%s.s;2:x
'λx.empty(filter(filter(x.s, rectangle), apply(same_shape,iota(x.s))))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(and[circle,not[and[blue,not[size3]]]],iota(filter(filter(x.s, green), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:not[%s];4:and[%s,%s];4:blue;4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue
'λx.apply(and[nand[green,nand[yellow,rectangle]],implies[or[size3,yellow],size2]],iota(filter(x.s, apply(same_shape,x.o))))'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:green;4:nand[%s,%s];4:yellow;4:rectangle;4:implies[%s,%s];4:or[%s,%s];4:size3;4:yellow;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.exists(and[or[size1,not[or[rectangle,rectangle]]],apply(same_shape,iota(filter(filter(x.s, and[green,or[implies[nor[circle,and[size3,rectangle]],yellow],green]]), size1)))], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:or[%s,%s];4:size1;4:not[%s];4:or[%s,%s];4:rectangle;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:or[%s,%s];4:implies[%s,%s];4:nor[%s,%s];4:circle;4:and[%s,%s];4:size3;4:rectangle;4:yellow;4:green;4:size1;3:%s.s;2:x
'λx.exists(size2, filter(filter(x.s, not[apply(size-gt,x.o)]), and[apply(same_shape,iota(filter(x.s, rectangle))),apply(same_shape,x.o)]))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(or[and[size3,circle],yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size3;4:circle;4:yellow;1:%s.o;2:x
'λx.apply(iff[nand[size1,size3],circle],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:iff[%s,%s];4:nand[%s,%s];4:size1;4:size3;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(apply(same_color,iota(filter(filter(x.s, size3), triangle))),iota(filter(x.s, and[circle,size3])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size3
'λx.apply(and[size2,blue],iota(filter(filter(filter(filter(filter(x.s, yellow), not[blue]), and[rectangle,not[or[nor[size1,rectangle],and[rectangle,size2]]]]), and[rectangle,triangle]), size2)))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:blue;4:and[%s,%s];4:rectangle;4:not[%s];4:or[%s,%s];4:nor[%s,%s];4:size1;4:rectangle;4:and[%s,%s];4:rectangle;4:size2;4:and[%s,%s];4:rectangle;4:triangle;4:size2
'λx.apply(and[size1,or[circle,not[size3]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:or[%s,%s];4:circle;4:not[%s];4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[triangle,rectangle],iota(filter(filter(filter(x.s, triangle), and[or[apply(same_shape,x.o),and[and[not[apply(same_shape,x.o)],size2],and[apply(size-gt,iota(x.s)),size3]]],not[and[green,size1]]]), rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2;4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:size3;4:not[%s];4:and[%s,%s];4:green;4:size1;4:rectangle
'λx.apply(and[blue,apply(same_shape,iota(x.s))],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.forall(not[circle],filter(x.s, not[size2]))'	0:forall(%s,%s);4:not[%s];4:circle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2
'λx.apply(nand[size2,triangle],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:size2;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(filter(x.s, or[not[and[size1,iff[triangle,blue]]],size2]), circle), blue)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:size1;4:iff[%s,%s];4:triangle;4:blue;4:size2;4:circle;4:blue
'λx.apply(nand[size1,triangle],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:size1;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, rectangle)), filter(x.s, rectangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(size3,iota(filter(filter(filter(filter(filter(x.s, implies[apply(same_color,iota(filter(filter(filter(filter(filter(x.s, size3), yellow), or[and[or[and[green,circle],yellow],size3],blue]), yellow), blue))),circle]), circle), or[size2,green]), size1), not[size2])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow;4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:green;4:circle;4:yellow;4:size3;4:blue;4:yellow;4:blue;4:circle;4:circle;4:or[%s,%s];4:size2;4:green;4:size1;4:not[%s];4:size2
'λx.apply(nor[green,not[triangle]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:green;4:not[%s];4:triangle;1:%s.o;2:x
'λx.contains(iota(x.s), filter(x.s, nor[and[circle,circle],size2]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:and[%s,%s];4:circle;4:circle;4:size2
'λx.apply(iff[blue,size1],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:blue;4:size1;1:%s.o;2:x
'λx.exists(and[and[circle,blue],size1], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:circle;4:blue;4:size1;3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(filter(filter(filter(filter(x.s, not[or[not[yellow],yellow]]), circle), size3), rectangle), circle), size1)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:not[%s];4:yellow;4:yellow;4:circle;4:size3;4:rectangle;4:circle;4:size1
'λx.apply(green,iota(filter(x.s, or[not[and[or[apply(same_shape,x.o),not[and[green,or[triangle,or[rectangle,circle]]]]],triangle]],rectangle])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:green;4:or[%s,%s];4:triangle;4:or[%s,%s];4:rectangle;4:circle;4:triangle;4:rectangle
'λx.apply(green,iota(filter(x.s, implies[triangle,yellow])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:triangle;4:yellow
'λx.empty(filter(filter(x.s, green), apply(same_shape,x.o)))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.exists(green, filter(filter(filter(x.s, circle), blue), and[size2,yellow]))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue;4:and[%s,%s];4:size2;4:yellow
'λx.contains(x.o, filter(filter(x.s, triangle), not[yellow]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:not[%s];4:yellow
'λx.apply(size2,iota(filter(filter(x.s, not[nand[not[and[not[triangle],size3]],or[or[implies[rectangle,apply(same_shape,iota(filter(x.s, size3)))],iff[circle,size2]],rectangle]]]), apply(same_shape,x.o))))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:nand[%s,%s];4:not[%s];4:and[%s,%s];4:not[%s];4:triangle;4:size3;4:or[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:iff[%s,%s];4:circle;4:size2;4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(filter(filter(filter(x.s, and[size2,blue]), green), or[yellow,and[size2,size2]]), triangle), triangle), green)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:blue;4:green;4:or[%s,%s];4:yellow;4:and[%s,%s];4:size2;4:size2;4:triangle;4:triangle;4:green;3:%s.s;2:x
'λx.apply(not[implies[green,green]],x.o)'	0:apply(%s,%s);4:not[%s];4:implies[%s,%s];4:green;4:green;1:%s.o;2:x
'λx.apply(not[not[size1]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:size1;1:%s.o;2:x
'λx.apply(not[not[size2]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:size2;1:%s.o;2:x
'λx.apply(not[not[size3]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:size3;1:%s.o;2:x
'λx.forall(size3,filter(filter(x.s, yellow), and[apply(size-lt,iota(x.s)),or[green,size3]]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:green;4:size3
'λx.apply(apply(same_color,iota(filter(x.s, or[green,and[circle,size3]]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:and[%s,%s];4:circle;4:size3;1:%s.o;2:x
'λx.apply(apply(same_color,x.o),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.exists(apply(same_shape,iota(x.s)), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(not[and[or[blue,size1],yellow]],iota(filter(x.s, not[and[or[green,and[not[green],triangle]],triangle]])))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:or[%s,%s];4:blue;4:size1;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:or[%s,%s];4:green;4:and[%s,%s];4:not[%s];4:green;4:triangle;4:triangle
'λx.apply(not[and[or[yellow,size2],rectangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:or[%s,%s];4:yellow;4:size2;4:rectangle;1:%s.o;2:x
'λx.apply(and[apply(same_size,iota(filter(filter(x.s, size2), circle))),circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[not[yellow],rectangle],and[nand[not[rectangle],size1],size3]],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:yellow;4:rectangle;4:and[%s,%s];4:nand[%s,%s];4:not[%s];4:rectangle;4:size1;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.exists(and[and[size3,size1],and[blue,triangle]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:size3;4:size1;4:and[%s,%s];4:blue;4:triangle;3:%s.s;2:x
'λx.exists(or[yellow,not[rectangle]], filter(filter(x.s, nor[rectangle,and[circle,green]]), and[rectangle,green]))'	0:exists(%s, %s);4:or[%s,%s];4:yellow;4:not[%s];4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:rectangle;4:and[%s,%s];4:circle;4:green;4:and[%s,%s];4:rectangle;4:green
'λx.apply(iff[rectangle,size1],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:rectangle;4:size1;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(x.s, or[size2,implies[triangle,implies[circle,size3]]]), circle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:implies[%s,%s];4:triangle;4:implies[%s,%s];4:circle;4:size3;4:circle
'λx.forall(triangle,filter(x.s, or[size3,not[circle]]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:not[%s];4:circle
'λx.apply(or[apply(same_size,x.o),size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1;1:%s.o;2:x
'λx.apply(or[apply(same_size,x.o),size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;1:%s.o;2:x
'λx.apply(or[not[or[nor[iff[apply(size-gt,iota(x.s)),or[apply(size-lt,iota(filter(filter(x.s, yellow), size2))),size2]],apply(same_shape,x.o)],and[triangle,yellow]]],green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:or[%s,%s];4:nor[%s,%s];4:iff[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2;4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:triangle;4:yellow;4:green;1:%s.o;2:x
'λx.exists(and[yellow,and[size1,size1]], filter(filter(filter(x.s, size2), yellow), size3))'	0:exists(%s, %s);4:and[%s,%s];4:yellow;4:and[%s,%s];4:size1;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:yellow;4:size3
'λx.forall(size1,filter(filter(filter(x.s, triangle), and[iff[and[size2,blue],and[blue,and[or[size3,apply(same_shape,x.o)],and[rectangle,and[size3,triangle]]]]],and[rectangle,size2]]), size2))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:size2;4:blue;4:and[%s,%s];4:blue;4:and[%s,%s];4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:size3;4:triangle;4:and[%s,%s];4:rectangle;4:size2;4:size2
'λx.forall(not[circle],x.s)'	0:forall(%s,%s);4:not[%s];4:circle;3:%s.s;2:x
'λx.apply(and[apply(same_shape,x.o),yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow;1:%s.o;2:x
'λx.exists(circle, filter(filter(filter(filter(x.s, or[not[apply(size-gt,iota(x.s))],circle]), yellow), yellow), implies[rectangle,green]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:circle;4:yellow;4:yellow;4:implies[%s,%s];4:rectangle;4:green
'λx.apply(size1,iota(filter(x.s, and[triangle,circle])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:circle
'λx.apply(green,iota(filter(x.s, or[rectangle,yellow])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:yellow
'λx.empty(filter(filter(x.s, triangle), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:yellow
'λx.exists(size3, filter(filter(x.s, circle), triangle))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle
'λx.apply(iff[rectangle,green],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:rectangle;4:green;1:%s.o;2:x
'λx.apply(and[apply(same_color,x.o),or[size1,rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:or[%s,%s];4:size1;4:rectangle;1:%s.o;2:x
'λx.apply(apply(size-geq,iota(filter(filter(x.s, apply(size-lt,x.o)), rectangle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:rectangle;1:%s.o;2:x
'λx.exists(and[size2,green], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:size2;4:green;3:%s.s;2:x
'λx.apply(or[rectangle,nor[yellow,size2]],iota(filter(filter(x.s, iff[nand[blue,rectangle],and[triangle,rectangle]]), nand[circle,iff[size2,or[apply(same_shape,iota(filter(x.s, not[size1]))),not[circle]]]])))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:nor[%s,%s];4:yellow;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:nand[%s,%s];4:blue;4:rectangle;4:and[%s,%s];4:triangle;4:rectangle;4:nand[%s,%s];4:circle;4:iff[%s,%s];4:size2;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:not[%s];4:circle
'λx.apply(and[yellow,and[not[or[size2,circle]],triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:and[%s,%s];4:not[%s];4:or[%s,%s];4:size2;4:circle;4:triangle;1:%s.o;2:x
'λx.apply(iff[green,green],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:green;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[size2,size2],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size2;4:size2;4:green;1:%s.o;2:x
'λx.apply(not[not[size1]],iota(filter(filter(x.s, size3), size1)))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size1
'λx.contains(x.o, filter(x.s, or[apply(same_color,x.o),size3]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3
'λx.exists(and[green,triangle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:green;4:triangle;3:%s.s;2:x
'λx.apply(and[apply(same_color,iota(x.s)),size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size1;1:%s.o;2:x
'λx.apply(iff[rectangle,or[green,and[size1,size3]]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:rectangle;4:or[%s,%s];4:green;4:and[%s,%s];4:size1;4:size3;1:%s.o;2:x
'λx.apply(and[or[triangle,circle],size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:triangle;4:circle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.forall(apply(same_shape,x.o),filter(filter(filter(x.s, apply(same_shape,iota(x.s))), circle), apply(same_shape,iota(x.s))))'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.exists(size3, filter(x.s, and[green,not[yellow]]))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:not[%s];4:yellow
'λx.empty(filter(x.s, and[yellow,blue]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:blue
'λx.apply(apply(size-geq,iota(x.s)),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(not[and[size2,yellow]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size2;4:yellow;1:%s.o;2:x
'λx.apply(nor[circle,size3],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:circle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[blue,or[and[not[nor[not[and[apply(same_size,x.o),circle]],triangle]],blue],blue]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:blue;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:nor[%s,%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;4:triangle;4:blue;4:blue;1:%s.o;2:x
'λx.apply(and[nand[blue,blue],apply(same_shape,iota(filter(filter(filter(x.s, size1), and[apply(size-geq,x.o),triangle]), nor[size2,triangle])))],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:blue;4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:triangle;4:nor[%s,%s];4:size2;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, yellow), triangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle
'λx.apply(or[size3,blue],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[and[size3,blue],and[size3,triangle]],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:blue;4:and[%s,%s];4:size3;4:triangle;4:green;1:%s.o;2:x
'λx.forall(green,filter(filter(x.s, size3), size2))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2
'λx.empty(filter(x.s, not[nand[triangle,size1]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:nand[%s,%s];4:triangle;4:size1
'λx.contains(iota(filter(x.s, blue)), filter(filter(x.s, circle), triangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle
'λx.forall(size1,filter(filter(filter(filter(filter(filter(x.s, size2), or[green,blue]), size3), triangle), green), apply(size-lt,iota(filter(filter(x.s, circle), size3)))))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:green;4:blue;4:size3;4:triangle;4:green;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3
'λx.exists(size2, filter(filter(x.s, green), circle))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:circle
'λx.forall(triangle,filter(filter(x.s, rectangle), blue))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue
'λx.apply(nor[yellow,apply(same_color,iota(x.s))],iota(filter(x.s, or[not[or[apply(same_size,x.o),size1]],apply(same_shape,x.o)])))'	0:apply(%s,%s);4:nor[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, not[yellow]), size3), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:size3;4:size2
'λx.apply(and[and[circle,not[size2]],not[yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:not[%s];4:size2;4:not[%s];4:yellow;1:%s.o;2:x
'λx.apply(and[size1,implies[rectangle,triangle]],iota(filter(x.s, and[and[or[not[size3],circle],rectangle],or[size1,size1]])))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:implies[%s,%s];4:rectangle;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:not[%s];4:size3;4:circle;4:rectangle;4:or[%s,%s];4:size1;4:size1
'λx.apply(apply(size-geq,x.o),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[iff[circle,rectangle],nor[implies[rectangle,size2],yellow]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:circle;4:rectangle;4:nor[%s,%s];4:implies[%s,%s];4:rectangle;4:size2;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(x.s, not[triangle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.apply(and[size2,and[not[rectangle],size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:not[%s];4:rectangle;4:size3;1:%s.o;2:x
'λx.apply(and[size1,or[size1,size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:or[%s,%s];4:size1;4:size2;1:%s.o;2:x
'λx.forall(iff[yellow,iff[circle,and[and[size3,size3],circle]]],filter(filter(filter(filter(x.s, implies[apply(same_color,iota(filter(filter(filter(filter(filter(x.s, size3), yellow), or[and[or[and[green,circle],yellow],size3],blue]), yellow), blue))),circle]), circle), or[size2,green]), size1))'	0:forall(%s,%s);4:iff[%s,%s];4:yellow;4:iff[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:size3;4:size3;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow;4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:green;4:circle;4:yellow;4:size3;4:blue;4:yellow;4:blue;4:circle;4:circle;4:or[%s,%s];4:size2;4:green;4:size1
'λx.contains(iota(x.s), filter(x.s, nand[or[or[implies[apply(same_size,iota(x.s)),circle],size2],green],not[or[triangle,yellow]]]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:or[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:circle;4:size2;4:green;4:not[%s];4:or[%s,%s];4:triangle;4:yellow
'λx.exists(implies[rectangle,circle], filter(x.s, green))'	0:exists(%s, %s);4:implies[%s,%s];4:rectangle;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(or[blue,circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:circle;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, not[and[green,size3]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:green;4:size3
'λx.empty(filter(filter(x.s, and[not[size1],green]), and[apply(same_shape,x.o),or[apply(same_shape,x.o),rectangle]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:size1;4:green;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle
'λx.apply(triangle,iota(filter(filter(filter(filter(filter(x.s, size2), green), rectangle), circle), or[triangle,blue])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green;4:rectangle;4:circle;4:or[%s,%s];4:triangle;4:blue
'λx.exists(apply(same_size,iota(x.s)), filter(filter(filter(filter(filter(filter(x.s, yellow), circle), apply(same_shape,x.o)), or[apply(same_shape,x.o),size2]), circle), implies[rectangle,and[triangle,apply(same_size,x.o)]]))'	0:exists(%s, %s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2;4:circle;4:implies[%s,%s];4:rectangle;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(implies[and[blue,size2],blue],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:blue;4:size2;4:blue;1:%s.o;2:x
'λx.apply(not[size1],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(not[size3],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(not[size3],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(not[size1],iota(filter(x.s, green)))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(not[size2],iota(filter(x.s, green)))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.exists(triangle, filter(filter(x.s, size1), nand[size2,triangle]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:nand[%s,%s];4:size2;4:triangle
'λx.apply(yellow,iota(filter(filter(x.s, and[size3,and[not[circle],triangle]]), and[rectangle,size1])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:and[%s,%s];4:not[%s];4:circle;4:triangle;4:and[%s,%s];4:rectangle;4:size1
'λx.apply(size3,iota(filter(filter(x.s, or[size2,size3]), green)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:size3;4:green
'λx.exists(and[size3,size1], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:size3;4:size1;3:%s.s;2:x
'λx.apply(iff[size2,or[size3,circle]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:size2;4:or[%s,%s];4:size3;4:circle;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(x.s, iff[triangle,and[yellow,rectangle]]), yellow)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:triangle;4:and[%s,%s];4:yellow;4:rectangle;4:yellow
'λx.empty(filter(filter(filter(x.s, and[circle,size2]), size2), not[not[size1]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size2;4:size2;4:not[%s];4:not[%s];4:size1
'λx.apply(iff[green,or[size2,green]],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:green;4:or[%s,%s];4:size2;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(x.s, not[nor[or[and[size3,apply(same_color,iota(filter(x.s, rectangle)))],apply(same_size,x.o)],blue]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:nor[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue
'λx.contains(iota(filter(filter(x.s, and[triangle,size2]), or[and[and[green,apply(same_size,x.o)],size2],or[and[not[green],not[green]],rectangle]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:size2;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:green;4:not[%s];4:green;4:rectangle;3:%s.s;2:x
'λx.apply(nand[and[yellow,apply(same_color,x.o)],size2],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size2;1:iota(%s);3:%s.s;2:x
'λx.exists(blue, filter(x.s, triangle))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(nand[apply(same_color,x.o),apply(size-leq,iota(filter(x.s, rectangle)))],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;1:%s.o;2:x
'λx.apply(apply(size-leq,x.o),iota(filter(x.s, size1)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(nor[rectangle,size2],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:rectangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[rectangle,size1],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:rectangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(x.s, yellow), yellow)), filter(filter(filter(filter(filter(x.s, implies[size2,size2]), size3), size1), apply(same_shape,iota(filter(filter(filter(x.s, rectangle), size3), size2)))), circle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size2;4:size2;4:size3;4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3;4:size2;4:circle
'λx.apply(yellow,iota(filter(x.s, and[green,size1])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:size1
'λx.exists(and[size2,size1], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:size2;4:size1;3:%s.s;2:x
'λx.apply(size1,iota(filter(x.s, and[size1,or[triangle,not[not[and[apply(size-geq,x.o),apply(size-geq,iota(filter(filter(x.s, size1), rectangle)))]]]]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:or[%s,%s];4:triangle;4:not[%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle
'λx.apply(and[green,circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(x.s, not[and[size2,green]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:size2;4:green
'λx.exists(and[circle,green], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:circle;4:green;3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(filter(filter(filter(filter(filter(filter(filter(x.s, or[rectangle,and[or[not[size1],green],rectangle]]), implies[rectangle,size3]), size2), green), green), rectangle), or[rectangle,or[and[blue,circle],iff[size2,triangle]]]), size1), yellow)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:size1;4:green;4:rectangle;4:implies[%s,%s];4:rectangle;4:size3;4:size2;4:green;4:green;4:rectangle;4:or[%s,%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:blue;4:circle;4:iff[%s,%s];4:size2;4:triangle;4:size1;4:yellow
'λx.exists(and[circle,apply(same_shape,x.o)], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(and[circle,and[apply(same_size,iota(x.s)),yellow]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(x.s, and[size3,rectangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:rectangle
'λx.apply(and[nor[apply(same_size,x.o),size2],nand[or[blue,size2],green]],iota(filter(x.s, green)))'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2;4:nand[%s,%s];4:or[%s,%s];4:blue;4:size2;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[triangle,circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.forall(green,x.s)'	0:forall(%s,%s);4:green;3:%s.s;2:x
'λx.contains(iota(filter(filter(x.s, blue), and[triangle,not[yellow]])), filter(x.s, circle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:triangle;4:not[%s];4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(not[circle],iota(filter(filter(x.s, or[blue,yellow]), circle)))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:yellow;4:circle
'λx.apply(iff[size3,and[not[circle],green]],iota(filter(filter(filter(filter(x.s, and[and[apply(same_size,iota(filter(filter(x.s, size2), and[rectangle,and[size2,and[implies[blue,and[triangle,size3]],yellow]]]))),circle],size2]), size2), or[circle,size2]), size3)))'	0:apply(%s,%s);4:iff[%s,%s];4:size3;4:and[%s,%s];4:not[%s];4:circle;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:size2;4:and[%s,%s];4:implies[%s,%s];4:blue;4:and[%s,%s];4:triangle;4:size3;4:yellow;4:circle;4:size2;4:size2;4:or[%s,%s];4:circle;4:size2;4:size3
'λx.apply(triangle,iota(filter(x.s, or[circle,iff[or[rectangle,and[size2,rectangle]],nand[and[circle,and[rectangle,yellow]],size1]]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:iff[%s,%s];4:or[%s,%s];4:rectangle;4:and[%s,%s];4:size2;4:rectangle;4:nand[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:rectangle;4:yellow;4:size1
'λx.contains(iota(filter(filter(x.s, size1), rectangle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle;3:%s.s;2:x
'λx.apply(or[and[green,iff[green,iff[nand[size3,circle],nor[blue,not[triangle]]]]],size1],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:green;4:iff[%s,%s];4:green;4:iff[%s,%s];4:nand[%s,%s];4:size3;4:circle;4:nor[%s,%s];4:blue;4:not[%s];4:triangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, yellow), and[size3,apply(same_color,iota(x.s))])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(x.s, and[circle,or[and[apply(same_shape,x.o),and[rectangle,blue]],blue]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:rectangle;4:blue;4:blue
'λx.apply(or[apply(size-lt,x.o),and[and[nand[size3,green],size1],size3]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:size3;4:green;4:size1;4:size3;1:%s.o;2:x
'λx.apply(and[circle,and[circle,blue]],iota(filter(x.s, and[circle,apply(same_color,iota(filter(filter(filter(x.s, and[rectangle,apply(same_color,x.o)]), apply(same_color,x.o)), triangle)))])))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:and[%s,%s];4:circle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle
'λx.forall(green,filter(x.s, apply(same_size,x.o)))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(iff[and[size3,size2],and[rectangle,and[or[apply(same_color,x.o),circle],not[triangle]]]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:size3;4:size2;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;4:not[%s];4:triangle;1:%s.o;2:x
'λx.forall(not[not[iff[yellow,triangle]]],filter(filter(x.s, circle), circle))'	0:forall(%s,%s);4:not[%s];4:not[%s];4:iff[%s,%s];4:yellow;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:circle
'λx.apply(nand[rectangle,or[and[size1,and[blue,not[triangle]]],size3]],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:blue;4:not[%s];4:triangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(filter(filter(x.s, nor[apply(same_size,x.o),apply(same_size,iota(x.s))]), circle), rectangle), size3)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:circle;4:rectangle;4:size3
'λx.contains(x.o, filter(filter(x.s, and[rectangle,not[and[size3,not[implies[triangle,or[triangle,blue]]]]]]), not[apply(same_shape,x.o)]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:not[%s];4:and[%s,%s];4:size3;4:not[%s];4:implies[%s,%s];4:triangle;4:or[%s,%s];4:triangle;4:blue;4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(and[iff[and[or[and[size3,yellow],not[size3]],or[and[blue,and[and[circle,size3],size2]],size2]],size2],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size3;4:yellow;4:not[%s];4:size3;4:or[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:circle;4:size3;4:size2;4:size2;4:size2;4:yellow;1:%s.o;2:x
'λx.apply(and[yellow,apply(size-leq,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.exists(not[not[and[and[and[and[and[rectangle,implies[not[green],size3]],implies[yellow,and[and[yellow,or[green,size1]],green]]],and[green,implies[triangle,rectangle]]],yellow],triangle]]], x.s)'	0:exists(%s, %s);4:not[%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:implies[%s,%s];4:not[%s];4:green;4:size3;4:implies[%s,%s];4:yellow;4:and[%s,%s];4:and[%s,%s];4:yellow;4:or[%s,%s];4:green;4:size1;4:green;4:and[%s,%s];4:green;4:implies[%s,%s];4:triangle;4:rectangle;4:yellow;4:triangle;3:%s.s;2:x
'λx.apply(and[rectangle,size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:size2;1:%s.o;2:x
'λx.apply(and[rectangle,size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:size3;1:%s.o;2:x
'λx.apply(and[rectangle,size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:size1;1:%s.o;2:x
'λx.exists(and[size1,apply(same_size,iota(x.s))], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(nand[yellow,apply(same_shape,x.o)],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:yellow;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.forall(and[size2,green],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:size2;4:green;3:%s.s;2:x
'λx.apply(apply(same_size,iota(x.s)),iota(filter(x.s, not[and[circle,yellow]])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:circle;4:yellow
'λx.apply(size3,iota(filter(x.s, and[nand[and[iff[apply(same_shape,x.o),size1],blue],implies[triangle,triangle]],blue])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;4:blue;4:implies[%s,%s];4:triangle;4:triangle;4:blue
'λx.apply(and[size3,green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:green;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, apply(same_shape,iota(filter(x.s, circle)))), rectangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle
'λx.empty(filter(filter(filter(x.s, green), blue), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue;4:rectangle
'λx.apply(circle,iota(filter(filter(x.s, rectangle), size3)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3
'λx.forall(and[size3,size2],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:size3;4:size2;3:%s.s;2:x
'λx.forall(and[size3,size1],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:size3;4:size1;3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(filter(filter(filter(x.s, size1), triangle), rectangle), and[size1,and[size3,circle]]), circle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle;4:rectangle;4:and[%s,%s];4:size1;4:and[%s,%s];4:size3;4:circle;4:circle
'λx.forall(and[size1,size3],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:size1;4:size3;3:%s.s;2:x
'λx.apply(and[or[implies[green,size1],and[and[yellow,blue],apply(same_shape,x.o)]],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:green;4:size1;4:and[%s,%s];4:and[%s,%s];4:yellow;4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle;1:%s.o;2:x
'λx.apply(and[and[and[rectangle,size2],green],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size2;4:green;4:size1;1:%s.o;2:x
'λx.apply(and[or[or[size2,green],triangle],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:size2;4:green;4:triangle;4:green;1:%s.o;2:x
'λx.apply(and[green,size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(and[green,size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[green,size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[blue,triangle],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:iff[%s,%s];4:blue;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(blue,iota(filter(filter(x.s, size1), rectangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle
'λx.forall(green,filter(x.s, and[yellow,green]))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:green
'λx.apply(and[or[blue,nor[and[size2,triangle],not[size1]]],blue],iota(filter(filter(x.s, rectangle), not[apply(same_shape,iota(filter(filter(x.s, size3), not[circle])))])))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:blue;4:nor[%s,%s];4:and[%s,%s];4:size2;4:triangle;4:not[%s];4:size1;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:circle
'λx.forall(and[size2,size3],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:size2;4:size3;3:%s.s;2:x
'λx.forall(and[size2,size1],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:size2;4:size1;3:%s.s;2:x
'λx.exists(size2, filter(filter(x.s, green), or[not[apply(size-geq,x.o)],size1]))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:size1
'λx.apply(rectangle,iota(filter(filter(filter(x.s, not[triangle]), apply(same_color,iota(filter(filter(filter(x.s, blue), triangle), and[not[yellow],size3])))), size2)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle;4:and[%s,%s];4:not[%s];4:yellow;4:size3;4:size2
'λx.exists(size2, filter(filter(x.s, yellow), and[size3,and[iff[not[nor[blue,green]],triangle],green]]))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:size3;4:and[%s,%s];4:iff[%s,%s];4:not[%s];4:nor[%s,%s];4:blue;4:green;4:triangle;4:green
'λx.apply(not[or[and[circle,and[and[nand[green,nor[yellow,blue]],apply(same_size,iota(filter(x.s, green)))],triangle]],size3]],iota(filter(filter(x.s, triangle), and[rectangle,blue])))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:green;4:nor[%s,%s];4:yellow;4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:triangle;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:rectangle;4:blue
'λx.exists(triangle, filter(x.s, nor[size2,green]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size2;4:green
'λx.apply(apply(same_size,iota(filter(filter(filter(filter(filter(filter(filter(filter(filter(x.s, blue), apply(same_color,x.o)), or[size2,triangle]), size3), triangle), triangle), yellow), size1), not[green]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:or[%s,%s];4:size2;4:triangle;4:size3;4:triangle;4:triangle;4:yellow;4:size1;4:not[%s];4:green;1:%s.o;2:x
'λx.forall(circle,filter(x.s, apply(same_shape,iota(x.s))))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.forall(green,filter(x.s, circle))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.empty(filter(filter(x.s, size3), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue
'λx.apply(and[rectangle,yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:yellow;1:%s.o;2:x
'λx.apply(or[size2,blue],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(x.s, and[size2,apply(same_size,x.o)])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(x.s, not[nand[and[blue,size3],and[size2,and[size3,size3]]]]), yellow)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:nand[%s,%s];4:and[%s,%s];4:blue;4:size3;4:and[%s,%s];4:size2;4:and[%s,%s];4:size3;4:size3;4:yellow
'λx.exists(and[size3,and[yellow,apply(size-leq,x.o)]], filter(filter(x.s, rectangle), yellow))'	0:exists(%s, %s);4:and[%s,%s];4:size3;4:and[%s,%s];4:yellow;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:yellow
'λx.apply(implies[and[circle,apply(same_size,iota(filter(filter(filter(x.s, and[yellow,blue]), yellow), triangle)))],blue],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:blue;4:yellow;4:triangle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(or[yellow,circle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:circle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, apply(same_color,iota(x.s)))), filter(filter(filter(filter(x.s, and[rectangle,not[green]]), circle), apply(same_color,iota(x.s))), green))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:not[%s];4:green;4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:green
'λx.apply(and[yellow,not[apply(same_color,x.o)]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.empty(filter(filter(x.s, not[rectangle]), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;4:green
'λx.empty(filter(filter(x.s, not[rectangle]), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;4:size3
'λx.apply(not[and[or[circle,circle],apply(same_shape,iota(x.s))]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:or[%s,%s];4:circle;4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(not[not[and[green,size2]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:and[%s,%s];4:green;4:size2;1:%s.o;2:x
'λx.exists(rectangle, filter(x.s, not[apply(same_shape,iota(x.s))]))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[nand[yellow,implies[nand[apply(size-lt,x.o),size1],yellow]],and[size3,not[size2]]],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:nand[%s,%s];4:yellow;4:implies[%s,%s];4:nand[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:size1;4:yellow;4:and[%s,%s];4:size3;4:not[%s];4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_color,iota(filter(x.s, size2))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size1,green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:green;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, and[green,nand[or[and[not[and[blue,size1]],blue],not[size1]],or[not[size3],and[blue,nand[green,triangle]]]]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:nand[%s,%s];4:or[%s,%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:blue;4:size1;4:blue;4:not[%s];4:size1;4:or[%s,%s];4:not[%s];4:size3;4:and[%s,%s];4:blue;4:nand[%s,%s];4:green;4:triangle
'λx.apply(and[yellow,and[size3,green]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:and[%s,%s];4:size3;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(x.s, or[yellow,and[not[rectangle],size2]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:and[%s,%s];4:not[%s];4:rectangle;4:size2
'λx.empty(filter(filter(filter(filter(filter(x.s, and[triangle,yellow]), size3), size1), circle), or[and[blue,apply(same_color,iota(x.s))],size2]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:yellow;4:size3;4:size1;4:circle;4:or[%s,%s];4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size2
'λx.exists(blue, filter(x.s, apply(same_color,iota(x.s))))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(x.s, apply(same_size,iota(filter(x.s, not[triangle]))))))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.apply(size1,iota(filter(filter(filter(filter(filter(x.s, not[implies[implies[nand[blue,and[green,green]],size1],apply(same_shape,x.o)]]), triangle), nor[blue,triangle]), not[or[blue,rectangle]]), or[not[apply(size-geq,x.o)],blue])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:implies[%s,%s];4:implies[%s,%s];4:nand[%s,%s];4:blue;4:and[%s,%s];4:green;4:green;4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle;4:nor[%s,%s];4:blue;4:triangle;4:not[%s];4:or[%s,%s];4:blue;4:rectangle;4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:blue
'λx.contains(iota(filter(x.s, apply(size-leq,iota(x.s)))), filter(x.s, or[blue,rectangle]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:rectangle
'λx.apply(or[circle,implies[and[nand[rectangle,not[size1]],blue],blue]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:implies[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:rectangle;4:not[%s];4:size1;4:blue;4:blue;1:%s.o;2:x
'λx.apply(and[size3,rectangle],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.exists(size1, filter(filter(filter(filter(x.s, size3), and[apply(same_size,iota(x.s)),and[rectangle,or[rectangle,blue]]]), not[and[not[not[apply(same_color,x.o)]],size1]]), size2))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:rectangle;4:blue;4:not[%s];4:and[%s,%s];4:not[%s];4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1;4:size2
'λx.contains(x.o, filter(x.s, and[apply(same_shape,x.o),and[not[circle],and[not[or[nand[circle,circle],and[green,blue]]],triangle]]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:not[%s];4:circle;4:and[%s,%s];4:not[%s];4:or[%s,%s];4:nand[%s,%s];4:circle;4:circle;4:and[%s,%s];4:green;4:blue;4:triangle
'λx.apply(not[apply(same_size,iota(x.s))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.forall(yellow,filter(filter(x.s, size1), or[not[or[size3,implies[circle,size2]]],size3]))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:or[%s,%s];4:not[%s];4:or[%s,%s];4:size3;4:implies[%s,%s];4:circle;4:size2;4:size3
'λx.apply(and[size2,or[not[size1],nor[rectangle,and[implies[circle,yellow],circle]]]],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:or[%s,%s];4:not[%s];4:size1;4:nor[%s,%s];4:rectangle;4:and[%s,%s];4:implies[%s,%s];4:circle;4:yellow;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(nand[and[yellow,yellow],and[not[and[yellow,size3]],triangle]],iota(filter(x.s, and[yellow,green])))'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:yellow;4:yellow;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:yellow;4:size3;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:green
'λx.apply(and[apply(same_color,iota(x.s)),blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.apply(and[size2,green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:green;1:%s.o;2:x
'λx.contains(iota(x.s), filter(x.s, not[or[green,circle]]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:green;4:circle
'λx.apply(or[not[size1],triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:size1;4:triangle;1:%s.o;2:x
'λx.apply(iff[apply(same_shape,iota(x.s)),green],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:green;1:%s.o;2:x
'λx.apply(and[circle,iff[and[or[apply(same_size,iota(x.s)),not[not[triangle]]],yellow],green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:iff[%s,%s];4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:not[%s];4:not[%s];4:triangle;4:yellow;4:green;1:%s.o;2:x
'λx.apply(or[not[green],not[green]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:green;4:not[%s];4:green;1:%s.o;2:x
'λx.apply(iff[yellow,apply(same_shape,iota(x.s))],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(and[not[and[apply(same_shape,iota(x.s)),and[nand[circle,yellow],and[circle,size1]]]],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:nand[%s,%s];4:circle;4:yellow;4:and[%s,%s];4:circle;4:size1;4:rectangle;1:%s.o;2:x
'λx.apply(and[triangle,or[size3,not[blue]]],iota(filter(x.s, implies[yellow,apply(same_color,iota(x.s))])))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:or[%s,%s];4:size3;4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(not[not[triangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:triangle;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, size3), apply(same_size,x.o))))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.forall(green,filter(x.s, size3))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(blue, filter(filter(x.s, triangle), blue))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue
'λx.forall(apply(same_shape,x.o),filter(x.s, blue))'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(apply(same_size,x.o),iota(filter(filter(filter(x.s, yellow), green), size1)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green;4:size1
'λx.apply(nor[green,rectangle],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:green;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, green), circle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:circle
'λx.apply(yellow,iota(filter(filter(x.s, size1), blue)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue
'λx.apply(size3,iota(filter(filter(x.s, apply(same_size,x.o)), size3)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3
'λx.apply(and[green,yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:yellow;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, rectangle), yellow)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:yellow
'λx.apply(apply(same_color,iota(filter(filter(x.s, size1), size3))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size3;1:%s.o;2:x
'λx.forall(and[circle,yellow],filter(filter(x.s, size3), size3))'	0:forall(%s,%s);4:and[%s,%s];4:circle;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3
'λx.apply(size2,iota(filter(x.s, not[size1])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1
'λx.apply(size3,iota(filter(x.s, not[size2])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2
'λx.apply(size1,iota(filter(x.s, not[size1])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1
'λx.apply(size1,iota(filter(x.s, not[size2])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2
'λx.apply(and[and[blue,size1],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:size1;4:yellow;1:%s.o;2:x
'λx.apply(not[apply(size-lt,x.o)],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(nand[nor[green,apply(same_color,x.o)],iff[yellow,yellow]],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:nor[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:iff[%s,%s];4:yellow;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(x.s, not[size1])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1
'λx.apply(green,iota(filter(x.s, not[size3])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3
'λx.apply(circle,iota(filter(x.s, and[yellow,triangle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:triangle
'λx.contains(iota(filter(filter(filter(filter(x.s, triangle), triangle), size2), and[green,or[size1,blue]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:triangle;4:size2;4:and[%s,%s];4:green;4:or[%s,%s];4:size1;4:blue;3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(x.s, nor[rectangle,circle]), or[yellow,size1])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:rectangle;4:circle;4:or[%s,%s];4:yellow;4:size1
'λx.apply(and[size2,and[and[yellow,circle],size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:yellow;4:circle;4:size2;1:%s.o;2:x
'λx.contains(iota(filter(x.s, circle)), filter(filter(filter(x.s, green), and[implies[size2,rectangle],blue]), green))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:implies[%s,%s];4:size2;4:rectangle;4:blue;4:green
'λx.apply(not[size1],iota(filter(filter(filter(x.s, blue), or[size3,circle]), rectangle)))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:size3;4:circle;4:rectangle
'λx.empty(filter(filter(filter(x.s, or[circle,yellow]), not[rectangle]), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:yellow;4:not[%s];4:rectangle;4:triangle
'λx.apply(and[rectangle,apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(iff[nor[size1,size3],yellow],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:nor[%s,%s];4:size1;4:size3;4:yellow;1:%s.o;2:x
'λx.apply(or[size1,green],iota(filter(x.s, and[rectangle,triangle])))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:triangle
'λx.apply(size1,iota(filter(filter(x.s, size2), circle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle
'λx.apply(size1,iota(filter(filter(x.s, size1), circle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle
'λx.apply(size2,iota(filter(filter(x.s, size3), circle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle
'λx.apply(or[apply(same_color,iota(filter(x.s, and[size1,size3]))),and[and[size2,triangle],yellow]],iota(filter(filter(x.s, and[green,or[triangle,not[and[blue,and[size3,green]]]]]), blue)))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size3;4:and[%s,%s];4:and[%s,%s];4:size2;4:triangle;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:or[%s,%s];4:triangle;4:not[%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:size3;4:green;4:blue
'λx.apply(and[and[and[size3,green],size1],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:green;4:size1;4:circle;1:%s.o;2:x
'λx.apply(nor[size2,not[circle]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size2;4:not[%s];4:circle;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, not[and[size2,size3]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:size2;4:size3
'λx.apply(yellow,iota(x.s))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(or[yellow,size2],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(nand[yellow,apply(same_color,iota(filter(x.s, size1)))],iota(filter(x.s, and[implies[or[blue,not[and[blue,circle]]],size1],triangle])))'	0:apply(%s,%s);4:nand[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:blue;4:not[%s];4:and[%s,%s];4:blue;4:circle;4:size1;4:triangle
'λx.apply(and[implies[circle,not[rectangle]],circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:circle;4:not[%s];4:rectangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.forall(not[rectangle],filter(x.s, and[triangle,green]))'	0:forall(%s,%s);4:not[%s];4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:green
'λx.apply(or[apply(same_size,x.o),apply(same_size,x.o)],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(or[size1,or[apply(same_shape,iota(x.s)),circle]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(x.s, and[iff[or[apply(same_size,x.o),yellow],apply(same_shape,iota(filter(x.s, triangle)))],not[size2]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:not[%s];4:size2
'λx.contains(x.o, filter(filter(filter(x.s, nor[rectangle,apply(same_size,iota(x.s))]), and[or[nand[green,size3],blue],apply(same_shape,iota(filter(filter(x.s, size3), not[and[blue,not[yellow]]])))]), apply(same_shape,x.o)))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:nand[%s,%s];4:green;4:size3;4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:and[%s,%s];4:blue;4:not[%s];4:yellow;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(and[triangle,blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(x.s, and[not[implies[implies[green,triangle],or[and[green,rectangle],blue]]],apply(same_shape,x.o)]), green)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:implies[%s,%s];4:implies[%s,%s];4:green;4:triangle;4:or[%s,%s];4:and[%s,%s];4:green;4:rectangle;4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green
'λx.exists(nor[green,size3], filter(x.s, circle))'	0:exists(%s, %s);4:nor[%s,%s];4:green;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.empty(filter(filter(filter(x.s, rectangle), green), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green;4:blue
'λx.forall(size1,filter(x.s, implies[blue,rectangle]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:blue;4:rectangle
'λx.apply(size3,iota(filter(x.s, or[or[circle,not[apply(same_size,iota(x.s))]],apply(same_size,x.o)])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:circle;4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, and[green,apply(same_shape,x.o)]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(and[not[circle],and[nand[size2,not[and[size2,or[blue,triangle]]]],apply(same_color,iota(filter(filter(filter(x.s, green), triangle), rectangle)))]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:circle;4:and[%s,%s];4:nand[%s,%s];4:size2;4:not[%s];4:and[%s,%s];4:size2;4:or[%s,%s];4:blue;4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:triangle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[blue,and[and[yellow,and[circle,yellow]],and[or[and[size2,rectangle],triangle],or[apply(size-geq,x.o),size3]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:circle;4:yellow;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size2;4:rectangle;4:triangle;4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(or[blue,and[rectangle,green]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(or[and[and[size2,triangle],or[nor[and[and[and[triangle,rectangle],size2],yellow],nor[yellow,size3]],size3]],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:triangle;4:or[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:rectangle;4:size2;4:yellow;4:nor[%s,%s];4:yellow;4:size3;4:size3;4:blue;1:%s.o;2:x
'λx.apply(and[and[or[triangle,circle],not[not[triangle]]],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:triangle;4:circle;4:not[%s];4:not[%s];4:triangle;4:size2;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(x.s, blue), not[size3])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:size3
'λx.apply(size2,iota(filter(filter(x.s, blue), not[size2])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:size2
'λx.apply(and[circle,or[apply(same_size,x.o),size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;1:%s.o;2:x
'λx.empty(filter(filter(x.s, apply(same_size,x.o)), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3
'λx.apply(and[triangle,not[size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:not[%s];4:size1;1:%s.o;2:x
'λx.apply(circle,x.o)'	0:apply(%s,%s);4:circle;1:%s.o;2:x
'λx.apply(apply(size-gt,x.o),iota(filter(x.s, and[size1,not[blue]])))'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:not[%s];4:blue
'λx.apply(apply(same_color,iota(filter(x.s, triangle))),iota(filter(filter(x.s, size2), size2)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2
'λx.forall(green,filter(x.s, and[blue,apply(same_size,x.o)]))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(and[rectangle,or[or[circle,not[blue]],yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:or[%s,%s];4:or[%s,%s];4:circle;4:not[%s];4:blue;4:yellow;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, nor[implies[and[yellow,or[or[apply(same_shape,x.o),size1],apply(same_color,x.o)]],triangle],size2]), rectangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:yellow;4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;4:size2;4:rectangle
'λx.apply(or[size2,or[or[green,and[size3,iff[circle,triangle]]],size1]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:or[%s,%s];4:or[%s,%s];4:green;4:and[%s,%s];4:size3;4:iff[%s,%s];4:circle;4:triangle;4:size1;1:%s.o;2:x
'λx.apply(and[and[circle,nor[blue,circle]],apply(same_size,iota(x.s))],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:nor[%s,%s];4:blue;4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.forall(yellow,filter(x.s, or[and[apply(same_shape,iota(x.s)),not[blue]],size1]))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:not[%s];4:blue;4:size1
'λx.apply(nor[yellow,triangle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:yellow;4:triangle;1:%s.o;2:x
'λx.forall(circle,filter(filter(filter(x.s, not[circle]), and[not[triangle],blue]), triangle))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:and[%s,%s];4:not[%s];4:triangle;4:blue;4:triangle
'λx.apply(size3,iota(filter(x.s, apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(x.s, apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_shape,iota(x.s)),iota(filter(x.s, size2)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(not[or[or[not[green],size3],triangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:or[%s,%s];4:not[%s];4:green;4:size3;4:triangle;1:%s.o;2:x
'λx.apply(and[circle,size2],iota(filter(filter(x.s, green), yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow
'λx.apply(rectangle,iota(filter(x.s, and[circle,green])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:green
'λx.apply(and[and[circle,and[yellow,not[size3]]],and[not[blue],yellow]],iota(filter(x.s, not[green])))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:yellow;4:not[%s];4:size3;4:and[%s,%s];4:not[%s];4:blue;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green
'λx.exists(apply(size-lt,iota(x.s)), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.exists(apply(size-leq,iota(x.s)), filter(x.s, size3))'	0:exists(%s, %s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(not[size1], filter(filter(filter(x.s, size3), yellow), nand[green,size1]))'	0:exists(%s, %s);4:not[%s];4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow;4:nand[%s,%s];4:green;4:size1
'λx.apply(size2,iota(filter(filter(x.s, or[yellow,size3]), rectangle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:size3;4:rectangle
'λx.apply(nand[triangle,rectangle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:rectangle;1:%s.o;2:x
'λx.contains(iota(filter(x.s, yellow)), filter(x.s, green))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(or[size1,yellow],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(size1,iota(filter(filter(filter(x.s, not[triangle]), apply(same_color,iota(filter(filter(filter(x.s, blue), triangle), and[not[yellow],size3])))), size2)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle;4:and[%s,%s];4:not[%s];4:yellow;4:size3;4:size2
'λx.contains(iota(filter(filter(filter(filter(x.s, iff[or[size1,apply(size-lt,iota(x.s))],and[green,blue]]), size2), green), apply(same_color,x.o))), filter(filter(filter(filter(x.s, or[blue,green]), blue), rectangle), or[green,and[triangle,yellow]]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:or[%s,%s];4:size1;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:green;4:blue;4:size2;4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:green;4:blue;4:rectangle;4:or[%s,%s];4:green;4:and[%s,%s];4:triangle;4:yellow
'λx.apply(or[apply(same_shape,x.o),green],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(x.s, circle), and[size2,not[and[or[blue,size2],triangle]]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:size2;4:not[%s];4:and[%s,%s];4:or[%s,%s];4:blue;4:size2;4:triangle
'λx.empty(filter(filter(x.s, triangle), and[circle,circle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:circle;4:circle
'λx.apply(or[or[and[rectangle,apply(same_size,iota(x.s))],triangle],green],iota(filter(x.s, and[iff[green,green],not[nand[size2,circle]]])))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:triangle;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:iff[%s,%s];4:green;4:green;4:not[%s];4:nand[%s,%s];4:size2;4:circle
'λx.apply(and[rectangle,and[blue,not[triangle]]],iota(filter(filter(x.s, size3), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:blue;4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue
'λx.apply(apply(same_shape,x.o),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size1,apply(size-leq,iota(filter(x.s, size3)))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;1:%s.o;2:x
'λx.apply(or[green,triangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(filter(filter(x.s, size1), green), size1), and[rectangle,blue]), apply(same_color,iota(filter(filter(x.s, yellow), size1)))))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green;4:size1;4:and[%s,%s];4:rectangle;4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1
'λx.apply(and[size2,apply(same_color,iota(filter(filter(x.s, size1), circle)))],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle;1:iota(%s);3:%s.s;2:x
'λx.forall(size2,filter(filter(x.s, rectangle), apply(same_color,x.o)))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.empty(filter(x.s, not[and[rectangle,blue]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:rectangle;4:blue
'λx.apply(not[not[apply(size-lt,iota(x.s))]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(x.s, blue), triangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle
'λx.exists(and[not[green],blue], filter(x.s, size3))'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:green;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(and[apply(size-gt,iota(x.s)),triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.forall(nand[triangle,implies[size1,yellow]],x.s)'	0:forall(%s,%s);4:nand[%s,%s];4:triangle;4:implies[%s,%s];4:size1;4:yellow;3:%s.s;2:x
'λx.apply(or[blue,size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:size3;1:%s.o;2:x
'λx.apply(or[blue,size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:size1;1:%s.o;2:x
'λx.apply(or[blue,size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:size2;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(x.s, green), or[not[size1],apply(same_color,iota(x.s))]), green), nor[size1,yellow]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:not[%s];4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:green;4:nor[%s,%s];4:size1;4:yellow
'λx.apply(and[apply(same_shape,x.o),apply(same_color,iota(filter(x.s, green)))],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[not[circle],yellow],iota(filter(x.s, and[and[not[size1],or[or[apply(same_color,x.o),apply(same_size,x.o)],circle]],nand[circle,triangle]])))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:circle;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size1;4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;4:nand[%s,%s];4:circle;4:triangle
'λx.apply(and[blue,apply(same_size,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[green,triangle],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(apply(same_shape,x.o),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(or[triangle,not[size3]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:not[%s];4:size3;1:%s.o;2:x
'λx.exists(and[yellow,iff[circle,blue]], filter(x.s, green))'	0:exists(%s, %s);4:and[%s,%s];4:yellow;4:iff[%s,%s];4:circle;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(not[not[green]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(x.s, circle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.exists(nand[green,circle], filter(x.s, size2))'	0:exists(%s, %s);4:nand[%s,%s];4:green;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(or[yellow,yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:yellow;1:%s.o;2:x
'λx.apply(and[rectangle,size1],iota(filter(filter(x.s, apply(size-geq,x.o)), triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:triangle
'λx.apply(and[and[size2,size2],or[apply(size-lt,iota(filter(filter(filter(filter(x.s, or[apply(same_shape,x.o),yellow]), rectangle), yellow), not[size3]))),not[apply(same_shape,x.o)]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size2;4:size2;4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow;4:rectangle;4:yellow;4:not[%s];4:size3;4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(filter(filter(x.s, blue), not[yellow]), not[and[apply(same_color,x.o),blue]]), and[size2,apply(same_size,iota(filter(filter(filter(filter(x.s, yellow), and[and[or[yellow,size2],size1],and[apply(size-leq,iota(filter(filter(filter(x.s, yellow), blue), size1))),or[circle,not[and[blue,size3]]]]]), blue), size1)))])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:yellow;4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue;4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:yellow;4:size2;4:size1;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:blue;4:size1;4:or[%s,%s];4:circle;4:not[%s];4:and[%s,%s];4:blue;4:size3;4:blue;4:size1
'λx.apply(or[green,green],iota(filter(x.s, implies[or[yellow,circle],apply(same_shape,iota(filter(filter(x.s, rectangle), circle)))])))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:or[%s,%s];4:yellow;4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle
'λx.contains(iota(x.s), filter(x.s, green))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.contains(iota(x.s), filter(x.s, size1))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.contains(iota(x.s), filter(x.s, size2))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.contains(iota(x.s), filter(x.s, size3))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(yellow,iota(filter(filter(filter(x.s, green), rectangle), blue)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle;4:blue
'λx.apply(and[and[size3,and[triangle,size2]],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:triangle;4:size2;4:circle;1:%s.o;2:x
'λx.apply(nand[green,nor[and[triangle,or[nand[yellow,green],size1]],rectangle]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:green;4:nor[%s,%s];4:and[%s,%s];4:triangle;4:or[%s,%s];4:nand[%s,%s];4:yellow;4:green;4:size1;4:rectangle;1:%s.o;2:x
'λx.apply(or[nand[size1,size2],circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:size1;4:size2;4:circle;1:%s.o;2:x
'λx.exists(green, filter(x.s, circle))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.contains(iota(filter(filter(x.s, and[circle,or[and[size2,blue],yellow]]), yellow)), filter(filter(x.s, not[and[yellow,and[green,triangle]]]), not[and[apply(same_color,x.o),size3]]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:or[%s,%s];4:and[%s,%s];4:size2;4:blue;4:yellow;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:green;4:triangle;4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3
'λx.forall(and[size2,size2],filter(x.s, size2))'	0:forall(%s,%s);4:and[%s,%s];4:size2;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.forall(not[yellow],filter(filter(filter(x.s, size2), size2), triangle))'	0:forall(%s,%s);4:not[%s];4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2;4:triangle
'λx.contains(iota(filter(filter(filter(filter(x.s, nand[nor[and[triangle,and[triangle,blue]],size1],yellow]), circle), green), triangle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:triangle;4:blue;4:size1;4:yellow;4:circle;4:green;4:triangle;3:%s.s;2:x
'λx.forall(size1,filter(x.s, and[yellow,yellow]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:yellow
'λx.forall(size2,filter(x.s, and[yellow,yellow]))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:yellow
'λx.apply(and[apply(same_size,x.o),size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(filter(filter(filter(filter(filter(x.s, green), apply(same_size,x.o)), size1), rectangle), triangle), or[or[circle,not[blue]],apply(same_size,iota(x.s))]), green)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1;4:rectangle;4:triangle;4:or[%s,%s];4:or[%s,%s];4:circle;4:not[%s];4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:green
'λx.apply(nor[apply(size-lt,x.o),size3],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:size3;1:%s.o;2:x
'λx.exists(size2, filter(x.s, circle))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(size1,iota(filter(x.s, or[apply(same_size,x.o),nor[triangle,blue]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:nor[%s,%s];4:triangle;4:blue
'λx.apply(and[blue,not[blue]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:not[%s];4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(and[rectangle,green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:green;1:%s.o;2:x
'λx.apply(or[rectangle,triangle],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(blue,iota(filter(x.s, implies[blue,size2])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:blue;4:size2
'λx.contains(iota(filter(filter(filter(x.s, and[size1,triangle]), yellow), triangle)), filter(x.s, green))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:triangle;4:yellow;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(or[and[not[and[size1,not[size2]]],apply(same_shape,x.o)],green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:size1;4:not[%s];4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green;1:%s.o;2:x
'λx.apply(iff[apply(same_shape,iota(filter(filter(filter(filter(filter(x.s, apply(size-gt,x.o)), blue), and[or[size2,apply(same_color,iota(filter(x.s, green)))],apply(same_size,iota(x.s))]), blue), circle))),and[implies[size3,yellow],rectangle]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:blue;4:and[%s,%s];4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:blue;4:circle;4:and[%s,%s];4:implies[%s,%s];4:size3;4:yellow;4:rectangle;1:%s.o;2:x
'λx.apply(or[circle,blue],iota(filter(filter(x.s, or[iff[yellow,rectangle],rectangle]), apply(same_shape,x.o))))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:iff[%s,%s];4:yellow;4:rectangle;4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(or[size1,size2],iota(filter(x.s, or[and[triangle,and[rectangle,size3]],size1])))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:rectangle;4:size3;4:size1
'λx.exists(and[green,iff[green,yellow]], filter(filter(x.s, and[and[and[size2,blue],or[triangle,apply(same_size,x.o)]],yellow]), triangle))'	0:exists(%s, %s);4:and[%s,%s];4:green;4:iff[%s,%s];4:green;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:blue;4:or[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow;4:triangle
'λx.exists(rectangle, filter(x.s, triangle))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.empty(filter(filter(filter(x.s, apply(same_size,iota(x.s))), apply(same_shape,x.o)), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1
'λx.contains(iota(filter(x.s, green)), filter(filter(filter(x.s, size3), blue), or[blue,apply(same_color,x.o)]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue;4:or[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(and[triangle,green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:green;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(x.s, green), rectangle), rectangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle;4:rectangle
'λx.apply(not[and[size3,size1]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size3;4:size1;1:%s.o;2:x
'λx.apply(or[size3,not[or[rectangle,size2]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:not[%s];4:or[%s,%s];4:rectangle;4:size2;1:%s.o;2:x
'λx.apply(implies[size1,blue],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size1;4:blue;1:%s.o;2:x
'λx.forall(size2,filter(filter(x.s, size2), yellow))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:yellow
'λx.apply(and[circle,rectangle],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.forall(nand[triangle,blue],filter(filter(filter(x.s, size3), blue), apply(size-lt,x.o)))'	0:forall(%s,%s);4:nand[%s,%s];4:triangle;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue;4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.exists(implies[not[blue],triangle], filter(filter(filter(x.s, size1), blue), size2))'	0:exists(%s, %s);4:implies[%s,%s];4:not[%s];4:blue;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue;4:size2
'λx.apply(size2,iota(filter(filter(x.s, and[size3,rectangle]), not[not[blue]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:rectangle;4:not[%s];4:not[%s];4:blue
'λx.apply(rectangle,iota(filter(filter(x.s, size3), yellow)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow
'λx.apply(and[and[circle,triangle],and[rectangle,blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:triangle;4:and[%s,%s];4:rectangle;4:blue;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(filter(x.s, triangle), yellow), size2)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:yellow;4:size2
'λx.apply(or[apply(size-gt,x.o),and[or[size3,rectangle],and[and[rectangle,triangle],rectangle]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:and[%s,%s];4:or[%s,%s];4:size3;4:rectangle;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:triangle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[green,yellow],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:green;4:yellow;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(x.s, not[green]), circle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:circle
'λx.apply(rectangle,iota(filter(x.s, nor[apply(same_color,x.o),green])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green
'λx.apply(size1,iota(filter(x.s, nand[size1,iff[size2,green]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size1;4:iff[%s,%s];4:size2;4:green
'λx.apply(circle,iota(filter(filter(filter(filter(filter(filter(x.s, size2), green), rectangle), circle), or[triangle,blue]), apply(size-gt,x.o))))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green;4:rectangle;4:circle;4:or[%s,%s];4:triangle;4:blue;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.apply(or[yellow,size3],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(not[not[yellow]],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(apply(same_shape,x.o),iota(filter(filter(x.s, and[or[apply(size-gt,iota(filter(x.s, rectangle))),blue],nand[size3,yellow]]), green)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue;4:nand[%s,%s];4:size3;4:yellow;4:green
'λx.contains(x.o, filter(filter(filter(filter(x.s, and[size1,size1]), implies[green,green]), blue), rectangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size1;4:implies[%s,%s];4:green;4:green;4:blue;4:rectangle
'λx.forall(size2,filter(filter(filter(x.s, size3), rectangle), circle))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle;4:circle
'λx.apply(nand[size1,and[implies[circle,green],apply(same_shape,iota(filter(x.s, circle)))]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size1;4:and[%s,%s];4:implies[%s,%s];4:circle;4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(filter(filter(x.s, or[and[or[and[apply(same_shape,iota(filter(x.s, size3))),apply(same_size,x.o)],blue],blue],yellow]), circle), or[blue,green]), or[not[size1],apply(same_color,iota(x.s))])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;4:blue;4:yellow;4:circle;4:or[%s,%s];4:blue;4:green;4:or[%s,%s];4:not[%s];4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, rectangle), circle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle
'λx.apply(size3,iota(filter(x.s, and[and[size2,and[and[size2,size2],size3]],or[and[size1,rectangle],and[yellow,blue]]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:size2;4:size2;4:size3;4:or[%s,%s];4:and[%s,%s];4:size1;4:rectangle;4:and[%s,%s];4:yellow;4:blue
'λx.contains(x.o, filter(filter(filter(x.s, size3), nor[yellow,not[size3]]), and[rectangle,or[yellow,size3]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:nor[%s,%s];4:yellow;4:not[%s];4:size3;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:yellow;4:size3
'λx.apply(nor[size1,size1],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:size1;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size1,nand[apply(same_size,iota(filter(x.s, or[not[size3],size1]))),circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:nand[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:size3;4:size1;4:circle;1:%s.o;2:x
'λx.forall(green,filter(filter(x.s, circle), size2))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size2
'λx.apply(nand[rectangle,blue],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:rectangle;4:blue;1:%s.o;2:x
'λx.apply(not[and[rectangle,and[and[size2,nor[not[yellow],apply(same_shape,iota(filter(filter(filter(filter(filter(x.s, or[apply(same_color,x.o),triangle]), triangle), green), circle), blue)))]],rectangle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:size2;4:nor[%s,%s];4:not[%s];4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;4:triangle;4:green;4:circle;4:blue;4:rectangle;1:%s.o;2:x
'λx.apply(apply(size-lt,x.o),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:%s.o;2:x
'λx.exists(nor[size2,rectangle], x.s)'	0:exists(%s, %s);4:nor[%s,%s];4:size2;4:rectangle;3:%s.s;2:x
'λx.apply(and[circle,and[green,triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:and[%s,%s];4:green;4:triangle;1:%s.o;2:x
'λx.apply(nor[not[triangle],blue],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:not[%s];4:triangle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(filter(filter(filter(filter(x.s, yellow), not[blue]), and[rectangle,not[or[nor[not[apply(same_shape,iota(x.s))],rectangle],and[rectangle,size2]]]]), and[rectangle,triangle]), size2), circle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:blue;4:and[%s,%s];4:rectangle;4:not[%s];4:or[%s,%s];4:nor[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:rectangle;4:size2;4:and[%s,%s];4:rectangle;4:triangle;4:size2;4:circle
'λx.apply(size3,iota(filter(x.s, and[size3,nor[and[size2,blue],apply(size-leq,iota(filter(x.s, yellow)))]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:nor[%s,%s];4:and[%s,%s];4:size2;4:blue;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.forall(not[size1],filter(x.s, and[green,size2]))'	0:forall(%s,%s);4:not[%s];4:size1;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:size2
'λx.apply(green,iota(filter(x.s, and[circle,nand[size1,yellow]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:nand[%s,%s];4:size1;4:yellow
'λx.apply(apply(same_color,x.o),iota(filter(x.s, and[circle,size3])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size3
'λx.contains(iota(filter(filter(x.s, not[yellow]), size3)), filter(x.s, size1))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.contains(iota(filter(filter(x.s, apply(same_color,iota(x.s))), green)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:green;3:%s.s;2:x
'λx.apply(and[triangle,yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(and[apply(same_shape,iota(filter(x.s, and[circle,and[apply(same_color,x.o),or[size1,triangle]]]))),and[yellow,blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:or[%s,%s];4:size1;4:triangle;4:and[%s,%s];4:yellow;4:blue;1:%s.o;2:x
'λx.forall(or[and[size2,yellow],size2],filter(filter(x.s, and[not[and[size2,blue]],triangle]), size2))'	0:forall(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size2;4:yellow;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:size2;4:blue;4:triangle;4:size2
'λx.apply(and[triangle,not[size3]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:not[%s];4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(filter(x.s, size3), size1), rectangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size1;4:rectangle
'λx.contains(iota(filter(filter(x.s, triangle), yellow)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:yellow;3:%s.s;2:x
'λx.contains(iota(filter(x.s, blue)), filter(filter(x.s, apply(same_shape,x.o)), and[green,size3]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:green;4:size3
'λx.apply(or[size2,size2],iota(filter(filter(x.s, not[yellow]), size1)))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:size1
'λx.apply(and[or[size3,size2],circle],iota(filter(x.s, and[blue,circle])))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size3;4:size2;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:circle
'λx.exists(not[size2], filter(filter(x.s, triangle), size1))'	0:exists(%s, %s);4:not[%s];4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size1
'λx.apply(rectangle,iota(filter(filter(x.s, apply(same_size,x.o)), nand[and[blue,size1],nor[nand[green,yellow],and[green,size1]]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:nand[%s,%s];4:and[%s,%s];4:blue;4:size1;4:nor[%s,%s];4:nand[%s,%s];4:green;4:yellow;4:and[%s,%s];4:green;4:size1
'λx.apply(and[yellow,green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:green;1:%s.o;2:x
'λx.apply(not[apply(size-gt,x.o)],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(or[apply(size-geq,x.o),size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:size1;1:%s.o;2:x
'λx.forall(and[and[green,size1],triangle],filter(filter(x.s, and[size1,yellow]), triangle))'	0:forall(%s,%s);4:and[%s,%s];4:and[%s,%s];4:green;4:size1;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:yellow;4:triangle
'λx.apply(and[rectangle,size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[rectangle,size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[rectangle,size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[implies[nor[triangle,yellow],size1],triangle],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:implies[%s,%s];4:nor[%s,%s];4:triangle;4:yellow;4:size1;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(filter(filter(x.s, implies[or[triangle,blue],nand[green,nor[green,triangle]]]), apply(same_shape,x.o)), rectangle), rectangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:or[%s,%s];4:triangle;4:blue;4:nand[%s,%s];4:green;4:nor[%s,%s];4:green;4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle;4:rectangle
'λx.empty(filter(filter(x.s, rectangle), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle
'λx.apply(and[size1,and[and[implies[yellow,yellow],size3],circle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:yellow;4:yellow;4:size3;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(x.s, and[rectangle,and[yellow,green]]), not[circle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:yellow;4:green;4:not[%s];4:circle
'λx.apply(or[or[circle,size2],or[and[triangle,or[not[size3],size2]],rectangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:circle;4:size2;4:or[%s,%s];4:and[%s,%s];4:triangle;4:or[%s,%s];4:not[%s];4:size3;4:size2;4:rectangle;1:%s.o;2:x
'λx.apply(and[apply(same_size,x.o),apply(same_color,x.o)],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, blue), green)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green
'λx.apply(implies[or[green,yellow],triangle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:or[%s,%s];4:green;4:yellow;4:triangle;1:%s.o;2:x
'λx.apply(and[size3,and[apply(same_shape,x.o),blue]],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.forall(not[yellow],filter(filter(x.s, circle), rectangle))'	0:forall(%s,%s);4:not[%s];4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle
'λx.contains(x.o, filter(x.s, apply(size-leq,x.o)))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, and[rectangle,not[or[size3,size3]]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:not[%s];4:or[%s,%s];4:size3;4:size3
'λx.exists(or[and[not[or[green,size3]],green],apply(same_shape,iota(x.s))], filter(x.s, iff[and[apply(same_shape,iota(x.s)),size3],or[size2,or[size1,and[and[size2,size2],apply(same_color,x.o)]]]]))'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:not[%s];4:or[%s,%s];4:green;4:size3;4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:size2;4:or[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:size2;4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(not[triangle],iota(filter(filter(x.s, or[green,or[blue,and[size3,triangle]]]), apply(same_color,x.o))))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:or[%s,%s];4:blue;4:and[%s,%s];4:size3;4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.exists(apply(size-lt,x.o), filter(filter(x.s, size2), apply(same_size,x.o)))'	0:exists(%s, %s);4:apply(%s,%s);5:size-lt;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.exists(nand[and[size2,circle],apply(same_shape,iota(x.s))], filter(filter(filter(filter(x.s, size3), blue), or[green,and[and[nand[blue,size2],and[not[rectangle],not[apply(same_size,iota(x.s))]]],size3]]), circle))'	0:exists(%s, %s);4:nand[%s,%s];4:and[%s,%s];4:size2;4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue;4:or[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:blue;4:size2;4:and[%s,%s];4:not[%s];4:rectangle;4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size3;4:circle
'λx.apply(yellow,iota(filter(filter(filter(x.s, or[and[circle,green],triangle]), size1), rectangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:circle;4:green;4:triangle;4:size1;4:rectangle
'λx.apply(apply(size-geq,iota(x.s)),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[triangle,rectangle],iota(filter(filter(filter(filter(x.s, green), not[size2]), not[yellow]), and[not[rectangle],not[rectangle]])))'	0:apply(%s,%s);4:iff[%s,%s];4:triangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:size2;4:not[%s];4:yellow;4:and[%s,%s];4:not[%s];4:rectangle;4:not[%s];4:rectangle
'λx.apply(nand[circle,yellow],iota(filter(filter(filter(x.s, or[not[and[not[and[and[circle,apply(same_shape,x.o)],size1]],or[apply(same_shape,x.o),size1]]],or[circle,size2]]), size1), size1)))'	0:apply(%s,%s);4:nand[%s,%s];4:circle;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;4:or[%s,%s];4:circle;4:size2;4:size1;4:size1
'λx.forall(blue,filter(filter(x.s, circle), or[nand[yellow,apply(size-geq,iota(filter(filter(filter(filter(x.s, green), implies[apply(size-geq,iota(filter(x.s, apply(same_size,x.o)))),green]), implies[and[nand[apply(same_size,iota(x.s)),size3],circle],and[size2,not[and[blue,size1]]]]), size1)))],yellow]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:nand[%s,%s];4:yellow;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:implies[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;4:implies[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size3;4:circle;4:and[%s,%s];4:size2;4:not[%s];4:and[%s,%s];4:blue;4:size1;4:size1;4:yellow
'λx.exists(green, filter(x.s, yellow))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(nor[yellow,triangle],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:yellow;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.exists(iff[not[rectangle],green], x.s)'	0:exists(%s, %s);4:iff[%s,%s];4:not[%s];4:rectangle;4:green;3:%s.s;2:x
'λx.exists(and[blue,green], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:blue;4:green;3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(x.s, nor[implies[and[yellow,or[or[apply(same_size,x.o),size1],apply(same_color,x.o)]],triangle],size2]), rectangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:yellow;4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;4:size2;4:rectangle
'λx.apply(or[and[not[size1],not[size1]],circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:not[%s];4:size1;4:not[%s];4:size1;4:circle;1:%s.o;2:x
'λx.exists(size3, filter(x.s, yellow))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(and[and[triangle,circle],circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:circle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[and[circle,size1],triangle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:circle;4:size1;4:triangle;1:%s.o;2:x
'λx.apply(or[and[size3,blue],yellow],iota(filter(x.s, and[size3,size2])))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size3;4:blue;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:size2
'λx.apply(size3,iota(filter(filter(filter(filter(filter(filter(filter(filter(filter(x.s, nor[apply(same_color,x.o),size2]), rectangle), yellow), rectangle), size3), circle), size3), apply(size-leq,iota(filter(x.s, not[size3])))), or[rectangle,yellow])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size2;4:rectangle;4:yellow;4:rectangle;4:size3;4:circle;4:size3;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;4:or[%s,%s];4:rectangle;4:yellow
'λx.apply(circle,iota(filter(x.s, or[and[size2,green],size1])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size2;4:green;4:size1
'λx.apply(or[green,green],iota(filter(filter(x.s, triangle), size3)))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3
'λx.apply(not[and[size1,and[blue,green]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:blue;4:green;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(filter(x.s, apply(same_color,x.o)), yellow), yellow), and[triangle,nor[rectangle,size3]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;4:yellow;4:and[%s,%s];4:triangle;4:nor[%s,%s];4:rectangle;4:size3;3:%s.s;2:x
'λx.exists(or[blue,size3], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:blue;4:size3;3:%s.s;2:x
'λx.apply(and[and[apply(same_shape,iota(x.s)),circle],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle;4:blue;1:%s.o;2:x
'λx.exists(blue, filter(x.s, or[rectangle,rectangle]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:rectangle
'λx.apply(rectangle,iota(filter(filter(filter(filter(x.s, size1), implies[not[circle],size2]), yellow), and[yellow,circle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:implies[%s,%s];4:not[%s];4:circle;4:size2;4:yellow;4:and[%s,%s];4:yellow;4:circle
'λx.forall(and[or[rectangle,size1],size1],filter(filter(x.s, and[triangle,size1]), not[rectangle]))'	0:forall(%s,%s);4:and[%s,%s];4:or[%s,%s];4:rectangle;4:size1;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:size1;4:not[%s];4:rectangle
'λx.apply(and[or[apply(same_color,iota(filter(x.s, triangle))),size1],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size1;4:circle;1:%s.o;2:x
'λx.forall(and[not[not[rectangle]],and[triangle,nor[triangle,rectangle]]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:not[%s];4:not[%s];4:rectangle;4:and[%s,%s];4:triangle;4:nor[%s,%s];4:triangle;4:rectangle;3:%s.s;2:x
'λx.apply(or[size2,circle],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(or[yellow,not[blue]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:not[%s];4:blue;1:iota(%s);3:%s.s;2:x
'λx.forall(apply(same_shape,iota(filter(x.s, size1))),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;3:%s.s;2:x
'λx.forall(circle,filter(x.s, and[yellow,apply(same_size,iota(filter(filter(filter(filter(x.s, rectangle), size1), and[rectangle,or[rectangle,circle]]), size3)))]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:rectangle;4:circle;4:size3
'λx.apply(nor[size1,size1],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size1;4:size1;1:%s.o;2:x
'λx.apply(and[size2,iff[and[iff[size2,size2],circle],blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:iff[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:size2;4:size2;4:circle;4:blue;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(x.s, and[size3,size1]), or[size2,triangle])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:size1;4:or[%s,%s];4:size2;4:triangle
'λx.apply(implies[iff[not[circle],triangle],size3],iota(filter(x.s, or[size2,size3])))'	0:apply(%s,%s);4:implies[%s,%s];4:iff[%s,%s];4:not[%s];4:circle;4:triangle;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:size3
'λx.apply(or[yellow,size3],iota(filter(filter(x.s, size1), nor[blue,apply(same_color,x.o)])))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:nor[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(or[green,implies[size3,apply(same_size,iota(x.s))]],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:implies[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(implies[size2,circle],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:implies[%s,%s];4:size2;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(or[and[yellow,triangle],blue],iota(filter(filter(x.s, implies[green,apply(same_shape,iota(x.s))]), rectangle)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:yellow;4:triangle;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:rectangle
'λx.apply(not[circle],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:%s.s;2:x
'λx.forall(and[and[triangle,blue],or[apply(size-geq,x.o),apply(same_size,iota(x.s))]],filter(x.s, green))'	0:forall(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:blue;4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(nor[size3,or[apply(same_shape,x.o),not[and[size3,circle]]]],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:nor[%s,%s];4:size3;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:size3;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(size3,iota(filter(filter(x.s, triangle), iff[apply(same_size,iota(x.s)),size2])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:iff[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size2
'λx.exists(size2, filter(filter(filter(filter(x.s, and[not[green],green]), yellow), green), or[blue,and[not[circle],size1]]))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:green;4:green;4:yellow;4:green;4:or[%s,%s];4:blue;4:and[%s,%s];4:not[%s];4:circle;4:size1
'λx.apply(or[size3,and[blue,and[size3,or[or[and[green,or[and[not[apply(same_size,iota(x.s))],and[yellow,circle]],triangle]],triangle],circle]]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:and[%s,%s];4:blue;4:and[%s,%s];4:size3;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:green;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:circle;4:triangle;4:triangle;4:circle;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(filter(filter(x.s, size3), not[green]), not[apply(same_shape,x.o)]), triangle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:green;4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle
'λx.apply(and[green,triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.forall(size2,filter(x.s, apply(same_color,iota(x.s))))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.forall(size3,filter(x.s, apply(same_color,iota(x.s))))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(and[triangle,green],iota(filter(filter(filter(filter(x.s, and[size1,not[or[size2,nand[size3,size3]]]]), green), and[nor[blue,triangle],rectangle]), not[size3])))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:not[%s];4:or[%s,%s];4:size2;4:nand[%s,%s];4:size3;4:size3;4:green;4:and[%s,%s];4:nor[%s,%s];4:blue;4:triangle;4:rectangle;4:not[%s];4:size3
'λx.contains(iota(filter(x.s, size1)), filter(x.s, blue))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.contains(iota(filter(x.s, apply(size-lt,iota(x.s)))), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.contains(iota(filter(filter(x.s, green), yellow)), filter(filter(x.s, green), blue))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue
'λx.contains(iota(x.s), filter(x.s, and[and[yellow,size3],not[green]]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:yellow;4:size3;4:not[%s];4:green
'λx.apply(not[and[and[triangle,size3],apply(same_color,x.o)]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(implies[circle,size1],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:circle;4:size1;1:%s.o;2:x
'λx.apply(implies[circle,size2],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:circle;4:size2;1:%s.o;2:x
'λx.apply(implies[circle,size3],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:circle;4:size3;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, apply(same_size,iota(x.s))), and[size2,or[circle,rectangle]]), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:or[%s,%s];4:circle;4:rectangle;4:yellow
'λx.forall(not[implies[rectangle,or[size1,and[triangle,and[triangle,size2]]]]],filter(x.s, apply(size-leq,x.o)))'	0:forall(%s,%s);4:not[%s];4:implies[%s,%s];4:rectangle;4:or[%s,%s];4:size1;4:and[%s,%s];4:triangle;4:and[%s,%s];4:triangle;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:%s.o;2:x
'λx.apply(nand[rectangle,and[size2,nor[or[circle,yellow],size3]]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:rectangle;4:and[%s,%s];4:size2;4:nor[%s,%s];4:or[%s,%s];4:circle;4:yellow;4:size3;1:%s.o;2:x
'λx.apply(nand[and[rectangle,or[apply(same_size,iota(x.s)),and[or[size2,blue],circle]]],triangle],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:rectangle;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:size2;4:blue;4:circle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[circle],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(size3,iota(filter(filter(filter(filter(x.s, green), rectangle), blue), triangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle;4:blue;4:triangle
'λx.apply(or[apply(same_size,x.o),green],iota(filter(filter(x.s, and[nand[rectangle,rectangle],circle]), and[size3,green])))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nand[%s,%s];4:rectangle;4:rectangle;4:circle;4:and[%s,%s];4:size3;4:green
'λx.apply(rectangle,iota(filter(filter(x.s, blue), blue)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue
'λx.apply(not[rectangle],iota(filter(x.s, and[and[and[and[and[apply(size-lt,iota(filter(x.s, size2))),size3],size2],and[rectangle,triangle]],nor[size3,yellow]],green])))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3;4:size2;4:and[%s,%s];4:rectangle;4:triangle;4:nor[%s,%s];4:size3;4:yellow;4:green
'λx.apply(apply(size-leq,x.o),iota(filter(filter(x.s, or[or[circle,implies[and[yellow,not[and[yellow,circle]]],green]],circle]), and[or[not[and[and[size2,size2],yellow]],yellow],not[size2]])))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:circle;4:implies[%s,%s];4:and[%s,%s];4:yellow;4:not[%s];4:and[%s,%s];4:yellow;4:circle;4:green;4:circle;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:size2;4:yellow;4:yellow;4:not[%s];4:size2
'λx.apply(implies[size3,rectangle],iota(filter(filter(filter(filter(x.s, size1), rectangle), triangle), apply(same_size,iota(x.s)))))'	0:apply(%s,%s);4:implies[%s,%s];4:size3;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle;4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.exists(apply(same_color,x.o), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:%s.s;2:x
'λx.contains(iota(x.s), filter(filter(filter(filter(filter(x.s, yellow), green), rectangle), nor[rectangle,size2]), and[green,yellow]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green;4:rectangle;4:nor[%s,%s];4:rectangle;4:size2;4:and[%s,%s];4:green;4:yellow
'λx.contains(x.o, filter(filter(x.s, yellow), implies[size1,size3]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:implies[%s,%s];4:size1;4:size3
'λx.apply(nor[blue,green],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:nor[%s,%s];4:blue;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(not[green],iota(filter(filter(x.s, circle), size2)))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size2
'λx.apply(implies[not[blue],size3],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:not[%s];4:blue;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[size2,not[triangle]],green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size2;4:not[%s];4:triangle;4:green;1:iota(%s);3:%s.s;2:x
'λx.forall(not[blue],x.s)'	0:forall(%s,%s);4:not[%s];4:blue;3:%s.s;2:x
'λx.exists(not[or[or[yellow,size1],green]], filter(x.s, size2))'	0:exists(%s, %s);4:not[%s];4:or[%s,%s];4:or[%s,%s];4:yellow;4:size1;4:green;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(iff[blue,circle],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:blue;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(filter(filter(x.s, circle), not[apply(same_size,iota(filter(x.s, size1)))]), and[and[and[or[and[green,and[yellow,iff[or[apply(same_size,x.o),and[circle,not[and[size2,circle]]]],or[circle,rectangle]]]],green],green],apply(same_color,x.o)],rectangle]), green)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:yellow;4:iff[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:circle;4:not[%s];4:and[%s,%s];4:size2;4:circle;4:or[%s,%s];4:circle;4:rectangle;4:green;4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle;4:green
'λx.apply(and[green,size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:size1;1:%s.o;2:x
'λx.apply(and[green,size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:size3;1:%s.o;2:x
'λx.apply(and[green,size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:size2;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[triangle,and[apply(same_shape,iota(x.s)),size3]],iota(filter(filter(filter(x.s, yellow), size1), yellow)))'	0:apply(%s,%s);4:iff[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;4:yellow
'λx.apply(size3,iota(filter(x.s, apply(same_size,x.o))))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(apply(same_size,iota(x.s)),iota(filter(filter(x.s, triangle), and[and[rectangle,green],blue])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:green;4:blue
'λx.apply(apply(same_size,iota(filter(filter(filter(x.s, rectangle), green), or[size3,circle]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green;4:or[%s,%s];4:size3;4:circle;1:%s.o;2:x
'λx.exists(triangle, filter(x.s, or[or[green,or[circle,apply(size-gt,x.o)]],or[yellow,blue]]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:green;4:or[%s,%s];4:circle;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:or[%s,%s];4:yellow;4:blue
'λx.contains(x.o, filter(filter(filter(filter(filter(filter(x.s, triangle), size2), and[rectangle,size3]), blue), circle), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2;4:and[%s,%s];4:rectangle;4:size3;4:blue;4:circle;4:green
'λx.empty(filter(x.s, and[or[rectangle,size1],size1]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:size1;4:size1
'λx.apply(implies[rectangle,and[and[blue,blue],apply(same_shape,x.o)]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:blue;4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[size2,and[triangle,nand[rectangle,yellow]]],iota(filter(filter(x.s, green), not[and[and[and[triangle,and[triangle,triangle]],nor[and[yellow,size1],apply(same_shape,x.o)]],and[yellow,yellow]]])))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:triangle;4:nand[%s,%s];4:rectangle;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:triangle;4:triangle;4:nor[%s,%s];4:and[%s,%s];4:yellow;4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:yellow;4:yellow
'λx.apply(yellow,iota(filter(filter(filter(x.s, circle), circle), not[circle])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:circle;4:not[%s];4:circle
'λx.apply(triangle,iota(filter(filter(filter(x.s, apply(size-geq,iota(filter(x.s, triangle)))), triangle), and[size2,blue])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:triangle;4:and[%s,%s];4:size2;4:blue
'λx.apply(circle,iota(filter(x.s, and[size2,not[triangle]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:not[%s];4:triangle
'λx.apply(size3,iota(filter(x.s, or[size3,size2])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:size2
'λx.apply(size2,iota(filter(x.s, or[size2,size3])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:size3
'λx.apply(rectangle,iota(filter(filter(filter(filter(filter(filter(x.s, green), circle), not[green]), yellow), and[size2,blue]), size1)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:circle;4:not[%s];4:green;4:yellow;4:and[%s,%s];4:size2;4:blue;4:size1
'λx.exists(apply(same_color,iota(x.s)), filter(filter(x.s, yellow), blue))'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:blue
'λx.apply(or[and[triangle,triangle],size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:triangle;4:triangle;4:size1;1:%s.o;2:x
'λx.exists(green, filter(x.s, and[blue,not[yellow]]))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:not[%s];4:yellow
'λx.apply(size3,iota(filter(filter(filter(x.s, triangle), blue), or[rectangle,green])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue;4:or[%s,%s];4:rectangle;4:green
'λx.apply(and[rectangle,size1],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[yellow,green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:green;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(x.s), filter(x.s, not[yellow]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow
'λx.apply(not[size3],iota(filter(filter(filter(filter(x.s, size2), size2), blue), size3)))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2;4:blue;4:size3
'λx.contains(x.o, filter(filter(x.s, size1), implies[rectangle,apply(same_shape,iota(x.s))]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:implies[%s,%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.forall(or[rectangle,apply(size-geq,x.o)],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(and[or[iff[rectangle,triangle],size1],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:iff[%s,%s];4:rectangle;4:triangle;4:size1;4:blue;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(x.s, size1), triangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle
'λx.apply(and[size2,and[circle,circle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:circle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size3,apply(same_shape,iota(x.s))],iota(filter(x.s, not[circle])))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.empty(filter(filter(filter(filter(x.s, not[triangle]), yellow), blue), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:yellow;4:blue;4:size3
'λx.apply(blue,iota(filter(filter(filter(filter(x.s, size3), blue), circle), blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue;4:circle;4:blue
'λx.apply(size2,iota(filter(filter(filter(x.s, not[circle]), yellow), and[and[rectangle,size2],size1])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:yellow;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size2;4:size1
'λx.apply(iff[and[iff[or[triangle,size2],not[size2]],not[green]],size3],iota(filter(x.s, apply(same_size,iota(filter(x.s, nor[apply(same_size,x.o),and[size3,triangle]]))))))'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:triangle;4:size2;4:not[%s];4:size2;4:not[%s];4:green;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:size3;4:triangle
'λx.apply(size1,iota(filter(filter(x.s, size1), triangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle
'λx.apply(and[not[or[size1,rectangle]],not[circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:or[%s,%s];4:size1;4:rectangle;4:not[%s];4:circle;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, circle), iff[size1,blue]), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:iff[%s,%s];4:size1;4:blue;4:circle
'λx.apply(or[and[size1,and[apply(same_shape,iota(filter(filter(x.s, triangle), size1))),rectangle]],rectangle],iota(filter(filter(filter(x.s, blue), rectangle), nor[size1,size3])))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size1;4:rectangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle;4:nor[%s,%s];4:size1;4:size3
'λx.apply(rectangle,iota(filter(filter(x.s, rectangle), not[blue])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:blue
'λx.apply(apply(same_shape,iota(filter(filter(x.s, size1), apply(size-gt,x.o)))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[green,blue],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.forall(or[size3,or[rectangle,circle]],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:size3;4:or[%s,%s];4:rectangle;4:circle;3:%s.s;2:x
'λx.apply(nor[or[triangle,size1],apply(same_size,x.o)],iota(filter(filter(filter(filter(x.s, green), size2), blue), implies[green,size3])))'	0:apply(%s,%s);4:nor[%s,%s];4:or[%s,%s];4:triangle;4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size2;4:blue;4:implies[%s,%s];4:green;4:size3
'λx.apply(size2,iota(filter(filter(x.s, size1), and[size3,implies[apply(same_size,x.o),and[not[triangle],iff[size3,and[circle,size3]]]]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:size3;4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:not[%s];4:triangle;4:iff[%s,%s];4:size3;4:and[%s,%s];4:circle;4:size3
'λx.apply(or[triangle,size2],iota(filter(x.s, not[blue])))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.apply(and[circle,size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[circle,size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(and[circle,size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(filter(x.s, blue), yellow), apply(same_shape,iota(x.s))), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:green
'λx.exists(yellow, filter(x.s, not[yellow]))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow
'λx.contains(x.o, filter(x.s, apply(size-gt,iota(x.s))))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, and[blue,green])), filter(x.s, size1))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:green;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(green,iota(filter(filter(x.s, nand[size3,triangle]), size2)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size3;4:triangle;4:size2
'λx.empty(filter(x.s, nand[implies[rectangle,green],size3]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:implies[%s,%s];4:rectangle;4:green;4:size3
'λx.exists(or[circle,not[not[or[implies[iff[iff[circle,nor[blue,iff[circle,blue]]],green],and[blue,apply(size-gt,iota(x.s))]],not[green]]]]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:circle;4:not[%s];4:not[%s];4:or[%s,%s];4:implies[%s,%s];4:iff[%s,%s];4:iff[%s,%s];4:circle;4:nor[%s,%s];4:blue;4:iff[%s,%s];4:circle;4:blue;4:green;4:and[%s,%s];4:blue;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:not[%s];4:green;3:%s.s;2:x
'λx.apply(or[green,size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:size2;1:%s.o;2:x
'λx.apply(or[green,size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:size1;1:%s.o;2:x
'λx.apply(or[green,size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:size3;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, not[nor[blue,apply(same_color,x.o)]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:nor[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.contains(iota(filter(x.s, apply(same_shape,iota(filter(x.s, green))))), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(x.s, green), yellow)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow
'λx.apply(not[or[blue,and[blue,triangle]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:blue;4:and[%s,%s];4:blue;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(x.s, triangle), rectangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle
'λx.forall(implies[apply(size-gt,iota(filter(filter(x.s, circle), size2))),yellow],filter(filter(filter(x.s, and[green,yellow]), size2), blue))'	0:forall(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size2;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:yellow;4:size2;4:blue
'λx.forall(blue,filter(filter(filter(filter(filter(x.s, nand[or[green,circle],apply(size-gt,x.o)]), not[not[apply(size-lt,x.o)]]), not[yellow]), blue), size3))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:or[%s,%s];4:green;4:circle;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:not[%s];4:not[%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:not[%s];4:yellow;4:blue;4:size3
'λx.apply(circle,iota(filter(x.s, and[and[blue,green],size2])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:blue;4:green;4:size2
'λx.apply(and[nand[size3,rectangle],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:size3;4:rectangle;4:blue;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(x.s, size2), circle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle
'λx.empty(filter(filter(x.s, rectangle), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1
'λx.empty(filter(filter(x.s, rectangle), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3
'λx.apply(and[nor[yellow,apply(same_size,x.o)],circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[circle,circle],iota(filter(filter(filter(filter(x.s, green), blue), size2), rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue;4:size2;4:rectangle
'λx.forall(and[size1,triangle],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:size1;4:triangle;3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(filter(x.s, implies[size3,size2]), size3), apply(same_size,x.o))))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size3;4:size2;4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(or[size1,and[size2,apply(same_size,iota(x.s))]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(and[blue,yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.forall(and[size2,triangle],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:size2;4:triangle;3:%s.s;2:x
'λx.apply(iff[circle,rectangle],iota(filter(x.s, apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:iff[%s,%s];4:circle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(x.s, nor[rectangle,circle])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:rectangle;4:circle
'λx.apply(triangle,iota(filter(x.s, or[nand[size3,size2],apply(same_size,x.o)])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:nand[%s,%s];4:size3;4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(and[and[blue,rectangle],nor[implies[rectangle,circle],green]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:rectangle;4:nor[%s,%s];4:implies[%s,%s];4:rectangle;4:circle;4:green;1:iota(%s);3:%s.s;2:x
'λx.exists(or[yellow,rectangle], filter(x.s, not[blue]))'	0:exists(%s, %s);4:or[%s,%s];4:yellow;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.apply(or[and[not[blue],or[not[rectangle],rectangle]],size1],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:not[%s];4:blue;4:or[%s,%s];4:not[%s];4:rectangle;4:rectangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(or[and[or[yellow,size1],yellow],rectangle],iota(filter(filter(filter(x.s, green), green), size1)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:yellow;4:size1;4:yellow;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:green;4:size1
'λx.forall(not[and[and[green,and[and[green,apply(same_size,iota(filter(x.s, blue)))],rectangle]],size3]],x.s)'	0:forall(%s,%s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle;4:size3;3:%s.s;2:x
'λx.apply(iff[rectangle,yellow],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:rectangle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(x.s, iff[triangle,triangle])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:triangle;4:triangle
'λx.apply(size1,iota(filter(x.s, iff[triangle,triangle])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:triangle;4:triangle
'λx.apply(size1,iota(filter(filter(filter(filter(filter(filter(x.s, size3), blue), implies[green,apply(size-lt,x.o)]), triangle), rectangle), not[circle])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue;4:implies[%s,%s];4:green;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:triangle;4:rectangle;4:not[%s];4:circle
'λx.forall(and[size3,apply(same_shape,iota(x.s))],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(circle,iota(filter(x.s, nand[triangle,yellow])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:triangle;4:yellow
'λx.apply(or[size2,yellow],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, nor[yellow,not[triangle]]), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:yellow;4:not[%s];4:triangle;4:size2
'λx.exists(triangle, filter(filter(filter(x.s, triangle), blue), or[size3,rectangle]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue;4:or[%s,%s];4:size3;4:rectangle
'λx.apply(rectangle,iota(filter(filter(filter(filter(filter(x.s, blue), size2), size2), not[apply(same_size,x.o)]), yellow)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2;4:size2;4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow
'λx.apply(or[triangle,implies[green,and[rectangle,blue]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:implies[%s,%s];4:green;4:and[%s,%s];4:rectangle;4:blue;1:%s.o;2:x
'λx.apply(or[rectangle,green],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[circle,and[green,apply(same_shape,iota(filter(x.s, circle)))]],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:implies[%s,%s];4:circle;4:and[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.forall(yellow,filter(filter(filter(filter(filter(filter(x.s, blue), or[apply(same_size,iota(x.s)),circle]), or[not[size3],nor[iff[size1,not[green]],size2]]), size1), size2), green))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:not[%s];4:size3;4:nor[%s,%s];4:iff[%s,%s];4:size1;4:not[%s];4:green;4:size2;4:size1;4:size2;4:green
'λx.apply(nand[nor[size1,yellow],or[rectangle,rectangle]],iota(filter(filter(x.s, circle), and[implies[apply(same_size,iota(filter(x.s, nand[rectangle,green]))),blue],blue])))'	0:apply(%s,%s);4:nand[%s,%s];4:nor[%s,%s];4:size1;4:yellow;4:or[%s,%s];4:rectangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:rectangle;4:green;4:blue;4:blue
'λx.apply(circle,iota(filter(filter(filter(x.s, yellow), blue), size1)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:blue;4:size1
'λx.apply(apply(same_size,x.o),iota(filter(filter(filter(filter(filter(filter(filter(x.s, blue), iff[not[or[size3,yellow]],size1]), size1), and[rectangle,iff[blue,green]]), blue), yellow), and[size3,blue])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:iff[%s,%s];4:not[%s];4:or[%s,%s];4:size3;4:yellow;4:size1;4:size1;4:and[%s,%s];4:rectangle;4:iff[%s,%s];4:blue;4:green;4:blue;4:yellow;4:and[%s,%s];4:size3;4:blue
'λx.forall(and[blue,and[size2,or[circle,size1]]],filter(filter(filter(x.s, circle), nor[not[yellow],or[yellow,not[not[and[rectangle,and[rectangle,and[size2,rectangle]]]]]]]), yellow))'	0:forall(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:size2;4:or[%s,%s];4:circle;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:nor[%s,%s];4:not[%s];4:yellow;4:or[%s,%s];4:yellow;4:not[%s];4:not[%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:size2;4:rectangle;4:yellow
'λx.empty(filter(x.s, nand[yellow,and[rectangle,green]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:yellow;4:and[%s,%s];4:rectangle;4:green
'λx.apply(or[yellow,rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:rectangle;1:%s.o;2:x
'λx.apply(implies[rectangle,triangle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:rectangle;4:triangle;1:%s.o;2:x
'λx.apply(not[blue],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(size3,iota(filter(filter(x.s, green), yellow)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow
'λx.contains(x.o, filter(x.s, and[rectangle,size1]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:size1
'λx.exists(size3, filter(filter(x.s, size1), triangle))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle
'λx.apply(not[and[nor[circle,yellow],or[rectangle,and[apply(same_size,iota(filter(filter(filter(filter(x.s, and[or[green,implies[or[blue,circle],circle]],circle]), yellow), size3), or[size2,circle]))),circle]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:nor[%s,%s];4:circle;4:yellow;4:or[%s,%s];4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:green;4:implies[%s,%s];4:or[%s,%s];4:blue;4:circle;4:circle;4:circle;4:yellow;4:size3;4:or[%s,%s];4:size2;4:circle;4:circle;1:%s.o;2:x
'λx.apply(or[and[size2,circle],apply(same_color,iota(x.s))],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size2;4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(and[iff[apply(size-gt,iota(filter(x.s, yellow))),not[triangle]],implies[and[green,size2],yellow]],iota(filter(filter(x.s, size2), green)))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:triangle;4:implies[%s,%s];4:and[%s,%s];4:green;4:size2;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green
'λx.forall(circle,filter(x.s, size3))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.forall(circle,filter(x.s, size1))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.forall(circle,filter(x.s, size2))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.forall(circle,filter(x.s, green))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.contains(x.o, filter(x.s, not[size1]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1
'λx.contains(x.o, filter(x.s, not[green]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green
'λx.apply(or[size2,not[size3]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:not[%s];4:size3;1:%s.o;2:x
'λx.forall(apply(same_shape,x.o),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, blue), yellow))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow
'λx.apply(not[triangle],iota(filter(filter(x.s, or[circle,or[triangle,size3]]), implies[size2,and[and[triangle,nor[circle,size3]],implies[blue,green]]])))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:or[%s,%s];4:triangle;4:size3;4:implies[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:triangle;4:nor[%s,%s];4:circle;4:size3;4:implies[%s,%s];4:blue;4:green
'λx.apply(and[yellow,nand[or[yellow,blue],or[blue,nor[not[and[green,rectangle]],rectangle]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:nand[%s,%s];4:or[%s,%s];4:yellow;4:blue;4:or[%s,%s];4:blue;4:nor[%s,%s];4:not[%s];4:and[%s,%s];4:green;4:rectangle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.exists(apply(same_size,x.o), filter(filter(filter(x.s, size1), size2), nand[rectangle,and[circle,and[or[not[apply(same_shape,iota(x.s))],green],green]]]))'	0:exists(%s, %s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2;4:nand[%s,%s];4:rectangle;4:and[%s,%s];4:circle;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:green;4:green
'λx.exists(and[or[size1,rectangle],blue], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:or[%s,%s];4:size1;4:rectangle;4:blue;3:%s.s;2:x
'λx.apply(or[blue,and[circle,nor[green,size3]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:and[%s,%s];4:circle;4:nor[%s,%s];4:green;4:size3;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(filter(x.s, size2), size3), blue)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3;4:blue
'λx.apply(rectangle,iota(filter(filter(filter(filter(x.s, size3), yellow), or[size2,and[not[green],circle]]), circle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow;4:or[%s,%s];4:size2;4:and[%s,%s];4:not[%s];4:green;4:circle;4:circle
'λx.apply(implies[size3,or[and[circle,nand[circle,not[blue]]],or[rectangle,rectangle]]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size3;4:or[%s,%s];4:and[%s,%s];4:circle;4:nand[%s,%s];4:circle;4:not[%s];4:blue;4:or[%s,%s];4:rectangle;4:rectangle;1:%s.o;2:x
'λx.apply(not[rectangle],iota(filter(filter(filter(x.s, circle), circle), and[apply(same_size,x.o),green])))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green
'λx.apply(green,iota(filter(filter(filter(x.s, size3), and[rectangle,and[or[triangle,rectangle],implies[and[blue,and[rectangle,triangle]],or[green,blue]]]]), green)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:or[%s,%s];4:triangle;4:rectangle;4:implies[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:triangle;4:or[%s,%s];4:green;4:blue;4:green
'λx.apply(and[apply(same_size,iota(x.s)),circle],iota(filter(x.s, and[rectangle,and[nor[yellow,not[rectangle]],size1]])))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:nor[%s,%s];4:yellow;4:not[%s];4:rectangle;4:size1
'λx.apply(or[apply(same_size,x.o),green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, iff[green,size2]), size2)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:green;4:size2;4:size2
'λx.apply(and[and[implies[not[size2],and[size1,green]],apply(same_size,x.o)],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:not[%s];4:size2;4:and[%s,%s];4:size1;4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;1:%s.o;2:x
'λx.forall(and[yellow,circle],filter(x.s, rectangle))'	0:forall(%s,%s);4:and[%s,%s];4:yellow;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(yellow,iota(filter(filter(x.s, green), yellow)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow
'λx.apply(or[not[implies[rectangle,circle]],and[rectangle,circle]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:implies[%s,%s];4:rectangle;4:circle;4:and[%s,%s];4:rectangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[or[and[and[apply(same_color,x.o),not[rectangle]],size2],size1],apply(same_shape,x.o)],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:rectangle;4:size2;4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[yellow,not[or[triangle,green]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:not[%s];4:or[%s,%s];4:triangle;4:green;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(x.s, triangle), size1), not[and[nor[or[circle,yellow],and[green,triangle]],blue]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size1;4:not[%s];4:and[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:circle;4:yellow;4:and[%s,%s];4:green;4:triangle;4:blue;3:%s.s;2:x
'λx.apply(yellow,iota(filter(x.s, and[blue,size3])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size3
'λx.apply(yellow,iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(or[size3,blue],iota(filter(filter(filter(filter(x.s, apply(size-lt,iota(x.s))), and[not[nor[size3,or[size1,rectangle]]],nand[triangle,rectangle]]), size2), blue)))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:nor[%s,%s];4:size3;4:or[%s,%s];4:size1;4:rectangle;4:nand[%s,%s];4:triangle;4:rectangle;4:size2;4:blue
'λx.exists(circle, filter(x.s, and[blue,size3]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size3
'λx.apply(and[apply(same_size,iota(x.s)),green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:green;1:%s.o;2:x
'λx.exists(nor[blue,implies[circle,circle]], x.s)'	0:exists(%s, %s);4:nor[%s,%s];4:blue;4:implies[%s,%s];4:circle;4:circle;3:%s.s;2:x
'λx.apply(and[triangle,green],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.empty(filter(x.s, and[blue,size2]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size2
'λx.false'	0:false
'λx.apply(and[circle,nor[blue,yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:nor[%s,%s];4:blue;4:yellow;1:%s.o;2:x
'λx.apply(or[implies[and[not[size2],or[blue,triangle]],triangle],green],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:not[%s];4:size2;4:or[%s,%s];4:blue;4:triangle;4:triangle;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(x.s, size2), or[yellow,size3])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:yellow;4:size3
'λx.apply(not[and[size3,rectangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size3;4:rectangle;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(filter(filter(filter(x.s, rectangle), and[size3,size1]), apply(size-gt,x.o)), and[size2,or[apply(same_shape,x.o),size1]]), triangle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:size3;4:size1;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:and[%s,%s];4:size2;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;4:triangle
'λx.exists(nor[yellow,rectangle], filter(x.s, triangle))'	0:exists(%s, %s);4:nor[%s,%s];4:yellow;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(green,iota(filter(filter(filter(filter(x.s, circle), green), size1), size1)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green;4:size1;4:size1
'λx.forall(apply(same_shape,x.o),filter(filter(filter(x.s, size1), not[size2]), size2))'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:not[%s];4:size2;4:size2
'λx.apply(size1,iota(filter(x.s, not[green])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green
'λx.apply(apply(size-lt,iota(filter(filter(filter(filter(filter(filter(x.s, not[not[size3]]), triangle), blue), circle), iff[size1,size1]), yellow))),iota(filter(x.s, circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:size3;4:triangle;4:blue;4:circle;4:iff[%s,%s];4:size1;4:size1;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.exists(yellow, filter(filter(filter(filter(filter(filter(filter(x.s, circle), size1), size2), green), size2), and[size3,size1]), nor[apply(same_shape,iota(x.s)),and[size3,or[nand[apply(same_shape,iota(filter(filter(filter(x.s, and[or[size1,circle],circle]), rectangle), green))),circle],and[circle,not[yellow]]]]]))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1;4:size2;4:green;4:size2;4:and[%s,%s];4:size3;4:size1;4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:or[%s,%s];4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:size1;4:circle;4:circle;4:rectangle;4:green;4:circle;4:and[%s,%s];4:circle;4:not[%s];4:yellow
'λx.apply(rectangle,iota(filter(x.s, nand[apply(same_color,x.o),size2])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size2
'λx.apply(or[or[or[green,triangle],green],not[circle]],iota(filter(filter(x.s, size3), size2)))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:green;4:triangle;4:green;4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2
'λx.apply(and[not[and[and[circle,and[size1,apply(same_color,x.o)]],size1]],green],iota(filter(filter(filter(filter(filter(filter(x.s, blue), yellow), green), and[green,and[apply(same_size,iota(filter(x.s, not[yellow]))),not[size1]]]), green), iff[green,or[apply(same_shape,iota(x.s)),green]])))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow;4:green;4:and[%s,%s];4:green;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:not[%s];4:size1;4:green;4:iff[%s,%s];4:green;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:green
'λx.forall(and[apply(size-geq,iota(x.s)),size2],filter(filter(x.s, size2), and[circle,and[size1,size2]]))'	0:forall(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:circle;4:and[%s,%s];4:size1;4:size2
'λx.empty(filter(filter(filter(filter(x.s, yellow), triangle), or[size1,circle]), or[rectangle,yellow]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle;4:or[%s,%s];4:size1;4:circle;4:or[%s,%s];4:rectangle;4:yellow
'λx.exists(blue, filter(filter(filter(x.s, or[and[size1,size2],apply(same_size,x.o)]), or[circle,apply(same_shape,iota(x.s))]), circle))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size1;4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle
'λx.apply(size3,iota(filter(filter(x.s, triangle), and[rectangle,rectangle])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:rectangle;4:rectangle
'λx.apply(and[blue,green],iota(filter(filter(filter(x.s, and[triangle,nor[and[yellow,rectangle],triangle]]), blue), size1)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:nor[%s,%s];4:and[%s,%s];4:yellow;4:rectangle;4:triangle;4:blue;4:size1
'λx.forall(apply(same_size,iota(filter(x.s, yellow))),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;3:%s.s;2:x
'λx.exists(blue, x.s)'	0:exists(%s, %s);4:blue;3:%s.s;2:x
'λx.empty(filter(filter(filter(filter(x.s, yellow), or[rectangle,size1]), blue), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:rectangle;4:size1;4:blue;4:size1
'λx.apply(triangle,iota(filter(x.s, green)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(triangle,iota(filter(x.s, size3)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(triangle,iota(filter(x.s, size2)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(triangle,iota(filter(x.s, size1)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(nand[rectangle,rectangle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:rectangle;4:rectangle;1:%s.o;2:x
'λx.exists(size1, filter(x.s, and[yellow,and[triangle,blue]]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:and[%s,%s];4:triangle;4:blue
'λx.apply(size2,iota(filter(filter(filter(filter(x.s, size1), not[size2]), size3), not[size2])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:not[%s];4:size2;4:size3;4:not[%s];4:size2
'λx.apply(iff[size3,size1],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:iff[%s,%s];4:size3;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.contains(iota(filter(x.s, size3)), filter(x.s, and[green,green]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:green
'λx.apply(and[and[circle,nor[implies[not[apply(same_shape,iota(x.s))],triangle],and[not[apply(same_shape,x.o)],size3]]],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:nor[%s,%s];4:implies[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3;4:circle;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(or[triangle,blue],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, apply(same_size,iota(filter(filter(filter(filter(x.s, size1), or[blue,size1]), yellow), and[triangle,green])))), circle), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:or[%s,%s];4:blue;4:size1;4:yellow;4:and[%s,%s];4:triangle;4:green;4:circle;4:size2
'λx.forall(green,filter(filter(filter(x.s, apply(same_size,x.o)), and[size3,size3]), apply(same_size,x.o)))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:size3;4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(and[implies[rectangle,and[yellow,circle]],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:rectangle;4:and[%s,%s];4:yellow;4:circle;4:size3;1:%s.o;2:x
'λx.apply(and[yellow,not[yellow]],iota(filter(filter(x.s, size2), nor[yellow,and[triangle,and[green,blue]]])))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:nor[%s,%s];4:yellow;4:and[%s,%s];4:triangle;4:and[%s,%s];4:green;4:blue
'λx.apply(or[or[apply(same_color,x.o),yellow],yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;4:yellow;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(filter(x.s, yellow), blue), size1)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:blue;4:size1
'λx.apply(circle,iota(filter(filter(filter(filter(x.s, triangle), circle), size1), and[size2,or[or[size3,not[blue]],nor[and[and[green,size1],rectangle],size1]]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle;4:size1;4:and[%s,%s];4:size2;4:or[%s,%s];4:or[%s,%s];4:size3;4:not[%s];4:blue;4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:size1;4:rectangle;4:size1
'λx.forall(green,filter(x.s, apply(size-gt,x.o)))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.exists(circle, filter(x.s, triangle))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(rectangle,iota(filter(x.s, or[size3,size3])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:size3
'λx.apply(rectangle,iota(filter(x.s, or[size2,size1])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:size1
'λx.contains(x.o, filter(x.s, not[and[size3,blue]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:size3;4:blue
'λx.apply(circle,iota(filter(x.s, and[nor[circle,size1],or[blue,size1]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:circle;4:size1;4:or[%s,%s];4:blue;4:size1
'λx.apply(triangle,iota(filter(x.s, or[rectangle,and[apply(size-geq,iota(filter(filter(filter(x.s, size2), and[yellow,iff[circle,yellow]]), size2))),triangle]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:yellow;4:iff[%s,%s];4:circle;4:yellow;4:size2;4:triangle
'λx.apply(green,iota(filter(filter(x.s, apply(same_shape,x.o)), and[and[apply(size-leq,iota(x.s)),rectangle],not[size3]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:rectangle;4:not[%s];4:size3
'λx.apply(implies[apply(same_color,x.o),yellow],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(x.s, yellow), yellow)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:yellow
'λx.apply(apply(same_color,x.o),iota(filter(x.s, circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.forall(not[green],filter(filter(x.s, size1), and[size1,apply(same_color,x.o)]))'	0:forall(%s,%s);4:not[%s];4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(and[nor[apply(same_size,iota(x.s)),apply(same_shape,iota(filter(x.s, size3)))],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size1;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, nand[circle,blue])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:circle;4:blue
'λx.exists(size3, filter(filter(filter(x.s, or[size3,iff[apply(same_size,iota(filter(filter(filter(x.s, circle), size3), rectangle))),or[triangle,triangle]]]), apply(same_size,iota(filter(filter(x.s, green), and[rectangle,and[yellow,rectangle]])))), rectangle))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:iff[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3;4:rectangle;4:or[%s,%s];4:triangle;4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:yellow;4:rectangle;4:rectangle
'λx.apply(not[size2],iota(filter(filter(filter(x.s, apply(same_shape,x.o)), circle), or[iff[rectangle,triangle],apply(same_shape,x.o)])))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;4:or[%s,%s];4:iff[%s,%s];4:rectangle;4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(and[nor[size3,and[rectangle,triangle]],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:size3;4:and[%s,%s];4:rectangle;4:triangle;4:circle;1:%s.o;2:x
'λx.apply(or[not[green],not[not[apply(same_shape,x.o)]]],iota(filter(x.s, green)))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:green;4:not[%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(size3,iota(filter(x.s, and[size2,and[and[and[size2,implies[rectangle,rectangle]],circle],apply(same_size,iota(x.s))]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:implies[%s,%s];4:rectangle;4:rectangle;4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[and[apply(same_size,x.o),triangle],triangle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle;4:triangle;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, blue), not[size2]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:size2
'λx.empty(filter(filter(x.s, rectangle), and[nor[and[and[rectangle,circle],not[apply(same_size,iota(x.s))]],size2],yellow]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:circle;4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size2;4:yellow
'λx.apply(implies[circle,and[size1,rectangle]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:circle;4:and[%s,%s];4:size1;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[not[nand[rectangle,green]]],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:nand[%s,%s];4:rectangle;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(not[and[apply(same_color,iota(filter(filter(x.s, nand[not[nand[apply(same_shape,x.o),size1]],green]), size1))),and[green,triangle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:not[%s];4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;4:green;4:size1;4:and[%s,%s];4:green;4:triangle;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, apply(same_color,x.o))))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.exists(size3, filter(filter(filter(x.s, and[apply(same_color,x.o),size2]), circle), circle))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size2;4:circle;4:circle
'λx.apply(yellow,iota(filter(filter(x.s, size3), yellow)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow
'λx.apply(nand[apply(same_size,iota(x.s)),triangle],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[and[size1,size2],size1],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:size1;4:size2;4:size1;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(x.s, rectangle), size1))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1
'λx.apply(and[not[and[size2,size1]],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:size2;4:size1;4:yellow;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(x.s, or[yellow,size2]), triangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:size2;4:triangle
'λx.apply(and[and[blue,triangle],nor[rectangle,iff[blue,nor[yellow,or[nor[blue,nor[not[size3],circle]],yellow]]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:triangle;4:nor[%s,%s];4:rectangle;4:iff[%s,%s];4:blue;4:nor[%s,%s];4:yellow;4:or[%s,%s];4:nor[%s,%s];4:blue;4:nor[%s,%s];4:not[%s];4:size3;4:circle;4:yellow;1:%s.o;2:x
'λx.exists(size1, filter(filter(filter(filter(x.s, size3), circle), blue), or[yellow,and[and[apply(same_color,x.o),and[and[size2,green],and[circle,yellow]]],circle]]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle;4:blue;4:or[%s,%s];4:yellow;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:and[%s,%s];4:size2;4:green;4:and[%s,%s];4:circle;4:yellow;4:circle
'λx.forall(circle,x.s)'	0:forall(%s,%s);4:circle;3:%s.s;2:x
'λx.apply(iff[yellow,apply(same_shape,x.o)],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:yellow;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(not[triangle],iota(filter(filter(filter(x.s, and[circle,and[blue,circle]]), size3), blue)))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:and[%s,%s];4:blue;4:circle;4:size3;4:blue
'λx.apply(blue,iota(filter(x.s, not[and[and[triangle,yellow],and[and[and[triangle,size2],apply(same_color,x.o)],green]]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:yellow;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green
'λx.contains(iota(x.s), filter(filter(filter(x.s, apply(same_size,iota(filter(x.s, or[or[size3,not[size1]],or[circle,and[blue,size2]]])))), circle), and[apply(size-leq,x.o),not[or[blue,nand[apply(size-geq,x.o),blue]]]]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:size3;4:not[%s];4:size1;4:or[%s,%s];4:circle;4:and[%s,%s];4:blue;4:size2;4:circle;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:not[%s];4:or[%s,%s];4:blue;4:nand[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:blue
'λx.forall(not[and[size2,size1]],filter(x.s, nor[nor[and[not[apply(same_size,x.o)],or[and[iff[and[blue,or[size2,or[size3,size1]]],not[apply(same_color,iota(filter(x.s, circle)))]],rectangle],apply(same_size,x.o)]],green],or[not[rectangle],not[or[size2,circle]]]]))'	0:forall(%s,%s);4:not[%s];4:and[%s,%s];4:size2;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:blue;4:or[%s,%s];4:size2;4:or[%s,%s];4:size3;4:size1;4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;4:or[%s,%s];4:not[%s];4:rectangle;4:not[%s];4:or[%s,%s];4:size2;4:circle
'λx.exists(not[and[yellow,or[and[size3,size3],rectangle]]], filter(filter(filter(x.s, not[green]), green), triangle))'	0:exists(%s, %s);4:not[%s];4:and[%s,%s];4:yellow;4:or[%s,%s];4:and[%s,%s];4:size3;4:size3;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:green;4:triangle
'λx.apply(or[rectangle,or[blue,green]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:or[%s,%s];4:blue;4:green;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(filter(x.s, apply(same_color,iota(x.s))), yellow), blue)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:yellow;4:blue
'λx.apply(nor[circle,not[green]],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:circle;4:not[%s];4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(x.s, apply(same_shape,iota(filter(x.s, blue))))))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(nand[green,green],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:nand[%s,%s];4:green;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(yellow,iota(filter(x.s, not[size2])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2
'λx.contains(iota(filter(filter(x.s, and[size3,yellow]), circle)), filter(x.s, or[or[triangle,blue],or[or[not[and[apply(size-gt,iota(filter(x.s, apply(same_shape,x.o)))),blue]],size2],size2]]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:yellow;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:triangle;4:blue;4:or[%s,%s];4:or[%s,%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue;4:size2;4:size2
'λx.apply(and[apply(size-gt,iota(x.s)),green],iota(filter(filter(filter(x.s, size1), size3), size2)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size3;4:size2
'λx.apply(and[rectangle,apply(same_shape,x.o)],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size2,and[yellow,size1]],iota(filter(filter(x.s, yellow), rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:yellow;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle
'λx.apply(nor[yellow,and[size3,circle]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:yellow;4:and[%s,%s];4:size3;4:circle;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(filter(x.s, implies[iff[size1,and[rectangle,and[rectangle,rectangle]]],nor[rectangle,not[triangle]]]), size2), blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:iff[%s,%s];4:size1;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:rectangle;4:rectangle;4:nor[%s,%s];4:rectangle;4:not[%s];4:triangle;4:size2;4:blue
'λx.apply(and[triangle,and[and[and[size3,blue],circle],green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:blue;4:circle;4:green;1:%s.o;2:x
'λx.apply(and[circle,size2],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.exists(nor[green,not[or[not[and[circle,not[or[blue,triangle]]]],and[implies[and[rectangle,yellow],rectangle],circle]]]], x.s)'	0:exists(%s, %s);4:nor[%s,%s];4:green;4:not[%s];4:or[%s,%s];4:not[%s];4:and[%s,%s];4:circle;4:not[%s];4:or[%s,%s];4:blue;4:triangle;4:and[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:rectangle;4:yellow;4:rectangle;4:circle;3:%s.s;2:x
'λx.empty(filter(filter(x.s, rectangle), apply(size-leq,iota(filter(x.s, yellow)))))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.contains(x.o, filter(filter(filter(filter(x.s, circle), size3), size1), rectangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3;4:size1;4:rectangle
'λx.apply(blue,iota(filter(filter(filter(filter(x.s, nand[circle,blue]), not[size3]), not[green]), size1)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:circle;4:blue;4:not[%s];4:size3;4:not[%s];4:green;4:size1
'λx.apply(not[green],iota(filter(filter(x.s, not[size3]), iff[size3,triangle])))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;4:iff[%s,%s];4:size3;4:triangle
'λx.apply(not[rectangle],iota(filter(filter(x.s, blue), green)))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green
'λx.apply(apply(same_size,iota(filter(x.s, and[blue,size2]))),iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.forall(rectangle,filter(filter(filter(filter(x.s, nor[and[and[apply(size-lt,iota(x.s)),not[circle]],blue],circle]), triangle), not[size2]), green))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:not[%s];4:circle;4:blue;4:circle;4:triangle;4:not[%s];4:size2;4:green
'λx.apply(size2,iota(filter(filter(x.s, and[and[and[circle,circle],size3],size3]), not[yellow])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:circle;4:size3;4:size3;4:not[%s];4:yellow
'λx.apply(not[and[or[rectangle,blue],size1]],iota(filter(filter(filter(filter(x.s, rectangle), blue), circle), triangle)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:or[%s,%s];4:rectangle;4:blue;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue;4:circle;4:triangle
'λx.apply(not[green],x.o)'	0:apply(%s,%s);4:not[%s];4:green;1:%s.o;2:x
'λx.apply(or[blue,and[apply(size-geq,x.o),nor[and[nand[circle,and[blue,circle]],yellow],size1]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:nor[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:circle;4:and[%s,%s];4:blue;4:circle;4:yellow;4:size1;1:iota(%s);3:%s.s;2:x
'λx.forall(and[not[triangle],yellow],filter(x.s, size3))'	0:forall(%s,%s);4:and[%s,%s];4:not[%s];4:triangle;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(yellow,iota(filter(x.s, not[or[and[size3,size3],blue]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:size3;4:size3;4:blue
'λx.contains(iota(filter(x.s, or[green,circle])), filter(filter(x.s, yellow), apply(size-lt,x.o)))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.empty(filter(filter(x.s, apply(size-gt,iota(filter(filter(filter(x.s, rectangle), not[and[size3,green]]), triangle)))), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:and[%s,%s];4:size3;4:green;4:triangle;4:circle
'λx.apply(rectangle,iota(filter(x.s, not[yellow])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow
'λx.apply(circle,iota(filter(filter(x.s, not[circle]), not[not[yellow]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:not[%s];4:not[%s];4:yellow
'λx.apply(blue,iota(filter(filter(x.s, circle), and[circle,size2])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:circle;4:size2
'λx.apply(blue,iota(filter(x.s, not[rectangle])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle
'λx.apply(implies[or[green,apply(size-geq,iota(x.s))],and[rectangle,yellow]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:or[%s,%s];4:green;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:yellow;1:%s.o;2:x
'λx.apply(and[and[yellow,rectangle],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:rectangle;4:size3;1:%s.o;2:x
'λx.contains(iota(filter(x.s, size3)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;3:%s.s;2:x
'λx.contains(iota(filter(x.s, size2)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;3:%s.s;2:x
'λx.contains(iota(filter(x.s, size1)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;3:%s.s;2:x
'λx.exists(nand[yellow,not[circle]], filter(x.s, size2))'	0:exists(%s, %s);4:nand[%s,%s];4:yellow;4:not[%s];4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.forall(size1,filter(x.s, and[size3,and[or[triangle,yellow],blue]]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:and[%s,%s];4:or[%s,%s];4:triangle;4:yellow;4:blue
'λx.apply(and[and[yellow,size3],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:size3;4:rectangle;1:%s.o;2:x
'λx.apply(apply(same_color,iota(x.s)),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(or[and[circle,circle],triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:circle;4:circle;4:triangle;1:%s.o;2:x
'λx.exists(and[size2,size1], filter(filter(filter(x.s, nand[and[size2,size2],size3]), rectangle), and[size2,or[iff[blue,and[apply(same_color,iota(x.s)),blue]],green]]))'	0:exists(%s, %s);4:and[%s,%s];4:size2;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:and[%s,%s];4:size2;4:size2;4:size3;4:rectangle;4:and[%s,%s];4:size2;4:or[%s,%s];4:iff[%s,%s];4:blue;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:blue;4:green
'λx.apply(size3,iota(filter(filter(filter(x.s, rectangle), size3), size2)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3;4:size2
'λx.apply(green,iota(filter(filter(filter(x.s, rectangle), triangle), rectangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle;4:rectangle
'λx.apply(implies[blue,and[iff[apply(same_color,iota(filter(x.s, green))),blue],not[and[not[yellow],size1]]]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:blue;4:and[%s,%s];4:iff[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue;4:not[%s];4:and[%s,%s];4:not[%s];4:yellow;4:size1;1:%s.o;2:x
'λx.apply(or[and[circle,and[and[not[size3],apply(size-leq,iota(filter(x.s, size1)))],and[or[not[circle],or[rectangle,yellow]],size3]]],or[not[nand[size2,or[triangle,implies[and[and[and[green,size1],size2],size2],circle]]]],green]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size3;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:circle;4:or[%s,%s];4:rectangle;4:yellow;4:size3;4:or[%s,%s];4:not[%s];4:nand[%s,%s];4:size2;4:or[%s,%s];4:triangle;4:implies[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:size1;4:size2;4:size2;4:circle;4:green;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, iff[green,size1])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:green;4:size1
'λx.exists(rectangle, filter(x.s, size2))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.exists(rectangle, filter(x.s, size3))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(size1,iota(filter(x.s, apply(same_shape,iota(filter(x.s, or[and[apply(same_shape,iota(filter(filter(x.s, size2), not[green]))),triangle],and[triangle,green]]))))))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:not[%s];4:green;4:triangle;4:and[%s,%s];4:triangle;4:green
'λx.empty(filter(x.s, and[apply(same_shape,x.o),rectangle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle
'λx.apply(or[green,and[nor[blue,yellow],rectangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:and[%s,%s];4:nor[%s,%s];4:blue;4:yellow;4:rectangle;1:%s.o;2:x
'λx.apply(or[green,yellow],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(x.s, apply(size-geq,iota(x.s)))))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(filter(x.s, blue), rectangle), or[circle,yellow]), circle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle;4:or[%s,%s];4:circle;4:yellow;4:circle
'λx.apply(size3,iota(filter(filter(x.s, size2), and[circle,rectangle])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:circle;4:rectangle
'λx.apply(apply(same_size,iota(filter(x.s, green))),iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.contains(iota(filter(x.s, and[size1,size1])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size1;3:%s.s;2:x
'λx.apply(apply(same_size,x.o),iota(filter(x.s, apply(same_size,iota(x.s)))))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(or[nand[circle,size2],yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:circle;4:size2;4:yellow;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, size2), blue)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue
'λx.contains(x.o, filter(x.s, and[size3,size2]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:size2
'λx.apply(and[and[and[circle,circle],or[and[rectangle,nand[size3,size2]],and[apply(size-leq,iota(filter(x.s, triangle))),green]]],not[rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:circle;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:nand[%s,%s];4:size3;4:size2;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.exists(and[apply(size-lt,x.o),size1], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:size1;3:%s.s;2:x
'λx.apply(nor[apply(same_size,x.o),rectangle],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(x.s, or[not[size3],green])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:size3;4:green
'λx.apply(not[and[yellow,not[rectangle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:yellow;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.apply(iff[circle,and[apply(same_size,iota(x.s)),size1]],iota(filter(filter(x.s, triangle), green)))'	0:apply(%s,%s);4:iff[%s,%s];4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green
'λx.apply(implies[size3,rectangle],iota(filter(filter(x.s, and[apply(same_color,iota(filter(x.s, not[circle]))),circle]), or[circle,apply(size-leq,iota(filter(filter(x.s, or[or[and[yellow,not[circle]],and[yellow,circle]],size1]), size3)))])))'	0:apply(%s,%s);4:implies[%s,%s];4:size3;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:circle;4:or[%s,%s];4:circle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:yellow;4:not[%s];4:circle;4:and[%s,%s];4:yellow;4:circle;4:size1;4:size3
'λx.empty(filter(filter(filter(x.s, green), implies[green,and[green,size2]]), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:implies[%s,%s];4:green;4:and[%s,%s];4:green;4:size2;4:size1
'λx.apply(rectangle,iota(filter(filter(x.s, size2), not[size1])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:not[%s];4:size1
'λx.apply(and[apply(same_color,iota(filter(filter(filter(filter(x.s, circle), apply(size-leq,x.o)), or[rectangle,green]), rectangle))),apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:or[%s,%s];4:rectangle;4:green;4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.exists(circle, filter(x.s, rectangle))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(apply(size-leq,iota(filter(x.s, blue))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(or[blue,apply(size-lt,iota(x.s))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(and[triangle,and[rectangle,apply(same_color,iota(x.s))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, apply(same_shape,iota(x.s))), rectangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:rectangle
'λx.forall(apply(same_shape,iota(filter(x.s, or[size1,size1]))),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:size1;3:%s.s;2:x
'λx.apply(and[and[size2,not[green]],rectangle],iota(filter(filter(filter(x.s, circle), not[nand[or[and[size3,triangle],or[and[circle,and[green,size1]],size1]],not[nand[or[green,blue],circle]]]]), iff[green,and[or[apply(size-lt,iota(x.s)),size1],green]])))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size2;4:not[%s];4:green;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:nand[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size3;4:triangle;4:or[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:green;4:size1;4:size1;4:not[%s];4:nand[%s,%s];4:or[%s,%s];4:green;4:blue;4:circle;4:iff[%s,%s];4:green;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:size1;4:green
'λx.apply(nor[circle,blue],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:circle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.exists(size3, filter(x.s, or[size2,size1]))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:size1
'λx.apply(yellow,iota(filter(filter(x.s, yellow), circle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle
'λx.apply(not[triangle],iota(filter(filter(x.s, triangle), nand[triangle,rectangle])))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:nand[%s,%s];4:triangle;4:rectangle
'λx.apply(and[implies[and[rectangle,green],nand[and[size1,yellow],rectangle]],size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:rectangle;4:green;4:nand[%s,%s];4:and[%s,%s];4:size1;4:yellow;4:rectangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(filter(x.s, apply(same_size,x.o)), blue), iff[and[apply(same_color,iota(x.s)),green],size1]), size3))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;4:iff[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:green;4:size1;4:size3
'λx.apply(apply(size-leq,iota(filter(x.s, and[apply(same_color,x.o),triangle]))),iota(filter(filter(filter(x.s, size3), or[and[size3,not[size2]],not[rectangle]]), and[green,size3])))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:and[%s,%s];4:size3;4:not[%s];4:size2;4:not[%s];4:rectangle;4:and[%s,%s];4:green;4:size3
'λx.apply(apply(size-leq,iota(filter(x.s, size2))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(not[blue],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[size3,nor[blue,not[yellow]]],iota(filter(filter(x.s, green), and[size3,nor[and[implies[and[triangle,not[yellow]],green],size2],size2]])))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:nor[%s,%s];4:blue;4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:size3;4:nor[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:triangle;4:not[%s];4:yellow;4:green;4:size2;4:size2
'λx.empty(filter(x.s, apply(same_color,iota(filter(x.s, size2)))))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.forall(or[and[not[and[circle,size2]],not[or[circle,not[nor[blue,triangle]]]]],size3],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:circle;4:size2;4:not[%s];4:or[%s,%s];4:circle;4:not[%s];4:nor[%s,%s];4:blue;4:triangle;4:size3;3:%s.s;2:x
'λx.apply(nand[yellow,green],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:yellow;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[not[or[apply(same_color,x.o),implies[blue,yellow]]],apply(same_shape,x.o)],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:not[%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:implies[%s,%s];4:blue;4:yellow;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.contains(iota(filter(x.s, or[size1,blue])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:blue;3:%s.s;2:x
'λx.exists(triangle, x.s)'	0:exists(%s, %s);4:triangle;3:%s.s;2:x
'λx.apply(apply(same_size,x.o),iota(filter(filter(filter(filter(x.s, size1), triangle), rectangle), circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle;4:rectangle;4:circle
'λx.apply(and[or[size2,apply(same_color,iota(filter(x.s, blue)))],or[blue,size1]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:blue;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size2,and[green,triangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:and[%s,%s];4:green;4:triangle;1:%s.o;2:x
'λx.apply(rectangle,iota(x.s))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[size1,size3],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:size1;4:size3;1:%s.o;2:x
'λx.apply(or[green,circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:circle;1:%s.o;2:x
'λx.apply(or[nor[size1,circle],triangle],iota(filter(filter(filter(filter(x.s, green), apply(same_shape,x.o)), or[circle,size2]), circle)))'	0:apply(%s,%s);4:or[%s,%s];4:nor[%s,%s];4:size1;4:circle;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:circle;4:size2;4:circle
'λx.apply(or[or[triangle,size3],size3],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:triangle;4:size3;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(not[circle],iota(filter(filter(filter(filter(filter(filter(filter(filter(x.s, triangle), and[blue,yellow]), blue), or[or[blue,apply(same_size,x.o)],circle]), size1), size3), or[rectangle,not[and[and[size1,circle],size2]]]), and[size1,and[size1,size1]])))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:blue;4:yellow;4:blue;4:or[%s,%s];4:or[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;4:size1;4:size3;4:or[%s,%s];4:rectangle;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:circle;4:size2;4:and[%s,%s];4:size1;4:and[%s,%s];4:size1;4:size1
'λx.empty(filter(filter(filter(filter(filter(x.s, apply(size-lt,x.o)), blue), green), size3), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:blue;4:green;4:size3;4:circle
'λx.contains(iota(filter(x.s, apply(same_color,x.o))), filter(filter(x.s, and[yellow,triangle]), not[size1]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:triangle;4:not[%s];4:size1
'λx.apply(yellow,iota(filter(x.s, nand[size2,apply(same_color,x.o)])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(not[or[size2,circle]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:size2;4:circle;1:%s.o;2:x
'λx.apply(nor[green,size1],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:green;4:size1;1:%s.o;2:x
'λx.contains(iota(x.s), filter(x.s, triangle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.contains(iota(filter(x.s, and[or[green,size1],and[size1,and[size1,apply(same_color,iota(filter(filter(x.s, apply(same_color,x.o)), size2)))]]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:green;4:size1;4:and[%s,%s];4:size1;4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size2;3:%s.s;2:x
'λx.apply(triangle,iota(filter(x.s, and[not[triangle],rectangle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:triangle;4:rectangle
'λx.forall(apply(same_shape,x.o),filter(filter(filter(x.s, blue), or[size2,green]), or[nor[circle,and[size2,size2]],circle]))'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:size2;4:green;4:or[%s,%s];4:nor[%s,%s];4:circle;4:and[%s,%s];4:size2;4:size2;4:circle
'λx.apply(and[size2,implies[size1,and[green,circle]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:implies[%s,%s];4:size1;4:and[%s,%s];4:green;4:circle;1:%s.o;2:x
'λx.apply(implies[implies[green,blue],not[triangle]],iota(filter(filter(filter(x.s, not[and[size1,size2]]), and[size2,size1]), and[green,size2])))'	0:apply(%s,%s);4:implies[%s,%s];4:implies[%s,%s];4:green;4:blue;4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:size1;4:size2;4:and[%s,%s];4:size2;4:size1;4:and[%s,%s];4:green;4:size2
'λx.apply(or[size1,green],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size1,and[blue,green]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:and[%s,%s];4:blue;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(filter(filter(filter(filter(filter(x.s, nand[iff[circle,rectangle],blue]), not[and[blue,rectangle]]), size1), not[size1]), circle), iff[apply(size-gt,iota(filter(x.s, and[and[circle,size1],rectangle]))),and[green,not[circle]]]), iff[rectangle,or[apply(same_color,iota(x.s)),green]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:iff[%s,%s];4:circle;4:rectangle;4:blue;4:not[%s];4:and[%s,%s];4:blue;4:rectangle;4:size1;4:not[%s];4:size1;4:circle;4:iff[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:circle;4:size1;4:rectangle;4:and[%s,%s];4:green;4:not[%s];4:circle;4:iff[%s,%s];4:rectangle;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:green
'λx.contains(iota(x.s), filter(x.s, and[yellow,and[size1,blue]]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:and[%s,%s];4:size1;4:blue
'λx.empty(filter(x.s, apply(same_size,iota(x.s))))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.exists(yellow, x.s)'	0:exists(%s, %s);4:yellow;3:%s.s;2:x
'λx.apply(or[size2,green],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(not[apply(size-leq,iota(x.s))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.exists(iff[and[size2,blue],apply(same_size,iota(x.s))], filter(filter(filter(x.s, blue), circle), yellow))'	0:exists(%s, %s);4:iff[%s,%s];4:and[%s,%s];4:size2;4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle;4:yellow
'λx.apply(and[rectangle,or[size3,size3]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:or[%s,%s];4:size3;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[rectangle,or[size3,size2]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:or[%s,%s];4:size3;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(or[circle,rectangle],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.exists(or[size2,green], filter(filter(x.s, and[and[green,size1],triangle]), blue))'	0:exists(%s, %s);4:or[%s,%s];4:size2;4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:green;4:size1;4:triangle;4:blue
'λx.apply(apply(same_size,x.o),iota(filter(filter(x.s, and[rectangle,apply(same_size,iota(x.s))]), rectangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:rectangle
'λx.apply(rectangle,iota(filter(filter(filter(filter(x.s, yellow), iff[implies[size2,rectangle],and[and[size3,and[circle,apply(size-geq,iota(x.s))]],triangle]]), and[yellow,size1]), triangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:iff[%s,%s];4:implies[%s,%s];4:size2;4:rectangle;4:and[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:circle;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:yellow;4:size1;4:triangle
'λx.apply(not[iff[iff[apply(same_size,x.o),and[circle,circle]],and[triangle,and[not[and[green,rectangle]],size2]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:iff[%s,%s];4:iff[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:circle;4:circle;4:and[%s,%s];4:triangle;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:green;4:rectangle;4:size2;1:%s.o;2:x
'λx.exists(or[size1,apply(same_size,iota(x.s))], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.empty(filter(filter(x.s, or[yellow,circle]), and[green,size3]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:circle;4:and[%s,%s];4:green;4:size3
'λx.apply(and[yellow,and[size3,rectangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:and[%s,%s];4:size3;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(x.s, and[and[yellow,size3],rectangle]), green)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:yellow;4:size3;4:rectangle;4:green
'λx.apply(and[or[or[or[apply(size-leq,x.o),and[or[blue,rectangle],blue]],size1],circle],or[triangle,circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:and[%s,%s];4:or[%s,%s];4:blue;4:rectangle;4:blue;4:size1;4:circle;4:or[%s,%s];4:triangle;4:circle;1:%s.o;2:x
'λx.apply(not[size1],iota(filter(x.s, nor[size3,apply(same_color,x.o)])))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.forall(nand[yellow,size1],x.s)'	0:forall(%s,%s);4:nand[%s,%s];4:yellow;4:size1;3:%s.s;2:x
'λx.apply(or[green,rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:rectangle;1:%s.o;2:x
'λx.apply(or[or[size1,size3],and[green,size3]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:size1;4:size3;4:and[%s,%s];4:green;4:size3;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(filter(x.s, iff[yellow,circle]), circle), implies[rectangle,circle])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:yellow;4:circle;4:circle;4:implies[%s,%s];4:rectangle;4:circle
'λx.apply(not[iff[not[green],blue]],x.o)'	0:apply(%s,%s);4:not[%s];4:iff[%s,%s];4:not[%s];4:green;4:blue;1:%s.o;2:x
'λx.apply(and[implies[size3,size2],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:size3;4:size2;4:size3;1:%s.o;2:x
'λx.apply(and[size1,apply(size-geq,x.o)],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(or[apply(same_shape,iota(x.s)),size3],iota(filter(x.s, and[size1,size3])))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size3
'λx.forall(rectangle,filter(filter(x.s, size2), rectangle))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle
'λx.contains(iota(filter(filter(x.s, or[green,and[yellow,green]]), yellow)), filter(filter(filter(filter(filter(filter(filter(x.s, and[green,blue]), rectangle), and[and[yellow,size2],and[or[size2,apply(same_shape,x.o)],size3]]), size1), yellow), size3), not[triangle]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:and[%s,%s];4:yellow;4:green;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:blue;4:rectangle;4:and[%s,%s];4:and[%s,%s];4:yellow;4:size2;4:and[%s,%s];4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3;4:size1;4:yellow;4:size3;4:not[%s];4:triangle
'λx.exists(size3, filter(filter(x.s, and[and[triangle,blue],or[rectangle,not[rectangle]]]), nor[triangle,blue]))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:triangle;4:blue;4:or[%s,%s];4:rectangle;4:not[%s];4:rectangle;4:nor[%s,%s];4:triangle;4:blue
'λx.apply(size2,iota(filter(filter(x.s, rectangle), apply(same_shape,iota(x.s)))))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(and[apply(size-geq,x.o),size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:size1;1:%s.o;2:x
'λx.forall(nor[and[triangle,triangle],size2],x.s)'	0:forall(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:triangle;4:triangle;4:size2;3:%s.s;2:x
'λx.apply(not[rectangle],iota(filter(filter(filter(x.s, and[yellow,size2]), size2), nand[green,size3])))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size2;4:size2;4:nand[%s,%s];4:green;4:size3
'λx.apply(nor[or[size3,size3],yellow],iota(filter(filter(filter(x.s, yellow), or[size2,not[size2]]), and[nor[yellow,circle],nor[size3,rectangle]])))'	0:apply(%s,%s);4:nor[%s,%s];4:or[%s,%s];4:size3;4:size3;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:size2;4:not[%s];4:size2;4:and[%s,%s];4:nor[%s,%s];4:yellow;4:circle;4:nor[%s,%s];4:size3;4:rectangle
'λx.exists(and[rectangle,not[rectangle]], filter(x.s, apply(size-gt,x.o)))'	0:exists(%s, %s);4:and[%s,%s];4:rectangle;4:not[%s];4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, nand[and[size1,circle],blue])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:and[%s,%s];4:size1;4:circle;4:blue
'λx.apply(and[size2,and[and[yellow,and[not[yellow],apply(same_shape,iota(x.s))]],blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:not[%s];4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.apply(iff[and[blue,green],green],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:blue;4:green;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(size-geq,iota(x.s)),iota(filter(x.s, blue)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(circle,iota(filter(x.s, and[circle,size2])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size2
'λx.empty(filter(x.s, and[yellow,rectangle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:rectangle
'λx.apply(apply(same_color,iota(filter(x.s, triangle))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(x.s, apply(same_size,x.o)))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(or[size3,green],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(x.s, not[blue])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.apply(apply(same_shape,iota(filter(filter(filter(filter(filter(x.s, rectangle), blue), circle), triangle), triangle))),iota(filter(filter(x.s, rectangle), apply(same_color,x.o))))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue;4:circle;4:triangle;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(apply(same_size,iota(x.s)),iota(filter(x.s, blue)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.contains(iota(filter(filter(x.s, size3), or[triangle,size1])), filter(filter(x.s, rectangle), green))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:triangle;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green
'λx.forall(and[nor[blue,yellow],circle],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:blue;4:yellow;4:circle;3:%s.s;2:x
'λx.apply(not[yellow],x.o)'	0:apply(%s,%s);4:not[%s];4:yellow;1:%s.o;2:x
'λx.apply(nand[not[triangle],not[rectangle]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:not[%s];4:triangle;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.apply(or[size2,apply(size-geq,x.o)],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[circle,triangle],iota(filter(filter(x.s, size2), size1)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1
'λx.forall(yellow,filter(x.s, not[size1]))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1
'λx.exists(yellow, filter(filter(filter(x.s, nand[or[size2,apply(same_size,iota(filter(filter(filter(x.s, size3), size3), nor[not[blue],blue])))],size1]), and[nor[apply(same_size,iota(x.s)),apply(same_shape,iota(filter(x.s, size3)))],size1]), and[apply(same_color,x.o),or[apply(same_shape,iota(x.s)),triangle]]))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3;4:nor[%s,%s];4:not[%s];4:blue;4:blue;4:size1;4:and[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle
'λx.apply(and[nor[and[triangle,size2],and[or[and[circle,circle],rectangle],circle]],size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:triangle;4:size2;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:circle;4:circle;4:rectangle;4:circle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[green,circle],iota(filter(filter(filter(x.s, not[size2]), circle), size2)))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:circle;4:size2
'λx.apply(blue,iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(rectangle,iota(filter(x.s, and[not[and[blue,green]],size1])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:blue;4:green;4:size1
'λx.apply(iff[yellow,or[triangle,yellow]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:yellow;4:or[%s,%s];4:triangle;4:yellow;1:%s.o;2:x
'λx.apply(and[triangle,circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:circle;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, green), apply(same_size,iota(x.s)))), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(iff[size3,nor[nor[blue,not[triangle]],size3]],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:iff[%s,%s];4:size3;4:nor[%s,%s];4:nor[%s,%s];4:blue;4:not[%s];4:triangle;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(not[or[apply(size-geq,iota(x.s)),rectangle]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(size-lt,iota(filter(x.s, blue))),iota(filter(x.s, size2)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(and[circle,rectangle],iota(filter(filter(x.s, iff[triangle,or[blue,and[triangle,not[not[yellow]]]]]), size1)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:triangle;4:or[%s,%s];4:blue;4:and[%s,%s];4:triangle;4:not[%s];4:not[%s];4:yellow;4:size1
'λx.exists(apply(same_shape,x.o), filter(filter(x.s, or[and[triangle,circle],blue]), triangle))'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:triangle;4:circle;4:blue;4:triangle
'λx.forall(size1,filter(x.s, and[size1,size1]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size1
'λx.apply(triangle,iota(filter(x.s, or[size2,yellow])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:yellow
'λx.contains(iota(filter(x.s, green)), filter(x.s, yellow))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.forall(size2,filter(x.s, or[rectangle,rectangle]))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:rectangle
'λx.apply(size2,iota(filter(filter(x.s, yellow), not[or[size1,and[circle,iff[and[triangle,rectangle],size2]]]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:or[%s,%s];4:size1;4:and[%s,%s];4:circle;4:iff[%s,%s];4:and[%s,%s];4:triangle;4:rectangle;4:size2
'λx.exists(apply(same_color,x.o), filter(x.s, circle))'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.exists(rectangle, x.s)'	0:exists(%s, %s);4:rectangle;3:%s.s;2:x
'λx.apply(and[green,nor[green,blue]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:nor[%s,%s];4:green;4:blue;1:iota(%s);3:%s.s;2:x
'λx.exists(and[size2,size1], filter(filter(filter(filter(x.s, yellow), size3), size1), nand[yellow,or[size2,or[apply(same_shape,iota(x.s)),or[or[circle,rectangle],apply(size-lt,x.o)]]]]))'	0:exists(%s, %s);4:and[%s,%s];4:size2;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size3;4:size1;4:nand[%s,%s];4:yellow;4:or[%s,%s];4:size2;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:circle;4:rectangle;4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.empty(filter(x.s, and[not[and[blue,size1]],triangle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:blue;4:size1;4:triangle
'λx.apply(iff[yellow,triangle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:yellow;4:triangle;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(x.s, size3), nor[blue,apply(same_color,x.o)])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:nor[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(or[size2,not[and[circle,size1]]],iota(filter(filter(x.s, or[size3,and[yellow,triangle]]), rectangle)))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:not[%s];4:and[%s,%s];4:circle;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:and[%s,%s];4:yellow;4:triangle;4:rectangle
'λx.contains(iota(filter(filter(x.s, size1), apply(same_color,iota(filter(x.s, rectangle))))), filter(x.s, size2))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.forall(green,filter(x.s, rectangle))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(rectangle,iota(filter(x.s, or[apply(same_color,x.o),and[apply(same_shape,x.o),size3]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3
'λx.apply(implies[size1,rectangle],iota(filter(x.s, not[triangle])))'	0:apply(%s,%s);4:implies[%s,%s];4:size1;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.contains(x.o, filter(x.s, and[or[and[size1,and[rectangle,apply(size-lt,x.o)]],and[rectangle,yellow]],blue]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:and[%s,%s];4:rectangle;4:yellow;4:blue
'λx.apply(or[size2,green],iota(filter(x.s, or[triangle,triangle])))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:triangle
'λx.apply(and[apply(same_color,iota(x.s)),nand[apply(same_shape,iota(x.s)),or[blue,implies[size3,or[size3,or[triangle,rectangle]]]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:implies[%s,%s];4:size3;4:or[%s,%s];4:size3;4:or[%s,%s];4:triangle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[size3],iota(filter(filter(filter(x.s, green), triangle), iff[size3,rectangle])))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:triangle;4:iff[%s,%s];4:size3;4:rectangle
'λx.apply(and[size3,iff[and[circle,size3],blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:iff[%s,%s];4:and[%s,%s];4:circle;4:size3;4:blue;1:%s.o;2:x
'λx.apply(implies[or[yellow,green],circle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:or[%s,%s];4:yellow;4:green;4:circle;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(x.s, or[circle,iff[yellow,apply(same_color,x.o)]]), not[size1])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:iff[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:size1
'λx.apply(size1,iota(filter(filter(filter(filter(x.s, and[blue,and[rectangle,triangle]]), size3), triangle), apply(size-gt,x.o))))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:triangle;4:size3;4:triangle;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, not[or[iff[size1,nor[apply(same_color,x.o),size1]],size3]]), size2)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:iff[%s,%s];4:size1;4:nor[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1;4:size3;4:size2
'λx.apply(yellow,iota(filter(x.s, blue)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[apply(same_shape,x.o),blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue;1:%s.o;2:x
'λx.apply(nand[size1,size1],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:nand[%s,%s];4:size1;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.contains(iota(x.s), filter(filter(x.s, and[or[and[triangle,or[size1,not[size2]]],blue],size3]), apply(size-lt,x.o)))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:triangle;4:or[%s,%s];4:size1;4:not[%s];4:size2;4:blue;4:size3;4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.forall(apply(same_color,x.o),filter(x.s, triangle))'	0:forall(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.exists(yellow, filter(filter(x.s, yellow), and[and[nand[green,and[and[green,apply(same_color,iota(x.s))],size1]],not[rectangle]],yellow]))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size1;4:not[%s];4:rectangle;4:yellow
'λx.empty(filter(x.s, apply(same_color,x.o)))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.forall(triangle,filter(x.s, or[size2,rectangle]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:rectangle
'λx.apply(and[and[rectangle,triangle],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:rectangle;4:triangle;4:size1;1:%s.o;2:x
'λx.forall(blue,filter(filter(filter(filter(x.s, blue), not[not[size2]]), not[blue]), circle))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:not[%s];4:size2;4:not[%s];4:blue;4:circle
'λx.forall(not[size3],x.s)'	0:forall(%s,%s);4:not[%s];4:size3;3:%s.s;2:x
'λx.forall(not[size2],x.s)'	0:forall(%s,%s);4:not[%s];4:size2;3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(filter(filter(filter(filter(filter(x.s, and[or[rectangle,nor[and[size1,or[size2,triangle]],circle]],size3]), and[size1,size3]), triangle), not[size3]), yellow), apply(same_color,iota(filter(filter(x.s, yellow), and[circle,size3])))), size1)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:nor[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:size2;4:triangle;4:circle;4:size3;4:and[%s,%s];4:size1;4:size3;4:triangle;4:not[%s];4:size3;4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:circle;4:size3;4:size1
'λx.forall(circle,filter(filter(filter(x.s, yellow), yellow), rectangle))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:yellow;4:rectangle
'λx.contains(x.o, filter(filter(x.s, not[size2]), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:green
'λx.apply(apply(same_color,x.o),iota(filter(filter(x.s, and[not[circle],and[apply(same_shape,iota(filter(filter(x.s, rectangle), not[size3]))),and[or[size1,green],and[size2,green]]]]), rectangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:size3;4:and[%s,%s];4:or[%s,%s];4:size1;4:green;4:and[%s,%s];4:size2;4:green;4:rectangle
'λx.apply(circle,iota(filter(x.s, not[and[size2,blue]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:size2;4:blue
'λx.apply(nand[green,or[size1,and[apply(same_size,iota(x.s)),apply(same_shape,x.o)]]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:green;4:or[%s,%s];4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(iff[apply(size-lt,x.o),iff[and[apply(same_size,iota(filter(filter(filter(filter(x.s, iff[not[rectangle],yellow]), nand[size2,triangle]), and[rectangle,blue]), size3))),iff[size2,rectangle]],yellow]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:iff[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:not[%s];4:rectangle;4:yellow;4:nand[%s,%s];4:size2;4:triangle;4:and[%s,%s];4:rectangle;4:blue;4:size3;4:iff[%s,%s];4:size2;4:rectangle;4:yellow;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, or[size3,triangle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:triangle
'λx.apply(or[apply(same_size,x.o),green],iota(filter(x.s, not[and[size2,size2]])))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:size2;4:size2
'λx.apply(and[size3,yellow],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(circle,iota(filter(filter(filter(filter(filter(filter(filter(filter(x.s, and[blue,size3]), size1), size1), size1), nand[or[circle,circle],triangle]), apply(same_shape,iota(x.s))), apply(size-leq,iota(x.s))), and[green,size1])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size3;4:size1;4:size1;4:size1;4:nand[%s,%s];4:or[%s,%s];4:circle;4:circle;4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:green;4:size1
'λx.apply(triangle,iota(filter(filter(filter(x.s, implies[size3,size3]), apply(same_color,x.o)), triangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size3;4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle
'λx.apply(implies[apply(same_color,x.o),triangle],iota(filter(x.s, nor[nor[apply(same_size,x.o),size3],not[blue]])))'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;4:not[%s];4:blue
'λx.forall(and[yellow,yellow],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:yellow;4:yellow;3:%s.s;2:x
'λx.apply(apply(same_size,iota(filter(x.s, not[green]))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[triangle,and[blue,and[size1,not[blue]]]],iota(filter(filter(x.s, circle), size2)))'	0:apply(%s,%s);4:iff[%s,%s];4:triangle;4:and[%s,%s];4:blue;4:and[%s,%s];4:size1;4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size2
'λx.apply(apply(size-lt,x.o),iota(filter(filter(x.s, iff[circle,or[blue,yellow]]), size2)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:circle;4:or[%s,%s];4:blue;4:yellow;4:size2
'λx.forall(or[iff[size3,size3],triangle],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:iff[%s,%s];4:size3;4:size3;4:triangle;3:%s.s;2:x
'λx.apply(not[and[or[size3,triangle],or[apply(same_size,x.o),green]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:or[%s,%s];4:size3;4:triangle;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;1:%s.o;2:x
'λx.apply(or[green,green],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(filter(filter(x.s, size1), or[not[blue],circle]), and[triangle,yellow]), size2)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:or[%s,%s];4:not[%s];4:blue;4:circle;4:and[%s,%s];4:triangle;4:yellow;4:size2
'λx.apply(and[circle,and[size2,not[size2]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:and[%s,%s];4:size2;4:not[%s];4:size2;1:%s.o;2:x
'λx.forall(apply(same_size,x.o),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:%s.s;2:x
'λx.empty(filter(filter(filter(filter(filter(x.s, triangle), circle), and[not[green],circle]), implies[size3,triangle]), and[size2,circle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle;4:and[%s,%s];4:not[%s];4:green;4:circle;4:implies[%s,%s];4:size3;4:triangle;4:and[%s,%s];4:size2;4:circle
'λx.apply(iff[circle,triangle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:circle;4:triangle;1:%s.o;2:x
'λx.forall(blue,filter(filter(filter(x.s, size2), size3), not[size1]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3;4:not[%s];4:size1
'λx.forall(apply(size-leq,x.o),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:size-leq;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(filter(filter(x.s, yellow), rectangle), apply(same_color,x.o)), and[yellow,blue])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:yellow;4:blue
'λx.apply(and[and[iff[or[yellow,or[or[size1,rectangle],blue]],size3],and[apply(same_size,x.o),green]],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:yellow;4:or[%s,%s];4:or[%s,%s];4:size1;4:rectangle;4:blue;4:size3;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;4:rectangle;1:%s.o;2:x
'λx.contains(iota(filter(x.s, rectangle)), filter(x.s, size3))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(and[and[apply(same_color,iota(x.s)),rectangle],not[green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:rectangle;4:not[%s];4:green;1:%s.o;2:x
'λx.forall(rectangle,filter(x.s, and[green,apply(same_color,iota(x.s))]))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(not[not[circle]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:circle;1:%s.o;2:x
'λx.apply(nand[and[iff[apply(same_shape,x.o),size1],blue],implies[triangle,triangle]],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;4:blue;4:implies[%s,%s];4:triangle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[implies[or[apply(same_color,iota(x.s)),size3],and[and[size2,or[and[circle,triangle],size2]],size3]],blue],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:and[%s,%s];4:size2;4:or[%s,%s];4:and[%s,%s];4:circle;4:triangle;4:size2;4:size3;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(or[apply(same_size,x.o),triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle;1:%s.o;2:x
'λx.apply(nor[green,not[size3]],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:green;4:not[%s];4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(x.s, apply(same_color,x.o))))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(size3,iota(filter(x.s, apply(same_color,x.o))))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(size1,iota(filter(x.s, apply(same_color,x.o))))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.exists(and[yellow,yellow], filter(x.s, not[circle]))'	0:exists(%s, %s);4:and[%s,%s];4:yellow;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.apply(blue,iota(filter(filter(filter(filter(x.s, rectangle), rectangle), green), size2)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle;4:green;4:size2
'λx.exists(green, filter(filter(filter(filter(x.s, and[size1,size1]), implies[green,green]), blue), rectangle))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size1;4:implies[%s,%s];4:green;4:green;4:blue;4:rectangle
'λx.apply(not[implies[triangle,or[size1,rectangle]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:implies[%s,%s];4:triangle;4:or[%s,%s];4:size1;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, implies[and[yellow,nor[apply(size-leq,iota(filter(filter(filter(x.s, size3), not[green]), size3))),triangle]],and[rectangle,blue]]), not[size3])), filter(filter(x.s, and[green,and[rectangle,rectangle]]), blue))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:and[%s,%s];4:yellow;4:nor[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:green;4:size3;4:triangle;4:and[%s,%s];4:rectangle;4:blue;4:not[%s];4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:and[%s,%s];4:rectangle;4:rectangle;4:blue
'λx.apply(blue,iota(x.s))'	0:apply(%s,%s);4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(x.s, and[or[rectangle,size1],size1])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:size1;4:size1
'λx.apply(and[size3,nor[and[circle,or[green,triangle]],rectangle]],iota(filter(x.s, and[triangle,iff[circle,and[circle,blue]]])))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:nor[%s,%s];4:and[%s,%s];4:circle;4:or[%s,%s];4:green;4:triangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:iff[%s,%s];4:circle;4:and[%s,%s];4:circle;4:blue
'λx.apply(not[not[yellow]],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(apply(same_size,iota(filter(filter(filter(x.s, size3), blue), implies[size2,triangle]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue;4:implies[%s,%s];4:size2;4:triangle;1:%s.o;2:x
'λx.apply(and[yellow,green],iota(filter(filter(x.s, nand[triangle,blue]), green)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:triangle;4:blue;4:green
'λx.apply(or[triangle,size3],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(or[triangle,size2],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(or[triangle,size2],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(and[green,size1],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.empty(filter(filter(filter(filter(x.s, blue), circle), apply(same_size,x.o)), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1
'λx.apply(green,iota(filter(filter(x.s, blue), yellow)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow
'λx.contains(iota(filter(x.s, green)), filter(filter(x.s, green), and[blue,triangle]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:blue;4:triangle
'λx.empty(filter(x.s, or[size1,size2]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:size2
'λx.empty(filter(x.s, or[size3,size3]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:size3
'λx.apply(iff[green,size1],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:green;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(filter(filter(filter(x.s, not[size1]), blue), yellow), size1), green)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:blue;4:yellow;4:size1;4:green
'λx.apply(circle,iota(filter(filter(filter(x.s, size3), size3), size2)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3;4:size2
'λx.forall(rectangle,filter(filter(filter(x.s, triangle), triangle), circle))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:triangle;4:circle
'λx.apply(and[yellow,and[size1,green]],iota(filter(x.s, and[yellow,or[blue,and[triangle,rectangle]]])))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:and[%s,%s];4:size1;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:or[%s,%s];4:blue;4:and[%s,%s];4:triangle;4:rectangle
'λx.apply(iff[apply(size-gt,iota(filter(x.s, nand[triangle,blue]))),not[size1]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:triangle;4:blue;4:not[%s];4:size1;1:%s.o;2:x
'λx.apply(size2,iota(filter(x.s, apply(same_shape,x.o))))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(size3,iota(filter(x.s, apply(same_shape,x.o))))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, and[size1,and[apply(same_size,iota(filter(x.s, size2))),rectangle]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle
'λx.apply(blue,iota(filter(x.s, and[blue,size2])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size2
'λx.apply(and[size2,or[nand[or[size1,size1],yellow],yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:or[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:size1;4:size1;4:yellow;4:yellow;1:%s.o;2:x
'λx.apply(or[and[green,size1],size3],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:green;4:size1;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_color,iota(filter(filter(filter(filter(x.s, blue), blue), yellow), yellow))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue;4:yellow;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(and[blue,and[triangle,size2]],iota(filter(filter(x.s, size2), and[rectangle,and[triangle,not[size2]]])))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:triangle;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:triangle;4:not[%s];4:size2
'λx.empty(filter(filter(x.s, triangle), or[or[green,or[and[nand[not[nand[size3,circle]],and[yellow,blue]],blue],size3]],rectangle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:or[%s,%s];4:or[%s,%s];4:green;4:or[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:not[%s];4:nand[%s,%s];4:size3;4:circle;4:and[%s,%s];4:yellow;4:blue;4:blue;4:size3;4:rectangle
'λx.contains(x.o, filter(filter(filter(x.s, size1), rectangle), circle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle;4:circle
'λx.empty(filter(filter(filter(x.s, and[and[yellow,apply(same_size,iota(x.s))],nor[not[yellow],size3]]), size2), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:nor[%s,%s];4:not[%s];4:yellow;4:size3;4:size2;4:size3
'λx.apply(or[size1,green],iota(filter(x.s, green)))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(nand[size3,size3],iota(filter(x.s, and[green,rectangle])))'	0:apply(%s,%s);4:nand[%s,%s];4:size3;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:rectangle
'λx.apply(rectangle,iota(filter(filter(filter(x.s, or[circle,rectangle]), circle), size1)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:rectangle;4:circle;4:size1
'λx.contains(iota(x.s), filter(x.s, or[and[apply(same_shape,x.o),circle],size1]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;4:size1
'λx.apply(and[or[iff[circle,rectangle],rectangle],apply(same_shape,x.o)],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:iff[%s,%s];4:circle;4:rectangle;4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, size3)), filter(x.s, or[rectangle,circle]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:circle
'λx.forall(size3,filter(filter(x.s, size1), size1))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1
'λx.apply(and[green,and[rectangle,blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:rectangle;4:blue;1:%s.o;2:x
'λx.apply(and[and[size2,and[size2,or[rectangle,or[and[rectangle,or[size2,size1]],circle]]]],and[and[and[rectangle,blue],or[circle,size1]],triangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:size2;4:or[%s,%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:or[%s,%s];4:size2;4:size1;4:circle;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:blue;4:or[%s,%s];4:circle;4:size1;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(x.s, and[circle,and[triangle,nor[apply(same_shape,x.o),size1]]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:and[%s,%s];4:triangle;4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1
'λx.contains(iota(x.s), filter(filter(x.s, not[rectangle]), nor[triangle,blue]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;4:nor[%s,%s];4:triangle;4:blue
'λx.exists(green, filter(x.s, not[apply(size-geq,x.o)]))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.apply(and[yellow,not[circle]],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[yellow,yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_color,iota(filter(x.s, not[circle]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;1:%s.o;2:x
'λx.exists(size2, filter(x.s, not[apply(size-geq,x.o)]))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.apply(apply(size-gt,x.o),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(x.s, or[rectangle,not[and[blue,size3]]]), yellow)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:not[%s];4:and[%s,%s];4:blue;4:size3;4:yellow
'λx.exists(and[yellow,and[size3,nand[or[apply(same_size,x.o),size2],size1]]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:yellow;4:and[%s,%s];4:size3;4:nand[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2;4:size1;3:%s.s;2:x
'λx.apply(and[or[size2,yellow],size3],iota(filter(filter(filter(filter(x.s, blue), not[green]), triangle), circle)))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size2;4:yellow;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:green;4:triangle;4:circle
'λx.contains(iota(filter(filter(x.s, green), rectangle)), filter(filter(x.s, apply(same_shape,x.o)), size2))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2
'λx.forall(green,filter(filter(x.s, nor[apply(size-leq,x.o),apply(same_shape,iota(x.s))]), or[circle,green]))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:green
'λx.forall(size1,filter(x.s, and[green,blue]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:blue
'λx.apply(size3,iota(filter(x.s, or[green,not[size2]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:not[%s];4:size2
'λx.empty(filter(filter(x.s, not[triangle]), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:size3
'λx.apply(iff[size2,size2],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:size2;4:size2;1:%s.o;2:x
'λx.contains(iota(filter(x.s, size3)), filter(x.s, size1))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(and[rectangle,implies[size2,size3]],iota(filter(filter(x.s, not[yellow]), green)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:implies[%s,%s];4:size2;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:green
'λx.apply(blue,iota(filter(x.s, not[triangle])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.apply(yellow,iota(filter(x.s, not[yellow])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow
'λx.apply(and[and[size2,blue],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size2;4:blue;4:size2;1:%s.o;2:x
'λx.apply(or[apply(same_size,x.o),size2],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[size1,or[not[and[apply(same_size,x.o),circle]],triangle]],iota(filter(x.s, nand[circle,circle])))'	0:apply(%s,%s);4:implies[%s,%s];4:size1;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:circle;4:circle
'λx.apply(rectangle,iota(filter(x.s, not[blue])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.apply(nand[and[yellow,blue],blue],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:yellow;4:blue;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(or[apply(same_size,iota(x.s)),iff[triangle,apply(same_size,x.o)]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:iff[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[blue,triangle],iota(filter(filter(x.s, circle), and[green,not[or[or[size1,green],nand[rectangle,size2]]]])))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:green;4:not[%s];4:or[%s,%s];4:or[%s,%s];4:size1;4:green;4:nand[%s,%s];4:rectangle;4:size2
'λx.exists(apply(same_color,x.o), filter(x.s, blue))'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(or[apply(same_size,iota(filter(x.s, not[iff[not[or[size2,green]],green]]))),and[size1,and[and[blue,rectangle],triangle]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:iff[%s,%s];4:not[%s];4:or[%s,%s];4:size2;4:green;4:green;4:and[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:blue;4:rectangle;4:triangle;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(x.s, blue), yellow)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow
'λx.exists(blue, filter(filter(x.s, size3), size1))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size1
'λx.apply(not[size2],iota(filter(filter(x.s, green), triangle)))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:triangle
'λx.apply(size3,iota(filter(filter(filter(x.s, blue), green), yellow)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green;4:yellow
'λx.forall(or[size1,and[rectangle,circle]],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:size1;4:and[%s,%s];4:rectangle;4:circle;3:%s.s;2:x
'λx.exists(circle, filter(filter(x.s, rectangle), apply(same_shape,x.o)))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.contains(iota(filter(x.s, green)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;3:%s.s;2:x
'λx.apply(or[size3,size2],iota(filter(filter(x.s, apply(same_size,iota(filter(x.s, circle)))), size1)))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1
'λx.apply(implies[rectangle,or[size1,apply(size-gt,iota(x.s))]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:rectangle;4:or[%s,%s];4:size1;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(not[or[blue,rectangle]],iota(filter(x.s, implies[size1,size2])))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:blue;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size1;4:size2
'λx.apply(and[yellow,or[size3,and[blue,circle]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:or[%s,%s];4:size3;4:and[%s,%s];4:blue;4:circle;1:%s.o;2:x
'λx.forall(and[or[size1,circle],size2],filter(x.s, iff[and[not[size2],or[yellow,blue]],green]))'	0:forall(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size1;4:circle;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:and[%s,%s];4:not[%s];4:size2;4:or[%s,%s];4:yellow;4:blue;4:green
'λx.apply(and[circle,apply(same_size,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, apply(same_color,iota(filter(filter(x.s, rectangle), rectangle)))))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle
'λx.apply(yellow,iota(filter(x.s, circle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[blue,not[size3]],iota(filter(filter(x.s, size2), size3)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3
'λx.apply(and[rectangle,not[rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.apply(and[and[not[apply(same_size,x.o)],nand[yellow,circle]],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:nand[%s,%s];4:yellow;4:circle;4:yellow;1:%s.o;2:x
'λx.apply(and[not[and[green,size2]],or[size1,circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:green;4:size2;4:or[%s,%s];4:size1;4:circle;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(x.s, and[green,or[nor[green,apply(same_color,iota(filter(filter(x.s, green), apply(same_shape,x.o))))],size3]]), yellow))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:or[%s,%s];4:nor[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3;4:yellow
'λx.apply(apply(same_size,iota(filter(filter(x.s, triangle), size1))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size3,not[green]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:not[%s];4:green;1:iota(%s);3:%s.s;2:x
'λx.exists(and[apply(size-geq,x.o),blue], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:blue;3:%s.s;2:x
'λx.forall(and[yellow,apply(same_size,x.o)],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:%s.s;2:x
'λx.empty(filter(filter(x.s, or[or[yellow,apply(same_color,iota(filter(filter(filter(x.s, apply(same_color,x.o)), circle), size3)))],size3]), and[and[circle,circle],size3]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;4:size3;4:size3;4:and[%s,%s];4:and[%s,%s];4:circle;4:circle;4:size3
'λx.apply(implies[and[green,not[iff[circle,apply(size-geq,iota(filter(filter(x.s, size2), size2)))]]],blue],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:green;4:not[%s];4:iff[%s,%s];4:circle;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2;4:blue;1:%s.o;2:x
'λx.forall(and[triangle,and[rectangle,green]],filter(x.s, triangle))'	0:forall(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:rectangle;4:green;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(triangle,iota(filter(filter(filter(x.s, or[blue,apply(same_size,iota(x.s))]), circle), size1)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:circle;4:size1
'λx.apply(or[size1,blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:blue;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, or[triangle,size3])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:size3
'λx.forall(not[green],x.s)'	0:forall(%s,%s);4:not[%s];4:green;3:%s.s;2:x
'λx.contains(iota(filter(x.s, and[green,yellow])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:yellow;3:%s.s;2:x
'λx.forall(implies[rectangle,apply(size-lt,iota(filter(x.s, circle)))],filter(x.s, and[rectangle,or[circle,green]]))'	0:forall(%s,%s);4:implies[%s,%s];4:rectangle;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:circle;4:green
'λx.apply(circle,iota(filter(filter(x.s, nand[and[iff[green,nor[triangle,apply(same_shape,x.o)]],size1],and[triangle,and[blue,triangle]]]), or[and[iff[nand[circle,green],not[green]],size1],triangle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:green;4:nor[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;4:and[%s,%s];4:triangle;4:and[%s,%s];4:blue;4:triangle;4:or[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:nand[%s,%s];4:circle;4:green;4:not[%s];4:green;4:size1;4:triangle
'λx.apply(not[and[yellow,size2]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:yellow;4:size2;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, triangle), size3))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3
'λx.contains(x.o, filter(filter(x.s, triangle), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green
'λx.contains(iota(x.s), filter(filter(x.s, yellow), and[green,or[yellow,and[or[size2,not[triangle]],and[or[apply(same_color,x.o),rectangle],blue]]]]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:green;4:or[%s,%s];4:yellow;4:and[%s,%s];4:or[%s,%s];4:size2;4:not[%s];4:triangle;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle;4:blue
'λx.exists(nor[green,blue], filter(filter(filter(filter(x.s, or[green,rectangle]), size1), not[triangle]), not[circle]))'	0:exists(%s, %s);4:nor[%s,%s];4:green;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:rectangle;4:size1;4:not[%s];4:triangle;4:not[%s];4:circle
'λx.empty(filter(x.s, apply(same_color,iota(filter(filter(filter(x.s, apply(same_shape,iota(x.s))), green), nand[size3,blue])))))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:green;4:nand[%s,%s];4:size3;4:blue
'λx.apply(size2,iota(filter(x.s, and[size3,circle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:circle
'λx.apply(and[circle,size1],iota(filter(x.s, apply(same_size,x.o))))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(apply(same_size,iota(filter(filter(x.s, circle), and[triangle,triangle]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:triangle;4:triangle;1:%s.o;2:x
'λx.forall(or[apply(same_color,x.o),yellow],filter(x.s, blue))'	0:forall(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[blue,circle],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(or[size3,yellow],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.exists(and[and[size3,and[circle,or[size2,circle]]],and[apply(same_color,iota(x.s)),circle]], filter(x.s, not[size1]))'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:circle;4:or[%s,%s];4:size2;4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1
'λx.exists(and[and[rectangle,size1],size1], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size1;4:size1;3:%s.s;2:x
'λx.apply(apply(size-leq,iota(filter(filter(filter(x.s, blue), green), size3))),iota(filter(filter(filter(x.s, and[circle,green]), yellow), circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:green;4:yellow;4:circle
'λx.apply(and[size3,circle],iota(filter(filter(x.s, size2), green)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green
'λx.forall(apply(same_size,iota(filter(x.s, size3))),filter(filter(filter(x.s, or[and[rectangle,triangle],rectangle]), rectangle), apply(same_shape,x.o)))'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:triangle;4:rectangle;4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.exists(and[triangle,and[circle,and[rectangle,or[blue,and[blue,iff[or[rectangle,blue],triangle]]]]]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:circle;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:blue;4:and[%s,%s];4:blue;4:iff[%s,%s];4:or[%s,%s];4:rectangle;4:blue;4:triangle;3:%s.s;2:x
'λx.forall(size1,filter(filter(filter(filter(filter(filter(filter(x.s, nand[circle,apply(same_size,x.o)]), size3), triangle), size3), size1), nor[nand[or[and[yellow,size2],green],rectangle],nor[and[size2,green],or[size3,rectangle]]]), rectangle))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;4:triangle;4:size3;4:size1;4:nor[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:and[%s,%s];4:yellow;4:size2;4:green;4:rectangle;4:nor[%s,%s];4:and[%s,%s];4:size2;4:green;4:or[%s,%s];4:size3;4:rectangle;4:rectangle
'λx.apply(or[size2,blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:blue;1:%s.o;2:x
'λx.apply(and[size3,apply(size-gt,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, and[green,size3]), yellow)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:size3;4:yellow;3:%s.s;2:x
'λx.contains(iota(x.s), filter(filter(x.s, size3), green))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green
'λx.contains(iota(x.s), filter(filter(x.s, size2), size3))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3
'λx.contains(iota(x.s), filter(filter(x.s, size3), size3))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3
'λx.empty(filter(filter(x.s, and[green,size1]), and[apply(same_shape,x.o),rectangle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle
'λx.apply(size2,iota(filter(filter(filter(x.s, or[size1,and[nor[apply(same_shape,x.o),size1],size3]]), rectangle), rectangle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:and[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;4:size3;4:rectangle;4:rectangle
'λx.apply(size2,iota(filter(x.s, or[apply(same_color,x.o),not[blue]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:blue
'λx.apply(triangle,iota(filter(filter(x.s, circle), circle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:circle
'λx.apply(and[rectangle,green],iota(filter(filter(x.s, size3), or[circle,green])))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:circle;4:green
'λx.apply(not[and[blue,rectangle]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:blue;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[nand[green,apply(size-lt,x.o)],apply(same_size,x.o)],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:nand[%s,%s];4:green;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(or[and[size1,rectangle],and[size1,rectangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size1;4:rectangle;4:and[%s,%s];4:size1;4:rectangle;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, and[yellow,size2]), green)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size2;4:green
'λx.apply(or[apply(same_color,x.o),green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, nand[and[apply(same_shape,iota(filter(filter(filter(x.s, iff[and[size2,nor[blue,yellow]],green]), triangle), rectangle))),rectangle],triangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:and[%s,%s];4:size2;4:nor[%s,%s];4:blue;4:yellow;4:green;4:triangle;4:rectangle;4:rectangle;4:triangle
'λx.exists(implies[circle,and[circle,and[not[circle],and[circle,apply(same_shape,x.o)]]]], filter(filter(x.s, not[size1]), triangle))'	0:exists(%s, %s);4:implies[%s,%s];4:circle;4:and[%s,%s];4:circle;4:and[%s,%s];4:not[%s];4:circle;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:triangle
'λx.exists(and[apply(same_shape,iota(filter(x.s, green))),yellow], filter(x.s, blue))'	0:exists(%s, %s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.contains(x.o, filter(x.s, apply(same_size,iota(filter(filter(filter(filter(filter(filter(filter(filter(x.s, size1), green), and[circle,rectangle]), size3), and[nand[or[rectangle,triangle],triangle],size1]), rectangle), or[and[size1,or[and[not[triangle],iff[and[not[rectangle],circle],size2]],and[apply(same_shape,x.o),rectangle]]],size2]), yellow)))))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green;4:and[%s,%s];4:circle;4:rectangle;4:size3;4:and[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:rectangle;4:triangle;4:triangle;4:size1;4:rectangle;4:or[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:triangle;4:iff[%s,%s];4:and[%s,%s];4:not[%s];4:rectangle;4:circle;4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle;4:size2;4:yellow
'λx.apply(and[green,and[rectangle,size3]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:rectangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.forall(and[not[green],or[not[and[size1,circle]],rectangle]],filter(x.s, circle))'	0:forall(%s,%s);4:and[%s,%s];4:not[%s];4:green;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:size1;4:circle;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(or[triangle,and[apply(same_shape,iota(x.s)),size2]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size2;1:%s.o;2:x
'λx.apply(implies[triangle,and[triangle,circle]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:triangle;4:and[%s,%s];4:triangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, triangle), green), apply(same_shape,x.o)))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.exists(blue, filter(filter(filter(x.s, yellow), blue), not[yellow]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:blue;4:not[%s];4:yellow
'λx.apply(and[apply(same_shape,x.o),apply(size-lt,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:%s.o;2:x
'λx.forall(circle,filter(filter(x.s, size1), triangle))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle
'λx.apply(triangle,iota(filter(x.s, or[green,and[size2,blue]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:and[%s,%s];4:size2;4:blue
'λx.apply(not[and[apply(same_shape,x.o),iff[triangle,not[blue]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:iff[%s,%s];4:triangle;4:not[%s];4:blue;1:%s.o;2:x
'λx.apply(and[circle,or[yellow,size2]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:or[%s,%s];4:yellow;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(x.s, and[nor[iff[size1,apply(size-geq,iota(filter(filter(x.s, apply(size-lt,x.o)), and[yellow,triangle])))],blue],blue])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:iff[%s,%s];4:size1;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:and[%s,%s];4:yellow;4:triangle;4:blue;4:blue
'λx.exists(circle, filter(x.s, apply(same_color,iota(x.s))))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, size1), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow
'λx.empty(filter(filter(x.s, size3), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow
'λx.apply(nand[triangle,and[apply(same_size,iota(x.s)),green]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:green;1:%s.o;2:x
'λx.forall(not[or[not[size2],triangle]],filter(x.s, size1))'	0:forall(%s,%s);4:not[%s];4:or[%s,%s];4:not[%s];4:size2;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(size1, filter(filter(x.s, triangle), size2))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2
'λx.contains(iota(x.s), filter(filter(x.s, or[size2,rectangle]), circle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:rectangle;4:circle
'λx.apply(green,iota(filter(x.s, apply(same_shape,iota(x.s)))))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.exists(rectangle, filter(x.s, and[and[apply(same_size,iota(filter(filter(x.s, apply(same_color,iota(x.s))), circle))),circle],green]))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:circle;4:circle;4:green
'λx.apply(implies[yellow,blue],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:yellow;4:blue;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, rectangle), size3)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3
'λx.forall(circle,filter(x.s, and[apply(same_size,x.o),size3]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3
'λx.apply(and[green,apply(same_size,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, not[apply(same_size,x.o)]), blue)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue
'λx.apply(and[apply(same_shape,iota(filter(x.s, yellow))),not[and[iff[rectangle,blue],and[not[apply(size-geq,x.o)],iff[circle,size3]]]]],iota(filter(x.s, iff[size2,nand[not[not[triangle]],size1]])))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:and[%s,%s];4:iff[%s,%s];4:rectangle;4:blue;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:iff[%s,%s];4:circle;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size2;4:nand[%s,%s];4:not[%s];4:not[%s];4:triangle;4:size1
'λx.apply(blue,iota(filter(filter(filter(filter(filter(filter(x.s, yellow), triangle), green), size3), triangle), size3)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle;4:green;4:size3;4:triangle;4:size3
'λx.forall(and[size2,size2],filter(x.s, and[and[triangle,or[rectangle,nor[rectangle,green]]],triangle]))'	0:forall(%s,%s);4:and[%s,%s];4:size2;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:triangle;4:or[%s,%s];4:rectangle;4:nor[%s,%s];4:rectangle;4:green;4:triangle
'λx.apply(not[and[size2,size2]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size2;4:size2;1:%s.o;2:x
'λx.apply(not[and[size2,size3]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size2;4:size3;1:%s.o;2:x
'λx.apply(implies[nand[or[and[and[size2,yellow],green],and[size3,apply(same_size,iota(x.s))]],size1],green],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:yellow;4:green;4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size1;4:green;1:%s.o;2:x
'λx.apply(and[apply(same_shape,iota(filter(x.s, or[size1,and[size1,apply(same_color,iota(x.s))]]))),apply(same_shape,x.o)],iota(filter(filter(x.s, or[not[and[size1,iff[triangle,blue]]],size2]), circle)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:size1;4:iff[%s,%s];4:triangle;4:blue;4:size2;4:circle
'λx.empty(filter(filter(x.s, circle), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow
'λx.contains(iota(filter(x.s, circle)), filter(x.s, green))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.contains(iota(filter(x.s, circle)), filter(x.s, size2))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(and[triangle,green],iota(filter(filter(x.s, and[size1,circle]), green)))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:circle;4:green
'λx.empty(filter(filter(x.s, yellow), not[yellow]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:yellow
'λx.apply(and[green,not[triangle]],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(iff[not[or[and[triangle,size3],rectangle]],or[and[and[circle,size1],green],or[circle,size1]]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:not[%s];4:or[%s,%s];4:and[%s,%s];4:triangle;4:size3;4:rectangle;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:size1;4:green;4:or[%s,%s];4:circle;4:size1;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, yellow), apply(same_size,x.o))), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(circle,iota(filter(x.s, iff[blue,circle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:blue;4:circle
'λx.apply(rectangle,iota(filter(filter(x.s, yellow), apply(same_shape,iota(filter(filter(filter(filter(filter(filter(filter(filter(filter(x.s, size3), not[green]), implies[circle,and[or[size1,and[iff[yellow,size3],or[not[size3],and[blue,and[size1,not[rectangle]]]]]],triangle]]), size3), size1), yellow), size2), green), circle))))))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:green;4:implies[%s,%s];4:circle;4:and[%s,%s];4:or[%s,%s];4:size1;4:and[%s,%s];4:iff[%s,%s];4:yellow;4:size3;4:or[%s,%s];4:not[%s];4:size3;4:and[%s,%s];4:blue;4:and[%s,%s];4:size1;4:not[%s];4:rectangle;4:triangle;4:size3;4:size1;4:yellow;4:size2;4:green;4:circle
'λx.apply(not[apply(same_size,x.o)],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(or[and[size3,circle],size3],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size3;4:circle;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(apply(same_shape,iota(filter(x.s, circle))),iota(filter(x.s, and[and[size2,or[nand[and[green,triangle],rectangle],triangle]],triangle])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size2;4:or[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:green;4:triangle;4:rectangle;4:triangle;4:triangle
'λx.apply(iff[size1,triangle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:size1;4:triangle;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(filter(x.s, green), or[and[and[not[circle],green],size3],and[rectangle,size1]]), and[rectangle,yellow])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:circle;4:green;4:size3;4:and[%s,%s];4:rectangle;4:size1;4:and[%s,%s];4:rectangle;4:yellow
'λx.forall(and[green,yellow],filter(filter(x.s, not[or[and[size3,size3],blue]]), apply(same_shape,iota(filter(x.s, or[iff[size3,or[size3,and[nand[triangle,apply(same_color,iota(filter(filter(x.s, rectangle), nor[green,yellow])))],yellow]]],not[or[size2,triangle]]])))))'	0:forall(%s,%s);4:and[%s,%s];4:green;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:size3;4:size3;4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:iff[%s,%s];4:size3;4:or[%s,%s];4:size3;4:and[%s,%s];4:nand[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:nor[%s,%s];4:green;4:yellow;4:yellow;4:not[%s];4:or[%s,%s];4:size2;4:triangle
'λx.forall(yellow,filter(filter(x.s, implies[size3,green]), and[and[rectangle,apply(same_color,iota(x.s))],size2]))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size3;4:green;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size2
'λx.apply(not[triangle],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.empty(filter(filter(filter(filter(filter(x.s, apply(same_size,iota(x.s))), yellow), circle), not[and[nand[circle,size1],size3]]), and[circle,blue]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:yellow;4:circle;4:not[%s];4:and[%s,%s];4:nand[%s,%s];4:circle;4:size1;4:size3;4:and[%s,%s];4:circle;4:blue
'λx.forall(and[green,and[not[apply(same_shape,iota(filter(x.s, circle)))],green]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green;3:%s.s;2:x
'λx.apply(nand[nor[circle,not[triangle]],size3],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:nor[%s,%s];4:circle;4:not[%s];4:triangle;4:size3;1:%s.o;2:x
'λx.apply(yellow,iota(filter(x.s, not[and[and[yellow,size2],circle]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:size2;4:circle
'λx.apply(size2,iota(filter(filter(filter(x.s, size1), blue), and[size2,circle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue;4:and[%s,%s];4:size2;4:circle
'λx.apply(nand[and[circle,green],apply(same_shape,iota(filter(x.s, or[and[size3,blue],size1])))],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:circle;4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size3;4:blue;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(not[size3],iota(filter(x.s, and[blue,and[size3,not[not[blue]]]])))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:and[%s,%s];4:size3;4:not[%s];4:not[%s];4:blue
'λx.apply(and[or[blue,or[and[circle,blue],apply(same_shape,x.o)]],and[apply(same_size,iota(filter(x.s, size1))),nand[size2,size3]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:blue;4:or[%s,%s];4:and[%s,%s];4:circle;4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:nand[%s,%s];4:size2;4:size3;1:%s.o;2:x
'λx.apply(and[implies[rectangle,green],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:rectangle;4:green;4:blue;1:%s.o;2:x
'λx.apply(nand[implies[triangle,size3],size2],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:implies[%s,%s];4:triangle;4:size3;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(or[triangle,green],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.empty(filter(filter(x.s, apply(same_color,iota(x.s))), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size3
'λx.apply(not[implies[rectangle,and[size3,rectangle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:implies[%s,%s];4:rectangle;4:and[%s,%s];4:size3;4:rectangle;1:%s.o;2:x
'λx.exists(or[yellow,rectangle], filter(filter(x.s, iff[triangle,green]), not[blue]))'	0:exists(%s, %s);4:or[%s,%s];4:yellow;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:triangle;4:green;4:not[%s];4:blue
'λx.apply(and[and[or[green,not[size3]],circle],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:green;4:not[%s];4:size3;4:circle;4:triangle;1:%s.o;2:x
'λx.apply(and[not[yellow],size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:yellow;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[green,green],and[apply(same_shape,x.o),size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:green;4:green;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;1:%s.o;2:x
'λx.apply(or[size3,not[iff[blue,and[and[blue,not[blue]],size1]]]],iota(filter(filter(filter(x.s, and[size3,yellow]), blue), and[apply(size-lt,x.o),green])))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:not[%s];4:iff[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:blue;4:not[%s];4:blue;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:yellow;4:blue;4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:green
'λx.apply(size1,iota(x.s))'	0:apply(%s,%s);4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(x.s))'	0:apply(%s,%s);4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(x.s))'	0:apply(%s,%s);4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(filter(filter(filter(x.s, green), green), apply(same_size,x.o)), size1), yellow)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1;4:yellow
'λx.contains(iota(x.s), filter(x.s, and[circle,rectangle]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:rectangle
'λx.apply(or[yellow,nand[circle,blue]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:nand[%s,%s];4:circle;4:blue;1:%s.o;2:x
'λx.contains(x.o, filter(filter(filter(x.s, triangle), and[iff[triangle,nor[rectangle,not[rectangle]]],not[rectangle]]), yellow))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:iff[%s,%s];4:triangle;4:nor[%s,%s];4:rectangle;4:not[%s];4:rectangle;4:not[%s];4:rectangle;4:yellow
'λx.exists(iff[not[or[green,size1]],size2], filter(filter(filter(filter(x.s, not[or[size2,size1]]), rectangle), triangle), yellow))'	0:exists(%s, %s);4:iff[%s,%s];4:not[%s];4:or[%s,%s];4:green;4:size1;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:size2;4:size1;4:rectangle;4:triangle;4:yellow
'λx.apply(size1,iota(filter(filter(x.s, apply(same_shape,x.o)), circle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle
'λx.apply(yellow,iota(filter(x.s, not[not[blue]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:blue
'λx.apply(and[apply(same_color,x.o),blue],iota(filter(filter(x.s, green), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue
'λx.apply(green,iota(filter(filter(x.s, yellow), apply(same_size,x.o))))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.exists(triangle, filter(filter(x.s, circle), yellow))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow
'λx.apply(not[and[and[or[apply(same_size,iota(x.s)),or[and[blue,size3],yellow]],blue],size2]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:blue;4:size3;4:yellow;4:blue;4:size2;1:%s.o;2:x
'λx.exists(triangle, filter(x.s, apply(same_size,iota(x.s))))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.exists(not[green], filter(x.s, implies[nor[rectangle,size3],yellow]))'	0:exists(%s, %s);4:not[%s];4:green;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:nor[%s,%s];4:rectangle;4:size3;4:yellow
'λx.forall(and[blue,and[or[size3,not[rectangle]],apply(size-gt,x.o)]],filter(x.s, triangle))'	0:forall(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:or[%s,%s];4:size3;4:not[%s];4:rectangle;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(implies[size1,circle],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:implies[%s,%s];4:size1;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(or[and[implies[size2,apply(size-geq,iota(x.s))],implies[circle,not[and[yellow,triangle]]]],or[nor[or[size2,green],size3],rectangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:size2;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:implies[%s,%s];4:circle;4:not[%s];4:and[%s,%s];4:yellow;4:triangle;4:or[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:size2;4:green;4:size3;4:rectangle;1:%s.o;2:x
'λx.apply(not[size1],iota(filter(filter(filter(x.s, yellow), not[green]), nor[or[size3,not[and[rectangle,circle]]],green])))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:green;4:nor[%s,%s];4:or[%s,%s];4:size3;4:not[%s];4:and[%s,%s];4:rectangle;4:circle;4:green
'λx.apply(green,iota(x.s))'	0:apply(%s,%s);4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(x.s, green)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(circle,iota(filter(x.s, size3)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(circle,iota(filter(x.s, size1)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(circle,iota(filter(x.s, size2)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.contains(iota(filter(x.s, and[or[green,size2],and[size1,and[size1,apply(same_color,iota(filter(filter(x.s, apply(same_color,x.o)), size2)))]]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:green;4:size2;4:and[%s,%s];4:size1;4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size2;3:%s.s;2:x
'λx.contains(iota(filter(filter(x.s, triangle), size2)), filter(filter(x.s, green), not[rectangle]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:rectangle
'λx.apply(size2,iota(filter(x.s, apply(same_shape,iota(x.s)))))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[yellow,green],size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:green;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(or[green,size3],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(x.s, apply(same_color,x.o)), rectangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle
'λx.forall(not[apply(same_shape,iota(filter(x.s, size2)))],filter(filter(filter(filter(x.s, blue), nand[rectangle,and[triangle,circle]]), size3), and[yellow,and[green,apply(same_shape,x.o)]]))'	0:forall(%s,%s);4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:nand[%s,%s];4:rectangle;4:and[%s,%s];4:triangle;4:circle;4:size3;4:and[%s,%s];4:yellow;4:and[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(yellow,iota(filter(x.s, green)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(yellow,iota(filter(x.s, size3)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(yellow,iota(filter(x.s, size2)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(yellow,iota(filter(x.s, size1)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(or[and[circle,and[triangle,size3]],and[blue,not[or[size3,not[size3]]]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:triangle;4:size3;4:and[%s,%s];4:blue;4:not[%s];4:or[%s,%s];4:size3;4:not[%s];4:size3;1:%s.o;2:x
'λx.apply(and[and[green,apply(same_shape,iota(x.s))],triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[and[size1,triangle]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size1;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[green,size2],iota(filter(x.s, and[circle,size3])))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size3
'λx.forall(or[apply(size-geq,x.o),not[green]],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:not[%s];4:green;3:%s.s;2:x
'λx.apply(apply(same_shape,iota(filter(x.s, or[yellow,circle]))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:circle;1:iota(%s);3:%s.s;2:x
'λx.exists(blue, filter(filter(x.s, not[size2]), and[size2,rectangle]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:and[%s,%s];4:size2;4:rectangle
'λx.apply(or[and[triangle,rectangle],and[green,yellow]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:triangle;4:rectangle;4:and[%s,%s];4:green;4:yellow;1:%s.o;2:x
'λx.forall(or[not[blue],yellow],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:not[%s];4:blue;4:yellow;3:%s.s;2:x
'λx.apply(and[blue,rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:rectangle;1:%s.o;2:x
'λx.apply(implies[yellow,triangle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:yellow;4:triangle;1:%s.o;2:x
'λx.forall(nand[apply(same_shape,x.o),apply(same_color,iota(x.s))],x.s)'	0:forall(%s,%s);4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(nand[and[size3,green],size1],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:size3;4:green;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(or[blue,and[apply(same_color,iota(x.s)),circle]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[blue,or[yellow,nand[yellow,and[and[rectangle,and[and[rectangle,triangle],apply(same_shape,iota(x.s))]],and[size1,green]]]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:or[%s,%s];4:yellow;4:nand[%s,%s];4:yellow;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:green;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(filter(filter(filter(filter(x.s, and[apply(same_size,iota(x.s)),rectangle]), blue), and[not[and[apply(same_size,x.o),green]],green]), triangle), green), or[and[nand[size3,not[and[nand[implies[green,size1],circle],apply(same_size,iota(x.s))]]],or[blue,yellow]],triangle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:rectangle;4:blue;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;4:green;4:triangle;4:green;4:or[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:size3;4:not[%s];4:and[%s,%s];4:nand[%s,%s];4:implies[%s,%s];4:green;4:size1;4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:yellow;4:triangle
'λx.exists(circle, filter(x.s, size1))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(circle, filter(x.s, size3))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(circle, filter(x.s, size2))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.exists(circle, filter(x.s, green))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.empty(filter(filter(x.s, size3), and[circle,size3]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:circle;4:size3
'λx.empty(filter(filter(x.s, size3), and[circle,green]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:circle;4:green
'λx.apply(apply(same_shape,x.o),iota(filter(x.s, size1)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(apply(same_shape,x.o),iota(filter(x.s, size3)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(apply(same_shape,x.o),iota(filter(x.s, size2)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.exists(nand[size2,size2], x.s)'	0:exists(%s, %s);4:nand[%s,%s];4:size2;4:size2;3:%s.s;2:x
'λx.forall(apply(size-lt,iota(filter(x.s, size2))),filter(filter(filter(filter(x.s, apply(same_size,iota(filter(filter(x.s, blue), rectangle)))), size3), triangle), size1))'	0:forall(%s,%s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle;4:size3;4:triangle;4:size1
'λx.apply(rectangle,iota(filter(filter(filter(filter(x.s, size1), rectangle), yellow), circle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle;4:yellow;4:circle
'λx.exists(not[apply(same_color,iota(x.s))], x.s)'	0:exists(%s, %s);4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.exists(triangle, filter(filter(x.s, and[green,green]), size2))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:green;4:size2
'λx.apply(apply(size-leq,iota(x.s)),iota(filter(x.s, size1)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(apply(size-leq,iota(x.s)),iota(filter(x.s, size3)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(apply(same_shape,iota(filter(x.s, rectangle))),iota(filter(filter(x.s, or[triangle,yellow]), not[rectangle])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:yellow;4:not[%s];4:rectangle
'λx.apply(and[rectangle,nand[size1,apply(same_size,iota(filter(filter(x.s, size3), blue)))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:nand[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, triangle), blue), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue;4:size2
'λx.apply(nand[nor[circle,size3],green],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:nor[%s,%s];4:circle;4:size3;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[blue,or[and[blue,size2],green]],apply(size-gt,iota(filter(x.s, size3)))],iota(filter(filter(x.s, not[green]), circle)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:or[%s,%s];4:and[%s,%s];4:blue;4:size2;4:green;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:circle
'λx.apply(and[not[and[green,and[and[size3,circle],apply(size-geq,iota(filter(filter(x.s, not[triangle]), circle)))]]],and[implies[nand[rectangle,and[blue,iff[not[green],triangle]]],yellow],size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:size3;4:circle;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:circle;4:and[%s,%s];4:implies[%s,%s];4:nand[%s,%s];4:rectangle;4:and[%s,%s];4:blue;4:iff[%s,%s];4:not[%s];4:green;4:triangle;4:yellow;4:size1;1:%s.o;2:x
'λx.apply(and[size1,and[apply(same_size,x.o),circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(filter(x.s, or[and[or[apply(same_color,iota(x.s)),size2],size2],yellow]), rectangle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size2;4:size2;4:yellow;4:rectangle;1:%s.o;2:x
'λx.forall(and[triangle,nor[apply(same_color,iota(x.s)),apply(same_color,x.o)]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:triangle;4:nor[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:%s.s;2:x
'λx.exists(not[iff[apply(same_size,iota(filter(filter(x.s, yellow), green))),or[and[rectangle,and[rectangle,size1]],yellow]]], filter(filter(x.s, and[and[circle,and[size1,size2]],and[apply(size-lt,iota(filter(filter(x.s, yellow), size1))),blue]]), or[size1,or[triangle,or[apply(size-leq,iota(filter(filter(x.s, size1), rectangle))),blue]]]))'	0:exists(%s, %s);4:not[%s];4:iff[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:rectangle;4:size1;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:size1;4:size2;4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;4:blue;4:or[%s,%s];4:size1;4:or[%s,%s];4:triangle;4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle;4:blue
'λx.apply(and[apply(same_shape,x.o),circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;1:%s.o;2:x
'λx.apply(apply(same_color,iota(filter(filter(x.s, or[not[blue],circle]), size2))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:blue;4:circle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(not[not[size2]],iota(filter(filter(filter(filter(filter(x.s, green), size1), yellow), green), circle)))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1;4:yellow;4:green;4:circle
'λx.apply(iff[apply(size-leq,iota(filter(x.s, yellow))),size1],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;1:%s.o;2:x
'λx.exists(blue, filter(filter(x.s, rectangle), size1))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1
'λx.apply(or[blue,rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:rectangle;1:%s.o;2:x
'λx.apply(not[and[and[size3,blue],size3]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:blue;4:size3;1:%s.o;2:x
'λx.apply(and[and[circle,green],implies[circle,rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:green;4:implies[%s,%s];4:circle;4:rectangle;1:%s.o;2:x
'λx.forall(rectangle,filter(filter(filter(x.s, size1), yellow), circle))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow;4:circle
'λx.apply(size2,iota(filter(filter(x.s, not[yellow]), size1)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:size1
'λx.apply(size2,iota(filter(filter(x.s, not[yellow]), size2)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:size2
'λx.apply(size1,iota(filter(filter(x.s, not[yellow]), size2)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:size2
'λx.apply(not[apply(same_color,iota(filter(filter(filter(x.s, yellow), green), circle)))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green;4:circle;1:%s.o;2:x
'λx.forall(and[and[yellow,apply(same_color,iota(filter(filter(x.s, and[circle,triangle]), size3)))],circle],filter(x.s, and[blue,blue]))'	0:forall(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:triangle;4:size3;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:blue
'λx.apply(not[circle],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.contains(x.o, filter(filter(filter(filter(x.s, yellow), yellow), blue), apply(same_shape,x.o)))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:yellow;4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(x.s, apply(same_color,x.o)), circle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle
'λx.exists(and[yellow,or[triangle,rectangle]], filter(x.s, green))'	0:exists(%s, %s);4:and[%s,%s];4:yellow;4:or[%s,%s];4:triangle;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(triangle,iota(filter(filter(x.s, size1), and[and[size3,and[green,size3]],yellow])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:green;4:size3;4:yellow
'λx.apply(or[size2,and[blue,rectangle]],iota(filter(filter(x.s, green), iff[apply(size-leq,x.o),blue])))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:and[%s,%s];4:blue;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:iff[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:blue
'λx.apply(iff[size2,size2],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:iff[%s,%s];4:size2;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.contains(iota(filter(x.s, rectangle)), filter(x.s, blue))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.exists(and[and[nand[blue,triangle],nor[nand[yellow,iff[rectangle,green]],blue]],size1], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:blue;4:triangle;4:nor[%s,%s];4:nand[%s,%s];4:yellow;4:iff[%s,%s];4:rectangle;4:green;4:blue;4:size1;3:%s.s;2:x
'λx.apply(blue,iota(filter(x.s, not[and[size2,rectangle]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:size2;4:rectangle
'λx.forall(or[not[and[circle,not[or[blue,triangle]]]],and[iff[green,implies[and[rectangle,yellow],rectangle]],triangle]],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:not[%s];4:and[%s,%s];4:circle;4:not[%s];4:or[%s,%s];4:blue;4:triangle;4:and[%s,%s];4:iff[%s,%s];4:green;4:implies[%s,%s];4:and[%s,%s];4:rectangle;4:yellow;4:rectangle;4:triangle;3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, size3), or[size1,or[size1,not[triangle]]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:size1;4:or[%s,%s];4:size1;4:not[%s];4:triangle
'λx.apply(apply(same_color,iota(filter(x.s, blue))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.apply(triangle,iota(filter(x.s, and[apply(same_color,iota(x.s)),triangle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:triangle
'λx.apply(or[and[yellow,and[rectangle,circle]],size2],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:rectangle;4:circle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.exists(and[blue,size1], filter(x.s, triangle))'	0:exists(%s, %s);4:and[%s,%s];4:blue;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.forall(triangle,filter(filter(x.s, circle), not[not[yellow]]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:not[%s];4:yellow
'λx.apply(and[yellow,not[triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:not[%s];4:triangle;1:%s.o;2:x
'λx.apply(and[rectangle,or[apply(same_size,x.o),not[yellow]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:not[%s];4:yellow;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(x.s, triangle), nand[size1,green]), circle)), filter(filter(x.s, not[or[size1,size2]]), size2))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:nand[%s,%s];4:size1;4:green;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:size1;4:size2;4:size2
'λx.forall(size1,filter(x.s, blue))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.forall(size3,filter(x.s, blue))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(not[yellow],iota(filter(filter(filter(x.s, yellow), green), not[size2])))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green;4:not[%s];4:size2
'λx.apply(rectangle,iota(filter(filter(x.s, and[circle,and[rectangle,nand[size1,size2]]]), size3)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:and[%s,%s];4:rectangle;4:nand[%s,%s];4:size1;4:size2;4:size3
'λx.exists(or[and[not[rectangle],triangle],blue], filter(x.s, size1))'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:not[%s];4:rectangle;4:triangle;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(or[triangle,size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:size2;1:%s.o;2:x
'λx.apply(or[triangle,size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:size1;1:%s.o;2:x
'λx.apply(or[triangle,size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:size3;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, apply(size-geq,x.o)), apply(same_size,iota(x.s)))))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(not[size3],iota(filter(filter(filter(x.s, size2), triangle), and[apply(size-gt,iota(filter(filter(filter(filter(x.s, and[and[green,or[circle,triangle]],and[apply(same_size,iota(x.s)),triangle]]), rectangle), circle), size2))),rectangle])))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:triangle;4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:green;4:or[%s,%s];4:circle;4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:triangle;4:rectangle;4:circle;4:size2;4:rectangle
'λx.apply(or[or[and[and[green,or[size3,and[and[and[size3,green],size1],circle]]],apply(same_color,x.o)],apply(same_color,iota(x.s))],size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:or[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:green;4:size1;4:circle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size2;1:%s.o;2:x
'λx.apply(and[apply(same_size,iota(filter(filter(filter(filter(filter(filter(x.s, size1), not[and[blue,or[yellow,triangle]]]), nand[size1,green]), triangle), circle), triangle))),or[size2,rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:not[%s];4:and[%s,%s];4:blue;4:or[%s,%s];4:yellow;4:triangle;4:nand[%s,%s];4:size1;4:green;4:triangle;4:circle;4:triangle;4:or[%s,%s];4:size2;4:rectangle;1:%s.o;2:x
'λx.apply(or[triangle,blue],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.contains(x.o, filter(filter(x.s, nor[size3,not[apply(same_shape,x.o)]]), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size3;4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green
'λx.apply(apply(same_color,x.o),iota(filter(x.s, and[size2,size3])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:size3
'λx.exists(and[size2,green], filter(filter(filter(x.s, apply(same_shape,x.o)), yellow), triangle))'	0:exists(%s, %s);4:and[%s,%s];4:size2;4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow;4:triangle
'λx.apply(iff[or[size2,blue],rectangle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:or[%s,%s];4:size2;4:blue;4:rectangle;1:%s.o;2:x
'λx.apply(and[size3,and[or[size3,triangle],size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:or[%s,%s];4:size3;4:triangle;4:size2;1:%s.o;2:x
'λx.forall(circle,filter(x.s, circle))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[circle,yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:yellow;1:%s.o;2:x
'λx.apply(not[nand[size3,or[triangle,size1]]],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:not[%s];4:nand[%s,%s];4:size3;4:or[%s,%s];4:triangle;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.forall(or[apply(same_shape,iota(x.s)),size1],filter(filter(x.s, apply(same_color,iota(filter(x.s, blue)))), size2))'	0:forall(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2
'λx.empty(filter(filter(x.s, and[circle,yellow]), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:yellow;4:yellow
'λx.apply(apply(same_color,iota(filter(filter(filter(x.s, size3), size3), size3))),iota(filter(filter(x.s, and[yellow,blue]), circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:blue;4:circle
'λx.contains(iota(filter(x.s, rectangle)), filter(x.s, circle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[implies[apply(same_shape,x.o),nand[yellow,apply(size-leq,iota(filter(filter(x.s, rectangle), or[blue,iff[size3,yellow]])))]],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:nand[%s,%s];4:yellow;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:or[%s,%s];4:blue;4:iff[%s,%s];4:size3;4:yellow;4:size1;1:%s.o;2:x
'λx.apply(iff[size3,triangle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:size3;4:triangle;1:%s.o;2:x
'λx.apply(and[or[and[implies[and[size2,and[and[circle,size1],rectangle]],triangle],green],yellow],or[size1,size1]],iota(filter(filter(x.s, size1), apply(size-gt,iota(x.s)))))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:circle;4:size1;4:rectangle;4:triangle;4:green;4:yellow;4:or[%s,%s];4:size1;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[apply(same_size,iota(x.s)),yellow],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:yellow;1:%s.o;2:x
'λx.apply(or[and[triangle,implies[size1,green]],size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:triangle;4:implies[%s,%s];4:size1;4:green;4:size2;1:%s.o;2:x
'λx.apply(and[and[not[blue],apply(same_shape,iota(filter(x.s, triangle)))],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:yellow;1:%s.o;2:x
'λx.apply(and[size2,or[circle,circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:or[%s,%s];4:circle;4:circle;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(filter(x.s, blue), size1), and[and[green,and[triangle,not[implies[triangle,and[green,and[size2,size1]]]]]],nand[size3,implies[implies[circle,not[or[size2,circle]]],apply(same_size,x.o)]]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1;4:and[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:triangle;4:not[%s];4:implies[%s,%s];4:triangle;4:and[%s,%s];4:green;4:and[%s,%s];4:size2;4:size1;4:nand[%s,%s];4:size3;4:implies[%s,%s];4:implies[%s,%s];4:circle;4:not[%s];4:or[%s,%s];4:size2;4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(filter(x.s, rectangle), size2), circle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2;4:circle
'λx.empty(filter(x.s, and[or[size2,size1],apply(same_shape,x.o)]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:size2;4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.exists(blue, filter(filter(x.s, blue), yellow))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow
'λx.apply(and[rectangle,not[blue]],iota(filter(x.s, and[yellow,rectangle])))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:rectangle
'λx.apply(yellow,iota(filter(x.s, and[apply(same_size,iota(filter(filter(x.s, apply(same_color,iota(x.s))), circle))),circle])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:circle;4:circle
'λx.exists(and[apply(same_size,x.o),size3], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;3:%s.s;2:x
'λx.forall(and[size3,size3],filter(x.s, circle))'	0:forall(%s,%s);4:and[%s,%s];4:size3;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(not[size3],iota(filter(x.s, and[blue,rectangle])))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:rectangle
'λx.apply(and[or[and[not[not[size2]],triangle],and[size2,size1]],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:not[%s];4:not[%s];4:size2;4:triangle;4:and[%s,%s];4:size2;4:size1;4:rectangle;1:%s.o;2:x
'λx.contains(iota(filter(x.s, and[blue,apply(same_color,x.o)])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(and[and[apply(same_shape,iota(filter(x.s, or[and[apply(same_shape,iota(filter(filter(x.s, size2), not[green]))),triangle],and[triangle,green]]))),triangle],green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:not[%s];4:green;4:triangle;4:and[%s,%s];4:triangle;4:green;4:triangle;4:green;1:iota(%s);3:%s.s;2:x
'λx.forall(iff[circle,apply(size-geq,iota(x.s))],filter(x.s, size2))'	0:forall(%s,%s);4:iff[%s,%s];4:circle;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(apply(size-gt,iota(x.s)),iota(filter(filter(x.s, blue), size2)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2
'λx.apply(and[and[nand[circle,apply(same_shape,x.o)],size2],and[rectangle,circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2;4:and[%s,%s];4:rectangle;4:circle;1:%s.o;2:x
'λx.exists(blue, filter(filter(filter(filter(x.s, size3), rectangle), circle), apply(same_shape,x.o)))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle;4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.contains(iota(filter(x.s, apply(same_shape,x.o))), filter(filter(filter(filter(x.s, rectangle), size1), size1), triangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1;4:size1;4:triangle
'λx.apply(not[size3],iota(filter(filter(x.s, blue), or[size2,size2])))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:size2;4:size2
'λx.empty(filter(filter(x.s, size2), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle
'λx.apply(yellow,iota(filter(x.s, and[apply(same_size,iota(x.s)),size3])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size3
'λx.apply(and[apply(same_shape,iota(filter(x.s, apply(same_color,iota(filter(filter(x.s, and[rectangle,green]), and[blue,yellow])))))),not[nor[size1,and[green,size2]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:green;4:and[%s,%s];4:blue;4:yellow;4:not[%s];4:nor[%s,%s];4:size1;4:and[%s,%s];4:green;4:size2;1:%s.o;2:x
'λx.exists(circle, filter(x.s, not[or[circle,or[triangle,size3]]]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:circle;4:or[%s,%s];4:triangle;4:size3
'λx.contains(iota(x.s), filter(x.s, apply(same_size,x.o)))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(x.s, size2))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;1:%s.o;2:x
'λx.apply(and[circle,blue],iota(filter(x.s, apply(same_size,iota(filter(x.s, green))))))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(nor[and[or[blue,size1],or[not[apply(same_size,iota(x.s))],yellow]],triangle],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:or[%s,%s];4:blue;4:size1;4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:yellow;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[or[yellow,triangle],green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:yellow;4:triangle;4:green;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(x.s)),iota(filter(filter(filter(x.s, size3), blue), apply(same_shape,iota(x.s)))))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(filter(filter(x.s, yellow), and[circle,apply(same_shape,iota(x.s))]), yellow), yellow)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:yellow;4:yellow
'λx.forall(apply(same_shape,x.o),filter(x.s, iff[green,and[green,not[apply(same_size,iota(x.s))]]]))'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:green;4:and[%s,%s];4:green;4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[size2,yellow],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:size2;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(and[green,size1],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(and[green,size2],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(and[rectangle,circle],iota(filter(x.s, nand[size2,yellow])))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size2;4:yellow
'λx.apply(nor[circle,and[not[size2],or[and[size2,implies[rectangle,triangle]],and[triangle,size2]]]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:circle;4:and[%s,%s];4:not[%s];4:size2;4:or[%s,%s];4:and[%s,%s];4:size2;4:implies[%s,%s];4:rectangle;4:triangle;4:and[%s,%s];4:triangle;4:size2;1:%s.o;2:x
'λx.exists(blue, filter(filter(x.s, green), nor[size1,yellow]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:nor[%s,%s];4:size1;4:yellow
'λx.apply(or[green,blue],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(and[rectangle,implies[blue,and[green,size1]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:implies[%s,%s];4:blue;4:and[%s,%s];4:green;4:size1;1:%s.o;2:x
'λx.apply(not[or[and[and[and[or[and[and[size3,and[nor[circle,or[circle,size2]],circle]],nor[blue,green]],size1],circle],green],and[not[triangle],triangle]],apply(same_shape,x.o)]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:nor[%s,%s];4:circle;4:or[%s,%s];4:circle;4:size2;4:circle;4:nor[%s,%s];4:blue;4:green;4:size1;4:circle;4:green;4:and[%s,%s];4:not[%s];4:triangle;4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(or[size3,apply(same_size,iota(filter(x.s, not[green])))],iota(filter(filter(filter(filter(filter(filter(filter(x.s, yellow), and[circle,rectangle]), yellow), and[size1,green]), blue), and[green,and[rectangle,green]]), triangle)))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:circle;4:rectangle;4:yellow;4:and[%s,%s];4:size1;4:green;4:blue;4:and[%s,%s];4:green;4:and[%s,%s];4:rectangle;4:green;4:triangle
'λx.apply(rectangle,iota(filter(filter(x.s, size2), or[blue,and[green,blue]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:blue;4:and[%s,%s];4:green;4:blue
'λx.apply(apply(same_size,iota(filter(filter(filter(filter(x.s, size2), not[and[triangle,triangle]]), size1), triangle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:not[%s];4:and[%s,%s];4:triangle;4:triangle;4:size1;4:triangle;1:%s.o;2:x
'λx.apply(or[yellow,and[and[rectangle,and[apply(same_size,iota(filter(filter(filter(filter(x.s, blue), iff[not[or[size3,yellow]],size1]), size1), and[rectangle,iff[blue,green]]))),yellow]],triangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:iff[%s,%s];4:not[%s];4:or[%s,%s];4:size3;4:yellow;4:size1;4:size1;4:and[%s,%s];4:rectangle;4:iff[%s,%s];4:blue;4:green;4:yellow;4:triangle;1:%s.o;2:x
'λx.apply(or[or[or[and[implies[size3,circle],triangle],size1],circle],rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:size3;4:circle;4:triangle;4:size1;4:circle;4:rectangle;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(x.s, circle), or[nand[blue,not[size2]],implies[nand[blue,nand[blue,size2]],size2]]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:nand[%s,%s];4:blue;4:not[%s];4:size2;4:implies[%s,%s];4:nand[%s,%s];4:blue;4:nand[%s,%s];4:blue;4:size2;4:size2
'λx.apply(blue,iota(filter(filter(filter(filter(x.s, size1), and[nand[green,iff[yellow,rectangle]],not[yellow]]), or[and[size2,blue],or[not[apply(same_size,iota(x.s))],apply(size-geq,x.o)]]), and[blue,size1])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:nand[%s,%s];4:green;4:iff[%s,%s];4:yellow;4:rectangle;4:not[%s];4:yellow;4:or[%s,%s];4:and[%s,%s];4:size2;4:blue;4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:and[%s,%s];4:blue;4:size1
'λx.exists(blue, filter(filter(x.s, not[green]), blue))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:blue
'λx.exists(implies[blue,size3], filter(filter(filter(filter(x.s, and[green,or[size1,green]]), rectangle), iff[blue,apply(same_shape,x.o)]), green))'	0:exists(%s, %s);4:implies[%s,%s];4:blue;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:or[%s,%s];4:size1;4:green;4:rectangle;4:iff[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green
'λx.apply(and[blue,rectangle],iota(filter(filter(x.s, green), iff[rectangle,triangle])))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:iff[%s,%s];4:rectangle;4:triangle
'λx.apply(and[and[apply(size-leq,iota(filter(filter(x.s, blue), rectangle))),yellow],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle;4:yellow;4:size1;1:%s.o;2:x
'λx.forall(or[yellow,and[triangle,size3]],filter(x.s, yellow))'	0:forall(%s,%s);4:or[%s,%s];4:yellow;4:and[%s,%s];4:triangle;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.contains(iota(filter(filter(x.s, circle), not[green])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:green;3:%s.s;2:x
'λx.apply(and[nor[rectangle,nor[triangle,blue]],and[size3,circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:rectangle;4:nor[%s,%s];4:triangle;4:blue;4:and[%s,%s];4:size3;4:circle;1:%s.o;2:x
'λx.apply(apply(same_color,x.o),iota(filter(filter(x.s, size1), or[or[size2,apply(same_shape,iota(filter(x.s, circle)))],size1])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:or[%s,%s];4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1
'λx.apply(yellow,iota(filter(x.s, and[size1,circle])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:circle
'λx.apply(circle,iota(filter(filter(x.s, circle), blue)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue
'λx.apply(apply(same_color,iota(filter(filter(x.s, triangle), triangle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:triangle;1:%s.o;2:x
'λx.apply(not[and[and[size3,and[size2,and[or[apply(size-leq,x.o),and[circle,apply(same_color,x.o)]],blue]]],rectangle]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:size2;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[apply(size-leq,x.o)],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[not[yellow],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:yellow;4:size2;1:%s.o;2:x
'λx.exists(or[size3,size3], filter(filter(x.s, blue), and[size3,apply(size-gt,iota(x.s))]))'	0:exists(%s, %s);4:or[%s,%s];4:size3;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:size3;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[yellow,blue],iota(filter(x.s, not[rectangle])))'	0:apply(%s,%s);4:nor[%s,%s];4:yellow;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle
'λx.apply(yellow,iota(filter(filter(x.s, triangle), rectangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle
'λx.forall(apply(size-geq,x.o),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:size-geq;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(filter(filter(filter(x.s, rectangle), not[not[rectangle]]), size1), triangle), triangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:not[%s];4:rectangle;4:size1;4:triangle;4:triangle
'λx.apply(implies[size3,and[yellow,triangle]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size3;4:and[%s,%s];4:yellow;4:triangle;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(filter(x.s, size2), yellow), size3)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:yellow;4:size3
'λx.forall(and[rectangle,triangle],filter(filter(x.s, apply(same_size,iota(x.s))), and[size3,or[size2,and[size2,nand[rectangle,yellow]]]]))'	0:forall(%s,%s);4:and[%s,%s];4:rectangle;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:or[%s,%s];4:size2;4:and[%s,%s];4:size2;4:nand[%s,%s];4:rectangle;4:yellow
'λx.apply(size1,iota(filter(filter(x.s, blue), rectangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle
'λx.apply(or[and[green,circle],size2],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:green;4:circle;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.exists(not[yellow], x.s)'	0:exists(%s, %s);4:not[%s];4:yellow;3:%s.s;2:x
'λx.apply(or[or[size2,rectangle],blue],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:size2;4:rectangle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[or[apply(same_size,x.o),apply(same_color,x.o)],circle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;1:%s.o;2:x
'λx.apply(not[and[size2,apply(same_size,x.o)]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[yellow,and[size1,apply(same_size,iota(x.s))]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[and[nand[rectangle,circle],size2],iff[circle,yellow]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:rectangle;4:circle;4:size2;4:iff[%s,%s];4:circle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.forall(apply(same_shape,x.o),filter(filter(filter(x.s, size2), circle), circle))'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle;4:circle
'λx.apply(green,iota(filter(filter(filter(x.s, circle), size3), size2)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3;4:size2
'λx.empty(filter(filter(filter(x.s, green), yellow), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow;4:green
'λx.empty(filter(filter(filter(x.s, green), yellow), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow;4:size2
'λx.exists(yellow, filter(x.s, blue))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(nor[circle,and[yellow,and[size2,yellow]]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:circle;4:and[%s,%s];4:yellow;4:and[%s,%s];4:size2;4:yellow;1:%s.o;2:x
'λx.apply(not[or[green,size3]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:green;4:size3;1:iota(%s);3:%s.s;2:x
'λx.exists(size2, filter(filter(filter(x.s, and[size2,blue]), circle), size2))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:blue;4:circle;4:size2
'λx.forall(circle,filter(x.s, yellow))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.empty(filter(filter(filter(filter(filter(filter(x.s, and[blue,rectangle]), and[circle,triangle]), not[and[size3,and[size2,size3]]]), yellow), green), and[rectangle,green]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:rectangle;4:and[%s,%s];4:circle;4:triangle;4:not[%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:size2;4:size3;4:yellow;4:green;4:and[%s,%s];4:rectangle;4:green
'λx.forall(rectangle,filter(filter(filter(x.s, green), apply(same_shape,iota(x.s))), or[blue,size2]))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:size2
'λx.apply(not[circle],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(not[circle],iota(filter(x.s, green)))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[triangle,green],iota(filter(filter(filter(x.s, apply(same_shape,x.o)), green), size1)))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green;4:size1
'λx.exists(or[green,or[apply(size-lt,x.o),circle]], filter(x.s, circle))'	0:exists(%s, %s);4:or[%s,%s];4:green;4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.empty(filter(filter(filter(x.s, size2), circle), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle;4:size1
'λx.apply(or[size3,and[size1,size3]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:and[%s,%s];4:size1;4:size3;1:iota(%s);3:%s.s;2:x
'λx.exists(size1, filter(filter(filter(x.s, not[blue]), iff[blue,not[and[or[and[rectangle,apply(same_shape,x.o)],apply(size-leq,iota(x.s))],yellow]]]), rectangle))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:iff[%s,%s];4:blue;4:not[%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:yellow;4:rectangle
'λx.forall(or[apply(same_size,x.o),green],filter(filter(x.s, yellow), green))'	0:forall(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green
'λx.forall(implies[not[circle],rectangle],filter(filter(filter(filter(filter(filter(filter(filter(filter(filter(x.s, green), green), blue), rectangle), nand[size2,circle]), blue), not[blue]), not[or[not[size3],iff[size2,triangle]]]), size3), green))'	0:forall(%s,%s);4:implies[%s,%s];4:not[%s];4:circle;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:green;4:blue;4:rectangle;4:nand[%s,%s];4:size2;4:circle;4:blue;4:not[%s];4:blue;4:not[%s];4:or[%s,%s];4:not[%s];4:size3;4:iff[%s,%s];4:size2;4:triangle;4:size3;4:green
'λx.apply(and[blue,and[nor[green,or[and[or[yellow,size1],blue],blue]],and[not[not[size1]],size1]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:nor[%s,%s];4:green;4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:yellow;4:size1;4:blue;4:blue;4:and[%s,%s];4:not[%s];4:not[%s];4:size1;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(or[rectangle,not[triangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:not[%s];4:triangle;1:%s.o;2:x
'λx.apply(not[apply(size-gt,x.o)],iota(filter(x.s, and[size3,triangle])))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:triangle
'λx.contains(x.o, filter(filter(x.s, size2), circle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle
'λx.apply(nor[green,green],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:green;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_shape,x.o),iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.exists(or[size1,apply(size-geq,x.o)], filter(filter(filter(x.s, not[size2]), and[apply(same_color,x.o),apply(same_shape,iota(filter(filter(x.s, size2), blue)))]), and[apply(same_shape,x.o),triangle]))'	0:exists(%s, %s);4:or[%s,%s];4:size1;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle
'λx.apply(and[apply(same_size,x.o),apply(same_size,iota(x.s))],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(or[rectangle,apply(same_shape,x.o)],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[and[yellow,triangle],and[size1,apply(same_size,x.o)]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:triangle;4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(not[size2],iota(filter(x.s, or[apply(same_size,x.o),rectangle])))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:rectangle
'λx.apply(nand[or[size3,iff[size1,not[size1]]],size1],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:or[%s,%s];4:size3;4:iff[%s,%s];4:size1;4:not[%s];4:size1;4:size1;1:%s.o;2:x
'λx.apply(and[blue,size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[blue,size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[blue,size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(or[and[size2,blue],yellow],iota(filter(filter(x.s, not[and[yellow,and[green,triangle]]]), not[and[apply(same_color,x.o),size3]])))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size2;4:blue;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:green;4:triangle;4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3
'λx.apply(triangle,iota(filter(filter(filter(x.s, size1), rectangle), yellow)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle;4:yellow
'λx.exists(size2, filter(x.s, or[size3,nor[rectangle,nand[implies[size2,green],or[triangle,size1]]]]))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:nor[%s,%s];4:rectangle;4:nand[%s,%s];4:implies[%s,%s];4:size2;4:green;4:or[%s,%s];4:triangle;4:size1
'λx.contains(iota(filter(filter(filter(x.s, apply(same_shape,iota(x.s))), size2), or[yellow,rectangle])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:yellow;4:rectangle;3:%s.s;2:x
'λx.apply(triangle,iota(filter(x.s, and[apply(same_shape,x.o),nand[circle,rectangle]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:nand[%s,%s];4:circle;4:rectangle
'λx.apply(and[triangle,blue],iota(filter(filter(filter(filter(filter(filter(x.s, implies[iff[size1,and[rectangle,and[rectangle,rectangle]]],nor[rectangle,not[triangle]]]), size2), blue), yellow), blue), or[apply(same_size,x.o),and[triangle,green]])))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:iff[%s,%s];4:size1;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:rectangle;4:rectangle;4:nor[%s,%s];4:rectangle;4:not[%s];4:triangle;4:size2;4:blue;4:yellow;4:blue;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:triangle;4:green
'λx.apply(circle,iota(filter(filter(filter(x.s, implies[apply(same_color,iota(filter(filter(filter(filter(filter(x.s, size3), yellow), or[and[or[and[green,circle],yellow],size3],blue]), yellow), blue))),circle]), circle), or[size2,green])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow;4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:green;4:circle;4:yellow;4:size3;4:blue;4:yellow;4:blue;4:circle;4:circle;4:or[%s,%s];4:size2;4:green
'λx.apply(size1,iota(filter(filter(x.s, or[size1,circle]), size2)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:circle;4:size2
'λx.exists(rectangle, filter(filter(x.s, or[yellow,size3]), blue))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:size3;4:blue
'λx.apply(and[and[circle,triangle],apply(same_color,iota(filter(x.s, rectangle)))],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, nor[size1,and[rectangle,blue]]), not[or[size1,and[size2,and[size2,or[rectangle,size1]]]]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size1;4:and[%s,%s];4:rectangle;4:blue;4:not[%s];4:or[%s,%s];4:size1;4:and[%s,%s];4:size2;4:and[%s,%s];4:size2;4:or[%s,%s];4:rectangle;4:size1
'λx.forall(and[not[triangle],circle],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:not[%s];4:triangle;4:circle;3:%s.s;2:x
'λx.forall(triangle,filter(filter(filter(filter(x.s, rectangle), apply(same_size,iota(x.s))), size1), circle))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size1;4:circle
'λx.contains(iota(filter(filter(x.s, and[size1,and[apply(same_size,iota(x.s)),size1]]), blue)), filter(filter(filter(filter(x.s, triangle), circle), apply(size-geq,iota(x.s))), green))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size1;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:green
'λx.apply(triangle,iota(filter(x.s, iff[size1,size2])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size1;4:size2
'λx.apply(nor[apply(same_color,iota(x.s)),size2],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size2;1:%s.o;2:x
'λx.apply(not[implies[rectangle,and[green,or[apply(same_size,iota(filter(x.s, and[circle,green]))),not[green]]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:implies[%s,%s];4:rectangle;4:and[%s,%s];4:green;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:green;4:not[%s];4:green;1:%s.o;2:x
'λx.empty(filter(x.s, yellow))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.forall(size2,filter(filter(x.s, apply(same_shape,x.o)), triangle))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle
'λx.apply(and[size3,apply(same_size,x.o)],iota(filter(filter(x.s, not[size3]), and[or[circle,blue],or[triangle,yellow]])))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;4:and[%s,%s];4:or[%s,%s];4:circle;4:blue;4:or[%s,%s];4:triangle;4:yellow
'λx.apply(not[size3],x.o)'	0:apply(%s,%s);4:not[%s];4:size3;1:%s.o;2:x
'λx.apply(not[size1],x.o)'	0:apply(%s,%s);4:not[%s];4:size1;1:%s.o;2:x
'λx.apply(not[size2],x.o)'	0:apply(%s,%s);4:not[%s];4:size2;1:%s.o;2:x
'λx.apply(not[and[size2,green]],iota(filter(x.s, green)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size2;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.exists(not[blue], filter(filter(x.s, apply(same_color,iota(x.s))), apply(size-gt,x.o)))'	0:exists(%s, %s);4:not[%s];4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.apply(not[or[size1,and[size1,green]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:size1;4:and[%s,%s];4:size1;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[apply(size-lt,x.o),rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[green,size2],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:green;4:size2;1:%s.o;2:x
'λx.apply(and[not[size1],or[not[and[and[rectangle,rectangle],circle]],rectangle]],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size1;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:rectangle;4:circle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.forall(circle,filter(filter(x.s, circle), rectangle))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle
'λx.apply(yellow,x.o)'	0:apply(%s,%s);4:yellow;1:%s.o;2:x
'λx.apply(and[or[and[and[green,green],size1],and[blue,rectangle]],apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:green;4:size1;4:and[%s,%s];4:blue;4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(filter(filter(filter(filter(x.s, circle), rectangle), rectangle), size1), size2), triangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle;4:rectangle;4:size1;4:size2;4:triangle
'λx.apply(or[or[nand[iff[and[circle,apply(same_color,iota(filter(filter(x.s, and[size2,rectangle]), and[size2,not[and[circle,not[rectangle]]]])))],size2],circle],blue],triangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:nand[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:rectangle;4:and[%s,%s];4:size2;4:not[%s];4:and[%s,%s];4:circle;4:not[%s];4:rectangle;4:size2;4:circle;4:blue;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(filter(filter(x.s, size2), blue), size3), not[size3])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue;4:size3;4:not[%s];4:size3
'λx.apply(nand[apply(size-geq,x.o),green],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:green;1:%s.o;2:x
'λx.empty(filter(filter(x.s, not[rectangle]), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;4:triangle
'λx.apply(and[and[not[size1],blue],circle],iota(filter(x.s, not[not[implies[triangle,green]]])))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size1;4:blue;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:implies[%s,%s];4:triangle;4:green
'λx.apply(and[implies[circle,blue],apply(same_color,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:circle;4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(not[circle],iota(filter(x.s, iff[rectangle,circle])))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:rectangle;4:circle
'λx.apply(size3,iota(filter(filter(filter(x.s, triangle), rectangle), and[not[and[size1,size3]],circle])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:size1;4:size3;4:circle
'λx.empty(filter(x.s, apply(same_color,iota(x.s))))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size3,and[triangle,size2]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:and[%s,%s];4:triangle;4:size2;1:%s.o;2:x
'λx.exists(or[size2,size1], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:size2;4:size1;3:%s.s;2:x
'λx.forall(blue,filter(x.s, apply(same_color,x.o)))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(filter(x.s, apply(same_shape,iota(x.s))), rectangle), not[size3])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:rectangle;4:not[%s];4:size3
'λx.apply(blue,iota(filter(x.s, circle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(not[and[blue,size3]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:blue;4:size3;1:%s.o;2:x
'λx.apply(size3,iota(filter(x.s, and[green,iff[size1,rectangle]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:iff[%s,%s];4:size1;4:rectangle
'λx.apply(not[size1],iota(filter(filter(filter(filter(filter(filter(x.s, or[green,size3]), not[blue]), circle), size1), circle), and[yellow,size3])))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:size3;4:not[%s];4:blue;4:circle;4:size1;4:circle;4:and[%s,%s];4:yellow;4:size3
'λx.apply(apply(same_size,iota(filter(filter(x.s, circle), not[or[or[and[implies[rectangle,or[or[size1,yellow],green]],nor[triangle,rectangle]],apply(same_shape,x.o)],not[or[triangle,blue]]]]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:rectangle;4:or[%s,%s];4:or[%s,%s];4:size1;4:yellow;4:green;4:nor[%s,%s];4:triangle;4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:or[%s,%s];4:triangle;4:blue;1:%s.o;2:x
'λx.apply(not[implies[size1,size1]],x.o)'	0:apply(%s,%s);4:not[%s];4:implies[%s,%s];4:size1;4:size1;1:%s.o;2:x
'λx.apply(nor[apply(size-gt,iota(filter(x.s, blue))),yellow],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow;1:%s.o;2:x
'λx.apply(or[implies[circle,and[size1,not[rectangle]]],size2],iota(filter(x.s, or[blue,and[apply(same_color,iota(x.s)),circle]])))'	0:apply(%s,%s);4:or[%s,%s];4:implies[%s,%s];4:circle;4:and[%s,%s];4:size1;4:not[%s];4:rectangle;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:circle
'λx.exists(and[apply(same_size,iota(x.s)),blue], filter(filter(x.s, circle), and[size3,iff[size2,size1]]))'	0:exists(%s, %s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:size3;4:iff[%s,%s];4:size2;4:size1
'λx.exists(blue, filter(x.s, yellow))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(size1,iota(filter(filter(x.s, size1), nor[implies[triangle,green],green])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:nor[%s,%s];4:implies[%s,%s];4:triangle;4:green;4:green
'λx.apply(and[circle,rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[yellow,yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:yellow;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, implies[size2,rectangle]), green)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size2;4:rectangle;4:green
'λx.apply(and[size1,implies[yellow,circle]],iota(filter(filter(x.s, size2), yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:implies[%s,%s];4:yellow;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:yellow
'λx.exists(iff[apply(same_size,iota(x.s)),size1], filter(filter(filter(x.s, rectangle), green), size2))'	0:exists(%s, %s);4:iff[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green;4:size2
'λx.apply(and[apply(same_color,x.o),or[not[yellow],triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:or[%s,%s];4:not[%s];4:yellow;4:triangle;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, apply(size-leq,x.o))))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:%s.o;2:x
'λx.apply(iff[size1,green],iota(filter(filter(filter(x.s, size1), or[circle,blue]), size1)))'	0:apply(%s,%s);4:iff[%s,%s];4:size1;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:or[%s,%s];4:circle;4:blue;4:size1
'λx.empty(filter(x.s, circle))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[green,or[green,triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:or[%s,%s];4:green;4:triangle;1:%s.o;2:x
'λx.forall(apply(same_shape,x.o),filter(filter(filter(x.s, circle), blue), size2))'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue;4:size2
'λx.apply(green,iota(filter(x.s, and[yellow,green])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:green
'λx.contains(x.o, filter(filter(filter(x.s, green), size3), blue))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size3;4:blue
'λx.apply(blue,iota(filter(x.s, apply(same_size,iota(filter(x.s, size3))))))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(green, filter(filter(filter(filter(filter(filter(x.s, size3), green), and[blue,yellow]), circle), yellow), green))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green;4:and[%s,%s];4:blue;4:yellow;4:circle;4:yellow;4:green
'λx.empty(filter(x.s, and[triangle,and[blue,size2]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:and[%s,%s];4:blue;4:size2
'λx.apply(and[and[rectangle,and[yellow,and[size2,not[or[blue,not[apply(size-gt,iota(filter(x.s, green)))]]]]]],triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:yellow;4:and[%s,%s];4:size2;4:not[%s];4:or[%s,%s];4:blue;4:not[%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(x.s, size3), blue)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue
'λx.apply(size1,iota(filter(filter(x.s, size3), blue)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue
'λx.apply(size2,iota(filter(x.s, apply(size-leq,x.o))))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:%s.o;2:x
'λx.apply(size3,iota(filter(x.s, apply(size-leq,x.o))))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:%s.o;2:x
'λx.apply(size1,iota(filter(x.s, apply(size-leq,x.o))))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:%s.o;2:x
'λx.apply(not[implies[size3,size1]],x.o)'	0:apply(%s,%s);4:not[%s];4:implies[%s,%s];4:size3;4:size1;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(filter(x.s, rectangle), triangle), and[triangle,not[green]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle;4:and[%s,%s];4:triangle;4:not[%s];4:green
'λx.apply(and[and[nand[yellow,and[and[green,yellow],circle]],rectangle],size1],iota(filter(filter(x.s, implies[circle,circle]), circle)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:yellow;4:and[%s,%s];4:and[%s,%s];4:green;4:yellow;4:circle;4:rectangle;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:circle;4:circle;4:circle
'λx.forall(not[rectangle],filter(filter(filter(filter(filter(x.s, not[yellow]), and[blue,yellow]), rectangle), implies[green,triangle]), size2))'	0:forall(%s,%s);4:not[%s];4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:and[%s,%s];4:blue;4:yellow;4:rectangle;4:implies[%s,%s];4:green;4:triangle;4:size2
'λx.apply(green,iota(filter(filter(x.s, green), rectangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle
'λx.contains(iota(x.s), filter(filter(x.s, apply(same_shape,x.o)), size3))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3
'λx.apply(triangle,iota(filter(filter(x.s, yellow), not[green])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:green
'λx.empty(filter(x.s, apply(size-leq,x.o)))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:%s.o;2:x
'λx.forall(nor[size1,yellow],x.s)'	0:forall(%s,%s);4:nor[%s,%s];4:size1;4:yellow;3:%s.s;2:x
'λx.apply(size2,iota(filter(x.s, or[and[circle,size1],triangle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:circle;4:size1;4:triangle
'λx.apply(size2,iota(filter(x.s, apply(size-lt,x.o))))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.apply(implies[and[rectangle,blue],yellow],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:rectangle;4:blue;4:yellow;1:%s.o;2:x
'λx.exists(or[not[size1],and[and[and[and[size3,size1],size3],and[triangle,triangle]],circle]], filter(filter(filter(x.s, green), rectangle), triangle))'	0:exists(%s, %s);4:or[%s,%s];4:not[%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:size1;4:size3;4:and[%s,%s];4:triangle;4:triangle;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle;4:triangle
'λx.forall(not[blue],filter(x.s, green))'	0:forall(%s,%s);4:not[%s];4:blue;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[not[and[and[implies[not[apply(same_color,iota(filter(x.s, rectangle)))],green],and[rectangle,size1]],size3]],nand[or[size2,yellow],or[rectangle,yellow]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green;4:and[%s,%s];4:rectangle;4:size1;4:size3;4:nand[%s,%s];4:or[%s,%s];4:size2;4:yellow;4:or[%s,%s];4:rectangle;4:yellow;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(x.s, rectangle), and[apply(same_color,x.o),apply(same_shape,x.o)])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(implies[yellow,not[and[size2,and[green,green]]]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:yellow;4:not[%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:green;4:green;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(x.s, green), triangle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:triangle
'λx.apply(size3,iota(filter(filter(x.s, green), triangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:triangle
'λx.apply(and[blue,size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:size2;1:%s.o;2:x
'λx.apply(and[blue,size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:size1;1:%s.o;2:x
'λx.apply(and[blue,size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:size3;1:%s.o;2:x
'λx.apply(apply(same_shape,x.o),iota(filter(filter(x.s, and[blue,apply(same_shape,iota(filter(filter(x.s, circle), not[nand[yellow,apply(same_size,x.o)]])))]), triangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:nand[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle
'λx.apply(blue,iota(filter(filter(x.s, blue), size2)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2
'λx.exists(or[size1,or[green,and[green,not[and[rectangle,rectangle]]]]], filter(x.s, size3))'	0:exists(%s, %s);4:or[%s,%s];4:size1;4:or[%s,%s];4:green;4:and[%s,%s];4:green;4:not[%s];4:and[%s,%s];4:rectangle;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(not[and[size3,yellow]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size3;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.exists(size1, filter(filter(x.s, size1), and[implies[circle,or[circle,and[and[rectangle,size3],size2]]],size2]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:implies[%s,%s];4:circle;4:or[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size3;4:size2;4:size2
'λx.apply(blue,iota(filter(filter(filter(filter(filter(x.s, apply(same_shape,x.o)), size2), green), apply(same_shape,x.o)), size2)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2;4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2
'λx.contains(iota(x.s), filter(filter(x.s, yellow), size2))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2
'λx.forall(yellow,filter(filter(filter(x.s, or[green,size1]), triangle), circle))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:size1;4:triangle;4:circle
'λx.apply(or[size3,size3],iota(filter(x.s, apply(same_shape,x.o))))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(not[and[not[circle],and[size2,apply(same_color,x.o)]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:circle;4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(filter(x.s, rectangle), size2), yellow)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2;4:yellow
'λx.apply(size3,iota(filter(x.s, or[apply(size-leq,x.o),size1])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size1
'λx.apply(and[or[size3,yellow],size3],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size3;4:yellow;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.exists(and[rectangle,size3], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:rectangle;4:size3;3:%s.s;2:x
'λx.exists(and[rectangle,size1], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:rectangle;4:size1;3:%s.s;2:x
'λx.exists(implies[size2,circle], x.s)'	0:exists(%s, %s);4:implies[%s,%s];4:size2;4:circle;3:%s.s;2:x
'λx.apply(or[size3,blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:blue;1:%s.o;2:x
'λx.exists(not[or[green,green]], filter(filter(filter(filter(x.s, and[circle,and[not[size2],iff[nor[green,nand[and[size2,or[rectangle,apply(same_size,iota(x.s))]],implies[blue,circle]]],size2]]]), or[rectangle,triangle]), triangle), not[size3]))'	0:exists(%s, %s);4:not[%s];4:or[%s,%s];4:green;4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:and[%s,%s];4:not[%s];4:size2;4:iff[%s,%s];4:nor[%s,%s];4:green;4:nand[%s,%s];4:and[%s,%s];4:size2;4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:implies[%s,%s];4:blue;4:circle;4:size2;4:or[%s,%s];4:rectangle;4:triangle;4:triangle;4:not[%s];4:size3
'λx.apply(size3,iota(filter(filter(x.s, size2), or[apply(same_shape,x.o),circle])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle
'λx.apply(nand[or[triangle,circle],circle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:or[%s,%s];4:triangle;4:circle;4:circle;1:%s.o;2:x
'λx.apply(triangle,iota(filter(x.s, iff[size1,blue])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size1;4:blue
'λx.apply(not[apply(same_color,iota(filter(x.s, apply(size-gt,iota(filter(filter(filter(filter(x.s, circle), size1), yellow), size3))))))],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1;4:yellow;4:size3;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(x.s), filter(filter(filter(filter(filter(filter(filter(x.s, not[or[not[yellow],yellow]]), circle), size3), rectangle), circle), size1), triangle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:not[%s];4:yellow;4:yellow;4:circle;4:size3;4:rectangle;4:circle;4:size1;4:triangle
'λx.exists(blue, filter(filter(filter(filter(x.s, yellow), green), not[size2]), circle))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green;4:not[%s];4:size2;4:circle
'λx.apply(or[rectangle,green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:green;1:%s.o;2:x
'λx.apply(implies[and[blue,blue],rectangle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:blue;4:blue;4:rectangle;1:%s.o;2:x
'λx.apply(triangle,iota(filter(x.s, and[yellow,not[apply(same_color,x.o)]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.forall(triangle,filter(filter(x.s, size2), or[yellow,yellow]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:yellow;4:yellow
'λx.apply(and[apply(same_color,iota(filter(filter(x.s, not[apply(size-lt,iota(filter(x.s, rectangle)))]), size3))),rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3;4:rectangle;1:%s.o;2:x
'λx.forall(size1,filter(filter(filter(filter(filter(filter(x.s, size2), and[triangle,not[rectangle]]), size3), apply(same_size,iota(x.s))), or[size3,green]), circle))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:triangle;4:not[%s];4:rectangle;4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:green;4:circle
'λx.apply(blue,iota(filter(filter(x.s, blue), apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(filter(filter(x.s, green), yellow), size1), and[not[green],or[blue,apply(same_color,iota(filter(x.s, size2)))]]), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow;4:size1;4:and[%s,%s];4:not[%s];4:green;4:or[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle
'λx.apply(or[circle,and[or[rectangle,or[blue,and[or[size1,or[and[circle,blue],iff[size2,and[rectangle,yellow]]]],size1]]],and[rectangle,or[blue,blue]]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:or[%s,%s];4:blue;4:and[%s,%s];4:or[%s,%s];4:size1;4:or[%s,%s];4:and[%s,%s];4:circle;4:blue;4:iff[%s,%s];4:size2;4:and[%s,%s];4:rectangle;4:yellow;4:size1;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:blue;4:blue;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, and[iff[or[implies[or[size1,blue],size1],nor[not[nor[rectangle,yellow]],nand[and[circle,and[blue,apply(same_color,iota(filter(x.s, or[implies[apply(same_shape,iota(filter(filter(x.s, size3), or[triangle,or[blue,and[green,size3]]]))),green],size2])))]],rectangle]]],blue],yellow]), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:size1;4:blue;4:size1;4:nor[%s,%s];4:not[%s];4:nor[%s,%s];4:rectangle;4:yellow;4:nand[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:implies[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:triangle;4:or[%s,%s];4:blue;4:and[%s,%s];4:green;4:size3;4:green;4:size2;4:rectangle;4:blue;4:yellow;4:size1
'λx.apply(and[size3,rectangle],iota(filter(x.s, and[size1,green])))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:green
'λx.apply(and[or[blue,rectangle],apply(same_shape,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:blue;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(and[iff[yellow,and[blue,apply(same_shape,iota(x.s))]],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:yellow;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size2;1:%s.o;2:x
'λx.apply(not[yellow],iota(filter(filter(x.s, rectangle), circle)))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle
'λx.apply(and[not[and[apply(same_size,iota(filter(x.s, not[apply(same_size,iota(x.s))]))),yellow]],size2],iota(filter(filter(filter(x.s, not[and[nand[or[yellow,apply(same_size,x.o)],yellow],size2]]), nor[size1,and[rectangle,not[nor[iff[size1,size3],triangle]]]]), nor[triangle,circle])))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:yellow;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow;4:size2;4:nor[%s,%s];4:size1;4:and[%s,%s];4:rectangle;4:not[%s];4:nor[%s,%s];4:iff[%s,%s];4:size1;4:size3;4:triangle;4:nor[%s,%s];4:triangle;4:circle
'λx.forall(blue,filter(filter(x.s, size2), not[green]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:not[%s];4:green
'λx.apply(and[triangle,apply(size-gt,iota(filter(filter(x.s, apply(size-geq,x.o)), size3)))],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(or[or[yellow,not[yellow]],size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:yellow;4:not[%s];4:yellow;4:size3;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(filter(filter(x.s, circle), size2), and[blue,size2]), blue)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size2;4:and[%s,%s];4:blue;4:size2;4:blue
'λx.apply(nand[apply(size-geq,iota(x.s)),or[apply(size-leq,iota(x.s)),triangle]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:triangle;1:%s.o;2:x
'λx.apply(not[apply(same_size,x.o)],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[apply(same_color,iota(filter(x.s, circle))),not[size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:size1;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(filter(filter(x.s, size2), triangle), blue), green)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:triangle;4:blue;4:green
'λx.contains(x.o, filter(filter(filter(x.s, apply(same_size,iota(x.s))), yellow), and[not[apply(size-gt,x.o)],and[and[and[or[and[and[apply(size-gt,x.o),size1],and[green,green]],rectangle],yellow],or[circle,yellow]],size3]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:size1;4:and[%s,%s];4:green;4:green;4:rectangle;4:yellow;4:or[%s,%s];4:circle;4:yellow;4:size3
'λx.apply(triangle,iota(filter(filter(x.s, size2), rectangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle
'λx.apply(triangle,iota(filter(filter(x.s, size3), rectangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle
'λx.apply(triangle,iota(filter(filter(x.s, size1), rectangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle
'λx.contains(x.o, filter(filter(x.s, size2), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green
'λx.contains(x.o, filter(filter(x.s, size2), size1))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1
'λx.contains(x.o, filter(filter(x.s, size3), size2))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2
'λx.contains(x.o, filter(filter(x.s, size1), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green
'λx.contains(x.o, filter(filter(x.s, size1), size1))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1
'λx.apply(size1,iota(filter(x.s, and[blue,and[apply(same_shape,x.o),nor[green,apply(same_size,iota(x.s))]]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:nor[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(x.s, and[yellow,size3])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size3
'λx.forall(size3,filter(x.s, not[rectangle]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle
'λx.exists(triangle, filter(x.s, or[blue,not[rectangle]]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:not[%s];4:rectangle
'λx.apply(green,iota(filter(x.s, blue)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(size2,iota(filter(filter(x.s, rectangle), and[and[rectangle,blue],implies[or[blue,and[and[size1,size3],implies[and[iff[yellow,yellow],blue],not[size1]]]],circle]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:blue;4:implies[%s,%s];4:or[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:size1;4:size3;4:implies[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:yellow;4:yellow;4:blue;4:not[%s];4:size1;4:circle
'λx.apply(and[and[yellow,rectangle],size1],iota(filter(x.s, green)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:rectangle;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(size1,iota(filter(filter(x.s, yellow), and[triangle,size3])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:triangle;4:size3
'λx.apply(yellow,iota(filter(filter(x.s, size1), or[circle,blue])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:or[%s,%s];4:circle;4:blue
'λx.exists(circle, filter(filter(x.s, rectangle), iff[and[green,blue],apply(same_color,x.o)]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:iff[%s,%s];4:and[%s,%s];4:green;4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(not[rectangle],iota(filter(filter(filter(filter(filter(filter(filter(x.s, circle), or[and[blue,nand[size2,and[rectangle,rectangle]]],or[green,triangle]]), size1), or[yellow,blue]), blue), triangle), and[apply(same_size,x.o),and[size1,circle]])))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:and[%s,%s];4:blue;4:nand[%s,%s];4:size2;4:and[%s,%s];4:rectangle;4:rectangle;4:or[%s,%s];4:green;4:triangle;4:size1;4:or[%s,%s];4:yellow;4:blue;4:blue;4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:size1;4:circle
'λx.apply(iff[and[rectangle,size2],triangle],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:rectangle;4:size2;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.forall(size1,filter(x.s, not[or[and[circle,yellow],and[circle,apply(same_size,x.o)]]]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:circle;4:yellow;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(not[and[triangle,size2]],iota(filter(x.s, and[green,size2])))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:triangle;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:size2
'λx.apply(rectangle,iota(filter(x.s, apply(same_size,iota(filter(x.s, size1))))))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(or[size1,green],iota(filter(x.s, and[rectangle,apply(size-geq,x.o)])))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.exists(not[green], x.s)'	0:exists(%s, %s);4:not[%s];4:green;3:%s.s;2:x
'λx.apply(green,iota(filter(x.s, nand[and[iff[green,or[apply(size-geq,iota(x.s)),yellow]],or[yellow,size1]],not[nor[green,nor[size1,apply(same_size,x.o)]]]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:green;4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:yellow;4:size1;4:not[%s];4:nor[%s,%s];4:green;4:nor[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(and[rectangle,circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, triangle)), filter(filter(x.s, size2), rectangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle
'λx.apply(not[not[circle]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:circle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, not[green])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;3:%s.s;2:x
'λx.apply(not[or[size2,size3]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:size2;4:size3;1:iota(%s);3:%s.s;2:x
'λx.exists(circle, filter(x.s, blue))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(iff[size3,apply(size-leq,x.o)],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:size3;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[green,apply(same_color,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(and[triangle,nand[rectangle,yellow]],iota(filter(filter(x.s, green), not[and[and[and[triangle,and[triangle,triangle]],nor[and[yellow,size1],apply(same_shape,x.o)]],and[yellow,yellow]]])))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:nand[%s,%s];4:rectangle;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:triangle;4:triangle;4:nor[%s,%s];4:and[%s,%s];4:yellow;4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:yellow;4:yellow
'λx.contains(x.o, x.s)'	0:contains(%s, %s);1:%s.o;2:x;3:%s.s;2:x
'λx.apply(nand[circle,green],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:circle;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(x.s, blue)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(size3,iota(filter(x.s, blue)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(size1,iota(filter(x.s, blue)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(not[or[size1,size1]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:size1;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(filter(x.s, triangle), circle), green)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle;4:green
'λx.apply(or[not[and[circle,green]],and[or[or[green,size1],and[rectangle,and[and[triangle,size1],and[size3,circle]]]],circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:and[%s,%s];4:circle;4:green;4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:green;4:size1;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:triangle;4:size1;4:and[%s,%s];4:size3;4:circle;4:circle;1:%s.o;2:x
'λx.apply(not[not[and[size2,and[size1,rectangle]]]],iota(filter(filter(x.s, green), size2)))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:size1;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size2
'λx.apply(size1,iota(filter(filter(filter(x.s, blue), yellow), not[size2])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow;4:not[%s];4:size2
'λx.apply(size2,iota(filter(filter(x.s, yellow), not[or[size1,size2]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:or[%s,%s];4:size1;4:size2
'λx.contains(x.o, filter(filter(x.s, iff[circle,yellow]), size2))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:circle;4:yellow;4:size2
'λx.apply(not[and[or[circle,size3],green]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:or[%s,%s];4:circle;4:size3;4:green;1:%s.o;2:x
'λx.forall(rectangle,filter(x.s, or[apply(size-leq,x.o),apply(same_shape,iota(x.s))]))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, and[and[size3,circle],yellow]), circle), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size3;4:circle;4:yellow;4:circle;4:size1
'λx.apply(or[or[circle,rectangle],iff[nor[size3,implies[size3,size1]],iff[yellow,triangle]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:circle;4:rectangle;4:iff[%s,%s];4:nor[%s,%s];4:size3;4:implies[%s,%s];4:size3;4:size1;4:iff[%s,%s];4:yellow;4:triangle;1:%s.o;2:x
'λx.exists(and[rectangle,yellow], filter(x.s, nor[or[green,yellow],or[yellow,apply(same_size,x.o)]]))'	0:exists(%s, %s);4:and[%s,%s];4:rectangle;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:or[%s,%s];4:green;4:yellow;4:or[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(size3,iota(filter(x.s, apply(same_size,iota(filter(filter(x.s, rectangle), blue))))))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue
'λx.contains(iota(filter(filter(filter(filter(filter(filter(x.s, circle), yellow), not[size2]), apply(same_color,x.o)), triangle), circle)), filter(x.s, size1))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow;4:not[%s];4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(size1,iota(filter(filter(filter(x.s, size3), iff[size2,and[size1,size2]]), not[not[nor[or[not[apply(same_shape,x.o)],or[green,yellow]],rectangle]]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:iff[%s,%s];4:size2;4:and[%s,%s];4:size1;4:size2;4:not[%s];4:not[%s];4:nor[%s,%s];4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:green;4:yellow;4:rectangle
'λx.exists(and[triangle,and[size3,circle]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:size3;4:circle;3:%s.s;2:x
'λx.empty(filter(filter(x.s, circle), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size2
'λx.empty(filter(filter(x.s, circle), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green
'λx.forall(triangle,filter(x.s, or[and[size2,yellow],apply(same_color,iota(filter(filter(x.s, and[size1,implies[circle,circle]]), apply(same_size,x.o))))]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size2;4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:implies[%s,%s];4:circle;4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(and[triangle,not[and[size1,size2]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:not[%s];4:and[%s,%s];4:size1;4:size2;1:%s.o;2:x
'λx.apply(yellow,iota(filter(x.s, and[blue,rectangle])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:rectangle
'λx.apply(size3,iota(filter(filter(filter(x.s, size1), blue), green)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue;4:green
'λx.apply(green,iota(filter(filter(filter(x.s, triangle), nand[blue,green]), nand[size2,size1])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:nand[%s,%s];4:blue;4:green;4:nand[%s,%s];4:size2;4:size1
'λx.apply(and[size2,or[nor[rectangle,or[nand[rectangle,not[size2]],size3]],triangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:or[%s,%s];4:nor[%s,%s];4:rectangle;4:or[%s,%s];4:nand[%s,%s];4:rectangle;4:not[%s];4:size2;4:size3;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[rectangle,circle],iota(filter(filter(filter(x.s, not[and[iff[triangle,apply(same_size,iota(filter(filter(x.s, size3), implies[blue,green])))],yellow]]), circle), size2)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:iff[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:implies[%s,%s];4:blue;4:green;4:yellow;4:circle;4:size2
'λx.apply(size2,iota(filter(filter(filter(filter(filter(filter(x.s, or[blue,and[not[rectangle],rectangle]]), triangle), size1), circle), iff[circle,blue]), or[apply(size-lt,x.o),and[blue,rectangle]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:and[%s,%s];4:not[%s];4:rectangle;4:rectangle;4:triangle;4:size1;4:circle;4:iff[%s,%s];4:circle;4:blue;4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:and[%s,%s];4:blue;4:rectangle
'λx.empty(filter(filter(x.s, size1), nor[green,yellow]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:nor[%s,%s];4:green;4:yellow
'λx.apply(and[nor[and[yellow,not[size3]],yellow],apply(same_shape,iota(filter(x.s, size1)))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:yellow;4:not[%s];4:size3;4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;1:%s.o;2:x
'λx.apply(not[and[size1,yellow]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size1;4:yellow;1:%s.o;2:x
'λx.apply(and[size2,or[or[and[nor[blue,size3],or[apply(same_size,x.o),yellow]],blue],circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:blue;4:size3;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow;4:blue;4:circle;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(filter(x.s, size3), green), blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green;4:blue
'λx.exists(not[size2], filter(x.s, circle))'	0:exists(%s, %s);4:not[%s];4:size2;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.exists(and[blue,size3], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:blue;4:size3;3:%s.s;2:x
'λx.exists(or[size3,size1], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:size3;4:size1;3:%s.s;2:x
'λx.apply(and[triangle,or[or[size3,size1],circle]],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:or[%s,%s];4:or[%s,%s];4:size3;4:size1;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.contains(iota(filter(filter(filter(filter(filter(x.s, or[nand[size3,size2],apply(same_size,x.o)]), and[blue,not[size3]]), yellow), blue), blue)), filter(x.s, or[triangle,size3]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:nand[%s,%s];4:size3;4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:blue;4:not[%s];4:size3;4:yellow;4:blue;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:size3
'λx.apply(apply(size-leq,iota(filter(filter(filter(x.s, or[not[green],blue]), apply(same_size,iota(filter(x.s, size2)))), rectangle))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:green;4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size2,not[circle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:not[%s];4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_shape,iota(x.s)),iota(filter(x.s, and[green,circle])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:circle
'λx.apply(and[size1,size1],iota(filter(filter(filter(filter(filter(filter(x.s, circle), blue), size1), size1), not[circle]), triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue;4:size1;4:size1;4:not[%s];4:circle;4:triangle
'λx.apply(size2,iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(size3,iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(size1,iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(apply(same_shape,x.o),iota(filter(x.s, or[green,apply(same_shape,x.o)])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, and[and[or[blue,apply(size-leq,x.o)],triangle],or[and[yellow,yellow],and[size3,or[green,and[green,triangle]]]]]), not[size3]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:blue;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:triangle;4:or[%s,%s];4:and[%s,%s];4:yellow;4:yellow;4:and[%s,%s];4:size3;4:or[%s,%s];4:green;4:and[%s,%s];4:green;4:triangle;4:not[%s];4:size3
'λx.apply(nor[green,green],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:green;4:green;1:%s.o;2:x
'λx.apply(implies[rectangle,rectangle],iota(filter(filter(filter(x.s, not[yellow]), and[triangle,or[blue,size1]]), rectangle)))'	0:apply(%s,%s);4:implies[%s,%s];4:rectangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:and[%s,%s];4:triangle;4:or[%s,%s];4:blue;4:size1;4:rectangle
'λx.apply(and[yellow,not[apply(same_shape,x.o)]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(or[size1,and[triangle,apply(same_size,x.o)]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.exists(green, filter(filter(filter(x.s, implies[size2,triangle]), and[rectangle,and[blue,triangle]]), nand[and[or[size3,size2],rectangle],or[and[or[circle,not[triangle]],iff[triangle,circle]],triangle]]))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size2;4:triangle;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:blue;4:triangle;4:nand[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size3;4:size2;4:rectangle;4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:circle;4:not[%s];4:triangle;4:iff[%s,%s];4:triangle;4:circle;4:triangle
'λx.apply(and[rectangle,or[green,nor[not[not[or[size2,size1]]],green]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:or[%s,%s];4:green;4:nor[%s,%s];4:not[%s];4:not[%s];4:or[%s,%s];4:size2;4:size1;4:green;1:%s.o;2:x
'λx.exists(apply(same_color,iota(filter(filter(x.s, and[not[circle],size1]), not[nor[triangle,triangle]]))), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:circle;4:size1;4:not[%s];4:nor[%s,%s];4:triangle;4:triangle;3:%s.s;2:x
'λx.apply(implies[not[rectangle],triangle],iota(filter(x.s, or[or[and[green,and[rectangle,size2]],size1],or[size1,and[and[green,apply(same_color,x.o)],size1]]])))'	0:apply(%s,%s);4:implies[%s,%s];4:not[%s];4:rectangle;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:rectangle;4:size2;4:size1;4:or[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1
'λx.apply(not[or[blue,not[or[rectangle,or[green,or[green,circle]]]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:blue;4:not[%s];4:or[%s,%s];4:rectangle;4:or[%s,%s];4:green;4:or[%s,%s];4:green;4:circle;1:%s.o;2:x
'λx.apply(not[triangle],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:%s.s;2:x
'λx.forall(blue,filter(filter(filter(x.s, green), size3), and[circle,size3]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size3;4:and[%s,%s];4:circle;4:size3
'λx.apply(not[implies[blue,and[yellow,circle]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:implies[%s,%s];4:blue;4:and[%s,%s];4:yellow;4:circle;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(x.s, or[or[size2,size1],circle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:size2;4:size1;4:circle
'λx.forall(blue,filter(x.s, and[and[not[rectangle],size3],and[and[not[nand[size3,and[size3,size2]]],and[and[circle,size1],not[blue]]],blue]]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:rectangle;4:size3;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:nand[%s,%s];4:size3;4:and[%s,%s];4:size3;4:size2;4:and[%s,%s];4:and[%s,%s];4:circle;4:size1;4:not[%s];4:blue;4:blue
'λx.apply(and[size3,blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:blue;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, circle), yellow), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow;4:size1
'λx.forall(triangle,filter(filter(filter(filter(x.s, blue), yellow), and[triangle,size1]), rectangle))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow;4:and[%s,%s];4:triangle;4:size1;4:rectangle
'λx.apply(triangle,iota(filter(filter(x.s, nor[green,iff[and[yellow,yellow],triangle]]), rectangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:green;4:iff[%s,%s];4:and[%s,%s];4:yellow;4:yellow;4:triangle;4:rectangle
'λx.apply(and[green,circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:circle;1:%s.o;2:x
'λx.contains(x.o, filter(filter(filter(x.s, yellow), size1), rectangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;4:rectangle
'λx.exists(size2, filter(filter(filter(filter(x.s, and[apply(same_shape,x.o),size2]), triangle), not[or[yellow,size1]]), or[circle,size3]))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2;4:triangle;4:not[%s];4:or[%s,%s];4:yellow;4:size1;4:or[%s,%s];4:circle;4:size3
'λx.empty(filter(filter(filter(filter(x.s, not[apply(same_shape,x.o)]), not[green]), circle), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:green;4:circle;4:size2
'λx.apply(size3,iota(filter(x.s, and[rectangle,not[implies[triangle,or[size1,rectangle]]]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:not[%s];4:implies[%s,%s];4:triangle;4:or[%s,%s];4:size1;4:rectangle
'λx.apply(and[apply(same_shape,x.o),triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle;1:%s.o;2:x
'λx.apply(and[nor[green,blue],apply(same_shape,iota(x.s))],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:green;4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[rectangle,and[nor[yellow,not[rectangle]],size1]],iota(filter(filter(x.s, circle), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:nor[%s,%s];4:yellow;4:not[%s];4:rectangle;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue
'λx.apply(and[size1,blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:blue;1:%s.o;2:x
'λx.apply(and[size2,blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:blue;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, iff[blue,green])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:blue;4:green
'λx.apply(or[and[nand[or[blue,triangle],yellow],circle],and[and[apply(same_color,x.o),rectangle],apply(same_color,x.o)]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:blue;4:triangle;4:yellow;4:circle;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(size2,iota(filter(x.s, nand[circle,triangle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:circle;4:triangle
'λx.apply(and[or[nand[size2,apply(same_color,x.o)],implies[rectangle,size2]],size2],iota(filter(x.s, and[triangle,green])))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:nand[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:implies[%s,%s];4:rectangle;4:size2;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:green
'λx.forall(size1,filter(x.s, or[and[size1,not[triangle]],and[apply(same_shape,iota(x.s)),circle]]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size1;4:not[%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle
'λx.apply(nand[size1,nand[yellow,size3]],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:size1;4:nand[%s,%s];4:yellow;4:size3;1:iota(%s);3:%s.s;2:x
'λx.forall(apply(same_color,iota(filter(x.s, and[apply(same_size,iota(filter(filter(x.s, apply(same_color,iota(x.s))), circle))),circle]))),filter(x.s, yellow))'	0:forall(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:circle;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.empty(filter(filter(x.s, and[and[yellow,blue],not[circle]]), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:yellow;4:blue;4:not[%s];4:circle;4:yellow
'λx.forall(blue,filter(x.s, circle))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(or[circle,yellow],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(and[or[green,green],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:green;4:green;4:size3;1:%s.o;2:x
'λx.apply(iff[and[or[yellow,apply(same_color,iota(x.s))],triangle],yellow],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:or[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:triangle;4:yellow;1:%s.o;2:x
'λx.apply(and[size3,not[not[green]]],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:not[%s];4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(nor[apply(same_color,x.o),size2],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size2;1:%s.o;2:x
'λx.apply(or[circle,implies[size3,yellow]],iota(filter(filter(filter(filter(x.s, yellow), nor[blue,blue]), and[not[green],and[not[iff[blue,not[not[and[size1,or[apply(size-gt,x.o),or[blue,yellow]]]]]]],not[green]]]), rectangle)))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:implies[%s,%s];4:size3;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:nor[%s,%s];4:blue;4:blue;4:and[%s,%s];4:not[%s];4:green;4:and[%s,%s];4:not[%s];4:iff[%s,%s];4:blue;4:not[%s];4:not[%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:or[%s,%s];4:blue;4:yellow;4:not[%s];4:green;4:rectangle
'λx.apply(apply(same_color,iota(x.s)),iota(filter(filter(filter(filter(x.s, and[size3,and[triangle,and[size2,yellow]]]), green), or[or[triangle,yellow],blue]), and[nor[iff[and[size3,size3],size3],and[size2,not[rectangle]]],blue])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:and[%s,%s];4:triangle;4:and[%s,%s];4:size2;4:yellow;4:green;4:or[%s,%s];4:or[%s,%s];4:triangle;4:yellow;4:blue;4:and[%s,%s];4:nor[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:size3;4:size3;4:size3;4:and[%s,%s];4:size2;4:not[%s];4:rectangle;4:blue
'λx.forall(not[size2],filter(x.s, size1))'	0:forall(%s,%s);4:not[%s];4:size2;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.forall(not[size1],filter(x.s, size2))'	0:forall(%s,%s);4:not[%s];4:size1;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(implies[iff[rectangle,circle],size1],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:iff[%s,%s];4:rectangle;4:circle;4:size1;1:%s.o;2:x
'λx.exists(or[circle,circle], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:circle;4:circle;3:%s.s;2:x
'λx.contains(iota(filter(x.s, size2)), filter(filter(filter(filter(x.s, and[rectangle,circle]), size2), or[circle,size3]), size1))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:circle;4:size2;4:or[%s,%s];4:circle;4:size3;4:size1
'λx.apply(and[size3,rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size2,rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[yellow,size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:size3;1:%s.o;2:x
'λx.apply(and[yellow,size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:size1;1:%s.o;2:x
'λx.apply(and[yellow,size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:size2;1:%s.o;2:x
'λx.contains(iota(filter(x.s, yellow)), filter(x.s, triangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(implies[or[size1,circle],size1],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:or[%s,%s];4:size1;4:circle;4:size1;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(filter(x.s, not[size2]), circle), rectangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:circle;4:rectangle
'λx.apply(and[and[size3,not[or[and[rectangle,apply(same_size,iota(filter(filter(filter(x.s, apply(size-geq,x.o)), size1), size1)))],triangle]]],apply(size-leq,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size3;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:size1;4:size1;4:triangle;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(filter(x.s, apply(same_size,x.o)), not[triangle]))),iota(filter(x.s, or[or[circle,green],size2])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:circle;4:green;4:size2
'λx.apply(green,iota(filter(x.s, apply(size-gt,x.o))))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.exists(not[size1], filter(filter(filter(x.s, nor[size1,triangle]), yellow), nand[green,not[yellow]]))'	0:exists(%s, %s);4:not[%s];4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size1;4:triangle;4:yellow;4:nand[%s,%s];4:green;4:not[%s];4:yellow
'λx.empty(filter(filter(x.s, rectangle), and[implies[or[yellow,yellow],and[or[green,green],or[triangle,size1]]],not[nand[apply(same_shape,iota(x.s)),triangle]]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:yellow;4:yellow;4:and[%s,%s];4:or[%s,%s];4:green;4:green;4:or[%s,%s];4:triangle;4:size1;4:not[%s];4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle
'λx.empty(filter(filter(x.s, size3), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle
'λx.empty(filter(filter(x.s, size1), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle
'λx.apply(not[yellow],iota(filter(filter(filter(x.s, apply(size-gt,iota(filter(filter(filter(filter(filter(x.s, and[and[blue,blue],size2]), circle), triangle), size2), not[green])))), circle), size3)))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:blue;4:blue;4:size2;4:circle;4:triangle;4:size2;4:not[%s];4:green;4:circle;4:size3
'λx.apply(nand[blue,and[blue,blue]],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:blue;4:and[%s,%s];4:blue;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(size-geq,x.o),iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(green,iota(filter(x.s, apply(size-lt,x.o))))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.exists(nand[and[size1,circle],blue], filter(filter(x.s, and[and[not[size3],size2],circle]), apply(same_size,x.o)))'	0:exists(%s, %s);4:nand[%s,%s];4:and[%s,%s];4:size1;4:circle;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size3;4:size2;4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(size1,iota(filter(x.s, apply(size-gt,x.o))))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.apply(or[and[size3,nand[rectangle,blue]],triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size3;4:nand[%s,%s];4:rectangle;4:blue;4:triangle;1:%s.o;2:x
'λx.apply(and[green,nand[size2,and[or[rectangle,nor[blue,green]],triangle]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:nand[%s,%s];4:size2;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:nor[%s,%s];4:blue;4:green;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(size-geq,iota(filter(x.s, yellow))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;1:%s.o;2:x
'λx.apply(implies[size3,apply(same_size,iota(x.s))],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(x.s, and[not[blue],yellow])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:blue;4:yellow
'λx.apply(triangle,iota(filter(x.s, nor[yellow,blue])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:yellow;4:blue
'λx.exists(or[size1,blue], filter(filter(filter(x.s, size1), rectangle), size1))'	0:exists(%s, %s);4:or[%s,%s];4:size1;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle;4:size1
'λx.contains(iota(filter(filter(filter(filter(x.s, nand[nor[apply(same_size,x.o),size3],apply(size-leq,iota(filter(x.s, not[and[not[blue],yellow]])))]), blue), triangle), yellow)), filter(filter(filter(x.s, or[nand[blue,size3],size2]), iff[circle,triangle]), and[rectangle,not[or[green,size1]]]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:not[%s];4:blue;4:yellow;4:blue;4:triangle;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:nand[%s,%s];4:blue;4:size3;4:size2;4:iff[%s,%s];4:circle;4:triangle;4:and[%s,%s];4:rectangle;4:not[%s];4:or[%s,%s];4:green;4:size1
'λx.forall(circle,filter(x.s, not[or[rectangle,not[and[not[blue],triangle]]]]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:rectangle;4:not[%s];4:and[%s,%s];4:not[%s];4:blue;4:triangle
'λx.apply(nor[triangle,blue],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:triangle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[rectangle,size1],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:rectangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(or[yellow,triangle],iota(filter(x.s, or[and[and[not[size1],circle],circle],circle])))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size1;4:circle;4:circle;4:circle
'λx.apply(and[and[blue,blue],apply(size-leq,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:blue;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[size1,size1],iota(filter(filter(filter(x.s, yellow), size1), and[green,yellow])))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;4:and[%s,%s];4:green;4:yellow
'λx.forall(apply(size-lt,x.o),filter(filter(filter(filter(x.s, apply(same_color,iota(x.s))), size2), not[size1]), apply(size-lt,x.o)))'	0:forall(%s,%s);4:apply(%s,%s);5:size-lt;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size2;4:not[%s];4:size1;4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.apply(or[nor[rectangle,not[size3]],circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:nor[%s,%s];4:rectangle;4:not[%s];4:size3;4:circle;1:%s.o;2:x
'λx.apply(iff[and[size3,apply(same_color,iota(x.s))],triangle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:triangle;1:%s.o;2:x
'λx.apply(and[apply(same_color,iota(x.s)),triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:triangle;1:%s.o;2:x
'λx.exists(not[nand[size3,and[yellow,apply(same_size,iota(x.s))]]], filter(filter(filter(filter(x.s, apply(same_shape,iota(filter(x.s, size2)))), circle), and[blue,and[apply(same_color,x.o),blue]]), rectangle))'	0:exists(%s, %s);4:not[%s];4:nand[%s,%s];4:size3;4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle;4:and[%s,%s];4:blue;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue;4:rectangle
'λx.apply(or[blue,and[iff[size3,blue],triangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:and[%s,%s];4:iff[%s,%s];4:size3;4:blue;4:triangle;1:%s.o;2:x
'λx.apply(triangle,iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(and[and[green,yellow],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:green;4:yellow;4:rectangle;1:%s.o;2:x
'λx.empty(filter(filter(x.s, circle), or[yellow,green]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:yellow;4:green
'λx.apply(or[triangle,blue],iota(filter(filter(x.s, blue), apply(same_color,iota(filter(filter(filter(x.s, size1), apply(size-gt,x.o)), apply(same_color,x.o)))))))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(or[iff[size1,size3],and[and[not[and[and[implies[not[yellow],size3],circle],circle]],yellow],size3]],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:or[%s,%s];4:iff[%s,%s];4:size1;4:size3;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:not[%s];4:yellow;4:size3;4:circle;4:circle;4:yellow;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.exists(apply(same_color,iota(filter(filter(x.s, and[not[circle],size1]), not[nor[green,iff[circle,size3]]]))), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:circle;4:size1;4:not[%s];4:nor[%s,%s];4:green;4:iff[%s,%s];4:circle;4:size3;3:%s.s;2:x
'λx.apply(size1,iota(filter(x.s, not[apply(size-gt,x.o)])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.apply(and[and[rectangle,triangle],triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:rectangle;4:triangle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(x.s, iff[size1,size2])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size1;4:size2
'λx.apply(yellow,iota(filter(filter(filter(x.s, yellow), and[circle,and[rectangle,triangle]]), or[and[and[triangle,and[apply(same_size,x.o),size3]],and[not[size3],yellow]],not[size2]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:circle;4:and[%s,%s];4:rectangle;4:triangle;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;4:and[%s,%s];4:not[%s];4:size3;4:yellow;4:not[%s];4:size2
'λx.apply(implies[triangle,size3],iota(filter(x.s, implies[size2,nor[rectangle,yellow]])))'	0:apply(%s,%s);4:implies[%s,%s];4:triangle;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size2;4:nor[%s,%s];4:rectangle;4:yellow
'λx.empty(filter(x.s, not[triangle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.apply(or[or[blue,and[size2,size2]],green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:blue;4:and[%s,%s];4:size2;4:size2;4:green;1:%s.o;2:x
'λx.apply(and[and[not[blue],size3],size3],iota(filter(filter(x.s, size2), or[size2,blue])))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:blue;4:size3;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:size2;4:blue
'λx.empty(filter(filter(x.s, and[rectangle,size1]), not[size2]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:size1;4:not[%s];4:size2
'λx.apply(blue,iota(filter(filter(filter(filter(filter(x.s, triangle), rectangle), not[size2]), rectangle), size3)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle;4:not[%s];4:size2;4:rectangle;4:size3
'λx.apply(or[rectangle,not[size2]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:not[%s];4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[blue,rectangle],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:blue;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[implies[triangle,green],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:triangle;4:green;4:blue;1:%s.o;2:x
'λx.apply(and[blue,circle],iota(filter(filter(x.s, not[nor[green,triangle]]), circle)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:nor[%s,%s];4:green;4:triangle;4:circle
'λx.apply(and[apply(same_color,x.o),not[green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:green;1:%s.o;2:x
'λx.apply(not[blue],iota(filter(filter(x.s, iff[size1,size2]), triangle)))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size1;4:size2;4:triangle
'λx.apply(yellow,iota(filter(x.s, and[blue,and[not[rectangle],and[rectangle,nor[and[size2,triangle],green]]]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:and[%s,%s];4:not[%s];4:rectangle;4:and[%s,%s];4:rectangle;4:nor[%s,%s];4:and[%s,%s];4:size2;4:triangle;4:green
'λx.apply(not[blue],iota(filter(filter(filter(x.s, size1), size3), triangle)))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size3;4:triangle
'λx.apply(and[blue,circle],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(nand[rectangle,nor[triangle,triangle]],iota(filter(filter(x.s, circle), size2)))'	0:apply(%s,%s);4:nand[%s,%s];4:rectangle;4:nor[%s,%s];4:triangle;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size2
'λx.apply(and[rectangle,or[or[size2,size3],apply(size-gt,iota(x.s))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:or[%s,%s];4:or[%s,%s];4:size2;4:size3;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, size3))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.contains(x.o, filter(x.s, size2))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.contains(x.o, filter(x.s, size1))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.contains(x.o, filter(x.s, green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(apply(same_shape,iota(filter(x.s, rectangle))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.exists(nor[rectangle,apply(size-leq,iota(x.s))], x.s)'	0:exists(%s, %s);4:nor[%s,%s];4:rectangle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.exists(implies[size1,not[or[green,nor[triangle,green]]]], x.s)'	0:exists(%s, %s);4:implies[%s,%s];4:size1;4:not[%s];4:or[%s,%s];4:green;4:nor[%s,%s];4:triangle;4:green;3:%s.s;2:x
'λx.apply(green,iota(filter(filter(x.s, apply(same_shape,x.o)), and[and[green,size2],or[circle,green]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:and[%s,%s];4:green;4:size2;4:or[%s,%s];4:circle;4:green
'λx.apply(nor[circle,triangle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:circle;4:triangle;1:%s.o;2:x
'λx.apply(nand[size3,circle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size3;4:circle;1:%s.o;2:x
'λx.apply(nor[nor[yellow,triangle],blue],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:nor[%s,%s];4:yellow;4:triangle;4:blue;1:%s.o;2:x
'λx.apply(nand[size2,circle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size2;4:circle;1:%s.o;2:x
'λx.apply(and[and[green,not[rectangle]],apply(same_shape,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:green;4:not[%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(not[size3],iota(filter(filter(filter(x.s, triangle), and[size2,size1]), or[and[and[circle,green],size3],size3])))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:size2;4:size1;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:green;4:size3;4:size3
'λx.apply(rectangle,iota(filter(filter(x.s, rectangle), triangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle
'λx.apply(or[and[rectangle,size1],yellow],iota(filter(filter(filter(x.s, size3), rectangle), and[size3,size1])))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:rectangle;4:size1;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle;4:and[%s,%s];4:size3;4:size1
'λx.forall(yellow,filter(x.s, rectangle))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[yellow,triangle],iota(filter(filter(filter(filter(filter(filter(x.s, not[rectangle]), rectangle), size2), size2), blue), not[yellow])))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;4:rectangle;4:size2;4:size2;4:blue;4:not[%s];4:yellow
'λx.apply(triangle,iota(filter(x.s, apply(same_size,iota(filter(filter(x.s, circle), and[triangle,triangle]))))))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:triangle;4:triangle
'λx.empty(filter(filter(x.s, triangle), nor[not[apply(same_size,iota(x.s))],size1]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:nor[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size1
'λx.exists(apply(same_color,iota(filter(x.s, circle))), filter(x.s, apply(same_size,x.o)))'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(filter(x.s, circle), blue), yellow)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue;4:yellow
'λx.apply(and[size1,not[size3]],iota(filter(filter(filter(x.s, size1), triangle), rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle;4:rectangle
'λx.apply(not[or[triangle,size3]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:triangle;4:size3;1:%s.o;2:x
'λx.apply(and[or[circle,size1],apply(size-lt,iota(x.s))],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:circle;4:size1;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[blue,not[rectangle]],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:blue;4:not[%s];4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size3,triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:triangle;1:%s.o;2:x
'λx.apply(or[size1,triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:triangle;1:%s.o;2:x
'λx.apply(and[rectangle,circle],iota(filter(x.s, and[not[circle],blue])))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:circle;4:blue
'λx.apply(blue,iota(filter(x.s, implies[triangle,yellow])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:triangle;4:yellow
'λx.apply(triangle,iota(filter(x.s, and[circle,triangle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:triangle
'λx.apply(rectangle,iota(filter(filter(x.s, or[green,apply(same_shape,x.o)]), not[size2])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:size2
'λx.apply(nand[and[green,and[apply(same_shape,x.o),and[or[and[implies[triangle,nor[size2,apply(same_size,iota(x.s))]],rectangle],circle],triangle]]],size1],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:triangle;4:nor[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:rectangle;4:circle;4:triangle;4:size1;1:%s.o;2:x
'λx.exists(and[and[circle,size1],rectangle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:circle;4:size1;4:rectangle;3:%s.s;2:x
'λx.contains(iota(filter(x.s, triangle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;3:%s.s;2:x
'λx.forall(and[blue,and[size2,or[circle,size1]]],filter(filter(filter(x.s, not[green]), triangle), yellow))'	0:forall(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:size2;4:or[%s,%s];4:circle;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:triangle;4:yellow
'λx.apply(not[nand[triangle,yellow]],x.o)'	0:apply(%s,%s);4:not[%s];4:nand[%s,%s];4:triangle;4:yellow;1:%s.o;2:x
'λx.apply(nand[size3,not[and[nand[implies[green,size1],circle],apply(same_size,iota(x.s))]]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size3;4:not[%s];4:and[%s,%s];4:nand[%s,%s];4:implies[%s,%s];4:green;4:size1;4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(and[apply(size-leq,x.o),apply(same_shape,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[apply(same_size,x.o),and[green,size3]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:green;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(or[nor[and[triangle,rectangle],blue],and[green,green]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:triangle;4:rectangle;4:blue;4:and[%s,%s];4:green;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(or[apply(same_shape,iota(filter(filter(x.s, size2), apply(same_color,iota(filter(filter(filter(x.s, not[blue]), size2), size1)))))),size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:size2;4:size1;4:size3;1:%s.o;2:x
'λx.apply(and[rectangle,not[not[or[rectangle,not[and[size2,and[and[size1,yellow],yellow]]]]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:not[%s];4:not[%s];4:or[%s,%s];4:rectangle;4:not[%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:size1;4:yellow;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(filter(filter(x.s, size2), circle), size3), size2)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle;4:size3;4:size2
'λx.apply(nand[apply(same_shape,iota(filter(x.s, and[and[size3,blue],apply(same_shape,iota(filter(x.s, nor[size1,yellow])))]))),blue],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size3;4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size1;4:yellow;4:blue;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(filter(x.s, yellow), rectangle), and[circle,rectangle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle;4:and[%s,%s];4:circle;4:rectangle
'λx.apply(nor[and[circle,circle],green],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:circle;4:circle;4:green;1:%s.o;2:x
'λx.apply(or[circle,or[green,not[or[or[rectangle,and[yellow,green]],size1]]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:or[%s,%s];4:green;4:not[%s];4:or[%s,%s];4:or[%s,%s];4:rectangle;4:and[%s,%s];4:yellow;4:green;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_shape,x.o),iota(filter(filter(filter(filter(filter(filter(filter(filter(filter(x.s, yellow), rectangle), iff[and[nor[and[or[size2,size2],yellow],and[size3,or[triangle,nor[and[yellow,nor[circle,circle]],green]]]],rectangle],size2]), circle), size1), blue), apply(same_shape,iota(x.s))), size1), size1)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle;4:iff[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size2;4:size2;4:yellow;4:and[%s,%s];4:size3;4:or[%s,%s];4:triangle;4:nor[%s,%s];4:and[%s,%s];4:yellow;4:nor[%s,%s];4:circle;4:circle;4:green;4:rectangle;4:size2;4:circle;4:size1;4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size1;4:size1
'λx.apply(triangle,iota(filter(filter(filter(filter(filter(filter(filter(x.s, size2), and[size2,and[blue,size1]]), green), and[and[and[green,size1],size2],size2]), and[and[not[size3],rectangle],and[triangle,circle]]), or[apply(same_shape,x.o),apply(same_shape,x.o)]), not[nand[apply(same_shape,x.o),yellow]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:size2;4:and[%s,%s];4:blue;4:size1;4:green;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:size1;4:size2;4:size2;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size3;4:rectangle;4:and[%s,%s];4:triangle;4:circle;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow
'λx.apply(green,iota(filter(x.s, and[circle,size3])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size3
'λx.forall(and[or[and[green,and[not[not[green]],size1]],and[blue,green]],size2],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:not[%s];4:not[%s];4:green;4:size1;4:and[%s,%s];4:blue;4:green;4:size2;3:%s.s;2:x
'λx.apply(or[green,rectangle],iota(filter(filter(x.s, rectangle), apply(same_size,x.o))))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, triangle), rectangle), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle;4:circle
'λx.exists(apply(size-lt,x.o), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:size-lt;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(and[apply(same_color,x.o),apply(same_shape,iota(filter(filter(x.s, size2), blue)))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue;1:%s.o;2:x
'λx.apply(and[apply(same_size,x.o),and[size3,apply(same_color,x.o)]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.contains(iota(filter(x.s, green)), filter(filter(x.s, apply(size-geq,x.o)), circle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:circle
'λx.exists(or[or[blue,or[apply(same_size,iota(filter(x.s, apply(same_color,x.o)))),yellow]],size1], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:or[%s,%s];4:blue;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;4:size1;3:%s.s;2:x
'λx.apply(implies[size1,and[circle,triangle]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size1;4:and[%s,%s];4:circle;4:triangle;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, yellow), triangle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle
'λx.forall(apply(same_color,x.o),filter(filter(filter(x.s, circle), triangle), green))'	0:forall(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle;4:green
'λx.apply(and[yellow,rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:rectangle;1:%s.o;2:x
'λx.apply(or[and[and[green,size3],triangle],and[not[rectangle],size1]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:size3;4:triangle;4:and[%s,%s];4:not[%s];4:rectangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(or[triangle,size2],iota(filter(filter(x.s, rectangle), apply(same_shape,iota(x.s)))))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(and[not[blue],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:blue;4:yellow;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(x.s, implies[blue,size1]), circle), size3)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:blue;4:size1;4:circle;4:size3;3:%s.s;2:x
'λx.apply(nand[and[green,blue],not[blue]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:green;4:blue;4:not[%s];4:blue;1:%s.o;2:x
'λx.forall(circle,filter(filter(filter(x.s, apply(size-leq,x.o)), green), green))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:green;4:green
'λx.apply(circle,iota(filter(filter(x.s, or[size3,yellow]), triangle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:yellow;4:triangle
'λx.contains(x.o, filter(x.s, not[circle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.apply(apply(same_shape,iota(filter(filter(x.s, apply(same_size,iota(x.s))), size3))),iota(filter(filter(filter(filter(filter(x.s, size1), green), blue), not[triangle]), not[size1])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green;4:blue;4:not[%s];4:triangle;4:not[%s];4:size1
'λx.apply(iff[size2,apply(same_shape,iota(x.s))],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(filter(x.s, and[rectangle,circle]), size2), size1)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:circle;4:size2;4:size1
'λx.exists(green, filter(filter(x.s, size3), nand[circle,iff[circle,yellow]]))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:nand[%s,%s];4:circle;4:iff[%s,%s];4:circle;4:yellow
'λx.apply(nand[circle,size1],iota(filter(x.s, and[rectangle,implies[blue,and[triangle,size1]]])))'	0:apply(%s,%s);4:nand[%s,%s];4:circle;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:implies[%s,%s];4:blue;4:and[%s,%s];4:triangle;4:size1
'λx.apply(size1,iota(filter(filter(filter(filter(filter(filter(x.s, size3), blue), apply(size-lt,x.o)), yellow), rectangle), size3)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:yellow;4:rectangle;4:size3
'λx.apply(size1,iota(filter(x.s, implies[size2,size2])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size2;4:size2
'λx.apply(nand[blue,blue],iota(filter(x.s, apply(same_shape,x.o))))'	0:apply(%s,%s);4:nand[%s,%s];4:blue;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.exists(and[yellow,rectangle], filter(x.s, not[blue]))'	0:exists(%s, %s);4:and[%s,%s];4:yellow;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.apply(nor[blue,and[triangle,apply(same_shape,iota(x.s))]],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:blue;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.forall(size1,filter(filter(filter(x.s, size2), yellow), and[and[yellow,rectangle],or[and[yellow,and[implies[triangle,or[iff[and[apply(size-gt,x.o),nor[size1,not[circle]]],and[blue,not[or[implies[not[blue],circle],size1]]]],and[and[size2,nand[apply(same_color,x.o),triangle]],size1]]],green]],apply(same_color,x.o)]]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:yellow;4:and[%s,%s];4:and[%s,%s];4:yellow;4:rectangle;4:or[%s,%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:implies[%s,%s];4:triangle;4:or[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:nor[%s,%s];4:size1;4:not[%s];4:circle;4:and[%s,%s];4:blue;4:not[%s];4:or[%s,%s];4:implies[%s,%s];4:not[%s];4:blue;4:circle;4:size1;4:and[%s,%s];4:and[%s,%s];4:size2;4:nand[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;4:size1;4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(and[circle,and[triangle,rectangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:and[%s,%s];4:triangle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(x.s, nand[size1,rectangle]), yellow)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size1;4:rectangle;4:yellow
'λx.apply(and[and[rectangle,size2],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size2;4:triangle;1:%s.o;2:x
'λx.empty(filter(filter(x.s, triangle), not[blue]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:not[%s];4:blue
'λx.apply(and[triangle,not[not[circle]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:not[%s];4:not[%s];4:circle;1:%s.o;2:x
'λx.forall(blue,filter(x.s, blue))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(size2,iota(filter(filter(filter(x.s, rectangle), blue), or[and[triangle,nand[size1,rectangle]],green])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue;4:or[%s,%s];4:and[%s,%s];4:triangle;4:nand[%s,%s];4:size1;4:rectangle;4:green
'λx.apply(or[apply(same_color,x.o),and[blue,green]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:blue;4:green;1:%s.o;2:x
'λx.apply(apply(size-lt,iota(filter(filter(x.s, green), green))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:green;1:%s.o;2:x
'λx.forall(not[apply(same_color,x.o)],filter(filter(x.s, rectangle), green))'	0:forall(%s,%s);4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green
'λx.apply(yellow,iota(filter(filter(filter(x.s, blue), size2), and[apply(same_shape,x.o),green])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green
'λx.apply(or[nand[or[blue,and[size3,blue]],circle],size1],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:blue;4:and[%s,%s];4:size3;4:blue;4:circle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(not[nand[or[rectangle,triangle],triangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:nand[%s,%s];4:or[%s,%s];4:rectangle;4:triangle;4:triangle;1:%s.o;2:x
'λx.apply(and[and[not[yellow],circle],or[size3,rectangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:yellow;4:circle;4:or[%s,%s];4:size3;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.exists(rectangle, filter(filter(filter(x.s, size1), size1), rectangle))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1;4:rectangle
'λx.apply(and[circle,apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(or[rectangle,apply(same_size,x.o)],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[triangle,size2],iota(filter(x.s, apply(same_size,x.o))))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(filter(filter(x.s, nand[iff[circle,rectangle],blue]), not[and[blue,rectangle]]), size1), not[size1])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:iff[%s,%s];4:circle;4:rectangle;4:blue;4:not[%s];4:and[%s,%s];4:blue;4:rectangle;4:size1;4:not[%s];4:size1
'λx.apply(and[iff[not[not[blue]],apply(same_size,iota(x.s))],apply(size-gt,x.o)],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:not[%s];4:not[%s];4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size2,yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size1,yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size3,yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[yellow,green],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:yellow;4:green;1:%s.o;2:x
'λx.apply(nand[triangle,green],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:green;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(filter(x.s, or[and[circle,rectangle],rectangle]), yellow), or[rectangle,yellow]), size3), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:circle;4:rectangle;4:rectangle;4:yellow;4:or[%s,%s];4:rectangle;4:yellow;4:size3;4:size1
'λx.empty(filter(x.s, and[blue,apply(same_color,iota(x.s))]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.forall(and[not[blue],or[rectangle,rectangle]],filter(x.s, yellow))'	0:forall(%s,%s);4:and[%s,%s];4:not[%s];4:blue;4:or[%s,%s];4:rectangle;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(blue,iota(filter(x.s, apply(same_size,iota(filter(x.s, triangle))))))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(yellow,iota(filter(filter(x.s, green), nand[rectangle,triangle])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:nand[%s,%s];4:rectangle;4:triangle
'λx.apply(apply(same_shape,x.o),iota(filter(filter(x.s, and[size1,circle]), size2)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:circle;4:size2
'λx.apply(not[not[and[size2,rectangle]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:and[%s,%s];4:size2;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[or[green,blue],and[rectangle,or[and[apply(same_color,iota(x.s)),or[green,green]],blue]]],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:or[%s,%s];4:green;4:blue;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:green;4:green;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_size,iota(filter(filter(x.s, blue), and[triangle,yellow]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:triangle;4:yellow;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.contains(x.o, filter(filter(filter(x.s, green), or[not[apply(same_size,iota(x.s))],rectangle]), blue))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:rectangle;4:blue
'λx.apply(implies[green,and[yellow,yellow]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:green;4:and[%s,%s];4:yellow;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(filter(filter(filter(x.s, yellow), size3), implies[rectangle,yellow]), size3), size3)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size3;4:implies[%s,%s];4:rectangle;4:yellow;4:size3;4:size3
'λx.apply(yellow,iota(filter(filter(filter(x.s, yellow), size2), rectangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2;4:rectangle
'λx.apply(and[blue,and[green,size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:green;4:size1;1:%s.o;2:x
'λx.apply(implies[green,and[green,green]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:green;4:and[%s,%s];4:green;4:green;1:%s.o;2:x
'λx.apply(and[circle,nand[nand[size3,size2],and[and[rectangle,size1],blue]]],iota(filter(filter(filter(filter(filter(filter(x.s, yellow), or[green,rectangle]), not[implies[nor[yellow,or[not[triangle],size3]],size1]]), and[or[rectangle,and[nand[not[rectangle],and[yellow,size1]],circle]],apply(same_shape,x.o)]), circle), not[rectangle])))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:nand[%s,%s];4:nand[%s,%s];4:size3;4:size2;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size1;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:green;4:rectangle;4:not[%s];4:implies[%s,%s];4:nor[%s,%s];4:yellow;4:or[%s,%s];4:not[%s];4:triangle;4:size3;4:size1;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:and[%s,%s];4:nand[%s,%s];4:not[%s];4:rectangle;4:and[%s,%s];4:yellow;4:size1;4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;4:not[%s];4:rectangle
'λx.exists(or[and[size2,and[size3,green]],and[and[not[size3],size1],size1]], filter(filter(x.s, nand[not[or[size1,iff[triangle,triangle]]],apply(size-gt,iota(filter(filter(filter(filter(filter(filter(x.s, or[triangle,size3]), not[apply(same_color,x.o)]), yellow), triangle), or[apply(size-lt,x.o),or[green,not[triangle]]]), green)))]), green))'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:size3;4:green;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size3;4:size1;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:not[%s];4:or[%s,%s];4:size1;4:iff[%s,%s];4:triangle;4:triangle;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:size3;4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;4:triangle;4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:or[%s,%s];4:green;4:not[%s];4:triangle;4:green;4:green
'λx.apply(not[implies[nand[nand[circle,apply(same_size,iota(x.s))],size2],nor[and[blue,triangle],circle]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:implies[%s,%s];4:nand[%s,%s];4:nand[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size2;4:nor[%s,%s];4:and[%s,%s];4:blue;4:triangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[and[green,yellow],triangle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:green;4:yellow;4:triangle;1:%s.o;2:x
'λx.apply(and[size1,and[triangle,circle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:and[%s,%s];4:triangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.forall(not[and[blue,yellow]],x.s)'	0:forall(%s,%s);4:not[%s];4:and[%s,%s];4:blue;4:yellow;3:%s.s;2:x
'λx.apply(and[apply(same_color,x.o),not[rectangle]],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.contains(iota(filter(x.s, and[implies[or[size3,size1],size3],size3])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:size3;4:size1;4:size3;4:size3;3:%s.s;2:x
'λx.exists(blue, filter(filter(filter(filter(x.s, blue), or[not[and[triangle,size3]],circle]), and[apply(size-geq,x.o),size1]), or[size2,apply(same_shape,x.o)]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:triangle;4:size3;4:circle;4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:size1;4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(size3,iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(size2,iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(size1,iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(or[yellow,size2],iota(filter(filter(x.s, or[and[triangle,yellow],size1]), rectangle)))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:triangle;4:yellow;4:size1;4:rectangle
'λx.empty(filter(filter(filter(filter(filter(x.s, size3), and[size2,not[size1]]), or[and[rectangle,green],size1]), apply(same_color,iota(filter(x.s, triangle)))), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:size2;4:not[%s];4:size1;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:green;4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size1
'λx.apply(size1,iota(filter(x.s, iff[rectangle,or[or[apply(same_color,x.o),or[blue,rectangle]],nand[nor[implies[rectangle,and[apply(same_color,x.o),blue]],size3],green]]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:rectangle;4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:or[%s,%s];4:blue;4:rectangle;4:nand[%s,%s];4:nor[%s,%s];4:implies[%s,%s];4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue;4:size3;4:green
'λx.apply(or[size2,apply(size-geq,x.o)],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.forall(size3,filter(x.s, or[size2,rectangle]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:rectangle
'λx.apply(not[and[size2,and[and[nand[green,yellow],rectangle],yellow]]],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:green;4:yellow;4:rectangle;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[circle,and[size1,apply(same_color,x.o)]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(or[and[apply(same_shape,iota(filter(filter(x.s, yellow), apply(same_color,x.o)))),green],apply(same_size,x.o)],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(x.s, not[triangle]), blue))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:blue
'λx.forall(apply(same_color,x.o),filter(filter(filter(filter(filter(x.s, nor[or[or[green,size1],size1],and[and[green,triangle],rectangle]]), apply(same_size,x.o)), or[implies[and[size3,nand[and[green,and[and[green,apply(size-lt,x.o)],apply(size-geq,x.o)]],green]],and[apply(same_color,iota(x.s)),yellow]],green]), yellow), or[apply(size-leq,x.o),size2]))'	0:forall(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:or[%s,%s];4:or[%s,%s];4:green;4:size1;4:size1;4:and[%s,%s];4:and[%s,%s];4:green;4:triangle;4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:size3;4:nand[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:green;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:green;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:yellow;4:green;4:yellow;4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size2
'λx.apply(and[or[circle,iff[size1,circle]],rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:circle;4:iff[%s,%s];4:size1;4:circle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[and[or[yellow,size1],blue],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:yellow;4:size1;4:blue;4:blue;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(filter(filter(filter(x.s, blue), apply(size-leq,x.o)), rectangle), yellow), rectangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:rectangle;4:yellow;4:rectangle
'λx.apply(rectangle,iota(filter(filter(filter(filter(x.s, size2), rectangle), or[apply(size-gt,x.o),green]), size2)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle;4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:green;4:size2
'λx.exists(and[size3,and[size2,blue]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:size3;4:and[%s,%s];4:size2;4:blue;3:%s.s;2:x
'λx.apply(blue,iota(filter(x.s, not[circle])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.apply(or[and[size2,blue],green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size2;4:blue;4:green;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, and[yellow,apply(same_shape,x.o)])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(apply(size-lt,iota(filter(x.s, circle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;1:%s.o;2:x
'λx.apply(iff[not[and[size1,circle]],circle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:not[%s];4:and[%s,%s];4:size1;4:circle;4:circle;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, apply(same_size,iota(x.s)))))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(and[yellow,size1],iota(filter(filter(x.s, green), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue
'λx.apply(blue,iota(filter(filter(x.s, or[rectangle,size1]), not[nand[blue,triangle]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:size1;4:not[%s];4:nand[%s,%s];4:blue;4:triangle
'λx.contains(iota(filter(filter(x.s, blue), blue)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue;3:%s.s;2:x
'λx.exists(rectangle, filter(x.s, rectangle))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[not[and[not[and[blue,or[yellow,blue]]],or[blue,and[size1,nand[apply(size-gt,iota(filter(x.s, apply(same_shape,iota(x.s))))),rectangle]]]]],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:blue;4:or[%s,%s];4:yellow;4:blue;4:or[%s,%s];4:blue;4:and[%s,%s];4:size1;4:nand[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:rectangle;4:size2;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, implies[implies[and[size1,or[and[blue,or[rectangle,triangle]],and[not[yellow],apply(same_color,x.o)]]],blue],size1]), and[size2,circle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:and[%s,%s];4:blue;4:or[%s,%s];4:rectangle;4:triangle;4:and[%s,%s];4:not[%s];4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue;4:size1;4:and[%s,%s];4:size2;4:circle
'λx.apply(and[blue,size1],iota(filter(filter(x.s, apply(size-gt,x.o)), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:blue
'λx.apply(and[nand[rectangle,apply(same_shape,x.o)],not[yellow]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[yellow,yellow],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:yellow;4:yellow;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(filter(x.s, rectangle), triangle), not[triangle])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle;4:not[%s];4:triangle
'λx.apply(and[nor[iff[nor[and[green,apply(same_shape,x.o)],size3],blue],size3],rectangle],iota(filter(filter(filter(x.s, and[circle,or[and[circle,and[rectangle,blue]],blue]]), size1), rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:iff[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3;4:blue;4:size3;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:or[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:rectangle;4:blue;4:blue;4:size1;4:rectangle
'λx.apply(and[rectangle,apply(same_color,iota(filter(filter(x.s, size1), triangle)))],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.exists(iff[or[nor[size1,rectangle],blue],blue], filter(x.s, or[rectangle,green]))'	0:exists(%s, %s);4:iff[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:size1;4:rectangle;4:blue;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:green
'λx.apply(or[yellow,green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:green;1:%s.o;2:x
'λx.apply(nand[size1,nor[blue,blue]],iota(filter(filter(x.s, green), not[size2])))'	0:apply(%s,%s);4:nand[%s,%s];4:size1;4:nor[%s,%s];4:blue;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:size2
'λx.apply(and[circle,not[circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:not[%s];4:circle;1:%s.o;2:x
'λx.forall(apply(same_size,iota(x.s)),filter(filter(x.s, and[and[size1,and[or[rectangle,not[iff[and[iff[green,rectangle],size1],size3]]],triangle]],size3]), not[size1]))'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:not[%s];4:iff[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:green;4:rectangle;4:size1;4:size3;4:triangle;4:size3;4:not[%s];4:size1
'λx.apply(and[or[apply(same_color,iota(x.s)),implies[circle,size3]],yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:implies[%s,%s];4:circle;4:size3;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(x.s, or[and[rectangle,size1],triangle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:size1;4:triangle
'λx.apply(iff[size1,nor[yellow,not[yellow]]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:size1;4:nor[%s,%s];4:yellow;4:not[%s];4:yellow;1:%s.o;2:x
'λx.exists(or[size3,triangle], filter(x.s, apply(same_size,x.o)))'	0:exists(%s, %s);4:or[%s,%s];4:size3;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(and[not[iff[size1,size3]],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:iff[%s,%s];4:size1;4:size3;4:size3;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(filter(x.s, not[not[or[blue,size1]]]), green), yellow)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:or[%s,%s];4:blue;4:size1;4:green;4:yellow
'λx.apply(nor[not[apply(same_color,x.o)],yellow],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, and[and[circle,size1],apply(same_size,iota(filter(x.s, size2)))])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:circle;4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.exists(size2, filter(filter(filter(filter(x.s, apply(same_size,iota(filter(filter(x.s, yellow), not[triangle])))), green), size3), size1))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:triangle;4:green;4:size3;4:size1
'λx.exists(and[circle,circle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:circle;4:circle;3:%s.s;2:x
'λx.forall(green,filter(x.s, not[rectangle]))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle
'λx.apply(size2,iota(filter(filter(filter(x.s, triangle), nor[yellow,and[triangle,or[yellow,size1]]]), size1)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:nor[%s,%s];4:yellow;4:and[%s,%s];4:triangle;4:or[%s,%s];4:yellow;4:size1;4:size1
'λx.contains(iota(x.s), filter(filter(filter(x.s, size3), not[and[not[blue],size2]]), yellow))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:and[%s,%s];4:not[%s];4:blue;4:size2;4:yellow
'λx.apply(size3,iota(filter(filter(x.s, size3), or[apply(same_size,iota(filter(filter(x.s, triangle), and[nand[circle,size1],triangle]))),rectangle])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:nand[%s,%s];4:circle;4:size1;4:triangle;4:rectangle
'λx.apply(and[not[or[and[size1,nor[blue,size1]],iff[not[yellow],and[and[and[size2,triangle],circle],yellow]]]],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:or[%s,%s];4:and[%s,%s];4:size1;4:nor[%s,%s];4:blue;4:size1;4:iff[%s,%s];4:not[%s];4:yellow;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:triangle;4:circle;4:yellow;4:green;1:%s.o;2:x
'λx.apply(or[and[yellow,yellow],apply(same_shape,iota(filter(filter(x.s, size1), not[triangle])))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:yellow;4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:not[%s];4:triangle;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(filter(filter(filter(filter(x.s, and[not[circle],blue]), green), circle), circle), not[size1]), size3)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:circle;4:blue;4:green;4:circle;4:circle;4:not[%s];4:size1;4:size3
'λx.exists(size1, filter(x.s, implies[or[or[yellow,size3],size1],iff[green,size1]]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:or[%s,%s];4:or[%s,%s];4:yellow;4:size3;4:size1;4:iff[%s,%s];4:green;4:size1
'λx.contains(x.o, filter(filter(x.s, green), or[size1,circle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:size1;4:circle
'λx.apply(or[and[triangle,and[green,size1]],size1],iota(filter(filter(x.s, or[and[apply(same_color,iota(x.s)),not[green]],circle]), circle)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:green;4:size1;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:not[%s];4:green;4:circle;4:circle
'λx.apply(not[apply(same_color,iota(filter(x.s, size1)))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;1:%s.o;2:x
'λx.apply(apply(same_shape,x.o),iota(filter(filter(filter(filter(x.s, size3), and[rectangle,and[or[triangle,rectangle],implies[and[blue,size3],or[green,blue]]]]), green), triangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:or[%s,%s];4:triangle;4:rectangle;4:implies[%s,%s];4:and[%s,%s];4:blue;4:size3;4:or[%s,%s];4:green;4:blue;4:green;4:triangle
'λx.apply(iff[circle,not[size2]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:circle;4:not[%s];4:size2;1:%s.o;2:x
'λx.apply(implies[size3,and[yellow,and[or[size2,or[yellow,size1]],rectangle]]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size3;4:and[%s,%s];4:yellow;4:and[%s,%s];4:or[%s,%s];4:size2;4:or[%s,%s];4:yellow;4:size1;4:rectangle;1:%s.o;2:x
'λx.apply(apply(same_color,iota(filter(filter(x.s, triangle), triangle))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.exists(apply(same_color,iota(filter(filter(x.s, and[and[not[rectangle],implies[implies[green,size1],yellow]],green]), green))), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:rectangle;4:implies[%s,%s];4:implies[%s,%s];4:green;4:size1;4:yellow;4:green;4:green;3:%s.s;2:x
'λx.contains(x.o, filter(x.s, or[yellow,or[iff[yellow,and[apply(size-leq,iota(filter(filter(x.s, circle), blue))),apply(same_shape,iota(x.s))]],or[green,triangle]]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:or[%s,%s];4:iff[%s,%s];4:yellow;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:green;4:triangle
'λx.forall(triangle,filter(x.s, implies[apply(same_shape,iota(x.s)),blue]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:blue
'λx.apply(size2,iota(filter(filter(filter(filter(filter(x.s, triangle), apply(same_color,iota(x.s))), blue), blue), circle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:blue;4:blue;4:circle
'λx.forall(rectangle,filter(filter(x.s, green), blue))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue
'λx.apply(blue,iota(filter(x.s, and[size1,green])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:green
'λx.forall(size2,filter(filter(filter(filter(filter(x.s, rectangle), or[yellow,apply(size-geq,iota(x.s))]), yellow), size1), rectangle))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:or[%s,%s];4:yellow;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:yellow;4:size1;4:rectangle
'λx.apply(blue,iota(filter(filter(filter(filter(x.s, size3), triangle), not[apply(same_size,iota(x.s))]), blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle;4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:blue
'λx.contains(x.o, filter(filter(filter(filter(x.s, size2), yellow), rectangle), apply(same_shape,x.o)))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:yellow;4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(and[triangle,not[yellow]],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.contains(iota(filter(filter(filter(filter(x.s, iff[size1,rectangle]), implies[not[green],yellow]), and[size1,apply(same_size,x.o)]), size3)), filter(x.s, yellow))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size1;4:rectangle;4:implies[%s,%s];4:not[%s];4:green;4:yellow;4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.exists(and[circle,green], filter(x.s, and[circle,nand[circle,rectangle]]))'	0:exists(%s, %s);4:and[%s,%s];4:circle;4:green;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:nand[%s,%s];4:circle;4:rectangle
'λx.exists(and[not[size1],blue], filter(filter(x.s, or[yellow,size1]), apply(same_color,x.o)))'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:size1;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.exists(apply(same_color,iota(filter(x.s, circle))), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;3:%s.s;2:x
'λx.apply(apply(size-leq,iota(filter(filter(filter(filter(x.s, triangle), size2), triangle), or[and[not[circle],size2],and[size2,size2]]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2;4:triangle;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:circle;4:size2;4:and[%s,%s];4:size2;4:size2;1:%s.o;2:x
'λx.empty(filter(x.s, triangle))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(size3,iota(filter(filter(filter(filter(filter(filter(filter(x.s, or[rectangle,and[or[not[size1],green],or[blue,and[and[size1,circle],implies[blue,yellow]]]]]), implies[yellow,size3]), size2), green), green), rectangle), or[rectangle,green])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:size1;4:green;4:or[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:size1;4:circle;4:implies[%s,%s];4:blue;4:yellow;4:implies[%s,%s];4:yellow;4:size3;4:size2;4:green;4:green;4:rectangle;4:or[%s,%s];4:rectangle;4:green
'λx.empty(filter(filter(filter(x.s, green), size1), apply(same_color,iota(filter(x.s, nand[size3,and[and[size2,circle],blue]])))))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:size2;4:circle;4:blue
'λx.apply(apply(same_color,x.o),iota(filter(x.s, apply(same_shape,x.o))))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(iff[blue,nor[yellow,or[nor[blue,nor[not[rectangle],circle]],yellow]]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:blue;4:nor[%s,%s];4:yellow;4:or[%s,%s];4:nor[%s,%s];4:blue;4:nor[%s,%s];4:not[%s];4:rectangle;4:circle;4:yellow;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, not[implies[implies[nand[not[or[not[not[triangle]],not[and[circle,circle]]]],and[green,green]],size1],apply(same_shape,x.o)]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:implies[%s,%s];4:implies[%s,%s];4:nand[%s,%s];4:not[%s];4:or[%s,%s];4:not[%s];4:not[%s];4:triangle;4:not[%s];4:and[%s,%s];4:circle;4:circle;4:and[%s,%s];4:green;4:green;4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(x.s, not[and[rectangle,size1]]), and[apply(same_size,iota(filter(x.s, blue))),rectangle]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:rectangle;4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle
'λx.apply(and[green,and[nand[green,size3],apply(same_shape,x.o)]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:nand[%s,%s];4:green;4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(not[or[size2,yellow]],iota(filter(filter(x.s, triangle), triangle)))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:size2;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:triangle
'λx.apply(apply(same_color,iota(filter(filter(x.s, rectangle), and[size2,yellow]))),iota(filter(x.s, green)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:size2;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.contains(iota(x.s), filter(filter(filter(x.s, green), size2), size1))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size2;4:size1
'λx.contains(x.o, filter(filter(x.s, rectangle), triangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle
'λx.forall(apply(same_size,x.o),filter(x.s, blue))'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(iff[apply(same_color,x.o),size2],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size2;1:%s.o;2:x
'λx.apply(nand[rectangle,size1],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:rectangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[circle,rectangle],iota(filter(x.s, nand[size3,circle])))'	0:apply(%s,%s);4:implies[%s,%s];4:circle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size3;4:circle
'λx.apply(and[and[green,nand[not[triangle],green]],nor[size2,not[and[not[size3],green]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:green;4:nand[%s,%s];4:not[%s];4:triangle;4:green;4:nor[%s,%s];4:size2;4:not[%s];4:and[%s,%s];4:not[%s];4:size3;4:green;1:%s.o;2:x
'λx.apply(and[size3,iff[rectangle,blue]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:iff[%s,%s];4:rectangle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, and[and[not[size1],green],size1]), rectangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size1;4:green;4:size1;4:rectangle
'λx.contains(iota(x.s), filter(x.s, blue))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(nor[nor[and[and[and[triangle,size2],rectangle],size1],size3],or[and[or[apply(same_color,x.o),not[blue]],rectangle],circle]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:size2;4:rectangle;4:size1;4:size3;4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:blue;4:rectangle;4:circle;1:%s.o;2:x
'λx.apply(apply(same_color,iota(filter(filter(x.s, and[yellow,size2]), and[size3,not[triangle]]))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size2;4:and[%s,%s];4:size3;4:not[%s];4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[or[blue,rectangle],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:blue;4:rectangle;4:yellow;1:%s.o;2:x
'λx.exists(triangle, filter(x.s, or[circle,and[and[blue,circle],rectangle]]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:blue;4:circle;4:rectangle
'λx.apply(size3,iota(filter(x.s, and[apply(same_shape,iota(filter(x.s, yellow))),and[apply(size-lt,iota(x.s)),and[implies[and[size1,and[green,size2]],yellow],green]]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:green;4:size2;4:yellow;4:green
'λx.apply(and[or[circle,and[or[blue,circle],not[not[or[iff[size2,green],or[blue,and[and[not[yellow],circle],green]]]]]]],not[or[green,triangle]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:circle;4:and[%s,%s];4:or[%s,%s];4:blue;4:circle;4:not[%s];4:not[%s];4:or[%s,%s];4:iff[%s,%s];4:size2;4:green;4:or[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:yellow;4:circle;4:green;4:not[%s];4:or[%s,%s];4:green;4:triangle;1:%s.o;2:x
'λx.exists(iff[nor[circle,yellow],and[green,size1]], filter(x.s, apply(size-lt,x.o)))'	0:exists(%s, %s);4:iff[%s,%s];4:nor[%s,%s];4:circle;4:yellow;4:and[%s,%s];4:green;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.apply(not[green],iota(filter(x.s, and[apply(same_color,x.o),size2])))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size2
'λx.forall(circle,filter(x.s, nor[nand[apply(same_color,x.o),yellow],green]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:nand[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;4:green
'λx.apply(triangle,iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.contains(iota(filter(x.s, and[green,and[rectangle,or[blue,or[triangle,rectangle]]]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:blue;4:or[%s,%s];4:triangle;4:rectangle;3:%s.s;2:x
'λx.apply(nand[and[rectangle,circle],yellow],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:rectangle;4:circle;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.exists(and[circle,triangle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:circle;4:triangle;3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(x.s, not[or[rectangle,or[not[apply(same_size,iota(filter(x.s, or[yellow,yellow])))],circle]]]), not[and[size1,green]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:rectangle;4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:yellow;4:circle;4:not[%s];4:and[%s,%s];4:size1;4:green
'λx.apply(iff[size3,yellow],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:size3;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(or[and[and[and[green,size3],green],circle],size2],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:size3;4:green;4:circle;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(size3,iota(filter(filter(x.s, or[circle,blue]), green)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:blue;4:green
'λx.apply(not[not[apply(same_color,x.o)]],iota(filter(filter(x.s, green), nand[size2,or[implies[not[green],and[not[and[and[size2,not[not[or[circle,and[circle,not[apply(same_color,x.o)]]]]]],and[yellow,triangle]]],not[size2]]],size3]])))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:nand[%s,%s];4:size2;4:or[%s,%s];4:implies[%s,%s];4:not[%s];4:green;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:not[%s];4:not[%s];4:or[%s,%s];4:circle;4:and[%s,%s];4:circle;4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:yellow;4:triangle;4:not[%s];4:size2;4:size3
'λx.forall(size3,filter(filter(filter(filter(filter(x.s, triangle), size2), and[and[circle,green],and[size2,or[rectangle,or[size2,triangle]]]]), circle), not[apply(same_shape,x.o)]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2;4:and[%s,%s];4:and[%s,%s];4:circle;4:green;4:and[%s,%s];4:size2;4:or[%s,%s];4:rectangle;4:or[%s,%s];4:size2;4:triangle;4:circle;4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(triangle,iota(filter(x.s, not[circle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.forall(size2,filter(x.s, and[size1,or[apply(size-gt,iota(x.s)),blue]]))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:blue
'λx.contains(iota(filter(filter(x.s, not[circle]), not[and[yellow,size3]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:not[%s];4:and[%s,%s];4:yellow;4:size3;3:%s.s;2:x
'λx.empty(filter(filter(x.s, yellow), apply(same_size,iota(x.s))))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[green,triangle],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:green;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(x.s, iff[blue,not[apply(same_shape,iota(filter(x.s, apply(size-lt,iota(filter(x.s, and[green,blue]))))))]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:blue;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:blue
'λx.apply(size2,iota(filter(filter(x.s, yellow), yellow)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:yellow
'λx.exists(blue, filter(x.s, circle))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[blue,and[and[size1,size3],green]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:size1;4:size3;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(not[and[nor[triangle,or[size1,apply(same_size,x.o)]],blue]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:nor[%s,%s];4:triangle;4:or[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;1:%s.o;2:x
'λx.apply(and[rectangle,or[and[triangle,triangle],size1]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:triangle;4:triangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[rectangle,and[size1,implies[circle,circle]]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:rectangle;4:and[%s,%s];4:size1;4:implies[%s,%s];4:circle;4:circle;1:%s.o;2:x
'λx.exists(triangle, filter(filter(filter(x.s, size2), or[yellow,not[size1]]), blue))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:yellow;4:not[%s];4:size1;4:blue
'λx.apply(or[apply(same_shape,x.o),or[or[yellow,rectangle],blue]],iota(filter(filter(filter(x.s, green), and[size2,size3]), not[triangle])))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:or[%s,%s];4:yellow;4:rectangle;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:size2;4:size3;4:not[%s];4:triangle
'λx.exists(or[size1,apply(size-geq,x.o)], filter(filter(filter(x.s, not[size2]), and[size2,not[size2]]), and[apply(same_shape,x.o),triangle]))'	0:exists(%s, %s);4:or[%s,%s];4:size1;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:and[%s,%s];4:size2;4:not[%s];4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle
'λx.apply(and[size3,iff[and[circle,or[size2,and[green,rectangle]]],not[not[circle]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:iff[%s,%s];4:and[%s,%s];4:circle;4:or[%s,%s];4:size2;4:and[%s,%s];4:green;4:rectangle;4:not[%s];4:not[%s];4:circle;1:iota(%s);3:%s.s;2:x
'λx.forall(and[and[circle,size1],iff[size3,or[triangle,and[size3,or[circle,or[circle,yellow]]]]]],filter(filter(x.s, not[and[iff[size2,green],and[or[size1,green],and[blue,yellow]]]]), apply(size-leq,iota(filter(filter(x.s, size2), green)))))'	0:forall(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:size1;4:iff[%s,%s];4:size3;4:or[%s,%s];4:triangle;4:and[%s,%s];4:size3;4:or[%s,%s];4:circle;4:or[%s,%s];4:circle;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:iff[%s,%s];4:size2;4:green;4:and[%s,%s];4:or[%s,%s];4:size1;4:green;4:and[%s,%s];4:blue;4:yellow;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green
'λx.apply(blue,iota(filter(x.s, and[size3,size2])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:size2
'λx.forall(blue,filter(filter(x.s, or[and[circle,iff[and[yellow,iff[yellow,rectangle]],or[size2,yellow]]],triangle]), size3))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:circle;4:iff[%s,%s];4:and[%s,%s];4:yellow;4:iff[%s,%s];4:yellow;4:rectangle;4:or[%s,%s];4:size2;4:yellow;4:triangle;4:size3
'λx.apply(green,iota(filter(filter(filter(filter(x.s, nand[triangle,blue]), green), blue), iff[blue,yellow])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:triangle;4:blue;4:green;4:blue;4:iff[%s,%s];4:blue;4:yellow
'λx.exists(rectangle, filter(x.s, or[apply(same_size,iota(x.s)),green]))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:green
'λx.apply(or[and[not[size1],triangle],and[size2,yellow]],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:not[%s];4:size1;4:triangle;4:and[%s,%s];4:size2;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[or[size2,size3],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size2;4:size3;4:yellow;1:%s.o;2:x
'λx.apply(and[rectangle,not[nor[iff[size1,size3],triangle]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:not[%s];4:nor[%s,%s];4:iff[%s,%s];4:size1;4:size3;4:triangle;1:%s.o;2:x
'λx.contains(iota(filter(x.s, yellow)), filter(filter(x.s, rectangle), or[blue,size2]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:or[%s,%s];4:blue;4:size2
'λx.apply(apply(same_shape,iota(filter(filter(x.s, size2), size1))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1;1:%s.o;2:x
'λx.apply(and[size3,yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:yellow;1:%s.o;2:x
'λx.apply(and[size2,yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:yellow;1:%s.o;2:x
'λx.apply(and[size1,rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size1,yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:yellow;1:%s.o;2:x
'λx.apply(and[not[green],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:green;4:circle;1:%s.o;2:x
'λx.forall(blue,filter(filter(x.s, size2), or[size2,green]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:size2;4:green
'λx.apply(or[or[yellow,triangle],apply(same_color,iota(x.s))],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:yellow;4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, and[green,not[triangle]])), filter(x.s, and[triangle,not[size2]]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:not[%s];4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:not[%s];4:size2
'λx.apply(and[apply(size-leq,x.o),rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[triangle,and[size1,implies[green,size3]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:size1;4:implies[%s,%s];4:green;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[nand[iff[green,size3],blue],triangle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:nand[%s,%s];4:iff[%s,%s];4:green;4:size3;4:blue;4:triangle;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(filter(x.s, size1), blue), size1))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue;4:size1
'λx.contains(iota(x.s), filter(filter(filter(x.s, size1), blue), green))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue;4:green
'λx.forall(iff[blue,and[not[apply(same_color,x.o)],rectangle]],x.s)'	0:forall(%s,%s);4:iff[%s,%s];4:blue;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle;3:%s.s;2:x
'λx.apply(and[and[blue,circle],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:circle;4:size2;1:%s.o;2:x
'λx.exists(circle, filter(x.s, apply(same_size,iota(filter(filter(filter(x.s, size2), triangle), and[rectangle,yellow])))))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:triangle;4:and[%s,%s];4:rectangle;4:yellow
'λx.exists(circle, filter(filter(x.s, size1), size1))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1
'λx.apply(apply(size-leq,x.o),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[circle,not[size1]],iota(filter(filter(x.s, yellow), and[or[rectangle,apply(same_shape,iota(x.s))],apply(same_color,iota(x.s))])))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_color,iota(filter(filter(x.s, yellow), size2))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, or[or[yellow,or[not[and[triangle,size3]],and[triangle,triangle]]],blue]), rectangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:yellow;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:triangle;4:size3;4:and[%s,%s];4:triangle;4:triangle;4:blue;4:rectangle
'λx.exists(size2, filter(x.s, apply(same_shape,x.o)))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.forall(blue,filter(filter(x.s, rectangle), apply(same_shape,iota(x.s))))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[apply(size-geq,x.o),size2],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:size2;1:iota(%s);3:%s.s;2:x
'λx.exists(nor[not[size2],iff[circle,blue]], filter(filter(x.s, triangle), blue))'	0:exists(%s, %s);4:nor[%s,%s];4:not[%s];4:size2;4:iff[%s,%s];4:circle;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue
'λx.empty(filter(filter(filter(x.s, rectangle), not[size2]), apply(same_color,iota(x.s))))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(x.s, size2), size2)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2;3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(filter(x.s, yellow), and[circle,apply(same_shape,iota(x.s))]), yellow)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:yellow
'λx.apply(and[blue,green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:green;1:%s.o;2:x
'λx.apply(and[triangle,triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(x.s, iff[yellow,not[and[blue,apply(same_shape,x.o)]]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:yellow;4:not[%s];4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(and[size3,size1],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[size3,size2],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(triangle,iota(filter(filter(x.s, and[and[size3,size3],apply(same_color,iota(x.s))]), and[and[circle,and[apply(same_shape,iota(filter(filter(filter(filter(x.s, size1), or[size3,size3]), size2), and[apply(size-leq,x.o),apply(same_color,x.o)]))),size1]],rectangle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size3;4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:or[%s,%s];4:size3;4:size3;4:size2;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1;4:rectangle
'λx.exists(and[size1,triangle], filter(x.s, blue))'	0:exists(%s, %s);4:and[%s,%s];4:size1;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(iff[not[nor[rectangle,and[size2,apply(same_size,iota(x.s))]]],blue],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:not[%s];4:nor[%s,%s];4:rectangle;4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.apply(or[size2,and[size1,apply(same_shape,iota(filter(x.s, not[nor[size2,yellow]])))]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:nor[%s,%s];4:size2;4:yellow;1:%s.o;2:x
'λx.forall(iff[blue,not[blue]],x.s)'	0:forall(%s,%s);4:iff[%s,%s];4:blue;4:not[%s];4:blue;3:%s.s;2:x
'λx.forall(and[and[apply(same_size,x.o),size2],rectangle],filter(filter(x.s, size2), yellow))'	0:forall(%s,%s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:yellow
'λx.apply(and[not[triangle],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:triangle;4:blue;1:%s.o;2:x
'λx.forall(size1,filter(filter(x.s, green), rectangle))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle
'λx.contains(iota(filter(x.s, triangle)), filter(x.s, nor[nor[blue,not[triangle]],size3]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:nor[%s,%s];4:blue;4:not[%s];4:triangle;4:size3
'λx.apply(size2,iota(filter(x.s, or[triangle,implies[yellow,triangle]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:implies[%s,%s];4:yellow;4:triangle
'λx.exists(circle, filter(filter(x.s, nand[triangle,and[and[and[apply(same_color,iota(filter(filter(filter(filter(filter(x.s, green), blue), iff[rectangle,yellow]), size2), apply(same_shape,iota(x.s))))),and[circle,blue]],and[size2,and[green,triangle]]],rectangle]]), or[size2,size3]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:triangle;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue;4:iff[%s,%s];4:rectangle;4:yellow;4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:blue;4:and[%s,%s];4:size2;4:and[%s,%s];4:green;4:triangle;4:rectangle;4:or[%s,%s];4:size2;4:size3
'λx.apply(not[not[or[green,iff[and[size3,and[circle,yellow]],and[or[rectangle,and[blue,size2]],size1]]]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:or[%s,%s];4:green;4:iff[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:circle;4:yellow;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:and[%s,%s];4:blue;4:size2;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(and[blue,green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[green,blue],iota(filter(filter(filter(x.s, circle), yellow), green)))'	0:apply(%s,%s);4:iff[%s,%s];4:green;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow;4:green
'λx.apply(nand[not[circle],green],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:not[%s];4:circle;4:green;1:%s.o;2:x
'λx.apply(or[rectangle,and[circle,green]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:and[%s,%s];4:circle;4:green;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(filter(x.s, apply(same_shape,iota(x.s))), size2), and[or[size3,not[nor[yellow,circle]]],and[apply(same_size,iota(filter(x.s, implies[yellow,or[yellow,triangle]]))),or[apply(same_color,iota(x.s)),blue]]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:or[%s,%s];4:size3;4:not[%s];4:nor[%s,%s];4:yellow;4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:yellow;4:or[%s,%s];4:yellow;4:triangle;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:blue;3:%s.s;2:x
'λx.apply(and[and[apply(same_size,x.o),and[blue,yellow]],triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:blue;4:yellow;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.exists(size3, filter(filter(x.s, not[nor[rectangle,size3]]), yellow))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:nor[%s,%s];4:rectangle;4:size3;4:yellow
'λx.apply(apply(size-geq,iota(filter(filter(x.s, green), not[size2]))),iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.forall(and[triangle,size3],filter(x.s, or[size2,not[rectangle]]))'	0:forall(%s,%s);4:and[%s,%s];4:triangle;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:not[%s];4:rectangle
'λx.apply(and[and[yellow,circle],and[blue,green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:circle;4:and[%s,%s];4:blue;4:green;1:%s.o;2:x
'λx.apply(and[circle,apply(size-lt,x.o)],iota(filter(x.s, iff[rectangle,size2])))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:rectangle;4:size2
'λx.apply(and[apply(same_color,iota(x.s)),yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:yellow;1:%s.o;2:x
'λx.exists(and[yellow,and[not[not[and[size2,and[size1,size2]]]],size3]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:yellow;4:and[%s,%s];4:not[%s];4:not[%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:size1;4:size2;4:size3;3:%s.s;2:x
'λx.empty(filter(x.s, or[apply(size-leq,x.o),and[green,yellow]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:and[%s,%s];4:green;4:yellow
'λx.apply(size2,iota(filter(filter(filter(x.s, iff[or[size1,not[not[and[circle,size2]]]],size3]), and[rectangle,apply(same_color,x.o)]), not[circle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:or[%s,%s];4:size1;4:not[%s];4:not[%s];4:and[%s,%s];4:circle;4:size2;4:size3;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:circle
'λx.apply(or[size2,and[green,blue]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:and[%s,%s];4:green;4:blue;1:%s.o;2:x
'λx.empty(filter(filter(x.s, apply(same_color,x.o)), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle
'λx.apply(or[triangle,and[triangle,green]],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:and[%s,%s];4:triangle;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(and[triangle,or[and[blue,green],rectangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:or[%s,%s];4:and[%s,%s];4:blue;4:green;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[or[yellow,nor[triangle,triangle]],triangle],yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:yellow;4:nor[%s,%s];4:triangle;4:triangle;4:triangle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(x.s, yellow), not[circle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:circle
'λx.exists(or[blue,blue], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:blue;4:blue;3:%s.s;2:x
'λx.apply(nand[not[triangle],triangle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:not[%s];4:triangle;4:triangle;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, and[nor[triangle,circle],size3]), rectangle), not[size1]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:triangle;4:circle;4:size3;4:rectangle;4:not[%s];4:size1
'λx.apply(not[and[green,size3]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:green;4:size3;1:iota(%s);3:%s.s;2:x
'λx.forall(circle,filter(filter(x.s, green), yellow))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow
'λx.apply(implies[size3,size3],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size3;4:size3;1:%s.o;2:x
'λx.contains(x.o, filter(filter(filter(filter(x.s, size3), and[yellow,yellow]), size1), yellow))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:yellow;4:yellow;4:size1;4:yellow
'λx.empty(filter(x.s, apply(size-geq,iota(filter(filter(filter(x.s, size2), size3), blue)))))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3;4:blue
'λx.apply(nor[size3,circle],iota(filter(filter(filter(filter(filter(filter(filter(x.s, not[or[not[yellow],yellow]]), circle), size3), rectangle), circle), size1), triangle)))'	0:apply(%s,%s);4:nor[%s,%s];4:size3;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:not[%s];4:yellow;4:yellow;4:circle;4:size3;4:rectangle;4:circle;4:size1;4:triangle
'λx.contains(iota(filter(filter(x.s, size1), apply(size-gt,iota(x.s)))), filter(filter(filter(filter(x.s, implies[green,or[not[yellow],triangle]]), or[triangle,and[rectangle,and[not[and[and[size3,and[size2,and[or[apply(size-leq,x.o),and[circle,apply(same_color,x.o)]],blue]]],rectangle]],yellow]]]), circle), size2))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:green;4:or[%s,%s];4:not[%s];4:yellow;4:triangle;4:or[%s,%s];4:triangle;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:size2;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue;4:rectangle;4:yellow;4:circle;4:size2
'λx.exists(implies[rectangle,iff[and[triangle,green],triangle]], filter(x.s, nand[green,blue]))'	0:exists(%s, %s);4:implies[%s,%s];4:rectangle;4:iff[%s,%s];4:and[%s,%s];4:triangle;4:green;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:green;4:blue
'λx.apply(and[triangle,and[and[size1,circle],size3]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:and[%s,%s];4:size1;4:circle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(filter(x.s, iff[yellow,and[size2,green]]), circle), size2)), filter(filter(x.s, size2), circle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:yellow;4:and[%s,%s];4:size2;4:green;4:circle;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle
'λx.apply(and[blue,and[green,yellow]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:green;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.contains(iota(x.s), filter(x.s, and[yellow,triangle]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:triangle
'λx.apply(triangle,iota(filter(filter(x.s, apply(same_color,x.o)), yellow)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow
'λx.apply(or[blue,blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:blue;1:%s.o;2:x
'λx.exists(and[size2,and[and[green,apply(same_color,x.o)],not[circle]]], filter(x.s, blue))'	0:exists(%s, %s);4:and[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:circle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(apply(same_shape,iota(x.s)),iota(filter(filter(filter(filter(x.s, rectangle), and[green,size2]), or[triangle,green]), blue)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:green;4:size2;4:or[%s,%s];4:triangle;4:green;4:blue
'λx.apply(and[and[rectangle,size2],and[rectangle,size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size2;4:and[%s,%s];4:rectangle;4:size3;1:%s.o;2:x
'λx.apply(apply(same_color,iota(filter(filter(x.s, size3), apply(same_color,x.o)))),iota(filter(x.s, circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(iff[size3,iff[or[size1,apply(size-leq,x.o)],and[or[nand[or[apply(same_color,x.o),rectangle],rectangle],and[green,circle]],size2]]],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:size3;4:iff[%s,%s];4:or[%s,%s];4:size1;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:and[%s,%s];4:or[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle;4:rectangle;4:and[%s,%s];4:green;4:circle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[apply(same_shape,iota(x.s)),apply(same_shape,iota(filter(x.s, size3)))],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(filter(x.s, not[blue]), circle), and[triangle,triangle])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:circle;4:and[%s,%s];4:triangle;4:triangle
'λx.apply(nand[nor[circle,nor[nand[apply(same_size,x.o),yellow],size3]],and[blue,and[green,size1]]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:nor[%s,%s];4:circle;4:nor[%s,%s];4:nand[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow;4:size3;4:and[%s,%s];4:blue;4:and[%s,%s];4:green;4:size1;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, circle), rectangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle
'λx.forall(triangle,filter(x.s, or[nand[not[and[and[size2,triangle],size3]],blue],rectangle]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:nand[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:triangle;4:size3;4:blue;4:rectangle
'λx.contains(iota(filter(filter(filter(filter(x.s, green), size2), circle), not[circle])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size2;4:circle;4:not[%s];4:circle;3:%s.s;2:x
'λx.forall(and[size1,and[size3,triangle]],filter(filter(filter(filter(x.s, not[iff[size3,size1]]), apply(same_color,iota(filter(x.s, size1)))), circle), apply(same_size,iota(filter(filter(x.s, size3), size3)))))'	0:forall(%s,%s);4:and[%s,%s];4:size1;4:and[%s,%s];4:size3;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:iff[%s,%s];4:size3;4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3
'λx.exists(triangle, filter(x.s, and[triangle,and[nor[and[triangle,size2],and[or[and[circle,and[or[blue,size2],yellow]],rectangle],circle]],size2]]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:and[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:triangle;4:size2;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:or[%s,%s];4:blue;4:size2;4:yellow;4:rectangle;4:circle;4:size2
'λx.apply(circle,iota(filter(filter(x.s, yellow), and[or[yellow,green],size2])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:or[%s,%s];4:yellow;4:green;4:size2
'λx.exists(circle, filter(filter(filter(filter(x.s, circle), circle), triangle), rectangle))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:circle;4:triangle;4:rectangle
'λx.forall(size1,filter(filter(x.s, and[circle,size1]), not[not[apply(same_color,iota(filter(x.s, size2)))]]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size1;4:not[%s];4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.contains(iota(filter(x.s, and[or[green,size1],rectangle])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:green;4:size1;4:rectangle;3:%s.s;2:x
'λx.apply(rectangle,iota(filter(x.s, iff[rectangle,green])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:rectangle;4:green
'λx.exists(triangle, filter(x.s, yellow))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.forall(size2,filter(x.s, triangle))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.forall(size1,filter(x.s, triangle))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(and[and[or[or[or[yellow,size1],nand[size1,not[triangle]]],nand[size1,size3]],size1],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:yellow;4:size1;4:nand[%s,%s];4:size1;4:not[%s];4:triangle;4:nand[%s,%s];4:size1;4:size3;4:size1;4:yellow;1:%s.o;2:x
'λx.apply(and[iff[blue,rectangle],iff[circle,size1]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:blue;4:rectangle;4:iff[%s,%s];4:circle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(and[iff[green,triangle],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:green;4:triangle;4:size2;1:%s.o;2:x
'λx.apply(apply(same_size,iota(x.s)),iota(filter(filter(filter(filter(x.s, not[iff[size3,size1]]), apply(same_color,iota(filter(x.s, size1)))), circle), apply(same_size,x.o))))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:iff[%s,%s];4:size3;4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(triangle,x.o)'	0:apply(%s,%s);4:triangle;1:%s.o;2:x
'λx.apply(nor[not[triangle],blue],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:not[%s];4:triangle;4:blue;1:%s.o;2:x
'λx.exists(size3, filter(x.s, apply(same_shape,iota(x.s))))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(and[circle,circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:circle;1:%s.o;2:x
'λx.apply(nand[and[blue,and[and[yellow,yellow],rectangle]],not[yellow]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:yellow;4:yellow;4:rectangle;4:not[%s];4:yellow;1:%s.o;2:x
'λx.contains(iota(filter(x.s, yellow)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(x.s, not[nand[not[and[not[triangle],size3]],or[or[implies[rectangle,apply(same_shape,iota(filter(filter(x.s, yellow), size3)))],iff[circle,size2]],rectangle]]]), apply(same_shape,x.o))))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:nand[%s,%s];4:not[%s];4:and[%s,%s];4:not[%s];4:triangle;4:size3;4:or[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size3;4:iff[%s,%s];4:circle;4:size2;4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, not[triangle]), and[size1,and[yellow,or[yellow,size1]]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:and[%s,%s];4:size1;4:and[%s,%s];4:yellow;4:or[%s,%s];4:yellow;4:size1;3:%s.s;2:x
'λx.apply(and[apply(size-lt,x.o),and[not[yellow],triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:and[%s,%s];4:not[%s];4:yellow;4:triangle;1:%s.o;2:x
'λx.apply(nor[green,size3],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:green;4:size3;1:iota(%s);3:%s.s;2:x
'λx.exists(or[size3,circle], filter(x.s, and[or[blue,nand[yellow,rectangle]],not[size2]]))'	0:exists(%s, %s);4:or[%s,%s];4:size3;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:blue;4:nand[%s,%s];4:yellow;4:rectangle;4:not[%s];4:size2
'λx.exists(apply(same_size,iota(filter(x.s, circle))), filter(filter(filter(x.s, circle), triangle), and[and[and[yellow,nor[triangle,not[size3]]],size1],and[apply(size-leq,iota(filter(x.s, size2))),and[implies[apply(same_color,iota(filter(x.s, and[green,green]))),apply(same_color,x.o)],and[blue,triangle]]]]))'	0:exists(%s, %s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:nor[%s,%s];4:triangle;4:not[%s];4:size3;4:size1;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:blue;4:triangle
'λx.apply(or[rectangle,or[or[green,apply(size-geq,iota(filter(x.s, and[blue,size3])))],triangle]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:or[%s,%s];4:or[%s,%s];4:green;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size3;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[blue,apply(same_shape,iota(x.s))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(and[not[circle],apply(same_shape,x.o)],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(or[blue,yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:yellow;1:%s.o;2:x
'λx.apply(or[rectangle,yellow],iota(filter(filter(x.s, blue), yellow)))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow
'λx.apply(and[size1,green],iota(filter(x.s, and[not[size3],nor[and[not[rectangle],triangle],size1]])))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:size3;4:nor[%s,%s];4:and[%s,%s];4:not[%s];4:rectangle;4:triangle;4:size1
'λx.exists(blue, filter(x.s, apply(same_size,iota(filter(filter(x.s, nand[size2,yellow]), size1)))))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size2;4:yellow;4:size1
'λx.apply(circle,iota(filter(filter(filter(filter(x.s, size3), size1), size2), nand[nor[blue,green],or[and[and[size3,triangle],rectangle],circle]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size1;4:size2;4:nand[%s,%s];4:nor[%s,%s];4:blue;4:green;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:triangle;4:rectangle;4:circle
'λx.apply(size2,iota(filter(x.s, not[apply(size-lt,x.o)])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.contains(iota(filter(x.s, blue)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;3:%s.s;2:x
'λx.apply(apply(size-gt,x.o),iota(filter(x.s, circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.empty(filter(filter(x.s, green), apply(same_shape,iota(x.s))))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[and[or[apply(same_shape,iota(x.s)),size1],apply(same_size,iota(filter(filter(filter(x.s, or[and[not[green],rectangle],nor[apply(size-lt,iota(x.s)),circle]]), triangle), circle)))],triangle],iff[circle,rectangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:green;4:rectangle;4:nor[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:circle;4:triangle;4:circle;4:triangle;4:iff[%s,%s];4:circle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[circle,nor[circle,green]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:nor[%s,%s];4:circle;4:green;1:%s.o;2:x
'λx.exists(apply(same_color,x.o), filter(x.s, and[blue,apply(same_shape,x.o)]))'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.exists(apply(same_color,x.o), filter(x.s, size1))'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(not[apply(same_color,x.o)], filter(filter(x.s, or[green,nand[not[size1],yellow]]), not[triangle]))'	0:exists(%s, %s);4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:nand[%s,%s];4:not[%s];4:size1;4:yellow;4:not[%s];4:triangle
'λx.apply(size3,iota(filter(filter(x.s, and[blue,and[not[rectangle],and[rectangle,nor[and[size2,triangle],green]]]]), triangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:and[%s,%s];4:not[%s];4:rectangle;4:and[%s,%s];4:rectangle;4:nor[%s,%s];4:and[%s,%s];4:size2;4:triangle;4:green;4:triangle
'λx.apply(and[triangle,or[size3,circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:or[%s,%s];4:size3;4:circle;1:%s.o;2:x
'λx.apply(and[size3,apply(same_shape,iota(filter(x.s, circle)))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, rectangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[or[size3,green],or[or[blue,size2],and[size2,and[size3,nand[size1,triangle]]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size3;4:green;4:or[%s,%s];4:or[%s,%s];4:blue;4:size2;4:and[%s,%s];4:size2;4:and[%s,%s];4:size3;4:nand[%s,%s];4:size1;4:triangle;1:%s.o;2:x
'λx.apply(and[triangle,iff[size2,yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:iff[%s,%s];4:size2;4:yellow;1:%s.o;2:x
'λx.apply(and[green,size2],iota(filter(filter(filter(x.s, size3), circle), size2)))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle;4:size2
'λx.apply(and[or[size2,circle],not[nand[size2,size2]]],iota(filter(filter(filter(x.s, green), triangle), and[not[implies[circle,yellow]],circle])))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size2;4:circle;4:not[%s];4:nand[%s,%s];4:size2;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:triangle;4:and[%s,%s];4:not[%s];4:implies[%s,%s];4:circle;4:yellow;4:circle
'λx.forall(iff[green,nand[blue,and[and[size3,not[circle]],and[and[implies[size2,not[or[green,rectangle]]],nor[green,and[blue,size3]]],not[blue]]]]],x.s)'	0:forall(%s,%s);4:iff[%s,%s];4:green;4:nand[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:size3;4:not[%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:size2;4:not[%s];4:or[%s,%s];4:green;4:rectangle;4:nor[%s,%s];4:green;4:and[%s,%s];4:blue;4:size3;4:not[%s];4:blue;3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(x.s, yellow), rectangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle
'λx.apply(implies[and[blue,circle],blue],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:blue;4:circle;4:blue;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, and[size1,size3]), green)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size3;4:green
'λx.apply(size2,iota(filter(filter(x.s, circle), triangle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle
'λx.empty(filter(filter(filter(filter(filter(filter(filter(x.s, size1), blue), rectangle), circle), size1), apply(size-geq,x.o)), apply(same_size,x.o)))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue;4:rectangle;4:circle;4:size1;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.exists(rectangle, filter(filter(filter(x.s, yellow), green), rectangle))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green;4:rectangle
'λx.apply(implies[and[or[circle,size1],apply(size-geq,iota(x.s))],green],iota(filter(filter(x.s, and[green,apply(same_color,iota(x.s))]), not[and[circle,size2]])))'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:or[%s,%s];4:circle;4:size1;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:circle;4:size2
'λx.apply(not[and[nor[size3,size1],triangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:nor[%s,%s];4:size3;4:size1;4:triangle;1:%s.o;2:x
'λx.apply(and[or[not[size1],size3],yellow],iota(filter(filter(filter(filter(x.s, size1), and[green,implies[size2,iff[triangle,or[or[size3,rectangle],blue]]]]), rectangle), triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:not[%s];4:size1;4:size3;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:green;4:implies[%s,%s];4:size2;4:iff[%s,%s];4:triangle;4:or[%s,%s];4:or[%s,%s];4:size3;4:rectangle;4:blue;4:rectangle;4:triangle
'λx.apply(nand[apply(size-gt,x.o),circle],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:nand[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(apply(same_size,iota(filter(x.s, and[size1,blue]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:blue;1:%s.o;2:x
'λx.apply(not[and[blue,and[size2,size3]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:size2;4:size3;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, and[triangle,and[green,blue]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:and[%s,%s];4:green;4:blue
'λx.apply(or[and[rectangle,triangle],apply(same_size,x.o)],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:rectangle;4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[yellow,not[triangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:not[%s];4:triangle;1:iota(%s);3:%s.s;2:x
'λx.forall(apply(same_shape,x.o),filter(x.s, size1))'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.forall(apply(same_shape,x.o),filter(x.s, size3))'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(apply(size-leq,iota(filter(filter(filter(filter(x.s, and[and[not[size2],yellow],not[and[yellow,circle]]]), size3), or[not[yellow],yellow]), size3))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size2;4:yellow;4:not[%s];4:and[%s,%s];4:yellow;4:circle;4:size3;4:or[%s,%s];4:not[%s];4:yellow;4:yellow;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size3,yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:yellow;1:%s.o;2:x
'λx.exists(and[size1,circle], filter(filter(filter(x.s, rectangle), size3), yellow))'	0:exists(%s, %s);4:and[%s,%s];4:size1;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3;4:yellow
'λx.apply(nor[or[and[yellow,yellow],size2],and[size3,not[apply(same_shape,x.o)]]],iota(filter(filter(filter(filter(x.s, circle), size2), and[triangle,size1]), green)))'	0:apply(%s,%s);4:nor[%s,%s];4:or[%s,%s];4:and[%s,%s];4:yellow;4:yellow;4:size2;4:and[%s,%s];4:size3;4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size2;4:and[%s,%s];4:triangle;4:size1;4:green
'λx.empty(filter(filter(filter(filter(x.s, size1), apply(same_size,iota(filter(x.s, apply(same_size,iota(x.s)))))), size1), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size1;4:rectangle
'λx.apply(and[and[apply(same_size,iota(filter(x.s, or[or[size3,not[size1]],or[or[not[not[rectangle]],blue],and[blue,size2]]]))),blue],and[apply(size-leq,x.o),not[or[blue,nand[apply(size-geq,x.o),blue]]]]],iota(filter(x.s, and[circle,and[rectangle,size1]])))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:size3;4:not[%s];4:size1;4:or[%s,%s];4:or[%s,%s];4:not[%s];4:not[%s];4:rectangle;4:blue;4:and[%s,%s];4:blue;4:size2;4:blue;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:not[%s];4:or[%s,%s];4:blue;4:nand[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:and[%s,%s];4:rectangle;4:size1
'λx.forall(implies[blue,size1],x.s)'	0:forall(%s,%s);4:implies[%s,%s];4:blue;4:size1;3:%s.s;2:x
'λx.apply(apply(same_size,iota(filter(x.s, triangle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;1:%s.o;2:x
'λx.apply(or[apply(same_shape,x.o),circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;1:%s.o;2:x
'λx.apply(and[and[circle,not[size3]],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:not[%s];4:size3;4:green;1:%s.o;2:x
'λx.forall(and[yellow,yellow],filter(filter(x.s, not[or[or[apply(same_shape,iota(x.s)),size2],blue]]), green))'	0:forall(%s,%s);4:and[%s,%s];4:yellow;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size2;4:blue;4:green
'λx.apply(not[blue],iota(filter(filter(filter(filter(filter(filter(x.s, apply(same_color,iota(filter(x.s, not[triangle])))), apply(same_shape,x.o)), apply(same_color,iota(filter(x.s, not[circle])))), or[circle,size3]), rectangle), size1)))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:or[%s,%s];4:circle;4:size3;4:rectangle;4:size1
'λx.apply(and[circle,blue],iota(filter(x.s, and[size2,and[and[blue,apply(same_color,iota(filter(x.s, nand[apply(same_size,x.o),circle])))],yellow]])))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;4:yellow
'λx.apply(circle,iota(filter(filter(x.s, size2), size1)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1
'λx.apply(circle,iota(filter(filter(x.s, size3), size2)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2
'λx.contains(iota(filter(x.s, apply(size-leq,x.o))), filter(filter(x.s, and[size2,triangle]), size1))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:triangle;4:size1
'λx.apply(and[green,yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[implies[green,size2],green],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:implies[%s,%s];4:green;4:size2;4:green;1:%s.o;2:x
'λx.exists(not[size3], filter(x.s, size3))'	0:exists(%s, %s);4:not[%s];4:size3;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.forall(and[size1,circle],filter(filter(filter(x.s, size1), size1), size2))'	0:forall(%s,%s);4:and[%s,%s];4:size1;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1;4:size2
'λx.apply(implies[and[apply(same_color,iota(x.s)),size1],green],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size1;4:green;1:%s.o;2:x
'λx.apply(not[size1],iota(filter(filter(x.s, green), rectangle)))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle
'λx.apply(size3,iota(filter(x.s, and[size2,and[or[or[or[not[blue],implies[yellow,circle]],rectangle],and[apply(same_shape,x.o),iff[not[rectangle],size3]]],triangle]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:not[%s];4:blue;4:implies[%s,%s];4:yellow;4:circle;4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:iff[%s,%s];4:not[%s];4:rectangle;4:size3;4:triangle
'λx.apply(and[not[size1],rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size1;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[size3,iff[implies[rectangle,rectangle],and[circle,size3]]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size3;4:iff[%s,%s];4:implies[%s,%s];4:rectangle;4:rectangle;4:and[%s,%s];4:circle;4:size3;1:%s.o;2:x
'λx.apply(and[or[rectangle,size2],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:rectangle;4:size2;4:rectangle;1:%s.o;2:x
'λx.apply(and[size1,blue],iota(filter(filter(filter(x.s, yellow), or[or[green,green],circle]), yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:or[%s,%s];4:green;4:green;4:circle;4:yellow
'λx.exists(apply(size-gt,iota(x.s)), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(filter(filter(filter(x.s, size2), triangle), blue), or[and[apply(same_color,x.o),apply(same_shape,iota(x.s))],and[and[and[and[green,green],green],implies[rectangle,apply(size-geq,iota(filter(x.s, not[blue])))]],size2]]), blue)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:triangle;4:blue;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:green;4:green;4:implies[%s,%s];4:rectangle;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:size2;4:blue
'λx.exists(apply(size-geq,iota(x.s)), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(x.s, size3), green)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green
'λx.apply(not[apply(size-gt,iota(x.s))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, and[circle,implies[circle,triangle]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:implies[%s,%s];4:circle;4:triangle
'λx.apply(and[apply(size-lt,iota(filter(x.s, size1))),yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow;1:%s.o;2:x
'λx.apply(nand[and[circle,and[rectangle,size1]],size1],iota(filter(x.s, and[nor[size1,apply(same_size,x.o)],rectangle])))'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:rectangle;4:size1;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:rectangle
'λx.contains(iota(filter(filter(filter(filter(x.s, circle), apply(same_shape,x.o)), size2), and[and[and[rectangle,rectangle],size3],nor[yellow,and[yellow,nand[size2,size3]]]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:rectangle;4:size3;4:nor[%s,%s];4:yellow;4:and[%s,%s];4:yellow;4:nand[%s,%s];4:size2;4:size3;3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(filter(x.s, and[apply(same_size,iota(filter(filter(x.s, and[yellow,blue]), and[apply(same_shape,iota(filter(filter(filter(filter(filter(x.s, size3), and[blue,triangle]), size1), rectangle), size2))),rectangle]))),or[or[size1,and[not[rectangle],size3]],or[triangle,green]]]), size3), not[iff[size3,triangle]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:blue;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:blue;4:triangle;4:size1;4:rectangle;4:size2;4:rectangle;4:or[%s,%s];4:or[%s,%s];4:size1;4:and[%s,%s];4:not[%s];4:rectangle;4:size3;4:or[%s,%s];4:triangle;4:green;4:size3;4:not[%s];4:iff[%s,%s];4:size3;4:triangle
'λx.forall(or[nor[green,not[or[yellow,and[iff[triangle,apply(same_shape,x.o)],circle]]]],and[and[rectangle,implies[and[rectangle,yellow],rectangle]],and[triangle,green]]],filter(x.s, green))'	0:forall(%s,%s);4:or[%s,%s];4:nor[%s,%s];4:green;4:not[%s];4:or[%s,%s];4:yellow;4:and[%s,%s];4:iff[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:implies[%s,%s];4:and[%s,%s];4:rectangle;4:yellow;4:rectangle;4:and[%s,%s];4:triangle;4:green;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(or[and[yellow,size1],and[rectangle,blue]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:yellow;4:size1;4:and[%s,%s];4:rectangle;4:blue;1:%s.o;2:x
'λx.apply(not[and[size1,triangle]],iota(filter(filter(filter(filter(x.s, size2), size2), size2), not[size1])))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size1;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2;4:size2;4:not[%s];4:size1
'λx.apply(and[size3,or[apply(size-lt,iota(x.s)),rectangle]],iota(filter(filter(filter(filter(x.s, apply(same_shape,iota(x.s))), size2), or[blue,circle]), yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:blue;4:circle;4:yellow
'λx.exists(apply(size-gt,x.o), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:size-gt;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(or[and[size1,size2],nand[blue,circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size1;4:size2;4:nand[%s,%s];4:blue;4:circle;1:%s.o;2:x
'λx.exists(yellow, filter(filter(filter(x.s, implies[not[circle],and[rectangle,size1]]), size3), or[yellow,and[size1,implies[and[green,triangle],yellow]]]))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:not[%s];4:circle;4:and[%s,%s];4:rectangle;4:size1;4:size3;4:or[%s,%s];4:yellow;4:and[%s,%s];4:size1;4:implies[%s,%s];4:and[%s,%s];4:green;4:triangle;4:yellow
'λx.apply(or[or[not[size1],green],rectangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:not[%s];4:size1;4:green;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.exists(not[or[apply(same_size,iota(x.s)),implies[rectangle,rectangle]]], x.s)'	0:exists(%s, %s);4:not[%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:implies[%s,%s];4:rectangle;4:rectangle;3:%s.s;2:x
'λx.apply(or[triangle,apply(same_size,iota(filter(x.s, size2)))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;1:%s.o;2:x
'λx.exists(apply(same_shape,iota(x.s)), filter(filter(x.s, not[green]), apply(same_shape,x.o)))'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.contains(x.o, filter(filter(filter(filter(x.s, blue), circle), triangle), and[size3,rectangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle;4:triangle;4:and[%s,%s];4:size3;4:rectangle
'λx.apply(size2,iota(filter(filter(filter(filter(filter(x.s, rectangle), circle), and[apply(same_color,x.o),circle]), size3), nor[rectangle,or[size1,implies[green,circle]]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;4:size3;4:nor[%s,%s];4:rectangle;4:or[%s,%s];4:size1;4:implies[%s,%s];4:green;4:circle
'λx.apply(blue,iota(filter(filter(x.s, triangle), green)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green
'λx.exists(and[nor[triangle,and[size3,green]],triangle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:nor[%s,%s];4:triangle;4:and[%s,%s];4:size3;4:green;4:triangle;3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(x.s, yellow), blue)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:blue
'λx.apply(and[apply(size-geq,iota(filter(x.s, not[size3]))),circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(x.s, nor[or[and[and[size2,implies[yellow,yellow]],and[and[apply(same_size,iota(x.s)),nand[rectangle,not[yellow]]],and[green,and[size2,size3]]]],or[blue,and[blue,or[green,implies[and[or[circle,size1],apply(size-geq,iota(x.s))],green]]]]],green])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:implies[%s,%s];4:yellow;4:yellow;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:nand[%s,%s];4:rectangle;4:not[%s];4:yellow;4:and[%s,%s];4:green;4:and[%s,%s];4:size2;4:size3;4:or[%s,%s];4:blue;4:and[%s,%s];4:blue;4:or[%s,%s];4:green;4:implies[%s,%s];4:and[%s,%s];4:or[%s,%s];4:circle;4:size1;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:green;4:green
'λx.empty(filter(filter(filter(x.s, apply(same_color,x.o)), yellow), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;4:size1
'λx.empty(filter(x.s, and[blue,apply(same_shape,x.o)]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(filter(x.s, size2), and[or[size1,triangle],triangle]), size1)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:or[%s,%s];4:size1;4:triangle;4:triangle;4:size1
'λx.apply(and[not[and[circle,blue]],and[size2,size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:circle;4:blue;4:and[%s,%s];4:size2;4:size2;1:%s.o;2:x
'λx.apply(or[and[and[implies[and[green,and[circle,apply(size-geq,iota(x.s))]],not[and[yellow,apply(same_color,iota(x.s))]]],green],iff[green,and[not[and[yellow,size1]],blue]]],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:circle;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:green;4:iff[%s,%s];4:green;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:yellow;4:size1;4:blue;4:blue;1:%s.o;2:x
'λx.apply(not[and[green,rectangle]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:green;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, or[size3,size1]), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:size1;4:blue
'λx.apply(nand[yellow,blue],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:yellow;4:blue;1:%s.o;2:x
'λx.apply(not[apply(same_color,x.o)],iota(filter(filter(x.s, and[apply(size-geq,iota(filter(x.s, nand[yellow,rectangle]))),and[not[size2],apply(same_shape,iota(filter(filter(filter(filter(x.s, rectangle), size1), rectangle), triangle)))]]), not[apply(same_shape,iota(x.s))])))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:yellow;4:rectangle;4:and[%s,%s];4:not[%s];4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1;4:rectangle;4:triangle;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.exists(triangle, filter(x.s, blue))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.exists(triangle, filter(filter(x.s, triangle), triangle))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:triangle
'λx.apply(apply(same_color,iota(filter(x.s, yellow))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(or[green,yellow],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.forall(blue,filter(filter(filter(x.s, or[apply(same_color,iota(x.s)),triangle]), green), or[blue,green]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:triangle;4:green;4:or[%s,%s];4:blue;4:green
'λx.forall(nand[blue,iff[rectangle,circle]],x.s)'	0:forall(%s,%s);4:nand[%s,%s];4:blue;4:iff[%s,%s];4:rectangle;4:circle;3:%s.s;2:x
'λx.exists(blue, filter(x.s, and[size1,and[apply(same_size,iota(filter(x.s, size2))),rectangle]]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle
'λx.apply(size1,iota(filter(x.s, and[size2,yellow])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:yellow
'λx.apply(size2,iota(filter(x.s, and[size3,yellow])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:yellow
'λx.exists(apply(size-leq,iota(x.s)), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(and[and[and[size1,and[apply(same_size,iota(x.s)),size1]],blue],yellow],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size1;4:blue;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(circle,iota(filter(x.s, or[or[or[and[blue,apply(same_size,x.o)],size3],size1],size3])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;4:size1;4:size3
'λx.apply(and[apply(same_size,iota(x.s)),or[or[size3,nor[iff[triangle,size3],and[yellow,blue]]],green]],iota(filter(filter(filter(filter(filter(x.s, apply(size-gt,x.o)), size1), or[and[blue,size3],green]), iff[circle,and[circle,rectangle]]), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:size3;4:nor[%s,%s];4:iff[%s,%s];4:triangle;4:size3;4:and[%s,%s];4:yellow;4:blue;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:size1;4:or[%s,%s];4:and[%s,%s];4:blue;4:size3;4:green;4:iff[%s,%s];4:circle;4:and[%s,%s];4:circle;4:rectangle;4:blue
'λx.empty(filter(filter(x.s, or[size1,or[not[rectangle],circle]]), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:or[%s,%s];4:not[%s];4:rectangle;4:circle;4:size2
'λx.apply(and[blue,green],iota(filter(x.s, green)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.contains(x.o, filter(x.s, or[not[circle],rectangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:circle;4:rectangle
'λx.apply(not[blue],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(filter(filter(filter(filter(x.s, not[apply(size-lt,iota(x.s))]), and[not[size2],circle]), size2), size3), or[apply(same_size,x.o),size2]), size1)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:size2;4:circle;4:size2;4:size3;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2;4:size1
'λx.apply(or[implies[and[and[or[not[blue],size3],implies[yellow,green]],rectangle],yellow],blue],iota(filter(filter(filter(x.s, or[implies[triangle,size2],nor[yellow,blue]]), triangle), green)))'	0:apply(%s,%s);4:or[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:not[%s];4:blue;4:size3;4:implies[%s,%s];4:yellow;4:green;4:rectangle;4:yellow;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:implies[%s,%s];4:triangle;4:size2;4:nor[%s,%s];4:yellow;4:blue;4:triangle;4:green
'λx.apply(size3,iota(filter(filter(filter(x.s, size3), green), or[triangle,not[size3]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green;4:or[%s,%s];4:triangle;4:not[%s];4:size3
'λx.apply(and[iff[size3,apply(same_color,iota(filter(x.s, or[size3,nor[and[rectangle,rectangle],rectangle]])))],yellow],iota(filter(x.s, implies[not[yellow],triangle])))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:nor[%s,%s];4:and[%s,%s];4:rectangle;4:rectangle;4:rectangle;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:not[%s];4:yellow;4:triangle
'λx.apply(apply(same_size,iota(x.s)),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[apply(same_color,iota(x.s)),size1],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(filter(filter(filter(filter(filter(x.s, size3), circle), and[green,triangle]), apply(same_color,x.o)), not[or[size2,and[not[yellow],and[size2,green]]]]), implies[and[green,rectangle],or[triangle,triangle]]), implies[size3,size3])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle;4:and[%s,%s];4:green;4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:or[%s,%s];4:size2;4:and[%s,%s];4:not[%s];4:yellow;4:and[%s,%s];4:size2;4:green;4:implies[%s,%s];4:and[%s,%s];4:green;4:rectangle;4:or[%s,%s];4:triangle;4:triangle;4:implies[%s,%s];4:size3;4:size3
'λx.apply(apply(size-leq,x.o),iota(filter(filter(x.s, size3), triangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle
'λx.apply(circle,iota(filter(filter(x.s, or[not[apply(same_size,x.o)],or[size2,circle]]), size3)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:size2;4:circle;4:size3
'λx.apply(not[rectangle],iota(filter(filter(x.s, or[circle,or[triangle,size3]]), implies[size2,and[and[triangle,nor[circle,size3]],implies[blue,green]]])))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:or[%s,%s];4:triangle;4:size3;4:implies[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:triangle;4:nor[%s,%s];4:circle;4:size3;4:implies[%s,%s];4:blue;4:green
'λx.apply(or[size2,yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:yellow;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, circle), triangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle
'λx.apply(and[blue,not[circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:not[%s];4:circle;1:%s.o;2:x
'λx.apply(implies[apply(same_shape,x.o),or[yellow,triangle]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:yellow;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, yellow), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1
'λx.apply(blue,iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.contains(iota(filter(filter(filter(x.s, circle), size3), size1)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3;4:size1;3:%s.s;2:x
'λx.forall(rectangle,filter(filter(filter(x.s, and[yellow,size1]), apply(same_size,iota(filter(x.s, blue)))), apply(size-lt,x.o)))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.apply(or[triangle,size1],iota(filter(filter(filter(filter(filter(filter(filter(x.s, blue), not[green]), rectangle), triangle), and[and[and[and[blue,circle],and[not[blue],and[size1,yellow]]],not[circle]],blue]), blue), size3)))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:green;4:rectangle;4:triangle;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:circle;4:and[%s,%s];4:not[%s];4:blue;4:and[%s,%s];4:size1;4:yellow;4:not[%s];4:circle;4:blue;4:blue;4:size3
'λx.apply(iff[triangle,blue],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:triangle;4:blue;1:%s.o;2:x
'λx.apply(and[not[apply(same_size,x.o)],triangle],iota(filter(filter(x.s, or[rectangle,and[triangle,size1]]), yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:and[%s,%s];4:triangle;4:size1;4:yellow
'λx.apply(iff[or[yellow,and[and[apply(same_color,x.o),circle],circle]],nor[rectangle,size1]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:or[%s,%s];4:yellow;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;4:circle;4:nor[%s,%s];4:rectangle;4:size1;1:%s.o;2:x
'λx.apply(not[or[implies[not[not[rectangle]],blue],size3]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:implies[%s,%s];4:not[%s];4:not[%s];4:rectangle;4:blue;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(not[and[apply(same_size,iota(x.s)),yellow]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, yellow), yellow), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:yellow;4:rectangle
'λx.apply(and[and[and[size3,and[size2,triangle]],or[size3,triangle]],apply(same_color,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:size2;4:triangle;4:or[%s,%s];4:size3;4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, or[implies[triangle,and[size2,triangle]],blue]), not[yellow]), and[size3,blue]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:implies[%s,%s];4:triangle;4:and[%s,%s];4:size2;4:triangle;4:blue;4:not[%s];4:yellow;4:and[%s,%s];4:size3;4:blue
'λx.apply(iff[green,or[size3,and[triangle,not[not[iff[not[triangle],blue]]]]]],iota(filter(filter(x.s, size1), size2)))'	0:apply(%s,%s);4:iff[%s,%s];4:green;4:or[%s,%s];4:size3;4:and[%s,%s];4:triangle;4:not[%s];4:not[%s];4:iff[%s,%s];4:not[%s];4:triangle;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2
'λx.apply(and[or[triangle,or[and[apply(same_size,iota(filter(x.s, apply(same_color,iota(x.s))))),triangle],circle]],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:triangle;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:triangle;4:circle;4:blue;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, triangle), or[blue,and[and[rectangle,circle],not[and[not[size3],and[or[yellow,rectangle],or[triangle,or[triangle,green]]]]]]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:or[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:circle;4:not[%s];4:and[%s,%s];4:not[%s];4:size3;4:and[%s,%s];4:or[%s,%s];4:yellow;4:rectangle;4:or[%s,%s];4:triangle;4:or[%s,%s];4:triangle;4:green
'λx.apply(or[or[size2,triangle],size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:size2;4:triangle;4:size3;1:%s.o;2:x
'λx.apply(nand[rectangle,or[yellow,size1]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:rectangle;4:or[%s,%s];4:yellow;4:size1;1:%s.o;2:x
'λx.apply(implies[nor[size1,not[apply(same_shape,iota(filter(x.s, not[not[size3]])))]],iff[size1,triangle]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:nor[%s,%s];4:size1;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:size3;4:iff[%s,%s];4:size1;4:triangle;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, not[or[apply(same_shape,iota(x.s)),blue]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:blue
'λx.apply(or[size2,and[apply(same_color,x.o),or[or[circle,yellow],or[yellow,implies[not[not[size2]],size3]]]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:or[%s,%s];4:or[%s,%s];4:circle;4:yellow;4:or[%s,%s];4:yellow;4:implies[%s,%s];4:not[%s];4:not[%s];4:size2;4:size3;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, apply(same_size,iota(x.s))), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size2
'λx.forall(yellow,x.s)'	0:forall(%s,%s);4:yellow;3:%s.s;2:x
'λx.apply(not[apply(size-leq,iota(filter(filter(filter(x.s, triangle), size3), or[circle,yellow])))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3;4:or[%s,%s];4:circle;4:yellow;1:%s.o;2:x
'λx.apply(or[not[apply(same_color,iota(filter(filter(filter(x.s, or[size2,blue]), triangle), nand[yellow,and[triangle,blue]])))],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:blue;4:triangle;4:nand[%s,%s];4:yellow;4:and[%s,%s];4:triangle;4:blue;4:blue;1:%s.o;2:x
'λx.apply(and[yellow,and[yellow,and[size2,or[apply(same_size,x.o),iff[size1,size1]]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:and[%s,%s];4:yellow;4:and[%s,%s];4:size2;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:iff[%s,%s];4:size1;4:size1;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, not[or[triangle,blue]]), or[triangle,nand[size3,implies[size2,rectangle]]])), filter(x.s, blue))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:triangle;4:blue;4:or[%s,%s];4:triangle;4:nand[%s,%s];4:size3;4:implies[%s,%s];4:size2;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[circle,triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:triangle;1:%s.o;2:x
'λx.exists(and[blue,size1], filter(filter(x.s, rectangle), apply(size-leq,x.o)))'	0:exists(%s, %s);4:and[%s,%s];4:blue;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:size-leq;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(filter(filter(filter(filter(filter(x.s, circle), or[size2,size1]), and[green,and[green,size1]]), yellow), blue), blue), blue)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:size2;4:size1;4:and[%s,%s];4:green;4:and[%s,%s];4:green;4:size1;4:yellow;4:blue;4:blue;4:blue
'λx.empty(filter(filter(filter(filter(filter(filter(x.s, apply(same_shape,iota(filter(x.s, or[and[apply(same_shape,iota(filter(filter(x.s, size2), not[green]))),triangle],and[triangle,green]])))), triangle), apply(same_color,x.o)), triangle), and[rectangle,not[green]]), apply(same_size,x.o)))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:not[%s];4:green;4:triangle;4:and[%s,%s];4:triangle;4:green;4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;4:and[%s,%s];4:rectangle;4:not[%s];4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(nor[apply(same_size,x.o),green],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(not[size2],iota(filter(filter(x.s, implies[circle,rectangle]), rectangle)))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:circle;4:rectangle;4:rectangle
'λx.apply(and[green,and[triangle,or[yellow,apply(same_size,iota(filter(filter(x.s, circle), not[or[or[and[implies[rectangle,or[or[size1,yellow],green]],nor[triangle,rectangle]],apply(same_shape,x.o)],not[or[triangle,blue]]]])))]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:triangle;4:or[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:rectangle;4:or[%s,%s];4:or[%s,%s];4:size1;4:yellow;4:green;4:nor[%s,%s];4:triangle;4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:or[%s,%s];4:triangle;4:blue;1:%s.o;2:x
'λx.apply(and[not[size2],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size2;4:green;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(x.s, not[triangle]), apply(same_color,iota(filter(filter(filter(x.s, blue), triangle), and[not[yellow],size3]))))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle;4:and[%s,%s];4:not[%s];4:yellow;4:size3
'λx.forall(nor[or[blue,or[or[size3,apply(same_size,x.o)],green]],yellow],x.s)'	0:forall(%s,%s);4:nor[%s,%s];4:or[%s,%s];4:blue;4:or[%s,%s];4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;4:yellow;3:%s.s;2:x
'λx.apply(not[iff[size2,green]],x.o)'	0:apply(%s,%s);4:not[%s];4:iff[%s,%s];4:size2;4:green;1:%s.o;2:x
'λx.exists(yellow, filter(x.s, not[not[green]]))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:green
'λx.apply(not[triangle],x.o)'	0:apply(%s,%s);4:not[%s];4:triangle;1:%s.o;2:x
'λx.forall(size1,filter(filter(x.s, and[nand[triangle,and[size3,blue]],circle]), not[or[or[and[blue,or[rectangle,not[size2]]],blue],triangle]]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nand[%s,%s];4:triangle;4:and[%s,%s];4:size3;4:blue;4:circle;4:not[%s];4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:blue;4:or[%s,%s];4:rectangle;4:not[%s];4:size2;4:blue;4:triangle
'λx.apply(circle,iota(filter(filter(x.s, not[circle]), and[triangle,apply(same_shape,iota(filter(filter(x.s, rectangle), triangle)))])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle
'λx.forall(nor[size1,yellow],filter(x.s, size2))'	0:forall(%s,%s);4:nor[%s,%s];4:size1;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(nor[apply(size-lt,x.o),nand[nand[or[and[apply(same_color,iota(filter(filter(x.s, size1), blue))),size1],blue],rectangle],size1]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:nand[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue;4:size1;4:blue;4:rectangle;4:size1;1:%s.o;2:x
'λx.forall(rectangle,filter(x.s, apply(same_color,iota(x.s))))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(filter(filter(filter(x.s, and[apply(size-lt,iota(filter(x.s, triangle))),yellow]), not[apply(same_color,x.o)]), green), or[or[green,green],blue]), and[blue,not[blue]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:yellow;4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green;4:or[%s,%s];4:or[%s,%s];4:green;4:green;4:blue;4:and[%s,%s];4:blue;4:not[%s];4:blue
'λx.apply(nand[circle,blue],iota(filter(x.s, and[yellow,or[green,size3]])))'	0:apply(%s,%s);4:nand[%s,%s];4:circle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:or[%s,%s];4:green;4:size3
'λx.apply(size1,iota(filter(x.s, and[apply(same_size,x.o),and[not[apply(same_color,x.o)],green]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green
'λx.apply(or[nand[not[not[size3]],blue],rectangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:not[%s];4:not[%s];4:size3;4:blue;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size1,or[triangle,circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:or[%s,%s];4:triangle;4:circle;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, or[size1,implies[circle,size3]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:implies[%s,%s];4:circle;4:size3
'λx.apply(or[and[and[apply(same_shape,x.o),and[not[and[rectangle,yellow]],and[and[and[not[size1],triangle],triangle],and[yellow,and[triangle,rectangle]]]]],size1],not[not[apply(same_color,iota(filter(filter(filter(x.s, circle), rectangle), triangle)))]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:rectangle;4:yellow;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size1;4:triangle;4:triangle;4:and[%s,%s];4:yellow;4:and[%s,%s];4:triangle;4:rectangle;4:size1;4:not[%s];4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle;4:triangle;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(filter(filter(x.s, nand[and[apply(same_size,x.o),apply(size-lt,iota(x.s))],circle]), triangle), or[not[triangle],nand[green,apply(same_shape,iota(filter(filter(x.s, nor[nand[size2,rectangle],blue]), yellow)))]]), circle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:circle;4:triangle;4:or[%s,%s];4:not[%s];4:triangle;4:nand[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:nand[%s,%s];4:size2;4:rectangle;4:blue;4:yellow;4:circle
'λx.apply(rectangle,iota(filter(filter(x.s, triangle), not[circle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:not[%s];4:circle
'λx.apply(nor[size3,triangle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size3;4:triangle;1:%s.o;2:x
'λx.apply(nand[not[and[green,size2]],size3],iota(filter(filter(filter(filter(filter(filter(x.s, green), circle), and[circle,apply(same_size,x.o)]), blue), rectangle), size1)))'	0:apply(%s,%s);4:nand[%s,%s];4:not[%s];4:and[%s,%s];4:green;4:size2;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:circle;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;4:rectangle;4:size1
'λx.apply(apply(size-geq,iota(filter(filter(filter(x.s, size1), and[size3,circle]), and[rectangle,size1]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:size3;4:circle;4:and[%s,%s];4:rectangle;4:size1;1:%s.o;2:x
'λx.apply(or[and[apply(same_size,iota(filter(filter(filter(filter(filter(filter(x.s, size2), circle), and[triangle,not[size3]]), apply(same_size,iota(filter(x.s, size1)))), apply(same_shape,iota(x.s))), blue))),circle],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle;4:and[%s,%s];4:triangle;4:not[%s];4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:blue;4:circle;4:blue;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(filter(filter(x.s, or[green,size3]), not[blue]), circle), size1)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:size3;4:not[%s];4:blue;4:circle;4:size1
'λx.empty(filter(filter(x.s, nor[circle,or[yellow,size2]]), not[yellow]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:circle;4:or[%s,%s];4:yellow;4:size2;4:not[%s];4:yellow
'λx.apply(and[not[apply(same_size,x.o)],size1],iota(filter(filter(filter(filter(filter(filter(filter(x.s, apply(same_size,iota(filter(x.s, blue)))), or[size1,size3]), green), circle), rectangle), and[size3,size2]), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:size1;4:size3;4:green;4:circle;4:rectangle;4:and[%s,%s];4:size3;4:size2;4:blue
'λx.forall(apply(same_color,iota(filter(filter(filter(filter(x.s, not[rectangle]), and[size3,yellow]), yellow), apply(same_color,x.o)))),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;4:and[%s,%s];4:size3;4:yellow;4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(x.s, circle), size2), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size2;4:green
'λx.apply(apply(same_shape,iota(filter(x.s, nor[yellow,and[size1,and[rectangle,size3]]]))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:yellow;4:and[%s,%s];4:size1;4:and[%s,%s];4:rectangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.exists(blue, filter(filter(filter(x.s, or[triangle,size2]), blue), or[iff[blue,and[and[apply(same_size,x.o),or[rectangle,green]],triangle]],yellow]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:size2;4:blue;4:or[%s,%s];4:iff[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:rectangle;4:green;4:triangle;4:yellow
'λx.apply(or[not[apply(same_shape,iota(filter(filter(filter(x.s, nor[apply(same_shape,iota(x.s)),rectangle]), size2), circle)))],not[green]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:rectangle;4:size2;4:circle;4:not[%s];4:green;1:%s.o;2:x
'λx.apply(or[and[rectangle,circle],and[not[and[apply(same_shape,iota(x.s)),and[nand[circle,yellow],and[circle,size1]]]],rectangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:rectangle;4:circle;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:nand[%s,%s];4:circle;4:yellow;4:and[%s,%s];4:circle;4:size1;4:rectangle;1:%s.o;2:x
'λx.apply(and[not[or[not[not[and[triangle,and[and[size3,size3],yellow]]]],nand[and[triangle,and[size2,size3]],apply(size-geq,iota(x.s))]]],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:or[%s,%s];4:not[%s];4:not[%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:and[%s,%s];4:size3;4:size3;4:yellow;4:nand[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:size2;4:size3;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:green;1:%s.o;2:x
'λx.apply(or[size2,apply(same_color,iota(filter(filter(x.s, and[apply(same_size,x.o),yellow]), blue)))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow;4:blue;1:%s.o;2:x
'λx.apply(and[rectangle,apply(size-lt,x.o)],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.contains(iota(filter(filter(x.s, size1), or[yellow,or[size3,size1]])), filter(x.s, yellow))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:or[%s,%s];4:yellow;4:or[%s,%s];4:size3;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(or[apply(same_color,x.o),and[or[or[blue,green],rectangle],or[and[and[apply(same_shape,x.o),or[green,rectangle]],size1],apply(same_size,x.o)]]],iota(filter(x.s, green)))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:blue;4:green;4:rectangle;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:green;4:rectangle;4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[blue,or[apply(same_shape,iota(x.s)),triangle]],iota(filter(filter(filter(filter(filter(filter(filter(x.s, implies[iff[size1,and[rectangle,and[rectangle,rectangle]]],nor[rectangle,not[triangle]]]), size2), blue), yellow), blue), or[apply(same_size,x.o),and[triangle,green]]), circle)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:iff[%s,%s];4:size1;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:rectangle;4:rectangle;4:nor[%s,%s];4:rectangle;4:not[%s];4:triangle;4:size2;4:blue;4:yellow;4:blue;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:triangle;4:green;4:circle
'λx.apply(green,iota(filter(filter(x.s, circle), triangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle
'λx.empty(filter(filter(x.s, triangle), apply(same_color,iota(filter(x.s, size1)))))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.empty(filter(filter(filter(x.s, blue), green), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green;4:size3
'λx.apply(size1,iota(filter(filter(x.s, or[triangle,circle]), circle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:circle;4:circle
'λx.apply(and[apply(same_shape,iota(filter(x.s, yellow))),green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green;1:%s.o;2:x
'λx.apply(not[and[rectangle,not[size2]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:rectangle;4:not[%s];4:size2;1:%s.o;2:x
'λx.apply(nor[nand[apply(same_shape,x.o),nor[rectangle,apply(size-leq,iota(filter(x.s, triangle)))]],rectangle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:nor[%s,%s];4:rectangle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle;1:%s.o;2:x
'λx.apply(not[yellow],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(or[triangle,size3],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.exists(green, filter(filter(filter(filter(x.s, yellow), blue), size2), circle))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:blue;4:size2;4:circle
'λx.exists(implies[yellow,not[blue]], x.s)'	0:exists(%s, %s);4:implies[%s,%s];4:yellow;4:not[%s];4:blue;3:%s.s;2:x
'λx.apply(yellow,iota(filter(x.s, apply(size-lt,x.o))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.apply(and[circle,not[triangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:not[%s];4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(x.s, size2), or[blue,and[green,blue]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:blue;4:and[%s,%s];4:green;4:blue
'λx.contains(x.o, filter(x.s, apply(same_color,iota(filter(x.s, blue)))))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.exists(not[blue], filter(filter(filter(x.s, nand[blue,triangle]), and[size2,yellow]), and[green,rectangle]))'	0:exists(%s, %s);4:not[%s];4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:blue;4:triangle;4:and[%s,%s];4:size2;4:yellow;4:and[%s,%s];4:green;4:rectangle
'λx.apply(triangle,iota(filter(filter(filter(filter(x.s, size1), circle), blue), rectangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle;4:blue;4:rectangle
'λx.apply(yellow,iota(filter(filter(filter(filter(filter(x.s, size2), circle), and[triangle,not[size3]]), apply(same_size,iota(filter(x.s, size1)))), apply(same_shape,iota(x.s)))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle;4:and[%s,%s];4:triangle;4:not[%s];4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.forall(size2,filter(filter(x.s, rectangle), yellow))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:yellow
'λx.apply(nor[yellow,blue],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:yellow;4:blue;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(filter(x.s, not[yellow]), apply(same_size,iota(x.s))), green)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:green;3:%s.s;2:x
'λx.apply(apply(size-lt,iota(filter(x.s, size1))),iota(filter(x.s, nand[or[apply(same_shape,iota(filter(filter(x.s, yellow), yellow))),blue],apply(same_shape,x.o)])))'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:yellow;4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(not[nand[and[apply(same_color,x.o),or[yellow,size2]],not[iff[yellow,triangle]]]],iota(filter(x.s, not[apply(same_shape,x.o)])))'	0:apply(%s,%s);4:not[%s];4:nand[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:or[%s,%s];4:yellow;4:size2;4:not[%s];4:iff[%s,%s];4:yellow;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(not[size3],iota(filter(filter(x.s, yellow), circle)))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle
'λx.apply(triangle,iota(filter(filter(filter(x.s, apply(size-gt,x.o)), size1), or[and[blue,size3],green])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:size1;4:or[%s,%s];4:and[%s,%s];4:blue;4:size3;4:green
'λx.apply(or[size3,blue],iota(filter(filter(filter(filter(x.s, apply(size-lt,iota(x.s))), and[not[nor[size3,or[size1,green]]],nand[triangle,rectangle]]), size2), blue)))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:nor[%s,%s];4:size3;4:or[%s,%s];4:size1;4:green;4:nand[%s,%s];4:triangle;4:rectangle;4:size2;4:blue
'λx.forall(and[and[apply(same_shape,iota(filter(filter(x.s, or[or[yellow,yellow],yellow]), apply(same_color,x.o)))),nor[rectangle,or[size1,rectangle]]],size2],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:yellow;4:yellow;4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:nor[%s,%s];4:rectangle;4:or[%s,%s];4:size1;4:rectangle;4:size2;3:%s.s;2:x
'λx.forall(yellow,filter(x.s, size2))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.forall(yellow,filter(x.s, green))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(or[blue,and[green,yellow]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:and[%s,%s];4:green;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[not[and[triangle,not[and[size1,size3]]]],circle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:not[%s];4:and[%s,%s];4:triangle;4:not[%s];4:and[%s,%s];4:size1;4:size3;4:circle;1:%s.o;2:x
'λx.exists(nand[apply(same_color,iota(x.s)),size3], filter(x.s, size1))'	0:exists(%s, %s);4:nand[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(circle,iota(filter(filter(filter(filter(x.s, and[green,or[size1,or[size2,or[and[rectangle,size1],green]]]]), and[triangle,and[green,yellow]]), not[circle]), apply(same_shape,x.o))))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:or[%s,%s];4:size1;4:or[%s,%s];4:size2;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:size1;4:green;4:and[%s,%s];4:triangle;4:and[%s,%s];4:green;4:yellow;4:not[%s];4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(iff[triangle,and[and[size3,size3],size3]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:triangle;4:and[%s,%s];4:and[%s,%s];4:size3;4:size3;4:size3;1:%s.o;2:x
'λx.empty(filter(filter(x.s, rectangle), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle
'λx.apply(not[not[size1]],iota(filter(filter(filter(filter(filter(filter(x.s, and[size3,size3]), green), rectangle), circle), and[size2,and[size2,apply(same_shape,iota(filter(x.s, triangle)))]]), not[blue])))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:size3;4:green;4:rectangle;4:circle;4:and[%s,%s];4:size2;4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:not[%s];4:blue
'λx.forall(circle,filter(x.s, or[apply(size-geq,iota(x.s)),blue]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:blue
'λx.exists(and[rectangle,circle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:rectangle;4:circle;3:%s.s;2:x
'λx.forall(not[triangle],x.s)'	0:forall(%s,%s);4:not[%s];4:triangle;3:%s.s;2:x
'λx.forall(size3,filter(filter(x.s, rectangle), circle))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle
'λx.contains(x.o, filter(filter(filter(x.s, green), implies[size1,rectangle]), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:implies[%s,%s];4:size1;4:rectangle;4:green
'λx.apply(apply(same_size,iota(filter(filter(filter(filter(filter(x.s, apply(same_shape,x.o)), size2), and[yellow,apply(same_color,iota(filter(filter(x.s, blue), yellow)))]), size2), nand[nor[not[not[triangle]],yellow],and[size1,iff[blue,circle]]]))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2;4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow;4:size2;4:nand[%s,%s];4:nor[%s,%s];4:not[%s];4:not[%s];4:triangle;4:yellow;4:and[%s,%s];4:size1;4:iff[%s,%s];4:blue;4:circle;1:iota(%s);3:%s.s;2:x
'λx.exists(size3, filter(filter(x.s, circle), and[yellow,size2]))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:yellow;4:size2
'λx.apply(and[size1,apply(size-gt,iota(filter(x.s, not[nor[size2,yellow]])))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:nor[%s,%s];4:size2;4:yellow;1:%s.o;2:x
'λx.apply(not[nor[not[size1],triangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:nor[%s,%s];4:not[%s];4:size1;4:triangle;1:%s.o;2:x
'λx.apply(implies[and[rectangle,size3],rectangle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:rectangle;4:size3;4:rectangle;1:%s.o;2:x
'λx.apply(nor[nand[apply(same_size,x.o),green],rectangle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:nand[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;4:rectangle;1:%s.o;2:x
'λx.exists(and[size3,apply(same_color,iota(x.s))], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(and[or[blue,nor[yellow,and[yellow,green]]],and[rectangle,size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:blue;4:nor[%s,%s];4:yellow;4:and[%s,%s];4:yellow;4:green;4:and[%s,%s];4:rectangle;4:size1;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, and[triangle,size1]), iff[apply(size-lt,x.o),triangle])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:size1;4:iff[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:triangle
'λx.contains(iota(filter(filter(x.s, iff[not[not[green]],nand[size2,yellow]]), blue)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:not[%s];4:not[%s];4:green;4:nand[%s,%s];4:size2;4:yellow;4:blue;3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(x.s, rectangle), size1)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1
'λx.apply(nor[and[triangle,iff[not[implies[size3,size2]],not[apply(same_shape,x.o)]]],circle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:triangle;4:iff[%s,%s];4:not[%s];4:implies[%s,%s];4:size3;4:size2;4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;1:%s.o;2:x
'λx.apply(not[or[blue,and[size3,and[rectangle,and[implies[triangle,blue],apply(same_color,iota(x.s))]]]]],iota(filter(filter(filter(filter(filter(filter(filter(x.s, blue), size1), blue), blue), rectangle), size2), apply(same_shape,x.o))))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:blue;4:and[%s,%s];4:size3;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:implies[%s,%s];4:triangle;4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1;4:blue;4:blue;4:rectangle;4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, not[yellow]), rectangle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:rectangle
'λx.apply(and[green,and[not[circle],blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:not[%s];4:circle;4:blue;1:%s.o;2:x
'λx.apply(and[size1,iff[and[green,yellow],not[not[blue]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:iff[%s,%s];4:and[%s,%s];4:green;4:yellow;4:not[%s];4:not[%s];4:blue;1:%s.o;2:x
'λx.apply(and[and[size1,size2],triangle],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:size2;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.empty(filter(x.s, green))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.empty(filter(x.s, size1))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.empty(filter(x.s, size2))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.empty(filter(x.s, size3))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(rectangle,iota(filter(filter(x.s, and[apply(same_color,iota(filter(filter(filter(filter(x.s, size3), and[apply(same_size,x.o),blue]), circle), not[circle]))),circle]), or[circle,apply(size-leq,iota(filter(filter(x.s, or[or[and[yellow,not[circle]],and[yellow,circle]],size1]), size3)))])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;4:circle;4:not[%s];4:circle;4:circle;4:or[%s,%s];4:circle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:yellow;4:not[%s];4:circle;4:and[%s,%s];4:yellow;4:circle;4:size1;4:size3
'λx.empty(filter(x.s, or[and[rectangle,size3],and[and[circle,triangle],or[not[blue],circle]]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:size3;4:and[%s,%s];4:and[%s,%s];4:circle;4:triangle;4:or[%s,%s];4:not[%s];4:blue;4:circle
'λx.apply(size2,iota(filter(x.s, size2)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(size2,iota(filter(x.s, size1)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(size2,iota(filter(x.s, size3)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(size3,iota(filter(x.s, size2)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(size3,iota(filter(x.s, size1)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(size3,iota(filter(x.s, size3)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(size1,iota(filter(x.s, size2)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(size1,iota(filter(x.s, size1)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(size1,iota(filter(x.s, size3)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(size1,iota(filter(x.s, green)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(size3,iota(filter(x.s, green)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(size2,iota(filter(x.s, green)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.forall(triangle,filter(x.s, yellow))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.forall(blue,filter(filter(x.s, implies[triangle,size1]), green))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:triangle;4:size1;4:green
'λx.apply(not[and[rectangle,nor[circle,rectangle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:rectangle;4:nor[%s,%s];4:circle;4:rectangle;1:%s.o;2:x
'λx.exists(blue, filter(x.s, blue))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[not[not[green]],yellow],iota(filter(filter(x.s, circle), not[rectangle])))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:not[%s];4:green;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:rectangle
'λx.apply(yellow,iota(filter(filter(x.s, blue), circle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle
'λx.apply(iff[green,yellow],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:green;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(or[not[or[apply(same_size,x.o),size1]],apply(same_shape,x.o)],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.forall(blue,filter(filter(filter(x.s, circle), size1), yellow))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1;4:yellow
'λx.exists(triangle, filter(x.s, and[blue,rectangle]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:rectangle
'λx.apply(size1,iota(filter(filter(x.s, yellow), iff[yellow,or[apply(same_color,iota(filter(filter(filter(x.s, size1), not[and[nand[yellow,size2],yellow]]), size1))),blue]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:iff[%s,%s];4:yellow;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:not[%s];4:and[%s,%s];4:nand[%s,%s];4:yellow;4:size2;4:yellow;4:size1;4:blue
'λx.forall(size1,filter(filter(filter(x.s, not[yellow]), blue), not[green]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:blue;4:not[%s];4:green
'λx.exists(and[and[circle,yellow],or[blue,circle]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:circle;4:yellow;4:or[%s,%s];4:blue;4:circle;3:%s.s;2:x
'λx.forall(implies[apply(size-gt,iota(filter(filter(x.s, circle), size2))),yellow],filter(x.s, implies[and[implies[size3,or[green,apply(same_color,x.o)]],triangle],apply(same_color,iota(filter(filter(x.s, implies[not[size3],rectangle]), apply(same_color,iota(x.s)))))]))'	0:forall(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size2;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:size3;4:or[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:not[%s];4:size3;4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(x.s, size1)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(green,iota(filter(x.s, size2)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(green,iota(filter(x.s, size3)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(green,iota(filter(x.s, green)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(or[rectangle,circle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_size,iota(filter(filter(x.s, triangle), and[apply(same_size,iota(filter(filter(x.s, yellow), green))),size1]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green;4:size1;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(x.s, green), size1)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1
'λx.forall(triangle,filter(x.s, blue))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(nor[green,not[apply(size-lt,x.o)]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:green;4:not[%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(implies[iff[circle,or[triangle,size1]],apply(same_size,x.o)],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:iff[%s,%s];4:circle;4:or[%s,%s];4:triangle;4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.contains(x.o, filter(filter(filter(filter(x.s, apply(same_shape,iota(x.s))), triangle), nor[size3,and[not[or[or[not[not[triangle]],rectangle],size2]],size2]]), iff[circle,and[blue,apply(size-lt,iota(x.s))]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle;4:nor[%s,%s];4:size3;4:and[%s,%s];4:not[%s];4:or[%s,%s];4:or[%s,%s];4:not[%s];4:not[%s];4:triangle;4:rectangle;4:size2;4:size2;4:iff[%s,%s];4:circle;4:and[%s,%s];4:blue;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x
'λx.forall(iff[size3,or[circle,size1]],filter(x.s, circle))'	0:forall(%s,%s);4:iff[%s,%s];4:size3;4:or[%s,%s];4:circle;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[not[size2],apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.exists(implies[size1,size3], x.s)'	0:exists(%s, %s);4:implies[%s,%s];4:size1;4:size3;3:%s.s;2:x
'λx.apply(blue,iota(filter(x.s, or[yellow,not[and[size3,size2]]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:not[%s];4:and[%s,%s];4:size3;4:size2
'λx.apply(green,x.o)'	0:apply(%s,%s);4:green;1:%s.o;2:x
'λx.contains(x.o, filter(filter(filter(x.s, yellow), and[size1,apply(same_shape,iota(filter(filter(x.s, or[rectangle,circle]), rectangle)))]), size1))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:circle;4:rectangle;4:size1
'λx.apply(or[or[blue,circle],triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:blue;4:circle;4:triangle;1:%s.o;2:x
'λx.apply(triangle,iota(filter(x.s, iff[or[size2,apply(same_color,x.o)],not[not[blue]]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:not[%s];4:blue
'λx.apply(and[and[triangle,apply(same_color,iota(filter(filter(filter(filter(x.s, not[yellow]), rectangle), or[apply(same_shape,iota(x.s)),iff[not[implies[yellow,or[and[size2,green],or[not[yellow],not[size3]]]]],and[blue,and[triangle,apply(size-gt,x.o)]]]]), size2)))],size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:rectangle;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:iff[%s,%s];4:not[%s];4:implies[%s,%s];4:yellow;4:or[%s,%s];4:and[%s,%s];4:size2;4:green;4:or[%s,%s];4:not[%s];4:yellow;4:not[%s];4:size3;4:and[%s,%s];4:blue;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:size2;4:size1;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(filter(x.s, yellow), size1), and[and[apply(size-leq,x.o),nor[yellow,or[size1,and[green,and[green,apply(size-leq,x.o)]]]]],rectangle]), apply(same_size,iota(filter(x.s, triangle)))))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:nor[%s,%s];4:yellow;4:or[%s,%s];4:size1;4:and[%s,%s];4:green;4:and[%s,%s];4:green;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(and[size1,rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:rectangle;1:%s.o;2:x
'λx.exists(circle, filter(x.s, and[not[implies[apply(size-leq,x.o),not[apply(same_size,x.o)]]],and[nand[size2,not[and[size2,or[blue,triangle]]]],apply(same_color,iota(filter(filter(filter(x.s, green), triangle), rectangle)))]]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:implies[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:nand[%s,%s];4:size2;4:not[%s];4:and[%s,%s];4:size2;4:or[%s,%s];4:blue;4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:triangle;4:rectangle
'λx.apply(or[apply(same_size,x.o),yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow;1:%s.o;2:x
'λx.apply(or[yellow,not[triangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:not[%s];4:triangle;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(filter(x.s, not[not[apply(same_size,iota(x.s))]]), size1), yellow)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size1;4:yellow
'λx.empty(filter(x.s, and[not[circle],yellow]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:circle;4:yellow
'λx.apply(and[green,or[circle,size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:or[%s,%s];4:circle;4:size3;1:%s.o;2:x
'λx.forall(nand[apply(same_size,x.o),size3],filter(x.s, green))'	0:forall(%s,%s);4:nand[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.exists(nand[size3,or[or[and[nand[not[yellow],size1],size2],apply(same_shape,iota(filter(filter(x.s, implies[implies[not[circle],blue],yellow]), apply(size-geq,x.o))))],apply(same_shape,x.o)]], x.s)'	0:exists(%s, %s);4:nand[%s,%s];4:size3;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:not[%s];4:yellow;4:size1;4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:implies[%s,%s];4:not[%s];4:circle;4:blue;4:yellow;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(iff[size3,triangle],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:size3;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[apply(same_size,x.o),size3],iota(filter(x.s, and[and[and[size3,rectangle],triangle],not[size3]])))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:rectangle;4:triangle;4:not[%s];4:size3
'λx.apply(and[circle,blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(x.s), filter(filter(filter(x.s, green), or[blue,or[size1,blue]]), triangle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:blue;4:or[%s,%s];4:size1;4:blue;4:triangle
'λx.apply(iff[apply(size-lt,x.o),apply(same_shape,x.o)],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.forall(size3,filter(x.s, not[or[not[apply(same_color,iota(filter(filter(filter(x.s, implies[apply(same_size,iota(x.s)),iff[rectangle,green]]), triangle), size1)))],or[triangle,or[and[size3,apply(same_color,iota(x.s))],implies[circle,circle]]]]]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:iff[%s,%s];4:rectangle;4:green;4:triangle;4:size1;4:or[%s,%s];4:triangle;4:or[%s,%s];4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:implies[%s,%s];4:circle;4:circle
'λx.contains(x.o, filter(filter(filter(filter(x.s, yellow), and[triangle,size3]), green), size2))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:triangle;4:size3;4:green;4:size2
'λx.empty(filter(filter(x.s, yellow), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle
'λx.apply(apply(same_shape,x.o),iota(filter(filter(x.s, circle), size1)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1
'λx.apply(iff[size3,rectangle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:size3;4:rectangle;1:%s.o;2:x
'λx.apply(size2,x.o)'	0:apply(%s,%s);4:size2;1:%s.o;2:x
'λx.apply(size3,x.o)'	0:apply(%s,%s);4:size3;1:%s.o;2:x
'λx.apply(size1,x.o)'	0:apply(%s,%s);4:size1;1:%s.o;2:x
'λx.exists(and[size3,apply(same_size,x.o)], filter(filter(filter(x.s, blue), size1), yellow))'	0:exists(%s, %s);4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1;4:yellow
'λx.apply(nand[not[blue],rectangle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:not[%s];4:blue;4:rectangle;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(filter(filter(x.s, not[size3]), not[rectangle]), nand[size3,size3]), nor[triangle,size1])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;4:not[%s];4:rectangle;4:nand[%s,%s];4:size3;4:size3;4:nor[%s,%s];4:triangle;4:size1
'λx.empty(filter(filter(filter(filter(filter(x.s, green), and[and[size1,or[size2,green]],rectangle]), and[triangle,and[green,size3]]), rectangle), or[implies[circle,and[and[implies[apply(size-leq,iota(x.s)),not[yellow]],apply(same_size,iota(filter(filter(filter(x.s, size1), nor[circle,or[apply(size-gt,x.o),rectangle]]), and[or[circle,and[triangle,size1]],size2])))],apply(same_size,x.o)]],circle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:size2;4:green;4:rectangle;4:and[%s,%s];4:triangle;4:and[%s,%s];4:green;4:size3;4:rectangle;4:or[%s,%s];4:implies[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:not[%s];4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:nor[%s,%s];4:circle;4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:rectangle;4:and[%s,%s];4:or[%s,%s];4:circle;4:and[%s,%s];4:triangle;4:size1;4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle
'λx.apply(and[and[blue,or[and[or[circle,apply(same_color,iota(x.s))],and[or[rectangle,yellow],green]],and[rectangle,nor[triangle,rectangle]]]],and[size1,triangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:yellow;4:green;4:and[%s,%s];4:rectangle;4:nor[%s,%s];4:triangle;4:rectangle;4:and[%s,%s];4:size1;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(x.s, size1), or[size1,and[blue,green]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:or[%s,%s];4:size1;4:and[%s,%s];4:blue;4:green
'λx.apply(rectangle,iota(filter(filter(filter(filter(filter(x.s, size2), size2), yellow), green), apply(size-geq,x.o))))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2;4:yellow;4:green;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.apply(and[and[blue,triangle],or[not[circle],size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:triangle;4:or[%s,%s];4:not[%s];4:circle;4:size2;1:%s.o;2:x
'λx.apply(or[rectangle,not[implies[circle,or[size1,size2]]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:not[%s];4:implies[%s,%s];4:circle;4:or[%s,%s];4:size1;4:size2;1:%s.o;2:x
'λx.empty(filter(x.s, apply(size-gt,x.o)))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.empty(filter(x.s, apply(same_shape,iota(x.s))))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[circle,blue],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:circle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(not[or[and[and[apply(same_size,iota(filter(x.s, iff[apply(size-lt,iota(filter(filter(x.s, blue), triangle))),apply(same_shape,x.o)]))),green],green],not[apply(same_color,x.o)]]],iota(filter(filter(x.s, or[green,apply(same_color,x.o)]), size1)))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green;4:green;4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1
'λx.apply(size2,iota(filter(x.s, or[blue,size1])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:size1
'λx.exists(yellow, filter(x.s, size1))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(yellow, filter(x.s, size2))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.exists(yellow, filter(x.s, green))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(apply(same_size,x.o),iota(filter(filter(x.s, or[size3,size1]), and[size1,or[yellow,size1]])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:size1;4:and[%s,%s];4:size1;4:or[%s,%s];4:yellow;4:size1
'λx.apply(iff[size3,rectangle],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:iff[%s,%s];4:size3;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.contains(iota(filter(filter(x.s, or[apply(same_shape,iota(x.s)),and[circle,rectangle]]), yellow)), filter(x.s, size1))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:rectangle;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.forall(size2,filter(x.s, apply(size-gt,x.o)))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.apply(and[size1,blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:blue;1:iota(%s);3:%s.s;2:x
'λx.exists(and[size2,yellow], filter(x.s, green))'	0:exists(%s, %s);4:and[%s,%s];4:size2;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(yellow,iota(filter(filter(filter(x.s, yellow), blue), rectangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:blue;4:rectangle
'λx.empty(filter(filter(filter(x.s, rectangle), and[yellow,not[circle]]), apply(same_color,x.o)))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:yellow;4:not[%s];4:circle;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(iff[yellow,circle],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:yellow;4:circle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, triangle), apply(same_size,iota(x.s))), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:yellow
'λx.apply(and[size2,blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(not[and[green,size2]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:green;4:size2;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, nor[and[and[circle,green],circle],green])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:green;4:circle;4:green
'λx.contains(iota(filter(filter(filter(x.s, or[green,and[size1,size3]]), and[size1,triangle]), apply(size-geq,iota(x.s)))), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:and[%s,%s];4:size1;4:size3;4:and[%s,%s];4:size1;4:triangle;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(and[apply(same_shape,x.o),and[size2,triangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:size2;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(filter(filter(filter(filter(filter(filter(x.s, or[apply(same_size,iota(x.s)),or[and[blue,yellow],green]]), and[triangle,rectangle]), yellow), green), yellow), circle), apply(same_shape,iota(filter(filter(filter(filter(x.s, and[and[size1,size2],rectangle]), circle), size3), green)))), apply(same_size,iota(x.s)))))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:blue;4:yellow;4:green;4:and[%s,%s];4:triangle;4:rectangle;4:yellow;4:green;4:yellow;4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size1;4:size2;4:rectangle;4:circle;4:size3;4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, and[circle,and[or[not[size1],green],green]]), size1)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:size1;4:green;4:green;4:size1
'λx.empty(filter(x.s, or[rectangle,size3]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:size3
'λx.apply(and[size3,blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_size,x.o),iota(filter(filter(filter(x.s, or[or[yellow,yellow],yellow]), apply(same_color,x.o)), nor[rectangle,or[size1,rectangle]])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:yellow;4:yellow;4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:nor[%s,%s];4:rectangle;4:or[%s,%s];4:size1;4:rectangle
'λx.exists(rectangle, filter(filter(filter(filter(filter(filter(x.s, yellow), blue), size2), and[triangle,size2]), rectangle), apply(size-lt,iota(filter(x.s, apply(same_size,x.o))))))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:blue;4:size2;4:and[%s,%s];4:triangle;4:size2;4:rectangle;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(and[green,not[triangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:not[%s];4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[nand[nor[yellow,size2],triangle]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:not[%s];4:nand[%s,%s];4:nor[%s,%s];4:yellow;4:size2;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(size1,iota(filter(filter(x.s, green), blue)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue
'λx.apply(implies[or[yellow,apply(same_size,x.o)],size3],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:or[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;1:%s.o;2:x
'λx.apply(or[blue,size3],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(or[blue,size1],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(not[not[blue]],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.exists(yellow, filter(x.s, apply(same_size,x.o)))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(x.s, yellow), blue)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:blue
'λx.apply(not[not[size3]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(not[not[size2]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(or[or[and[and[green,or[size3,and[and[and[size3,green],size1],circle]]],apply(same_color,x.o)],apply(same_color,iota(filter(filter(filter(x.s, triangle), and[green,not[and[apply(same_color,x.o),nor[rectangle,blue]]]]), and[size3,rectangle])))],size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:or[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:green;4:size1;4:circle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:green;4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:nor[%s,%s];4:rectangle;4:blue;4:and[%s,%s];4:size3;4:rectangle;4:size2;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, and[size3,rectangle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:rectangle
'λx.apply(nor[size1,rectangle],iota(filter(filter(x.s, yellow), not[and[green,size2]])))'	0:apply(%s,%s);4:nor[%s,%s];4:size1;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:and[%s,%s];4:green;4:size2
'λx.apply(and[size1,nor[size2,and[size1,apply(same_color,x.o)]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:nor[%s,%s];4:size2;4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(or[blue,and[size3,triangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:and[%s,%s];4:size3;4:triangle;1:%s.o;2:x
'λx.apply(or[size2,and[or[and[circle,and[apply(same_color,x.o),triangle]],not[green]],apply(size-lt,x.o)]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;4:not[%s];4:green;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(not[or[not[and[circle,blue]],implies[rectangle,green]]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:not[%s];4:and[%s,%s];4:circle;4:blue;4:implies[%s,%s];4:rectangle;4:green;1:%s.o;2:x
'λx.apply(and[rectangle,and[blue,not[triangle]]],iota(filter(filter(x.s, circle), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:blue;4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue
'λx.forall(or[nand[apply(size-geq,iota(x.s)),not[not[not[yellow]]]],blue],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:not[%s];4:not[%s];4:not[%s];4:yellow;4:blue;3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(filter(x.s, triangle), and[not[triangle],green]), apply(size-leq,x.o))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:not[%s];4:triangle;4:green;4:apply(%s,%s);5:size-leq;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, and[and[iff[not[and[circle,and[circle,green]]],and[blue,green]],or[apply(same_size,iota(x.s)),and[size3,blue]]],circle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:not[%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:circle;4:green;4:and[%s,%s];4:blue;4:green;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:blue;4:circle
'λx.apply(nor[nand[size1,or[blue,size1]],not[and[apply(same_shape,iota(x.s)),triangle]]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:nand[%s,%s];4:size1;4:or[%s,%s];4:blue;4:size1;4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, green), blue)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue
'λx.apply(not[green],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[implies[circle,or[circle,green]],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:circle;4:or[%s,%s];4:circle;4:green;4:size2;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(x.s, not[circle]), size3)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:size3
'λx.apply(circle,iota(filter(x.s, and[triangle,yellow])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:yellow
'λx.apply(and[apply(same_shape,x.o),size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;1:%s.o;2:x
'λx.apply(and[not[green],apply(same_shape,x.o)],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.exists(or[size2,and[size3,blue]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:size2;4:and[%s,%s];4:size3;4:blue;3:%s.s;2:x
'λx.contains(iota(filter(x.s, apply(same_shape,x.o))), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(nor[and[triangle,size1],rectangle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:triangle;4:size1;4:rectangle;1:%s.o;2:x
'λx.forall(apply(same_shape,x.o),filter(filter(filter(x.s, or[circle,or[blue,rectangle]]), triangle), iff[rectangle,and[triangle,yellow]]))'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:or[%s,%s];4:blue;4:rectangle;4:triangle;4:iff[%s,%s];4:rectangle;4:and[%s,%s];4:triangle;4:yellow
'λx.apply(and[apply(same_shape,iota(x.s)),apply(same_color,iota(filter(x.s, nor[circle,not[triangle]])))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:circle;4:not[%s];4:triangle;1:%s.o;2:x
'λx.exists(yellow, filter(filter(filter(filter(filter(x.s, size1), blue), and[size1,rectangle]), and[rectangle,circle]), not[rectangle]))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue;4:and[%s,%s];4:size1;4:rectangle;4:and[%s,%s];4:rectangle;4:circle;4:not[%s];4:rectangle
'λx.apply(size1,iota(filter(x.s, and[apply(size-lt,iota(filter(x.s, triangle))),yellow])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:yellow
'λx.contains(iota(filter(filter(x.s, circle), yellow)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow;3:%s.s;2:x
'λx.apply(nor[green,apply(size-leq,x.o)],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:green;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:%s.o;2:x
'λx.forall(or[size3,blue],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:size3;4:blue;3:%s.s;2:x
'λx.apply(and[size3,and[apply(same_shape,iota(filter(x.s, size3))),green]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(or[and[and[apply(same_color,x.o),apply(same_shape,iota(x.s))],triangle],circle],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(apply(same_size,iota(filter(x.s, or[green,and[yellow,size2]]))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:and[%s,%s];4:yellow;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[apply(same_size,x.o),and[and[apply(same_color,x.o),implies[rectangle,triangle]],not[green]]],iota(filter(x.s, apply(size-geq,iota(x.s)))))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:implies[%s,%s];4:rectangle;4:triangle;4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[and[size3,yellow],green],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:size3;4:yellow;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(or[and[blue,size1],not[triangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:blue;4:size1;4:not[%s];4:triangle;1:%s.o;2:x
'λx.exists(apply(same_color,iota(x.s)), filter(filter(filter(x.s, and[or[rectangle,green],yellow]), yellow), circle))'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:green;4:yellow;4:yellow;4:circle
'λx.apply(or[circle,triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:triangle;1:%s.o;2:x
'λx.apply(triangle,iota(filter(x.s, and[green,blue])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:blue
'λx.apply(iff[triangle,triangle],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:triangle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.exists(and[and[green,size2],nor[and[circle,rectangle],or[apply(size-gt,x.o),rectangle]]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:green;4:size2;4:nor[%s,%s];4:and[%s,%s];4:circle;4:rectangle;4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:rectangle;3:%s.s;2:x
'λx.apply(iff[apply(same_color,iota(x.s)),and[nor[rectangle,and[rectangle,apply(size-gt,iota(filter(x.s, size3)))]],green]],iota(filter(filter(x.s, rectangle), size1)))'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:rectangle;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1
'λx.apply(triangle,iota(filter(x.s, and[blue,and[apply(same_shape,x.o),and[yellow,blue]]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:yellow;4:blue
'λx.apply(not[circle],iota(filter(filter(filter(filter(x.s, blue), size1), triangle), size2)))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1;4:triangle;4:size2
'λx.apply(or[apply(same_shape,x.o),nor[apply(same_color,iota(x.s)),apply(same_color,x.o)]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:nor[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.forall(size1,filter(x.s, or[size3,and[triangle,and[and[blue,implies[circle,not[or[and[nand[blue,not[green]],or[circle,and[and[apply(same_shape,iota(filter(filter(filter(x.s, nor[triangle,nor[not[size1],size1]]), size2), triangle))),or[nor[or[blue,size3],and[size3,and[circle,size3]]],blue]],circle]]],rectangle]]]],and[yellow,size3]]]]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:and[%s,%s];4:triangle;4:and[%s,%s];4:and[%s,%s];4:blue;4:implies[%s,%s];4:circle;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:blue;4:not[%s];4:green;4:or[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:triangle;4:nor[%s,%s];4:not[%s];4:size1;4:size1;4:size2;4:triangle;4:or[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:blue;4:size3;4:and[%s,%s];4:size3;4:and[%s,%s];4:circle;4:size3;4:blue;4:circle;4:rectangle;4:and[%s,%s];4:yellow;4:size3
'λx.apply(size3,iota(filter(x.s, nor[size2,circle])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size2;4:circle
'λx.apply(and[and[blue,and[apply(same_shape,iota(x.s)),size3]],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size3;4:size3;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, nor[and[triangle,circle],circle])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:and[%s,%s];4:triangle;4:circle;4:circle
'λx.apply(and[green,apply(same_shape,iota(filter(filter(x.s, blue), circle)))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, rectangle), not[and[and[not[or[size2,circle]],yellow],blue]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:or[%s,%s];4:size2;4:circle;4:yellow;4:blue
'λx.contains(iota(filter(filter(filter(filter(x.s, apply(same_shape,x.o)), yellow), green), size1)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow;4:green;4:size1;3:%s.s;2:x
'λx.apply(and[size1,and[and[not[blue],triangle],triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:blue;4:triangle;4:triangle;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, and[or[or[blue,triangle],and[green,implies[size2,size3]]],blue]), and[or[yellow,circle],blue]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:blue;4:triangle;4:and[%s,%s];4:green;4:implies[%s,%s];4:size2;4:size3;4:blue;4:and[%s,%s];4:or[%s,%s];4:yellow;4:circle;4:blue
'λx.apply(apply(size-lt,x.o),iota(filter(x.s, blue)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(not[triangle],iota(filter(filter(x.s, green), size3)))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size3
'λx.apply(or[and[apply(same_color,x.o),apply(same_size,iota(x.s))],yellow],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(or[nor[green,size1],triangle],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:or[%s,%s];4:nor[%s,%s];4:green;4:size1;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(and[and[not[size3],size1],and[yellow,size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size3;4:size1;4:and[%s,%s];4:yellow;4:size1;1:%s.o;2:x
'λx.apply(not[rectangle],iota(filter(filter(filter(x.s, green), size1), apply(same_color,x.o))))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(nor[blue,rectangle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:blue;4:rectangle;1:%s.o;2:x
'λx.apply(not[size2],iota(filter(x.s, and[size3,size3])))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:size3
'λx.apply(circle,iota(filter(x.s, apply(same_color,x.o))))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, iff[triangle,size2]), size2)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:triangle;4:size2;4:size2
'λx.forall(circle,filter(x.s, blue))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(or[size1,size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:size1;1:%s.o;2:x
'λx.apply(or[size1,size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:size3;1:%s.o;2:x
'λx.apply(and[circle,blue],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(or[size2,size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:size1;1:%s.o;2:x
'λx.apply(or[size2,size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:size3;1:%s.o;2:x
'λx.apply(or[size2,size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:size2;1:%s.o;2:x
'λx.apply(and[circle,apply(same_color,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(and[not[circle],not[apply(same_shape,x.o)]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:circle;4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.forall(and[blue,size2],filter(x.s, blue))'	0:forall(%s,%s);4:and[%s,%s];4:blue;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(size1,iota(filter(x.s, not[not[size3]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:size3
'λx.apply(size1,iota(filter(filter(x.s, triangle), or[circle,blue])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:or[%s,%s];4:circle;4:blue
'λx.apply(not[green],iota(filter(filter(x.s, blue), size2)))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2
'λx.forall(size1,filter(filter(filter(x.s, not[or[not[or[and[yellow,not[size1]],triangle]],size2]]), blue), implies[size1,green]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:not[%s];4:or[%s,%s];4:and[%s,%s];4:yellow;4:not[%s];4:size1;4:triangle;4:size2;4:blue;4:implies[%s,%s];4:size1;4:green
'λx.apply(apply(same_size,iota(filter(x.s, apply(same_size,x.o)))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_shape,iota(filter(x.s, and[green,and[or[apply(same_color,x.o),size2],and[or[and[blue,apply(same_shape,x.o)],size2],size1]]]))),iota(filter(filter(filter(filter(x.s, or[and[green,and[and[blue,and[blue,and[size1,size3]]],size3]],circle]), not[size2]), and[rectangle,and[size3,green]]), rectangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size2;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:blue;4:and[%s,%s];4:size1;4:size3;4:size3;4:circle;4:not[%s];4:size2;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:size3;4:green;4:rectangle
'λx.apply(circle,iota(filter(filter(x.s, nor[or[and[and[size2,implies[yellow,yellow]],and[and[apply(same_size,iota(filter(x.s, size2))),nand[rectangle,not[yellow]]],and[green,and[size2,size3]]]],or[blue,and[blue,or[green,implies[and[or[circle,size1],apply(size-geq,iota(x.s))],green]]]]],green]), size1)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:implies[%s,%s];4:yellow;4:yellow;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:nand[%s,%s];4:rectangle;4:not[%s];4:yellow;4:and[%s,%s];4:green;4:and[%s,%s];4:size2;4:size3;4:or[%s,%s];4:blue;4:and[%s,%s];4:blue;4:or[%s,%s];4:green;4:implies[%s,%s];4:and[%s,%s];4:or[%s,%s];4:circle;4:size1;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:green;4:green;4:size1
'λx.apply(nor[iff[and[circle,yellow],circle],and[circle,or[apply(same_shape,x.o),apply(same_shape,x.o)]]],iota(filter(filter(x.s, iff[yellow,size3]), blue)))'	0:apply(%s,%s);4:nor[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:circle;4:yellow;4:circle;4:and[%s,%s];4:circle;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:yellow;4:size3;4:blue
'λx.apply(iff[rectangle,or[rectangle,nand[size1,size3]]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:rectangle;4:or[%s,%s];4:rectangle;4:nand[%s,%s];4:size1;4:size3;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, size3)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(rectangle,iota(filter(x.s, size1)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(rectangle,iota(filter(x.s, size2)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(rectangle,iota(filter(x.s, green)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(nand[triangle,and[size3,size2]],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:and[%s,%s];4:size3;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(filter(x.s, yellow), circle), blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle;4:blue
'λx.empty(filter(filter(x.s, not[triangle]), iff[size1,size2]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:iff[%s,%s];4:size1;4:size2
'λx.contains(iota(filter(x.s, blue)), filter(x.s, or[size3,implies[circle,apply(same_size,x.o)]]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:implies[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.forall(size1,filter(filter(x.s, yellow), size3))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size3
'λx.exists(rectangle, filter(filter(x.s, size1), blue))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue
'λx.apply(and[size3,iff[not[implies[circle,and[apply(same_shape,iota(x.s)),green]]],apply(size-geq,iota(filter(x.s, not[nor[size2,and[not[not[blue]],not[circle]]]])))]],iota(filter(filter(x.s, green), or[size3,size2])))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:iff[%s,%s];4:not[%s];4:implies[%s,%s];4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:nor[%s,%s];4:size2;4:and[%s,%s];4:not[%s];4:not[%s];4:blue;4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:size3;4:size2
'λx.forall(and[triangle,apply(same_color,iota(x.s))],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.exists(green, filter(filter(filter(x.s, size1), rectangle), not[triangle]))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle;4:not[%s];4:triangle
'λx.apply(iff[yellow,or[green,blue]],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:yellow;4:or[%s,%s];4:green;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(and[rectangle,or[size2,size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:or[%s,%s];4:size2;4:size1;1:%s.o;2:x
'λx.forall(and[size1,and[and[rectangle,green],size3]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:green;4:size3;3:%s.s;2:x
'λx.forall(or[yellow,size3],filter(x.s, yellow))'	0:forall(%s,%s);4:or[%s,%s];4:yellow;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(nor[and[triangle,rectangle],circle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:triangle;4:rectangle;4:circle;1:%s.o;2:x
'λx.apply(or[not[circle],yellow],iota(filter(filter(x.s, size1), size1)))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:circle;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1
'λx.apply(apply(same_size,iota(filter(x.s, yellow))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;1:%s.o;2:x
'λx.apply(not[blue],iota(filter(filter(x.s, size1), size3)))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size3
'λx.contains(iota(x.s), filter(filter(x.s, or[blue,triangle]), blue))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:triangle;4:blue
'λx.apply(circle,iota(filter(x.s, and[or[size2,size3],yellow])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:size2;4:size3;4:yellow
'λx.empty(filter(x.s, and[size1,rectangle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:rectangle
'λx.apply(or[or[nor[and[and[green,or[size2,size2]],yellow],and[size1,size2]],not[and[and[and[circle,not[size3]],green],and[circle,or[blue,size1]]]]],or[blue,size2]],iota(filter(filter(filter(x.s, and[green,size3]), and[and[size2,size2],not[green]]), size2)))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:or[%s,%s];4:size2;4:size2;4:yellow;4:and[%s,%s];4:size1;4:size2;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:not[%s];4:size3;4:green;4:and[%s,%s];4:circle;4:or[%s,%s];4:blue;4:size1;4:or[%s,%s];4:blue;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:size3;4:and[%s,%s];4:and[%s,%s];4:size2;4:size2;4:not[%s];4:green;4:size2
'λx.forall(blue,filter(filter(filter(x.s, circle), size2), size1))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size2;4:size1
'λx.exists(and[circle,and[circle,and[rectangle,blue]]], filter(filter(filter(x.s, circle), iff[yellow,size3]), blue))'	0:exists(%s, %s);4:and[%s,%s];4:circle;4:and[%s,%s];4:circle;4:and[%s,%s];4:rectangle;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:iff[%s,%s];4:yellow;4:size3;4:blue
'λx.exists(not[and[green,circle]], filter(filter(x.s, not[apply(same_color,iota(x.s))]), rectangle))'	0:exists(%s, %s);4:not[%s];4:and[%s,%s];4:green;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:rectangle
'λx.apply(triangle,iota(filter(filter(x.s, green), or[nand[blue,triangle],circle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:nand[%s,%s];4:blue;4:triangle;4:circle
'λx.forall(blue,filter(filter(filter(filter(filter(x.s, blue), yellow), nand[size1,apply(same_size,x.o)]), size3), or[not[not[and[and[rectangle,size2],size1]]],circle]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow;4:nand[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;4:or[%s,%s];4:not[%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size2;4:size1;4:circle
'λx.apply(or[triangle,apply(size-geq,x.o)],iota(filter(filter(x.s, not[green]), size2)))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:size2
'λx.apply(size1,iota(filter(filter(filter(filter(x.s, circle), blue), rectangle), not[blue])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue;4:rectangle;4:not[%s];4:blue
'λx.forall(size1,filter(x.s, yellow))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.forall(size2,filter(x.s, yellow))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.exists(blue, filter(x.s, apply(size-geq,iota(filter(x.s, yellow)))))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(nand[yellow,nand[and[and[size1,circle],size2],implies[iff[and[triangle,size1],rectangle],blue]]],iota(filter(filter(x.s, implies[apply(size-lt,iota(x.s)),or[size2,green]]), size1)))'	0:apply(%s,%s);4:nand[%s,%s];4:yellow;4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:circle;4:size2;4:implies[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:triangle;4:size1;4:rectangle;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:green;4:size1
'λx.apply(and[and[size2,yellow],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size2;4:yellow;4:blue;1:%s.o;2:x
'λx.apply(apply(same_color,x.o),iota(filter(filter(filter(x.s, size1), and[or[size2,blue],and[apply(same_size,iota(x.s)),green]]), and[size1,and[and[rectangle,circle],rectangle]])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:or[%s,%s];4:size2;4:blue;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:green;4:and[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:circle;4:rectangle
'λx.apply(nor[circle,rectangle],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:circle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[yellow,circle],iota(filter(filter(x.s, blue), not[or[and[implies[size1,not[circle]],yellow],and[or[size3,implies[triangle,apply(same_color,x.o)]],apply(size-geq,x.o)]]])))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:size1;4:not[%s];4:circle;4:yellow;4:and[%s,%s];4:or[%s,%s];4:size3;4:implies[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, and[or[blue,apply(same_color,iota(x.s))],size2])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size2
'λx.exists(size1, filter(filter(filter(x.s, size2), rectangle), blue))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle;4:blue
'λx.apply(blue,x.o)'	0:apply(%s,%s);4:blue;1:%s.o;2:x
'λx.apply(nand[not[circle],or[size1,triangle]],iota(filter(filter(x.s, size2), and[not[size3],and[blue,and[blue,size2]]])))'	0:apply(%s,%s);4:nand[%s,%s];4:not[%s];4:circle;4:or[%s,%s];4:size1;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:not[%s];4:size3;4:and[%s,%s];4:blue;4:and[%s,%s];4:blue;4:size2
'λx.apply(implies[blue,not[apply(size-lt,iota(x.s))]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:blue;4:not[%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(filter(filter(x.s, circle), nor[implies[size3,triangle],triangle]), implies[size2,circle]), rectangle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:nor[%s,%s];4:implies[%s,%s];4:size3;4:triangle;4:triangle;4:implies[%s,%s];4:size2;4:circle;4:rectangle
'λx.apply(and[blue,iff[triangle,blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:iff[%s,%s];4:triangle;4:blue;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(filter(x.s, size2), not[rectangle]), size1)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:not[%s];4:rectangle;4:size1
'λx.exists(or[size1,triangle], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:size1;4:triangle;3:%s.s;2:x
'λx.apply(apply(size-gt,x.o),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:%s.o;2:x
'λx.forall(triangle,filter(x.s, rectangle))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.contains(iota(filter(x.s, rectangle)), filter(filter(x.s, yellow), and[or[yellow,green],size2]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:or[%s,%s];4:yellow;4:green;4:size2
'λx.apply(or[size3,size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:size3;1:%s.o;2:x
'λx.apply(or[size3,size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:size2;1:%s.o;2:x
'λx.apply(or[size3,size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:size1;1:%s.o;2:x
'λx.exists(and[or[and[not[circle],size3],apply(same_shape,x.o)],circle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:not[%s];4:circle;4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;3:%s.s;2:x
'λx.apply(implies[and[iff[green,circle],rectangle],green],iota(filter(filter(x.s, apply(size-lt,x.o)), and[apply(size-gt,x.o),and[rectangle,size2]])))'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:green;4:circle;4:rectangle;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:and[%s,%s];4:rectangle;4:size2
'λx.apply(apply(same_color,x.o),iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(not[and[yellow,green]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:yellow;4:green;1:%s.o;2:x
'λx.exists(and[size3,or[rectangle,size1]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:size3;4:or[%s,%s];4:rectangle;4:size1;3:%s.s;2:x
'λx.contains(iota(filter(x.s, triangle)), filter(filter(x.s, or[size1,or[and[blue,and[circle,green]],circle]]), size1))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:or[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:circle;4:green;4:circle;4:size1
'λx.apply(not[iff[and[or[or[or[and[size2,or[green,or[size3,rectangle]]],triangle],size2],rectangle],circle],or[and[rectangle,circle],circle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:iff[%s,%s];4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size2;4:or[%s,%s];4:green;4:or[%s,%s];4:size3;4:rectangle;4:triangle;4:size2;4:rectangle;4:circle;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:circle;4:circle;1:%s.o;2:x
'λx.apply(or[and[and[yellow,size2],yellow],or[or[size2,apply(same_size,iota(filter(filter(x.s, or[size3,size2]), and[size2,yellow])))],green]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:size2;4:yellow;4:or[%s,%s];4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:size2;4:and[%s,%s];4:size2;4:yellow;4:green;1:iota(%s);3:%s.s;2:x
'λx.exists(nor[circle,apply(same_color,x.o)], filter(filter(x.s, size2), or[size3,circle]))'	0:exists(%s, %s);4:nor[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:size3;4:circle
'λx.apply(or[green,and[yellow,green]],iota(filter(filter(filter(filter(filter(filter(filter(x.s, and[green,blue]), rectangle), size3), size1), yellow), size3), not[triangle])))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:and[%s,%s];4:yellow;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:blue;4:rectangle;4:size3;4:size1;4:yellow;4:size3;4:not[%s];4:triangle
'λx.apply(or[and[triangle,or[size1,not[size3]]],rectangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:triangle;4:or[%s,%s];4:size1;4:not[%s];4:size3;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[apply(size-geq,x.o)],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(apply(same_color,iota(x.s)),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(or[circle,or[circle,apply(same_size,iota(filter(filter(x.s, yellow), triangle)))]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:or[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[size1,or[yellow,triangle]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:size1;4:or[%s,%s];4:yellow;4:triangle;1:%s.o;2:x
'λx.exists(nor[triangle,yellow], filter(filter(x.s, rectangle), size2))'	0:exists(%s, %s);4:nor[%s,%s];4:triangle;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2
'λx.exists(and[green,blue], filter(x.s, yellow))'	0:exists(%s, %s);4:and[%s,%s];4:green;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(or[circle,size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:size1;1:%s.o;2:x
'λx.apply(or[circle,size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:size3;1:%s.o;2:x
'λx.apply(or[and[triangle,size2],yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:triangle;4:size2;4:yellow;1:%s.o;2:x
'λx.apply(or[nor[size1,circle],blue],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:nor[%s,%s];4:size1;4:circle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(and[rectangle,not[or[yellow,size2]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:not[%s];4:or[%s,%s];4:yellow;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size2,and[yellow,apply(same_color,iota(x.s))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(or[green,not[size1]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:not[%s];4:size1;1:%s.o;2:x
'λx.apply(and[not[not[size2]],triangle],iota(filter(filter(x.s, size1), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:not[%s];4:size2;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue
'λx.apply(and[and[circle,triangle],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:triangle;4:size2;1:%s.o;2:x
'λx.exists(or[size3,not[apply(size-lt,iota(x.s))]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:size3;4:not[%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.exists(not[apply(same_shape,x.o)], filter(filter(x.s, and[size3,yellow]), size3))'	0:exists(%s, %s);4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:yellow;4:size3
'λx.apply(and[green,blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(or[and[blue,rectangle],rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:blue;4:rectangle;4:rectangle;1:%s.o;2:x
'λx.apply(not[apply(same_color,iota(filter(filter(x.s, triangle), apply(same_shape,iota(x.s)))))],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(or[iff[size1,size3],and[and[not[and[and[implies[not[yellow],size3],circle],circle]],yellow],size3]],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:or[%s,%s];4:iff[%s,%s];4:size1;4:size3;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:not[%s];4:yellow;4:size3;4:circle;4:circle;4:yellow;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[blue,not[size1]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:not[%s];4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(x.s, size3), rectangle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle
'λx.apply(size1,iota(filter(filter(x.s, size2), rectangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle
'λx.apply(implies[rectangle,green],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:rectangle;4:green;1:%s.o;2:x
'λx.apply(nor[size1,or[rectangle,iff[size1,apply(same_size,iota(filter(filter(x.s, and[triangle,blue]), green)))]]],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:size1;4:or[%s,%s];4:rectangle;4:iff[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:blue;4:green;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, or[apply(same_shape,iota(x.s)),and[size1,circle]]), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:circle;4:green
'λx.apply(and[blue,or[blue,and[not[size1],circle]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:or[%s,%s];4:blue;4:and[%s,%s];4:not[%s];4:size1;4:circle;1:%s.o;2:x
'λx.apply(nand[yellow,size2],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:yellow;4:size2;1:%s.o;2:x
'λx.apply(and[and[nand[green,circle],size2],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:green;4:circle;4:size2;4:size3;1:%s.o;2:x
'λx.exists(and[triangle,circle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:triangle;4:circle;3:%s.s;2:x
'λx.empty(filter(x.s, not[yellow]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow
'λx.apply(implies[rectangle,and[triangle,triangle]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:rectangle;4:and[%s,%s];4:triangle;4:triangle;1:%s.o;2:x
'λx.apply(and[apply(size-gt,x.o),blue],iota(filter(filter(x.s, and[not[circle],circle]), size2)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:circle;4:circle;4:size2
'λx.contains(x.o, filter(x.s, not[rectangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle
'λx.apply(nand[yellow,yellow],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:yellow;4:yellow;1:%s.o;2:x
'λx.apply(nor[blue,size1],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:blue;4:size1;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, circle), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle
'λx.apply(or[yellow,apply(same_size,x.o)],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.forall(blue,filter(filter(x.s, and[size2,and[size3,circle]]), blue))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:and[%s,%s];4:size3;4:circle;4:blue
'λx.exists(rectangle, filter(x.s, not[blue]))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.contains(x.o, filter(filter(filter(x.s, nand[size3,and[and[size2,circle],blue]]), size2), nor[circle,triangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:size2;4:circle;4:blue;4:size2;4:nor[%s,%s];4:circle;4:triangle
'λx.apply(not[and[apply(same_color,x.o),size3]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[blue,not[blue]],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:blue;4:not[%s];4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(and[triangle,and[blue,blue]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:blue;4:blue;1:iota(%s);3:%s.s;2:x
'λx.exists(iff[not[green],or[rectangle,size2]], x.s)'	0:exists(%s, %s);4:iff[%s,%s];4:not[%s];4:green;4:or[%s,%s];4:rectangle;4:size2;3:%s.s;2:x
'λx.apply(or[rectangle,yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:yellow;1:%s.o;2:x
'λx.apply(and[not[and[circle,triangle]],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:circle;4:triangle;4:rectangle;1:%s.o;2:x
'λx.apply(and[size2,not[green]],iota(filter(filter(filter(x.s, triangle), triangle), and[yellow,and[size2,green]])))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:triangle;4:and[%s,%s];4:yellow;4:and[%s,%s];4:size2;4:green
'λx.apply(yellow,iota(filter(x.s, implies[and[size1,apply(same_color,iota(x.s))],size3])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size3
'λx.empty(filter(filter(x.s, and[apply(same_size,iota(x.s)),not[and[size2,and[size1,size2]]]]), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:size1;4:size2;4:size2
'λx.apply(size2,iota(filter(filter(x.s, not[blue]), blue)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:blue
'λx.apply(circle,iota(filter(x.s, apply(same_color,iota(filter(x.s, not[rectangle]))))))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle
'λx.apply(and[not[size1],and[blue,rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size1;4:and[%s,%s];4:blue;4:rectangle;1:%s.o;2:x
'λx.contains(iota(filter(x.s, and[size2,blue])), filter(x.s, not[or[yellow,circle]]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:yellow;4:circle
'λx.apply(and[not[blue],apply(same_shape,iota(filter(x.s, triangle)))],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[and[green,size1],and[not[or[and[or[green,implies[implies[and[rectangle,apply(same_size,x.o)],and[and[yellow,size2],and[nor[size3,and[apply(same_shape,x.o),and[yellow,green]]],circle]]],and[circle,implies[circle,size2]]]],size2],size2]],circle]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:green;4:size1;4:and[%s,%s];4:not[%s];4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:green;4:implies[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:and[%s,%s];4:yellow;4:size2;4:and[%s,%s];4:nor[%s,%s];4:size3;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:yellow;4:green;4:circle;4:and[%s,%s];4:circle;4:implies[%s,%s];4:circle;4:size2;4:size2;4:size2;4:circle;1:%s.o;2:x
'λx.apply(nor[implies[triangle,and[not[not[triangle]],apply(same_color,iota(filter(x.s, size3)))]],circle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:implies[%s,%s];4:triangle;4:and[%s,%s];4:not[%s];4:not[%s];4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle;1:%s.o;2:x
'λx.contains(iota(filter(x.s, circle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;3:%s.s;2:x
'λx.contains(iota(filter(x.s, size1)), filter(filter(filter(x.s, yellow), not[triangle]), implies[rectangle,green]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:triangle;4:implies[%s,%s];4:rectangle;4:green
'λx.exists(circle, filter(filter(x.s, circle), or[not[rectangle],size3]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:not[%s];4:rectangle;4:size3
'λx.apply(apply(same_shape,iota(filter(filter(filter(x.s, size2), triangle), rectangle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:triangle;4:rectangle;1:%s.o;2:x
'λx.apply(and[apply(same_shape,x.o),not[and[or[yellow,size2],apply(same_color,x.o)]]],iota(filter(filter(filter(x.s, not[apply(size-gt,iota(x.s))]), nand[rectangle,and[triangle,and[not[size3],blue]]]), size1)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:or[%s,%s];4:yellow;4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:nand[%s,%s];4:rectangle;4:and[%s,%s];4:triangle;4:and[%s,%s];4:not[%s];4:size3;4:blue;4:size1
'λx.apply(and[iff[apply(size-gt,iota(filter(x.s, yellow))),not[triangle]],implies[size2,yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:triangle;4:implies[%s,%s];4:size2;4:yellow;1:%s.o;2:x
'λx.exists(size3, filter(filter(filter(x.s, size2), iff[size1,apply(same_color,iota(x.s))]), triangle))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:iff[%s,%s];4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:triangle
'λx.exists(green, filter(filter(filter(x.s, not[size3]), implies[blue,size2]), apply(size-lt,x.o)))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;4:implies[%s,%s];4:blue;4:size2;4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.apply(or[rectangle,triangle],iota(filter(filter(filter(filter(x.s, apply(size-leq,x.o)), size3), rectangle), triangle)))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size3;4:rectangle;4:triangle
'λx.apply(size2,iota(filter(filter(filter(filter(x.s, apply(same_size,iota(filter(x.s, apply(same_color,x.o))))), or[and[size1,or[apply(same_size,x.o),implies[size2,size3]]],size1]), circle), nand[size3,size2])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:or[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:implies[%s,%s];4:size2;4:size3;4:size1;4:circle;4:nand[%s,%s];4:size3;4:size2
'λx.exists(or[size3,triangle], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:size3;4:triangle;3:%s.s;2:x
'λx.apply(and[and[triangle,and[rectangle,circle]],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:rectangle;4:circle;4:circle;1:%s.o;2:x
'λx.forall(or[nor[implies[and[size3,triangle],and[green,size1]],yellow],triangle],filter(x.s, yellow))'	0:forall(%s,%s);4:or[%s,%s];4:nor[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:size3;4:triangle;4:and[%s,%s];4:green;4:size1;4:yellow;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.contains(iota(filter(filter(filter(x.s, size3), apply(same_size,iota(x.s))), triangle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:triangle;3:%s.s;2:x
'λx.apply(and[green,apply(same_color,x.o)],iota(filter(filter(x.s, apply(same_color,iota(x.s))), size3)))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size3
'λx.contains(x.o, filter(filter(x.s, yellow), size1))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1
'λx.apply(nand[nand[iff[not[or[size1,size2]],size3],blue],triangle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:nand[%s,%s];4:iff[%s,%s];4:not[%s];4:or[%s,%s];4:size1;4:size2;4:size3;4:blue;4:triangle;1:%s.o;2:x
'λx.empty(filter(filter(x.s, green), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size2
'λx.empty(filter(x.s, iff[size2,rectangle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size2;4:rectangle
'λx.apply(and[yellow,green],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.exists(and[nand[size2,apply(same_size,iota(x.s))],rectangle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:nand[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:rectangle;3:%s.s;2:x
'λx.apply(rectangle,iota(filter(x.s, or[triangle,size2])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:size2
'λx.apply(or[apply(same_color,x.o),blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue;1:%s.o;2:x
'λx.apply(and[size2,size2],iota(filter(filter(filter(filter(x.s, size2), blue), green), and[iff[size3,triangle],nand[not[triangle],or[circle,iff[apply(same_shape,iota(x.s)),triangle]]]])))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue;4:green;4:and[%s,%s];4:iff[%s,%s];4:size3;4:triangle;4:nand[%s,%s];4:not[%s];4:triangle;4:or[%s,%s];4:circle;4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle
'λx.apply(and[size3,rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:rectangle;1:%s.o;2:x
'λx.apply(and[and[rectangle,size2],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size2;4:size2;1:%s.o;2:x
'λx.apply(iff[triangle,triangle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:triangle;4:triangle;1:%s.o;2:x
'λx.apply(implies[and[and[circle,nand[size2,and[and[rectangle,size1],not[and[and[and[size3,yellow],size1],circle]]]]],triangle],circle],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:nand[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size1;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:yellow;4:size1;4:circle;4:triangle;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(and[and[size3,size2],and[circle,size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size3;4:size2;4:and[%s,%s];4:circle;4:size1;1:%s.o;2:x
'λx.apply(not[iff[green,green]],x.o)'	0:apply(%s,%s);4:not[%s];4:iff[%s,%s];4:green;4:green;1:%s.o;2:x
'λx.apply(and[size2,rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:rectangle;1:%s.o;2:x
'λx.apply(nor[size3,blue],iota(filter(filter(x.s, and[blue,rectangle]), nor[and[circle,size1],blue])))'	0:apply(%s,%s);4:nor[%s,%s];4:size3;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:rectangle;4:nor[%s,%s];4:and[%s,%s];4:circle;4:size1;4:blue
'λx.contains(x.o, filter(filter(filter(x.s, apply(same_size,iota(filter(x.s, size3)))), yellow), rectangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow;4:rectangle
'λx.apply(and[nor[not[apply(same_shape,iota(x.s))],or[green,size2]],not[size3]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:green;4:size2;4:not[%s];4:size3;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, circle), apply(same_color,iota(x.s))))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(or[not[apply(size-lt,x.o)],size3],iota(filter(x.s, and[or[and[triangle,triangle],triangle],size2])))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:triangle;4:triangle;4:triangle;4:size2
'λx.apply(or[and[and[green,size2],nor[and[circle,rectangle],not[and[yellow,yellow]]]],or[apply(size-leq,x.o),or[or[and[or[or[or[and[implies[size3,circle],triangle],size1],circle],rectangle],and[green,or[yellow,size1]]],size3],size3]]],iota(filter(x.s, and[size2,not[size2]])))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:size2;4:nor[%s,%s];4:and[%s,%s];4:circle;4:rectangle;4:not[%s];4:and[%s,%s];4:yellow;4:yellow;4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:size3;4:circle;4:triangle;4:size1;4:circle;4:rectangle;4:and[%s,%s];4:green;4:or[%s,%s];4:yellow;4:size1;4:size3;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:not[%s];4:size2
'λx.apply(circle,iota(filter(filter(filter(x.s, blue), blue), triangle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue;4:triangle
'λx.apply(circle,iota(filter(filter(x.s, size2), implies[or[blue,size1],or[size1,not[circle]]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:implies[%s,%s];4:or[%s,%s];4:blue;4:size1;4:or[%s,%s];4:size1;4:not[%s];4:circle
'λx.apply(and[size1,and[and[rectangle,green],size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:green;4:size2;1:%s.o;2:x
'λx.forall(not[size3],filter(x.s, and[iff[green,nor[iff[not[green],and[size3,green]],or[size3,and[apply(same_color,iota(x.s)),apply(same_size,x.o)]]]],and[and[size2,size2],apply(same_size,iota(filter(filter(filter(filter(x.s, size2), not[and[triangle,circle]]), size1), triangle)))]]))'	0:forall(%s,%s);4:not[%s];4:size3;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:iff[%s,%s];4:green;4:nor[%s,%s];4:iff[%s,%s];4:not[%s];4:green;4:and[%s,%s];4:size3;4:green;4:or[%s,%s];4:size3;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:and[%s,%s];4:size2;4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:not[%s];4:and[%s,%s];4:triangle;4:circle;4:size1;4:triangle
'λx.apply(circle,iota(filter(filter(filter(filter(x.s, size2), iff[and[yellow,size3],rectangle]), rectangle), yellow)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:iff[%s,%s];4:and[%s,%s];4:yellow;4:size3;4:rectangle;4:rectangle;4:yellow
'λx.exists(apply(same_shape,iota(x.s)), filter(filter(filter(x.s, rectangle), triangle), not[size2]))'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle;4:not[%s];4:size2
'λx.contains(iota(x.s), filter(filter(x.s, apply(same_shape,iota(filter(filter(x.s, and[yellow,yellow]), size1)))), size3))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:yellow;4:size1;4:size3
'λx.apply(and[apply(size-lt,iota(filter(filter(x.s, circle), triangle))),size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(x.s, not[and[apply(same_size,x.o),apply(same_shape,x.o)]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(not[and[nor[green,and[size1,and[triangle,size2]]],nor[yellow,not[blue]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:nor[%s,%s];4:green;4:and[%s,%s];4:size1;4:and[%s,%s];4:triangle;4:size2;4:nor[%s,%s];4:yellow;4:not[%s];4:blue;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(filter(filter(x.s, apply(same_shape,x.o)), triangle), not[and[size1,blue]]), or[green,size3])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle;4:not[%s];4:and[%s,%s];4:size1;4:blue;4:or[%s,%s];4:green;4:size3
'λx.forall(yellow,filter(x.s, circle))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(or[circle,green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:green;1:%s.o;2:x
'λx.apply(not[apply(same_shape,x.o)],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.forall(size3,filter(filter(filter(x.s, or[rectangle,not[apply(size-lt,iota(filter(x.s, rectangle)))]]), triangle), size3))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:not[%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle;4:size3
'λx.apply(and[and[and[apply(same_color,iota(filter(filter(x.s, and[size2,iff[size2,yellow]]), yellow))),and[size2,and[blue,circle]]],not[triangle]],implies[size3,size1]],iota(filter(x.s, or[triangle,circle])))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:iff[%s,%s];4:size2;4:yellow;4:yellow;4:and[%s,%s];4:size2;4:and[%s,%s];4:blue;4:circle;4:not[%s];4:triangle;4:implies[%s,%s];4:size3;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:circle
'λx.apply(not[and[size2,yellow]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size2;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.exists(size3, filter(x.s, and[yellow,or[and[triangle,apply(size-lt,x.o)],and[size2,triangle]]]))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:or[%s,%s];4:and[%s,%s];4:triangle;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:and[%s,%s];4:size2;4:triangle
'λx.apply(and[apply(same_size,x.o),green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(x.s, size2), triangle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:triangle;3:%s.s;2:x
'λx.contains(iota(filter(filter(filter(x.s, size1), green), triangle)), filter(x.s, nor[nor[blue,not[triangle]],size3]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:nor[%s,%s];4:blue;4:not[%s];4:triangle;4:size3
'λx.exists(circle, filter(filter(filter(filter(filter(filter(x.s, apply(same_size,iota(filter(x.s, rectangle)))), rectangle), size1), and[blue,green]), circle), iff[and[size2,apply(same_size,iota(x.s))],blue]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle;4:size1;4:and[%s,%s];4:blue;4:green;4:circle;4:iff[%s,%s];4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:blue
'λx.contains(x.o, filter(x.s, apply(same_color,x.o)))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(or[and[nor[blue,blue],size1],size3],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:blue;4:blue;4:size1;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(or[circle,blue],iota(filter(filter(filter(x.s, blue), not[circle]), size1)))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:circle;4:size1
'λx.apply(and[or[size3,blue],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size3;4:blue;4:circle;1:%s.o;2:x
'λx.apply(and[blue,not[yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:not[%s];4:yellow;1:%s.o;2:x
'λx.forall(blue,filter(x.s, and[triangle,circle]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:circle
'λx.apply(and[yellow,apply(same_shape,x.o)],iota(filter(filter(x.s, apply(same_size,x.o)), and[blue,blue])))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:blue;4:blue
'λx.apply(or[blue,and[rectangle,green]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:green;1:%s.o;2:x
'λx.contains(x.o, filter(filter(filter(filter(filter(x.s, and[blue,size2]), or[not[green],rectangle]), implies[size3,blue]), triangle), and[triangle,size2]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size2;4:or[%s,%s];4:not[%s];4:green;4:rectangle;4:implies[%s,%s];4:size3;4:blue;4:triangle;4:and[%s,%s];4:triangle;4:size2
'λx.forall(and[circle,size3],filter(filter(x.s, yellow), and[and[size3,iff[or[green,apply(same_size,x.o)],circle]],green]))'	0:forall(%s,%s);4:and[%s,%s];4:circle;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:and[%s,%s];4:size3;4:iff[%s,%s];4:or[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;4:green
'λx.apply(yellow,iota(filter(filter(filter(x.s, circle), circle), size2)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:circle;4:size2
'λx.exists(triangle, filter(x.s, and[yellow,size1]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size1
'λx.apply(nand[circle,rectangle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:circle;4:rectangle;1:%s.o;2:x
'λx.forall(and[yellow,nand[triangle,size2]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:yellow;4:nand[%s,%s];4:triangle;4:size2;3:%s.s;2:x
'λx.apply(and[circle,not[blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:not[%s];4:blue;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(x.s, nand[not[nand[apply(same_shape,x.o),size1]],green]), size1)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:not[%s];4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;4:green;4:size1
'λx.apply(and[yellow,and[yellow,nor[and[or[apply(same_shape,iota(filter(x.s, nand[size1,size3]))),size2],size2],size3]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:and[%s,%s];4:yellow;4:nor[%s,%s];4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size1;4:size3;4:size2;4:size2;4:size3;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, triangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.contains(iota(filter(x.s, size3)), filter(filter(filter(filter(x.s, apply(same_color,iota(x.s))), not[and[apply(size-leq,iota(x.s)),apply(same_size,x.o)]]), apply(same_shape,x.o)), nor[circle,circle]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:nor[%s,%s];4:circle;4:circle
'λx.apply(or[circle,yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:yellow;1:%s.o;2:x
'λx.contains(iota(filter(x.s, or[size3,size3])), filter(x.s, and[rectangle,size3]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:size3
'λx.apply(not[and[or[size3,circle],apply(same_shape,iota(x.s))]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:or[%s,%s];4:size3;4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(x.s, circle), size3)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3
'λx.apply(size2,iota(filter(filter(x.s, circle), size1)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1
'λx.forall(iff[size1,and[size1,triangle]],filter(filter(x.s, size1), yellow))'	0:forall(%s,%s);4:iff[%s,%s];4:size1;4:and[%s,%s];4:size1;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow
'λx.apply(and[circle,nor[green,apply(same_size,iota(x.s))]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:nor[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[or[and[triangle,yellow],or[not[size2],circle]],apply(size-lt,iota(x.s))],circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:triangle;4:yellow;4:or[%s,%s];4:not[%s];4:size2;4:circle;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size3,not[circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:not[%s];4:circle;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, apply(same_shape,x.o)), size3)), filter(x.s, iff[blue,size1]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:blue;4:size1
'λx.apply(not[size3],iota(filter(filter(x.s, rectangle), triangle)))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle
'λx.apply(and[size1,rectangle],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(or[or[blue,blue],apply(same_shape,iota(x.s))],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:blue;4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[implies[rectangle,size3],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:rectangle;4:size3;4:size3;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(filter(filter(x.s, and[rectangle,nor[apply(same_shape,iota(filter(x.s, not[triangle]))),or[and[yellow,or[yellow,rectangle]],triangle]]]), size3), yellow), triangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:or[%s,%s];4:and[%s,%s];4:yellow;4:or[%s,%s];4:yellow;4:rectangle;4:triangle;4:size3;4:yellow;4:triangle
'λx.exists(and[rectangle,and[blue,yellow]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:blue;4:yellow;3:%s.s;2:x
'λx.apply(green,iota(filter(filter(x.s, size3), green)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green
'λx.apply(and[not[rectangle],or[size1,circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:rectangle;4:or[%s,%s];4:size1;4:circle;1:%s.o;2:x
'λx.contains(iota(filter(x.s, apply(same_color,x.o))), filter(filter(x.s, rectangle), size2))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2
'λx.empty(filter(x.s, iff[or[apply(same_color,x.o),and[circle,and[size1,not[size2]]]],size1]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:circle;4:and[%s,%s];4:size1;4:not[%s];4:size2;4:size1
'λx.forall(triangle,filter(filter(filter(filter(filter(filter(x.s, triangle), circle), apply(size-geq,iota(x.s))), green), and[size1,size1]), nor[blue,size1]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:green;4:and[%s,%s];4:size1;4:size1;4:nor[%s,%s];4:blue;4:size1
'λx.apply(implies[size3,green],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size3;4:green;1:%s.o;2:x
'λx.apply(and[iff[circle,green],size1],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:circle;4:green;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(size3,iota(filter(filter(x.s, size1), green)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green
'λx.apply(size2,iota(filter(filter(x.s, size1), green)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green
'λx.apply(size3,iota(filter(filter(x.s, size3), green)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green
'λx.apply(size2,iota(filter(filter(x.s, size3), green)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green
'λx.apply(size2,iota(filter(filter(x.s, size1), size2)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2
'λx.apply(size3,iota(filter(filter(x.s, size3), size2)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2
'λx.apply(size1,iota(filter(filter(x.s, size2), size2)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2
'λx.apply(and[or[green,apply(size-lt,x.o)],not[blue]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:green;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:not[%s];4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(x.s, and[yellow,apply(same_shape,iota(x.s))]), blue)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:blue
'λx.apply(not[and[not[yellow],size2]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:yellow;4:size2;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(x.s, not[rectangle]), size2)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;4:size2;3:%s.s;2:x
'λx.apply(nor[or[circle,size3],blue],iota(filter(filter(x.s, or[apply(same_shape,iota(x.s)),and[circle,rectangle]]), not[or[size1,size2]])))'	0:apply(%s,%s);4:nor[%s,%s];4:or[%s,%s];4:circle;4:size3;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:rectangle;4:not[%s];4:or[%s,%s];4:size1;4:size2
'λx.apply(and[iff[green,and[size2,yellow]],not[triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:green;4:and[%s,%s];4:size2;4:yellow;4:not[%s];4:triangle;1:%s.o;2:x
'λx.apply(nand[yellow,or[nor[yellow,and[and[yellow,apply(size-gt,iota(x.s))],or[rectangle,size1]]],and[not[size1],rectangle]]],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:yellow;4:or[%s,%s];4:nor[%s,%s];4:yellow;4:and[%s,%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:size1;4:and[%s,%s];4:not[%s];4:size1;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(x.s, size3), and[blue,triangle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:blue;4:triangle
'λx.apply(nand[not[and[not[triangle],and[size3,and[blue,circle]]]],circle],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:not[%s];4:and[%s,%s];4:not[%s];4:triangle;4:and[%s,%s];4:size3;4:and[%s,%s];4:blue;4:circle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.forall(nand[or[and[triangle,triangle],green],iff[rectangle,green]],x.s)'	0:forall(%s,%s);4:nand[%s,%s];4:or[%s,%s];4:and[%s,%s];4:triangle;4:triangle;4:green;4:iff[%s,%s];4:rectangle;4:green;3:%s.s;2:x
'λx.exists(size3, filter(filter(x.s, apply(same_size,iota(filter(filter(filter(x.s, or[circle,not[yellow]]), size3), rectangle)))), size2))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:not[%s];4:yellow;4:size3;4:rectangle;4:size2
'λx.contains(x.o, filter(x.s, and[size3,not[circle]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:not[%s];4:circle
'λx.apply(and[and[nor[rectangle,green],size1],circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:rectangle;4:green;4:size1;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[yellow,rectangle],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:yellow;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[rectangle,size3],iota(filter(filter(x.s, not[and[green,or[size1,circle]]]), size3)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:green;4:or[%s,%s];4:size1;4:circle;4:size3
'λx.apply(nand[apply(same_shape,x.o),apply(same_shape,x.o)],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[and[size3,not[and[size3,size2]]],not[triangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size3;4:not[%s];4:and[%s,%s];4:size3;4:size2;4:not[%s];4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[and[size3,or[not[green],and[and[circle,blue],triangle]]],triangle],blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:or[%s,%s];4:not[%s];4:green;4:and[%s,%s];4:and[%s,%s];4:circle;4:blue;4:triangle;4:triangle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(filter(x.s, blue), and[and[circle,yellow],size1]), and[rectangle,size3])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:and[%s,%s];4:circle;4:yellow;4:size1;4:and[%s,%s];4:rectangle;4:size3
'λx.apply(size2,iota(filter(filter(filter(filter(x.s, size3), size3), or[size2,iff[circle,and[size1,circle]]]), size1)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3;4:or[%s,%s];4:size2;4:iff[%s,%s];4:circle;4:and[%s,%s];4:size1;4:circle;4:size1
'λx.forall(and[blue,yellow],filter(filter(x.s, size3), rectangle))'	0:forall(%s,%s);4:and[%s,%s];4:blue;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle
'λx.apply(and[rectangle,and[size3,size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:size3;4:size1;1:%s.o;2:x
'λx.apply(or[triangle,not[implies[blue,green]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:not[%s];4:implies[%s,%s];4:blue;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[rectangle,circle],iota(filter(filter(filter(filter(filter(filter(x.s, apply(same_shape,iota(filter(x.s, triangle)))), rectangle), and[and[apply(same_color,iota(filter(x.s, triangle))),yellow],triangle]), green), rectangle), yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:yellow;4:triangle;4:green;4:rectangle;4:yellow
'λx.apply(size2,iota(filter(x.s, and[or[and[or[rectangle,not[size1]],size3],iff[circle,blue]],yellow])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:rectangle;4:not[%s];4:size1;4:size3;4:iff[%s,%s];4:circle;4:blue;4:yellow
'λx.apply(circle,iota(filter(x.s, blue)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.forall(triangle,filter(x.s, circle))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(size3,iota(filter(x.s, iff[or[not[circle],not[circle]],apply(same_size,iota(filter(x.s, nand[yellow,size2])))])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:or[%s,%s];4:not[%s];4:circle;4:not[%s];4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:yellow;4:size2
'λx.apply(iff[size3,or[yellow,size3]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:size3;4:or[%s,%s];4:yellow;4:size3;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, rectangle), apply(same_size,x.o))))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.exists(or[implies[apply(same_size,iota(x.s)),and[or[blue,apply(same_shape,x.o)],rectangle]],size2], filter(x.s, triangle))'	0:exists(%s, %s);4:or[%s,%s];4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(circle,iota(filter(filter(x.s, apply(size-lt,x.o)), not[apply(same_shape,iota(x.s))])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[triangle,blue],iota(filter(x.s, not[blue])))'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.exists(size1, filter(filter(x.s, blue), size2))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2
'λx.apply(not[green],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[size2,blue],iota(filter(filter(x.s, circle), triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle
'λx.apply(and[rectangle,blue],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(not[apply(same_color,x.o)],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(or[yellow,yellow],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(and[apply(same_size,x.o),size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(and[apply(same_size,x.o),size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[nand[size3,or[blue,size1]],blue],iota(filter(filter(x.s, and[size2,or[blue,not[size1]]]), size2)))'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:size3;4:or[%s,%s];4:blue;4:size1;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:or[%s,%s];4:blue;4:not[%s];4:size1;4:size2
'λx.empty(filter(x.s, implies[size3,apply(same_color,x.o)]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(iff[rectangle,blue],iota(filter(x.s, iff[rectangle,circle])))'	0:apply(%s,%s);4:iff[%s,%s];4:rectangle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:rectangle;4:circle
'λx.apply(blue,iota(filter(filter(x.s, not[nand[blue,blue]]), size2)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:nand[%s,%s];4:blue;4:blue;4:size2
'λx.apply(and[not[apply(same_size,x.o)],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:rectangle;1:%s.o;2:x
'λx.apply(or[not[size3],apply(same_size,x.o)],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(apply(same_size,iota(x.s)),iota(filter(x.s, green)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.contains(x.o, filter(x.s, and[size3,triangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:triangle
'λx.exists(triangle, filter(x.s, or[rectangle,size1]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:size1
'λx.apply(blue,iota(filter(filter(x.s, size1), size3)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size3
'λx.empty(filter(x.s, and[triangle,size1]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:size1
'λx.empty(filter(x.s, and[apply(same_size,iota(x.s)),nor[apply(size-leq,x.o),circle]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:nor[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:circle
'λx.contains(iota(filter(filter(x.s, blue), not[not[and[green,size2]]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:not[%s];4:and[%s,%s];4:green;4:size2;3:%s.s;2:x
'λx.contains(iota(x.s), filter(filter(x.s, blue), yellow))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow
'λx.exists(nand[green,circle], filter(filter(x.s, circle), rectangle))'	0:exists(%s, %s);4:nand[%s,%s];4:green;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle
'λx.apply(apply(same_shape,iota(filter(x.s, rectangle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;1:%s.o;2:x
'λx.forall(and[circle,green],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:circle;4:green;3:%s.s;2:x
'λx.apply(and[nor[size3,size1],size2],iota(filter(filter(x.s, size1), rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:size3;4:size1;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle
'λx.apply(triangle,iota(filter(filter(x.s, size2), and[size1,green])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:size1;4:green
'λx.apply(not[and[apply(same_color,iota(filter(filter(x.s, triangle), green))),apply(same_shape,x.o)]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[yellow,not[or[rectangle,size2]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:not[%s];4:or[%s,%s];4:rectangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(x.s, and[triangle,green]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:green
'λx.apply(blue,iota(filter(x.s, and[green,size2])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:size2
'λx.apply(blue,iota(filter(x.s, and[blue,blue])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:blue
'λx.forall(triangle,filter(x.s, and[size3,size1]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:size1
'λx.exists(rectangle, filter(filter(x.s, blue), not[green]))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:green
'λx.exists(blue, filter(x.s, not[nor[green,or[or[circle,size1],yellow]]]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:nor[%s,%s];4:green;4:or[%s,%s];4:or[%s,%s];4:circle;4:size1;4:yellow
'λx.apply(and[and[and[not[blue],blue],or[rectangle,and[triangle,rectangle]]],circle],iota(filter(filter(x.s, size1), size1)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:blue;4:blue;4:or[%s,%s];4:rectangle;4:and[%s,%s];4:triangle;4:rectangle;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1
'λx.apply(or[and[size3,blue],green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size3;4:blue;4:green;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(filter(x.s, green), yellow), apply(same_shape,x.o)), not[triangle])), filter(x.s, size3))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(iff[size3,size3],iota(filter(filter(filter(filter(x.s, not[circle]), green), size2), size2)))'	0:apply(%s,%s);4:iff[%s,%s];4:size3;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:green;4:size2;4:size2
'λx.forall(not[implies[green,apply(same_shape,iota(x.s))]],x.s)'	0:forall(%s,%s);4:not[%s];4:implies[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(and[size1,rectangle],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(apply(same_size,iota(filter(filter(x.s, size3), rectangle))),iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(nor[circle,and[size3,not[triangle]]],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:circle;4:and[%s,%s];4:size3;4:not[%s];4:triangle;1:iota(%s);3:%s.s;2:x
'λx.exists(apply(size-geq,iota(x.s)), filter(filter(filter(filter(filter(x.s, triangle), size2), or[circle,size1]), and[and[rectangle,size1],size1]), blue))'	0:exists(%s, %s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2;4:or[%s,%s];4:circle;4:size1;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size1;4:size1;4:blue
'λx.apply(and[and[rectangle,blue],implies[or[blue,and[blue,implies[and[iff[yellow,yellow],blue],not[size1]]]],circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:rectangle;4:blue;4:implies[%s,%s];4:or[%s,%s];4:blue;4:and[%s,%s];4:blue;4:implies[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:yellow;4:yellow;4:blue;4:not[%s];4:size1;4:circle;1:%s.o;2:x
'λx.forall(not[yellow],x.s)'	0:forall(%s,%s);4:not[%s];4:yellow;3:%s.s;2:x
'λx.apply(nand[or[or[and[rectangle,apply(same_size,iota(filter(x.s, not[green])))],or[triangle,size2]],size1],circle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:or[%s,%s];4:triangle;4:size2;4:size1;4:circle;1:%s.o;2:x
'λx.exists(size1, filter(filter(x.s, iff[blue,circle]), apply(same_size,x.o)))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:blue;4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(x.s)),iota(filter(x.s, and[yellow,size1])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size1
'λx.exists(and[blue,not[and[nand[and[size2,apply(same_size,x.o)],and[or[rectangle,size1],not[and[not[nand[size2,circle]],triangle]]]],size1]]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:blue;4:not[%s];4:and[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:size1;4:not[%s];4:and[%s,%s];4:not[%s];4:nand[%s,%s];4:size2;4:circle;4:triangle;4:size1;3:%s.s;2:x
'λx.empty(filter(filter(filter(filter(filter(x.s, yellow), not[size2]), yellow), size2), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:size2;4:yellow;4:size2;4:triangle
'λx.exists(and[rectangle,size2], filter(filter(filter(filter(filter(filter(x.s, yellow), size1), apply(same_color,x.o)), triangle), size1), and[nand[size1,size1],size3]))'	0:exists(%s, %s);4:and[%s,%s];4:rectangle;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;4:size1;4:and[%s,%s];4:nand[%s,%s];4:size1;4:size1;4:size3
'λx.apply(iff[rectangle,and[and[and[triangle,yellow],size2],apply(size-lt,iota(filter(x.s, or[size3,apply(same_shape,x.o)])))]],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:yellow;4:size2;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[circle,triangle],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:triangle;4:green;1:%s.o;2:x
'λx.exists(triangle, filter(x.s, circle))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.exists(rectangle, filter(x.s, blue))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(or[green,green],iota(filter(filter(filter(x.s, and[yellow,apply(size-geq,iota(x.s))]), yellow), triangle)))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:yellow;4:triangle
'λx.apply(or[or[iff[or[and[size2,rectangle],triangle],and[size1,apply(size-gt,x.o)]],yellow],rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size2;4:rectangle;4:triangle;4:and[%s,%s];4:size1;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:yellow;4:rectangle;1:%s.o;2:x
'λx.exists(apply(same_size,iota(filter(filter(x.s, blue), yellow))), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow;3:%s.s;2:x
'λx.exists(nand[triangle,circle], x.s)'	0:exists(%s, %s);4:nand[%s,%s];4:triangle;4:circle;3:%s.s;2:x
'λx.apply(not[size2],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(not[size1],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(not[size3],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(or[rectangle,yellow],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.exists(or[green,size3], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:green;4:size3;3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(filter(filter(x.s, apply(size-lt,x.o)), size3), circle), rectangle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:size3;4:circle;4:rectangle
'λx.empty(filter(filter(filter(filter(filter(x.s, yellow), size1), and[green,yellow]), size2), apply(same_shape,iota(filter(x.s, yellow)))))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;4:and[%s,%s];4:green;4:yellow;4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(not[size2],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(not[size1],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(or[circle,apply(same_size,iota(x.s))],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[green,and[and[or[not[circle],not[blue]],and[size2,triangle]],implies[nor[not[and[and[triangle,triangle],size3]],size2],or[yellow,or[and[rectangle,size3],size1]]]]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:not[%s];4:circle;4:not[%s];4:blue;4:and[%s,%s];4:size2;4:triangle;4:implies[%s,%s];4:nor[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:triangle;4:size3;4:size2;4:or[%s,%s];4:yellow;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:size3;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[blue,not[size2]],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:blue;4:not[%s];4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(filter(filter(filter(x.s, triangle), not[green]), size3), yellow), circle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:not[%s];4:green;4:size3;4:yellow;4:circle
'λx.forall(size3,filter(filter(x.s, and[size3,size3]), triangle))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:size3;4:triangle
'λx.apply(or[not[not[not[triangle]]],blue],iota(filter(filter(x.s, or[or[rectangle,triangle],circle]), blue)))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:not[%s];4:not[%s];4:triangle;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:rectangle;4:triangle;4:circle;4:blue
'λx.exists(apply(same_color,iota(filter(x.s, circle))), filter(filter(x.s, blue), size1))'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1
'λx.forall(triangle,filter(filter(x.s, not[triangle]), and[size3,and[apply(same_color,iota(x.s)),nor[nor[yellow,and[yellow,apply(same_color,iota(x.s))]],circle]]]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:and[%s,%s];4:size3;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:nor[%s,%s];4:nor[%s,%s];4:yellow;4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:circle
'λx.apply(and[triangle,rectangle],iota(filter(filter(filter(x.s, yellow), size3), circle)))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size3;4:circle
'λx.contains(x.o, filter(filter(filter(x.s, or[blue,size3]), implies[and[circle,size3],size2]), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:size3;4:implies[%s,%s];4:and[%s,%s];4:circle;4:size3;4:size2;4:green
'λx.apply(apply(same_size,iota(filter(x.s, and[not[and[apply(size-geq,iota(x.s)),size2]],rectangle]))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:size2;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.exists(circle, filter(x.s, apply(same_color,x.o)))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(nor[not[apply(size-gt,x.o)],green],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:not[%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:green;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, not[apply(same_size,iota(x.s))]), nand[not[rectangle],and[yellow,circle]]), and[and[and[yellow,yellow],green],triangle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:nand[%s,%s];4:not[%s];4:rectangle;4:and[%s,%s];4:yellow;4:circle;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:yellow;4:green;4:triangle
'λx.apply(iff[not[circle],blue],iota(filter(filter(filter(filter(x.s, circle), green), or[or[not[or[size1,nand[or[triangle,triangle],triangle]]],size3],triangle]), iff[triangle,and[not[and[circle,blue]],green]])))'	0:apply(%s,%s);4:iff[%s,%s];4:not[%s];4:circle;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green;4:or[%s,%s];4:or[%s,%s];4:not[%s];4:or[%s,%s];4:size1;4:nand[%s,%s];4:or[%s,%s];4:triangle;4:triangle;4:triangle;4:size3;4:triangle;4:iff[%s,%s];4:triangle;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:circle;4:blue;4:green
'λx.apply(and[iff[yellow,yellow],size1],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:yellow;4:yellow;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(and[size1,or[triangle,triangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:or[%s,%s];4:triangle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(filter(x.s, or[green,yellow]), apply(size-leq,x.o)), size2)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:yellow;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size2
'λx.apply(apply(size-lt,iota(x.s)),iota(filter(x.s, size3)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(or[size3,green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:green;1:%s.o;2:x
'λx.apply(nand[not[and[nand[triangle,triangle],size1]],circle],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:not[%s];4:and[%s,%s];4:nand[%s,%s];4:triangle;4:triangle;4:size1;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[blue,blue],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:blue;4:blue;1:%s.o;2:x
'λx.apply(not[not[nand[and[and[not[circle],not[not[not[blue]]]],size2],rectangle]]],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:circle;4:not[%s];4:not[%s];4:not[%s];4:blue;4:size2;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.contains(iota(filter(filter(filter(filter(x.s, triangle), size2), size2), green)), filter(filter(x.s, and[or[triangle,apply(same_shape,x.o)],triangle]), and[and[not[or[size2,green]],size3],apply(same_color,iota(filter(x.s, not[size3])))]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2;4:size2;4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:or[%s,%s];4:size2;4:green;4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3
'λx.apply(iff[size1,nand[and[or[blue,size1],apply(same_shape,iota(x.s))],size3]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:size1;4:nand[%s,%s];4:and[%s,%s];4:or[%s,%s];4:blue;4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size3;1:%s.o;2:x
'λx.forall(and[rectangle,green],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:rectangle;4:green;3:%s.s;2:x
'λx.apply(or[circle,apply(same_color,iota(x.s))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(nand[triangle,size2],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:size2;1:%s.o;2:x
'λx.apply(iff[iff[apply(same_shape,iota(x.s)),circle],or[not[size2],rectangle]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:not[%s];4:size2;4:rectangle;1:%s.o;2:x
'λx.apply(nor[apply(size-geq,iota(filter(filter(x.s, size2), nand[and[size2,size2],and[circle,circle]]))),or[not[yellow],size1]],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:nor[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:nand[%s,%s];4:and[%s,%s];4:size2;4:size2;4:and[%s,%s];4:circle;4:circle;4:or[%s,%s];4:not[%s];4:yellow;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.empty(filter(filter(x.s, size2), and[blue,and[yellow,and[or[size2,size2],green]]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:blue;4:and[%s,%s];4:yellow;4:and[%s,%s];4:or[%s,%s];4:size2;4:size2;4:green
'λx.apply(iff[implies[blue,circle],apply(size-gt,x.o)],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:iff[%s,%s];4:implies[%s,%s];4:blue;4:circle;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(apply(size-geq,x.o),iota(filter(filter(x.s, triangle), size3)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3
'λx.apply(triangle,iota(filter(filter(x.s, not[circle]), yellow)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:yellow
'λx.contains(x.o, filter(filter(filter(x.s, triangle), or[not[rectangle],apply(size-gt,iota(filter(filter(x.s, size1), not[size2])))]), apply(same_size,iota(filter(x.s, green)))))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:or[%s,%s];4:not[%s];4:rectangle;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:not[%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.forall(apply(same_size,x.o),filter(filter(x.s, or[size3,size2]), rectangle))'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:size2;4:rectangle
'λx.apply(or[or[size3,green],apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:size3;4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[size3,nor[triangle,circle]],iota(filter(x.s, or[size2,or[green,apply(same_color,iota(filter(filter(x.s, apply(same_color,x.o)), yellow)))]])))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:nor[%s,%s];4:triangle;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:or[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow
'λx.forall(nor[nor[triangle,and[implies[nand[or[blue,circle],size3],not[blue]],rectangle]],circle],x.s)'	0:forall(%s,%s);4:nor[%s,%s];4:nor[%s,%s];4:triangle;4:and[%s,%s];4:implies[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:blue;4:circle;4:size3;4:not[%s];4:blue;4:rectangle;4:circle;3:%s.s;2:x
'λx.apply(and[not[apply(same_size,iota(x.s))],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size1;1:%s.o;2:x
'λx.apply(apply(same_shape,x.o),iota(filter(filter(filter(filter(filter(x.s, green), size1), yellow), size2), not[size3])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1;4:yellow;4:size2;4:not[%s];4:size3
'λx.apply(and[triangle,blue],iota(filter(x.s, implies[circle,circle])))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:circle;4:circle
'λx.forall(nand[size3,green],x.s)'	0:forall(%s,%s);4:nand[%s,%s];4:size3;4:green;3:%s.s;2:x
'λx.apply(or[circle,size1],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(or[size2,green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:green;1:%s.o;2:x
'λx.apply(or[green,apply(same_color,iota(filter(filter(x.s, apply(same_shape,iota(x.s))), yellow)))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:yellow;1:%s.o;2:x
'λx.apply(yellow,iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(size2,iota(filter(filter(filter(x.s, or[size1,nor[circle,not[apply(same_color,iota(x.s))]]]), circle), or[rectangle,size2])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:nor[%s,%s];4:circle;4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:rectangle;4:size2
'λx.exists(and[triangle,and[triangle,not[triangle]]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:triangle;4:not[%s];4:triangle;3:%s.s;2:x
'λx.exists(green, filter(filter(filter(filter(x.s, size2), green), size3), and[or[green,yellow],apply(same_shape,x.o)]))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green;4:size3;4:and[%s,%s];4:or[%s,%s];4:green;4:yellow;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(and[not[green],or[circle,triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:green;4:or[%s,%s];4:circle;4:triangle;1:%s.o;2:x
'λx.forall(and[rectangle,triangle],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:rectangle;4:triangle;3:%s.s;2:x
'λx.apply(green,iota(filter(filter(filter(filter(filter(filter(x.s, size2), and[size2,and[blue,size1]]), green), and[and[and[green,size1],size2],size3]), and[and[not[size3],rectangle],and[triangle,circle]]), or[apply(same_shape,x.o),apply(same_shape,x.o)])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:size2;4:and[%s,%s];4:blue;4:size1;4:green;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:size1;4:size2;4:size3;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size3;4:rectangle;4:and[%s,%s];4:triangle;4:circle;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(and[green,apply(same_color,iota(filter(x.s, triangle)))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;1:%s.o;2:x
'λx.apply(apply(size-lt,iota(x.s)),iota(filter(filter(filter(x.s, apply(size-gt,iota(filter(filter(x.s, size3), and[and[nand[rectangle,not[not[apply(same_shape,iota(x.s))]]],triangle],or[or[nor[and[size1,or[blue,iff[or[not[circle],yellow],yellow]]],triangle],green],rectangle]])))), yellow), green)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:rectangle;4:not[%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle;4:or[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:blue;4:iff[%s,%s];4:or[%s,%s];4:not[%s];4:circle;4:yellow;4:yellow;4:triangle;4:green;4:rectangle;4:yellow;4:green
'λx.contains(x.o, filter(filter(x.s, and[green,size3]), size3))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:size3;4:size3
'λx.contains(x.o, filter(filter(x.s, not[size2]), nor[yellow,apply(same_color,iota(x.s))]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:nor[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(or[or[size2,triangle],yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:size2;4:triangle;4:yellow;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(filter(filter(x.s, size3), and[size1,yellow]), not[not[triangle]]), triangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:size1;4:yellow;4:not[%s];4:not[%s];4:triangle;4:triangle
'λx.apply(or[size1,and[green,rectangle]],iota(filter(filter(x.s, apply(size-lt,x.o)), circle)))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:and[%s,%s];4:green;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:circle
'λx.empty(filter(filter(filter(filter(x.s, triangle), blue), yellow), and[and[size1,size3],size1]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue;4:yellow;4:and[%s,%s];4:and[%s,%s];4:size1;4:size3;4:size1
'λx.apply(and[triangle,apply(same_size,x.o)],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(or[and[size1,apply(same_size,x.o)],rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:rectangle;1:%s.o;2:x
'λx.apply(not[and[not[size1],size1]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:size1;4:size1;1:%s.o;2:x
'λx.apply(not[iff[rectangle,or[nor[not[and[size1,apply(same_shape,x.o)]],size3],circle]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:iff[%s,%s];4:rectangle;4:or[%s,%s];4:nor[%s,%s];4:not[%s];4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3;4:circle;1:iota(%s);3:%s.s;2:x
'λx.exists(and[or[circle,not[blue]],blue], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:or[%s,%s];4:circle;4:not[%s];4:blue;4:blue;3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(filter(filter(filter(x.s, size1), size3), size3), not[size1]), and[and[and[size1,size3],size1],or[green,rectangle]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size3;4:size3;4:not[%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:size3;4:size1;4:or[%s,%s];4:green;4:rectangle
'λx.apply(and[and[yellow,blue],size2],iota(filter(filter(x.s, and[size2,or[circle,green]]), implies[or[yellow,size3],size1])))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:blue;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:or[%s,%s];4:circle;4:green;4:implies[%s,%s];4:or[%s,%s];4:yellow;4:size3;4:size1
'λx.exists(apply(size-lt,iota(filter(x.s, green))), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;3:%s.s;2:x
'λx.apply(and[rectangle,apply(same_color,x.o)],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[rectangle,not[blue]],and[iff[yellow,and[triangle,triangle]],circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:rectangle;4:not[%s];4:blue;4:and[%s,%s];4:iff[%s,%s];4:yellow;4:and[%s,%s];4:triangle;4:triangle;4:circle;1:%s.o;2:x
'λx.apply(nor[blue,and[yellow,and[and[green,nor[and[size1,apply(size-gt,iota(filter(filter(filter(filter(x.s, triangle), and[green,green]), not[yellow]), apply(same_size,x.o))))],yellow]],size2]]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:blue;4:and[%s,%s];4:yellow;4:and[%s,%s];4:and[%s,%s];4:green;4:nor[%s,%s];4:and[%s,%s];4:size1;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:green;4:green;4:not[%s];4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow;4:size2;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(filter(x.s, apply(size-leq,x.o)), circle), and[circle,apply(same_shape,x.o)])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:circle;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(and[rectangle,iff[triangle,apply(same_size,x.o)]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:iff[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[blue,not[green]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:not[%s];4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[not[rectangle],not[nand[size1,blue]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:rectangle;4:not[%s];4:nand[%s,%s];4:size1;4:blue;1:%s.o;2:x
'λx.apply(apply(same_size,iota(filter(filter(filter(x.s, implies[blue,not[rectangle]]), blue), blue))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:blue;4:not[%s];4:rectangle;4:blue;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_size,x.o),iota(filter(x.s, green)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(nor[iff[rectangle,size2],circle],iota(filter(filter(filter(x.s, and[rectangle,triangle]), and[circle,apply(size-gt,x.o)]), or[size1,rectangle])))'	0:apply(%s,%s);4:nor[%s,%s];4:iff[%s,%s];4:rectangle;4:size2;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:triangle;4:and[%s,%s];4:circle;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:or[%s,%s];4:size1;4:rectangle
'λx.forall(apply(same_size,iota(filter(x.s, size3))),filter(filter(filter(x.s, or[and[rectangle,triangle],and[size2,yellow]]), rectangle), apply(same_shape,x.o)))'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:triangle;4:and[%s,%s];4:size2;4:yellow;4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(and[blue,and[and[size1,rectangle],size3]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:size1;4:rectangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(not[not[not[size3]]],iota(filter(x.s, or[triangle,size2])))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:size2
'λx.apply(rectangle,iota(filter(filter(x.s, size3), and[size1,green])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:size1;4:green
'λx.contains(x.o, filter(filter(filter(x.s, and[not[not[and[apply(size-geq,x.o),size2]]],apply(same_size,iota(x.s))]), rectangle), size2))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:rectangle;4:size2
'λx.apply(or[not[and[and[yellow,size2],rectangle]],not[apply(same_color,x.o)]],iota(filter(filter(filter(filter(x.s, blue), and[size2,triangle]), circle), or[not[rectangle],size2])))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:size2;4:rectangle;4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:size2;4:triangle;4:circle;4:or[%s,%s];4:not[%s];4:rectangle;4:size2
'λx.apply(nor[or[rectangle,and[green,size2]],apply(same_color,iota(x.s))],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:or[%s,%s];4:rectangle;4:and[%s,%s];4:green;4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.exists(apply(same_color,x.o), filter(x.s, and[yellow,size1]))'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size1
'λx.exists(triangle, filter(filter(x.s, size2), size1))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1
'λx.apply(iff[apply(same_size,iota(x.s)),blue],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(filter(x.s, circle), rectangle), and[and[or[circle,or[size1,yellow]],yellow],size2])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:circle;4:or[%s,%s];4:size1;4:yellow;4:yellow;4:size2
'λx.apply(apply(size-geq,x.o),iota(filter(filter(x.s, apply(same_color,iota(filter(x.s, triangle)))), triangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:triangle
'λx.apply(apply(same_color,x.o),iota(filter(x.s, and[yellow,size1])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size1
'λx.contains(x.o, filter(filter(filter(filter(x.s, blue), blue), circle), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue;4:circle;4:green
'λx.apply(or[size1,or[rectangle,blue]],iota(filter(filter(filter(x.s, size1), size3), size3)))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:or[%s,%s];4:rectangle;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size3;4:size3
'λx.apply(or[and[rectangle,and[rectangle,blue]],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:rectangle;4:blue;4:blue;1:%s.o;2:x
'λx.apply(apply(size-lt,iota(filter(x.s, iff[implies[or[triangle,and[green,yellow]],not[size2]],blue]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:triangle;4:and[%s,%s];4:green;4:yellow;4:not[%s];4:size2;4:blue;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, rectangle), and[rectangle,blue])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:rectangle;4:blue
'λx.forall(rectangle,filter(x.s, or[not[green],or[or[size1,and[nand[size2,apply(same_size,iota(x.s))],rectangle]],yellow]]))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:green;4:or[%s,%s];4:or[%s,%s];4:size1;4:and[%s,%s];4:nand[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:rectangle;4:yellow
'λx.exists(green, filter(filter(x.s, rectangle), green))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green
'λx.apply(triangle,iota(filter(filter(x.s, size3), not[green])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:green
'λx.contains(iota(filter(x.s, implies[not[rectangle],size1])), filter(filter(filter(x.s, or[or[green,apply(size-geq,iota(filter(filter(filter(x.s, or[size3,yellow]), green), not[triangle])))],yellow]), triangle), or[circle,circle]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:not[%s];4:rectangle;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:green;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:yellow;4:green;4:not[%s];4:triangle;4:yellow;4:triangle;4:or[%s,%s];4:circle;4:circle
'λx.apply(and[apply(same_shape,iota(filter(filter(filter(x.s, or[triangle,or[size2,size3]]), apply(same_size,x.o)), not[and[apply(same_color,iota(x.s)),size3]]))),blue],iota(filter(filter(filter(x.s, and[and[size1,not[circle]],or[triangle,not[rectangle]]]), and[triangle,blue]), size1)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:or[%s,%s];4:size2;4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size3;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size1;4:not[%s];4:circle;4:or[%s,%s];4:triangle;4:not[%s];4:rectangle;4:and[%s,%s];4:triangle;4:blue;4:size1
'λx.apply(not[nor[size3,not[and[size3,not[apply(same_shape,iota(filter(filter(filter(x.s, rectangle), size3), size2)))]]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:nor[%s,%s];4:size3;4:not[%s];4:and[%s,%s];4:size3;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3;4:size2;1:%s.o;2:x
'λx.apply(nand[circle,triangle],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:circle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.forall(size3,filter(filter(filter(x.s, and[blue,apply(same_shape,iota(filter(filter(x.s, circle), not[nand[yellow,apply(same_size,x.o)]])))]), triangle), and[not[and[size2,or[size1,iff[yellow,green]]]],size3]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:nand[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:size2;4:or[%s,%s];4:size1;4:iff[%s,%s];4:yellow;4:green;4:size3
'λx.apply(size1,iota(filter(x.s, implies[blue,size1])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:blue;4:size1
'λx.apply(nand[iff[size2,green],size2],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:iff[%s,%s];4:size2;4:green;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[apply(size-geq,x.o),and[not[circle],blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:and[%s,%s];4:not[%s];4:circle;4:blue;1:%s.o;2:x
'λx.forall(and[and[nand[size2,blue],blue],size3],filter(x.s, circle))'	0:forall(%s,%s);4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:size2;4:blue;4:blue;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.exists(size1, filter(filter(x.s, rectangle), green))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green
'λx.apply(or[size1,green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:green;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, size2), size3)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3
'λx.apply(rectangle,iota(filter(filter(x.s, size1), size2)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2
'λx.apply(or[yellow,size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:size2;1:%s.o;2:x
'λx.empty(filter(filter(x.s, size3), and[and[apply(same_shape,x.o),apply(size-lt,x.o)],implies[circle,circle]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:implies[%s,%s];4:circle;4:circle
'λx.apply(rectangle,iota(filter(filter(x.s, size2), green)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green
'λx.empty(filter(filter(filter(filter(filter(x.s, size1), yellow), rectangle), or[rectangle,yellow]), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow;4:rectangle;4:or[%s,%s];4:rectangle;4:yellow;4:green
'λx.contains(iota(filter(filter(x.s, size3), triangle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle;3:%s.s;2:x
'λx.apply(implies[or[size2,or[yellow,size3]],size1],iota(filter(filter(filter(x.s, blue), triangle), apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:implies[%s,%s];4:or[%s,%s];4:size2;4:or[%s,%s];4:yellow;4:size3;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(filter(filter(filter(x.s, and[triangle,triangle]), size2), rectangle), yellow), apply(same_size,x.o))))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:triangle;4:size2;4:rectangle;4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(and[iff[size1,not[triangle]],triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:size1;4:not[%s];4:triangle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[apply(same_color,iota(x.s)),blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.apply(size3,iota(filter(x.s, nor[size3,not[or[green,size1]]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size3;4:not[%s];4:or[%s,%s];4:green;4:size1
'λx.apply(implies[size1,green],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:size1;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(x.s, and[triangle,and[yellow,iff[size1,triangle]]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:and[%s,%s];4:yellow;4:iff[%s,%s];4:size1;4:triangle
'λx.contains(x.o, filter(filter(filter(x.s, size1), green), blue))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green;4:blue
'λx.apply(apply(size-lt,x.o),iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[size3,rectangle],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(size1,iota(filter(filter(x.s, and[size3,size1]), nor[implies[triangle,green],green])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:size1;4:nor[%s,%s];4:implies[%s,%s];4:triangle;4:green;4:green
'λx.apply(or[circle,implies[or[or[green,apply(same_shape,x.o)],size3],circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:implies[%s,%s];4:or[%s,%s];4:or[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3;4:circle;1:%s.o;2:x
'λx.empty(filter(x.s, apply(same_color,iota(filter(filter(x.s, triangle), apply(size-lt,iota(filter(x.s, size1))))))))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(size3,iota(filter(filter(x.s, apply(same_color,x.o)), apply(same_size,iota(x.s)))))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.forall(or[size2,and[or[rectangle,rectangle],size1]],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:size2;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:rectangle;4:size1;3:%s.s;2:x
'λx.apply(and[yellow,implies[nand[not[size3],and[implies[size1,apply(size-gt,iota(filter(filter(x.s, blue), yellow)))],triangle]],and[size1,apply(same_shape,iota(filter(x.s, size2)))]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:implies[%s,%s];4:nand[%s,%s];4:not[%s];4:size3;4:and[%s,%s];4:implies[%s,%s];4:size1;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow;4:triangle;4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, size3), green)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green
'λx.exists(rectangle, filter(filter(x.s, and[and[rectangle,or[size1,rectangle]],green]), size3))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:or[%s,%s];4:size1;4:rectangle;4:green;4:size3
'λx.apply(rectangle,iota(filter(filter(x.s, implies[apply(same_color,x.o),triangle]), size1)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;4:size1
'λx.apply(triangle,iota(filter(filter(x.s, size2), green)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green
'λx.apply(triangle,iota(filter(filter(x.s, size1), green)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green
'λx.apply(and[size2,and[rectangle,nor[size3,yellow]]],iota(filter(filter(x.s, and[yellow,triangle]), not[size1])))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:rectangle;4:nor[%s,%s];4:size3;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:triangle;4:not[%s];4:size1
'λx.apply(not[and[implies[not[yellow],rectangle],blue]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:implies[%s,%s];4:not[%s];4:yellow;4:rectangle;4:blue;1:%s.o;2:x
'λx.apply(triangle,iota(filter(x.s, and[blue,size2])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size2
'λx.apply(circle,iota(filter(filter(filter(x.s, not[nand[size1,circle]]), size1), green)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:nand[%s,%s];4:size1;4:circle;4:size1;4:green
'λx.apply(blue,iota(filter(x.s, and[circle,apply(same_color,iota(filter(filter(x.s, apply(same_color,x.o)), triangle)))])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle
'λx.apply(triangle,iota(filter(filter(x.s, size1), size3)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size3
'λx.apply(iff[implies[circle,rectangle],not[yellow]],iota(filter(filter(x.s, apply(size-geq,x.o)), triangle)))'	0:apply(%s,%s);4:iff[%s,%s];4:implies[%s,%s];4:circle;4:rectangle;4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:triangle
'λx.apply(not[triangle],iota(filter(filter(x.s, size2), or[apply(size-geq,iota(x.s)),blue])))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:blue
'λx.apply(and[size3,and[size1,or[iff[or[size3,apply(same_size,iota(x.s))],and[blue,green]],size3]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:size1;4:or[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:green;4:size3;1:%s.o;2:x
'λx.exists(and[apply(same_color,x.o),apply(same_size,iota(x.s))], filter(filter(filter(filter(filter(x.s, blue), apply(same_color,x.o)), not[green]), or[circle,or[circle,apply(same_size,iota(filter(filter(x.s, yellow), triangle)))]]), size1))'	0:exists(%s, %s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:green;4:or[%s,%s];4:circle;4:or[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle;4:size1
'λx.apply(and[nor[green,and[implies[green,rectangle],apply(size-gt,x.o)]],size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:green;4:and[%s,%s];4:implies[%s,%s];4:green;4:rectangle;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(x.s, not[apply(same_size,x.o)])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(or[rectangle,and[green,and[not[rectangle],rectangle]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:and[%s,%s];4:green;4:and[%s,%s];4:not[%s];4:rectangle;4:rectangle;1:%s.o;2:x
'λx.exists(iff[not[implies[and[size3,size1],size3]],implies[and[yellow,blue],yellow]], x.s)'	0:exists(%s, %s);4:iff[%s,%s];4:not[%s];4:implies[%s,%s];4:and[%s,%s];4:size3;4:size1;4:size3;4:implies[%s,%s];4:and[%s,%s];4:yellow;4:blue;4:yellow;3:%s.s;2:x
'λx.apply(not[and[circle,size3]],iota(filter(filter(filter(filter(filter(x.s, yellow), size3), green), or[green,rectangle]), and[blue,blue])))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:circle;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size3;4:green;4:or[%s,%s];4:green;4:rectangle;4:and[%s,%s];4:blue;4:blue
'λx.contains(x.o, filter(filter(x.s, circle), yellow))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow
'λx.apply(and[iff[green,circle],and[size2,nand[blue,rectangle]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:green;4:circle;4:and[%s,%s];4:size2;4:nand[%s,%s];4:blue;4:rectangle;1:%s.o;2:x
'λx.empty(filter(filter(x.s, rectangle), implies[yellow,nand[apply(same_size,iota(x.s)),triangle]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:implies[%s,%s];4:yellow;4:nand[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:triangle
'λx.apply(apply(size-geq,iota(filter(x.s, and[rectangle,rectangle]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:rectangle;1:%s.o;2:x
'λx.forall(not[size1],filter(filter(x.s, and[yellow,yellow]), size2))'	0:forall(%s,%s);4:not[%s];4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:yellow;4:size2
'λx.apply(size3,iota(filter(x.s, and[nand[and[iff[apply(same_shape,x.o),size1],blue],implies[triangle,blue]],blue])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;4:blue;4:implies[%s,%s];4:triangle;4:blue;4:blue
'λx.exists(implies[circle,green], filter(x.s, size1))'	0:exists(%s, %s);4:implies[%s,%s];4:circle;4:green;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(apply(same_size,iota(x.s)),iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(implies[circle,apply(size-gt,iota(x.s))],iota(filter(filter(x.s, size3), and[and[or[apply(same_color,iota(filter(x.s, implies[not[and[blue,size3]],blue]))),and[yellow,nor[size3,and[and[or[or[yellow,and[rectangle,rectangle]],size3],size2],green]]]],circle],green])))'	0:apply(%s,%s);4:implies[%s,%s];4:circle;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:not[%s];4:and[%s,%s];4:blue;4:size3;4:blue;4:and[%s,%s];4:yellow;4:nor[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:yellow;4:and[%s,%s];4:rectangle;4:rectangle;4:size3;4:size2;4:green;4:circle;4:green
'λx.apply(not[implies[size3,blue]],iota(filter(filter(x.s, rectangle), circle)))'	0:apply(%s,%s);4:not[%s];4:implies[%s,%s];4:size3;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle
'λx.forall(or[and[circle,or[size3,blue]],and[size3,size3]],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:and[%s,%s];4:circle;4:or[%s,%s];4:size3;4:blue;4:and[%s,%s];4:size3;4:size3;3:%s.s;2:x
'λx.contains(iota(x.s), filter(filter(x.s, rectangle), apply(size-leq,iota(x.s))))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(x.s, not[triangle]), and[and[rectangle,size1],apply(same_size,iota(filter(filter(x.s, not[and[and[yellow,green],rectangle]]), not[nor[apply(size-leq,iota(x.s)),green]])))])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:green;4:rectangle;4:not[%s];4:nor[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:green
'λx.apply(and[and[rectangle,blue],and[size3,nor[and[size1,apply(same_shape,x.o)],apply(same_color,iota(x.s))]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:rectangle;4:blue;4:and[%s,%s];4:size3;4:nor[%s,%s];4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.empty(filter(x.s, blue))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(apply(size-lt,iota(filter(x.s, blue))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.apply(and[yellow,apply(same_color,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, and[triangle,size3]), or[blue,circle]), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:size3;4:or[%s,%s];4:blue;4:circle;4:yellow
'λx.apply(and[yellow,yellow],iota(filter(filter(x.s, yellow), not[and[apply(same_shape,iota(filter(filter(x.s, yellow), or[or[size1,yellow],blue]))),size2]])))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:or[%s,%s];4:size1;4:yellow;4:blue;4:size2
'λx.apply(or[nand[not[yellow],yellow],size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:not[%s];4:yellow;4:yellow;4:size2;1:%s.o;2:x
'λx.apply(and[triangle,not[not[rectangle]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:not[%s];4:not[%s];4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(size-leq,iota(filter(x.s, size3))),iota(filter(x.s, and[or[blue,or[and[size1,and[and[iff[yellow,size3],green],and[or[not[blue],circle],and[size2,and[or[yellow,circle],circle]]]]],not[size3]]],size3])))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:blue;4:or[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:yellow;4:size3;4:green;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:blue;4:circle;4:and[%s,%s];4:size2;4:and[%s,%s];4:or[%s,%s];4:yellow;4:circle;4:circle;4:not[%s];4:size3;4:size3
'λx.exists(or[rectangle,size1], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:rectangle;4:size1;3:%s.s;2:x
'λx.apply(or[triangle,triangle],iota(filter(x.s, not[size1])))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1
'λx.apply(or[iff[size3,size1],size3],iota(filter(x.s, implies[and[implies[triangle,size1],rectangle],rectangle])))'	0:apply(%s,%s);4:or[%s,%s];4:iff[%s,%s];4:size3;4:size1;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:triangle;4:size1;4:rectangle;4:rectangle
'λx.apply(yellow,iota(filter(filter(x.s, green), and[size3,size3])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:size3;4:size3
'λx.forall(not[circle],filter(x.s, and[yellow,apply(same_size,iota(filter(filter(filter(filter(x.s, rectangle), size3), and[rectangle,or[rectangle,circle]]), size3)))]))'	0:forall(%s,%s);4:not[%s];4:circle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:rectangle;4:circle;4:size3
'λx.apply(circle,iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.contains(iota(filter(filter(x.s, not[circle]), apply(same_color,iota(filter(filter(x.s, rectangle), implies[rectangle,blue]))))), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:implies[%s,%s];4:rectangle;4:blue;3:%s.s;2:x
'λx.apply(apply(same_size,iota(x.s)),iota(filter(filter(filter(x.s, or[apply(size-leq,iota(filter(filter(x.s, circle), rectangle))),and[triangle,rectangle]]), not[not[circle]]), apply(size-lt,x.o))))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle;4:and[%s,%s];4:triangle;4:rectangle;4:not[%s];4:not[%s];4:circle;4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.apply(and[rectangle,nor[size3,yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:nor[%s,%s];4:size3;4:yellow;1:%s.o;2:x
'λx.apply(and[size2,nor[or[circle,size3],size3]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:nor[%s,%s];4:or[%s,%s];4:circle;4:size3;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[nand[apply(same_color,iota(filter(x.s, blue))),or[green,size2]],blue],iota(filter(filter(filter(filter(filter(filter(x.s, green), yellow), size2), triangle), size2), triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:green;4:size2;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow;4:size2;4:triangle;4:size2;4:triangle
'λx.apply(blue,iota(filter(filter(x.s, size1), not[triangle])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:not[%s];4:triangle
'λx.apply(green,iota(filter(x.s, and[blue,size3])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size3
'λx.apply(not[green],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(nand[and[blue,green],blue],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:blue;4:green;4:blue;1:%s.o;2:x
'λx.apply(and[nor[not[size3],green],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:not[%s];4:size3;4:green;4:triangle;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, or[nand[blue,size3],size2])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:nand[%s,%s];4:blue;4:size3;4:size2
'λx.apply(implies[and[size1,not[triangle]],apply(same_shape,x.o)],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:size1;4:not[%s];4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(filter(filter(filter(filter(filter(filter(filter(filter(x.s, apply(size-gt,x.o)), apply(same_shape,x.o)), implies[nor[and[and[rectangle,size1],and[rectangle,or[triangle,green]]],apply(same_size,x.o)],size1]), and[yellow,size3]), circle), and[size2,size1]), and[triangle,blue]), triangle), size1), and[size3,circle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:implies[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size1;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:triangle;4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1;4:and[%s,%s];4:yellow;4:size3;4:circle;4:and[%s,%s];4:size2;4:size1;4:and[%s,%s];4:triangle;4:blue;4:triangle;4:size1;4:and[%s,%s];4:size3;4:circle
'λx.apply(blue,iota(filter(filter(filter(x.s, blue), blue), blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue;4:blue
'λx.apply(or[size2,not[apply(same_shape,x.o)]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(filter(x.s, rectangle), size3), and[rectangle,or[rectangle,circle]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:rectangle;4:circle
'λx.apply(and[circle,triangle],iota(filter(filter(filter(filter(x.s, blue), and[rectangle,yellow]), yellow), iff[or[blue,and[and[size1,or[and[rectangle,or[circle,not[size1]]],apply(same_size,x.o)]],or[rectangle,and[iff[size3,blue],circle]]]],nor[size2,size1]])))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:rectangle;4:yellow;4:yellow;4:iff[%s,%s];4:or[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:or[%s,%s];4:circle;4:not[%s];4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:rectangle;4:and[%s,%s];4:iff[%s,%s];4:size3;4:blue;4:circle;4:nor[%s,%s];4:size2;4:size1
'λx.apply(nor[triangle,apply(size-lt,iota(x.s))],iota(filter(x.s, nand[and[size3,and[green,not[size1]]],and[apply(same_size,x.o),not[circle]]])))'	0:apply(%s,%s);4:nor[%s,%s];4:triangle;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:green;4:not[%s];4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:not[%s];4:circle
'λx.apply(implies[rectangle,nand[and[blue,and[and[yellow,yellow],rectangle]],triangle]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:rectangle;4:nand[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:yellow;4:yellow;4:rectangle;4:triangle;1:%s.o;2:x
'λx.exists(size3, filter(filter(x.s, size1), yellow))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow
'λx.exists(yellow, filter(filter(x.s, green), blue))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue
'λx.apply(not[or[nor[not[apply(same_shape,iota(x.s))],rectangle],and[rectangle,size2]]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:nor[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:rectangle;4:size2;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(or[green,not[size3]],iota(filter(filter(filter(x.s, apply(size-geq,iota(x.s))), apply(size-lt,iota(x.s))), size3)))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:size3
'λx.apply(rectangle,iota(filter(x.s, not[circle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.apply(or[blue,implies[not[and[green,size3]],triangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:implies[%s,%s];4:not[%s];4:and[%s,%s];4:green;4:size3;4:triangle;1:%s.o;2:x
'λx.forall(apply(size-lt,x.o),filter(x.s, green))'	0:forall(%s,%s);4:apply(%s,%s);5:size-lt;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(or[iff[triangle,or[rectangle,or[triangle,and[yellow,apply(same_shape,iota(x.s))]]]],implies[blue,and[implies[rectangle,size3],circle]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:iff[%s,%s];4:triangle;4:or[%s,%s];4:rectangle;4:or[%s,%s];4:triangle;4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:implies[%s,%s];4:blue;4:and[%s,%s];4:implies[%s,%s];4:rectangle;4:size3;4:circle;1:%s.o;2:x
'λx.forall(not[green],filter(x.s, size1))'	0:forall(%s,%s);4:not[%s];4:green;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(not[apply(size-leq,iota(x.s))], x.s)'	0:exists(%s, %s);4:not[%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(nand[rectangle,implies[circle,circle]],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:rectangle;4:implies[%s,%s];4:circle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[size2],iota(filter(x.s, and[and[and[circle,green],circle],implies[rectangle,triangle]])))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:green;4:circle;4:implies[%s,%s];4:rectangle;4:triangle
'λx.apply(or[not[and[circle,green]],and[and[rectangle,not[nand[size2,rectangle]]],size3]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:and[%s,%s];4:circle;4:green;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:not[%s];4:nand[%s,%s];4:size2;4:rectangle;4:size3;1:%s.o;2:x
'λx.apply(or[not[nand[rectangle,size1]],blue],iota(filter(filter(filter(x.s, apply(size-leq,x.o)), size1), or[triangle,nand[and[not[size1],and[triangle,size3]],and[yellow,circle]]])))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:nand[%s,%s];4:rectangle;4:size1;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size1;4:or[%s,%s];4:triangle;4:nand[%s,%s];4:and[%s,%s];4:not[%s];4:size1;4:and[%s,%s];4:triangle;4:size3;4:and[%s,%s];4:yellow;4:circle
'λx.apply(iff[nor[green,apply(same_shape,x.o)],or[apply(size-geq,iota(filter(x.s, size2))),green]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:nor[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green;1:%s.o;2:x
'λx.apply(and[rectangle,blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(or[and[size2,not[and[nor[yellow,size1],and[size2,blue]]]],circle],iota(filter(filter(x.s, apply(same_shape,x.o)), rectangle)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size2;4:not[%s];4:and[%s,%s];4:nor[%s,%s];4:yellow;4:size1;4:and[%s,%s];4:size2;4:blue;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle
'λx.apply(or[not[and[apply(size-lt,iota(filter(filter(x.s, not[and[yellow,or[circle,size3]]]), apply(same_shape,x.o)))),circle]],or[size1,yellow]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:yellow;4:or[%s,%s];4:circle;4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;4:or[%s,%s];4:size1;4:yellow;1:%s.o;2:x
'λx.apply(and[or[not[or[nand[apply(same_color,iota(x.s)),size3],yellow]],apply(same_size,iota(x.s))],nor[triangle,nor[nand[nor[circle,rectangle],blue],apply(same_shape,x.o)]]],iota(filter(filter(x.s, rectangle), size1)))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:not[%s];4:or[%s,%s];4:nand[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size3;4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:nor[%s,%s];4:triangle;4:nor[%s,%s];4:nand[%s,%s];4:nor[%s,%s];4:circle;4:rectangle;4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1
'λx.apply(blue,iota(filter(filter(x.s, green), and[and[size1,or[size2,green]],rectangle])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:size2;4:green;4:rectangle
'λx.apply(not[blue],iota(filter(filter(x.s, not[green]), or[green,triangle])))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:or[%s,%s];4:green;4:triangle
'λx.exists(yellow, filter(x.s, circle))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(or[and[size2,and[circle,triangle]],blue],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:circle;4:triangle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[yellow,and[size3,size1]],iota(filter(filter(x.s, and[and[not[circle],nor[nand[green,green],apply(same_shape,x.o)]],and[triangle,size3]]), size3)))'	0:apply(%s,%s);4:implies[%s,%s];4:yellow;4:and[%s,%s];4:size3;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:circle;4:nor[%s,%s];4:nand[%s,%s];4:green;4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:triangle;4:size3;4:size3
'λx.apply(implies[green,yellow],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:green;4:yellow;1:%s.o;2:x
'λx.apply(nor[size3,or[size1,green]],iota(filter(x.s, and[rectangle,apply(size-geq,iota(x.s))])))'	0:apply(%s,%s);4:nor[%s,%s];4:size3;4:or[%s,%s];4:size1;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(size2,iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(size1,iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(iff[triangle,size3],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:triangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.exists(and[and[green,green],triangle], filter(x.s, not[size1]))'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:green;4:green;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1
'λx.apply(triangle,iota(filter(filter(x.s, green), implies[green,apply(same_size,iota(x.s))])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:implies[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(not[and[apply(same_size,iota(filter(filter(x.s, yellow), size1))),size2]],iota(filter(filter(x.s, and[rectangle,not[size3]]), yellow)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:not[%s];4:size3;4:yellow
'λx.apply(and[apply(same_color,x.o),and[circle,blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:circle;4:blue;1:%s.o;2:x
'λx.apply(and[size2,apply(same_size,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, blue), not[triangle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:triangle
'λx.apply(or[rectangle,and[rectangle,apply(same_shape,iota(filter(filter(filter(filter(x.s, not[apply(same_shape,x.o)]), triangle), circle), nor[size1,triangle])))]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle;4:circle;4:nor[%s,%s];4:size1;4:triangle;1:%s.o;2:x
'λx.forall(and[and[nand[green,size2],apply(same_color,iota(x.s))],triangle],filter(x.s, rectangle))'	0:forall(%s,%s);4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:green;4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(nor[size2,blue],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size2;4:blue;1:%s.o;2:x
'λx.apply(iff[blue,triangle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:blue;4:triangle;1:%s.o;2:x
'λx.apply(size1,iota(filter(x.s, not[or[blue,apply(same_shape,iota(filter(filter(x.s, or[not[yellow],implies[and[and[and[or[yellow,rectangle],green],not[triangle]],not[iff[size2,circle]]],nand[rectangle,circle]]]), yellow)))]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:yellow;4:implies[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:yellow;4:rectangle;4:green;4:not[%s];4:triangle;4:not[%s];4:iff[%s,%s];4:size2;4:circle;4:nand[%s,%s];4:rectangle;4:circle;4:yellow
'λx.apply(blue,iota(filter(filter(filter(filter(filter(x.s, not[not[circle]]), yellow), rectangle), or[not[or[size3,apply(same_shape,iota(filter(x.s, yellow)))]],or[rectangle,circle]]), and[or[green,or[circle,triangle]],triangle])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:circle;4:yellow;4:rectangle;4:or[%s,%s];4:not[%s];4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:rectangle;4:circle;4:and[%s,%s];4:or[%s,%s];4:green;4:or[%s,%s];4:circle;4:triangle;4:triangle
'λx.apply(rectangle,iota(filter(x.s, and[triangle,size2])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:size2
'λx.apply(yellow,iota(filter(x.s, and[size3,size1])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:size1
'λx.apply(or[circle,blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:blue;1:%s.o;2:x
'λx.contains(iota(filter(x.s, iff[or[and[size1,not[and[and[triangle,size1],apply(size-geq,x.o)]]],yellow],nor[circle,rectangle]])), filter(x.s, size2))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size1;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:size1;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:yellow;4:nor[%s,%s];4:circle;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(apply(same_shape,iota(filter(x.s, or[apply(same_color,iota(x.s)),circle]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:circle;1:%s.o;2:x
'λx.exists(or[not[circle],apply(same_size,iota(filter(x.s, yellow)))], filter(x.s, blue))'	0:exists(%s, %s);4:or[%s,%s];4:not[%s];4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.contains(iota(filter(x.s, blue)), filter(x.s, size1))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.contains(iota(filter(x.s, blue)), filter(x.s, size3))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(blue,iota(filter(x.s, or[green,apply(same_color,x.o)])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(filter(x.s, green), or[or[not[triangle],not[size2]],apply(same_color,iota(filter(filter(filter(x.s, rectangle), blue), size1)))]), and[blue,and[size2,and[yellow,blue]]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:or[%s,%s];4:not[%s];4:triangle;4:not[%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue;4:size1;4:and[%s,%s];4:blue;4:and[%s,%s];4:size2;4:and[%s,%s];4:yellow;4:blue
'λx.apply(and[size1,iff[nand[and[size1,triangle],triangle],and[or[size3,circle],size3]]],iota(filter(filter(x.s, size3), size2)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:iff[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:size1;4:triangle;4:triangle;4:and[%s,%s];4:or[%s,%s];4:size3;4:circle;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2
'λx.apply(or[circle,circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:circle;1:%s.o;2:x
'λx.apply(and[nand[circle,size1],size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:circle;4:size1;4:size3;1:iota(%s);3:%s.s;2:x
'λx.forall(and[circle,implies[size1,green]],filter(filter(filter(x.s, yellow), triangle), size2))'	0:forall(%s,%s);4:and[%s,%s];4:circle;4:implies[%s,%s];4:size1;4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle;4:size2
'λx.apply(iff[size2,and[or[size3,not[nor[yellow,circle]]],and[apply(same_size,iota(filter(x.s, implies[yellow,blue]))),or[apply(same_shape,iota(x.s)),blue]]]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:size2;4:and[%s,%s];4:or[%s,%s];4:size3;4:not[%s];4:nor[%s,%s];4:yellow;4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:yellow;4:blue;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.apply(implies[apply(same_color,x.o),rectangle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(filter(x.s, apply(same_color,iota(filter(filter(x.s, size3), size3)))), not[triangle]), circle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3;4:not[%s];4:triangle;4:circle
'λx.contains(iota(filter(x.s, blue)), filter(x.s, and[size1,circle]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:circle
'λx.forall(or[apply(size-leq,iota(x.s)),and[apply(same_color,x.o),nor[size3,circle]]],filter(x.s, nand[circle,size3]))'	0:forall(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:nor[%s,%s];4:size3;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:circle;4:size3
'λx.empty(filter(filter(filter(x.s, circle), apply(same_color,x.o)), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle
'λx.forall(green,filter(x.s, blue))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(nand[size1,triangle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size1;4:triangle;1:%s.o;2:x
'λx.exists(size2, filter(filter(filter(x.s, size3), yellow), size2))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow;4:size2
'λx.apply(nor[triangle,blue],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:triangle;4:blue;1:%s.o;2:x
'λx.apply(and[green,blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:blue;1:%s.o;2:x
'λx.apply(iff[green,size1],iota(filter(x.s, implies[size3,size1])))'	0:apply(%s,%s);4:iff[%s,%s];4:green;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size3;4:size1
'λx.exists(implies[triangle,apply(same_size,x.o)], x.s)'	0:exists(%s, %s);4:implies[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(rectangle,x.o)'	0:apply(%s,%s);4:rectangle;1:%s.o;2:x
'λx.apply(and[green,green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:green;1:iota(%s);3:%s.s;2:x
'λx.forall(apply(same_color,x.o),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(and[rectangle,yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, blue), size1))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1
'λx.apply(apply(size-gt,iota(x.s)),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(not[not[blue]],iota(filter(filter(x.s, or[circle,not[circle]]), and[blue,size3])))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:not[%s];4:circle;4:and[%s,%s];4:blue;4:size3
'λx.apply(and[size1,size2],iota(filter(filter(x.s, size1), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue
'λx.apply(triangle,iota(filter(x.s, or[or[triangle,and[and[apply(size-lt,iota(filter(x.s, and[nand[blue,and[blue,size2]],circle]))),circle],size1]],size3])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:triangle;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nand[%s,%s];4:blue;4:and[%s,%s];4:blue;4:size2;4:circle;4:circle;4:size1;4:size3
'λx.apply(nand[triangle,blue],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(or[not[size2],triangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:size2;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, yellow), implies[rectangle,not[green]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:implies[%s,%s];4:rectangle;4:not[%s];4:green
'λx.apply(and[triangle,blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:blue;1:%s.o;2:x
'λx.forall(blue,filter(x.s, apply(same_size,x.o)))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(size2,iota(filter(x.s, not[triangle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.apply(size3,iota(filter(x.s, not[triangle])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.apply(not[nand[size2,nor[yellow,size2]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:nand[%s,%s];4:size2;4:nor[%s,%s];4:yellow;4:size2;1:iota(%s);3:%s.s;2:x
'λx.forall(yellow,filter(x.s, yellow))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.exists(circle, filter(filter(x.s, or[rectangle,circle]), iff[and[green,blue],yellow]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:circle;4:iff[%s,%s];4:and[%s,%s];4:green;4:blue;4:yellow
'λx.apply(implies[size1,and[implies[green,size2],nand[nand[circle,size1],apply(same_shape,iota(filter(x.s, green)))]]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:size1;4:and[%s,%s];4:implies[%s,%s];4:green;4:size2;4:nand[%s,%s];4:nand[%s,%s];4:circle;4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(not[nand[rectangle,circle]],x.o)'	0:apply(%s,%s);4:not[%s];4:nand[%s,%s];4:rectangle;4:circle;1:%s.o;2:x
'λx.apply(apply(size-gt,iota(x.s)),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.exists(and[not[green],circle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:green;4:circle;3:%s.s;2:x
'λx.apply(and[apply(same_color,iota(x.s)),and[size1,circle]],iota(filter(filter(x.s, not[circle]), iff[and[circle,yellow],iff[nand[and[nor[circle,size1],or[blue,size1]],blue],and[or[yellow,yellow],circle]]])))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:iff[%s,%s];4:and[%s,%s];4:circle;4:yellow;4:iff[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:circle;4:size1;4:or[%s,%s];4:blue;4:size1;4:blue;4:and[%s,%s];4:or[%s,%s];4:yellow;4:yellow;4:circle
'λx.apply(size1,iota(filter(filter(filter(x.s, rectangle), or[and[or[rectangle,size2],size2],implies[or[nand[triangle,blue],and[nor[size3,size3],triangle]],and[rectangle,and[not[and[green,or[or[size3,size3],rectangle]]],apply(same_color,iota(filter(x.s, circle)))]]]]), size1)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:rectangle;4:size2;4:size2;4:implies[%s,%s];4:or[%s,%s];4:nand[%s,%s];4:triangle;4:blue;4:and[%s,%s];4:nor[%s,%s];4:size3;4:size3;4:triangle;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:green;4:or[%s,%s];4:or[%s,%s];4:size3;4:size3;4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1
'λx.apply(size2,iota(filter(filter(x.s, yellow), implies[and[circle,yellow],size2])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:implies[%s,%s];4:and[%s,%s];4:circle;4:yellow;4:size2
'λx.apply(and[size1,implies[size1,size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:implies[%s,%s];4:size1;4:size1;1:%s.o;2:x
'λx.apply(and[size1,or[circle,green]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:or[%s,%s];4:circle;4:green;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(x.s, and[and[rectangle,size2],nand[green,yellow]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size2;4:nand[%s,%s];4:green;4:yellow
'λx.apply(and[and[yellow,rectangle],or[yellow,or[apply(same_color,iota(x.s)),apply(same_shape,x.o)]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:rectangle;4:or[%s,%s];4:yellow;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(or[nand[yellow,size3],blue],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:yellow;4:size3;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(and[nand[rectangle,not[yellow]],nand[and[size2,and[triangle,yellow]],iff[size3,and[green,size1]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:rectangle;4:not[%s];4:yellow;4:nand[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:triangle;4:yellow;4:iff[%s,%s];4:size3;4:and[%s,%s];4:green;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, not[yellow]), blue)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:blue
'λx.apply(or[triangle,implies[green,and[and[not[green],apply(same_shape,iota(x.s))],blue]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:implies[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.empty(filter(filter(x.s, and[not[triangle],apply(same_size,iota(filter(x.s, blue)))]), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue
'λx.contains(x.o, filter(filter(filter(x.s, size3), or[size2,apply(same_size,iota(x.s))]), size1))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size1
'λx.apply(size3,iota(filter(filter(x.s, blue), circle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle
'λx.apply(size2,iota(filter(filter(filter(x.s, blue), not[rectangle]), nor[yellow,triangle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:rectangle;4:nor[%s,%s];4:yellow;4:triangle
'λx.apply(nor[not[apply(same_size,x.o)],apply(same_color,iota(x.s))],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(filter(filter(filter(filter(x.s, yellow), and[nor[size3,or[apply(same_shape,x.o),not[and[size3,circle]]]],size3]), green), not[size3]), triangle), size3)), filter(x.s, size1))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:nor[%s,%s];4:size3;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:size3;4:circle;4:size3;4:green;4:not[%s];4:size3;4:triangle;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(or[apply(same_color,x.o),size3],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(filter(x.s, size2), apply(same_shape,iota(filter(filter(x.s, not[triangle]), and[triangle,size1])))), and[size2,yellow])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:and[%s,%s];4:triangle;4:size1;4:and[%s,%s];4:size2;4:yellow
'λx.exists(implies[and[size1,and[or[size3,or[triangle,rectangle]],size3]],size3], x.s)'	0:exists(%s, %s);4:implies[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:or[%s,%s];4:size3;4:or[%s,%s];4:triangle;4:rectangle;4:size3;4:size3;3:%s.s;2:x
'λx.forall(size3,filter(filter(filter(filter(filter(x.s, not[size1]), size2), and[and[circle,green],and[size2,or[rectangle,or[and[iff[size1,size1],triangle],triangle]]]]), circle), not[apply(same_shape,x.o)]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:size2;4:and[%s,%s];4:and[%s,%s];4:circle;4:green;4:and[%s,%s];4:size2;4:or[%s,%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:size1;4:size1;4:triangle;4:triangle;4:circle;4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(implies[blue,size2],iota(filter(filter(filter(x.s, apply(same_color,x.o)), apply(same_size,x.o)), rectangle)))'	0:apply(%s,%s);4:implies[%s,%s];4:blue;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:rectangle
'λx.exists(green, filter(x.s, size1))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(green, filter(x.s, size3))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(green, filter(x.s, size2))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.exists(green, filter(x.s, green))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[blue,or[not[yellow],green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:or[%s,%s];4:not[%s];4:yellow;4:green;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(x.s)),iota(filter(x.s, or[circle,rectangle])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:rectangle
'λx.apply(or[rectangle,triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:triangle;1:%s.o;2:x
'λx.apply(apply(size-leq,iota(x.s)),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.exists(size1, filter(x.s, green))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.exists(size3, filter(x.s, green))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.exists(size1, filter(x.s, size2))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.exists(size1, filter(x.s, size3))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(size3, filter(x.s, size3))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(size3, filter(x.s, size2))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.exists(size3, filter(x.s, size1))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(size2, filter(x.s, size3))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(size2, filter(x.s, size1))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.forall(not[green],filter(x.s, nand[size2,circle]))'	0:forall(%s,%s);4:not[%s];4:green;3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size2;4:circle
'λx.apply(size3,iota(filter(filter(x.s, iff[apply(same_shape,x.o),yellow]), triangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow;4:triangle
'λx.contains(iota(filter(x.s, rectangle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(x.s, blue), triangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle
'λx.apply(nand[size1,apply(size-gt,iota(filter(filter(filter(filter(filter(x.s, apply(same_color,iota(filter(x.s, triangle)))), and[size2,size2]), green), blue), triangle)))],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size1;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:size2;4:size2;4:green;4:blue;4:triangle;1:%s.o;2:x
'λx.apply(nor[green,nor[yellow,rectangle]],iota(filter(x.s, apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:nor[%s,%s];4:green;4:nor[%s,%s];4:yellow;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size1,not[not[size1]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:not[%s];4:not[%s];4:size1;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, rectangle), blue)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue
'λx.apply(and[iff[yellow,and[circle,green]],size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:yellow;4:and[%s,%s];4:circle;4:green;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(or[apply(same_color,x.o),circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;1:%s.o;2:x
'λx.exists(not[green], filter(x.s, rectangle))'	0:exists(%s, %s);4:not[%s];4:green;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[or[size3,size1],or[green,rectangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size3;4:size1;4:or[%s,%s];4:green;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_color,x.o),iota(filter(x.s, blue)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.contains(iota(filter(filter(filter(filter(x.s, or[yellow,size2]), triangle), circle), size3)), filter(filter(filter(x.s, and[size2,triangle]), or[nor[and[and[apply(same_color,iota(filter(x.s, size2))),size2],yellow],circle],not[blue]]), blue))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:size2;4:triangle;4:circle;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:triangle;4:or[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2;4:yellow;4:circle;4:not[%s];4:blue;4:blue
'λx.apply(rectangle,iota(filter(x.s, and[yellow,not[blue]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:not[%s];4:blue
'λx.exists(green, filter(filter(x.s, circle), green))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green
'λx.apply(yellow,iota(filter(x.s, not[triangle])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.apply(apply(same_size,iota(filter(x.s, implies[yellow,or[yellow,triangle]]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:yellow;4:or[%s,%s];4:yellow;4:triangle;1:%s.o;2:x
'λx.contains(iota(x.s), filter(x.s, yellow))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(green,iota(filter(filter(filter(filter(x.s, not[implies[implies[nand[not[or[not[not[triangle]],not[and[circle,circle]]]],and[green,green]],size1],apply(same_shape,x.o)]]), triangle), nor[blue,triangle]), not[or[blue,rectangle]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:implies[%s,%s];4:implies[%s,%s];4:nand[%s,%s];4:not[%s];4:or[%s,%s];4:not[%s];4:not[%s];4:triangle;4:not[%s];4:and[%s,%s];4:circle;4:circle;4:and[%s,%s];4:green;4:green;4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle;4:nor[%s,%s];4:blue;4:triangle;4:not[%s];4:or[%s,%s];4:blue;4:rectangle
'λx.apply(green,iota(filter(filter(x.s, triangle), not[triangle])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:not[%s];4:triangle
'λx.apply(blue,iota(filter(x.s, or[apply(same_shape,x.o),triangle])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle
'λx.apply(not[nand[circle,and[nor[and[yellow,apply(same_size,iota(filter(x.s, not[and[and[green,iff[triangle,rectangle]],blue]])))],size3],yellow]]],x.o)'	0:apply(%s,%s);4:not[%s];4:nand[%s,%s];4:circle;4:and[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:green;4:iff[%s,%s];4:triangle;4:rectangle;4:blue;4:size3;4:yellow;1:%s.o;2:x
'λx.apply(size1,iota(filter(x.s, or[size1,not[green]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:not[%s];4:green
'λx.apply(nand[and[blue,and[or[or[iff[triangle,or[yellow,triangle]],circle],and[apply(same_size,iota(x.s)),or[size3,size1]]],size1]],green],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:iff[%s,%s];4:triangle;4:or[%s,%s];4:yellow;4:triangle;4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:size1;4:size1;4:green;1:%s.o;2:x
'λx.apply(and[rectangle,or[circle,and[size1,and[and[blue,size1],size3]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:or[%s,%s];4:circle;4:and[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:blue;4:size1;4:size3;1:iota(%s);3:%s.s;2:x
'λx.forall(rectangle,filter(x.s, circle))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(iff[triangle,nor[rectangle,not[rectangle]]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:triangle;4:nor[%s,%s];4:rectangle;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.apply(or[or[blue,circle],iff[size3,triangle]],iota(filter(filter(x.s, size3), blue)))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:blue;4:circle;4:iff[%s,%s];4:size3;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue
'λx.apply(apply(same_size,iota(x.s)),iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.contains(x.o, filter(filter(x.s, size3), rectangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle
'λx.contains(x.o, filter(filter(x.s, size1), rectangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle
'λx.empty(filter(filter(x.s, circle), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle
'λx.apply(size3,iota(filter(filter(x.s, rectangle), blue)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue
'λx.contains(x.o, filter(filter(filter(filter(filter(filter(x.s, or[and[green,blue],triangle]), and[and[size3,rectangle],apply(same_shape,iota(filter(x.s, or[and[blue,triangle],green])))]), rectangle), nand[blue,size1]), size3), or[apply(size-lt,x.o),size1]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:green;4:blue;4:triangle;4:and[%s,%s];4:and[%s,%s];4:size3;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:blue;4:triangle;4:green;4:rectangle;4:nand[%s,%s];4:blue;4:size1;4:size3;4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:size1
'λx.apply(and[size3,or[not[size2],or[yellow,or[rectangle,circle]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:or[%s,%s];4:not[%s];4:size2;4:or[%s,%s];4:yellow;4:or[%s,%s];4:rectangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[circle,size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:size3;1:%s.o;2:x
'λx.apply(and[circle,size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:size2;1:%s.o;2:x
'λx.apply(and[circle,size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:size1;1:%s.o;2:x
'λx.apply(triangle,iota(filter(x.s, apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.exists(apply(same_size,iota(filter(filter(x.s, size1), size2))), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2;3:%s.s;2:x
'λx.apply(or[size1,and[and[triangle,and[or[not[size1],not[green]],and[triangle,triangle]]],size2]],iota(filter(x.s, apply(same_shape,x.o))))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:size1;4:not[%s];4:green;4:and[%s,%s];4:triangle;4:triangle;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(apply(same_color,iota(filter(filter(x.s, size2), green))),iota(filter(x.s, iff[circle,and[blue,and[size2,green]]])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:circle;4:and[%s,%s];4:blue;4:and[%s,%s];4:size2;4:green
'λx.apply(apply(same_shape,iota(filter(x.s, blue))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.forall(and[size3,green],filter(filter(filter(filter(filter(x.s, and[apply(same_color,iota(filter(x.s, and[not[triangle],circle]))),yellow]), triangle), and[size2,and[size3,circle]]), not[triangle]), not[size2]))'	0:forall(%s,%s);4:and[%s,%s];4:size3;4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:triangle;4:circle;4:yellow;4:triangle;4:and[%s,%s];4:size2;4:and[%s,%s];4:size3;4:circle;4:not[%s];4:triangle;4:not[%s];4:size2
'λx.apply(or[size2,not[nand[iff[not[or[green,size1]],size2],size2]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:not[%s];4:nand[%s,%s];4:iff[%s,%s];4:not[%s];4:or[%s,%s];4:green;4:size1;4:size2;4:size2;1:%s.o;2:x
'λx.empty(filter(filter(x.s, implies[yellow,circle]), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:yellow;4:circle;4:rectangle
'λx.contains(iota(x.s), filter(x.s, or[size2,or[green,apply(same_color,iota(filter(filter(x.s, apply(same_color,x.o)), yellow)))]]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:or[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow
'λx.apply(and[circle,green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:green;1:%s.o;2:x
'λx.apply(and[and[circle,blue],or[iff[green,yellow],and[and[size2,rectangle],size2]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:blue;4:or[%s,%s];4:iff[%s,%s];4:green;4:yellow;4:and[%s,%s];4:and[%s,%s];4:size2;4:rectangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[and[green,not[iff[not[size2],apply(size-geq,iota(x.s))]]],blue],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:green;4:not[%s];4:iff[%s,%s];4:not[%s];4:size2;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.apply(nor[and[triangle,size2],size2],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:triangle;4:size2;4:size2;1:iota(%s);3:%s.s;2:x
'λx.forall(apply(same_size,iota(filter(x.s, size1))),filter(filter(filter(filter(x.s, size2), size2), size2), rectangle))'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2;4:size2;4:rectangle
'λx.apply(blue,iota(filter(filter(x.s, size2), triangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:triangle
'λx.apply(and[apply(same_size,iota(x.s)),circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:circle;1:%s.o;2:x
'λx.apply(and[circle,yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.exists(not[yellow], filter(x.s, blue))'	0:exists(%s, %s);4:not[%s];4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(blue,iota(filter(filter(x.s, size1), triangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle
'λx.apply(nand[size1,or[implies[implies[rectangle,and[rectangle,apply(same_size,iota(x.s))]],rectangle],yellow]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size1;4:or[%s,%s];4:implies[%s,%s];4:implies[%s,%s];4:rectangle;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:rectangle;4:yellow;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, apply(same_color,iota(filter(filter(filter(x.s, or[rectangle,size1]), blue), size3)))))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:size1;4:blue;4:size3
'λx.apply(or[blue,and[triangle,and[not[green],not[size2]]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:and[%s,%s];4:triangle;4:and[%s,%s];4:not[%s];4:green;4:not[%s];4:size2;1:%s.o;2:x
'λx.apply(apply(same_color,iota(filter(filter(x.s, circle), green))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green;1:%s.o;2:x
'λx.exists(or[size3,not[green]], filter(x.s, apply(same_color,x.o)))'	0:exists(%s, %s);4:or[%s,%s];4:size3;4:not[%s];4:green;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(and[yellow,apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.forall(rectangle,filter(filter(x.s, and[size1,implies[size1,nand[apply(same_size,iota(x.s)),rectangle]]]), nor[size1,rectangle]))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:implies[%s,%s];4:size1;4:nand[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:rectangle;4:nor[%s,%s];4:size1;4:rectangle
'λx.exists(size3, filter(x.s, triangle))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(and[triangle,and[size3,not[green]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:size3;4:not[%s];4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(not[blue],iota(filter(filter(filter(x.s, or[size2,or[rectangle,rectangle]]), green), triangle)))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:or[%s,%s];4:rectangle;4:rectangle;4:green;4:triangle
'λx.apply(and[and[blue,or[and[or[circle,apply(same_color,iota(x.s))],and[or[rectangle,nand[size3,or[not[yellow],rectangle]]],green]],and[rectangle,nor[size2,rectangle]]]],and[size1,triangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:nand[%s,%s];4:size3;4:or[%s,%s];4:not[%s];4:yellow;4:rectangle;4:green;4:and[%s,%s];4:rectangle;4:nor[%s,%s];4:size2;4:rectangle;4:and[%s,%s];4:size1;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, not[size2])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;3:%s.s;2:x
'λx.contains(iota(filter(x.s, not[size1])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;3:%s.s;2:x
'λx.exists(and[circle,yellow], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:circle;4:yellow;3:%s.s;2:x
'λx.apply(and[circle,rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:rectangle;1:%s.o;2:x
'λx.apply(and[implies[or[rectangle,size1],apply(same_shape,iota(filter(x.s, yellow)))],rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:rectangle;4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[implies[and[size3,yellow],green],iff[and[size3,blue],implies[not[not[and[triangle,size3]]],or[triangle,yellow]]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:size3;4:yellow;4:green;4:iff[%s,%s];4:and[%s,%s];4:size3;4:blue;4:implies[%s,%s];4:not[%s];4:not[%s];4:and[%s,%s];4:triangle;4:size3;4:or[%s,%s];4:triangle;4:yellow;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, and[yellow,rectangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:rectangle
'λx.apply(iff[or[circle,circle],apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:or[%s,%s];4:circle;4:circle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(or[and[apply(same_shape,iota(filter(x.s, nand[or[not[triangle],rectangle],triangle]))),apply(size-lt,iota(x.s))],size2],iota(filter(filter(x.s, size3), circle)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:or[%s,%s];4:not[%s];4:triangle;4:rectangle;4:triangle;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle
'λx.apply(apply(same_size,x.o),iota(filter(filter(x.s, size1), green)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green
'λx.apply(and[triangle,apply(size-gt,iota(x.s))],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_shape,x.o),iota(filter(x.s, and[not[circle],and[size1,circle]])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:circle;4:and[%s,%s];4:size1;4:circle
'λx.apply(triangle,iota(filter(x.s, apply(same_shape,iota(filter(x.s, not[green]))))))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green
'λx.apply(apply(same_size,x.o),iota(filter(filter(x.s, size2), size1)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1
'λx.forall(iff[circle,and[circle,yellow]],x.s)'	0:forall(%s,%s);4:iff[%s,%s];4:circle;4:and[%s,%s];4:circle;4:yellow;3:%s.s;2:x
'λx.apply(apply(same_size,iota(filter(x.s, triangle))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(x.s, green), and[green,triangle])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:green;4:triangle
'λx.apply(size3,iota(filter(x.s, not[circle])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.apply(size1,iota(filter(x.s, not[circle])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.apply(implies[iff[nand[triangle,nor[yellow,apply(same_size,iota(x.s))]],rectangle],circle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:iff[%s,%s];4:nand[%s,%s];4:triangle;4:nor[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:rectangle;4:circle;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, blue), blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue
'λx.apply(or[and[size2,size3],size3],iota(filter(filter(filter(x.s, apply(same_size,x.o)), circle), yellow)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size2;4:size3;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;4:yellow
'λx.apply(and[triangle,not[circle]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[or[or[apply(same_color,iota(filter(filter(x.s, yellow), green))),and[or[size1,size3],implies[nor[rectangle,and[green,nor[size3,yellow]]],green]]],and[and[size3,blue],apply(same_shape,iota(x.s))]],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green;4:and[%s,%s];4:or[%s,%s];4:size1;4:size3;4:implies[%s,%s];4:nor[%s,%s];4:rectangle;4:and[%s,%s];4:green;4:nor[%s,%s];4:size3;4:yellow;4:green;4:and[%s,%s];4:and[%s,%s];4:size3;4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle;1:%s.o;2:x
'λx.apply(or[not[size3],size2],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:size3;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[circle,rectangle],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:circle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.exists(triangle, filter(x.s, rectangle))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.contains(iota(filter(filter(x.s, rectangle), apply(same_color,x.o))), filter(x.s, and[or[not[and[blue,yellow]],yellow],triangle]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:and[%s,%s];4:blue;4:yellow;4:yellow;4:triangle
'λx.apply(size2,iota(filter(filter(x.s, or[green,size1]), circle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:size1;4:circle
'λx.apply(and[green,triangle],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.empty(filter(x.s, nand[size2,blue]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size2;4:blue
'λx.forall(circle,filter(filter(x.s, size3), blue))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue
'λx.contains(iota(filter(filter(x.s, apply(same_shape,iota(x.s))), circle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle;3:%s.s;2:x
'λx.apply(or[and[blue,green],apply(same_shape,x.o)],iota(filter(x.s, and[circle,yellow])))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:blue;4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:yellow
'λx.apply(and[yellow,size2],iota(filter(filter(x.s, and[or[or[triangle,size1],circle],apply(size-leq,x.o)]), size1)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:triangle;4:size1;4:circle;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size1
'λx.empty(filter(filter(filter(x.s, not[triangle]), yellow), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:yellow;4:blue
'λx.apply(and[and[triangle,green],yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:green;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[apply(same_size,iota(filter(filter(x.s, green), nor[yellow,not[size3]]))),and[rectangle,or[or[apply(same_color,x.o),triangle],size3]]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:nor[%s,%s];4:yellow;4:not[%s];4:size3;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;4:size3;1:%s.o;2:x
'λx.apply(or[size1,implies[size1,size2]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:implies[%s,%s];4:size1;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[rectangle,size3],iota(filter(x.s, nor[size2,circle])))'	0:apply(%s,%s);4:nor[%s,%s];4:rectangle;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size2;4:circle
'λx.apply(yellow,iota(filter(x.s, iff[or[circle,size3],blue])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:or[%s,%s];4:circle;4:size3;4:blue
'λx.apply(or[yellow,triangle],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(or[nand[not[size3],yellow],implies[yellow,and[green,size2]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:not[%s];4:size3;4:yellow;4:implies[%s,%s];4:yellow;4:and[%s,%s];4:green;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[apply(same_shape,x.o),and[blue,rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:blue;4:rectangle;1:%s.o;2:x
'λx.apply(nand[nor[triangle,and[apply(same_shape,x.o),rectangle]],circle],iota(filter(filter(x.s, triangle), circle)))'	0:apply(%s,%s);4:nand[%s,%s];4:nor[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle
'λx.exists(yellow, filter(filter(filter(x.s, size3), and[triangle,green]), not[apply(same_size,x.o)]))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:triangle;4:green;4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(or[size1,triangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(x.s), filter(filter(filter(x.s, size1), size1), green))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1;4:green
'λx.apply(or[and[apply(same_shape,x.o),blue],triangle],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.contains(x.o, filter(filter(x.s, circle), size1))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1
'λx.empty(filter(filter(filter(filter(filter(x.s, green), triangle), implies[and[green,size3],apply(same_shape,x.o)]), size1), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:triangle;4:implies[%s,%s];4:and[%s,%s];4:green;4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;4:size2
'λx.apply(iff[yellow,apply(size-gt,x.o)],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:yellow;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.exists(size3, filter(filter(x.s, blue), circle))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle
'λx.apply(and[size2,or[or[size1,rectangle],nand[size2,and[green,and[rectangle,size1]]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:or[%s,%s];4:or[%s,%s];4:size1;4:rectangle;4:nand[%s,%s];4:size2;4:and[%s,%s];4:green;4:and[%s,%s];4:rectangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.exists(blue, filter(filter(filter(x.s, size1), green), not[and[circle,apply(same_shape,x.o)]]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green;4:not[%s];4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, blue), apply(same_shape,x.o))))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(apply(same_size,x.o),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.forall(and[and[rectangle,blue],apply(same_color,x.o)],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:and[%s,%s];4:rectangle;4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(implies[triangle,blue],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:triangle;4:blue;1:%s.o;2:x
'λx.empty(filter(filter(x.s, apply(same_color,x.o)), or[size1,blue]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:or[%s,%s];4:size1;4:blue
'λx.apply(and[not[green],implies[and[green,circle],triangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:green;4:implies[%s,%s];4:and[%s,%s];4:green;4:circle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[apply(same_shape,x.o),yellow],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.forall(and[green,not[triangle]],filter(filter(filter(filter(filter(filter(x.s, yellow), circle), apply(same_shape,iota(x.s))), or[apply(same_shape,x.o),size2]), circle), implies[rectangle,and[triangle,apply(same_size,x.o)]]))'	0:forall(%s,%s);4:and[%s,%s];4:green;4:not[%s];4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2;4:circle;4:implies[%s,%s];4:rectangle;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(apply(same_shape,x.o),iota(filter(x.s, and[size2,nand[size1,size1]])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:nand[%s,%s];4:size1;4:size1
'λx.apply(implies[size2,circle],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:size2;4:circle;1:iota(%s);3:%s.s;2:x
'λx.forall(not[nor[size2,size2]],x.s)'	0:forall(%s,%s);4:not[%s];4:nor[%s,%s];4:size2;4:size2;3:%s.s;2:x
'λx.apply(or[and[size1,and[circle,triangle]],not[apply(size-geq,iota(x.s))]],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:circle;4:triangle;4:not[%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(size3,iota(filter(x.s, or[green,size1])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:size1
'λx.apply(blue,iota(filter(filter(filter(filter(x.s, apply(same_size,iota(x.s))), green), rectangle), apply(same_shape,iota(x.s)))))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:green;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[size2,rectangle],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:size2;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, and[apply(same_color,iota(filter(filter(x.s, circle), blue))),size2])), filter(filter(filter(filter(filter(x.s, apply(size-lt,x.o)), size2), and[triangle,size2]), rectangle), or[triangle,blue]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:size2;4:and[%s,%s];4:triangle;4:size2;4:rectangle;4:or[%s,%s];4:triangle;4:blue
'λx.exists(green, filter(filter(x.s, green), and[implies[size2,not[triangle]],size2]))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:implies[%s,%s];4:size2;4:not[%s];4:triangle;4:size2
'λx.apply(triangle,iota(filter(x.s, and[size3,size3])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:size3
'λx.apply(or[and[green,apply(same_color,iota(x.s))],not[size2]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:not[%s];4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size2,apply(size-gt,iota(filter(x.s, yellow)))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, or[implies[blue,size2],not[or[yellow,or[apply(size-geq,x.o),size1]]]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:implies[%s,%s];4:blue;4:size2;4:not[%s];4:or[%s,%s];4:yellow;4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:size1
'λx.forall(blue,filter(x.s, not[rectangle]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle
'λx.apply(apply(same_shape,x.o),iota(filter(filter(x.s, blue), size3)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3
'λx.apply(and[blue,apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(or[not[and[apply(same_shape,x.o),size2]],triangle],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(and[triangle,green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:green;1:%s.o;2:x
'λx.apply(and[size2,apply(same_shape,x.o)],iota(filter(filter(x.s, and[size1,size2]), not[yellow])))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size2;4:not[%s];4:yellow
'λx.forall(implies[apply(size-leq,x.o),apply(size-lt,iota(filter(filter(x.s, circle), and[circle,green])))],filter(x.s, size2))'	0:forall(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:circle;4:green;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(nor[iff[blue,or[not[not[implies[green,blue]]],circle]],and[yellow,size2]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:nor[%s,%s];4:iff[%s,%s];4:blue;4:or[%s,%s];4:not[%s];4:not[%s];4:implies[%s,%s];4:green;4:blue;4:circle;4:and[%s,%s];4:yellow;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.contains(iota(filter(x.s, and[nand[rectangle,apply(same_size,iota(x.s))],and[rectangle,size2]])), filter(filter(filter(filter(x.s, and[size2,size2]), yellow), nand[yellow,size1]), rectangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nand[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:size2;4:yellow;4:nand[%s,%s];4:yellow;4:size1;4:rectangle
'λx.apply(triangle,iota(filter(filter(filter(filter(filter(x.s, blue), green), triangle), and[and[rectangle,size1],triangle]), green)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green;4:triangle;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size1;4:triangle;4:green
'λx.apply(and[size2,and[size1,or[circle,size2]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:size1;4:or[%s,%s];4:circle;4:size2;1:%s.o;2:x
'λx.apply(and[apply(same_shape,iota(x.s)),size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, green), or[size3,apply(size-geq,x.o)])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:size3;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.apply(and[or[blue,yellow],size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:blue;4:yellow;4:size3;1:iota(%s);3:%s.s;2:x
'λx.exists(nand[green,not[size2]], x.s)'	0:exists(%s, %s);4:nand[%s,%s];4:green;4:not[%s];4:size2;3:%s.s;2:x
'λx.apply(and[green,triangle],iota(filter(filter(x.s, and[nor[yellow,and[circle,and[size3,size2]]],apply(same_color,iota(x.s))]), green)))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:yellow;4:and[%s,%s];4:circle;4:and[%s,%s];4:size3;4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:green
'λx.apply(circle,iota(filter(filter(x.s, apply(same_size,x.o)), or[and[apply(same_size,x.o),and[and[apply(same_shape,x.o),and[apply(same_size,iota(filter(x.s, or[size3,green]))),blue]],yellow]],nand[size2,size1]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:green;4:blue;4:yellow;4:nand[%s,%s];4:size2;4:size1
'λx.apply(implies[rectangle,size3],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:rectangle;4:size3;1:%s.o;2:x
'λx.apply(implies[rectangle,size1],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:rectangle;4:size1;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(x.s, rectangle), and[and[and[and[and[triangle,apply(same_color,iota(x.s))],yellow],yellow],not[blue]],and[size1,blue]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:yellow;4:yellow;4:not[%s];4:blue;4:and[%s,%s];4:size1;4:blue
'λx.apply(or[iff[rectangle,size3],size3],iota(filter(filter(x.s, circle), triangle)))'	0:apply(%s,%s);4:or[%s,%s];4:iff[%s,%s];4:rectangle;4:size3;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle
'λx.apply(not[apply(size-geq,iota(filter(x.s, size1)))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;1:%s.o;2:x
'λx.apply(nand[green,circle],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:green;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(x.s, or[and[green,blue],triangle]), blue)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:green;4:blue;4:triangle;4:blue
'λx.apply(or[nand[or[and[apply(size-gt,iota(x.s)),and[triangle,apply(same_shape,x.o)]],green],size2],apply(same_color,iota(x.s))],iota(filter(filter(x.s, circle), triangle)))'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green;4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle
'λx.apply(and[apply(same_color,iota(filter(filter(x.s, size2), triangle))),size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:triangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_color,iota(filter(filter(x.s, size1), and[green,and[not[rectangle],rectangle]]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:green;4:and[%s,%s];4:not[%s];4:rectangle;4:rectangle;1:%s.o;2:x
'λx.apply(and[not[green],circle],iota(filter(filter(filter(filter(x.s, implies[size2,blue]), nand[yellow,size2]), rectangle), apply(same_shape,x.o))))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:green;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size2;4:blue;4:nand[%s,%s];4:yellow;4:size2;4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.contains(iota(filter(x.s, rectangle)), filter(filter(x.s, green), and[not[size2],iff[yellow,yellow]]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:not[%s];4:size2;4:iff[%s,%s];4:yellow;4:yellow
'λx.apply(iff[blue,and[apply(same_size,x.o),triangle]],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:iff[%s,%s];4:blue;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.forall(apply(same_size,iota(filter(filter(filter(x.s, implies[and[iff[triangle,size3],or[and[size3,size1],circle]],and[not[and[triangle,size3]],blue]]), apply(same_size,x.o)), and[blue,rectangle]))),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:triangle;4:size3;4:or[%s,%s];4:and[%s,%s];4:size3;4:size1;4:circle;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:triangle;4:size3;4:blue;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:blue;4:rectangle;3:%s.s;2:x
'λx.apply(or[blue,not[rectangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.apply(nor[yellow,and[size1,implies[size3,and[or[blue,triangle],not[rectangle]]]]],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:yellow;4:and[%s,%s];4:size1;4:implies[%s,%s];4:size3;4:and[%s,%s];4:or[%s,%s];4:blue;4:triangle;4:not[%s];4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, yellow), green), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green;4:circle
'λx.apply(nor[apply(size-geq,iota(filter(filter(filter(x.s, size2), circle), rectangle))),triangle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle;4:rectangle;4:triangle;1:%s.o;2:x
'λx.contains(iota(x.s), filter(x.s, circle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(not[nand[not[and[and[yellow,size1],or[or[size3,green],triangle]]],size3]],x.o)'	0:apply(%s,%s);4:not[%s];4:nand[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:size1;4:or[%s,%s];4:or[%s,%s];4:size3;4:green;4:triangle;4:size3;1:%s.o;2:x
'λx.exists(or[size3,size3], filter(x.s, and[size1,circle]))'	0:exists(%s, %s);4:or[%s,%s];4:size3;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:circle
'λx.apply(blue,iota(filter(filter(x.s, and[yellow,or[and[yellow,yellow],and[not[yellow],blue]]]), size3)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:or[%s,%s];4:and[%s,%s];4:yellow;4:yellow;4:and[%s,%s];4:not[%s];4:yellow;4:blue;4:size3
'λx.exists(apply(same_size,iota(filter(x.s, blue))), filter(x.s, blue))'	0:exists(%s, %s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.forall(not[or[rectangle,not[rectangle]]],filter(filter(x.s, size2), and[circle,and[size1,circle]]))'	0:forall(%s,%s);4:not[%s];4:or[%s,%s];4:rectangle;4:not[%s];4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:circle;4:and[%s,%s];4:size1;4:circle
'λx.exists(apply(same_color,x.o), filter(filter(x.s, size2), green))'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green
'λx.apply(yellow,iota(filter(filter(filter(x.s, and[blue,nand[rectangle,triangle]]), green), and[size1,yellow])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:nand[%s,%s];4:rectangle;4:triangle;4:green;4:and[%s,%s];4:size1;4:yellow
'λx.apply(size3,iota(filter(x.s, iff[size1,size2])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size1;4:size2
'λx.apply(and[or[triangle,size1],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:triangle;4:size1;4:size1;1:%s.o;2:x
'λx.exists(circle, filter(filter(filter(filter(x.s, and[triangle,nor[or[blue,triangle],triangle]]), rectangle), size3), not[yellow]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:nor[%s,%s];4:or[%s,%s];4:blue;4:triangle;4:triangle;4:rectangle;4:size3;4:not[%s];4:yellow
'λx.forall(not[and[yellow,not[or[green,or[nor[size2,size1],size3]]]]],filter(filter(x.s, blue), green))'	0:forall(%s,%s);4:not[%s];4:and[%s,%s];4:yellow;4:not[%s];4:or[%s,%s];4:green;4:or[%s,%s];4:nor[%s,%s];4:size2;4:size1;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green
'λx.apply(nor[and[green,size1],apply(size-leq,x.o)],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:green;4:size1;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(filter(x.s, size1), size3), size3)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size3;4:size3
'λx.apply(size2,iota(filter(x.s, apply(size-geq,x.o))))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.apply(nor[or[and[and[rectangle,implies[green,not[and[not[blue],size1]]]],size3],size3],rectangle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:implies[%s,%s];4:green;4:not[%s];4:and[%s,%s];4:not[%s];4:blue;4:size1;4:size3;4:size3;4:rectangle;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, apply(same_color,iota(x.s))))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(x.s, and[not[and[size1,size3]],circle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:size1;4:size3;4:circle
'λx.forall(not[size3],filter(x.s, not[or[not[size2],triangle]]))'	0:forall(%s,%s);4:not[%s];4:size3;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:not[%s];4:size2;4:triangle
'λx.forall(nor[nor[yellow,nor[apply(size-leq,iota(filter(filter(filter(x.s, or[yellow,blue]), circle), size3))),green]],and[apply(same_size,x.o),size3]],x.s)'	0:forall(%s,%s);4:nor[%s,%s];4:nor[%s,%s];4:yellow;4:nor[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:blue;4:circle;4:size3;4:green;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;3:%s.s;2:x
'λx.apply(rectangle,iota(filter(x.s, and[size2,and[circle,size1]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:and[%s,%s];4:circle;4:size1
'λx.apply(and[and[or[and[green,green],and[rectangle,size3]],size2],apply(same_color,iota(filter(filter(x.s, and[yellow,yellow]), and[size3,not[triangle]])))],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:green;4:green;4:and[%s,%s];4:rectangle;4:size3;4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:yellow;4:and[%s,%s];4:size3;4:not[%s];4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[apply(same_size,x.o),size3],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.forall(blue,filter(filter(x.s, size2), yellow))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:yellow
'λx.apply(rectangle,iota(filter(filter(x.s, size2), triangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:triangle
'λx.forall(rectangle,filter(filter(filter(x.s, triangle), size1), green))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size1;4:green
'λx.apply(and[and[nand[rectangle,triangle],size1],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:rectangle;4:triangle;4:size1;4:triangle;1:%s.o;2:x
'λx.exists(iff[or[yellow,size2],size1], x.s)'	0:exists(%s, %s);4:iff[%s,%s];4:or[%s,%s];4:yellow;4:size2;4:size1;3:%s.s;2:x
'λx.forall(not[apply(same_shape,iota(filter(x.s, iff[apply(size-gt,x.o),rectangle])))],x.s)'	0:forall(%s,%s);4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:rectangle;3:%s.s;2:x
'λx.apply(nor[size3,circle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size3;4:circle;1:%s.o;2:x
'λx.apply(implies[green,blue],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:green;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[triangle,size2],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:triangle;4:size2;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(filter(x.s, nor[nand[size2,rectangle],blue]), yellow), circle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:nand[%s,%s];4:size2;4:rectangle;4:blue;4:yellow;4:circle
'λx.apply(blue,iota(filter(filter(x.s, or[blue,apply(same_shape,x.o)]), nand[triangle,rectangle])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:nand[%s,%s];4:triangle;4:rectangle
'λx.apply(apply(same_color,iota(x.s)),iota(filter(filter(filter(filter(x.s, size3), size2), not[and[nor[yellow,not[triangle]],circle]]), yellow)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2;4:not[%s];4:and[%s,%s];4:nor[%s,%s];4:yellow;4:not[%s];4:triangle;4:circle;4:yellow
'λx.apply(blue,iota(filter(filter(x.s, triangle), and[and[and[and[blue,circle],and[not[size1],and[rectangle,yellow]]],not[circle]],blue])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:circle;4:and[%s,%s];4:not[%s];4:size1;4:and[%s,%s];4:rectangle;4:yellow;4:not[%s];4:circle;4:blue
'λx.exists(size2, filter(filter(x.s, and[and[size1,and[and[or[triangle,not[green]],triangle],triangle]],size3]), circle))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:triangle;4:not[%s];4:green;4:triangle;4:triangle;4:size3;4:circle
'λx.empty(filter(filter(filter(filter(x.s, green), apply(same_color,iota(filter(x.s, size2)))), green), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green;4:yellow
'λx.apply(not[not[and[rectangle,triangle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:and[%s,%s];4:rectangle;4:triangle;1:%s.o;2:x
'λx.apply(and[size2,and[green,apply(same_color,x.o)]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[rectangle,rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:rectangle;1:%s.o;2:x
'λx.apply(not[apply(same_size,iota(x.s))],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[triangle,not[not[not[rectangle]]]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:triangle;4:not[%s];4:not[%s];4:not[%s];4:rectangle;1:%s.o;2:x
'λx.apply(nand[or[size2,apply(same_size,iota(x.s))],not[or[and[circle,blue],and[and[or[and[and[size3,size3],blue],not[and[size2,or[rectangle,size1]]]],blue],apply(same_size,x.o)]]]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:circle;4:blue;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:size3;4:blue;4:not[%s];4:and[%s,%s];4:size2;4:or[%s,%s];4:rectangle;4:size1;4:blue;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, or[and[or[not[green],blue],and[yellow,and[blue,size1]]],yellow]), nor[and[and[or[and[yellow,blue],rectangle],apply(same_size,iota(filter(x.s, blue)))],and[green,circle]],and[blue,size3]])), filter(x.s, size2))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:not[%s];4:green;4:blue;4:and[%s,%s];4:yellow;4:and[%s,%s];4:blue;4:size1;4:yellow;4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:yellow;4:blue;4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:green;4:circle;4:and[%s,%s];4:blue;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(not[nand[size2,size2]],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:not[%s];4:nand[%s,%s];4:size2;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.forall(not[rectangle],filter(filter(x.s, size3), green))'	0:forall(%s,%s);4:not[%s];4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green
'λx.apply(iff[rectangle,green],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:rectangle;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[rectangle,green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[apply(same_shape,x.o),size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[apply(same_shape,x.o),size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(and[apply(same_shape,x.o),size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(x.s, yellow), rectangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle
'λx.apply(implies[apply(same_color,iota(x.s)),and[or[and[iff[rectangle,and[blue,circle]],size2],or[triangle,size3]],green]],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:rectangle;4:and[%s,%s];4:blue;4:circle;4:size2;4:or[%s,%s];4:triangle;4:size3;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(yellow,iota(filter(x.s, and[size3,implies[size3,circle]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:implies[%s,%s];4:size3;4:circle
'λx.contains(iota(filter(x.s, blue)), filter(filter(x.s, size1), rectangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle
'λx.exists(and[rectangle,size1], filter(x.s, and[green,size3]))'	0:exists(%s, %s);4:and[%s,%s];4:rectangle;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:size3
'λx.apply(rectangle,iota(filter(x.s, and[nand[size1,triangle],circle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nand[%s,%s];4:size1;4:triangle;4:circle
'λx.contains(iota(filter(filter(x.s, size3), blue)), filter(x.s, green))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(or[green,green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:green;1:%s.o;2:x
'λx.apply(or[and[size1,blue],yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size1;4:blue;4:yellow;1:%s.o;2:x
'λx.apply(not[size2],iota(filter(filter(x.s, size2), not[size3])))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:not[%s];4:size3
'λx.apply(apply(same_color,x.o),iota(filter(filter(filter(filter(filter(x.s, implies[not[blue],or[not[or[green,size2]],size2]]), yellow), size3), size1), iff[rectangle,not[or[green,rectangle]]])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:not[%s];4:blue;4:or[%s,%s];4:not[%s];4:or[%s,%s];4:green;4:size2;4:size2;4:yellow;4:size3;4:size1;4:iff[%s,%s];4:rectangle;4:not[%s];4:or[%s,%s];4:green;4:rectangle
'λx.apply(or[and[blue,triangle],yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:blue;4:triangle;4:yellow;1:%s.o;2:x
'λx.apply(and[circle,size1],iota(filter(filter(x.s, or[green,green]), apply(size-leq,iota(x.s)))))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:green;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(size-gt,iota(filter(x.s, apply(same_shape,x.o)))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.exists(circle, filter(filter(x.s, or[green,rectangle]), circle))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:rectangle;4:circle
'λx.apply(green,iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(apply(same_size,iota(filter(filter(filter(filter(x.s, and[green,blue]), circle), triangle), circle))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:blue;4:circle;4:triangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(x.s, or[size2,triangle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:triangle
'λx.apply(apply(same_color,iota(filter(filter(filter(x.s, green), size3), not[yellow]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size3;4:not[%s];4:yellow;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(filter(filter(filter(x.s, and[green,blue]), circle), triangle), circle), yellow))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:blue;4:circle;4:triangle;4:circle;4:yellow
'λx.apply(blue,iota(filter(filter(x.s, or[size2,circle]), rectangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:circle;4:rectangle
'λx.apply(circle,iota(filter(x.s, and[apply(same_shape,iota(filter(x.s, and[blue,green]))),circle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:green;4:circle
'λx.forall(nor[size3,yellow],x.s)'	0:forall(%s,%s);4:nor[%s,%s];4:size3;4:yellow;3:%s.s;2:x
'λx.exists(and[not[rectangle],size2], filter(x.s, apply(same_color,iota(filter(filter(x.s, green), or[or[and[size2,triangle],triangle],size1])))))'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:rectangle;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size2;4:triangle;4:triangle;4:size1
'λx.apply(and[circle,and[yellow,triangle]],iota(filter(filter(x.s, and[size2,nor[apply(same_size,iota(filter(filter(filter(filter(x.s, size2), size3), and[implies[triangle,green],blue]), blue))),yellow]]), nand[and[size3,iff[size2,or[and[size3,circle],not[and[and[or[circle,not[triangle]],rectangle],blue]]]]],implies[size2,yellow]])))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:and[%s,%s];4:yellow;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3;4:and[%s,%s];4:implies[%s,%s];4:triangle;4:green;4:blue;4:blue;4:yellow;4:nand[%s,%s];4:and[%s,%s];4:size3;4:iff[%s,%s];4:size2;4:or[%s,%s];4:and[%s,%s];4:size3;4:circle;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:circle;4:not[%s];4:triangle;4:rectangle;4:blue;4:implies[%s,%s];4:size2;4:yellow
'λx.apply(not[or[blue,and[blue,green]]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:blue;4:and[%s,%s];4:blue;4:green;1:%s.o;2:x
'λx.exists(and[circle,triangle], filter(x.s, and[rectangle,size1]))'	0:exists(%s, %s);4:and[%s,%s];4:circle;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:size1
'λx.contains(iota(filter(x.s, green)), filter(x.s, and[size1,circle]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:circle
'λx.contains(x.o, filter(x.s, blue))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.exists(triangle, filter(filter(x.s, and[yellow,triangle]), blue))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:triangle;4:blue
'λx.apply(size3,iota(filter(x.s, not[and[implies[and[size1,and[yellow,triangle]],and[triangle,yellow]],size3]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:yellow;4:triangle;4:and[%s,%s];4:triangle;4:yellow;4:size3
'λx.apply(and[blue,implies[blue,green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:implies[%s,%s];4:blue;4:green;1:%s.o;2:x
'λx.apply(iff[apply(same_size,x.o),circle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;1:%s.o;2:x
'λx.apply(nor[or[and[apply(size-geq,x.o),size3],size3],size3],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:size3;4:size3;4:size3;1:%s.o;2:x
'λx.apply(not[circle],iota(filter(filter(x.s, blue), not[or[apply(same_color,x.o),size2]])))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size2
'λx.apply(blue,iota(filter(filter(x.s, yellow), or[size1,triangle])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:size1;4:triangle
'λx.apply(or[size2,rectangle],iota(filter(filter(filter(filter(x.s, iff[rectangle,nor[triangle,size1]]), size3), circle), triangle)))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:rectangle;4:nor[%s,%s];4:triangle;4:size1;4:size3;4:circle;4:triangle
'λx.apply(and[blue,and[yellow,green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:yellow;4:green;1:%s.o;2:x
'λx.contains(iota(filter(x.s, nor[triangle,not[yellow]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:triangle;4:not[%s];4:yellow;3:%s.s;2:x
'λx.forall(and[yellow,rectangle],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:yellow;4:rectangle;3:%s.s;2:x
'λx.apply(or[blue,nor[and[size2,triangle],size1]],iota(filter(filter(filter(x.s, rectangle), not[apply(same_shape,iota(filter(filter(x.s, size3), not[circle])))]), size1)))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:nor[%s,%s];4:and[%s,%s];4:size2;4:triangle;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:circle;4:size1
'λx.empty(filter(filter(x.s, triangle), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size1
'λx.empty(filter(filter(x.s, triangle), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3
'λx.apply(and[apply(same_shape,iota(x.s)),rectangle],iota(filter(filter(x.s, blue), green)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green
'λx.apply(not[green],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(filter(x.s, iff[rectangle,or[or[blue,or[or[size3,size3],rectangle]],nand[nor[implies[rectangle,and[apply(same_color,x.o),blue]],size3],and[or[blue,not[and[triangle,circle]]],apply(same_color,iota(x.s))]]]]), size3), blue), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:rectangle;4:or[%s,%s];4:or[%s,%s];4:blue;4:or[%s,%s];4:or[%s,%s];4:size3;4:size3;4:rectangle;4:nand[%s,%s];4:nor[%s,%s];4:implies[%s,%s];4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue;4:size3;4:and[%s,%s];4:or[%s,%s];4:blue;4:not[%s];4:and[%s,%s];4:triangle;4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size3;4:blue;4:triangle
'λx.apply(iff[size1,and[not[and[blue,circle]],triangle]],iota(filter(x.s, and[nor[rectangle,apply(size-leq,x.o)],green])))'	0:apply(%s,%s);4:iff[%s,%s];4:size1;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:blue;4:circle;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:rectangle;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:green
'λx.forall(iff[apply(same_color,iota(filter(x.s, rectangle))),or[circle,size1]],filter(x.s, circle))'	0:forall(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:or[%s,%s];4:circle;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(nand[circle,blue],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:circle;4:blue;1:%s.o;2:x
'λx.apply(size3,iota(filter(x.s, nand[green,yellow])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:green;4:yellow
'λx.apply(not[and[not[size1],yellow]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:size1;4:yellow;1:%s.o;2:x
'λx.apply(or[or[green,green],and[circle,size2]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:green;4:green;4:and[%s,%s];4:circle;4:size2;1:%s.o;2:x
'λx.exists(and[or[blue,size1],and[apply(same_size,iota(x.s)),rectangle]], filter(filter(filter(x.s, and[circle,not[circle]]), size2), rectangle))'	0:exists(%s, %s);4:and[%s,%s];4:or[%s,%s];4:blue;4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:not[%s];4:circle;4:size2;4:rectangle
'λx.forall(apply(same_color,iota(filter(filter(x.s, and[or[size2,green],size2]), green))),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:size2;4:green;4:size2;4:green;3:%s.s;2:x
'λx.apply(or[nand[or[blue,yellow],size1],not[nand[size1,or[size3,size1]]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:blue;4:yellow;4:size1;4:not[%s];4:nand[%s,%s];4:size1;4:or[%s,%s];4:size3;4:size1;1:%s.o;2:x
'λx.exists(triangle, filter(x.s, green))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.exists(triangle, filter(x.s, size3))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(triangle, filter(x.s, size1))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(implies[size3,circle], filter(x.s, implies[rectangle,green]))'	0:exists(%s, %s);4:implies[%s,%s];4:size3;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:rectangle;4:green
'λx.apply(apply(same_color,iota(filter(filter(x.s, not[yellow]), size2))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:size2;1:%s.o;2:x
'λx.apply(nor[triangle,size2],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:triangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[or[nand[or[not[size2],not[and[size1,apply(same_color,x.o)]]],yellow],and[apply(size-leq,iota(x.s)),green]],size3],implies[apply(same_size,x.o),green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:not[%s];4:size2;4:not[%s];4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:green;4:size3;4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(x.s)),iota(filter(filter(x.s, green), and[or[yellow,size3],green])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:or[%s,%s];4:yellow;4:size3;4:green
'λx.apply(or[not[or[apply(same_size,x.o),and[size2,rectangle]]],not[rectangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:size2;4:rectangle;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(x.s, size2), and[not[not[and[rectangle,yellow]]],apply(same_shape,iota(filter(filter(filter(x.s, size2), size1), or[size3,rectangle])))]), and[blue,triangle]), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:not[%s];4:not[%s];4:and[%s,%s];4:rectangle;4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1;4:or[%s,%s];4:size3;4:rectangle;4:and[%s,%s];4:blue;4:triangle;4:triangle
'λx.apply(nand[or[or[and[rectangle,size2],or[triangle,size2]],size1],circle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:rectangle;4:size2;4:or[%s,%s];4:triangle;4:size2;4:size1;4:circle;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(filter(x.s, and[or[not[blue],yellow],or[size2,or[not[and[circle,triangle]],not[rectangle]]]]), implies[rectangle,size2]), triangle), rectangle)), filter(x.s, size2))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:blue;4:yellow;4:or[%s,%s];4:size2;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:circle;4:triangle;4:not[%s];4:rectangle;4:implies[%s,%s];4:rectangle;4:size2;4:triangle;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(and[not[yellow],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:yellow;4:blue;1:%s.o;2:x
'λx.apply(iff[blue,and[and[green,and[size2,circle]],apply(same_color,iota(x.s))]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:size2;4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(and[size3,not[and[green,green]]],iota(filter(x.s, not[size1])))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:not[%s];4:and[%s,%s];4:green;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1
'λx.apply(triangle,iota(filter(x.s, and[circle,nand[circle,rectangle]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:nand[%s,%s];4:circle;4:rectangle
'λx.forall(and[or[blue,green],circle],filter(x.s, nand[rectangle,apply(size-lt,x.o)]))'	0:forall(%s,%s);4:and[%s,%s];4:or[%s,%s];4:blue;4:green;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:rectangle;4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.empty(filter(x.s, and[size3,circle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:circle
'λx.exists(size1, filter(x.s, apply(size-lt,x.o)))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(x.s, size2), size3), size2)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3;4:size2;3:%s.s;2:x
'λx.apply(nand[nor[rectangle,not[blue]],size3],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:nor[%s,%s];4:rectangle;4:not[%s];4:blue;4:size3;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, triangle), and[and[and[not[and[green,size1]],or[nor[size3,and[not[iff[green,nor[blue,rectangle]]],circle]],size3]],yellow],green])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:green;4:size1;4:or[%s,%s];4:nor[%s,%s];4:size3;4:and[%s,%s];4:not[%s];4:iff[%s,%s];4:green;4:nor[%s,%s];4:blue;4:rectangle;4:circle;4:size3;4:yellow;4:green
'λx.empty(filter(filter(x.s, implies[blue,and[size1,implies[or[blue,not[not[nand[size3,size2]]]],triangle]]]), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:blue;4:and[%s,%s];4:size1;4:implies[%s,%s];4:or[%s,%s];4:blue;4:not[%s];4:not[%s];4:nand[%s,%s];4:size3;4:size2;4:triangle;4:triangle
'λx.apply(yellow,iota(filter(filter(x.s, triangle), apply(same_size,iota(x.s)))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(and[circle,apply(same_shape,x.o)],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(filter(x.s, apply(size-gt,x.o)), apply(same_color,x.o)), implies[nor[and[and[rectangle,size1],and[rectangle,or[triangle,green]]],apply(same_color,x.o)],size1])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:implies[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size1;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:triangle;4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1
'λx.apply(nand[triangle,blue],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(nand[circle,apply(same_shape,x.o)],iota(filter(filter(x.s, size3), or[rectangle,size2])))'	0:apply(%s,%s);4:nand[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:rectangle;4:size2
'λx.apply(and[and[blue,green],green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:green;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[size3,size2],or[size3,rectangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size3;4:size2;4:or[%s,%s];4:size3;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.exists(or[and[triangle,size3],blue], filter(filter(x.s, apply(same_size,x.o)), triangle))'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:triangle;4:size3;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle
'λx.apply(rectangle,iota(filter(filter(x.s, apply(same_size,iota(x.s))), yellow)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:yellow
'λx.apply(circle,iota(filter(filter(filter(x.s, size3), blue), iff[and[green,not[or[implies[green,iff[triangle,not[triangle]]],or[or[size1,apply(same_size,iota(x.s))],apply(same_size,iota(x.s))]]]],size1])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue;4:iff[%s,%s];4:and[%s,%s];4:green;4:not[%s];4:or[%s,%s];4:implies[%s,%s];4:green;4:iff[%s,%s];4:triangle;4:not[%s];4:triangle;4:or[%s,%s];4:or[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size1
'λx.exists(or[or[or[apply(size-geq,iota(x.s)),apply(same_size,x.o)],size2],circle], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2;4:circle;3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, green), rectangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle
'λx.apply(and[size2,green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[yellow,circle],iota(filter(filter(x.s, and[not[triangle],size3]), green)))'	0:apply(%s,%s);4:iff[%s,%s];4:yellow;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:triangle;4:size3;4:green
'λx.apply(and[size3,green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:green;1:iota(%s);3:%s.s;2:x
'λx.forall(or[not[size1],size1],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:not[%s];4:size1;4:size1;3:%s.s;2:x
'λx.apply(size3,iota(filter(x.s, or[and[size2,apply(size-leq,x.o)],triangle])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size2;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:triangle
'λx.apply(and[apply(same_color,iota(x.s)),or[size1,and[green,and[not[rectangle],rectangle]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:and[%s,%s];4:green;4:and[%s,%s];4:not[%s];4:rectangle;4:rectangle;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(filter(filter(x.s, green), size3), not[green]), not[apply(same_shape,x.o)])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size3;4:not[%s];4:green;4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.forall(and[or[rectangle,nand[apply(same_size,iota(filter(x.s, size2))),not[rectangle]]],size1],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:or[%s,%s];4:rectangle;4:nand[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:not[%s];4:rectangle;4:size1;3:%s.s;2:x
'λx.apply(not[yellow],iota(filter(x.s, iff[or[green,blue],and[triangle,apply(same_color,x.o)]])))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:or[%s,%s];4:green;4:blue;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, not[not[green]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:green
'λx.apply(and[rectangle,and[and[or[blue,rectangle],or[size3,and[iff[rectangle,size1],not[nor[green,apply(same_shape,iota(x.s))]]]]],circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:blue;4:rectangle;4:or[%s,%s];4:size3;4:and[%s,%s];4:iff[%s,%s];4:rectangle;4:size1;4:not[%s];4:nor[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle;1:%s.o;2:x
'λx.exists(or[nand[triangle,size3],and[blue,green]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:nand[%s,%s];4:triangle;4:size3;4:and[%s,%s];4:blue;4:green;3:%s.s;2:x
'λx.apply(nand[nor[and[triangle,and[triangle,blue]],size1],yellow],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:triangle;4:blue;4:size1;4:yellow;1:%s.o;2:x
'λx.exists(green, x.s)'	0:exists(%s, %s);4:green;3:%s.s;2:x
'λx.apply(not[and[blue,green]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:blue;4:green;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, circle), size2)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size2
'λx.apply(blue,iota(filter(filter(x.s, circle), size3)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3
'λx.contains(x.o, filter(x.s, implies[rectangle,size3]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:rectangle;4:size3
'λx.apply(apply(size-lt,iota(x.s)),iota(filter(filter(filter(filter(x.s, iff[size1,yellow]), green), size1), size2)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size1;4:yellow;4:green;4:size1;4:size2
'λx.exists(and[yellow,and[nor[iff[nand[and[green,or[size2,triangle]],and[triangle,size3]],or[yellow,size3]],apply(same_color,iota(x.s))],triangle]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:yellow;4:and[%s,%s];4:nor[%s,%s];4:iff[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:green;4:or[%s,%s];4:size2;4:triangle;4:and[%s,%s];4:triangle;4:size3;4:or[%s,%s];4:yellow;4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:triangle;3:%s.s;2:x
'λx.forall(apply(same_color,iota(x.s)),filter(x.s, circle))'	0:forall(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(or[or[apply(same_color,iota(x.s)),triangle],size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:triangle;4:size1;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(x.s, size3), size2)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2
'λx.apply(yellow,iota(filter(filter(x.s, size1), size3)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size3
'λx.apply(yellow,iota(filter(filter(x.s, size2), size3)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3
'λx.apply(yellow,iota(filter(filter(x.s, size2), size1)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1
'λx.exists(size1, x.s)'	0:exists(%s, %s);4:size1;3:%s.s;2:x
'λx.exists(size2, x.s)'	0:exists(%s, %s);4:size2;3:%s.s;2:x
'λx.exists(size3, x.s)'	0:exists(%s, %s);4:size3;3:%s.s;2:x
'λx.apply(and[apply(same_color,iota(filter(x.s, not[not[triangle]]))),nor[or[circle,rectangle],circle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:triangle;4:nor[%s,%s];4:or[%s,%s];4:circle;4:rectangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(filter(x.s, size3), or[circle,circle]), size3)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:circle;4:circle;4:size3
'λx.exists(and[blue,not[and[and[green,circle],size2]]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:blue;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:green;4:circle;4:size2;3:%s.s;2:x
'λx.apply(apply(size-geq,x.o),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.empty(x.s)'	0:empty(%s);3:%s.s;2:x
'λx.apply(or[apply(same_color,iota(x.s)),rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:rectangle;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, and[not[size2],and[not[yellow],and[implies[size3,circle],green]]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:size2;4:and[%s,%s];4:not[%s];4:yellow;4:and[%s,%s];4:implies[%s,%s];4:size3;4:circle;4:green
'λx.exists(or[circle,triangle], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:circle;4:triangle;3:%s.s;2:x
'λx.contains(iota(filter(x.s, apply(same_color,iota(filter(x.s, size1))))), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;3:%s.s;2:x
'λx.apply(not[apply(same_shape,x.o)],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(iff[rectangle,size3],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:rectangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[yellow,nor[circle,green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:nor[%s,%s];4:circle;4:green;1:%s.o;2:x
'λx.apply(and[and[size3,size2],or[size3,green]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size3;4:size2;4:or[%s,%s];4:size3;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(not[or[rectangle,size1]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:rectangle;4:size1;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(filter(x.s, and[size3,and[and[or[rectangle,green],or[size2,circle]],not[apply(size-lt,x.o)]]]), or[rectangle,and[yellow,and[blue,or[size3,and[apply(same_size,x.o),circle]]]]]), blue))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:rectangle;4:green;4:or[%s,%s];4:size2;4:circle;4:not[%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:or[%s,%s];4:rectangle;4:and[%s,%s];4:yellow;4:and[%s,%s];4:blue;4:or[%s,%s];4:size3;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;4:blue
'λx.apply(iff[yellow,green],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:yellow;4:green;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(filter(x.s, size1), implies[green,size2]), yellow)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:implies[%s,%s];4:green;4:size2;4:yellow
'λx.apply(and[implies[yellow,not[apply(size-lt,iota(x.s))]],circle],iota(filter(x.s, apply(same_shape,iota(x.s)))))'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:yellow;4:not[%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(and[and[nand[size1,yellow],not[and[yellow,blue]]],iff[size1,triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:size1;4:yellow;4:not[%s];4:and[%s,%s];4:yellow;4:blue;4:iff[%s,%s];4:size1;4:triangle;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, blue), triangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle
'λx.exists(and[triangle,not[rectangle]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:triangle;4:not[%s];4:rectangle;3:%s.s;2:x
'λx.apply(nand[rectangle,and[apply(size-geq,iota(filter(filter(filter(x.s, and[yellow,circle]), nand[and[or[yellow,or[size2,size1]],nand[green,size2]],yellow]), triangle))),apply(same_color,iota(x.s))]],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:circle;4:nand[%s,%s];4:and[%s,%s];4:or[%s,%s];4:yellow;4:or[%s,%s];4:size2;4:size1;4:nand[%s,%s];4:green;4:size2;4:yellow;4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.exists(not[or[or[apply(same_shape,iota(x.s)),size2],blue]], filter(x.s, blue))'	0:exists(%s, %s);4:not[%s];4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size2;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.exists(yellow, filter(filter(filter(x.s, size1), rectangle), green))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle;4:green
'λx.apply(apply(same_size,x.o),iota(filter(filter(x.s, size3), or[green,and[apply(same_color,iota(x.s)),not[green]]])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:green;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:not[%s];4:green
'λx.apply(iff[nor[blue,size1],not[blue]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:nor[%s,%s];4:blue;4:size1;4:not[%s];4:blue;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(filter(filter(x.s, circle), not[size1]), rectangle), size3), and[and[nor[apply(same_color,iota(filter(x.s, triangle))),iff[yellow,green]],apply(same_shape,x.o)],and[apply(same_shape,iota(x.s)),not[blue]]]), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:size1;4:rectangle;4:size3;4:and[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:iff[%s,%s];4:yellow;4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:not[%s];4:blue;4:size1
'λx.exists(and[not[yellow],nor[not[size3],circle]], filter(x.s, nand[size3,size3]))'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:yellow;4:nor[%s,%s];4:not[%s];4:size3;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size3;4:size3
'λx.forall(and[size2,triangle],filter(filter(x.s, apply(size-gt,iota(filter(x.s, size2)))), circle))'	0:forall(%s,%s);4:and[%s,%s];4:size2;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle
'λx.apply(apply(same_color,iota(filter(filter(x.s, size2), triangle))),iota(filter(x.s, iff[circle,and[blue,and[size2,green]]])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:circle;4:and[%s,%s];4:blue;4:and[%s,%s];4:size2;4:green
'λx.apply(blue,iota(filter(filter(x.s, green), green)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:green
'λx.apply(nand[size2,size1],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:size2;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[blue,size1],iota(filter(filter(filter(filter(filter(x.s, not[circle]), and[circle,rectangle]), and[rectangle,rectangle]), rectangle), green)))'	0:apply(%s,%s);4:implies[%s,%s];4:blue;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:and[%s,%s];4:circle;4:rectangle;4:and[%s,%s];4:rectangle;4:rectangle;4:rectangle;4:green
'λx.apply(nor[size2,and[size3,yellow]],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:size2;4:and[%s,%s];4:size3;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.forall(triangle,filter(x.s, apply(same_size,x.o)))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.forall(size1,filter(filter(x.s, or[size3,size2]), and[apply(same_size,x.o),or[yellow,blue]]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:yellow;4:blue
'λx.apply(and[rectangle,or[nor[circle,size1],size1]],iota(filter(x.s, green)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:or[%s,%s];4:nor[%s,%s];4:circle;4:size1;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.forall(size1,filter(filter(filter(filter(x.s, green), and[and[size3,blue],blue]), or[or[triangle,triangle],blue]), circle))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:and[%s,%s];4:size3;4:blue;4:blue;4:or[%s,%s];4:or[%s,%s];4:triangle;4:triangle;4:blue;4:circle
'λx.apply(and[and[and[size3,or[triangle,yellow]],and[triangle,or[rectangle,and[rectangle,apply(same_size,iota(filter(filter(filter(x.s, or[green,not[or[size1,yellow]]]), implies[or[or[not[circle],apply(size-leq,x.o)],blue],apply(same_size,iota(filter(filter(x.s, rectangle), circle)))]), size2)))]]]],or[green,green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:or[%s,%s];4:triangle;4:yellow;4:and[%s,%s];4:triangle;4:or[%s,%s];4:rectangle;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:not[%s];4:or[%s,%s];4:size1;4:yellow;4:implies[%s,%s];4:or[%s,%s];4:or[%s,%s];4:not[%s];4:circle;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle;4:size2;4:or[%s,%s];4:green;4:green;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(and[green,apply(same_shape,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[circle,and[circle,and[size1,green]]],iota(filter(filter(filter(filter(filter(x.s, and[size3,and[nor[size1,rectangle],apply(same_color,x.o)]]), and[size2,rectangle]), green), not[circle]), yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:and[%s,%s];4:circle;4:and[%s,%s];4:size1;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:and[%s,%s];4:nor[%s,%s];4:size1;4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:size2;4:rectangle;4:green;4:not[%s];4:circle;4:yellow
'λx.empty(filter(filter(filter(filter(filter(filter(filter(filter(x.s, or[yellow,not[rectangle]]), size2), size3), or[circle,nor[rectangle,and[circle,green]]]), and[rectangle,size2]), size1), circle), and[and[size1,yellow],or[size2,and[and[size1,size1],iff[not[blue],yellow]]]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:not[%s];4:rectangle;4:size2;4:size3;4:or[%s,%s];4:circle;4:nor[%s,%s];4:rectangle;4:and[%s,%s];4:circle;4:green;4:and[%s,%s];4:rectangle;4:size2;4:size1;4:circle;4:and[%s,%s];4:and[%s,%s];4:size1;4:yellow;4:or[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:size1;4:size1;4:iff[%s,%s];4:not[%s];4:blue;4:yellow
'λx.apply(triangle,iota(filter(filter(filter(filter(filter(x.s, size2), or[or[green,and[implies[blue,and[size3,not[circle]]],rectangle]],and[triangle,apply(same_shape,iota(x.s))]]), size3), nor[circle,circle]), triangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:or[%s,%s];4:green;4:and[%s,%s];4:implies[%s,%s];4:blue;4:and[%s,%s];4:size3;4:not[%s];4:circle;4:rectangle;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size3;4:nor[%s,%s];4:circle;4:circle;4:triangle
'λx.exists(size2, filter(filter(filter(filter(x.s, triangle), size2), and[nor[and[apply(same_size,iota(x.s)),size1],and[circle,not[size1]]],or[apply(size-geq,iota(x.s)),blue]]), size3))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2;4:and[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:circle;4:not[%s];4:size1;4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:blue;4:size3
'λx.apply(not[size1],iota(filter(filter(x.s, yellow), size2)))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2
'λx.exists(or[and[blue,size1],apply(same_color,x.o)], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:blue;4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(and[nand[or[yellow,blue],circle],size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:yellow;4:blue;4:circle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(filter(x.s, green), rectangle), size2)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle;4:size2
'λx.apply(size2,iota(filter(x.s, and[rectangle,triangle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:triangle
'λx.empty(filter(filter(filter(filter(filter(x.s, and[blue,size2]), size2), nor[yellow,and[triangle,and[green,green]]]), rectangle), and[or[apply(size-leq,iota(filter(x.s, rectangle))),blue],size1]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size2;4:size2;4:nor[%s,%s];4:yellow;4:and[%s,%s];4:triangle;4:and[%s,%s];4:green;4:green;4:rectangle;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue;4:size1
'λx.forall(apply(same_color,iota(x.s)),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, green), not[size2]), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:size2;4:yellow
'λx.apply(and[and[not[iff[and[apply(same_shape,x.o),apply(same_size,iota(x.s))],size1]],circle],green],iota(filter(filter(x.s, nand[size1,yellow]), not[and[blue,and[green,size3]]])))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:iff[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size1;4:circle;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size1;4:yellow;4:not[%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:green;4:size3
'λx.apply(iff[green,not[triangle]],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:green;4:not[%s];4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(filter(x.s, yellow), apply(size-gt,iota(x.s))), blue)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:blue
'λx.apply(nand[circle,apply(same_shape,x.o)],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.forall(yellow,filter(filter(filter(filter(x.s, yellow), green), circle), not[yellow]))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green;4:circle;4:not[%s];4:yellow
'λx.empty(filter(filter(filter(x.s, circle), size3), nand[size3,or[and[triangle,apply(same_size,iota(filter(x.s, size2)))],green]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3;4:nand[%s,%s];4:size3;4:or[%s,%s];4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green
'λx.apply(circle,iota(x.s))'	0:apply(%s,%s);4:circle;1:iota(%s);3:%s.s;2:x
'λx.forall(triangle,x.s)'	0:forall(%s,%s);4:triangle;3:%s.s;2:x
'λx.apply(and[blue,rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, size1), apply(same_shape,x.o)), or[not[circle],implies[triangle,and[or[circle,green],and[iff[not[size1],triangle],implies[size2,rectangle]]]]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:not[%s];4:circle;4:implies[%s,%s];4:triangle;4:and[%s,%s];4:or[%s,%s];4:circle;4:green;4:and[%s,%s];4:iff[%s,%s];4:not[%s];4:size1;4:triangle;4:implies[%s,%s];4:size2;4:rectangle
'λx.apply(size1,iota(filter(filter(filter(x.s, green), green), and[size3,not[size1]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:green;4:and[%s,%s];4:size3;4:not[%s];4:size1
'λx.empty(filter(x.s, implies[triangle,green]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:triangle;4:green
'λx.apply(size2,iota(filter(filter(x.s, rectangle), and[and[circle,size1],size3])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:and[%s,%s];4:circle;4:size1;4:size3
'λx.forall(apply(same_size,iota(x.s)),filter(filter(x.s, circle), not[and[size1,green]]))'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:and[%s,%s];4:size1;4:green
'λx.apply(and[and[size1,or[size2,triangle]],and[blue,rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:size2;4:triangle;4:and[%s,%s];4:blue;4:rectangle;1:%s.o;2:x
'λx.apply(nor[and[size1,and[size2,size1]],rectangle],iota(filter(x.s, implies[circle,and[or[apply(same_size,iota(x.s)),and[circle,and[triangle,and[size1,yellow]]]],blue]])))'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:size2;4:size1;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:circle;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:and[%s,%s];4:triangle;4:and[%s,%s];4:size1;4:yellow;4:blue
'λx.apply(circle,iota(filter(filter(x.s, not[rectangle]), apply(size-lt,iota(filter(filter(filter(filter(x.s, and[yellow,size1]), blue), and[or[or[size3,size1],circle],and[blue,green]]), rectangle))))))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size1;4:blue;4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:size3;4:size1;4:circle;4:and[%s,%s];4:blue;4:green;4:rectangle
'λx.apply(and[rectangle,rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.forall(nand[triangle,implies[blue,yellow]],x.s)'	0:forall(%s,%s);4:nand[%s,%s];4:triangle;4:implies[%s,%s];4:blue;4:yellow;3:%s.s;2:x
'λx.apply(or[size1,apply(same_color,iota(filter(x.s, rectangle)))],iota(filter(filter(filter(filter(filter(x.s, blue), size2), and[apply(same_shape,x.o),green]), blue), triangle)))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green;4:blue;4:triangle
'λx.exists(triangle, filter(filter(filter(x.s, nor[yellow,yellow]), blue), or[size2,size1]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:yellow;4:yellow;4:blue;4:or[%s,%s];4:size2;4:size1
'λx.forall(and[size1,rectangle],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:size1;4:rectangle;3:%s.s;2:x
'λx.apply(and[size1,size1],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(nor[rectangle,and[size2,nand[or[yellow,apply(same_size,x.o)],and[blue,blue]]]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:rectangle;4:and[%s,%s];4:size2;4:nand[%s,%s];4:or[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:blue;4:blue;1:%s.o;2:x
'λx.apply(not[blue],iota(filter(filter(x.s, size2), circle)))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle
'λx.apply(and[not[and[and[size3,and[size2,and[or[apply(size-leq,x.o),and[circle,apply(same_color,x.o)]],blue]]],rectangle]],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:size2;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue;4:rectangle;4:yellow;1:%s.o;2:x
'λx.apply(or[and[blue,triangle],triangle],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:blue;4:triangle;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.contains(iota(filter(filter(filter(x.s, yellow), apply(same_size,iota(filter(filter(filter(filter(filter(filter(filter(x.s, size1), apply(same_shape,iota(x.s))), size3), green), rectangle), blue), not[apply(size-gt,iota(x.s))])))), yellow)), filter(x.s, circle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size3;4:green;4:rectangle;4:blue;4:not[%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(or[size1,and[size2,size2]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:and[%s,%s];4:size2;4:size2;1:%s.o;2:x
'λx.apply(and[size1,or[iff[yellow,not[size3]],and[not[triangle],size3]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:or[%s,%s];4:iff[%s,%s];4:yellow;4:not[%s];4:size3;4:and[%s,%s];4:not[%s];4:triangle;4:size3;1:%s.o;2:x
'λx.apply(or[and[rectangle,triangle],triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:rectangle;4:triangle;4:triangle;1:%s.o;2:x
'λx.apply(implies[blue,rectangle],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:blue;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, and[yellow,circle])), filter(x.s, circle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.contains(x.o, filter(filter(x.s, apply(same_shape,x.o)), or[or[and[blue,and[iff[apply(same_shape,iota(filter(x.s, green))),or[not[apply(same_shape,iota(filter(filter(x.s, yellow), apply(same_color,iota(x.s)))))],and[size3,nand[circle,size2]]]],blue]],yellow],triangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:nand[%s,%s];4:circle;4:size2;4:blue;4:yellow;4:triangle
'λx.apply(or[triangle,nor[nand[yellow,size3],apply(same_color,iota(filter(x.s, or[rectangle,circle])))]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:nor[%s,%s];4:nand[%s,%s];4:yellow;4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.forall(yellow,filter(filter(x.s, rectangle), apply(same_color,iota(filter(filter(filter(filter(filter(x.s, apply(same_color,x.o)), rectangle), and[or[size3,and[size3,triangle]],size3]), size2), green)))))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle;4:and[%s,%s];4:or[%s,%s];4:size3;4:and[%s,%s];4:size3;4:triangle;4:size3;4:size2;4:green
'λx.forall(not[size2],filter(filter(x.s, blue), and[circle,size1]))'	0:forall(%s,%s);4:not[%s];4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:circle;4:size1
'λx.forall(apply(same_shape,iota(filter(x.s, and[circle,size3]))),filter(filter(filter(x.s, nand[size2,circle]), size3), and[yellow,circle]))'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size2;4:circle;4:size3;4:and[%s,%s];4:yellow;4:circle
'λx.apply(size3,iota(filter(x.s, apply(same_size,iota(filter(x.s, yellow))))))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(blue,iota(filter(filter(filter(x.s, green), apply(same_size,x.o)), rectangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:rectangle
'λx.apply(nand[triangle,apply(same_shape,x.o)],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[or[apply(same_size,x.o),triangle],yellow],iota(filter(x.s, and[and[triangle,size2],blue])))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:triangle;4:size2;4:blue
'λx.apply(nand[size1,yellow],iota(filter(filter(x.s, or[size2,size3]), triangle)))'	0:apply(%s,%s);4:nand[%s,%s];4:size1;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:size3;4:triangle
'λx.apply(and[green,size3],iota(filter(filter(x.s, size2), apply(same_shape,x.o))))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(or[circle,size2],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(filter(x.s, not[and[iff[yellow,apply(same_size,iota(filter(filter(filter(x.s, green), size3), implies[blue,green])))],yellow]]), circle), size2)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:iff[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size3;4:implies[%s,%s];4:blue;4:green;4:yellow;4:circle;4:size2
'λx.apply(and[and[blue,apply(same_color,x.o)],size3],iota(filter(filter(filter(x.s, circle), yellow), and[circle,and[size3,apply(same_shape,iota(x.s))]])))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow;4:and[%s,%s];4:circle;4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size3,rectangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(x.s, circle), circle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:circle
'λx.forall(size3,filter(x.s, and[circle,and[and[or[and[green,blue],iff[triangle,green]],and[implies[circle,and[and[and[or[implies[and[apply(size-gt,x.o),or[rectangle,triangle]],circle],nand[size2,not[size2]]],size3],yellow],iff[circle,not[circle]]]],yellow]],rectangle]]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:green;4:blue;4:iff[%s,%s];4:triangle;4:green;4:and[%s,%s];4:implies[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:or[%s,%s];4:rectangle;4:triangle;4:circle;4:nand[%s,%s];4:size2;4:not[%s];4:size2;4:size3;4:yellow;4:iff[%s,%s];4:circle;4:not[%s];4:circle;4:yellow;4:rectangle
'λx.forall(and[size3,and[and[or[apply(same_size,iota(filter(x.s, implies[not[and[blue,size3]],blue]))),and[yellow,nor[size3,and[and[or[or[yellow,and[rectangle,rectangle]],size3],size2],green]]]],circle],green]],filter(filter(x.s, circle), and[size1,rectangle]))'	0:forall(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:not[%s];4:and[%s,%s];4:blue;4:size3;4:blue;4:and[%s,%s];4:yellow;4:nor[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:yellow;4:and[%s,%s];4:rectangle;4:rectangle;4:size3;4:size2;4:green;4:circle;4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:size1;4:rectangle
'λx.apply(yellow,iota(filter(x.s, and[triangle,green])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:green
'λx.apply(iff[size1,not[size3]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:size1;4:not[%s];4:size3;1:%s.o;2:x
'λx.apply(and[size3,or[and[size2,yellow],and[rectangle,blue]]],iota(filter(filter(filter(x.s, not[or[rectangle,circle]]), or[size1,rectangle]), or[triangle,triangle])))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:or[%s,%s];4:and[%s,%s];4:size2;4:yellow;4:and[%s,%s];4:rectangle;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:rectangle;4:circle;4:or[%s,%s];4:size1;4:rectangle;4:or[%s,%s];4:triangle;4:triangle
'λx.exists(and[or[rectangle,nand[yellow,or[size2,implies[and[circle,apply(same_shape,iota(x.s))],circle]]]],triangle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:or[%s,%s];4:rectangle;4:nand[%s,%s];4:yellow;4:or[%s,%s];4:size2;4:implies[%s,%s];4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle;4:triangle;3:%s.s;2:x
'λx.apply(or[implies[and[and[green,triangle],blue],apply(same_shape,x.o)],circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:triangle;4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;1:%s.o;2:x
'λx.apply(or[and[circle,and[apply(same_shape,iota(x.s)),and[rectangle,triangle]]],yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:triangle;4:yellow;1:%s.o;2:x
'λx.apply(and[triangle,apply(same_color,iota(filter(filter(filter(filter(filter(x.s, circle), size2), not[yellow]), or[or[size2,triangle],blue]), apply(same_shape,iota(x.s)))))],iota(filter(x.s, apply(same_shape,x.o))))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size2;4:not[%s];4:yellow;4:or[%s,%s];4:or[%s,%s];4:size2;4:triangle;4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(implies[circle,not[rectangle]],iota(filter(filter(filter(filter(x.s, apply(same_color,x.o)), rectangle), and[green,size2]), apply(same_size,x.o))))'	0:apply(%s,%s);4:implies[%s,%s];4:circle;4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle;4:and[%s,%s];4:green;4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(x.s, size2), triangle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:triangle
'λx.apply(rectangle,iota(filter(filter(filter(filter(filter(filter(filter(filter(filter(filter(x.s, green), size1), triangle), green), apply(size-leq,x.o)), green), circle), size1), circle), rectangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1;4:triangle;4:green;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:green;4:circle;4:size1;4:circle;4:rectangle
'λx.apply(and[and[yellow,size2],size2],iota(filter(x.s, apply(same_color,x.o))))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:size2;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.forall(green,filter(filter(filter(filter(x.s, implies[and[circle,green],yellow]), green), and[rectangle,triangle]), circle))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:and[%s,%s];4:circle;4:green;4:yellow;4:green;4:and[%s,%s];4:rectangle;4:triangle;4:circle
'λx.apply(circle,iota(filter(filter(filter(x.s, blue), and[circle,circle]), apply(size-leq,iota(filter(filter(x.s, size3), not[size1]))))))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:circle;4:circle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:size1
'λx.forall(and[green,size3],filter(x.s, blue))'	0:forall(%s,%s);4:and[%s,%s];4:green;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[rectangle,not[nand[size2,rectangle]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:not[%s];4:nand[%s,%s];4:size2;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[apply(same_shape,x.o),rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle;1:%s.o;2:x
'λx.apply(size3,iota(filter(x.s, apply(same_color,iota(filter(filter(filter(x.s, and[size3,size1]), size2), or[size3,blue]))))))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:size1;4:size2;4:or[%s,%s];4:size3;4:blue
'λx.exists(blue, filter(x.s, not[blue]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.apply(yellow,iota(filter(x.s, apply(size-leq,x.o))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:%s.o;2:x
'λx.contains(iota(filter(x.s, and[triangle,not[yellow]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:not[%s];4:yellow;3:%s.s;2:x
'λx.forall(blue,filter(x.s, nor[or[not[circle],yellow],circle]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:or[%s,%s];4:not[%s];4:circle;4:yellow;4:circle
'λx.exists(or[rectangle,implies[yellow,and[yellow,green]]], filter(filter(filter(x.s, not[size2]), blue), circle))'	0:exists(%s, %s);4:or[%s,%s];4:rectangle;4:implies[%s,%s];4:yellow;4:and[%s,%s];4:yellow;4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:blue;4:circle
'λx.contains(iota(filter(filter(x.s, blue), triangle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle;3:%s.s;2:x
'λx.apply(not[apply(same_size,iota(filter(filter(x.s, apply(size-leq,x.o)), green)))],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(or[not[size2],size3],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:size2;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[yellow,yellow],iota(filter(filter(filter(filter(x.s, blue), triangle), size3), green)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle;4:size3;4:green
'λx.apply(iff[nand[not[rectangle],or[triangle,and[and[or[rectangle,size1],size3],not[blue]]]],triangle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:nand[%s,%s];4:not[%s];4:rectangle;4:or[%s,%s];4:triangle;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:rectangle;4:size1;4:size3;4:not[%s];4:blue;4:triangle;1:%s.o;2:x
'λx.empty(filter(filter(x.s, triangle), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue
'λx.contains(x.o, filter(filter(x.s, size2), or[not[yellow],and[size2,size1]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:not[%s];4:yellow;4:and[%s,%s];4:size2;4:size1
'λx.forall(size3,filter(filter(filter(x.s, circle), and[triangle,triangle]), blue))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:triangle;4:triangle;4:blue
'λx.apply(and[rectangle,rectangle],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.exists(not[not[or[nand[nor[circle,size2],or[or[and[nand[not[yellow],size1],size2],apply(same_shape,iota(filter(filter(x.s, implies[implies[not[circle],blue],yellow]), apply(size-geq,x.o))))],apply(same_shape,x.o)]],apply(same_color,iota(filter(x.s, triangle)))]]], filter(x.s, blue))'	0:exists(%s, %s);4:not[%s];4:not[%s];4:or[%s,%s];4:nand[%s,%s];4:nor[%s,%s];4:circle;4:size2;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:not[%s];4:yellow;4:size1;4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:implies[%s,%s];4:not[%s];4:circle;4:blue;4:yellow;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[and[circle,size1],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:size1;4:rectangle;1:%s.o;2:x
'λx.apply(implies[rectangle,nor[yellow,circle]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:rectangle;4:nor[%s,%s];4:yellow;4:circle;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(filter(filter(filter(filter(x.s, not[triangle]), yellow), or[circle,triangle]), size1), triangle))),iota(filter(filter(filter(filter(x.s, yellow), or[yellow,and[triangle,size2]]), or[rectangle,circle]), triangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:yellow;4:or[%s,%s];4:circle;4:triangle;4:size1;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:yellow;4:and[%s,%s];4:triangle;4:size2;4:or[%s,%s];4:rectangle;4:circle;4:triangle
'λx.apply(implies[green,apply(same_shape,iota(x.s))],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(or[or[size3,not[size1]],or[or[not[not[rectangle]],blue],and[blue,size2]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:size3;4:not[%s];4:size1;4:or[%s,%s];4:or[%s,%s];4:not[%s];4:not[%s];4:rectangle;4:blue;4:and[%s,%s];4:blue;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(x.s, or[circle,rectangle])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:rectangle
'λx.apply(implies[apply(same_size,iota(x.s)),size3],iota(filter(filter(x.s, blue), implies[apply(same_color,x.o),or[triangle,or[size1,and[or[yellow,and[size2,triangle]],size1]]]])))'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:or[%s,%s];4:triangle;4:or[%s,%s];4:size1;4:and[%s,%s];4:or[%s,%s];4:yellow;4:and[%s,%s];4:size2;4:triangle;4:size1
'λx.forall(nand[green,yellow],x.s)'	0:forall(%s,%s);4:nand[%s,%s];4:green;4:yellow;3:%s.s;2:x
'λx.apply(and[implies[or[triangle,circle],yellow],and[and[green,size3],implies[circle,nor[size1,and[apply(same_color,x.o),triangle]]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:triangle;4:circle;4:yellow;4:and[%s,%s];4:and[%s,%s];4:green;4:size3;4:implies[%s,%s];4:circle;4:nor[%s,%s];4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(x.s)),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(filter(x.s, not[green]), yellow), circle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:yellow;4:circle
'λx.apply(apply(same_shape,iota(filter(filter(x.s, and[size3,blue]), circle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:blue;4:circle;1:%s.o;2:x
'λx.apply(and[rectangle,apply(same_shape,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.exists(or[green,apply(same_color,x.o)], filter(filter(x.s, yellow), circle))'	0:exists(%s, %s);4:or[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle
'λx.apply(size1,iota(filter(filter(x.s, rectangle), not[not[yellow]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:not[%s];4:yellow
'λx.apply(and[and[triangle,green],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:green;4:blue;1:%s.o;2:x
'λx.empty(filter(filter(x.s, nor[apply(same_color,x.o),yellow]), or[blue,rectangle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;4:or[%s,%s];4:blue;4:rectangle
'λx.forall(and[green,not[triangle]],filter(filter(filter(filter(filter(filter(x.s, yellow), circle), apply(same_shape,x.o)), or[apply(same_shape,x.o),size2]), circle), implies[rectangle,and[triangle,apply(same_size,x.o)]]))'	0:forall(%s,%s);4:and[%s,%s];4:green;4:not[%s];4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size2;4:circle;4:implies[%s,%s];4:rectangle;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(x.s)),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(and[triangle,triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:triangle;1:%s.o;2:x
'λx.apply(implies[circle,rectangle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:circle;4:rectangle;1:%s.o;2:x
'λx.apply(or[apply(same_shape,x.o),and[size1,rectangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:size1;4:rectangle;1:%s.o;2:x
'λx.apply(nor[triangle,green],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:triangle;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[apply(same_shape,iota(filter(x.s, blue))),size2],iota(filter(filter(filter(x.s, size3), triangle), and[blue,size1])))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle;4:and[%s,%s];4:blue;4:size1
'λx.forall(yellow,filter(filter(x.s, blue), and[triangle,triangle]))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:triangle;4:triangle
'λx.apply(and[or[not[yellow],implies[yellow,and[and[apply(same_color,x.o),green],circle]]],rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:not[%s];4:yellow;4:implies[%s,%s];4:yellow;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green;4:circle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[iff[circle,circle],and[size2,green]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:circle;4:circle;4:and[%s,%s];4:size2;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[or[size2,not[size1]],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size2;4:not[%s];4:size1;4:green;1:%s.o;2:x
'λx.forall(yellow,filter(x.s, blue))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(or[size2,or[green,apply(same_color,iota(filter(filter(filter(filter(filter(x.s, implies[and[blue,green],yellow]), green), and[rectangle,triangle]), blue), triangle)))]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:or[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:and[%s,%s];4:blue;4:green;4:yellow;4:green;4:and[%s,%s];4:rectangle;4:triangle;4:blue;4:triangle;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(filter(x.s, not[and[size3,rectangle]]), apply(size-lt,iota(filter(x.s, not[nand[circle,and[yellow,and[size3,size2]]]])))), size1), green)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:size3;4:rectangle;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:nand[%s,%s];4:circle;4:and[%s,%s];4:yellow;4:and[%s,%s];4:size3;4:size2;4:size1;4:green;3:%s.s;2:x
'λx.apply(implies[or[or[and[and[and[rectangle,triangle],and[apply(same_color,x.o),green]],green],and[rectangle,and[not[size2],blue]]],apply(same_size,x.o)],blue],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green;4:green;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:not[%s];4:size2;4:blue;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(filter(x.s, size3), iff[apply(same_shape,x.o),not[apply(same_size,x.o)]]), or[size1,blue])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:iff[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:size1;4:blue;3:%s.s;2:x
'λx.forall(triangle,filter(filter(x.s, size1), size1))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1
'λx.empty(filter(filter(filter(filter(x.s, apply(same_size,iota(filter(x.s, nor[apply(same_size,iota(filter(x.s, green))),and[size3,triangle]])))), and[rectangle,size1]), blue), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:size3;4:triangle;4:and[%s,%s];4:rectangle;4:size1;4:blue;4:triangle
'λx.apply(and[apply(same_color,iota(filter(x.s, triangle))),yellow],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(and[yellow,iff[or[yellow,apply(same_size,iota(filter(x.s, blue)))],blue]],iota(filter(filter(x.s, rectangle), circle)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:iff[%s,%s];4:or[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle
'λx.apply(or[blue,and[circle,yellow]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:and[%s,%s];4:circle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size2,rectangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(x.s, size3), size1)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size1;3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(x.s, circle), implies[size3,circle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:implies[%s,%s];4:size3;4:circle
'λx.apply(size2,iota(filter(x.s, and[and[and[and[size1,or[size2,not[size1]]],green],rectangle],and[and[green,triangle],rectangle]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:size2;4:not[%s];4:size1;4:green;4:rectangle;4:and[%s,%s];4:and[%s,%s];4:green;4:triangle;4:rectangle
'λx.apply(size2,iota(filter(filter(x.s, circle), nor[size2,yellow])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:nor[%s,%s];4:size2;4:yellow
'λx.exists(nor[size2,size2], filter(filter(x.s, size2), size3))'	0:exists(%s, %s);4:nor[%s,%s];4:size2;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3
'λx.forall(apply(size-leq,x.o),filter(x.s, yellow))'	0:forall(%s,%s);4:apply(%s,%s);5:size-leq;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.exists(iff[not[size1],apply(same_color,iota(filter(filter(filter(filter(filter(x.s, green), or[apply(same_color,x.o),and[not[or[and[not[size1],and[size3,nand[or[size2,size1],rectangle]]],nand[not[green],blue]]],apply(same_color,x.o)]]), size3), green), apply(same_size,iota(x.s)))))], x.s)'	0:exists(%s, %s);4:iff[%s,%s];4:not[%s];4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:not[%s];4:or[%s,%s];4:and[%s,%s];4:not[%s];4:size1;4:and[%s,%s];4:size3;4:nand[%s,%s];4:or[%s,%s];4:size2;4:size1;4:rectangle;4:nand[%s,%s];4:not[%s];4:green;4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3;4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.exists(nand[and[and[circle,and[and[size3,yellow],apply(size-gt,iota(x.s))]],iff[apply(same_color,iota(filter(x.s, triangle))),nor[size1,rectangle]]],rectangle], filter(x.s, rectangle))'	0:exists(%s, %s);4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:size3;4:yellow;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:iff[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:nor[%s,%s];4:size1;4:rectangle;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(nand[triangle,and[apply(size-geq,x.o),green]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:green;1:%s.o;2:x
'λx.apply(and[rectangle,triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[size1,size1],iff[apply(same_size,iota(x.s)),yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:size1;4:iff[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:yellow;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(filter(x.s, implies[apply(same_color,iota(x.s)),circle]), size2), apply(same_size,x.o))))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:circle;4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(nor[and[green,size1],triangle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:green;4:size1;4:triangle;1:%s.o;2:x
'λx.apply(implies[size2,and[implies[circle,or[circle,green]],size2]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:size2;4:and[%s,%s];4:implies[%s,%s];4:circle;4:or[%s,%s];4:circle;4:green;4:size2;1:iota(%s);3:%s.s;2:x
'λx.exists(green, filter(filter(filter(filter(x.s, not[size2]), not[size2]), and[size2,rectangle]), apply(same_size,iota(filter(x.s, apply(same_size,iota(x.s)))))))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:not[%s];4:size2;4:and[%s,%s];4:size2;4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(and[apply(same_color,x.o),not[size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:size2;1:%s.o;2:x
'λx.apply(or[size3,apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(iff[not[size1],circle],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:not[%s];4:size1;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(size-geq,iota(filter(x.s, and[blue,size1]))),iota(filter(x.s, implies[triangle,iff[and[green,or[size2,not[nand[size1,circle]]]],and[apply(same_color,iota(filter(filter(x.s, size1), size2))),and[rectangle,green]]]])))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:triangle;4:iff[%s,%s];4:and[%s,%s];4:green;4:or[%s,%s];4:size2;4:not[%s];4:nand[%s,%s];4:size1;4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2;4:and[%s,%s];4:rectangle;4:green
'λx.apply(and[triangle,and[triangle,circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:triangle;4:circle;1:%s.o;2:x
'λx.forall(not[and[blue,and[and[blue,apply(same_shape,x.o)],nor[and[size1,circle],green]]]],filter(x.s, rectangle))'	0:forall(%s,%s);4:not[%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:nor[%s,%s];4:and[%s,%s];4:size1;4:circle;4:green;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.empty(filter(filter(x.s, blue), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green
'λx.empty(filter(filter(x.s, blue), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3
'λx.contains(x.o, filter(filter(x.s, blue), and[or[not[triangle],not[size3]],size1]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:triangle;4:not[%s];4:size3;4:size1
'λx.apply(implies[and[not[size1],green],and[apply(same_shape,x.o),or[apply(same_shape,x.o),rectangle]]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:not[%s];4:size1;4:green;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(x.s, green), size3)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size3
'λx.apply(size1,iota(filter(filter(x.s, green), size1)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1
'λx.apply(size2,iota(filter(filter(x.s, green), green)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:green
'λx.apply(size3,iota(filter(filter(x.s, green), green)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:green
'λx.empty(filter(filter(filter(filter(filter(filter(x.s, not[yellow]), blue), and[yellow,rectangle]), rectangle), green), implies[blue,size1]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:blue;4:and[%s,%s];4:yellow;4:rectangle;4:rectangle;4:green;4:implies[%s,%s];4:blue;4:size1
'λx.apply(or[not[and[circle,size2]],triangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:and[%s,%s];4:circle;4:size2;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[yellow],iota(filter(filter(filter(x.s, yellow), not[size2]), yellow)))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:size2;4:yellow
'λx.apply(and[or[or[not[green],triangle],implies[rectangle,apply(same_color,x.o)]],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:not[%s];4:green;4:triangle;4:implies[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;1:%s.o;2:x
'λx.forall(or[not[circle],size1],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:not[%s];4:circle;4:size1;3:%s.s;2:x
'λx.apply(and[and[not[not[triangle]],apply(same_shape,iota(filter(filter(filter(filter(x.s, size1), size2), size3), and[and[rectangle,triangle],size2])))],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:not[%s];4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2;4:size3;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:triangle;4:size2;4:yellow;1:%s.o;2:x
'λx.apply(triangle,iota(filter(x.s, and[yellow,and[rectangle,apply(size-leq,x.o)]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:size-leq;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(x.s, triangle), rectangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle
'λx.apply(rectangle,iota(filter(filter(x.s, not[yellow]), rectangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:rectangle
'λx.exists(size2, filter(x.s, and[size3,and[size2,blue]]))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:and[%s,%s];4:size2;4:blue
'λx.apply(and[triangle,size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[triangle,size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(filter(x.s, size3), green), blue), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green;4:blue;4:size3
'λx.empty(filter(filter(filter(filter(filter(x.s, size1), size2), triangle), green), apply(same_color,iota(filter(filter(x.s, size3), not[not[size1]])))))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2;4:triangle;4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:not[%s];4:size1
'λx.contains(iota(filter(filter(x.s, blue), green)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green;3:%s.s;2:x
'λx.empty(filter(x.s, apply(size-geq,iota(x.s))))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x
'λx.forall(triangle,filter(filter(x.s, size2), yellow))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:yellow
'λx.contains(iota(filter(filter(filter(filter(x.s, size3), rectangle), size3), size3)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle;4:size3;4:size3;3:%s.s;2:x
'λx.apply(or[not[yellow],and[yellow,green]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:yellow;4:and[%s,%s];4:yellow;4:green;1:%s.o;2:x
'λx.empty(filter(x.s, rectangle))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.exists(and[blue,or[rectangle,yellow]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:blue;4:or[%s,%s];4:rectangle;4:yellow;3:%s.s;2:x
'λx.forall(apply(same_color,iota(filter(x.s, size1))),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;3:%s.s;2:x
'λx.apply(iff[and[yellow,or[circle,rectangle]],size1],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:yellow;4:or[%s,%s];4:circle;4:rectangle;4:size1;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, yellow), rectangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle
'λx.empty(filter(filter(x.s, and[size1,and[and[implies[apply(size-geq,x.o),yellow],size3],circle]]), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:yellow;4:size3;4:circle;4:size1
'λx.apply(or[size1,size1],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size1,size3],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_size,iota(filter(x.s, apply(size-gt,iota(x.s))))),iota(filter(x.s, size2)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.forall(and[or[green,apply(same_shape,x.o)],not[size2]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:or[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:size2;3:%s.s;2:x
'λx.apply(or[size1,and[triangle,size3]],iota(filter(x.s, apply(size-lt,iota(x.s)))))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:and[%s,%s];4:triangle;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x
'λx.exists(and[green,circle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:green;4:circle;3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(x.s, triangle), size3)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3
'λx.apply(rectangle,iota(filter(filter(x.s, or[not[blue],yellow]), blue)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:blue;4:yellow;4:blue
'λx.apply(or[size2,size2],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size2,size1],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:size1;1:iota(%s);3:%s.s;2:x
'λx.exists(not[and[green,size2]], filter(filter(filter(filter(filter(filter(filter(filter(x.s, green), circle), and[circle,apply(same_size,x.o)]), blue), rectangle), size1), blue), circle))'	0:exists(%s, %s);4:not[%s];4:and[%s,%s];4:green;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:circle;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;4:rectangle;4:size1;4:blue;4:circle
'λx.apply(or[and[rectangle,apply(same_size,iota(x.s))],and[rectangle,size1]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:size1;1:%s.o;2:x
'λx.apply(nand[triangle,and[apply(same_color,iota(x.s)),green]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:green;1:%s.o;2:x
'λx.apply(nor[blue,iff[blue,not[apply(size-geq,x.o)]]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:blue;4:iff[%s,%s];4:blue;4:not[%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:%s.o;2:x
'λx.forall(and[size2,blue],filter(x.s, and[and[circle,triangle],triangle]))'	0:forall(%s,%s);4:and[%s,%s];4:size2;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:circle;4:triangle;4:triangle
'λx.apply(apply(same_shape,iota(filter(filter(x.s, or[rectangle,not[nand[blue,apply(same_color,iota(filter(x.s, triangle)))]]]), triangle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:not[%s];4:nand[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:triangle;1:%s.o;2:x
'λx.apply(apply(same_color,iota(filter(filter(x.s, and[circle,apply(size-gt,x.o)]), size3))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[not[apply(same_shape,x.o)],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue;1:%s.o;2:x
'λx.exists(or[green,apply(same_size,iota(filter(filter(x.s, not[yellow]), or[size1,yellow])))], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:or[%s,%s];4:size1;4:yellow;3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, triangle), green), apply(same_color,iota(filter(x.s, iff[size1,implies[rectangle,green]])))))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size1;4:implies[%s,%s];4:rectangle;4:green
'λx.empty(filter(filter(filter(filter(filter(x.s, yellow), blue), size2), triangle), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:blue;4:size2;4:triangle;4:size1
'λx.forall(and[size3,circle],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:size3;4:circle;3:%s.s;2:x
'λx.apply(and[not[size3],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size3;4:triangle;1:%s.o;2:x
'λx.apply(and[not[size2],rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size2;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.exists(implies[or[size1,or[and[or[size3,or[blue,and[circle,or[blue,size1]]]],rectangle],size1]],size3], filter(filter(x.s, not[triangle]), apply(same_color,iota(x.s))))'	0:exists(%s, %s);4:implies[%s,%s];4:or[%s,%s];4:size1;4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size3;4:or[%s,%s];4:blue;4:and[%s,%s];4:circle;4:or[%s,%s];4:blue;4:size1;4:rectangle;4:size1;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, rectangle)), filter(x.s, triangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.empty(filter(filter(filter(filter(x.s, size2), not[size3]), green), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:not[%s];4:size3;4:green;4:rectangle
'λx.apply(implies[size2,size1],iota(filter(filter(filter(x.s, yellow), triangle), green)))'	0:apply(%s,%s);4:implies[%s,%s];4:size2;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle;4:green
'λx.apply(not[size3],iota(filter(x.s, not[green])))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green
'λx.apply(and[and[and[not[triangle],green],size1],blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:triangle;4:green;4:size1;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_shape,iota(filter(x.s, blue))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size1,apply(same_size,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(filter(filter(filter(filter(x.s, green), apply(same_shape,iota(filter(filter(filter(x.s, yellow), green), circle)))), circle), and[not[size3],size2]), and[or[size3,and[size3,nor[size2,not[circle]]]],not[circle]]), green)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green;4:circle;4:circle;4:and[%s,%s];4:not[%s];4:size3;4:size2;4:and[%s,%s];4:or[%s,%s];4:size3;4:and[%s,%s];4:size3;4:nor[%s,%s];4:size2;4:not[%s];4:circle;4:not[%s];4:circle;4:green
'λx.empty(filter(filter(filter(x.s, green), size2), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size2;4:circle
'λx.forall(and[and[size1,size1],green],filter(filter(filter(filter(x.s, size1), triangle), size2), circle))'	0:forall(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:size1;4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle;4:size2;4:circle
'λx.apply(and[and[size3,and[blue,yellow]],and[yellow,and[blue,and[size3,triangle]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:blue;4:yellow;4:and[%s,%s];4:yellow;4:and[%s,%s];4:blue;4:and[%s,%s];4:size3;4:triangle;1:%s.o;2:x
'λx.apply(not[rectangle],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.forall(triangle,filter(x.s, or[circle,rectangle]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:rectangle
'λx.contains(iota(filter(x.s, size3)), filter(x.s, rectangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(apply(same_size,iota(filter(x.s, circle))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(filter(filter(filter(x.s, size2), triangle), not[blue]), triangle), blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:triangle;4:not[%s];4:blue;4:triangle;4:blue
'λx.exists(not[size2], x.s)'	0:exists(%s, %s);4:not[%s];4:size2;3:%s.s;2:x
'λx.exists(not[size1], x.s)'	0:exists(%s, %s);4:not[%s];4:size1;3:%s.s;2:x
'λx.exists(not[size3], x.s)'	0:exists(%s, %s);4:not[%s];4:size3;3:%s.s;2:x
'λx.exists(apply(size-leq,x.o), filter(filter(filter(filter(x.s, and[apply(same_color,iota(x.s)),triangle]), implies[green,and[blue,size1]]), not[blue]), not[yellow]))'	0:exists(%s, %s);4:apply(%s,%s);5:size-leq;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:triangle;4:implies[%s,%s];4:green;4:and[%s,%s];4:blue;4:size1;4:not[%s];4:blue;4:not[%s];4:yellow
'λx.exists(and[apply(size-geq,iota(filter(x.s, rectangle))),circle], filter(x.s, circle))'	0:exists(%s, %s);4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.forall(rectangle,filter(filter(x.s, size3), size2))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2
'λx.empty(filter(filter(x.s, green), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:triangle
'λx.contains(iota(filter(x.s, yellow)), filter(x.s, or[and[yellow,size2],and[or[not[size3],size1],rectangle]]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:yellow;4:size2;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:size3;4:size1;4:rectangle
'λx.apply(implies[circle,green],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:circle;4:green;1:%s.o;2:x
'λx.apply(not[and[or[apply(same_size,iota(x.s)),triangle],size2]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:triangle;4:size2;1:%s.o;2:x
'λx.contains(iota(x.s), x.s)'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(and[iff[blue,or[green,size2]],yellow],iota(filter(x.s, iff[size3,yellow])))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:blue;4:or[%s,%s];4:green;4:size2;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size3;4:yellow
'λx.apply(apply(same_size,iota(filter(filter(filter(filter(x.s, size1), or[blue,size1]), yellow), and[size1,green]))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:or[%s,%s];4:blue;4:size1;4:yellow;4:and[%s,%s];4:size1;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(x.s, apply(size-geq,iota(filter(x.s, not[circle]))))))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.apply(nand[size3,green],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size3;4:green;1:%s.o;2:x
'λx.apply(not[nor[iff[or[implies[triangle,not[size3]],green],not[and[blue,yellow]]],circle]],x.o)'	0:apply(%s,%s);4:not[%s];4:nor[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:triangle;4:not[%s];4:size3;4:green;4:not[%s];4:and[%s,%s];4:blue;4:yellow;4:circle;1:%s.o;2:x
'λx.apply(apply(same_size,iota(x.s)),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(and[size2,apply(same_size,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(implies[green,not[and[apply(size-leq,iota(x.s)),or[size2,size2]]]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:green;4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:size2;1:%s.o;2:x
'λx.apply(and[circle,green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[not[yellow],size1],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:iff[%s,%s];4:not[%s];4:yellow;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(not[and[nor[green,and[size1,and[triangle,size2]]],nor[yellow,not[blue]]]],iota(filter(x.s, nor[triangle,size2])))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:nor[%s,%s];4:green;4:and[%s,%s];4:size1;4:and[%s,%s];4:triangle;4:size2;4:nor[%s,%s];4:yellow;4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:triangle;4:size2
'λx.apply(or[circle,size1],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(or[circle,size3],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.contains(iota(x.s), filter(filter(x.s, or[size1,size1]), blue))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:size1;4:blue
'λx.apply(and[or[triangle,blue],or[size1,apply(same_size,x.o)]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:triangle;4:blue;4:or[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.exists(rectangle, filter(x.s, and[circle,yellow]))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:yellow
'λx.apply(and[yellow,blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_shape,iota(filter(x.s, not[green]))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_size,iota(filter(filter(x.s, yellow), or[and[rectangle,rectangle],blue]))),iota(filter(filter(filter(x.s, and[circle,not[size3]]), yellow), green)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:rectangle;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:not[%s];4:size3;4:yellow;4:green
'λx.contains(iota(filter(x.s, rectangle)), filter(x.s, not[circle]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.forall(yellow,filter(x.s, not[or[not[circle],green]]))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:not[%s];4:circle;4:green
'λx.contains(x.o, filter(x.s, implies[nor[size1,size2],apply(same_color,x.o)]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:nor[%s,%s];4:size1;4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(and[apply(same_size,iota(filter(x.s, size1))),apply(size-geq,x.o)],iota(filter(x.s, or[rectangle,and[and[and[size2,circle],size3],or[triangle,size1]]])))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:circle;4:size3;4:or[%s,%s];4:triangle;4:size1
'λx.contains(iota(filter(x.s, and[size2,apply(size-gt,x.o)])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, blue), apply(size-leq,x.o))))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:size-leq;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, triangle), rectangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle
'λx.contains(x.o, filter(filter(x.s, and[green,blue]), and[blue,size2]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:blue;4:and[%s,%s];4:blue;4:size2
'λx.exists(and[circle,circle], filter(x.s, blue))'	0:exists(%s, %s);4:and[%s,%s];4:circle;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.empty(filter(filter(filter(filter(x.s, green), apply(same_shape,x.o)), triangle), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle;4:size2
'λx.apply(yellow,iota(filter(x.s, and[apply(size-lt,x.o),size1])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:size1
'λx.apply(triangle,iota(filter(filter(filter(x.s, and[circle,size1]), or[yellow,green]), rectangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size1;4:or[%s,%s];4:yellow;4:green;4:rectangle
'λx.apply(apply(same_color,iota(filter(filter(x.s, size2), circle))),iota(filter(filter(x.s, green), implies[not[circle],blue])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:implies[%s,%s];4:not[%s];4:circle;4:blue
'λx.apply(blue,iota(filter(filter(filter(filter(filter(x.s, apply(same_shape,x.o)), size1), blue), blue), rectangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;4:blue;4:blue;4:rectangle
'λx.exists(size1, filter(filter(filter(x.s, iff[and[not[size2],or[size3,size2]],green]), and[not[yellow],rectangle]), blue))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:and[%s,%s];4:not[%s];4:size2;4:or[%s,%s];4:size3;4:size2;4:green;4:and[%s,%s];4:not[%s];4:yellow;4:rectangle;4:blue
'λx.apply(implies[or[yellow,circle],apply(same_shape,iota(filter(filter(x.s, rectangle), circle)))],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:or[%s,%s];4:yellow;4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle;1:%s.o;2:x
'λx.forall(not[triangle],filter(x.s, circle))'	0:forall(%s,%s);4:not[%s];4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[size3,and[or[size2,circle],implies[blue,or[and[rectangle,size2],or[green,green]]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:or[%s,%s];4:size2;4:circle;4:implies[%s,%s];4:blue;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:size2;4:or[%s,%s];4:green;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[nand[circle,size1],circle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:nand[%s,%s];4:circle;4:size1;4:circle;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(filter(filter(filter(x.s, size1), triangle), rectangle), not[nor[rectangle,or[triangle,green]]]), yellow)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle;4:rectangle;4:not[%s];4:nor[%s,%s];4:rectangle;4:or[%s,%s];4:triangle;4:green;4:yellow
'λx.empty(filter(x.s, implies[not[circle],rectangle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:not[%s];4:circle;4:rectangle
'λx.apply(and[and[yellow,circle],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:circle;4:circle;1:%s.o;2:x
'λx.apply(and[and[size2,yellow],not[blue]],iota(filter(filter(filter(filter(x.s, nor[not[and[rectangle,apply(same_color,iota(x.s))]],apply(same_size,x.o)]), yellow), size1), yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size2;4:yellow;4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:not[%s];4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow;4:size1;4:yellow
'λx.apply(yellow,iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(or[triangle,size2],iota(filter(filter(x.s, apply(same_shape,x.o)), circle)))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle
'λx.exists(circle, filter(filter(filter(filter(x.s, and[blue,yellow]), implies[or[green,yellow],yellow]), not[or[circle,triangle]]), circle))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:yellow;4:implies[%s,%s];4:or[%s,%s];4:green;4:yellow;4:yellow;4:not[%s];4:or[%s,%s];4:circle;4:triangle;4:circle
'λx.apply(implies[implies[size2,size1],or[size3,apply(same_color,x.o)]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:implies[%s,%s];4:size2;4:size1;4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(x.s, rectangle), and[circle,and[and[or[and[green,green],and[rectangle,size3]],rectangle],apply(same_color,iota(filter(filter(x.s, and[yellow,yellow]), and[size3,not[triangle]])))]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:green;4:green;4:and[%s,%s];4:rectangle;4:size3;4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:yellow;4:and[%s,%s];4:size3;4:not[%s];4:triangle
'λx.apply(or[not[size2],or[and[apply(same_size,iota(x.s)),blue],size1]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:size2;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:blue;4:size1;1:%s.o;2:x
'λx.apply(or[rectangle,or[triangle,and[yellow,apply(same_shape,iota(x.s))]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:or[%s,%s];4:triangle;4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(iff[not[and[size3,and[blue,and[yellow,or[or[blue,triangle],green]]]]],and[apply(size-lt,iota(x.s)),yellow]],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:iff[%s,%s];4:not[%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:blue;4:and[%s,%s];4:yellow;4:or[%s,%s];4:or[%s,%s];4:blue;4:triangle;4:green;4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(implies[yellow,size3],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:yellow;4:size3;1:%s.o;2:x
'λx.apply(size2,iota(filter(x.s, and[nor[not[not[yellow]],yellow],and[and[green,triangle],rectangle]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:not[%s];4:not[%s];4:yellow;4:yellow;4:and[%s,%s];4:and[%s,%s];4:green;4:triangle;4:rectangle
'λx.apply(or[and[and[triangle,rectangle],and[apply(same_color,x.o),triangle]],size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;4:size3;1:%s.o;2:x
'λx.exists(size1, filter(x.s, implies[or[apply(same_color,iota(filter(filter(x.s, not[size2]), circle))),size1],iff[green,size1]]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:circle;4:size1;4:iff[%s,%s];4:green;4:size1
'λx.apply(not[nor[not[or[blue,size3]],not[green]]],x.o)'	0:apply(%s,%s);4:not[%s];4:nor[%s,%s];4:not[%s];4:or[%s,%s];4:blue;4:size3;4:not[%s];4:green;1:%s.o;2:x
'λx.apply(or[apply(same_shape,x.o),rectangle],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(apply(same_color,iota(filter(filter(filter(filter(x.s, apply(same_size,iota(filter(filter(x.s, rectangle), size1)))), triangle), size1), green))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1;4:triangle;4:size1;4:green;1:%s.o;2:x
'λx.apply(nand[or[blue,green],green],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:or[%s,%s];4:blue;4:green;4:green;1:%s.o;2:x
'λx.apply(or[and[nand[size3,not[and[nand[implies[size1,size1],green],apply(same_size,iota(x.s))]]],or[blue,yellow]],triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:size3;4:not[%s];4:and[%s,%s];4:nand[%s,%s];4:implies[%s,%s];4:size1;4:size1;4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:yellow;4:triangle;1:%s.o;2:x
'λx.apply(not[and[blue,or[nor[and[size2,blue],not[iff[size1,and[size2,or[triangle,yellow]]]]],size2]]],iota(filter(filter(x.s, triangle), and[size3,iff[blue,and[not[not[yellow]],triangle]]])))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:blue;4:or[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:size2;4:blue;4:not[%s];4:iff[%s,%s];4:size1;4:and[%s,%s];4:size2;4:or[%s,%s];4:triangle;4:yellow;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:size3;4:iff[%s,%s];4:blue;4:and[%s,%s];4:not[%s];4:not[%s];4:yellow;4:triangle
'λx.apply(or[blue,or[green,yellow]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:or[%s,%s];4:green;4:yellow;1:%s.o;2:x
'λx.apply(and[yellow,not[implies[green,rectangle]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:not[%s];4:implies[%s,%s];4:green;4:rectangle;1:%s.o;2:x
'λx.apply(and[or[size3,or[rectangle,yellow]],apply(size-lt,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size3;4:or[%s,%s];4:rectangle;4:yellow;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(nand[size1,green],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size1;4:green;1:%s.o;2:x
'λx.apply(apply(same_color,iota(filter(x.s, yellow))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(filter(x.s, implies[apply(same_size,x.o),blue]), size1), size3))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;4:size1;4:size3
'λx.apply(yellow,iota(filter(x.s, not[circle])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.apply(and[iff[size3,size2],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:size3;4:size2;4:size2;1:%s.o;2:x
'λx.apply(or[or[not[size1],green],yellow],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:not[%s];4:size1;4:green;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[size2,or[size1,or[size2,size1]]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size2;4:or[%s,%s];4:size1;4:or[%s,%s];4:size2;4:size1;1:%s.o;2:x
'λx.apply(nand[triangle,blue],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:blue;1:%s.o;2:x
'λx.forall(apply(same_shape,iota(x.s)),filter(filter(x.s, size3), not[apply(same_shape,x.o)]))'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(size2,iota(filter(x.s, or[circle,green])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:green
'λx.apply(circle,iota(filter(filter(x.s, and[size1,yellow]), size2)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:yellow;4:size2
'λx.apply(green,iota(filter(filter(x.s, triangle), not[nor[size1,rectangle]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:not[%s];4:nor[%s,%s];4:size1;4:rectangle
'λx.apply(and[not[size3],size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size3;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[implies[rectangle,blue],not[apply(same_color,x.o)]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:implies[%s,%s];4:rectangle;4:blue;4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[apply(size-lt,x.o),size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:size3;1:%s.o;2:x
'λx.forall(and[triangle,size1],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:triangle;4:size1;3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, and[and[blue,not[green]],yellow]), yellow), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:blue;4:not[%s];4:green;4:yellow;4:yellow;4:size3
'λx.apply(and[and[triangle,size3],and[rectangle,rectangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:size3;4:and[%s,%s];4:rectangle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[rectangle,circle],iota(filter(filter(filter(filter(filter(filter(x.s, nand[size1,and[not[size2],circle]]), apply(same_shape,iota(x.s))), size2), or[or[or[not[size3],yellow],yellow],rectangle]), or[size2,circle]), size1)))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size1;4:and[%s,%s];4:not[%s];4:size2;4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:not[%s];4:size3;4:yellow;4:yellow;4:rectangle;4:or[%s,%s];4:size2;4:circle;4:size1
'λx.apply(rectangle,iota(filter(filter(x.s, and[yellow,size2]), yellow)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size2;4:yellow
'λx.apply(apply(size-geq,x.o),iota(filter(filter(filter(filter(filter(filter(filter(filter(x.s, triangle), or[circle,size1]), green), size2), size2), blue), and[and[green,rectangle],not[apply(same_color,x.o)]]), not[size2])))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:or[%s,%s];4:circle;4:size1;4:green;4:size2;4:size2;4:blue;4:and[%s,%s];4:and[%s,%s];4:green;4:rectangle;4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:size2
'λx.empty(filter(filter(x.s, and[apply(same_shape,x.o),circle]), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;4:size2
'λx.apply(apply(same_size,iota(filter(x.s, blue))),iota(filter(filter(filter(x.s, rectangle), circle), size1)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle;4:size1
'λx.apply(apply(size-lt,x.o),iota(filter(x.s, circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[or[size2,green],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size2;4:green;4:size2;1:%s.o;2:x
'λx.apply(not[yellow],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(filter(x.s, size2), not[triangle]), triangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:not[%s];4:triangle;4:triangle
'λx.apply(nand[or[rectangle,nand[and[size1,and[and[blue,or[size2,iff[yellow,green]]],not[green]]],circle]],triangle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:or[%s,%s];4:rectangle;4:nand[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:blue;4:or[%s,%s];4:size2;4:iff[%s,%s];4:yellow;4:green;4:not[%s];4:green;4:circle;4:triangle;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, green), or[or[rectangle,yellow],circle])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:or[%s,%s];4:rectangle;4:yellow;4:circle;3:%s.s;2:x
'λx.apply(and[size3,rectangle],iota(filter(filter(x.s, and[green,and[rectangle,green]]), and[blue,circle])))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:and[%s,%s];4:rectangle;4:green;4:and[%s,%s];4:blue;4:circle
'λx.exists(green, filter(filter(filter(x.s, triangle), blue), size2))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue;4:size2
'λx.apply(and[circle,not[yellow]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:not[%s];4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(not[or[circle,rectangle]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:circle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[circle,and[not[green],or[not[iff[yellow,size2]],circle]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:and[%s,%s];4:not[%s];4:green;4:or[%s,%s];4:not[%s];4:iff[%s,%s];4:yellow;4:size2;4:circle;1:%s.o;2:x
'λx.exists(circle, filter(filter(x.s, apply(size-gt,iota(x.s))), green))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:green
'λx.contains(x.o, filter(filter(filter(filter(filter(filter(filter(x.s, blue), green), or[blue,not[not[nor[and[and[circle,yellow],blue],yellow]]]]), and[size2,apply(same_shape,x.o)]), and[green,circle]), circle), or[yellow,circle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green;4:or[%s,%s];4:blue;4:not[%s];4:not[%s];4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:yellow;4:blue;4:yellow;4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:green;4:circle;4:circle;4:or[%s,%s];4:yellow;4:circle
'λx.apply(nor[implies[or[size1,not[size2]],circle],size2],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:implies[%s,%s];4:or[%s,%s];4:size1;4:not[%s];4:size2;4:circle;4:size2;1:%s.o;2:x
'λx.apply(not[rectangle],iota(filter(filter(x.s, triangle), not[blue])))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:not[%s];4:blue
'λx.apply(circle,iota(filter(filter(filter(filter(x.s, blue), apply(same_size,x.o)), yellow), nor[implies[yellow,apply(same_shape,x.o)],blue])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow;4:nor[%s,%s];4:implies[%s,%s];4:yellow;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue
'λx.apply(and[size1,nor[and[and[nand[and[size1,and[and[blue,or[size2,iff[yellow,green]]],not[green]]],circle],not[size3]],or[size1,triangle]],yellow]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:blue;4:or[%s,%s];4:size2;4:iff[%s,%s];4:yellow;4:green;4:not[%s];4:green;4:circle;4:not[%s];4:size3;4:or[%s,%s];4:size1;4:triangle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[or[size3,yellow],size2],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:or[%s,%s];4:size3;4:yellow;4:size2;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, and[apply(same_size,iota(x.s)),not[size2]])), filter(x.s, implies[or[circle,green],circle]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:not[%s];4:size2;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:or[%s,%s];4:circle;4:green;4:circle
'λx.contains(iota(x.s), filter(x.s, not[triangle]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.contains(iota(x.s), filter(x.s, nand[size2,implies[rectangle,size1]]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size2;4:implies[%s,%s];4:rectangle;4:size1
'λx.apply(or[size3,size3],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size3,size1],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(x.s, and[green,size2]), nor[yellow,size3])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:size2;4:nor[%s,%s];4:yellow;4:size3
'λx.apply(nand[not[blue],triangle],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:not[%s];4:blue;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.forall(yellow,filter(filter(filter(x.s, and[and[green,apply(same_color,iota(x.s))],size1]), and[size3,not[circle]]), blue))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:size3;4:not[%s];4:circle;4:blue
'λx.contains(iota(filter(filter(x.s, rectangle), size1)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1;3:%s.s;2:x
'λx.apply(and[triangle,and[yellow,and[blue,and[size3,triangle]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:yellow;4:and[%s,%s];4:blue;4:and[%s,%s];4:size3;4:triangle;1:%s.o;2:x
'λx.empty(filter(filter(x.s, rectangle), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle
'λx.exists(size3, filter(filter(filter(x.s, not[apply(same_size,x.o)]), and[or[nor[yellow,yellow],and[green,blue]],rectangle]), and[size3,not[circle]]))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:yellow;4:yellow;4:and[%s,%s];4:green;4:blue;4:rectangle;4:and[%s,%s];4:size3;4:not[%s];4:circle
'λx.apply(triangle,iota(filter(filter(filter(x.s, circle), nor[and[yellow,circle],circle]), blue)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:nor[%s,%s];4:and[%s,%s];4:yellow;4:circle;4:circle;4:blue
'λx.apply(green,iota(filter(filter(x.s, not[blue]), not[triangle])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:not[%s];4:triangle
'λx.apply(or[and[and[size3,circle],not[green]],blue],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:circle;4:not[%s];4:green;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size3,green],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(triangle, filter(filter(filter(filter(x.s, size1), apply(size-gt,iota(x.s))), rectangle), and[size1,green]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:size1;4:green
'λx.apply(or[triangle,nand[nor[green,and[green,and[triangle,triangle]]],size2]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:nand[%s,%s];4:nor[%s,%s];4:green;4:and[%s,%s];4:green;4:and[%s,%s];4:triangle;4:triangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[size2,and[green,or[triangle,not[and[blue,and[size3,green]]]]]],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:iff[%s,%s];4:size2;4:and[%s,%s];4:green;4:or[%s,%s];4:triangle;4:not[%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:size3;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.contains(iota(filter(x.s, yellow)), filter(filter(x.s, triangle), size2))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2
'λx.exists(not[size2], filter(filter(x.s, apply(same_shape,x.o)), apply(size-geq,x.o)))'	0:exists(%s, %s);4:not[%s];4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.apply(apply(same_size,x.o),iota(filter(x.s, apply(same_size,iota(filter(filter(x.s, yellow), blue))))))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:blue
'λx.apply(and[yellow,and[rectangle,size2]],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:and[%s,%s];4:rectangle;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(blue,iota(filter(filter(filter(x.s, size3), yellow), or[size2,and[not[green],circle]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow;4:or[%s,%s];4:size2;4:and[%s,%s];4:not[%s];4:green;4:circle
'λx.apply(or[yellow,nand[yellow,or[apply(size-gt,x.o),apply(same_shape,iota(filter(x.s, circle)))]]],iota(filter(x.s, or[yellow,not[and[size1,size3]]])))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:nand[%s,%s];4:yellow;4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:not[%s];4:and[%s,%s];4:size1;4:size3
'λx.apply(size2,iota(filter(filter(x.s, apply(same_size,iota(filter(filter(x.s, and[circle,not[implies[blue,apply(same_color,iota(x.s))]]]), and[or[and[green,green],circle],size2])))), blue)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:not[%s];4:implies[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:green;4:green;4:circle;4:size2;4:blue
'λx.apply(or[triangle,nand[size1,size3]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:nand[%s,%s];4:size1;4:size3;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(filter(filter(x.s, or[or[yellow,size1],and[circle,triangle]]), blue), yellow), and[size3,circle])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:yellow;4:size1;4:and[%s,%s];4:circle;4:triangle;4:blue;4:yellow;4:and[%s,%s];4:size3;4:circle
'λx.apply(and[not[implies[and[and[size3,rectangle],and[and[and[green,size2],blue],and[or[apply(same_shape,x.o),blue],apply(same_size,x.o)]]],blue]],or[or[blue,and[blue,not[triangle]]],not[nor[size1,apply(same_color,x.o)]]]],iota(filter(filter(filter(x.s, not[blue]), blue), nor[iff[size3,blue],or[yellow,blue]])))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:implies[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:rectangle;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:size2;4:blue;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;4:or[%s,%s];4:or[%s,%s];4:blue;4:and[%s,%s];4:blue;4:not[%s];4:triangle;4:not[%s];4:nor[%s,%s];4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:blue;4:nor[%s,%s];4:iff[%s,%s];4:size3;4:blue;4:or[%s,%s];4:yellow;4:blue
'λx.apply(or[not[size2],blue],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:size2;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(blue,iota(filter(x.s, not[not[apply(same_shape,iota(x.s))]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.exists(yellow, filter(filter(filter(filter(x.s, rectangle), triangle), apply(same_size,iota(x.s))), triangle))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:triangle
'λx.exists(rectangle, filter(filter(x.s, green), circle))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:circle
'λx.apply(implies[triangle,triangle],iota(filter(x.s, and[implies[blue,circle],apply(same_size,x.o)])))'	0:apply(%s,%s);4:implies[%s,%s];4:triangle;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:implies[%s,%s];4:blue;4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(and[size1,size3],iota(filter(x.s, not[not[size1]])))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:size1
'λx.apply(and[or[size2,green],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size2;4:green;4:blue;1:%s.o;2:x
'λx.exists(not[size2], filter(filter(x.s, triangle), or[rectangle,not[size1]]))'	0:exists(%s, %s);4:not[%s];4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:or[%s,%s];4:rectangle;4:not[%s];4:size1
'λx.apply(green,iota(filter(filter(filter(filter(x.s, apply(size-lt,x.o)), apply(same_shape,iota(filter(filter(filter(x.s, rectangle), size3), size2)))), circle), blue)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3;4:size2;4:circle;4:blue
'λx.apply(triangle,iota(filter(x.s, apply(same_shape,iota(x.s)))))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.exists(not[yellow], filter(x.s, apply(same_size,iota(x.s))))'	0:exists(%s, %s);4:not[%s];4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.forall(size2,filter(filter(filter(filter(filter(x.s, size2), yellow), size2), and[rectangle,rectangle]), blue))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:yellow;4:size2;4:and[%s,%s];4:rectangle;4:rectangle;4:blue
'λx.apply(blue,iota(filter(filter(x.s, size1), circle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle
'λx.contains(x.o, filter(x.s, yellow))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(size1,iota(filter(x.s, or[triangle,circle])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:circle
'λx.apply(or[nand[not[size2],green],apply(same_color,iota(filter(filter(filter(filter(x.s, green), and[triangle,yellow]), blue), size2)))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:not[%s];4:size2;4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:triangle;4:yellow;4:blue;4:size2;1:%s.o;2:x
'λx.apply(apply(same_size,iota(filter(filter(x.s, apply(same_shape,iota(filter(filter(x.s, blue), rectangle)))), or[circle,yellow]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle;4:or[%s,%s];4:circle;4:yellow;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, and[size3,circle]), size1), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:circle;4:size1;4:green
'λx.contains(x.o, filter(filter(x.s, rectangle), apply(same_color,iota(filter(filter(filter(filter(filter(x.s, blue), rectangle), and[or[size3,and[size3,triangle]],size3]), size2), green)))))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle;4:and[%s,%s];4:or[%s,%s];4:size3;4:and[%s,%s];4:size3;4:triangle;4:size3;4:size2;4:green
'λx.contains(iota(x.s), filter(filter(x.s, green), apply(same_shape,x.o)))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, circle), not[circle])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:circle
'λx.exists(not[triangle], filter(x.s, circle))'	0:exists(%s, %s);4:not[%s];4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(size1,iota(filter(filter(x.s, blue), not[apply(same_size,iota(filter(filter(x.s, and[not[green],apply(same_shape,iota(x.s))]), green)))])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:green
'λx.apply(and[triangle,triangle],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(rectangle,iota(filter(filter(filter(x.s, yellow), yellow), and[and[triangle,yellow],apply(same_shape,x.o)])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:yellow;4:and[%s,%s];4:and[%s,%s];4:triangle;4:yellow;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(or[rectangle,size1],iota(filter(filter(x.s, blue), yellow)))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow
'λx.contains(x.o, filter(filter(filter(filter(x.s, yellow), size2), nand[yellow,circle]), and[green,circle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2;4:nand[%s,%s];4:yellow;4:circle;4:and[%s,%s];4:green;4:circle
'λx.contains(iota(x.s), filter(filter(filter(x.s, nand[apply(same_color,iota(filter(x.s, blue))),rectangle]), green), triangle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle;4:green;4:triangle
'λx.apply(green,iota(filter(filter(x.s, blue), size3)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3
'λx.apply(circle,iota(filter(x.s, not[circle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.forall(and[and[size1,size3],apply(same_color,iota(x.s))],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(x.s, rectangle), green)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green
'λx.apply(size2,iota(filter(filter(x.s, rectangle), size1)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1
'λx.apply(size1,iota(filter(filter(x.s, rectangle), size2)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2
'λx.apply(and[and[size1,triangle],or[green,apply(size-leq,iota(x.s))]],iota(filter(filter(filter(x.s, yellow), iff[size3,triangle]), size2)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:triangle;4:or[%s,%s];4:green;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:iff[%s,%s];4:size3;4:triangle;4:size2
'λx.contains(iota(filter(filter(filter(filter(filter(x.s, apply(size-lt,iota(x.s))), or[rectangle,and[circle,apply(same_size,x.o)]]), size1), or[rectangle,size1]), yellow)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1;4:or[%s,%s];4:rectangle;4:size1;4:yellow;3:%s.s;2:x
'λx.apply(and[and[green,iff[iff[blue,size1],circle]],blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:green;4:iff[%s,%s];4:iff[%s,%s];4:blue;4:size1;4:circle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(not[rectangle],x.o)'	0:apply(%s,%s);4:not[%s];4:rectangle;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, size1), and[blue,triangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:blue;4:triangle
'λx.forall(size3,filter(filter(x.s, rectangle), apply(same_size,x.o)))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.exists(not[rectangle], x.s)'	0:exists(%s, %s);4:not[%s];4:rectangle;3:%s.s;2:x
'λx.apply(apply(same_color,iota(filter(filter(filter(x.s, apply(same_size,iota(filter(filter(x.s, blue), rectangle)))), size3), triangle))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle;4:size3;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.exists(iff[nand[and[and[apply(size-gt,x.o),and[circle,nor[and[circle,size3],and[size2,rectangle]]]],blue],apply(size-leq,x.o)],and[size2,circle]], x.s)'	0:exists(%s, %s);4:iff[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:and[%s,%s];4:circle;4:nor[%s,%s];4:and[%s,%s];4:circle;4:size3;4:and[%s,%s];4:size2;4:rectangle;4:blue;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:and[%s,%s];4:size2;4:circle;3:%s.s;2:x
'λx.apply(not[circle],x.o)'	0:apply(%s,%s);4:not[%s];4:circle;1:%s.o;2:x
'λx.exists(and[size3,circle], filter(x.s, circle))'	0:exists(%s, %s);4:and[%s,%s];4:size3;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[blue,apply(size-leq,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(apply(size-lt,x.o),iota(filter(filter(filter(filter(filter(filter(x.s, nor[green,iff[and[yellow,yellow],triangle]]), rectangle), size1), size1), nand[circle,not[yellow]]), apply(size-geq,x.o))))'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:green;4:iff[%s,%s];4:and[%s,%s];4:yellow;4:yellow;4:triangle;4:rectangle;4:size1;4:size1;4:nand[%s,%s];4:circle;4:not[%s];4:yellow;4:apply(%s,%s);5:size-geq;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(x.s, triangle), yellow), not[rectangle])), filter(x.s, green))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:yellow;4:not[%s];4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[yellow,circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[implies[size2,nand[yellow,or[size2,not[and[rectangle,apply(same_color,iota(filter(filter(filter(filter(filter(x.s, and[triangle,rectangle]), nand[circle,size1]), and[circle,size1]), circle), size1)))]]]]],and[green,blue]],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:or[%s,%s];4:implies[%s,%s];4:size2;4:nand[%s,%s];4:yellow;4:or[%s,%s];4:size2;4:not[%s];4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:rectangle;4:nand[%s,%s];4:circle;4:size1;4:and[%s,%s];4:circle;4:size1;4:circle;4:size1;4:and[%s,%s];4:green;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[rectangle,and[size3,triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:size3;4:triangle;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, and[rectangle,circle]), circle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:circle;4:circle
'λx.apply(apply(same_size,iota(filter(filter(filter(x.s, size1), size3), blue))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size3;4:blue;1:%s.o;2:x
'λx.exists(or[blue,or[apply(same_shape,x.o),apply(same_shape,x.o)]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:blue;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(green,iota(filter(filter(x.s, circle), blue)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue
'λx.contains(iota(filter(x.s, and[size3,yellow])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:yellow;3:%s.s;2:x
'λx.exists(not[yellow], filter(filter(filter(x.s, green), or[circle,or[circle,size2]]), triangle))'	0:exists(%s, %s);4:not[%s];4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:circle;4:or[%s,%s];4:circle;4:size2;4:triangle
'λx.forall(implies[blue,blue],filter(x.s, size1))'	0:forall(%s,%s);4:implies[%s,%s];4:blue;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.contains(x.o, filter(filter(x.s, size1), blue))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue
'λx.forall(rectangle,filter(filter(filter(x.s, apply(same_shape,iota(filter(filter(x.s, blue), rectangle)))), or[circle,yellow]), rectangle))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle;4:or[%s,%s];4:circle;4:yellow;4:rectangle
'λx.apply(and[not[yellow],circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:yellow;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[rectangle,size3],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, size2), blue))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue
'λx.empty(filter(filter(x.s, yellow), or[size3,or[size1,apply(same_shape,iota(x.s))]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:size3;4:or[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(x.s, and[blue,yellow])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:yellow
'λx.apply(apply(size-geq,x.o),iota(filter(x.s, green)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(apply(size-geq,x.o),iota(filter(x.s, size1)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(or[green,nand[yellow,apply(same_shape,x.o)]],iota(filter(filter(x.s, circle), rectangle)))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:nand[%s,%s];4:yellow;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle
'λx.exists(circle, filter(filter(filter(filter(filter(filter(filter(filter(x.s, yellow), or[yellow,and[triangle,size2]]), or[triangle,circle]), triangle), size2), size1), blue), apply(same_shape,x.o)))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:yellow;4:and[%s,%s];4:triangle;4:size2;4:or[%s,%s];4:triangle;4:circle;4:triangle;4:size2;4:size1;4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, circle), implies[green,circle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:implies[%s,%s];4:green;4:circle
'λx.apply(and[size3,circle],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.empty(filter(filter(filter(filter(x.s, and[yellow,blue]), size3), rectangle), or[nor[green,apply(same_shape,iota(x.s))],triangle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:blue;4:size3;4:rectangle;4:or[%s,%s];4:nor[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle
'λx.apply(or[or[size1,apply(size-geq,x.o)],size3],iota(filter(x.s, not[apply(same_color,x.o)])))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:size1;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(or[and[apply(same_shape,x.o),blue],triangle],iota(filter(filter(filter(filter(x.s, or[rectangle,size1]), and[circle,yellow]), circle), blue)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:size1;4:and[%s,%s];4:circle;4:yellow;4:circle;4:blue
'λx.apply(and[size1,circle],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(and[triangle,yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:yellow;1:%s.o;2:x
'λx.apply(and[rectangle,and[blue,yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:blue;4:yellow;1:%s.o;2:x
'λx.forall(circle,filter(filter(x.s, apply(size-leq,iota(filter(x.s, apply(same_size,x.o))))), yellow))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow
'λx.apply(not[green],iota(filter(filter(x.s, size3), nor[and[green,apply(same_size,x.o)],and[yellow,triangle]])))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:nor[%s,%s];4:and[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:yellow;4:triangle
'λx.apply(blue,iota(filter(filter(x.s, rectangle), size2)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2
'λx.apply(size3,iota(filter(filter(x.s, rectangle), apply(same_shape,x.o))))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(or[rectangle,rectangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[nor[not[and[size1,blue]],size3],circle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:nor[%s,%s];4:not[%s];4:and[%s,%s];4:size1;4:blue;4:size3;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(x.s, rectangle), green)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green
'λx.apply(rectangle,iota(filter(x.s, apply(same_shape,iota(x.s)))))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(and[not[size2],and[size2,circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size2;4:and[%s,%s];4:size2;4:circle;1:%s.o;2:x
'λx.forall(and[apply(same_size,x.o),size3],filter(filter(x.s, size3), circle))'	0:forall(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle
'λx.empty(filter(filter(x.s, and[or[not[or[and[and[and[apply(same_color,iota(filter(filter(x.s, yellow), not[size1]))),green],and[size2,and[rectangle,rectangle]]],blue],yellow]],apply(same_size,x.o)],circle]), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:size1;4:green;4:and[%s,%s];4:size2;4:and[%s,%s];4:rectangle;4:rectangle;4:blue;4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;4:size3
'λx.apply(circle,iota(filter(x.s, apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(x.s, or[and[or[circle,size2],triangle],rectangle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:circle;4:size2;4:triangle;4:rectangle
'λx.apply(nor[size2,rectangle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size2;4:rectangle;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(filter(filter(x.s, green), rectangle), size2), not[green])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle;4:size2;4:not[%s];4:green
'λx.apply(size2,iota(filter(filter(x.s, and[green,circle]), iff[circle,size3])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:circle;4:iff[%s,%s];4:circle;4:size3
'λx.exists(size1, filter(filter(filter(filter(filter(x.s, circle), and[circle,circle]), not[size1]), yellow), circle))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:circle;4:circle;4:not[%s];4:size1;4:yellow;4:circle
'λx.exists(and[size1,triangle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:size1;4:triangle;3:%s.s;2:x
'λx.apply(nand[iff[triangle,circle],or[circle,size1]],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:iff[%s,%s];4:triangle;4:circle;4:or[%s,%s];4:circle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(or[or[size2,size1],apply(same_shape,x.o)],iota(filter(filter(filter(filter(x.s, apply(same_color,x.o)), size2), green), and[size3,nor[rectangle,size3]])))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:size2;4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size2;4:green;4:and[%s,%s];4:size3;4:nor[%s,%s];4:rectangle;4:size3
'λx.apply(or[size1,size2],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(yellow, filter(filter(filter(filter(x.s, green), or[circle,and[rectangle,size2]]), size3), circle))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:circle;4:and[%s,%s];4:rectangle;4:size2;4:size3;4:circle
'λx.apply(or[and[size1,and[rectangle,not[triangle]]],or[circle,blue]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:rectangle;4:not[%s];4:triangle;4:or[%s,%s];4:circle;4:blue;1:%s.o;2:x
'λx.exists(green, filter(filter(filter(filter(filter(filter(filter(x.s, green), and[rectangle,or[not[yellow],not[green]]]), and[apply(same_shape,x.o),triangle]), triangle), size1), size1), rectangle))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:not[%s];4:yellow;4:not[%s];4:green;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle;4:triangle;4:size1;4:size1;4:rectangle
'λx.apply(and[apply(size-lt,iota(filter(filter(filter(x.s, and[size1,and[green,triangle]]), size2), rectangle))),not[nor[size1,triangle]]],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:and[%s,%s];4:green;4:triangle;4:size2;4:rectangle;4:not[%s];4:nor[%s,%s];4:size1;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.forall(size2,filter(filter(x.s, size2), or[circle,nand[blue,green]]))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:circle;4:nand[%s,%s];4:blue;4:green
'λx.contains(iota(filter(x.s, or[circle,blue])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:blue;3:%s.s;2:x
'λx.apply(and[not[and[green,triangle]],size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:green;4:triangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, rectangle), not[blue]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:blue
'λx.apply(size3,iota(filter(filter(filter(filter(x.s, size1), size2), yellow), blue)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2;4:yellow;4:blue
'λx.apply(not[nor[blue,or[size1,apply(size-leq,iota(filter(x.s, apply(same_color,x.o))))]]],x.o)'	0:apply(%s,%s);4:not[%s];4:nor[%s,%s];4:blue;4:or[%s,%s];4:size1;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, green), yellow)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow
'λx.apply(and[circle,size1],iota(filter(filter(x.s, size2), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue
'λx.contains(iota(filter(filter(filter(filter(filter(x.s, apply(same_color,x.o)), apply(same_size,x.o)), rectangle), size2), size3)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:rectangle;4:size2;4:size3;3:%s.s;2:x
'λx.exists(blue, filter(x.s, apply(same_size,x.o)))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.exists(and[and[size3,circle],size2], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:size3;4:circle;4:size2;3:%s.s;2:x
'λx.apply(and[and[size1,apply(same_size,iota(x.s))],yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(filter(filter(x.s, blue), blue), and[circle,size3]), not[blue]), blue))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue;4:and[%s,%s];4:circle;4:size3;4:not[%s];4:blue;4:blue
'λx.apply(green,iota(filter(filter(filter(x.s, not[triangle]), green), and[size3,green])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:green;4:and[%s,%s];4:size3;4:green
'λx.apply(circle,iota(filter(filter(x.s, size3), not[and[not[blue],size2]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:and[%s,%s];4:not[%s];4:blue;4:size2
'λx.exists(and[apply(size-leq,iota(x.s)),triangle], filter(x.s, and[triangle,nor[size2,size2]]))'	0:exists(%s, %s);4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:nor[%s,%s];4:size2;4:size2
'λx.exists(and[rectangle,size3], filter(x.s, blue))'	0:exists(%s, %s);4:and[%s,%s];4:rectangle;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(apply(same_size,x.o),iota(filter(filter(filter(x.s, size3), and[rectangle,not[blue]]), size2)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:rectangle;4:not[%s];4:blue;4:size2
'λx.apply(or[and[triangle,apply(same_size,x.o)],nand[triangle,and[size1,green]]],iota(filter(x.s, implies[size1,circle])))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:nand[%s,%s];4:triangle;4:and[%s,%s];4:size1;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size1;4:circle
'λx.apply(and[or[circle,and[apply(same_color,x.o),circle]],or[triangle,blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;4:or[%s,%s];4:triangle;4:blue;1:%s.o;2:x
'λx.apply(and[yellow,triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:triangle;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(filter(filter(filter(x.s, and[blue,and[rectangle,triangle]]), size3), triangle), apply(size-gt,x.o)), circle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:triangle;4:size3;4:triangle;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:circle
'λx.apply(circle,iota(filter(filter(filter(filter(x.s, yellow), apply(size-gt,iota(x.s))), blue), apply(same_shape,iota(filter(x.s, rectangle))))))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(size2,iota(filter(filter(filter(filter(x.s, yellow), rectangle), iff[and[nor[and[or[size2,size2],blue],and[size3,or[triangle,nor[and[yellow,nor[circle,circle]],green]]]],rectangle],size2]), circle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle;4:iff[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size2;4:size2;4:blue;4:and[%s,%s];4:size3;4:or[%s,%s];4:triangle;4:nor[%s,%s];4:and[%s,%s];4:yellow;4:nor[%s,%s];4:circle;4:circle;4:green;4:rectangle;4:size2;4:circle
'λx.apply(nor[and[green,size1],and[not[or[and[or[green,implies[implies[and[rectangle,apply(same_size,x.o)],and[and[yellow,size2],and[nor[size3,and[apply(same_shape,x.o),and[yellow,green]]],circle]]],and[circle,implies[circle,size2]]]],size2],size2]],blue]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:green;4:size1;4:and[%s,%s];4:not[%s];4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:green;4:implies[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:and[%s,%s];4:yellow;4:size2;4:and[%s,%s];4:nor[%s,%s];4:size3;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:yellow;4:green;4:circle;4:and[%s,%s];4:circle;4:implies[%s,%s];4:circle;4:size2;4:size2;4:size2;4:blue;1:%s.o;2:x
'λx.forall(implies[rectangle,size2],filter(x.s, size2))'	0:forall(%s,%s);4:implies[%s,%s];4:rectangle;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(rectangle,iota(filter(filter(filter(filter(filter(x.s, size1), apply(same_shape,iota(filter(filter(filter(x.s, rectangle), size3), size2)))), circle), blue), green)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3;4:size2;4:circle;4:blue;4:green
'λx.apply(and[nor[blue,circle],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:blue;4:circle;4:triangle;1:%s.o;2:x
'λx.exists(and[circle,size3], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:circle;4:size3;3:%s.s;2:x
'λx.exists(and[size1,blue], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:size1;4:blue;3:%s.s;2:x
'λx.apply(and[and[green,and[nor[size3,size2],rectangle]],or[blue,and[rectangle,implies[or[yellow,not[size2]],size2]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:nor[%s,%s];4:size3;4:size2;4:rectangle;4:or[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:implies[%s,%s];4:or[%s,%s];4:yellow;4:not[%s];4:size2;4:size2;1:%s.o;2:x
'λx.forall(and[size1,iff[apply(size-geq,iota(filter(x.s, implies[green,size1]))),triangle]],filter(x.s, and[size1,or[triangle,not[not[and[apply(size-geq,x.o),apply(size-geq,iota(filter(filter(x.s, size1), rectangle)))]]]]]))'	0:forall(%s,%s);4:and[%s,%s];4:size1;4:iff[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:green;4:size1;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:or[%s,%s];4:triangle;4:not[%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle
'λx.apply(iff[and[size3,and[circle,and[blue,apply(same_shape,x.o)]]],yellow],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:circle;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[apply(same_shape,x.o),green],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green;1:%s.o;2:x
'λx.apply(iff[blue,size3],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:blue;4:size3;1:iota(%s);3:%s.s;2:x
'λx.exists(blue, filter(x.s, apply(same_color,x.o)))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(not[and[implies[and[size1,yellow],rectangle],or[green,green]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:size1;4:yellow;4:rectangle;4:or[%s,%s];4:green;4:green;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, or[and[yellow,not[size2]],yellow]), or[size3,iff[size1,size2]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:yellow;4:not[%s];4:size2;4:yellow;4:or[%s,%s];4:size3;4:iff[%s,%s];4:size1;4:size2
'λx.apply(and[and[triangle,size1],nor[and[apply(size-lt,x.o),size2],size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:size1;4:nor[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:size2;4:size1;1:%s.o;2:x
'λx.apply(iff[triangle,apply(same_size,iota(filter(filter(filter(x.s, green), size3), implies[blue,green])))],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size3;4:implies[%s,%s];4:blue;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[size1,and[triangle,not[and[size1,size2]]]],yellow],iota(filter(filter(filter(x.s, nand[size1,size3]), circle), size2)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:triangle;4:not[%s];4:and[%s,%s];4:size1;4:size2;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size1;4:size3;4:circle;4:size2
'λx.empty(filter(x.s, or[green,and[and[nand[or[yellow,blue],or[not[rectangle],apply(same_shape,iota(x.s))]],circle],or[apply(same_size,iota(x.s)),size3]]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:yellow;4:blue;4:or[%s,%s];4:not[%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size3
'λx.forall(and[size1,size1],filter(x.s, apply(same_shape,x.o)))'	0:forall(%s,%s);4:and[%s,%s];4:size1;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(x.s, blue), iff[green,or[iff[nand[green,size3],size2],or[size3,not[yellow]]]]), and[triangle,or[apply(same_size,iota(filter(filter(x.s, and[yellow,size2]), circle))),size1]]), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:iff[%s,%s];4:green;4:or[%s,%s];4:iff[%s,%s];4:nand[%s,%s];4:green;4:size3;4:size2;4:or[%s,%s];4:size3;4:not[%s];4:yellow;4:and[%s,%s];4:triangle;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size2;4:circle;4:size1;4:size3
'λx.apply(size1,iota(filter(filter(filter(filter(x.s, yellow), circle), yellow), yellow)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle;4:yellow;4:yellow
'λx.apply(nor[nor[blue,size3],triangle],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:nor[%s,%s];4:blue;4:size3;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(filter(x.s, rectangle), triangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle
'λx.apply(and[and[rectangle,size3],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size3;4:yellow;1:%s.o;2:x
'λx.apply(not[rectangle],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_color,iota(x.s)),iota(filter(filter(x.s, not[size2]), rectangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:rectangle
'λx.contains(iota(x.s), filter(filter(filter(x.s, size3), size3), rectangle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3;4:rectangle
'λx.apply(and[apply(same_size,iota(filter(x.s, triangle))),not[triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:not[%s];4:triangle;1:%s.o;2:x
'λx.apply(apply(same_color,x.o),iota(filter(filter(x.s, size3), size1)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size1
'λx.apply(size1,iota(filter(filter(filter(x.s, triangle), or[blue,and[and[rectangle,nor[and[size1,apply(same_color,x.o)],yellow]],not[and[circle,and[or[yellow,rectangle],or[triangle,or[triangle,green]]]]]]]), yellow)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:or[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:nor[%s,%s];4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;4:not[%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:or[%s,%s];4:yellow;4:rectangle;4:or[%s,%s];4:triangle;4:or[%s,%s];4:triangle;4:green;4:yellow
'λx.apply(nand[triangle,rectangle],iota(filter(filter(x.s, apply(same_color,x.o)), rectangle)))'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:rectangle
'λx.apply(iff[size2,green],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:size2;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(x.s, iff[green,not[and[and[yellow,size3],rectangle]]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:green;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:size3;4:rectangle
'λx.apply(iff[triangle,size3],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:iff[%s,%s];4:triangle;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.empty(filter(x.s, and[triangle,nor[apply(size-leq,x.o),size1]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:nor[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size1
'λx.exists(and[iff[and[size3,blue],size1],apply(same_color,x.o)], filter(filter(x.s, circle), yellow))'	0:exists(%s, %s);4:and[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:size3;4:blue;4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow
'λx.apply(and[size2,size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:size2;1:%s.o;2:x
'λx.apply(and[size2,size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:size3;1:%s.o;2:x
'λx.apply(and[size2,size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:size1;1:%s.o;2:x
'λx.apply(size3,iota(filter(x.s, and[apply(same_shape,iota(x.s)),not[not[triangle]]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:not[%s];4:not[%s];4:triangle
'λx.exists(and[implies[blue,size1],size2], filter(filter(filter(filter(filter(x.s, blue), and[circle,rectangle]), and[rectangle,rectangle]), rectangle), green))'	0:exists(%s, %s);4:and[%s,%s];4:implies[%s,%s];4:blue;4:size1;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:circle;4:rectangle;4:and[%s,%s];4:rectangle;4:rectangle;4:rectangle;4:green
'λx.apply(not[and[green,not[nand[triangle,size1]]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:green;4:not[%s];4:nand[%s,%s];4:triangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size1,size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:size2;1:%s.o;2:x
'λx.apply(and[size1,size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:size1;1:%s.o;2:x
'λx.apply(and[size1,size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:size3;1:%s.o;2:x
'λx.apply(and[size3,size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:size1;1:%s.o;2:x
'λx.apply(and[size3,size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:size2;1:%s.o;2:x
'λx.apply(implies[yellow,green],iota(filter(filter(x.s, and[yellow,size1]), green)))'	0:apply(%s,%s);4:implies[%s,%s];4:yellow;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size1;4:green
'λx.apply(circle,iota(filter(filter(x.s, and[blue,and[rectangle,triangle]]), size3)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:triangle;4:size3
'λx.apply(or[or[circle,size2],not[blue]],iota(filter(filter(x.s, and[blue,not[or[green,size3]]]), not[yellow])))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:circle;4:size2;4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:not[%s];4:or[%s,%s];4:green;4:size3;4:not[%s];4:yellow
'λx.apply(size3,iota(filter(filter(filter(filter(x.s, blue), size3), or[size1,and[size2,triangle]]), size1)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3;4:or[%s,%s];4:size1;4:and[%s,%s];4:size2;4:triangle;4:size1
'λx.contains(x.o, filter(x.s, circle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(not[and[green,rectangle]],iota(filter(filter(filter(x.s, triangle), green), size2)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:green;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green;4:size2
'λx.apply(and[and[size3,yellow],apply(size-leq,x.o)],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size3;4:yellow;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[rectangle,implies[green,and[size3,and[circle,size3]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:implies[%s,%s];4:green;4:and[%s,%s];4:size3;4:and[%s,%s];4:circle;4:size3;1:%s.o;2:x
'λx.apply(apply(same_color,x.o),iota(filter(x.s, apply(same_color,iota(filter(x.s, triangle))))))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(circle,iota(filter(filter(filter(filter(x.s, rectangle), apply(size-geq,x.o)), not[and[nor[size3,triangle],not[iff[and[apply(same_size,iota(x.s)),not[circle]],blue]]]]), yellow)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:nor[%s,%s];4:size3;4:triangle;4:not[%s];4:iff[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:not[%s];4:circle;4:blue;4:yellow
'λx.apply(nor[and[triangle,yellow],apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:triangle;4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(or[size2,not[not[apply(same_shape,iota(x.s))]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:not[%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(nor[size1,rectangle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size1;4:rectangle;1:%s.o;2:x
'λx.apply(or[circle,apply(same_size,iota(filter(x.s, yellow)))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;1:%s.o;2:x
'λx.forall(and[green,yellow],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:green;4:yellow;3:%s.s;2:x
'λx.apply(size3,iota(filter(x.s, and[apply(same_shape,iota(filter(x.s, yellow))),or[green,size3]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:green;4:size3
'λx.forall(not[rectangle],filter(filter(filter(x.s, size1), circle), and[size1,triangle]))'	0:forall(%s,%s);4:not[%s];4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle;4:and[%s,%s];4:size1;4:triangle
'λx.apply(apply(same_color,x.o),iota(filter(x.s, nand[and[size2,yellow],size3])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:and[%s,%s];4:size2;4:yellow;4:size3
'λx.contains(x.o, filter(filter(filter(filter(filter(filter(filter(x.s, and[and[apply(size-geq,x.o),circle],not[rectangle]]), and[blue,and[and[or[size1,blue],iff[size1,size3]],size1]]), triangle), size2), or[implies[not[size1],triangle],apply(same_color,iota(x.s))]), or[triangle,rectangle]), triangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:circle;4:not[%s];4:rectangle;4:and[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size1;4:blue;4:iff[%s,%s];4:size1;4:size3;4:size1;4:triangle;4:size2;4:or[%s,%s];4:implies[%s,%s];4:not[%s];4:size1;4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:rectangle;4:triangle
'λx.exists(nand[not[triangle],and[blue,triangle]], x.s)'	0:exists(%s, %s);4:nand[%s,%s];4:not[%s];4:triangle;4:and[%s,%s];4:blue;4:triangle;3:%s.s;2:x
'λx.forall(and[implies[circle,not[apply(size-gt,x.o)]],not[size2]],filter(x.s, and[circle,nor[green,or[and[size2,and[triangle,not[and[circle,size1]]]],and[green,blue]]]]))'	0:forall(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:circle;4:not[%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:not[%s];4:size2;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:nor[%s,%s];4:green;4:or[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:triangle;4:not[%s];4:and[%s,%s];4:circle;4:size1;4:and[%s,%s];4:green;4:blue
'λx.apply(green,iota(filter(filter(x.s, rectangle), size3)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3
'λx.apply(green,iota(filter(filter(x.s, rectangle), green)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green
'λx.apply(blue,iota(filter(x.s, nand[nor[blue,not[size3]],size1])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:nor[%s,%s];4:blue;4:not[%s];4:size3;4:size1
'λx.apply(and[or[or[rectangle,nor[green,apply(same_shape,iota(x.s))]],or[yellow,size3]],nor[green,size3]],iota(filter(filter(x.s, green), rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:rectangle;4:nor[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:size3;4:nor[%s,%s];4:green;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle
'λx.apply(or[not[not[size2]],green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:not[%s];4:size2;4:green;1:%s.o;2:x
'λx.exists(and[size3,and[triangle,circle]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:size3;4:and[%s,%s];4:triangle;4:circle;3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(x.s, blue), size1)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1
'λx.apply(size2,iota(filter(filter(x.s, blue), green)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green
'λx.apply(and[triangle,and[triangle,triangle]],iota(filter(filter(x.s, green), size3)))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:triangle;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size3
'λx.apply(not[not[and[triangle,yellow]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:and[%s,%s];4:triangle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(or[yellow,yellow],iota(filter(filter(x.s, rectangle), size3)))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3
'λx.apply(size3,iota(filter(filter(filter(x.s, yellow), not[circle]), size2)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:circle;4:size2
'λx.apply(yellow,iota(filter(filter(filter(filter(filter(x.s, rectangle), yellow), and[rectangle,green]), implies[yellow,or[circle,green]]), and[size2,triangle])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:yellow;4:and[%s,%s];4:rectangle;4:green;4:implies[%s,%s];4:yellow;4:or[%s,%s];4:circle;4:green;4:and[%s,%s];4:size2;4:triangle
'λx.apply(apply(size-lt,iota(filter(x.s, not[nand[circle,and[size2,and[size3,size2]]]]))),iota(filter(x.s, size2)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:nand[%s,%s];4:circle;4:and[%s,%s];4:size2;4:and[%s,%s];4:size3;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(or[blue,rectangle],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(green,iota(filter(x.s, or[circle,implies[size3,nor[apply(size-leq,iota(x.s)),or[size3,size2]]]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:implies[%s,%s];4:size3;4:nor[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:size2
'λx.apply(implies[size1,not[green]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size1;4:not[%s];4:green;1:%s.o;2:x
'λx.forall(circle,filter(filter(x.s, triangle), apply(size-gt,x.o)))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.apply(or[or[or[blue,size3],blue],yellow],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:blue;4:size3;4:blue;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.exists(size3, filter(x.s, rectangle))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.exists(size2, filter(x.s, rectangle))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.exists(blue, filter(filter(x.s, and[size1,circle]), size1))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:circle;4:size1
'λx.contains(iota(filter(x.s, or[blue,and[and[or[size1,not[apply(same_color,iota(x.s))]],circle],triangle]])), filter(x.s, triangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size1;4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:circle;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.contains(x.o, filter(filter(filter(filter(x.s, and[apply(same_size,x.o),size2]), triangle), not[size2]), or[rectangle,size3]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2;4:triangle;4:not[%s];4:size2;4:or[%s,%s];4:rectangle;4:size3
'λx.apply(and[or[or[size2,apply(size-leq,x.o)],green],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:size2;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:green;4:size2;1:%s.o;2:x
'λx.empty(filter(x.s, and[apply(same_color,x.o),green]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green
'λx.apply(nor[size2,rectangle],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:nor[%s,%s];4:size2;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(nand[apply(same_shape,iota(filter(filter(filter(filter(x.s, blue), yellow), nand[size1,apply(same_size,x.o)]), size3))),or[not[not[and[and[rectangle,size2],size1]]],rectangle]], filter(x.s, not[or[blue,iff[size3,green]]]))'	0:exists(%s, %s);4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow;4:nand[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;4:or[%s,%s];4:not[%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size2;4:size1;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:blue;4:iff[%s,%s];4:size3;4:green
'λx.contains(x.o, filter(x.s, and[or[not[or[and[and[and[apply(same_color,iota(filter(filter(x.s, yellow), not[size1]))),green],and[size2,and[rectangle,rectangle]]],blue],yellow]],apply(same_size,x.o)],circle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:size1;4:green;4:and[%s,%s];4:size2;4:and[%s,%s];4:rectangle;4:rectangle;4:blue;4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle
'λx.apply(blue,iota(filter(filter(filter(filter(filter(filter(x.s, size1), size3), size3), size2), circle), green)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size3;4:size3;4:size2;4:circle;4:green
'λx.apply(and[circle,size1],iota(filter(x.s, apply(size-lt,iota(filter(filter(filter(x.s, size3), size3), circle))))))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3;4:circle
'λx.apply(and[nor[yellow,or[or[blue,size2],not[iff[implies[green,and[and[apply(same_color,x.o),size1],size2]],or[rectangle,and[size1,size3]]]]]],apply(same_shape,iota(filter(x.s, green)))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:yellow;4:or[%s,%s];4:or[%s,%s];4:blue;4:size2;4:not[%s];4:iff[%s,%s];4:implies[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1;4:size2;4:or[%s,%s];4:rectangle;4:and[%s,%s];4:size1;4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(filter(x.s, size3), size1), not[rectangle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size1;4:not[%s];4:rectangle
'λx.apply(blue,iota(filter(filter(x.s, apply(same_color,x.o)), or[rectangle,size1])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:or[%s,%s];4:rectangle;4:size1
'λx.apply(size3,iota(filter(filter(filter(filter(x.s, blue), circle), implies[circle,yellow]), apply(same_shape,x.o))))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle;4:implies[%s,%s];4:circle;4:yellow;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.forall(or[apply(same_shape,x.o),blue],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue;3:%s.s;2:x
'λx.apply(and[yellow,and[not[yellow],apply(same_shape,iota(x.s))]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:and[%s,%s];4:not[%s];4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.exists(or[size1,iff[and[triangle,size1],size3]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:size1;4:iff[%s,%s];4:and[%s,%s];4:triangle;4:size1;4:size3;3:%s.s;2:x
'λx.forall(nand[and[size1,apply(same_shape,iota(x.s))],nor[blue,and[size1,circle]]],filter(filter(filter(filter(x.s, nand[and[and[size2,and[triangle,green]],size3],and[rectangle,or[yellow,yellow]]]), size2), size3), rectangle))'	0:forall(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:nor[%s,%s];4:blue;4:and[%s,%s];4:size1;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:triangle;4:green;4:size3;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:yellow;4:yellow;4:size2;4:size3;4:rectangle
'λx.apply(and[size1,apply(same_shape,iota(filter(x.s, size3)))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;1:%s.o;2:x
'λx.exists(green, filter(filter(filter(x.s, implies[blue,triangle]), circle), iff[not[and[circle,yellow]],size3]))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:blue;4:triangle;4:circle;4:iff[%s,%s];4:not[%s];4:and[%s,%s];4:circle;4:yellow;4:size3
'λx.contains(iota(x.s), filter(x.s, or[size3,not[and[green,rectangle]]]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:not[%s];4:and[%s,%s];4:green;4:rectangle
'λx.apply(not[and[apply(same_size,x.o),green]],iota(filter(filter(filter(filter(filter(filter(x.s, and[rectangle,size3]), apply(same_size,iota(filter(x.s, size2)))), and[not[size1],not[not[size2]]]), and[size2,or[not[apply(size-leq,iota(x.s))],circle]]), size3), size3)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:not[%s];4:size1;4:not[%s];4:not[%s];4:size2;4:and[%s,%s];4:size2;4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:circle;4:size3;4:size3
'λx.apply(triangle,iota(filter(x.s, apply(same_color,x.o))))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(x.s, and[or[blue,size1],yellow]), green)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:blue;4:size1;4:yellow;4:green
'λx.empty(filter(x.s, not[green]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green
'λx.empty(filter(x.s, not[size3]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3
'λx.empty(filter(x.s, not[size2]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2
'λx.contains(x.o, filter(filter(filter(x.s, green), yellow), blue))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow;4:blue
'λx.apply(yellow,iota(filter(filter(x.s, size2), apply(size-lt,iota(x.s)))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x
'λx.apply(and[iff[or[yellow,or[or[size1,rectangle],blue]],size3],and[apply(same_size,iota(filter(x.s, not[triangle]))),green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:or[%s,%s];4:yellow;4:or[%s,%s];4:or[%s,%s];4:size1;4:rectangle;4:blue;4:size3;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:green;1:%s.o;2:x
'λx.forall(apply(size-gt,iota(filter(x.s, rectangle))),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;3:%s.s;2:x
'λx.apply(and[or[yellow,apply(same_shape,x.o)],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:yellow;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle;1:%s.o;2:x
'λx.forall(circle,filter(filter(filter(x.s, green), yellow), size2))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow;4:size2
'λx.apply(or[green,apply(same_size,x.o)],iota(filter(x.s, or[circle,rectangle])))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:rectangle
'λx.apply(or[or[rectangle,circle],size2],iota(filter(filter(filter(x.s, rectangle), size3), size1)))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:rectangle;4:circle;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3;4:size1
'λx.apply(or[yellow,and[yellow,blue]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:and[%s,%s];4:yellow;4:blue;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(filter(x.s, size2), rectangle), or[apply(size-gt,x.o),green])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle;4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:green
'λx.apply(circle,iota(filter(filter(filter(filter(filter(x.s, nor[green,iff[and[yellow,yellow],triangle]]), rectangle), size1), size1), nand[circle,not[blue]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:green;4:iff[%s,%s];4:and[%s,%s];4:yellow;4:yellow;4:triangle;4:rectangle;4:size1;4:size1;4:nand[%s,%s];4:circle;4:not[%s];4:blue
'λx.forall(and[size3,green],filter(filter(x.s, or[and[not[green],rectangle],nor[apply(same_shape,iota(x.s)),circle]]), triangle))'	0:forall(%s,%s);4:and[%s,%s];4:size3;4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:green;4:rectangle;4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle;4:triangle
'λx.apply(and[green,apply(same_shape,x.o)],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[nor[circle,circle],size1],iota(filter(filter(filter(x.s, or[yellow,size2]), or[size3,size1]), circle)))'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:circle;4:circle;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:size2;4:or[%s,%s];4:size3;4:size1;4:circle
'λx.apply(nand[size2,and[size3,size2]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size2;4:and[%s,%s];4:size3;4:size2;1:%s.o;2:x
'λx.exists(circle, filter(filter(filter(x.s, blue), and[iff[size1,or[green,blue]],triangle]), size2))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:iff[%s,%s];4:size1;4:or[%s,%s];4:green;4:blue;4:triangle;4:size2
'λx.apply(iff[blue,apply(same_color,x.o)],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.forall(rectangle,x.s)'	0:forall(%s,%s);4:rectangle;3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, or[and[size2,and[and[size3,blue],nor[blue,size3]]],size1]), circle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:size3;4:blue;4:nor[%s,%s];4:blue;4:size3;4:size1;4:circle
'λx.apply(blue,iota(filter(x.s, apply(same_shape,iota(filter(x.s, and[green,and[or[not[size2],green],apply(same_color,iota(x.s))]]))))))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:size2;4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[not[and[and[not[rectangle],not[and[blue,yellow]]],iff[and[circle,green],or[not[size1],yellow]]]],green],iota(filter(x.s, not[and[not[circle],rectangle]])))'	0:apply(%s,%s);4:implies[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:rectangle;4:not[%s];4:and[%s,%s];4:blue;4:yellow;4:iff[%s,%s];4:and[%s,%s];4:circle;4:green;4:or[%s,%s];4:not[%s];4:size1;4:yellow;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:not[%s];4:circle;4:rectangle
'λx.empty(filter(x.s, nand[green,circle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:green;4:circle
'λx.apply(iff[apply(same_size,x.o),or[size1,rectangle]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:size1;4:rectangle;1:%s.o;2:x
'λx.apply(and[size3,circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:circle;1:iota(%s);3:%s.s;2:x
'λx.exists(and[not[blue],and[size2,implies[or[size3,circle],size1]]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:blue;4:and[%s,%s];4:size2;4:implies[%s,%s];4:or[%s,%s];4:size3;4:circle;4:size1;3:%s.s;2:x
'λx.forall(size2,filter(filter(filter(x.s, or[triangle,or[apply(size-leq,iota(filter(filter(x.s, size1), rectangle))),blue]]), yellow), and[size1,rectangle]))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle;4:blue;4:yellow;4:and[%s,%s];4:size1;4:rectangle
'λx.apply(and[size1,circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[circle,rectangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_color,iota(filter(filter(filter(filter(x.s, size3), iff[triangle,rectangle]), size2), not[size3]))),iota(filter(x.s, size1)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:iff[%s,%s];4:triangle;4:rectangle;4:size2;4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(and[apply(same_color,x.o),triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[or[apply(same_shape,x.o),rectangle],apply(same_color,x.o)],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(filter(filter(filter(x.s, iff[triangle,not[triangle]]), size1), yellow), circle), blue)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:triangle;4:not[%s];4:triangle;4:size1;4:yellow;4:circle;4:blue
'λx.apply(blue,iota(filter(filter(x.s, not[iff[rectangle,and[size3,size3]]]), or[blue,apply(same_shape,iota(x.s))])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:iff[%s,%s];4:rectangle;4:and[%s,%s];4:size3;4:size3;4:or[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(not[size3],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[green,and[triangle,or[yellow,apply(same_size,x.o)]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:triangle;4:or[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.empty(filter(filter(x.s, and[green,size2]), apply(same_shape,x.o)))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(implies[and[triangle,size2],size1],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:triangle;4:size2;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(and[circle,iff[yellow,green]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:iff[%s,%s];4:yellow;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[not[rectangle],or[size2,size3]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:rectangle;4:or[%s,%s];4:size2;4:size3;1:iota(%s);3:%s.s;2:x
'λx.forall(rectangle,filter(filter(x.s, apply(same_size,iota(filter(x.s, size3)))), size2))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2
'λx.contains(x.o, filter(x.s, and[and[apply(same_color,iota(filter(filter(x.s, and[green,size3]), and[green,nand[iff[apply(same_color,iota(filter(filter(filter(filter(x.s, size1), not[implies[and[green,rectangle],blue]]), blue), iff[circle,size1]))),size2],circle]]))),blue],and[size3,and[rectangle,green]]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:size3;4:and[%s,%s];4:green;4:nand[%s,%s];4:iff[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:not[%s];4:implies[%s,%s];4:and[%s,%s];4:green;4:rectangle;4:blue;4:blue;4:iff[%s,%s];4:circle;4:size1;4:size2;4:circle;4:blue;4:and[%s,%s];4:size3;4:and[%s,%s];4:rectangle;4:green
'λx.apply(iff[not[yellow],or[size2,rectangle]],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:not[%s];4:yellow;4:or[%s,%s];4:size2;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, or[rectangle,size2]), not[green]), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:size2;4:not[%s];4:green;4:rectangle
'λx.exists(nand[blue,circle], x.s)'	0:exists(%s, %s);4:nand[%s,%s];4:blue;4:circle;3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(filter(filter(filter(x.s, rectangle), triangle), implies[rectangle,apply(same_shape,x.o)]), circle), and[and[size1,yellow],triangle]), or[circle,not[blue]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle;4:implies[%s,%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;4:and[%s,%s];4:and[%s,%s];4:size1;4:yellow;4:triangle;4:or[%s,%s];4:circle;4:not[%s];4:blue
'λx.apply(and[apply(same_size,iota(x.s)),and[not[yellow],size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:yellow;4:size1;1:%s.o;2:x
'λx.forall(and[blue,implies[or[size2,green],circle]],filter(filter(x.s, apply(same_size,iota(filter(filter(x.s, yellow), not[triangle])))), green))'	0:forall(%s,%s);4:and[%s,%s];4:blue;4:implies[%s,%s];4:or[%s,%s];4:size2;4:green;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:triangle;4:green
'λx.contains(iota(filter(x.s, or[and[yellow,or[iff[green,iff[green,yellow]],green]],size1])), filter(filter(filter(x.s, green), size1), apply(same_shape,x.o)))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:yellow;4:or[%s,%s];4:iff[%s,%s];4:green;4:iff[%s,%s];4:green;4:yellow;4:green;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(filter(filter(filter(x.s, blue), not[yellow]), not[and[apply(same_color,x.o),blue]]), and[size2,apply(same_size,iota(filter(filter(x.s, circle), size1)))]), size2)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:yellow;4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue;4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1;4:size2
'λx.apply(and[triangle,size2],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(and[blue,nand[rectangle,triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:nand[%s,%s];4:rectangle;4:triangle;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, or[apply(same_color,x.o),and[and[green,not[apply(same_shape,iota(x.s))]],green]]), implies[or[not[blue],yellow],triangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:and[%s,%s];4:green;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:green;4:implies[%s,%s];4:or[%s,%s];4:not[%s];4:blue;4:yellow;4:triangle
'λx.apply(nand[and[not[yellow],not[and[green,or[size1,rectangle]]]],apply(size-lt,x.o)],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:not[%s];4:yellow;4:not[%s];4:and[%s,%s];4:green;4:or[%s,%s];4:size1;4:rectangle;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, implies[blue,blue]), green)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:blue;4:blue;4:green
'λx.apply(iff[apply(size-geq,iota(x.s)),blue],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.contains(x.o, filter(filter(x.s, circle), and[circle,circle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:circle;4:circle
'λx.apply(or[not[triangle],not[size3]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:triangle;4:not[%s];4:size3;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(filter(filter(x.s, size3), triangle), size1), triangle), yellow))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle;4:size1;4:triangle;4:yellow
'λx.exists(green, filter(x.s, blue))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(iff[apply(same_color,x.o),and[apply(same_size,iota(filter(filter(filter(filter(x.s, not[and[blue,size1]]), triangle), yellow), not[size2]))),size3]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:blue;4:size1;4:triangle;4:yellow;4:not[%s];4:size2;4:size3;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(x.s, not[and[rectangle,green]]), or[green,and[circle,not[triangle]]]), size3), and[yellow,size1]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:rectangle;4:green;4:or[%s,%s];4:green;4:and[%s,%s];4:circle;4:not[%s];4:triangle;4:size3;4:and[%s,%s];4:yellow;4:size1
'λx.apply(and[circle,triangle],iota(filter(filter(x.s, and[apply(same_color,x.o),and[or[and[apply(same_color,x.o),size2],green],or[nand[apply(same_color,x.o),size3],size1]]]), yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size2;4:green;4:or[%s,%s];4:nand[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3;4:size1;4:yellow
'λx.contains(iota(filter(filter(x.s, triangle), blue)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue;3:%s.s;2:x
'λx.exists(size2, filter(x.s, blue))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.exists(size1, filter(x.s, blue))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[size1,apply(same_shape,iota(filter(x.s, not[nor[size2,yellow]])))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:nor[%s,%s];4:size2;4:yellow;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(x.s, size2), rectangle), apply(same_color,x.o)), not[not[size1]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:not[%s];4:size1
'λx.apply(rectangle,iota(filter(filter(filter(x.s, yellow), or[or[size2,apply(same_shape,iota(filter(x.s, circle)))],size1]), size1)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1;4:size1
'λx.empty(filter(x.s, implies[blue,size1]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:blue;4:size1
'λx.forall(size1,filter(x.s, rectangle))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.forall(size3,filter(x.s, rectangle))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[circle,or[circle,not[blue]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:or[%s,%s];4:circle;4:not[%s];4:blue;1:%s.o;2:x
'λx.forall(apply(size-lt,iota(x.s)),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(iff[green,circle],iota(filter(x.s, or[blue,apply(same_color,iota(filter(x.s, not[and[and[triangle,and[apply(same_color,iota(filter(x.s, size3))),and[size3,size3]]],iff[blue,blue]]])))])))'	0:apply(%s,%s);4:iff[%s,%s];4:green;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:size3;4:size3;4:iff[%s,%s];4:blue;4:blue
'λx.contains(iota(filter(filter(x.s, apply(same_shape,x.o)), circle)), filter(x.s, iff[blue,size1]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:blue;4:size1
'λx.apply(yellow,iota(filter(filter(x.s, green), or[not[apply(same_size,iota(x.s))],rectangle])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:rectangle
'λx.apply(size3,iota(filter(filter(x.s, or[and[not[green],rectangle],nor[apply(size-lt,iota(x.s)),circle]]), triangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:green;4:rectangle;4:nor[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:circle;4:triangle
'λx.apply(size3,iota(filter(filter(x.s, green), implies[circle,or[circle,or[not[not[rectangle]],size1]]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:implies[%s,%s];4:circle;4:or[%s,%s];4:circle;4:or[%s,%s];4:not[%s];4:not[%s];4:rectangle;4:size1
'λx.apply(or[implies[yellow,or[triangle,size2]],and[circle,size1]],iota(filter(x.s, not[blue])))'	0:apply(%s,%s);4:or[%s,%s];4:implies[%s,%s];4:yellow;4:or[%s,%s];4:triangle;4:size2;4:and[%s,%s];4:circle;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.apply(and[and[yellow,blue],size3],iota(filter(x.s, or[not[size3],green])))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:blue;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:size3;4:green
'λx.forall(triangle,filter(filter(filter(filter(filter(filter(filter(filter(x.s, implies[and[green,circle],nand[circle,size1]]), yellow), not[blue]), green), size1), blue), nand[nor[apply(same_shape,iota(x.s)),rectangle],triangle]), green))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:and[%s,%s];4:green;4:circle;4:nand[%s,%s];4:circle;4:size1;4:yellow;4:not[%s];4:blue;4:green;4:size1;4:blue;4:nand[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:rectangle;4:triangle;4:green
'λx.apply(and[green,and[apply(same_color,iota(filter(x.s, not[size2]))),and[size3,size3]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:and[%s,%s];4:size3;4:size3;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, apply(size-leq,iota(x.s))), size2)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:size2;3:%s.s;2:x
'λx.apply(circle,iota(filter(x.s, iff[apply(size-geq,iota(filter(filter(filter(filter(filter(filter(x.s, and[yellow,size1]), green), green), rectangle), rectangle), size2))),or[rectangle,size2]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size1;4:green;4:green;4:rectangle;4:rectangle;4:size2;4:or[%s,%s];4:rectangle;4:size2
'λx.apply(and[blue,triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(x.s), filter(x.s, or[apply(size-lt,x.o),size1]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:size1
'λx.apply(and[size1,and[rectangle,size2]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:and[%s,%s];4:rectangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[not[circle],or[circle,rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:circle;4:or[%s,%s];4:circle;4:rectangle;1:%s.o;2:x
'λx.apply(and[rectangle,or[size2,implies[circle,size3]]],iota(filter(filter(filter(filter(filter(x.s, size3), green), blue), size1), green)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:or[%s,%s];4:size2;4:implies[%s,%s];4:circle;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green;4:blue;4:size1;4:green
'λx.apply(nand[size1,blue],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size1;4:blue;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(x.s, apply(same_shape,x.o)), nor[triangle,and[green,not[blue]]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:nor[%s,%s];4:triangle;4:and[%s,%s];4:green;4:not[%s];4:blue
'λx.apply(or[rectangle,or[triangle,not[nor[yellow,size1]]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:or[%s,%s];4:triangle;4:not[%s];4:nor[%s,%s];4:yellow;4:size1;1:%s.o;2:x
'λx.apply(apply(same_shape,x.o),iota(filter(x.s, circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[nor[size3,size1],not[and[size3,yellow]]],iota(filter(filter(x.s, yellow), apply(same_size,x.o))))'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:size3;4:size1;4:not[%s];4:and[%s,%s];4:size3;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(and[and[blue,and[and[nand[rectangle,circle],size3],size1]],implies[size2,yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:rectangle;4:circle;4:size3;4:size1;4:implies[%s,%s];4:size2;4:yellow;1:%s.o;2:x
'λx.forall(implies[and[size2,size1],and[yellow,size3]],x.s)'	0:forall(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:size2;4:size1;4:and[%s,%s];4:yellow;4:size3;3:%s.s;2:x
'λx.apply(not[and[not[and[circle,circle]],blue]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:circle;4:circle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(and[triangle,apply(same_size,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, circle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.empty(filter(filter(x.s, circle), not[size3]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:size3
'λx.apply(not[yellow],iota(filter(x.s, nand[not[and[circle,rectangle]],and[green,and[green,not[rectangle]]]])))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:not[%s];4:and[%s,%s];4:circle;4:rectangle;4:and[%s,%s];4:green;4:and[%s,%s];4:green;4:not[%s];4:rectangle
'λx.contains(x.o, filter(filter(filter(x.s, size1), triangle), size3))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle;4:size3
'λx.forall(not[and[size1,size1]],x.s)'	0:forall(%s,%s);4:not[%s];4:and[%s,%s];4:size1;4:size1;3:%s.s;2:x
'λx.apply(and[not[or[size2,circle]],yellow],iota(filter(filter(x.s, blue), size3)))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:or[%s,%s];4:size2;4:circle;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3
'λx.apply(and[apply(size-geq,iota(filter(filter(filter(x.s, size1), and[size3,circle]), and[rectangle,size1]))),implies[and[rectangle,blue],size3]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:size3;4:circle;4:and[%s,%s];4:rectangle;4:size1;4:implies[%s,%s];4:and[%s,%s];4:rectangle;4:blue;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(not[not[apply(same_color,iota(filter(x.s, and[not[apply(same_shape,iota(filter(filter(filter(x.s, yellow), and[rectangle,or[rectangle,triangle]]), yellow)))],apply(size-lt,x.o)])))]],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:rectangle;4:triangle;4:yellow;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(nand[size2,blue],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size2;4:blue;1:%s.o;2:x
'λx.apply(and[yellow,circle],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(apply(same_size,iota(filter(x.s, not[triangle]))),iota(filter(filter(x.s, and[size3,and[green,or[size2,implies[and[blue,yellow],implies[triangle,rectangle]]]]]), or[or[and[and[size1,size1],yellow],blue],size2])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:and[%s,%s];4:green;4:or[%s,%s];4:size2;4:implies[%s,%s];4:and[%s,%s];4:blue;4:yellow;4:implies[%s,%s];4:triangle;4:rectangle;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:size1;4:yellow;4:blue;4:size2
'λx.exists(size3, filter(filter(x.s, size1), rectangle))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle
'λx.apply(not[not[and[triangle,iff[triangle,circle]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:and[%s,%s];4:triangle;4:iff[%s,%s];4:triangle;4:circle;1:%s.o;2:x
'λx.forall(triangle,filter(x.s, not[triangle]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.apply(size3,iota(filter(x.s, and[size3,size3])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:size3
'λx.apply(size2,iota(filter(x.s, and[size3,size1])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:size1
'λx.apply(size1,iota(filter(x.s, and[size1,size2])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size2
'λx.contains(iota(filter(filter(x.s, implies[size1,and[green,circle]]), size1)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size1;4:and[%s,%s];4:green;4:circle;4:size1;3:%s.s;2:x
'λx.apply(apply(same_size,iota(filter(filter(x.s, rectangle), and[yellow,rectangle]))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:yellow;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[size3],iota(filter(filter(filter(filter(filter(x.s, apply(same_color,x.o)), green), or[apply(same_size,x.o),or[rectangle,size3]]), and[nand[size3,size1],implies[yellow,size2]]), green)))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:rectangle;4:size3;4:and[%s,%s];4:nand[%s,%s];4:size3;4:size1;4:implies[%s,%s];4:yellow;4:size2;4:green
'λx.apply(apply(size-leq,iota(filter(x.s, implies[iff[blue,and[rectangle,rectangle]],size3]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:iff[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:rectangle;4:size3;1:%s.o;2:x
'λx.apply(and[blue,green],iota(filter(filter(filter(x.s, and[triangle,nor[and[yellow,rectangle],triangle]]), not[yellow]), size1)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:nor[%s,%s];4:and[%s,%s];4:yellow;4:rectangle;4:triangle;4:not[%s];4:yellow;4:size1
'λx.apply(size3,iota(filter(x.s, apply(same_size,iota(filter(filter(filter(filter(x.s, size1), or[blue,size1]), yellow), and[triangle,green]))))))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:or[%s,%s];4:blue;4:size1;4:yellow;4:and[%s,%s];4:triangle;4:green
'λx.exists(circle, filter(x.s, nor[triangle,and[implies[rectangle,size2],rectangle]]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:triangle;4:and[%s,%s];4:implies[%s,%s];4:rectangle;4:size2;4:rectangle
'λx.apply(green,iota(filter(x.s, and[size1,size2])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size2
'λx.apply(size3,iota(filter(x.s, circle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(size2,iota(filter(x.s, circle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(size1,iota(filter(x.s, circle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.exists(yellow, filter(filter(x.s, not[and[blue,or[triangle,or[apply(same_color,iota(x.s)),green]]]]), green))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:blue;4:or[%s,%s];4:triangle;4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:green;4:green
'λx.contains(x.o, filter(x.s, not[yellow]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow
'λx.apply(implies[apply(size-geq,iota(x.s)),yellow],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:yellow;1:%s.o;2:x
'λx.apply(nand[size1,or[triangle,not[size1]]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size1;4:or[%s,%s];4:triangle;4:not[%s];4:size1;1:%s.o;2:x
'λx.empty(filter(x.s, nand[and[green,size2],size1]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:and[%s,%s];4:green;4:size2;4:size1
'λx.apply(apply(same_shape,iota(filter(x.s, apply(same_size,x.o)))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(or[and[green,green],yellow],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:green;4:green;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_size,x.o),iota(filter(filter(x.s, size3), circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle
'λx.apply(implies[size1,rectangle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size1;4:rectangle;1:%s.o;2:x
'λx.exists(nand[or[not[size2],not[and[size1,apply(same_color,x.o)]]],yellow], x.s)'	0:exists(%s, %s);4:nand[%s,%s];4:or[%s,%s];4:not[%s];4:size2;4:not[%s];4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;3:%s.s;2:x
'λx.exists(yellow, filter(x.s, not[apply(size-leq,iota(filter(filter(filter(x.s, triangle), size3), or[size1,yellow])))]))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3;4:or[%s,%s];4:size1;4:yellow
'λx.contains(iota(filter(filter(x.s, or[and[size3,size3],and[and[blue,nand[and[green,size1],and[size3,not[green]]]],circle]]), not[and[apply(size-leq,x.o),blue]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size3;4:size3;4:and[%s,%s];4:and[%s,%s];4:blue;4:nand[%s,%s];4:and[%s,%s];4:green;4:size1;4:and[%s,%s];4:size3;4:not[%s];4:green;4:circle;4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:blue;3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(x.s, size3), triangle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle
'λx.apply(and[and[apply(same_shape,x.o),circle],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;4:rectangle;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, size2), triangle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:triangle
'λx.empty(filter(x.s, and[rectangle,size1]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:size1
'λx.apply(and[triangle,yellow],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.forall(and[size2,blue],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:size2;4:blue;3:%s.s;2:x
'λx.apply(size2,iota(filter(x.s, and[not[and[and[circle,and[size3,apply(same_color,x.o)]],size1]],green])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size1;4:green
'λx.empty(filter(filter(filter(filter(filter(filter(x.s, size2), rectangle), size3), green), size1), not[yellow]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle;4:size3;4:green;4:size1;4:not[%s];4:yellow
'λx.apply(or[apply(same_size,iota(filter(filter(x.s, not[rectangle]), size3))),yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;4:size3;4:yellow;1:%s.o;2:x
'λx.contains(iota(x.s), filter(x.s, nand[green,rectangle]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:green;4:rectangle
'λx.forall(not[rectangle],x.s)'	0:forall(%s,%s);4:not[%s];4:rectangle;3:%s.s;2:x
'λx.forall(size3,filter(filter(x.s, size1), and[triangle,circle]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:triangle;4:circle
'λx.apply(or[and[rectangle,green],rectangle],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:rectangle;4:green;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.contains(x.o, filter(x.s, and[apply(same_color,x.o),apply(same_size,x.o)]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, apply(size-lt,iota(x.s))), triangle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:triangle;3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(x.s, not[size2]), size2)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:size2
'λx.empty(filter(x.s, not[apply(same_shape,iota(x.s))]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(filter(filter(filter(x.s, green), and[triangle,size3]), rectangle), yellow), not[circle])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:triangle;4:size3;4:rectangle;4:yellow;4:not[%s];4:circle
'λx.exists(iff[size3,apply(same_color,iota(filter(filter(x.s, size2), size3)))], filter(x.s, size1))'	0:exists(%s, %s);4:iff[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(triangle,iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(and[yellow,rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, triangle), and[or[rectangle,circle],yellow]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:circle;4:yellow
'λx.apply(nor[blue,apply(same_size,x.o)],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(x.s, iff[and[circle,yellow],circle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:and[%s,%s];4:circle;4:yellow;4:circle
'λx.contains(x.o, filter(x.s, and[not[not[blue]],nor[rectangle,iff[yellow,nand[size2,yellow]]]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:not[%s];4:blue;4:nor[%s,%s];4:rectangle;4:iff[%s,%s];4:yellow;4:nand[%s,%s];4:size2;4:yellow
'λx.contains(iota(filter(filter(x.s, and[not[size1],size3]), size1)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:size1;4:size3;4:size1;3:%s.s;2:x
'λx.contains(iota(filter(x.s, not[rectangle])), filter(filter(filter(filter(filter(filter(x.s, size1), blue), yellow), triangle), yellow), or[or[yellow,circle],rectangle]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue;4:yellow;4:triangle;4:yellow;4:or[%s,%s];4:or[%s,%s];4:yellow;4:circle;4:rectangle
'λx.exists(size1, filter(x.s, and[circle,apply(same_color,x.o)]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(or[blue,and[and[apply(same_color,x.o),green],size3]],iota(filter(x.s, or[blue,green])))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:green
'λx.contains(x.o, filter(x.s, or[and[circle,and[green,apply(same_color,iota(filter(filter(x.s, triangle), triangle)))]],circle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:triangle;4:circle
'λx.exists(blue, filter(x.s, or[yellow,and[green,size2]]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:and[%s,%s];4:green;4:size2
'λx.apply(blue,iota(filter(filter(filter(x.s, not[size1]), apply(size-leq,x.o)), size3)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size3
'λx.apply(size1,iota(filter(x.s, and[size2,green])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:green
'λx.empty(filter(filter(x.s, not[or[apply(size-lt,iota(x.s)),rectangle]]), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:rectangle;4:size1
'λx.forall(and[size1,circle],filter(filter(x.s, blue), circle))'	0:forall(%s,%s);4:and[%s,%s];4:size1;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle
'λx.apply(or[triangle,circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:circle;1:%s.o;2:x
'λx.apply(or[size2,apply(size-geq,x.o)],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(circle,iota(filter(filter(filter(x.s, size2), circle), or[and[size3,size1],or[rectangle,and[triangle,green]]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle;4:or[%s,%s];4:and[%s,%s];4:size3;4:size1;4:or[%s,%s];4:rectangle;4:and[%s,%s];4:triangle;4:green
'λx.forall(and[not[nor[rectangle,or[rectangle,apply(size-leq,iota(x.s))]]],yellow],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:not[%s];4:nor[%s,%s];4:rectangle;4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:yellow;3:%s.s;2:x
'λx.exists(green, filter(filter(x.s, apply(same_shape,x.o)), or[not[yellow],or[apply(same_shape,iota(filter(filter(filter(x.s, apply(same_color,x.o)), and[nor[rectangle,and[rectangle,apply(size-gt,iota(filter(x.s, size1)))]],green]), size1))),size2]]))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:not[%s];4:yellow;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:nor[%s,%s];4:rectangle;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green;4:size1;4:size2
'λx.apply(blue,iota(filter(filter(x.s, and[circle,yellow]), circle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:yellow;4:circle
'λx.apply(nand[size2,size2],iota(filter(filter(x.s, green), nor[blue,or[blue,triangle]])))'	0:apply(%s,%s);4:nand[%s,%s];4:size2;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:nor[%s,%s];4:blue;4:or[%s,%s];4:blue;4:triangle
'λx.exists(or[size3,not[and[yellow,apply(size-leq,x.o)]]], filter(filter(x.s, yellow), and[size3,and[and[and[nor[rectangle,yellow],and[and[blue,and[blue,and[size3,or[rectangle,size1]]]],apply(same_color,iota(filter(x.s, or[yellow,and[triangle,rectangle]])))]],and[triangle,triangle]],apply(same_color,x.o)]]))'	0:exists(%s, %s);4:or[%s,%s];4:size3;4:not[%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:rectangle;4:yellow;4:and[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:blue;4:and[%s,%s];4:size3;4:or[%s,%s];4:rectangle;4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:and[%s,%s];4:triangle;4:rectangle;4:and[%s,%s];4:triangle;4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(apply(size-lt,iota(x.s)),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(x.s, green), circle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:circle
'λx.exists(and[and[apply(same_color,iota(x.s)),green],yellow], filter(x.s, size3))'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:green;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.contains(iota(filter(filter(x.s, size1), size1)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1;3:%s.s;2:x
'λx.exists(and[size1,green], filter(filter(x.s, circle), size1))'	0:exists(%s, %s);4:and[%s,%s];4:size1;4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1
'λx.apply(and[not[apply(same_size,x.o)],size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(not[and[apply(size-leq,iota(filter(filter(filter(filter(x.s, and[not[and[or[and[circle,rectangle],yellow],green]],not[and[yellow,circle]]]), size3), or[not[yellow],yellow]), size3))),size1]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:circle;4:rectangle;4:yellow;4:green;4:not[%s];4:and[%s,%s];4:yellow;4:circle;4:size3;4:or[%s,%s];4:not[%s];4:yellow;4:yellow;4:size3;4:size1;1:%s.o;2:x
'λx.exists(triangle, filter(x.s, triangle))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.forall(triangle,filter(x.s, size3))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.forall(triangle,filter(x.s, size2))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.forall(triangle,filter(x.s, green))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(apply(same_color,iota(filter(filter(filter(x.s, size1), size2), yellow))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(green,iota(filter(x.s, and[and[apply(same_shape,iota(filter(x.s, green))),size3],blue])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size3;4:blue
'λx.apply(or[size1,or[rectangle,or[nor[circle,green],apply(same_shape,iota(x.s))]]],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:or[%s,%s];4:rectangle;4:or[%s,%s];4:nor[%s,%s];4:circle;4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.contains(iota(filter(x.s, triangle)), filter(filter(filter(x.s, triangle), size3), size1))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3;4:size1
'λx.exists(not[iff[size3,and[green,implies[not[nand[or[implies[triangle,size1],size2],not[size3]]],triangle]]]], filter(x.s, iff[and[triangle,size1],and[size3,or[size3,yellow]]]))'	0:exists(%s, %s);4:not[%s];4:iff[%s,%s];4:size3;4:and[%s,%s];4:green;4:implies[%s,%s];4:not[%s];4:nand[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:triangle;4:size1;4:size2;4:not[%s];4:size3;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:and[%s,%s];4:triangle;4:size1;4:and[%s,%s];4:size3;4:or[%s,%s];4:size3;4:yellow
'λx.apply(and[green,and[rectangle,not[size2]]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:rectangle;4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[apply(size-lt,x.o),yellow],iota(filter(filter(x.s, circle), circle)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:circle
'λx.apply(circle,iota(filter(x.s, and[size3,green])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:green
'λx.apply(and[and[implies[rectangle,size1],not[size1]],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:rectangle;4:size1;4:not[%s];4:size1;4:rectangle;1:%s.o;2:x
'λx.forall(or[triangle,not[green]],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:triangle;4:not[%s];4:green;3:%s.s;2:x
'λx.exists(not[or[size1,nand[size2,size2]]], x.s)'	0:exists(%s, %s);4:not[%s];4:or[%s,%s];4:size1;4:nand[%s,%s];4:size2;4:size2;3:%s.s;2:x
'λx.apply(and[not[and[rectangle,size3]],or[circle,nor[circle,size2]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:rectangle;4:size3;4:or[%s,%s];4:circle;4:nor[%s,%s];4:circle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(not[and[green,and[and[size3,circle],apply(size-geq,iota(filter(filter(x.s, not[triangle]), circle)))]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:size3;4:circle;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:circle;1:%s.o;2:x
'λx.apply(and[apply(size-gt,x.o),circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:circle;1:%s.o;2:x
'λx.apply(and[green,not[and[blue,blue]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:not[%s];4:and[%s,%s];4:blue;4:blue;1:%s.o;2:x
'λx.apply(triangle,iota(filter(x.s, or[rectangle,or[yellow,green]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:or[%s,%s];4:yellow;4:green
'λx.forall(blue,filter(x.s, triangle))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(or[blue,not[and[and[apply(same_shape,x.o),size1],rectangle]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[blue,or[blue,not[triangle]]],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:blue;4:or[%s,%s];4:blue;4:not[%s];4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[and[size1,yellow]],iota(filter(filter(x.s, size1), green)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size1;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green
'λx.apply(and[blue,circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:circle;1:iota(%s);3:%s.s;2:x
'λx.exists(not[nand[iff[not[yellow],and[size1,size1]],size1]], x.s)'	0:exists(%s, %s);4:not[%s];4:nand[%s,%s];4:iff[%s,%s];4:not[%s];4:yellow;4:and[%s,%s];4:size1;4:size1;4:size1;3:%s.s;2:x
'λx.exists(size1, filter(x.s, and[blue,and[size3,or[or[and[green,circle],circle],size1]]]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:and[%s,%s];4:size3;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:green;4:circle;4:circle;4:size1
'λx.forall(and[size2,circle],filter(filter(filter(filter(filter(filter(x.s, blue), or[size3,or[size3,rectangle]]), and[and[and[circle,size2],apply(same_color,x.o)],triangle]), and[and[not[blue],rectangle],or[yellow,apply(size-gt,x.o)]]), size2), and[or[green,triangle],apply(same_size,x.o)]))'	0:forall(%s,%s);4:and[%s,%s];4:size2;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:size3;4:or[%s,%s];4:size3;4:rectangle;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:blue;4:rectangle;4:or[%s,%s];4:yellow;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:size2;4:and[%s,%s];4:or[%s,%s];4:green;4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(filter(x.s, rectangle), and[blue,yellow]), not[size3])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:blue;4:yellow;4:not[%s];4:size3
'λx.apply(and[not[apply(same_size,iota(filter(x.s, apply(same_size,x.o))))],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle;1:%s.o;2:x
'λx.apply(apply(same_size,iota(filter(x.s, and[size1,size3]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size3;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, iff[implies[size2,apply(same_shape,x.o)],nor[nand[circle,or[and[nand[rectangle,rectangle],and[and[and[green,nor[apply(size-lt,x.o),and[circle,circle]]],green],not[size3]]],size1]],blue]]), yellow))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:implies[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:nor[%s,%s];4:nand[%s,%s];4:circle;4:or[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:rectangle;4:rectangle;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:nor[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:and[%s,%s];4:circle;4:circle;4:green;4:not[%s];4:size3;4:size1;4:blue;4:yellow
'λx.apply(size3,iota(filter(filter(x.s, apply(same_shape,x.o)), or[and[not[triangle],yellow],size2])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:triangle;4:yellow;4:size2
'λx.apply(apply(size-leq,iota(filter(x.s, green))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(or[and[blue,not[and[and[green,circle],size2]]],apply(size-gt,x.o)],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:blue;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:green;4:circle;4:size2;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:%s.o;2:x
'λx.exists(nor[rectangle,size1], filter(x.s, size1))'	0:exists(%s, %s);4:nor[%s,%s];4:rectangle;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(green,iota(filter(x.s, nor[rectangle,blue])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:rectangle;4:blue
'λx.apply(and[rectangle,triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:triangle;1:%s.o;2:x
'λx.apply(or[or[size1,not[size3]],not[and[yellow,apply(size-leq,iota(x.s))]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:size1;4:not[%s];4:size3;4:not[%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[yellow,size3],iota(filter(filter(x.s, triangle), triangle)))'	0:apply(%s,%s);4:nand[%s,%s];4:yellow;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:triangle
'λx.apply(and[apply(size-lt,x.o),blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:blue;1:%s.o;2:x
'λx.exists(and[green,size1], filter(x.s, yellow))'	0:exists(%s, %s);4:and[%s,%s];4:green;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(or[size3,and[rectangle,rectangle]],iota(filter(filter(x.s, yellow), circle)))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:and[%s,%s];4:rectangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle
'λx.apply(apply(same_color,iota(filter(filter(filter(filter(x.s, size2), rectangle), apply(same_shape,iota(filter(x.s, blue)))), green))),iota(filter(filter(x.s, and[iff[rectangle,blue],not[and[not[yellow],size1]]]), apply(same_size,iota(x.s)))))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:iff[%s,%s];4:rectangle;4:blue;4:not[%s];4:and[%s,%s];4:not[%s];4:yellow;4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.exists(and[not[and[and[size3,circle],triangle]],circle], filter(x.s, rectangle))'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:circle;4:triangle;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(apply(same_color,iota(filter(filter(x.s, circle), green))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(filter(x.s, or[rectangle,not[rectangle]]), blue), green)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:not[%s];4:rectangle;4:blue;4:green
'λx.contains(x.o, filter(x.s, and[rectangle,rectangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:rectangle
'λx.apply(green,iota(filter(filter(filter(filter(filter(filter(filter(x.s, rectangle), size1), blue), green), apply(same_color,iota(filter(filter(x.s, blue), triangle)))), blue), blue)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1;4:blue;4:green;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle;4:blue;4:blue
'λx.apply(and[and[apply(same_size,iota(x.s)),size1],yellow],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size1;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[triangle,yellow],or[size2,circle]],iota(filter(x.s, or[and[size3,size3],and[apply(size-leq,x.o),blue]])))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:yellow;4:or[%s,%s];4:size2;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size3;4:size3;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:blue
'λx.empty(filter(x.s, iff[yellow,size2]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:yellow;4:size2
'λx.apply(not[yellow],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(apply(size-lt,x.o),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size2,and[yellow,circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:yellow;4:circle;1:%s.o;2:x
'λx.apply(or[or[implies[size1,green],size2],apply(same_color,iota(x.s))],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:size1;4:green;4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.forall(rectangle,filter(x.s, green))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.forall(rectangle,filter(x.s, size1))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.forall(rectangle,filter(x.s, size3))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(not[not[and[size1,yellow]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:and[%s,%s];4:size1;4:yellow;1:%s.o;2:x
'λx.contains(iota(filter(x.s, yellow)), filter(filter(filter(x.s, iff[triangle,apply(same_color,x.o)]), circle), size2))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;4:size2
'λx.apply(rectangle,iota(filter(filter(x.s, iff[size2,apply(same_color,iota(x.s))]), green)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:green
'λx.apply(and[and[and[and[apply(same_color,iota(filter(filter(x.s, and[size2,iff[size2,yellow]]), yellow))),and[size2,and[blue,circle]]],not[triangle]],implies[size3,size1]],size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:iff[%s,%s];4:size2;4:yellow;4:yellow;4:and[%s,%s];4:size2;4:and[%s,%s];4:blue;4:circle;4:not[%s];4:triangle;4:implies[%s,%s];4:size3;4:size1;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(filter(x.s, green), size3), not[circle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size3;4:not[%s];4:circle
'λx.forall(and[or[green,apply(same_size,x.o)],not[size1]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:or[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:not[%s];4:size1;3:%s.s;2:x
'λx.forall(blue,filter(x.s, green))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.forall(blue,filter(x.s, size1))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(or[rectangle,or[nand[and[and[yellow,size3],apply(same_color,x.o)],yellow],not[green]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:or[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:size3;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;4:not[%s];4:green;1:%s.o;2:x
'λx.apply(iff[blue,apply(same_shape,x.o)],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(x.s, blue)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(nor[green,implies[not[or[circle,or[circle,green]]],blue]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:green;4:implies[%s,%s];4:not[%s];4:or[%s,%s];4:circle;4:or[%s,%s];4:circle;4:green;4:blue;1:%s.o;2:x
'λx.contains(iota(x.s), filter(x.s, apply(same_shape,iota(x.s))))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(filter(filter(filter(x.s, size1), blue), implies[triangle,triangle]), rectangle), blue)), filter(x.s, triangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue;4:implies[%s,%s];4:triangle;4:triangle;4:rectangle;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.exists(size1, filter(x.s, or[not[size3],not[or[size1,and[apply(same_shape,x.o),and[yellow,not[apply(size-gt,iota(x.s))]]]]]]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:size3;4:not[%s];4:or[%s,%s];4:size1;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:yellow;4:not[%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, and[apply(same_color,iota(filter(x.s, and[apply(same_color,iota(filter(filter(x.s, rectangle), size2))),yellow]))),size3])), filter(x.s, not[size1]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2;4:yellow;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1
'λx.apply(not[green],iota(filter(x.s, and[size3,and[apply(same_shape,x.o),blue]])))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue
'λx.forall(or[blue,and[size1,green]],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:blue;4:and[%s,%s];4:size1;4:green;3:%s.s;2:x
'λx.apply(not[not[triangle]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:triangle;1:iota(%s);3:%s.s;2:x
'λx.exists(apply(same_shape,x.o), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.forall(triangle,filter(x.s, triangle))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(rectangle,iota(filter(x.s, not[and[apply(same_shape,iota(x.s)),blue]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:blue
'λx.forall(and[triangle,and[green,size3]],filter(filter(filter(x.s, yellow), and[and[rectangle,green],apply(same_shape,x.o)]), not[apply(size-gt,x.o)]))'	0:forall(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:green;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.apply(or[or[rectangle,blue],iff[rectangle,not[not[not[not[and[circle,rectangle]]]]]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:rectangle;4:blue;4:iff[%s,%s];4:rectangle;4:not[%s];4:not[%s];4:not[%s];4:not[%s];4:and[%s,%s];4:circle;4:rectangle;1:%s.o;2:x
'λx.apply(or[and[size2,apply(same_color,x.o)],size3],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.contains(x.o, filter(filter(x.s, apply(size-gt,x.o)), triangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:triangle
'λx.exists(implies[not[nor[size2,or[blue,and[circle,apply(same_size,iota(x.s))]]]],or[circle,circle]], filter(x.s, green))'	0:exists(%s, %s);4:implies[%s,%s];4:not[%s];4:nor[%s,%s];4:size2;4:or[%s,%s];4:blue;4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.forall(apply(same_size,x.o),filter(x.s, yellow))'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(or[blue,yellow],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[yellow,size2],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:yellow;4:size2;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, and[apply(same_color,x.o),green])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green;3:%s.s;2:x
'λx.apply(apply(same_size,x.o),iota(filter(filter(x.s, and[apply(same_shape,x.o),yellow]), triangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow;4:triangle
'λx.apply(apply(same_shape,iota(filter(filter(x.s, nor[nand[size2,rectangle],blue]), yellow))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:nand[%s,%s];4:size2;4:rectangle;4:blue;4:yellow;1:%s.o;2:x
'λx.exists(or[and[size2,and[size3,green]],and[and[not[size3],size1],size1]], filter(filter(x.s, nand[not[or[size1,iff[triangle,triangle]]],apply(size-gt,iota(filter(x.s, green)))]), green))'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:size3;4:green;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size3;4:size1;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:not[%s];4:or[%s,%s];4:size1;4:iff[%s,%s];4:triangle;4:triangle;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:green
'λx.forall(nor[and[iff[and[and[triangle,triangle],and[circle,triangle]],not[yellow]],or[or[not[not[size3]],blue],green]],circle],x.s)'	0:forall(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:triangle;4:and[%s,%s];4:circle;4:triangle;4:not[%s];4:yellow;4:or[%s,%s];4:or[%s,%s];4:not[%s];4:not[%s];4:size3;4:blue;4:green;4:circle;3:%s.s;2:x
'λx.apply(triangle,iota(x.s))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:%s.s;2:x
'λx.forall(size1,filter(x.s, and[blue,size1]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size1
'λx.apply(green,iota(filter(filter(x.s, and[not[and[blue,or[yellow,blue]]],or[blue,and[size1,nand[apply(size-gt,iota(filter(x.s, apply(same_shape,iota(x.s))))),rectangle]]]]), size2)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:blue;4:or[%s,%s];4:yellow;4:blue;4:or[%s,%s];4:blue;4:and[%s,%s];4:size1;4:nand[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:rectangle;4:size2
'λx.apply(circle,iota(filter(filter(filter(x.s, triangle), size3), size1)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3;4:size1
'λx.forall(size1,filter(filter(filter(filter(x.s, or[green,or[not[yellow],yellow]]), rectangle), circle), or[yellow,rectangle]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:or[%s,%s];4:not[%s];4:yellow;4:yellow;4:rectangle;4:circle;4:or[%s,%s];4:yellow;4:rectangle
'λx.apply(size1,iota(filter(filter(x.s, size3), yellow)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow
'λx.apply(size1,iota(filter(filter(x.s, size2), yellow)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:yellow
'λx.apply(or[size1,size3],iota(filter(x.s, apply(same_shape,iota(x.s)))))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, and[apply(size-gt,iota(x.s)),size1]), triangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:size1;4:triangle
'λx.apply(iff[triangle,blue],iota(filter(x.s, apply(same_shape,x.o))))'	0:apply(%s,%s);4:iff[%s,%s];4:triangle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(apply(same_shape,iota(filter(x.s, size1))),iota(filter(x.s, size3)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(size2,iota(filter(filter(filter(x.s, blue), rectangle), green)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle;4:green
'λx.apply(nor[circle,apply(same_size,x.o)],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.exists(or[size1,and[nand[size2,apply(same_size,iota(x.s))],rectangle]], filter(filter(x.s, nand[nand[or[blue,or[iff[yellow,or[or[size1,size1],blue]],apply(same_size,iota(filter(filter(x.s, triangle), or[yellow,circle])))]],size3],rectangle]), green))'	0:exists(%s, %s);4:or[%s,%s];4:size1;4:and[%s,%s];4:nand[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:blue;4:or[%s,%s];4:iff[%s,%s];4:yellow;4:or[%s,%s];4:or[%s,%s];4:size1;4:size1;4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:or[%s,%s];4:yellow;4:circle;4:size3;4:rectangle;4:green
'λx.contains(iota(filter(filter(x.s, green), size3)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size3;3:%s.s;2:x
'λx.apply(and[and[yellow,or[size3,triangle]],not[and[size2,not[blue]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:or[%s,%s];4:size3;4:triangle;4:not[%s];4:and[%s,%s];4:size2;4:not[%s];4:blue;1:%s.o;2:x
'λx.apply(and[size3,size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size3,size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size3,size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:size1;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, iff[circle,and[rectangle,size2]]), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:circle;4:and[%s,%s];4:rectangle;4:size2;4:size1
'λx.apply(and[or[and[size1,triangle],triangle],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size1;4:triangle;4:triangle;4:rectangle;1:%s.o;2:x
'λx.apply(or[not[rectangle],yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:rectangle;4:yellow;1:%s.o;2:x
'λx.empty(filter(x.s, iff[size3,green]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size3;4:green
'λx.apply(and[size1,size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size1,size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size1,size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[rectangle,nor[and[size1,not[apply(size-leq,x.o)]],rectangle]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:rectangle;4:nor[%s,%s];4:and[%s,%s];4:size1;4:not[%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:rectangle;1:%s.o;2:x
'λx.apply(nor[yellow,blue],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:yellow;4:blue;1:%s.o;2:x
'λx.forall(and[rectangle,size3],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:rectangle;4:size3;3:%s.s;2:x
'λx.apply(nand[and[size3,nand[size3,size1]],apply(same_color,x.o)],iota(filter(x.s, and[size2,triangle])))'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:size3;4:nand[%s,%s];4:size3;4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:triangle
'λx.apply(and[not[size1],and[and[apply(size-lt,x.o),rectangle],blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:rectangle;4:blue;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, size3), yellow)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow
'λx.apply(and[size3,or[circle,green]],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:or[%s,%s];4:circle;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(or[yellow,not[rectangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.forall(triangle,filter(filter(x.s, rectangle), yellow))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:yellow
'λx.apply(rectangle,iota(filter(filter(filter(x.s, or[size2,circle]), rectangle), circle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:circle;4:rectangle;4:circle
'λx.apply(nand[size1,and[green,triangle]],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:nand[%s,%s];4:size1;4:and[%s,%s];4:green;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(size3,iota(filter(filter(x.s, and[circle,and[implies[size1,circle],size1]]), size2)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:and[%s,%s];4:implies[%s,%s];4:size1;4:circle;4:size1;4:size2
'λx.apply(green,iota(filter(x.s, and[and[blue,circle],not[not[not[rectangle]]]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:blue;4:circle;4:not[%s];4:not[%s];4:not[%s];4:rectangle
'λx.forall(triangle,filter(x.s, and[triangle,implies[not[and[blue,rectangle]],size3]]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:implies[%s,%s];4:not[%s];4:and[%s,%s];4:blue;4:rectangle;4:size3
'λx.apply(or[nor[circle,rectangle],blue],iota(filter(filter(x.s, yellow), apply(same_shape,iota(x.s)))))'	0:apply(%s,%s);4:or[%s,%s];4:nor[%s,%s];4:circle;4:rectangle;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_size,iota(filter(filter(filter(x.s, size3), or[size2,rectangle]), green))),iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:size2;4:rectangle;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.empty(filter(filter(filter(filter(x.s, yellow), blue), size2), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:blue;4:size2;4:blue
'λx.apply(and[and[size3,triangle],and[rectangle,not[circle]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size3;4:triangle;4:and[%s,%s];4:rectangle;4:not[%s];4:circle;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, or[rectangle,yellow]), blue)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:yellow;4:blue
'λx.exists(not[not[or[blue,circle]]], filter(filter(filter(filter(filter(x.s, and[size3,rectangle]), not[not[blue]]), not[yellow]), iff[blue,rectangle]), or[triangle,not[or[circle,rectangle]]]))'	0:exists(%s, %s);4:not[%s];4:not[%s];4:or[%s,%s];4:blue;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:rectangle;4:not[%s];4:not[%s];4:blue;4:not[%s];4:yellow;4:iff[%s,%s];4:blue;4:rectangle;4:or[%s,%s];4:triangle;4:not[%s];4:or[%s,%s];4:circle;4:rectangle
'λx.apply(and[not[size3],nand[size2,and[triangle,blue]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size3;4:nand[%s,%s];4:size2;4:and[%s,%s];4:triangle;4:blue;1:%s.o;2:x
'λx.forall(nor[triangle,triangle],filter(filter(filter(x.s, circle), or[blue,apply(same_size,x.o)]), yellow))'	0:forall(%s,%s);4:nor[%s,%s];4:triangle;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow
'λx.apply(or[circle,nor[size1,rectangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:nor[%s,%s];4:size1;4:rectangle;1:%s.o;2:x
'λx.apply(or[or[and[and[apply(same_size,x.o),rectangle],and[size2,or[triangle,blue]]],blue],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:rectangle;4:and[%s,%s];4:size2;4:or[%s,%s];4:triangle;4:blue;4:blue;4:blue;1:%s.o;2:x
'λx.apply(and[green,triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:triangle;1:%s.o;2:x
'λx.apply(implies[size3,and[yellow,and[not[circle],apply(same_shape,iota(x.s))]]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size3;4:and[%s,%s];4:yellow;4:and[%s,%s];4:not[%s];4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(and[size2,size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size2,size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:size1;1:iota(%s);3:%s.s;2:x
'λx.exists(or[blue,or[circle,rectangle]], filter(x.s, and[blue,apply(same_shape,iota(x.s))]))'	0:exists(%s, %s);4:or[%s,%s];4:blue;4:or[%s,%s];4:circle;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(and[rectangle,green],iota(filter(filter(x.s, rectangle), and[yellow,apply(same_color,x.o)])))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(and[apply(size-geq,x.o),blue],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.forall(green,filter(filter(filter(x.s, and[apply(same_size,iota(filter(x.s, blue))),blue]), size1), blue))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue;4:size1;4:blue
'λx.apply(and[green,iff[or[implies[blue,rectangle],apply(size-lt,iota(x.s))],size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:iff[%s,%s];4:or[%s,%s];4:implies[%s,%s];4:blue;4:rectangle;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:size2;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(x.s, rectangle), not[apply(size-lt,x.o)])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.exists(not[green], filter(filter(x.s, size3), yellow))'	0:exists(%s, %s);4:not[%s];4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow
'λx.apply(or[size2,circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:circle;1:%s.o;2:x
'λx.apply(implies[apply(same_shape,x.o),blue],iota(filter(filter(filter(x.s, size2), not[blue]), green)))'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:not[%s];4:blue;4:green
'λx.exists(circle, x.s)'	0:exists(%s, %s);4:circle;3:%s.s;2:x
'λx.apply(implies[or[rectangle,not[and[rectangle,apply(same_size,iota(x.s))]]],size3],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:or[%s,%s];4:rectangle;4:not[%s];4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size3;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(filter(x.s, blue), apply(size-lt,x.o)), nor[size2,and[apply(same_color,x.o),or[or[rectangle,rectangle],nand[and[circle,and[or[not[circle],green],nand[and[size1,yellow],rectangle]]],size2]]]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:nor[%s,%s];4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:or[%s,%s];4:or[%s,%s];4:rectangle;4:rectangle;4:nand[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:circle;4:green;4:nand[%s,%s];4:and[%s,%s];4:size1;4:yellow;4:rectangle;4:size2
'λx.apply(and[nand[and[and[not[green],blue],and[rectangle,yellow]],implies[apply(same_size,x.o),and[and[circle,triangle],rectangle]]],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:green;4:blue;4:and[%s,%s];4:rectangle;4:yellow;4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:and[%s,%s];4:circle;4:triangle;4:rectangle;4:size1;1:%s.o;2:x
'λx.apply(and[size3,circle],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(green,iota(filter(x.s, circle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(not[size3],iota(filter(filter(filter(x.s, triangle), implies[rectangle,triangle]), size2)))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:implies[%s,%s];4:rectangle;4:triangle;4:size2
'λx.apply(nand[size2,and[triangle,or[and[yellow,or[blue,rectangle]],and[blue,circle]]]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:size2;4:and[%s,%s];4:triangle;4:or[%s,%s];4:and[%s,%s];4:yellow;4:or[%s,%s];4:blue;4:rectangle;4:and[%s,%s];4:blue;4:circle;1:%s.o;2:x
'λx.apply(iff[yellow,and[blue,rectangle]],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:yellow;4:and[%s,%s];4:blue;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, triangle), and[nor[rectangle,green],blue]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:nor[%s,%s];4:rectangle;4:green;4:blue
'λx.empty(filter(filter(filter(filter(x.s, or[size1,and[green,not[and[not[circle],rectangle]]]]), yellow), not[rectangle]), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:and[%s,%s];4:green;4:not[%s];4:and[%s,%s];4:not[%s];4:circle;4:rectangle;4:yellow;4:not[%s];4:rectangle;4:size3
'λx.apply(apply(same_size,x.o),iota(filter(filter(x.s, size3), apply(size-gt,iota(filter(filter(x.s, size2), size2))))))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2
'λx.empty(filter(filter(x.s, size3), and[size1,green]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:size1;4:green
'λx.apply(iff[not[not[and[and[triangle,yellow],and[and[and[triangle,size2],apply(same_color,x.o)],green]]]],not[size1]],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:iff[%s,%s];4:not[%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:yellow;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green;4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(rectangle,iota(filter(filter(x.s, and[apply(same_shape,iota(filter(x.s, blue))),size2]), size1)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2;4:size1
'λx.apply(implies[triangle,yellow],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:triangle;4:yellow;1:%s.o;2:x
'λx.apply(or[blue,green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:green;1:%s.o;2:x
'λx.exists(not[blue], x.s)'	0:exists(%s, %s);4:not[%s];4:blue;3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, implies[size2,and[and[triangle,nor[circle,size3]],implies[blue,green]]]), blue), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:triangle;4:nor[%s,%s];4:circle;4:size3;4:implies[%s,%s];4:blue;4:green;4:blue;4:rectangle
'λx.exists(rectangle, filter(filter(x.s, apply(same_size,iota(filter(x.s, implies[or[size1,blue],size2])))), triangle))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:or[%s,%s];4:size1;4:blue;4:size2;4:triangle
'λx.apply(not[not[or[apply(same_color,iota(x.s)),or[blue,and[and[not[yellow],circle],green]]]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:yellow;4:circle;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_color,x.o),iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(apply(same_shape,iota(filter(x.s, size3))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_shape,iota(filter(x.s, size2))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[and[green,and[yellow,size2]],size3],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:yellow;4:size2;4:size3;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(x.s, yellow), green), and[rectangle,triangle]), and[apply(same_color,iota(x.s)),size3]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green;4:and[%s,%s];4:rectangle;4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size3
'λx.apply(not[not[size3]],iota(filter(filter(filter(x.s, size1), nand[not[rectangle],and[rectangle,triangle]]), green)))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:nand[%s,%s];4:not[%s];4:rectangle;4:and[%s,%s];4:rectangle;4:triangle;4:green
'λx.apply(apply(size-geq,x.o),iota(filter(filter(filter(x.s, and[and[nand[green,not[apply(same_size,iota(filter(filter(x.s, and[blue,and[or[apply(size-gt,iota(x.s)),rectangle],size2]]), triangle)))]],size2],size1]), blue), circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:green;4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:rectangle;4:size2;4:triangle;4:size2;4:size1;4:blue;4:circle
'λx.apply(or[triangle,apply(size-lt,x.o)],iota(filter(filter(x.s, size2), size1)))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1
'λx.exists(or[yellow,apply(same_color,x.o)], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(apply(same_shape,iota(x.s)),iota(filter(x.s, apply(same_size,x.o))))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, apply(same_shape,iota(x.s)))))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(x.s, blue), blue)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue
'λx.exists(rectangle, filter(filter(filter(x.s, apply(same_color,iota(x.s))), not[size1]), apply(size-lt,x.o)))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:not[%s];4:size1;4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(filter(filter(x.s, rectangle), not[apply(same_shape,iota(filter(filter(x.s, size3), not[circle])))]), size1), size3))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:circle;4:size1;4:size3
'λx.apply(blue,iota(filter(filter(x.s, implies[circle,triangle]), triangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:circle;4:triangle;4:triangle
'λx.exists(green, filter(filter(x.s, yellow), rectangle))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle
'λx.apply(or[size3,circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:circle;1:%s.o;2:x
'λx.apply(and[and[circle,not[size3]],apply(size-gt,x.o)],iota(filter(filter(filter(x.s, size3), size3), apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:not[%s];4:size3;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.exists(or[apply(same_shape,iota(x.s)),not[nor[size1,green]]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:not[%s];4:nor[%s,%s];4:size1;4:green;3:%s.s;2:x
'λx.apply(size2,iota(filter(x.s, and[not[size3],green])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:size3;4:green
'λx.forall(and[blue,triangle],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:blue;4:triangle;3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(x.s, not[apply(same_shape,x.o)]), and[and[and[or[and[and[apply(size-gt,x.o),size1],and[green,green]],rectangle],yellow],or[circle,yellow]],size3]), size2))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:size1;4:and[%s,%s];4:green;4:green;4:rectangle;4:yellow;4:or[%s,%s];4:circle;4:yellow;4:size3;4:size2
'λx.apply(and[and[green,or[and[triangle,and[iff[circle,and[yellow,size3]],green]],size1]],and[green,yellow]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:green;4:or[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:iff[%s,%s];4:circle;4:and[%s,%s];4:yellow;4:size3;4:green;4:size1;4:and[%s,%s];4:green;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size1,and[blue,and[apply(same_shape,iota(x.s)),or[yellow,size3]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:and[%s,%s];4:blue;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:size3;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(x.s, or[yellow,apply(same_shape,iota(x.s))]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(filter(filter(x.s, green), size3), triangle), yellow)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size3;4:triangle;4:yellow
'λx.apply(size2,iota(filter(x.s, nand[size2,triangle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size2;4:triangle
'λx.apply(not[rectangle],iota(filter(x.s, nor[size2,green])))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size2;4:green
'λx.forall(rectangle,filter(x.s, or[size2,and[size1,size1]]))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:and[%s,%s];4:size1;4:size1
'λx.apply(and[blue,apply(same_shape,x.o)],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(or[green,or[not[green],implies[and[and[size1,yellow],rectangle],and[yellow,or[rectangle,triangle]]]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:or[%s,%s];4:not[%s];4:green;4:implies[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:yellow;4:rectangle;4:and[%s,%s];4:yellow;4:or[%s,%s];4:rectangle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.forall(not[and[green,rectangle]],filter(filter(x.s, size1), triangle))'	0:forall(%s,%s);4:not[%s];4:and[%s,%s];4:green;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle
'λx.apply(nor[and[blue,or[and[blue,yellow],circle]],and[and[and[blue,and[and[and[rectangle,size2],triangle],triangle]],nor[size2,circle]],iff[green,apply(size-leq,x.o)]]],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:blue;4:or[%s,%s];4:and[%s,%s];4:blue;4:yellow;4:circle;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size2;4:triangle;4:triangle;4:nor[%s,%s];4:size2;4:circle;4:iff[%s,%s];4:green;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(not[implies[green,green]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:implies[%s,%s];4:green;4:green;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(filter(x.s, circle), green), apply(same_size,iota(x.s))), implies[circle,triangle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:implies[%s,%s];4:circle;4:triangle
'λx.apply(blue,iota(filter(filter(filter(x.s, circle), blue), and[size3,apply(same_shape,x.o)])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue;4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.forall(rectangle,filter(filter(x.s, apply(same_size,x.o)), green))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:green
'λx.apply(not[and[apply(same_size,iota(filter(x.s, not[apply(same_size,iota(x.s))]))),yellow]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:yellow;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, or[rectangle,not[and[blue,rectangle]]]), yellow)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:not[%s];4:and[%s,%s];4:blue;4:rectangle;4:yellow
'λx.apply(and[not[triangle],implies[rectangle,size2]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:triangle;4:implies[%s,%s];4:rectangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(not[yellow],iota(filter(filter(filter(filter(filter(filter(x.s, nand[yellow,circle]), size3), apply(same_color,iota(x.s))), blue), size3), size3)))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:yellow;4:circle;4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:blue;4:size3;4:size3
'λx.apply(and[size2,triangle],iota(filter(filter(filter(x.s, size1), circle), implies[green,apply(same_shape,x.o)])))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle;4:implies[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(and[not[rectangle],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:rectangle;4:triangle;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(x.s, and[or[size1,yellow],triangle]), and[nor[yellow,yellow],nor[size3,rectangle]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:size1;4:yellow;4:triangle;4:and[%s,%s];4:nor[%s,%s];4:yellow;4:yellow;4:nor[%s,%s];4:size3;4:rectangle
'λx.forall(and[and[yellow,size3],and[yellow,green]],filter(filter(x.s, not[size3]), or[green,and[and[rectangle,size2],size2]]))'	0:forall(%s,%s);4:and[%s,%s];4:and[%s,%s];4:yellow;4:size3;4:and[%s,%s];4:yellow;4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;4:or[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:size2;4:size2
'λx.apply(iff[not[and[triangle,circle]],blue],iota(filter(filter(filter(filter(filter(filter(filter(filter(filter(x.s, blue), circle), size2), size1), and[or[not[size2],yellow],and[triangle,and[yellow,apply(same_color,x.o)]]]), not[size1]), yellow), blue), apply(same_size,iota(x.s)))))'	0:apply(%s,%s);4:iff[%s,%s];4:not[%s];4:and[%s,%s];4:triangle;4:circle;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle;4:size2;4:size1;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:size2;4:yellow;4:and[%s,%s];4:triangle;4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:size1;4:yellow;4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(x.s, and[or[blue,and[nor[triangle,circle],circle]],yellow]), green)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:blue;4:and[%s,%s];4:nor[%s,%s];4:triangle;4:circle;4:circle;4:yellow;4:green
'λx.apply(green,iota(filter(filter(x.s, yellow), size1)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1
'λx.forall(not[circle],filter(filter(x.s, size2), apply(same_color,x.o)))'	0:forall(%s,%s);4:not[%s];4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(or[green,nor[size3,not[size1]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:nor[%s,%s];4:size3;4:not[%s];4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(and[or[and[rectangle,size1],yellow],circle],iota(filter(filter(x.s, size3), rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:rectangle;4:size1;4:yellow;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle
'λx.contains(iota(filter(filter(x.s, apply(same_color,iota(x.s))), size3)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size3;3:%s.s;2:x
'λx.apply(and[size1,or[circle,not[triangle]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:or[%s,%s];4:circle;4:not[%s];4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[apply(same_size,iota(x.s))],iota(filter(x.s, apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(not[green],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(or[and[apply(same_shape,iota(filter(x.s, rectangle))),blue],and[not[triangle],size1]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue;4:and[%s,%s];4:not[%s];4:triangle;4:size1;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, apply(same_color,iota(filter(x.s, nand[rectangle,circle])))), rectangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:rectangle;4:circle;4:rectangle
'λx.apply(size2,iota(filter(filter(x.s, yellow), size2)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2
'λx.apply(blue,iota(filter(filter(filter(x.s, size3), nand[not[blue],size1]), green)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:nand[%s,%s];4:not[%s];4:blue;4:size1;4:green
'λx.apply(size3,iota(filter(filter(x.s, yellow), green)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green
'λx.apply(or[and[blue,nand[blue,apply(same_shape,iota(filter(x.s, or[triangle,triangle])))]],not[size1]],iota(filter(filter(filter(x.s, blue), or[iff[rectangle,size3],nor[circle,or[yellow,size1]]]), rectangle)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:blue;4:nand[%s,%s];4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:triangle;4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:iff[%s,%s];4:rectangle;4:size3;4:nor[%s,%s];4:circle;4:or[%s,%s];4:yellow;4:size1;4:rectangle
'λx.exists(not[not[green]], filter(x.s, apply(size-lt,x.o)))'	0:exists(%s, %s);4:not[%s];4:not[%s];4:green;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.apply(and[green,nand[size2,or[implies[not[green],and[not[and[and[size2,not[not[or[circle,and[circle,not[apply(same_color,x.o)]]]]]],and[yellow,triangle]]],not[size2]]],size3]]],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:nand[%s,%s];4:size2;4:or[%s,%s];4:implies[%s,%s];4:not[%s];4:green;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:not[%s];4:not[%s];4:or[%s,%s];4:circle;4:and[%s,%s];4:circle;4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:yellow;4:triangle;4:not[%s];4:size2;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(size3,iota(filter(filter(x.s, circle), not[rectangle])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:rectangle
'λx.apply(size1,iota(filter(filter(filter(x.s, apply(same_shape,x.o)), size1), size1)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size1;4:size1
'λx.contains(iota(filter(filter(x.s, circle), apply(same_shape,x.o))), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(filter(x.s, green), triangle), not[circle])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:triangle;4:not[%s];4:circle
'λx.apply(triangle,iota(filter(filter(filter(x.s, circle), green), not[blue])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green;4:not[%s];4:blue
'λx.apply(and[green,or[rectangle,size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:or[%s,%s];4:rectangle;4:size3;1:%s.o;2:x
'λx.contains(x.o, filter(filter(filter(x.s, triangle), size2), rectangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2;4:rectangle
'λx.exists(nand[triangle,triangle], x.s)'	0:exists(%s, %s);4:nand[%s,%s];4:triangle;4:triangle;3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, or[blue,blue]), blue))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:blue;4:blue
'λx.apply(blue,iota(filter(filter(x.s, size2), and[apply(same_shape,iota(x.s)),not[size3]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:not[%s];4:size3
'λx.exists(size2, filter(x.s, iff[apply(size-gt,iota(x.s)),rectangle]))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:rectangle
'λx.apply(or[and[apply(same_size,x.o),rectangle],and[size3,size2]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:rectangle;4:and[%s,%s];4:size3;4:size2;1:%s.o;2:x
'λx.apply(or[or[circle,rectangle],nor[not[and[size1,size2]],blue]],iota(filter(filter(filter(filter(filter(filter(filter(x.s, and[rectangle,nor[apply(same_shape,iota(filter(x.s, not[triangle]))),or[and[not[size3],or[yellow,rectangle]],triangle]]]), size3), yellow), triangle), yellow), yellow), not[or[size1,circle]])))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:circle;4:rectangle;4:nor[%s,%s];4:not[%s];4:and[%s,%s];4:size1;4:size2;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:nor[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:size3;4:or[%s,%s];4:yellow;4:rectangle;4:triangle;4:size3;4:yellow;4:triangle;4:yellow;4:yellow;4:not[%s];4:or[%s,%s];4:size1;4:circle
'λx.exists(and[and[size1,rectangle],or[green,and[not[size3],size3]]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:size1;4:rectangle;4:or[%s,%s];4:green;4:and[%s,%s];4:not[%s];4:size3;4:size3;3:%s.s;2:x
'λx.exists(iff[not[green],circle], filter(x.s, apply(same_shape,iota(x.s))))'	0:exists(%s, %s);4:iff[%s,%s];4:not[%s];4:green;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(x.s, apply(same_size,iota(filter(filter(filter(x.s, yellow), circle), circle)))))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle;4:circle
'λx.apply(yellow,iota(filter(x.s, apply(same_size,x.o))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, not[size1]), size3)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:size3
'λx.apply(and[triangle,and[blue,apply(same_size,x.o)]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(filter(filter(filter(x.s, triangle), green), and[nand[and[green,or[and[size1,size1],not[blue]]],circle],and[apply(same_color,x.o),and[size2,size2]]]), yellow), blue), green), and[size3,nor[and[size3,triangle],blue]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green;4:and[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:green;4:or[%s,%s];4:and[%s,%s];4:size1;4:size1;4:not[%s];4:blue;4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:size2;4:size2;4:yellow;4:blue;4:green;4:and[%s,%s];4:size3;4:nor[%s,%s];4:and[%s,%s];4:size3;4:triangle;4:blue
'λx.apply(and[or[and[green,yellow],circle],and[triangle,size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:green;4:yellow;4:circle;4:and[%s,%s];4:triangle;4:size2;1:%s.o;2:x
'λx.apply(nand[triangle,size2],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(not[rectangle],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(apply(same_shape,iota(x.s)), filter(x.s, apply(same_color,x.o)))'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(yellow,iota(filter(x.s, iff[green,size3])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:green;4:size3
'λx.exists(apply(same_shape,x.o), filter(x.s, circle))'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(green,iota(filter(x.s, and[apply(size-geq,x.o),size3])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:size3
'λx.apply(or[size3,and[blue,and[size3,or[or[and[green,circle],triangle],circle]]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:and[%s,%s];4:blue;4:and[%s,%s];4:size3;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:green;4:circle;4:triangle;4:circle;1:%s.o;2:x
'λx.apply(not[yellow],iota(filter(x.s, or[yellow,iff[and[blue,size3],size3]])))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:iff[%s,%s];4:and[%s,%s];4:blue;4:size3;4:size3
'λx.forall(apply(same_size,iota(x.s)),filter(filter(x.s, green), implies[blue,and[blue,yellow]]))'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:implies[%s,%s];4:blue;4:and[%s,%s];4:blue;4:yellow
'λx.exists(and[yellow,yellow], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:yellow;4:yellow;3:%s.s;2:x
'λx.apply(or[not[and[and[and[size3,apply(size-lt,iota(filter(x.s, triangle)))],size1],size1]],circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size1;4:size1;4:circle;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(filter(x.s, and[triangle,and[apply(same_color,iota(filter(filter(x.s, triangle), triangle))),and[rectangle,not[triangle]]]]), size2), rectangle), yellow), apply(same_size,x.o)))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:triangle;4:and[%s,%s];4:rectangle;4:not[%s];4:triangle;4:size2;4:rectangle;4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, and[blue,and[and[apply(same_size,iota(filter(x.s, and[size1,green]))),apply(same_size,iota(filter(x.s, blue)))],iff[size2,nand[circle,not[size1]]]]]), or[or[green,rectangle],size2])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:green;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:iff[%s,%s];4:size2;4:nand[%s,%s];4:circle;4:not[%s];4:size1;4:or[%s,%s];4:or[%s,%s];4:green;4:rectangle;4:size2;3:%s.s;2:x
'λx.forall(apply(same_shape,x.o),filter(filter(filter(filter(x.s, not[not[or[apply(size-lt,iota(filter(x.s, apply(same_size,x.o)))),and[apply(same_size,iota(filter(x.s, size2))),size3]]]]), blue), or[yellow,green]), not[circle]))'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3;4:blue;4:or[%s,%s];4:yellow;4:green;4:not[%s];4:circle
'λx.apply(nor[triangle,apply(same_shape,iota(x.s))],iota(filter(filter(x.s, blue), yellow)))'	0:apply(%s,%s);4:nor[%s,%s];4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow
'λx.apply(circle,iota(filter(filter(filter(x.s, or[rectangle,blue]), not[green]), green)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:blue;4:not[%s];4:green;4:green
'λx.apply(implies[blue,blue],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:blue;4:blue;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(x.s, rectangle), circle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle
'λx.apply(size1,iota(filter(filter(x.s, rectangle), circle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle
'λx.forall(or[blue,and[size1,size3]],filter(filter(x.s, yellow), and[size2,or[yellow,blue]]))'	0:forall(%s,%s);4:or[%s,%s];4:blue;4:and[%s,%s];4:size1;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:size2;4:or[%s,%s];4:yellow;4:blue
'λx.apply(apply(size-leq,iota(filter(filter(x.s, and[not[rectangle],triangle]), blue))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:rectangle;4:triangle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[rectangle,triangle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:rectangle;4:triangle;1:%s.o;2:x
'λx.forall(rectangle,filter(filter(filter(x.s, blue), rectangle), nor[triangle,iff[green,and[size3,and[or[blue,rectangle],and[size3,size3]]]]]))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle;4:nor[%s,%s];4:triangle;4:iff[%s,%s];4:green;4:and[%s,%s];4:size3;4:and[%s,%s];4:or[%s,%s];4:blue;4:rectangle;4:and[%s,%s];4:size3;4:size3
'λx.contains(x.o, filter(x.s, and[and[circle,or[size2,triangle]],size1]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:circle;4:or[%s,%s];4:size2;4:triangle;4:size1
'λx.exists(blue, filter(filter(filter(x.s, size1), size1), implies[apply(same_size,x.o),blue]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1;4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue
'λx.forall(size2,filter(filter(filter(x.s, size1), rectangle), size2))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle;4:size2
'λx.forall(and[circle,nor[rectangle,triangle]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:circle;4:nor[%s,%s];4:rectangle;4:triangle;3:%s.s;2:x
'λx.apply(or[rectangle,apply(same_color,iota(x.s))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.forall(triangle,filter(filter(x.s, triangle), triangle))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:triangle
'λx.exists(circle, filter(filter(x.s, blue), apply(same_shape,x.o)))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(or[nand[green,size1],size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:green;4:size1;4:size3;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, and[or[size3,or[green,and[rectangle,nand[and[size2,triangle],apply(same_shape,iota(x.s))]]]],and[yellow,size1]]), size2)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:size3;4:or[%s,%s];4:green;4:and[%s,%s];4:rectangle;4:nand[%s,%s];4:and[%s,%s];4:size2;4:triangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size1;4:size2;3:%s.s;2:x
'λx.forall(rectangle,filter(filter(filter(x.s, circle), and[rectangle,green]), not[not[size3]]))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:rectangle;4:green;4:not[%s];4:not[%s];4:size3
'λx.apply(and[blue,size3],iota(filter(x.s, implies[circle,triangle])))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:circle;4:triangle
'λx.apply(and[blue,or[size2,and[yellow,or[and[blue,circle],rectangle]]]],iota(filter(filter(filter(x.s, yellow), green), not[nor[yellow,not[blue]]])))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:or[%s,%s];4:size2;4:and[%s,%s];4:yellow;4:or[%s,%s];4:and[%s,%s];4:blue;4:circle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green;4:not[%s];4:nor[%s,%s];4:yellow;4:not[%s];4:blue
'λx.exists(apply(size-lt,x.o), filter(filter(filter(x.s, size1), yellow), yellow))'	0:exists(%s, %s);4:apply(%s,%s);5:size-lt;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow;4:yellow
'λx.forall(nand[green,and[size3,nand[blue,triangle]]],x.s)'	0:forall(%s,%s);4:nand[%s,%s];4:green;4:and[%s,%s];4:size3;4:nand[%s,%s];4:blue;4:triangle;3:%s.s;2:x
'λx.apply(apply(size-gt,iota(filter(filter(x.s, circle), blue))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(filter(x.s, size2), blue), size1)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue;4:size1
'λx.empty(filter(filter(x.s, green), and[size2,green]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:size2;4:green
'λx.empty(filter(filter(x.s, triangle), iff[rectangle,and[size2,and[blue,and[size1,nand[yellow,size1]]]]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:iff[%s,%s];4:rectangle;4:and[%s,%s];4:size2;4:and[%s,%s];4:blue;4:and[%s,%s];4:size1;4:nand[%s,%s];4:yellow;4:size1
'λx.apply(and[blue,and[circle,rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:circle;4:rectangle;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(filter(x.s, and[blue,yellow]), circle), circle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:yellow;4:circle;4:circle
'λx.apply(or[rectangle,size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:size2;1:%s.o;2:x
'λx.apply(or[rectangle,size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:size3;1:%s.o;2:x
'λx.apply(implies[yellow,yellow],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:implies[%s,%s];4:yellow;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.forall(size1,filter(filter(filter(x.s, size2), blue), or[and[size1,blue],rectangle]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue;4:or[%s,%s];4:and[%s,%s];4:size1;4:blue;4:rectangle
'λx.apply(and[size2,circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:circle;1:%s.o;2:x
'λx.apply(nand[yellow,triangle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:yellow;4:triangle;1:%s.o;2:x
'λx.apply(and[yellow,size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(and[yellow,size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(and[yellow,size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[rectangle,nand[green,apply(same_size,x.o)]],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:rectangle;4:nand[%s,%s];4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[not[yellow],yellow],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:not[%s];4:yellow;4:yellow;1:%s.o;2:x
'λx.empty(filter(filter(x.s, green), and[size1,size2]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:size1;4:size2
'λx.apply(and[nor[and[and[size1,not[circle]],or[triangle,not[rectangle]]],rectangle],size1],iota(filter(filter(x.s, blue), size1)))'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:not[%s];4:circle;4:or[%s,%s];4:triangle;4:not[%s];4:rectangle;4:rectangle;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1
'λx.apply(not[apply(size-gt,x.o)],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(x.s, triangle), triangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:triangle
'λx.apply(size2,iota(filter(filter(x.s, size1), or[not[blue],circle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:or[%s,%s];4:not[%s];4:blue;4:circle
'λx.apply(and[not[or[yellow,size1]],size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:or[%s,%s];4:yellow;4:size1;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[size3,and[blue,yellow]],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:size3;4:and[%s,%s];4:blue;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[size2,and[green,or[triangle,not[and[blue,and[size3,green]]]]]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:size2;4:and[%s,%s];4:green;4:or[%s,%s];4:triangle;4:not[%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:size3;4:green;1:%s.o;2:x
'λx.exists(and[size1,and[and[circle,size3],yellow]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:circle;4:size3;4:yellow;3:%s.s;2:x
'λx.exists(and[green,size2], filter(x.s, and[and[size3,circle],size1]))'	0:exists(%s, %s);4:and[%s,%s];4:green;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size3;4:circle;4:size1
'λx.apply(and[and[or[and[circle,triangle],not[not[implies[size2,yellow]]]],nand[size1,apply(same_color,iota(x.s))]],size1],iota(filter(filter(x.s, and[rectangle,not[green]]), circle)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:circle;4:triangle;4:not[%s];4:not[%s];4:implies[%s,%s];4:size2;4:yellow;4:nand[%s,%s];4:size1;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:not[%s];4:green;4:circle
'λx.contains(iota(filter(x.s, implies[circle,and[nand[yellow,blue],size2]])), filter(filter(filter(filter(x.s, rectangle), blue), circle), green))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:circle;4:and[%s,%s];4:nand[%s,%s];4:yellow;4:blue;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue;4:circle;4:green
'λx.apply(and[apply(same_color,x.o),green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green;1:%s.o;2:x
'λx.apply(apply(same_color,x.o),iota(filter(filter(filter(x.s, size3), size2), triangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2;4:triangle
'λx.apply(and[size1,and[size1,size2]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:and[%s,%s];4:size1;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size1,rectangle],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(or[not[and[implies[yellow,size1],triangle]],yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:and[%s,%s];4:implies[%s,%s];4:yellow;4:size1;4:triangle;4:yellow;1:%s.o;2:x
'λx.forall(or[and[size3,rectangle],blue],filter(x.s, circle))'	0:forall(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size3;4:rectangle;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(or[and[implies[and[circle,rectangle],circle],and[triangle,yellow]],and[and[not[circle],size3],yellow]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:circle;4:rectangle;4:circle;4:and[%s,%s];4:triangle;4:yellow;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:circle;4:size3;4:yellow;1:%s.o;2:x
'λx.apply(apply(size-lt,iota(x.s)),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.forall(or[blue,triangle],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:blue;4:triangle;3:%s.s;2:x
'λx.apply(nor[rectangle,size3],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:rectangle;4:size3;1:%s.o;2:x
'λx.apply(or[green,and[triangle,yellow]],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:and[%s,%s];4:triangle;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.forall(size3,filter(x.s, and[blue,and[or[yellow,implies[circle,yellow]],circle]]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:and[%s,%s];4:or[%s,%s];4:yellow;4:implies[%s,%s];4:circle;4:yellow;4:circle
'λx.contains(x.o, filter(x.s, apply(same_shape,iota(x.s))))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.forall(and[yellow,circle],filter(filter(x.s, rectangle), blue))'	0:forall(%s,%s);4:and[%s,%s];4:yellow;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue
'λx.contains(iota(x.s), filter(filter(filter(filter(filter(filter(x.s, apply(size-lt,iota(x.s))), and[not[nor[size3,or[size1,green]]],nand[triangle,rectangle]]), size2), blue), circle), rectangle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:nor[%s,%s];4:size3;4:or[%s,%s];4:size1;4:green;4:nand[%s,%s];4:triangle;4:rectangle;4:size2;4:blue;4:circle;4:rectangle
'λx.exists(apply(same_shape,iota(filter(x.s, size2))), filter(x.s, size1))'	0:exists(%s, %s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(nand[and[green,triangle],and[rectangle,size3]],iota(filter(x.s, and[not[yellow],circle])))'	0:apply(%s,%s);4:nand[%s,%s];4:and[%s,%s];4:green;4:triangle;4:and[%s,%s];4:rectangle;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:yellow;4:circle
'λx.apply(and[blue,or[size1,size3]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:or[%s,%s];4:size1;4:size3;1:iota(%s);3:%s.s;2:x
'λx.forall(and[not[circle],triangle],filter(filter(x.s, triangle), circle))'	0:forall(%s,%s);4:and[%s,%s];4:not[%s];4:circle;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle
'λx.forall(size2,filter(filter(filter(filter(filter(filter(filter(x.s, not[and[size1,rectangle]]), apply(same_size,iota(filter(filter(filter(x.s, blue), apply(same_shape,x.o)), triangle)))), yellow), apply(same_size,x.o)), triangle), rectangle), blue))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:size1;4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle;4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle;4:rectangle;4:blue
'λx.apply(apply(same_size,x.o),iota(filter(filter(filter(x.s, rectangle), apply(size-leq,x.o)), apply(size-lt,x.o))))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(x.s, and[triangle,apply(size-gt,iota(filter(filter(filter(x.s, or[and[or[size2,rectangle],size1],size3]), size2), rectangle)))]), size2)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size2;4:rectangle;4:size1;4:size3;4:size2;4:rectangle;4:size2
'λx.apply(and[not[rectangle],not[nand[and[and[blue,size2],green],blue]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:rectangle;4:not[%s];4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:blue;4:size2;4:green;4:blue;1:%s.o;2:x
'λx.apply(apply(size-leq,x.o),iota(filter(x.s, blue)))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.contains(iota(filter(filter(filter(x.s, and[size2,size2]), and[and[size1,circle],not[nand[yellow,size2]]]), size3)), filter(filter(filter(x.s, or[nand[size3,size2],apply(same_size,x.o)]), and[blue,not[size3]]), yellow))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:size2;4:and[%s,%s];4:and[%s,%s];4:size1;4:circle;4:not[%s];4:nand[%s,%s];4:yellow;4:size2;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:nand[%s,%s];4:size3;4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:blue;4:not[%s];4:size3;4:yellow
'λx.apply(rectangle,iota(filter(filter(x.s, iff[triangle,size2]), circle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:triangle;4:size2;4:circle
'λx.apply(apply(size-leq,x.o),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[not[and[blue,green]],and[apply(same_shape,x.o),size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:blue;4:green;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3;1:%s.o;2:x
'λx.exists(and[size3,circle], filter(filter(filter(x.s, green), and[circle,size1]), size1))'	0:exists(%s, %s);4:and[%s,%s];4:size3;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:circle;4:size1;4:size1
'λx.exists(and[not[size1],blue], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:size1;4:blue;3:%s.s;2:x
'λx.apply(nor[triangle,yellow],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:triangle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(and[circle,and[apply(size-gt,x.o),yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:yellow;1:%s.o;2:x
'λx.exists(not[and[and[size2,size2],yellow]], filter(x.s, circle))'	0:exists(%s, %s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:size2;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.forall(blue,filter(filter(filter(x.s, size1), size1), size3))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1;4:size3
'λx.apply(blue,iota(filter(x.s, nor[yellow,not[and[size3,or[blue,and[or[triangle,not[blue]],and[and[apply(same_size,iota(filter(x.s, or[not[apply(same_size,x.o)],blue]))),rectangle],rectangle]]]]]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:yellow;4:not[%s];4:and[%s,%s];4:size3;4:or[%s,%s];4:blue;4:and[%s,%s];4:or[%s,%s];4:triangle;4:not[%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;4:rectangle;4:rectangle
'λx.apply(size1,iota(filter(filter(filter(x.s, yellow), triangle), green)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle;4:green
'λx.apply(iff[implies[not[iff[and[not[circle],rectangle],or[implies[size3,size2],apply(size-leq,iota(filter(x.s, not[and[green,circle]])))]]],green],apply(same_shape,x.o)],iota(filter(filter(filter(x.s, not[triangle]), apply(size-gt,x.o)), circle)))'	0:apply(%s,%s);4:iff[%s,%s];4:implies[%s,%s];4:not[%s];4:iff[%s,%s];4:and[%s,%s];4:not[%s];4:circle;4:rectangle;4:or[%s,%s];4:implies[%s,%s];4:size3;4:size2;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:green;4:circle;4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:circle
'λx.apply(and[or[nor[size3,size1],circle],circle],iota(filter(filter(x.s, and[green,yellow]), size2)))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:nor[%s,%s];4:size3;4:size1;4:circle;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:yellow;4:size2
'λx.apply(or[or[apply(size-lt,x.o),triangle],and[circle,nor[circle,apply(same_color,x.o)]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:triangle;4:and[%s,%s];4:circle;4:nor[%s,%s];4:circle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, size2), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:triangle
'λx.apply(and[not[rectangle],blue],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:rectangle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(not[apply(same_color,iota(filter(x.s, and[implies[not[iff[triangle,not[apply(size-lt,iota(filter(filter(filter(x.s, yellow), nand[triangle,size2]), and[rectangle,yellow])))]]],size2],green])))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:implies[%s,%s];4:not[%s];4:iff[%s,%s];4:triangle;4:not[%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:nand[%s,%s];4:triangle;4:size2;4:and[%s,%s];4:rectangle;4:yellow;4:size2;4:green;1:%s.o;2:x
'λx.apply(not[nand[apply(same_color,x.o),and[or[and[size2,apply(same_color,iota(x.s))],apply(same_size,iota(filter(filter(x.s, yellow), size2)))],not[apply(same_shape,iota(x.s))]]]],iota(filter(x.s, and[rectangle,green])))'	0:apply(%s,%s);4:not[%s];4:nand[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:green
'λx.contains(iota(filter(x.s, and[or[or[or[yellow,size1],nand[triangle,not[triangle]]],nand[size1,size3]],size1])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:yellow;4:size1;4:nand[%s,%s];4:triangle;4:not[%s];4:triangle;4:nand[%s,%s];4:size1;4:size3;4:size1;3:%s.s;2:x
'λx.contains(iota(x.s), filter(x.s, and[size3,rectangle]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:rectangle
'λx.apply(and[and[size3,apply(same_size,x.o)],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow;1:%s.o;2:x
'λx.apply(and[nand[green,rectangle],and[and[circle,yellow],and[triangle,rectangle]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:green;4:rectangle;4:and[%s,%s];4:and[%s,%s];4:circle;4:yellow;4:and[%s,%s];4:triangle;4:rectangle;1:%s.o;2:x
'λx.contains(iota(filter(x.s, not[circle])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;3:%s.s;2:x
'λx.apply(green,iota(filter(filter(x.s, or[triangle,green]), yellow)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:green;4:yellow
'λx.apply(or[triangle,and[rectangle,apply(same_shape,x.o)]],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.forall(green,filter(filter(filter(filter(filter(x.s, size2), rectangle), apply(same_shape,iota(filter(x.s, blue)))), green), size1))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green;4:size1
'λx.apply(or[nor[green,size1],triangle],iota(filter(filter(x.s, or[green,rectangle]), size1)))'	0:apply(%s,%s);4:or[%s,%s];4:nor[%s,%s];4:green;4:size1;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:rectangle;4:size1
'λx.apply(and[nor[size3,triangle],size1],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:size3;4:triangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[rectangle,circle],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:rectangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[apply(same_color,x.o),and[and[iff[size1,size2],green],size2]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:size1;4:size2;4:green;4:size2;1:%s.o;2:x
'λx.forall(size2,filter(filter(x.s, or[yellow,apply(size-leq,iota(filter(x.s, size1)))]), blue))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue
'λx.apply(or[rectangle,and[circle,circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:and[%s,%s];4:circle;4:circle;1:%s.o;2:x
'λx.forall(size2,filter(filter(x.s, iff[yellow,and[green,green]]), circle))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:yellow;4:and[%s,%s];4:green;4:green;4:circle
'λx.apply(and[size2,and[rectangle,size2]],iota(filter(x.s, apply(size-lt,iota(filter(x.s, size2))))))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:rectangle;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(and[not[or[blue,and[rectangle,size2]]],nand[rectangle,size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:or[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:size2;4:nand[%s,%s];4:rectangle;4:size2;1:%s.o;2:x
'λx.apply(and[nor[rectangle,blue],and[or[and[and[triangle,size3],triangle],apply(same_size,iota(filter(filter(x.s, rectangle), not[and[nand[apply(same_shape,iota(x.s)),blue],blue]])))],or[and[and[circle,rectangle],apply(same_color,x.o)],not[not[size2]]]]],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:rectangle;4:blue;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:size3;4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:and[%s,%s];4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:blue;4:blue;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.exists(size2, filter(filter(x.s, yellow), yellow))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:yellow
'λx.apply(and[and[apply(size-lt,x.o),rectangle],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:rectangle;4:rectangle;1:%s.o;2:x
'λx.apply(or[size1,circle],iota(filter(x.s, and[green,apply(size-gt,x.o)])))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:apply(%s,%s);5:size-gt;1:%s.o;2:x
'λx.forall(triangle,filter(filter(x.s, nor[size2,size2]), and[circle,yellow]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size2;4:size2;4:and[%s,%s];4:circle;4:yellow
'λx.apply(triangle,iota(filter(filter(x.s, size3), nor[or[apply(same_color,iota(x.s)),implies[triangle,not[blue]]],size1])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:nor[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:implies[%s,%s];4:triangle;4:not[%s];4:blue;4:size1
'λx.apply(rectangle,iota(filter(x.s, not[size2])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2
'λx.exists(blue, filter(x.s, size2))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.exists(blue, filter(x.s, size1))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(blue, filter(x.s, green))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[yellow,apply(same_color,iota(filter(filter(x.s, triangle), size3)))],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(not[apply(same_color,iota(x.s))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(triangle,iota(filter(x.s, apply(same_shape,x.o))))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(or[and[not[apply(same_shape,x.o)],triangle],apply(size-leq,x.o)],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(and[rectangle,green],iota(filter(filter(x.s, size3), apply(same_color,iota(x.s)))))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x
'λx.apply(or[nand[not[circle],circle],green],iota(filter(filter(x.s, apply(size-lt,iota(filter(filter(x.s, triangle), and[not[and[blue,and[not[yellow],apply(size-leq,iota(x.s))]]],apply(size-leq,iota(filter(filter(x.s, size1), and[or[not[circle],and[not[circle],and[circle,blue]]],size2])))])))), blue)))'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:not[%s];4:circle;4:circle;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:not[%s];4:yellow;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:circle;4:and[%s,%s];4:not[%s];4:circle;4:and[%s,%s];4:circle;4:blue;4:size2;4:blue
'λx.contains(x.o, filter(x.s, not[and[and[apply(same_shape,iota(filter(filter(x.s, size2), circle))),size3],size1]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle;4:size3;4:size1
'λx.forall(or[and[green,apply(same_shape,x.o)],and[yellow,triangle]],filter(filter(filter(x.s, green), size2), circle))'	0:forall(%s,%s);4:or[%s,%s];4:and[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:yellow;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size2;4:circle
'λx.apply(and[circle,and[rectangle,size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:and[%s,%s];4:rectangle;4:size3;1:%s.o;2:x
'λx.exists(nor[or[green,yellow],or[yellow,apply(size-gt,x.o)]], filter(x.s, rectangle))'	0:exists(%s, %s);4:nor[%s,%s];4:or[%s,%s];4:green;4:yellow;4:or[%s,%s];4:yellow;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(or[nand[blue,apply(same_size,x.o)],not[rectangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.apply(and[not[circle],iff[and[circle,yellow],iff[nand[and[blue,or[blue,size1]],blue],and[or[yellow,yellow],circle]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:circle;4:iff[%s,%s];4:and[%s,%s];4:circle;4:yellow;4:iff[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:blue;4:or[%s,%s];4:blue;4:size1;4:blue;4:and[%s,%s];4:or[%s,%s];4:yellow;4:yellow;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(x.s, and[nor[size3,triangle],circle]), not[not[circle]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:nor[%s,%s];4:size3;4:triangle;4:circle;4:not[%s];4:not[%s];4:circle
'λx.apply(and[green,not[not[or[apply(size-lt,iota(filter(x.s, apply(same_size,x.o)))),and[apply(same_shape,iota(filter(x.s, size2))),size3]]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:not[%s];4:not[%s];4:or[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[and[yellow,circle],size2],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:yellow;4:circle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(or[or[apply(size-geq,iota(filter(filter(x.s, and[blue,and[not[rectangle],and[rectangle,nor[and[size2,triangle],green]]]]), triangle))),size1],not[and[size3,triangle]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:and[%s,%s];4:not[%s];4:rectangle;4:and[%s,%s];4:rectangle;4:nor[%s,%s];4:and[%s,%s];4:size2;4:triangle;4:green;4:triangle;4:size1;4:not[%s];4:and[%s,%s];4:size3;4:triangle;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(x.s, and[blue,not[rectangle]]), circle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:not[%s];4:rectangle;4:circle
'λx.apply(and[apply(size-gt,x.o),size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:size3;1:%s.o;2:x
'λx.apply(and[green,implies[and[yellow,blue],size1]],iota(filter(filter(filter(x.s, and[and[triangle,size1],and[blue,triangle]]), yellow), green)))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:implies[%s,%s];4:and[%s,%s];4:yellow;4:blue;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:triangle;4:size1;4:and[%s,%s];4:blue;4:triangle;4:yellow;4:green
'λx.apply(circle,iota(filter(filter(x.s, and[size1,rectangle]), apply(same_size,x.o))))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:rectangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(and[green,and[circle,blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:circle;4:blue;1:%s.o;2:x
'λx.apply(and[and[and[triangle,green],or[yellow,and[and[circle,size3],and[not[triangle],size3]]]],or[size3,nand[nor[triangle,or[not[size3],blue]],rectangle]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:green;4:or[%s,%s];4:yellow;4:and[%s,%s];4:and[%s,%s];4:circle;4:size3;4:and[%s,%s];4:not[%s];4:triangle;4:size3;4:or[%s,%s];4:size3;4:nand[%s,%s];4:nor[%s,%s];4:triangle;4:or[%s,%s];4:not[%s];4:size3;4:blue;4:rectangle;1:%s.o;2:x
'λx.apply(and[size3,iff[blue,and[triangle,not[rectangle]]]],iota(filter(x.s, green)))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:iff[%s,%s];4:blue;4:and[%s,%s];4:triangle;4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(size2,iota(filter(filter(x.s, apply(same_color,iota(x.s))), yellow)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:yellow
'λx.apply(implies[apply(size-geq,iota(x.s)),size3],iota(filter(filter(x.s, triangle), apply(size-leq,iota(x.s)))))'	0:apply(%s,%s);4:implies[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x
'λx.forall(or[and[blue,size1],implies[size1,rectangle]],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:and[%s,%s];4:blue;4:size1;4:implies[%s,%s];4:size1;4:rectangle;3:%s.s;2:x
'λx.exists(size2, filter(filter(filter(filter(filter(x.s, apply(size-leq,x.o)), size1), and[and[size3,and[green,size3]],yellow]), green), or[and[apply(same_color,iota(filter(x.s, circle))),implies[rectangle,green]],circle]))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size1;4:and[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:green;4:size3;4:yellow;4:green;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:implies[%s,%s];4:rectangle;4:green;4:circle
'λx.apply(not[or[yellow,triangle]],iota(filter(filter(x.s, rectangle), green)))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:yellow;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green
'λx.empty(filter(x.s, not[or[apply(same_color,x.o),size3]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3
'λx.exists(not[iff[circle,apply(same_size,iota(filter(filter(x.s, size2), apply(size-geq,iota(filter(filter(x.s, or[size2,not[and[and[size1,not[size2]],green]]]), yellow))))))]], x.s)'	0:exists(%s, %s);4:not[%s];4:iff[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:not[%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:not[%s];4:size2;4:green;4:yellow;3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, apply(size-lt,x.o)), apply(same_shape,iota(x.s)))))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.forall(green,filter(x.s, yellow))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.contains(iota(x.s), filter(filter(x.s, size2), rectangle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle
'λx.apply(and[blue,or[blue,apply(same_color,iota(x.s))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:or[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.forall(triangle,filter(x.s, or[size2,and[triangle,or[not[size1],or[or[size1,rectangle],and[size1,and[triangle,circle]]]]]]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:and[%s,%s];4:triangle;4:or[%s,%s];4:not[%s];4:size1;4:or[%s,%s];4:or[%s,%s];4:size1;4:rectangle;4:and[%s,%s];4:size1;4:and[%s,%s];4:triangle;4:circle
'λx.apply(blue,iota(filter(filter(filter(filter(filter(filter(x.s, yellow), apply(size-gt,iota(x.s))), blue), apply(same_shape,iota(filter(filter(x.s, and[yellow,size1]), rectangle)))), circle), size2)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size1;4:rectangle;4:circle;4:size2
'λx.exists(and[size2,apply(same_color,iota(x.s))], filter(x.s, and[apply(same_shape,x.o),circle]))'	0:exists(%s, %s);4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle
'λx.contains(iota(filter(filter(x.s, size1), circle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle;3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(filter(filter(filter(filter(filter(x.s, size1), size3), size3), not[size1]), and[and[and[size1,size3],size1],or[green,rectangle]]), size2), blue)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size3;4:size3;4:not[%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:size3;4:size1;4:or[%s,%s];4:green;4:rectangle;4:size2;4:blue
'λx.apply(and[triangle,or[triangle,or[apply(same_size,iota(x.s)),and[and[triangle,yellow],triangle]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:or[%s,%s];4:triangle;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:triangle;4:yellow;4:triangle;1:%s.o;2:x
'λx.apply(nor[green,yellow],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:green;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.exists(size3, filter(filter(x.s, rectangle), not[or[and[circle,and[and[nand[green,nor[yellow,blue]],apply(same_size,iota(filter(x.s, green)))],triangle]],size3]]))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:nand[%s,%s];4:green;4:nor[%s,%s];4:yellow;4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:triangle;4:size3
'λx.apply(triangle,iota(filter(filter(filter(x.s, circle), size3), green)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3;4:green
'λx.apply(implies[yellow,not[or[and[and[green,green],triangle],triangle]]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:yellow;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:green;4:triangle;4:triangle;1:%s.o;2:x
'λx.forall(and[apply(same_shape,x.o),rectangle],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle;3:%s.s;2:x
'λx.apply(and[not[size2],size2],iota(filter(filter(x.s, rectangle), circle)))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size2;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle
'λx.apply(nor[triangle,triangle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:triangle;4:triangle;1:%s.o;2:x
'λx.apply(not[or[and[size2,size3],blue]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:and[%s,%s];4:size2;4:size3;4:blue;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(x.s), filter(x.s, not[size2]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2
'λx.contains(iota(x.s), filter(x.s, not[green]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green
'λx.apply(and[apply(same_size,x.o),apply(same_size,x.o)],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[circle,not[size2]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:circle;4:not[%s];4:size2;1:%s.o;2:x
'λx.exists(yellow, filter(filter(filter(filter(x.s, rectangle), size3), size3), apply(size-leq,iota(x.s))))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3;4:size3;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x
'λx.apply(and[green,or[nand[not[not[size3]],blue],rectangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:green;4:or[%s,%s];4:nand[%s,%s];4:not[%s];4:not[%s];4:size3;4:blue;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size2,and[size1,green]],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:and[%s,%s];4:size1;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(apply(same_color,x.o),iota(filter(x.s, and[green,circle])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:circle
'λx.apply(and[apply(same_size,x.o),apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[and[apply(same_color,iota(filter(x.s, blue))),size2],implies[and[triangle,rectangle],size1]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2;4:implies[%s,%s];4:and[%s,%s];4:triangle;4:rectangle;4:size1;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_shape,iota(filter(x.s, size1))),iota(filter(x.s, or[not[not[blue]],size1])))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:not[%s];4:blue;4:size1
'λx.apply(size2,iota(filter(x.s, apply(size-leq,iota(filter(filter(filter(x.s, size3), and[green,or[rectangle,size1]]), nand[blue,circle]))))))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:green;4:or[%s,%s];4:rectangle;4:size1;4:nand[%s,%s];4:blue;4:circle
'λx.apply(rectangle,iota(filter(filter(x.s, rectangle), and[circle,triangle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:circle;4:triangle
'λx.apply(nor[size3,not[size2]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size3;4:not[%s];4:size2;1:%s.o;2:x
'λx.apply(nor[size3,not[size1]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size3;4:not[%s];4:size1;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(filter(filter(filter(x.s, or[size2,apply(same_size,iota(filter(x.s, size3)))]), size1), apply(same_size,iota(x.s))), and[circle,yellow]), size3)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:yellow;4:size3
'λx.apply(or[or[green,or[rectangle,yellow]],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:green;4:or[%s,%s];4:rectangle;4:yellow;4:blue;1:%s.o;2:x
'λx.apply(and[rectangle,blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:blue;1:%s.o;2:x
'λx.apply(not[and[apply(same_shape,iota(x.s)),yellow]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:yellow;1:%s.o;2:x
'λx.apply(apply(size-geq,x.o),iota(filter(filter(filter(x.s, size1), and[or[size2,blue],and[apply(same_size,iota(x.s)),green]]), and[size1,and[and[rectangle,triangle],rectangle]])))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:or[%s,%s];4:size2;4:blue;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:green;4:and[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:triangle;4:rectangle
'λx.apply(apply(same_color,x.o),iota(filter(x.s, size3)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(apply(same_color,x.o),iota(filter(x.s, green)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[and[size2,not[size2]],green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size2;4:not[%s];4:size2;4:green;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(x.s, size1), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size3
'λx.empty(filter(filter(x.s, size1), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2
'λx.empty(filter(filter(x.s, size1), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1
'λx.empty(filter(filter(x.s, size2), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1
'λx.empty(filter(filter(x.s, size2), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3
'λx.empty(filter(filter(x.s, size3), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2
'λx.empty(filter(filter(x.s, size3), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size1
'λx.empty(filter(filter(x.s, size2), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green
'λx.apply(and[nor[green,rectangle],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nor[%s,%s];4:green;4:rectangle;4:size1;1:%s.o;2:x
'λx.apply(and[blue,yellow],iota(filter(x.s, green)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[and[rectangle,green],and[size2,yellow]],iota(filter(filter(x.s, circle), circle)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:rectangle;4:green;4:and[%s,%s];4:size2;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:circle
'λx.exists(or[blue,size3], filter(x.s, green))'	0:exists(%s, %s);4:or[%s,%s];4:blue;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(or[green,nor[green,triangle]],iota(filter(x.s, green)))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:nor[%s,%s];4:green;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(not[not[blue]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:blue;1:%s.o;2:x
'λx.apply(triangle,iota(filter(x.s, and[or[size3,size3],yellow])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:size3;4:size3;4:yellow
'λx.apply(size1,iota(filter(filter(filter(x.s, green), and[not[and[blue,and[size3,circle]]],blue]), size2)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:size3;4:circle;4:blue;4:size2
'λx.apply(implies[size1,implies[triangle,triangle]],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:size1;4:implies[%s,%s];4:triangle;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[circle,apply(size-lt,iota(x.s))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.forall(or[iff[not[or[triangle,apply(size-leq,x.o)]],apply(same_size,iota(filter(filter(x.s, size2), size3)))],size2],filter(filter(x.s, size3), triangle))'	0:forall(%s,%s);4:or[%s,%s];4:iff[%s,%s];4:not[%s];4:or[%s,%s];4:triangle;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle
'λx.apply(yellow,iota(filter(filter(filter(x.s, size1), circle), yellow)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle;4:yellow
'λx.forall(and[apply(same_shape,iota(x.s)),and[nand[circle,yellow],and[circle,size1]]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:nand[%s,%s];4:circle;4:yellow;4:and[%s,%s];4:circle;4:size1;3:%s.s;2:x
'λx.exists(and[size1,nand[not[yellow],yellow]], filter(filter(filter(filter(x.s, and[size3,size1]), size2), yellow), green))'	0:exists(%s, %s);4:and[%s,%s];4:size1;4:nand[%s,%s];4:not[%s];4:yellow;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:size1;4:size2;4:yellow;4:green
'λx.apply(not[size3],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(not[size2],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(or[and[apply(same_shape,x.o),yellow],yellow],iota(filter(filter(x.s, apply(same_shape,iota(filter(filter(filter(x.s, not[or[not[circle],rectangle]]), and[not[and[size1,nand[apply(size-geq,x.o),green]]],and[size3,and[size1,size3]]]), rectangle)))), yellow)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:not[%s];4:circle;4:rectangle;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:size1;4:nand[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:green;4:and[%s,%s];4:size3;4:and[%s,%s];4:size1;4:size3;4:rectangle;4:yellow
'λx.apply(not[nand[and[size1,circle],nor[yellow,size2]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:nand[%s,%s];4:and[%s,%s];4:size1;4:circle;4:nor[%s,%s];4:yellow;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[green,and[and[and[triangle,implies[and[size2,apply(same_color,iota(x.s))],blue]],size1],or[nor[and[circle,triangle],size3],yellow]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:implies[%s,%s];4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:blue;4:size1;4:or[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:circle;4:triangle;4:size3;4:yellow;1:%s.o;2:x
'λx.apply(or[apply(size-gt,iota(x.s)),rectangle],iota(filter(x.s, or[and[or[blue,nor[size2,not[blue]]],nor[blue,size1]],iff[not[yellow],and[and[and[size2,triangle],circle],yellow]]])))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:blue;4:nor[%s,%s];4:size2;4:not[%s];4:blue;4:nor[%s,%s];4:blue;4:size1;4:iff[%s,%s];4:not[%s];4:yellow;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:triangle;4:circle;4:yellow
'λx.apply(iff[size2,and[not[circle],blue]],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:size2;4:and[%s,%s];4:not[%s];4:circle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(and[or[size2,and[yellow,size3]],size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size2;4:and[%s,%s];4:yellow;4:size3;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[iff[blue,triangle],not[triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:blue;4:triangle;4:not[%s];4:triangle;1:%s.o;2:x
'λx.empty(filter(filter(x.s, circle), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue
'λx.apply(iff[green,green],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:green;4:green;1:%s.o;2:x
'λx.apply(or[size3,size2],iota(filter(x.s, or[size3,iff[apply(same_size,iota(filter(filter(filter(x.s, circle), size3), rectangle))),or[triangle,triangle]]])))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:iff[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3;4:rectangle;4:or[%s,%s];4:triangle;4:triangle
'λx.exists(not[circle], x.s)'	0:exists(%s, %s);4:not[%s];4:circle;3:%s.s;2:x
'λx.apply(and[and[circle,size3],apply(same_shape,iota(filter(filter(x.s, blue), size3)))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3;1:%s.o;2:x
'λx.apply(iff[not[size2],size3],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:not[%s];4:size2;4:size3;1:%s.o;2:x
'λx.apply(iff[not[size2],size2],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:not[%s];4:size2;4:size2;1:%s.o;2:x
'λx.apply(and[apply(size-leq,iota(x.s)),green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:green;1:%s.o;2:x
'λx.exists(blue, filter(filter(x.s, size3), not[triangle]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:triangle
'λx.contains(x.o, filter(filter(x.s, nor[size3,nand[iff[size1,circle],circle]]), size3))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:size3;4:nand[%s,%s];4:iff[%s,%s];4:size1;4:circle;4:circle;4:size3
'λx.apply(rectangle,iota(filter(filter(x.s, and[blue,rectangle]), size3)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:rectangle;4:size3
'λx.apply(or[blue,or[or[circle,not[triangle]],green]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:or[%s,%s];4:or[%s,%s];4:circle;4:not[%s];4:triangle;4:green;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(filter(x.s, size2), not[green]), yellow), implies[and[apply(same_shape,iota(filter(x.s, blue))),blue],size3]), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:not[%s];4:green;4:yellow;4:implies[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue;4:size3;4:triangle
'λx.apply(size3,iota(filter(x.s, not[yellow])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow
'λx.apply(iff[rectangle,blue],iota(filter(x.s, iff[apply(same_color,x.o),circle])))'	0:apply(%s,%s);4:iff[%s,%s];4:rectangle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle
'λx.apply(or[size1,or[size2,or[and[rectangle,size1],green]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:or[%s,%s];4:size2;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:size1;4:green;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, not[size1])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1
'λx.apply(circle,iota(filter(x.s, not[size2])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2
'λx.contains(iota(filter(x.s, and[and[and[nor[rectangle,yellow],and[and[blue,and[blue,and[size3,and[yellow,size3]]]],apply(same_color,iota(filter(x.s, or[implies[and[circle,and[size3,rectangle]],size3],and[triangle,rectangle]])))]],and[triangle,triangle]],apply(same_color,x.o)])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:rectangle;4:yellow;4:and[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:blue;4:and[%s,%s];4:size3;4:and[%s,%s];4:yellow;4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:size3;4:rectangle;4:size3;4:and[%s,%s];4:triangle;4:rectangle;4:and[%s,%s];4:triangle;4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:%s.s;2:x
'λx.exists(not[apply(same_shape,x.o)], filter(filter(filter(x.s, apply(same_shape,iota(x.s))), circle), size3))'	0:exists(%s, %s);4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle;4:size3
'λx.apply(not[and[rectangle,and[and[size1,yellow],yellow]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:size1;4:yellow;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, triangle), green), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green;4:blue
'λx.apply(apply(same_color,x.o),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(or[green,iff[size2,implies[apply(same_color,x.o),blue]]],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:iff[%s,%s];4:size2;4:implies[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.empty(filter(x.s, apply(size-lt,iota(filter(x.s, size2)))))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.forall(and[rectangle,size1],filter(x.s, size1))'	0:forall(%s,%s);4:and[%s,%s];4:rectangle;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(triangle, filter(filter(filter(x.s, and[blue,blue]), green), circle))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:blue;4:green;4:circle
'λx.apply(and[blue,size3],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.exists(apply(same_color,iota(x.s)), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(circle,iota(filter(x.s, and[size2,or[or[size3,not[blue]],nor[and[and[green,size1],rectangle],size1]]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:or[%s,%s];4:or[%s,%s];4:size3;4:not[%s];4:blue;4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:size1;4:rectangle;4:size1
'λx.forall(not[apply(size-gt,x.o)],x.s)'	0:forall(%s,%s);4:not[%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(x.s, or[size3,size2]), and[size2,yellow])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:size2;4:and[%s,%s];4:size2;4:yellow
'λx.apply(implies[blue,blue],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:implies[%s,%s];4:blue;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.exists(and[or[rectangle,size2],size2], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:or[%s,%s];4:rectangle;4:size2;4:size2;3:%s.s;2:x
'λx.apply(or[size3,size1],iota(filter(filter(x.s, circle), circle)))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:circle
'λx.forall(and[not[rectangle],rectangle],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:not[%s];4:rectangle;4:rectangle;3:%s.s;2:x
'λx.apply(not[green],iota(filter(filter(x.s, size2), circle)))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle
'λx.apply(or[nand[or[not[size2],not[and[size1,apply(same_color,x.o)]]],yellow],and[apply(size-leq,iota(x.s)),green]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:not[%s];4:size2;4:not[%s];4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[circle,size1],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:circle;4:size1;1:%s.o;2:x
'λx.forall(implies[size1,green],x.s)'	0:forall(%s,%s);4:implies[%s,%s];4:size1;4:green;3:%s.s;2:x
'λx.contains(iota(x.s), filter(x.s, and[circle,green]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:green
'λx.apply(size2,iota(filter(filter(filter(x.s, or[triangle,size1]), yellow), yellow)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:size1;4:yellow;4:yellow
'λx.apply(and[size1,yellow],iota(filter(x.s, or[nand[rectangle,apply(same_color,x.o)],triangle])))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:nand[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle
'λx.empty(filter(filter(filter(filter(x.s, green), blue), size1), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue;4:size1;4:rectangle
'λx.apply(yellow,iota(filter(filter(x.s, blue), triangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle
'λx.empty(filter(filter(x.s, triangle), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle
'λx.apply(green,iota(filter(x.s, not[yellow])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow
'λx.apply(nor[size1,yellow],iota(filter(filter(x.s, nand[nor[apply(same_size,x.o),apply(same_shape,iota(filter(x.s, or[rectangle,not[not[size2]]])))],apply(size-leq,iota(filter(x.s, not[and[not[blue],yellow]])))]), blue)))'	0:apply(%s,%s);4:nor[%s,%s];4:size1;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:not[%s];4:not[%s];4:size2;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:not[%s];4:blue;4:yellow;4:blue
'λx.apply(and[green,or[and[triangle,and[iff[circle,and[yellow,green]],green]],size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:or[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:iff[%s,%s];4:circle;4:and[%s,%s];4:yellow;4:green;4:green;4:size1;1:%s.o;2:x
'λx.apply(or[rectangle,blue],iota(filter(filter(filter(filter(x.s, or[apply(same_shape,iota(x.s)),triangle]), and[nand[and[size3,not[green]],and[iff[yellow,or[blue,circle]],size2]],nor[circle,size3]]), blue), nand[size3,yellow])))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:nand[%s,%s];4:and[%s,%s];4:size3;4:not[%s];4:green;4:and[%s,%s];4:iff[%s,%s];4:yellow;4:or[%s,%s];4:blue;4:circle;4:size2;4:nor[%s,%s];4:circle;4:size3;4:blue;4:nand[%s,%s];4:size3;4:yellow
'λx.apply(green,iota(filter(filter(filter(x.s, size3), size1), size2)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size1;4:size2
'λx.exists(apply(same_color,iota(filter(x.s, rectangle))), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;3:%s.s;2:x
'λx.apply(implies[size3,and[size3,yellow]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size3;4:and[%s,%s];4:size3;4:yellow;1:%s.o;2:x
'λx.apply(and[nand[size2,size1],rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:size2;4:size1;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[triangle,not[and[rectangle,rectangle]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:not[%s];4:and[%s,%s];4:rectangle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(filter(x.s, or[size3,nor[size2,triangle]]), size3), rectangle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:nor[%s,%s];4:size2;4:triangle;4:size3;4:rectangle
'λx.contains(iota(filter(filter(filter(filter(x.s, or[and[and[rectangle,implies[green,not[and[not[blue],size1]]]],size3],size3]), size3), rectangle), size1)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:implies[%s,%s];4:green;4:not[%s];4:and[%s,%s];4:not[%s];4:blue;4:size1;4:size3;4:size3;4:size3;4:rectangle;4:size1;3:%s.s;2:x
'λx.apply(and[circle,circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[rectangle,rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:rectangle;1:%s.o;2:x
'λx.apply(or[blue,not[yellow]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:not[%s];4:yellow;1:%s.o;2:x
'λx.apply(and[not[circle],and[size3,yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:circle;4:and[%s,%s];4:size3;4:yellow;1:%s.o;2:x
'λx.exists(apply(same_size,x.o), filter(x.s, nor[not[size1],and[triangle,size2]]))'	0:exists(%s, %s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:not[%s];4:size1;4:and[%s,%s];4:triangle;4:size2
'λx.apply(or[apply(same_shape,iota(x.s)),and[size3,or[and[or[yellow,and[green,circle]],blue],or[rectangle,apply(same_size,iota(filter(filter(x.s, rectangle), and[nor[blue,not[not[green]]],not[nand[apply(same_color,iota(filter(x.s, and[blue,rectangle]))),or[size1,green]]]])))]]]],iota(filter(x.s, green)))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:yellow;4:and[%s,%s];4:green;4:circle;4:blue;4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:nor[%s,%s];4:blue;4:not[%s];4:not[%s];4:green;4:not[%s];4:nand[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:rectangle;4:or[%s,%s];4:size1;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.contains(iota(filter(filter(x.s, circle), size3)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3;3:%s.s;2:x
'λx.contains(iota(filter(filter(x.s, circle), size2)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size2;3:%s.s;2:x
'λx.apply(iff[yellow,nand[circle,nand[apply(same_color,iota(x.s)),size3]]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:yellow;4:nand[%s,%s];4:circle;4:nand[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size3;1:%s.o;2:x
'λx.forall(iff[and[green,nor[size1,not[circle]]],and[circle,not[or[implies[not[blue],yellow],size1]]]],x.s)'	0:forall(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:green;4:nor[%s,%s];4:size1;4:not[%s];4:circle;4:and[%s,%s];4:circle;4:not[%s];4:or[%s,%s];4:implies[%s,%s];4:not[%s];4:blue;4:yellow;4:size1;3:%s.s;2:x
'λx.apply(and[and[and[rectangle,or[size1,rectangle]],green],size3],iota(filter(filter(x.s, apply(size-lt,x.o)), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:or[%s,%s];4:size1;4:rectangle;4:green;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:blue
'λx.contains(x.o, filter(filter(x.s, not[and[size3,apply(same_color,iota(filter(x.s, not[blue])))]]), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:green
'λx.contains(x.o, filter(x.s, and[green,size1]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:size1
'λx.contains(x.o, filter(x.s, and[green,size3]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:size3
'λx.apply(size3,iota(filter(filter(filter(filter(x.s, yellow), size3), yellow), green)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size3;4:yellow;4:green
'λx.apply(and[yellow,blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:blue;1:%s.o;2:x
'λx.forall(size2,filter(filter(x.s, green), green))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:green
'λx.forall(size1,filter(filter(x.s, green), size2))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size2
'λx.apply(triangle,iota(filter(filter(filter(x.s, size2), blue), yellow)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue;4:yellow
'λx.apply(green,iota(filter(filter(filter(x.s, circle), blue), circle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue;4:circle
'λx.apply(not[and[green,or[circle,size2]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:green;4:or[%s,%s];4:circle;4:size2;1:%s.o;2:x
'λx.apply(apply(size-gt,iota(filter(x.s, size3))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, and[and[not[blue],triangle],or[triangle,yellow]]), nor[rectangle,green])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:blue;4:triangle;4:or[%s,%s];4:triangle;4:yellow;4:nor[%s,%s];4:rectangle;4:green
'λx.apply(triangle,iota(filter(x.s, nand[and[implies[size1,size1],implies[rectangle,circle]],apply(same_size,x.o)])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:and[%s,%s];4:implies[%s,%s];4:size1;4:size1;4:implies[%s,%s];4:rectangle;4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.apply(and[and[triangle,triangle],and[blue,and[triangle,apply(same_color,x.o)]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:triangle;4:and[%s,%s];4:blue;4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(or[blue,apply(same_color,x.o)],iota(filter(filter(filter(x.s, yellow), circle), green)))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle;4:green
'λx.apply(and[triangle,and[size3,green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:size3;4:green;1:%s.o;2:x
'λx.exists(or[size2,and[and[triangle,circle],yellow]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:triangle;4:circle;4:yellow;3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, circle), and[apply(size-leq,x.o),size2]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:size2
'λx.apply(and[and[blue,and[blue,and[yellow,blue]]],nor[size2,size2]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:blue;4:and[%s,%s];4:yellow;4:blue;4:nor[%s,%s];4:size2;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[yellow,circle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:yellow;4:circle;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, green), and[circle,yellow]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:circle;4:yellow
'λx.apply(and[not[rectangle],size2],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:rectangle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(not[implies[blue,blue]],x.o)'	0:apply(%s,%s);4:not[%s];4:implies[%s,%s];4:blue;4:blue;1:%s.o;2:x
'λx.forall(circle,filter(filter(x.s, size2), not[and[nor[apply(same_color,iota(x.s)),blue],size2]]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:not[%s];4:and[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:blue;4:size2
'λx.apply(apply(same_color,iota(filter(filter(filter(filter(filter(x.s, implies[and[circle,blue],yellow]), green), and[rectangle,triangle]), blue), triangle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:and[%s,%s];4:circle;4:blue;4:yellow;4:green;4:and[%s,%s];4:rectangle;4:triangle;4:blue;4:triangle;1:%s.o;2:x
'λx.apply(nand[triangle,rectangle],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:triangle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(size2,iota(filter(filter(filter(x.s, rectangle), size1), blue)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1;4:blue
'λx.apply(and[or[size3,size1],size3],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size3;4:size1;4:size3;1:iota(%s);3:%s.s;2:x
'λx.forall(blue,x.s)'	0:forall(%s,%s);4:blue;3:%s.s;2:x
'λx.apply(green,iota(filter(filter(x.s, rectangle), circle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle
'λx.exists(nor[and[blue,and[yellow,size1]],nor[triangle,not[size2]]], x.s)'	0:exists(%s, %s);4:nor[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:yellow;4:size1;4:nor[%s,%s];4:triangle;4:not[%s];4:size2;3:%s.s;2:x
'λx.apply(nor[triangle,not[iff[blue,and[apply(same_shape,x.o),circle]]]],iota(filter(x.s, and[not[circle],yellow])))'	0:apply(%s,%s);4:nor[%s,%s];4:triangle;4:not[%s];4:iff[%s,%s];4:blue;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:circle;4:yellow
'λx.exists(green, filter(filter(x.s, size1), and[size1,yellow]))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:size1;4:yellow
'λx.apply(apply(size-geq,x.o),iota(filter(x.s, not[triangle])))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.apply(and[triangle,yellow],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.forall(triangle,filter(x.s, apply(same_color,x.o)))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(filter(filter(filter(filter(x.s, yellow), triangle), size1), circle), circle), green)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle;4:size1;4:circle;4:circle;4:green
'λx.apply(and[nand[circle,and[circle,triangle]],not[or[nor[circle,and[rectangle,or[circle,size3]]],size3]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:circle;4:and[%s,%s];4:circle;4:triangle;4:not[%s];4:or[%s,%s];4:nor[%s,%s];4:circle;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:circle;4:size3;4:size3;1:%s.o;2:x
'λx.apply(and[size3,circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:circle;1:%s.o;2:x
'λx.exists(nand[yellow,and[green,triangle]], x.s)'	0:exists(%s, %s);4:nand[%s,%s];4:yellow;4:and[%s,%s];4:green;4:triangle;3:%s.s;2:x
'λx.apply(and[size1,circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:circle;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(filter(filter(filter(x.s, nand[apply(size-gt,x.o),green]), circle), triangle), size1), blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:green;4:circle;4:triangle;4:size1;4:blue
'λx.apply(rectangle,iota(filter(x.s, nand[blue,circle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:blue;4:circle
'λx.apply(green,iota(filter(filter(x.s, not[circle]), size3)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:size3
'λx.apply(size2,iota(filter(x.s, or[and[yellow,yellow],circle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:yellow;4:yellow;4:circle
'λx.empty(filter(x.s, and[rectangle,circle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:circle
'λx.apply(and[and[or[and[apply(size-geq,iota(filter(x.s, implies[blue,size3]))),apply(same_shape,iota(filter(filter(x.s, blue), size2)))],or[and[apply(same_color,iota(x.s)),blue],blue]],and[size1,yellow]],and[circle,not[and[rectangle,circle]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:blue;4:size3;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:blue;4:blue;4:and[%s,%s];4:size1;4:yellow;4:and[%s,%s];4:circle;4:not[%s];4:and[%s,%s];4:rectangle;4:circle;1:%s.o;2:x
'λx.contains(iota(filter(x.s, and[rectangle,size3])), filter(filter(filter(x.s, rectangle), or[apply(same_shape,iota(x.s)),and[size3,green]]), size2))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:green;4:size2
'λx.apply(and[not[triangle],circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:triangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(x.s, blue), green)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green
'λx.apply(circle,iota(filter(filter(x.s, blue), size2)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2
'λx.apply(circle,iota(filter(filter(x.s, blue), size1)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1
'λx.apply(apply(same_shape,iota(filter(filter(filter(filter(x.s, not[apply(same_shape,x.o)]), triangle), circle), nor[size1,triangle]))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle;4:circle;4:nor[%s,%s];4:size1;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(x.s, apply(same_size,x.o)), blue)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue
'λx.forall(or[apply(same_color,x.o),yellow],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:yellow;3:%s.s;2:x
'λx.forall(apply(same_size,x.o),filter(x.s, apply(size-lt,iota(filter(filter(x.s, size1), blue)))))'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue
'λx.empty(filter(x.s, iff[and[size3,size1],size3]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:and[%s,%s];4:size3;4:size1;4:size3
'λx.apply(size1,iota(filter(filter(x.s, rectangle), nor[size3,nand[blue,triangle]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:nor[%s,%s];4:size3;4:nand[%s,%s];4:blue;4:triangle
'λx.apply(iff[size3,apply(size-leq,iota(x.s))],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:size3;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(filter(x.s, size3), apply(same_color,iota(filter(x.s, blue)))), circle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle
'λx.apply(and[size1,not[size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:not[%s];4:size1;1:%s.o;2:x
'λx.apply(and[size2,not[size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:not[%s];4:size3;1:%s.o;2:x
'λx.apply(nor[size3,yellow],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:size3;4:yellow;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, or[size1,circle]), or[and[iff[green,size1],green],not[iff[triangle,triangle]]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:circle;4:or[%s,%s];4:and[%s,%s];4:iff[%s,%s];4:green;4:size1;4:green;4:not[%s];4:iff[%s,%s];4:triangle;4:triangle
'λx.apply(and[not[and[yellow,size1]],blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:yellow;4:size1;4:blue;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(x.s, nor[and[nor[size1,size2],size1],circle]), yellow)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:size1;4:size2;4:size1;4:circle;4:yellow;3:%s.s;2:x
'λx.apply(apply(same_color,iota(filter(filter(filter(filter(filter(filter(x.s, and[blue,size2]), and[size1,yellow]), blue), circle), size1), blue))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size2;4:and[%s,%s];4:size1;4:yellow;4:blue;4:circle;4:size1;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size3,triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[size1,triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.exists(iff[circle,implies[yellow,and[size3,yellow]]], x.s)'	0:exists(%s, %s);4:iff[%s,%s];4:circle;4:implies[%s,%s];4:yellow;4:and[%s,%s];4:size3;4:yellow;3:%s.s;2:x
'λx.apply(size2,iota(filter(x.s, or[size3,circle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:circle
'λx.apply(and[or[and[triangle,triangle],size1],and[and[green,apply(same_shape,iota(filter(filter(filter(x.s, triangle), or[rectangle,not[circle]]), not[size1])))],blue]],iota(filter(filter(x.s, green), and[and[and[circle,apply(same_size,x.o)],triangle],size3])))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:triangle;4:triangle;4:size1;4:and[%s,%s];4:and[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:or[%s,%s];4:rectangle;4:not[%s];4:circle;4:not[%s];4:size1;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:triangle;4:size3
'λx.apply(apply(same_shape,iota(filter(filter(filter(filter(x.s, or[size2,apply(same_shape,iota(x.s))]), size3), iff[size2,and[rectangle,size3]]), size1))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size3;4:iff[%s,%s];4:size2;4:and[%s,%s];4:rectangle;4:size3;4:size1;1:%s.o;2:x
'λx.contains(x.o, filter(filter(filter(filter(x.s, green), circle), or[blue,size3]), circle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:circle;4:or[%s,%s];4:blue;4:size3;4:circle
'λx.forall(size2,filter(x.s, apply(size-geq,iota(filter(filter(filter(filter(x.s, size1), green), circle), circle)))))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green;4:circle;4:circle
'λx.apply(and[iff[and[triangle,blue],iff[size1,size1]],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:triangle;4:blue;4:iff[%s,%s];4:size1;4:size1;4:circle;1:%s.o;2:x
'λx.apply(implies[not[size2],nand[circle,size1]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:not[%s];4:size2;4:nand[%s,%s];4:circle;4:size1;1:%s.o;2:x
'λx.forall(apply(same_size,x.o),filter(x.s, size1))'	0:forall(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(and[size2,triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[blue,and[green,or[blue,nand[size2,size2]]]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:and[%s,%s];4:green;4:or[%s,%s];4:blue;4:nand[%s,%s];4:size2;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_color,iota(x.s)),iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(circle,iota(filter(filter(filter(x.s, size2), size2), triangle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size2;4:triangle
'λx.apply(circle,iota(filter(x.s, not[and[triangle,size3]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:triangle;4:size3
'λx.apply(and[size2,circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(size1,iota(filter(filter(filter(filter(filter(filter(filter(x.s, circle), blue), size1), size1), not[circle]), triangle), implies[or[and[and[size2,or[apply(same_shape,iota(x.s)),not[green]]],blue],blue],green])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue;4:size1;4:size1;4:not[%s];4:circle;4:triangle;4:implies[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:not[%s];4:green;4:blue;4:blue;4:green
'λx.apply(green,iota(filter(filter(filter(x.s, size2), and[size2,green]), triangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:size2;4:green;4:triangle
'λx.apply(triangle,iota(filter(filter(filter(x.s, green), nand[nor[or[or[and[circle,or[and[size2,apply(size-gt,iota(x.s))],and[circle,size2]]],and[nor[apply(same_size,x.o),size3],not[apply(same_color,x.o)]]],not[triangle]],blue],and[circle,not[rectangle]]]), or[size3,size1])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:nand[%s,%s];4:nor[%s,%s];4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:circle;4:or[%s,%s];4:and[%s,%s];4:size2;4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size2;4:and[%s,%s];4:nor[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;4:not[%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:triangle;4:blue;4:and[%s,%s];4:circle;4:not[%s];4:rectangle;4:or[%s,%s];4:size3;4:size1
'λx.exists(and[rectangle,and[and[circle,size2],size2]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:circle;4:size2;4:size2;3:%s.s;2:x
'λx.contains(iota(filter(filter(filter(x.s, or[size3,and[size2,and[blue,yellow]]]), circle), apply(same_color,iota(x.s)))), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:and[%s,%s];4:size2;4:and[%s,%s];4:blue;4:yellow;4:circle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(or[not[and[circle,green]],and[or[or[green,size1],and[rectangle,not[nand[size2,rectangle]]]],circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:and[%s,%s];4:circle;4:green;4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:green;4:size1;4:and[%s,%s];4:rectangle;4:not[%s];4:nand[%s,%s];4:size2;4:rectangle;4:circle;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, apply(same_shape,x.o)), size3), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3;4:size2
'λx.apply(nand[green,triangle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:green;4:triangle;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, green), implies[or[apply(size-geq,iota(x.s)),triangle],yellow]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:implies[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x;4:triangle;4:yellow
'λx.apply(and[and[and[yellow,apply(same_color,iota(x.s))],yellow],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:yellow;4:yellow;1:%s.o;2:x
'λx.contains(iota(filter(x.s, size1)), filter(filter(filter(filter(filter(x.s, and[blue,blue]), and[size1,yellow]), rectangle), size1), yellow))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:blue;4:and[%s,%s];4:size1;4:yellow;4:rectangle;4:size1;4:yellow
'λx.apply(or[iff[apply(same_size,iota(x.s)),apply(same_color,iota(filter(filter(x.s, rectangle), size3)))],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:iff[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3;4:blue;1:%s.o;2:x
'λx.apply(not[and[apply(same_size,iota(filter(filter(filter(filter(filter(x.s, not[rectangle]), size2), size3), and[yellow,rectangle]), or[yellow,green]))),and[and[blue,green],yellow]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;4:size2;4:size3;4:and[%s,%s];4:yellow;4:rectangle;4:or[%s,%s];4:yellow;4:green;4:and[%s,%s];4:and[%s,%s];4:blue;4:green;4:yellow;1:%s.o;2:x
'λx.apply(not[rectangle],iota(filter(filter(x.s, and[apply(same_shape,x.o),rectangle]), triangle)))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle;4:triangle
'λx.exists(and[size3,size1], filter(filter(filter(filter(x.s, triangle), not[blue]), nand[or[size1,and[circle,size1]],or[triangle,green]]), size2))'	0:exists(%s, %s);4:and[%s,%s];4:size3;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:not[%s];4:blue;4:nand[%s,%s];4:or[%s,%s];4:size1;4:and[%s,%s];4:circle;4:size1;4:or[%s,%s];4:triangle;4:green;4:size2
'λx.apply(or[triangle,yellow],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_shape,iota(x.s)),iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.exists(and[not[and[nor[green,implies[yellow,not[or[and[and[green,green],triangle],triangle]]]],nor[yellow,not[blue]]]],size2], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:nor[%s,%s];4:green;4:implies[%s,%s];4:yellow;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:green;4:triangle;4:triangle;4:nor[%s,%s];4:yellow;4:not[%s];4:blue;4:size2;3:%s.s;2:x
'λx.apply(and[circle,size2],iota(filter(x.s, green)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(blue,iota(filter(filter(x.s, size3), and[triangle,yellow])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:triangle;4:yellow
'λx.apply(triangle,iota(filter(x.s, or[circle,size1])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:size1
'λx.apply(green,iota(filter(filter(x.s, and[not[size1],and[implies[and[or[apply(same_color,iota(filter(filter(filter(filter(x.s, and[apply(size-gt,iota(x.s)),size2]), green), implies[or[size3,green],green]), and[size1,yellow]))),green],size2],or[implies[size3,blue],circle]],rectangle]]), yellow)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:size1;4:and[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:iota(%s);3:%s.s;2:x;4:size2;4:green;4:implies[%s,%s];4:or[%s,%s];4:size3;4:green;4:green;4:and[%s,%s];4:size1;4:yellow;4:green;4:size2;4:or[%s,%s];4:implies[%s,%s];4:size3;4:blue;4:circle;4:rectangle;4:yellow
'λx.apply(not[and[apply(same_shape,x.o),rectangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle;1:%s.o;2:x
'λx.forall(size3,filter(filter(x.s, size2), and[not[green],and[green,iff[size3,circle]]]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:not[%s];4:green;4:and[%s,%s];4:green;4:iff[%s,%s];4:size3;4:circle
'λx.exists(size3, filter(filter(x.s, rectangle), not[green]))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:green
'λx.empty(filter(filter(filter(filter(x.s, or[circle,or[triangle,size3]]), implies[size2,and[and[triangle,nor[circle,size3]],implies[blue,green]]]), blue), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:or[%s,%s];4:triangle;4:size3;4:implies[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:triangle;4:nor[%s,%s];4:circle;4:size3;4:implies[%s,%s];4:blue;4:green;4:blue;4:rectangle
'λx.apply(or[and[triangle,green],green],iota(filter(filter(x.s, blue), circle)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:triangle;4:green;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle
'λx.empty(filter(filter(filter(filter(x.s, or[apply(size-leq,iota(filter(filter(filter(x.s, green), circle), apply(same_shape,iota(x.s))))),and[yellow,and[size1,yellow]]]), blue), size2), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:and[%s,%s];4:size1;4:yellow;4:blue;4:size2;4:size1
'λx.apply(implies[and[circle,green],size3],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:circle;4:green;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[and[size2,circle],not[and[triangle,size3]]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:and[%s,%s];4:size2;4:circle;4:not[%s];4:and[%s,%s];4:triangle;4:size3;1:%s.o;2:x
'λx.forall(or[and[size3,green],or[yellow,nor[or[nand[triangle,implies[and[triangle,and[size1,iff[size1,nand[size3,and[size3,implies[size2,green]]]]]],apply(same_size,x.o)]],not[not[and[apply(same_shape,iota(filter(x.s, green))),and[triangle,not[size3]]]]]],yellow]]],filter(x.s, size1))'	0:forall(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size3;4:green;4:or[%s,%s];4:yellow;4:nor[%s,%s];4:or[%s,%s];4:nand[%s,%s];4:triangle;4:implies[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:size1;4:iff[%s,%s];4:size1;4:nand[%s,%s];4:size3;4:and[%s,%s];4:size3;4:implies[%s,%s];4:size2;4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:not[%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:triangle;4:not[%s];4:size3;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(nor[rectangle,and[blue,size3]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:rectangle;4:and[%s,%s];4:blue;4:size3;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(x.s, and[yellow,or[rectangle,apply(same_size,iota(x.s))]]), and[and[size2,or[yellow,apply(same_size,x.o)]],yellow]), not[implies[size3,blue]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size2;4:or[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:yellow;4:not[%s];4:implies[%s,%s];4:size3;4:blue;3:%s.s;2:x
'λx.apply(and[or[and[not[size1],blue],not[and[not[and[and[apply(same_size,x.o),not[rectangle]],not[and[size2,and[size2,not[rectangle]]]]]],size2]]],iff[yellow,and[implies[implies[green,nor[rectangle,and[triangle,size3]]],not[triangle]],and[green,blue]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:not[%s];4:size1;4:blue;4:not[%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:not[%s];4:rectangle;4:not[%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:size2;4:not[%s];4:rectangle;4:size2;4:iff[%s,%s];4:yellow;4:and[%s,%s];4:implies[%s,%s];4:implies[%s,%s];4:green;4:nor[%s,%s];4:rectangle;4:and[%s,%s];4:triangle;4:size3;4:not[%s];4:triangle;4:and[%s,%s];4:green;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(x.s, size1), and[not[not[apply(same_shape,x.o)]],blue])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:not[%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue
'λx.apply(size1,iota(filter(filter(x.s, triangle), green)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green
'λx.apply(size3,iota(filter(filter(x.s, triangle), size2)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2
'λx.apply(size1,iota(filter(filter(x.s, triangle), size1)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size1
'λx.apply(size1,iota(filter(filter(x.s, triangle), size2)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2
'λx.apply(nor[triangle,size2],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:triangle;4:size2;1:%s.o;2:x
'λx.empty(filter(x.s, and[size1,implies[green,size3]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:implies[%s,%s];4:green;4:size3
'λx.empty(filter(filter(filter(x.s, and[and[yellow,and[and[nor[yellow,size3],apply(same_shape,x.o)],green]],size1]), size1), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:yellow;4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green;4:size1;4:size1;4:green
'λx.apply(and[implies[not[yellow],blue],and[green,or[size3,or[and[blue,rectangle],blue]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:not[%s];4:yellow;4:blue;4:and[%s,%s];4:green;4:or[%s,%s];4:size3;4:or[%s,%s];4:and[%s,%s];4:blue;4:rectangle;4:blue;1:%s.o;2:x
'λx.apply(not[or[triangle,not[apply(size-gt,x.o)]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:triangle;4:not[%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(or[and[circle,triangle],not[size3]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:circle;4:triangle;4:not[%s];4:size3;1:iota(%s);3:%s.s;2:x
'λx.exists(and[size2,yellow], filter(filter(filter(x.s, and[not[and[size2,blue]],triangle]), apply(same_size,x.o)), or[size2,or[or[green,and[size3,iff[circle,triangle]]],size1]]))'	0:exists(%s, %s);4:and[%s,%s];4:size2;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:size2;4:blue;4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:size2;4:or[%s,%s];4:or[%s,%s];4:green;4:and[%s,%s];4:size3;4:iff[%s,%s];4:circle;4:triangle;4:size1
'λx.apply(and[not[rectangle],blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:rectangle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[not[and[rectangle,rectangle]],and[and[blue,apply(same_size,iota(x.s))],green]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:not[%s];4:and[%s,%s];4:rectangle;4:rectangle;4:and[%s,%s];4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:green;1:%s.o;2:x
'λx.forall(circle,filter(x.s, implies[triangle,blue]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:triangle;4:blue
'λx.apply(and[apply(same_shape,iota(filter(x.s, yellow))),not[and[iff[rectangle,blue],and[not[apply(size-geq,x.o)],iff[circle,size3]]]]],iota(filter(x.s, iff[size2,nand[size3,size1]])))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:and[%s,%s];4:iff[%s,%s];4:rectangle;4:blue;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:iff[%s,%s];4:circle;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:size2;4:nand[%s,%s];4:size3;4:size1
'λx.apply(not[green],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(not[green],iota(filter(x.s, green)))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(blue,iota(filter(filter(filter(filter(x.s, apply(same_shape,x.o)), triangle), not[and[size1,blue]]), or[green,yellow])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle;4:not[%s];4:and[%s,%s];4:size1;4:blue;4:or[%s,%s];4:green;4:yellow
'λx.exists(triangle, filter(filter(x.s, triangle), circle))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle
'λx.apply(and[not[triangle],and[size2,and[and[rectangle,and[and[size1,size3],apply(same_shape,x.o)]],and[iff[circle,circle],size2]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:triangle;4:and[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:size1;4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:iff[%s,%s];4:circle;4:circle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[implies[and[green,green],blue],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:green;4:green;4:blue;4:size2;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, triangle), size1)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size1
'λx.forall(rectangle,filter(x.s, blue))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(or[size1,rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:rectangle;1:%s.o;2:x
'λx.exists(rectangle, filter(x.s, and[blue,apply(same_size,iota(filter(x.s, size1)))]))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(apply(same_color,iota(filter(x.s, size2))), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;3:%s.s;2:x
'λx.apply(apply(size-geq,iota(filter(x.s, rectangle))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;1:%s.o;2:x
'λx.apply(or[blue,nand[apply(same_shape,x.o),triangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:triangle;1:%s.o;2:x
'λx.exists(circle, filter(x.s, yellow))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(not[implies[green,apply(same_color,x.o)]],iota(filter(filter(filter(x.s, triangle), apply(same_color,iota(x.s))), size3)))'	0:apply(%s,%s);4:not[%s];4:implies[%s,%s];4:green;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:size3
'λx.apply(rectangle,iota(filter(x.s, apply(same_color,iota(filter(filter(x.s, green), and[implies[green,size1],circle]))))))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:implies[%s,%s];4:green;4:size1;4:circle
'λx.apply(and[or[not[apply(same_color,iota(x.s))],nor[yellow,implies[and[blue,green],triangle]]],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:nor[%s,%s];4:yellow;4:implies[%s,%s];4:and[%s,%s];4:blue;4:green;4:triangle;4:rectangle;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(filter(x.s, circle), not[rectangle]), rectangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:rectangle;4:rectangle
'λx.exists(green, filter(filter(filter(x.s, size1), blue), green))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue;4:green
'λx.apply(nand[or[not[triangle],blue],or[yellow,nor[apply(same_color,iota(filter(filter(filter(x.s, size2), size1), size2))),size2]]],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:or[%s,%s];4:not[%s];4:triangle;4:blue;4:or[%s,%s];4:yellow;4:nor[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size1;4:size2;4:size2;1:%s.o;2:x
'λx.apply(and[triangle,size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:size3;1:%s.o;2:x
'λx.apply(and[triangle,size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:size2;1:%s.o;2:x
'λx.apply(and[triangle,size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:size1;1:%s.o;2:x
'λx.empty(filter(x.s, apply(size-leq,iota(filter(x.s, yellow)))))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.forall(size1,filter(x.s, or[and[or[not[yellow],yellow],size2],yellow]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:not[%s];4:yellow;4:yellow;4:size2;4:yellow
'λx.apply(or[circle,circle],iota(filter(x.s, and[yellow,size3])))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size3
'λx.apply(size3,iota(filter(filter(filter(x.s, green), circle), rectangle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:circle;4:rectangle
'λx.exists(not[or[size3,or[triangle,and[green,size2]]]], x.s)'	0:exists(%s, %s);4:not[%s];4:or[%s,%s];4:size3;4:or[%s,%s];4:triangle;4:and[%s,%s];4:green;4:size2;3:%s.s;2:x
'λx.apply(and[triangle,rectangle],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(or[triangle,not[green]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:not[%s];4:green;1:%s.o;2:x
'λx.apply(not[circle],iota(filter(filter(x.s, not[or[apply(same_shape,x.o),nor[apply(same_color,iota(x.s)),triangle]]]), circle)))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:nor[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:triangle;4:circle
'λx.apply(nor[circle,circle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:circle;4:circle;1:%s.o;2:x
'λx.apply(and[rectangle,or[size1,yellow]],iota(filter(filter(x.s, and[not[triangle],apply(same_color,x.o)]), size3)))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:or[%s,%s];4:size1;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:triangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size3
'λx.apply(and[or[not[nand[size3,and[yellow,apply(same_size,iota(x.s))]]],blue],size1],iota(filter(x.s, apply(same_shape,iota(x.s)))))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:not[%s];4:nand[%s,%s];4:size3;4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:blue;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.apply(and[implies[size3,and[yellow,rectangle]],rectangle],iota(filter(x.s, and[rectangle,and[and[nor[and[size3,implies[rectangle,yellow]],and[blue,size3]],size1],and[blue,yellow]]])))'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:size3;4:and[%s,%s];4:yellow;4:rectangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:size3;4:implies[%s,%s];4:rectangle;4:yellow;4:and[%s,%s];4:blue;4:size3;4:size1;4:and[%s,%s];4:blue;4:yellow
'λx.apply(apply(same_color,iota(x.s)),iota(filter(x.s, blue)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(rectangle,iota(filter(filter(filter(filter(filter(filter(x.s, yellow), size1), yellow), or[rectangle,nand[size1,rectangle]]), yellow), not[apply(same_color,iota(filter(x.s, and[apply(same_size,iota(filter(filter(x.s, apply(same_color,iota(x.s))), circle))),circle])))])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;4:yellow;4:or[%s,%s];4:rectangle;4:nand[%s,%s];4:size1;4:rectangle;4:yellow;4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:circle;4:circle
'λx.apply(and[or[size1,nor[yellow,implies[and[blue,green],triangle]]],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size1;4:nor[%s,%s];4:yellow;4:implies[%s,%s];4:and[%s,%s];4:blue;4:green;4:triangle;4:rectangle;1:%s.o;2:x
'λx.apply(or[green,blue],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.exists(apply(same_size,x.o), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(x.s, green), not[size2])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:size2
'λx.apply(blue,iota(filter(filter(x.s, circle), triangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle
'λx.apply(apply(same_size,x.o),iota(filter(filter(filter(filter(filter(x.s, circle), rectangle), size2), apply(size-lt,x.o)), circle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle;4:size2;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:circle
'λx.apply(not[triangle],iota(filter(x.s, or[and[not[blue],not[triangle]],size2])))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:blue;4:not[%s];4:triangle;4:size2
'λx.apply(iff[circle,size2],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:circle;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[not[and[or[not[circle],and[rectangle,rectangle]],green]],or[yellow,yellow]],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:not[%s];4:and[%s,%s];4:or[%s,%s];4:not[%s];4:circle;4:and[%s,%s];4:rectangle;4:rectangle;4:green;4:or[%s,%s];4:yellow;4:yellow;1:%s.o;2:x
'λx.apply(implies[and[and[triangle,circle],and[apply(same_color,x.o),not[and[not[size3],nor[size1,and[implies[triangle,yellow],size3]]]]]],size2],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:not[%s];4:size3;4:nor[%s,%s];4:size1;4:and[%s,%s];4:implies[%s,%s];4:triangle;4:yellow;4:size3;4:size2;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, and[and[circle,yellow],and[circle,and[rectangle,rectangle]]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:circle;4:yellow;4:and[%s,%s];4:circle;4:and[%s,%s];4:rectangle;4:rectangle
'λx.apply(not[and[size1,size3]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size1;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(size-leq,iota(filter(x.s, triangle))),iota(filter(filter(filter(x.s, blue), yellow), and[rectangle,nand[triangle,green]])))'	0:apply(%s,%s);4:apply(%s,%s);5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow;4:and[%s,%s];4:rectangle;4:nand[%s,%s];4:triangle;4:green
'λx.exists(circle, filter(x.s, circle))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.contains(x.o, filter(filter(filter(filter(filter(x.s, yellow), rectangle), green), size1), triangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle;4:green;4:size1;4:triangle
'λx.apply(and[and[size2,size1],or[triangle,yellow]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size2;4:size1;4:or[%s,%s];4:triangle;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(circle,iota(filter(filter(x.s, and[blue,and[iff[and[blue,yellow],not[circle]],triangle]]), not[triangle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:and[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:blue;4:yellow;4:not[%s];4:circle;4:triangle;4:not[%s];4:triangle
'λx.apply(not[rectangle],iota(filter(x.s, not[triangle])))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.apply(and[size2,green],iota(filter(x.s, green)))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.forall(or[apply(same_shape,iota(x.s)),size2],filter(filter(x.s, circle), blue))'	0:forall(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue
'λx.apply(not[nor[or[green,nor[triangle,size2]],not[size2]]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:nor[%s,%s];4:or[%s,%s];4:green;4:nor[%s,%s];4:triangle;4:size2;4:not[%s];4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(or[yellow,apply(size-lt,x.o)],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(and[and[and[and[triangle,apply(same_color,iota(x.s))],yellow],yellow],not[blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:yellow;4:yellow;4:not[%s];4:blue;1:%s.o;2:x
'λx.apply(or[circle,size2],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(and[or[blue,size2],or[size3,not[size2]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:blue;4:size2;4:or[%s,%s];4:size3;4:not[%s];4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[rectangle,nand[triangle,green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:nand[%s,%s];4:triangle;4:green;1:%s.o;2:x
'λx.apply(apply(same_color,iota(filter(filter(x.s, rectangle), size2))),iota(filter(filter(filter(filter(filter(filter(x.s, green), or[or[not[triangle],not[size2]],rectangle]), and[blue,and[size2,and[yellow,blue]]]), circle), apply(same_size,iota(x.s))), size3)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:or[%s,%s];4:not[%s];4:triangle;4:not[%s];4:size2;4:rectangle;4:and[%s,%s];4:blue;4:and[%s,%s];4:size2;4:and[%s,%s];4:yellow;4:blue;4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size3
'λx.exists(rectangle, filter(filter(x.s, blue), nor[yellow,green]))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:nor[%s,%s];4:yellow;4:green
'λx.apply(iff[nor[green,apply(same_shape,x.o)],or[apply(same_size,iota(filter(x.s, size2))),green]],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:nor[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green;1:%s.o;2:x
'λx.apply(and[blue,and[green,circle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:green;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(not[triangle],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(not[triangle],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(not[triangle],iota(filter(x.s, green)))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(size3,iota(filter(filter(x.s, not[circle]), size3)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:size3
'λx.apply(not[apply(same_size,iota(filter(x.s, and[size3,not[size3]])))],x.o)'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:not[%s];4:size3;1:%s.o;2:x
'λx.apply(not[or[nand[yellow,triangle],and[or[size1,or[rectangle,blue]],size3]]],iota(filter(filter(filter(filter(filter(x.s, yellow), triangle), green), size3), triangle)))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:nand[%s,%s];4:yellow;4:triangle;4:and[%s,%s];4:or[%s,%s];4:size1;4:or[%s,%s];4:rectangle;4:blue;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle;4:green;4:size3;4:triangle
'λx.empty(filter(filter(x.s, green), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:circle
'λx.apply(or[circle,blue],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.exists(and[or[size1,circle],size1], filter(filter(x.s, triangle), and[not[triangle],circle]))'	0:exists(%s, %s);4:and[%s,%s];4:or[%s,%s];4:size1;4:circle;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:not[%s];4:triangle;4:circle
'λx.apply(circle,iota(filter(filter(x.s, circle), size1)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1
'λx.exists(not[implies[and[size1,and[yellow,size2]],and[and[size2,nand[circle,size2]],yellow]]], x.s)'	0:exists(%s, %s);4:not[%s];4:implies[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:yellow;4:size2;4:and[%s,%s];4:and[%s,%s];4:size2;4:nand[%s,%s];4:circle;4:size2;4:yellow;3:%s.s;2:x
'λx.apply(iff[yellow,size2],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:yellow;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(and[not[blue],or[circle,triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:blue;4:or[%s,%s];4:circle;4:triangle;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(x.s, or[or[blue,green],blue]), nor[and[blue,and[and[size3,size2],rectangle]],and[size1,green]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:blue;4:green;4:blue;4:nor[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:size3;4:size2;4:rectangle;4:and[%s,%s];4:size1;4:green
'λx.apply(size1,iota(filter(filter(filter(x.s, apply(same_shape,iota(filter(x.s, and[not[and[nand[or[blue,rectangle],rectangle],size3]],iff[size3,or[size2,size2]]])))), size2), yellow)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:nand[%s,%s];4:or[%s,%s];4:blue;4:rectangle;4:rectangle;4:size3;4:iff[%s,%s];4:size3;4:or[%s,%s];4:size2;4:size2;4:size2;4:yellow
'λx.apply(yellow,iota(filter(filter(x.s, rectangle), size2)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2
'λx.apply(yellow,iota(filter(filter(x.s, rectangle), size3)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3
'λx.apply(green,iota(filter(filter(filter(x.s, size1), blue), rectangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue;4:rectangle
'λx.apply(or[size2,and[green,and[and[and[triangle,implies[and[size2,apply(same_color,iota(x.s))],blue]],size1],or[nor[and[circle,triangle],size1],yellow]]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:and[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:implies[%s,%s];4:and[%s,%s];4:size2;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:blue;4:size1;4:or[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:circle;4:triangle;4:size1;4:yellow;1:%s.o;2:x
'λx.apply(not[size1],iota(filter(filter(filter(filter(filter(filter(filter(filter(x.s, iff[circle,apply(size-geq,x.o)]), size1), yellow), and[circle,iff[yellow,or[size2,blue]]]), circle), circle), triangle), and[size3,size1])))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:circle;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:size1;4:yellow;4:and[%s,%s];4:circle;4:iff[%s,%s];4:yellow;4:or[%s,%s];4:size2;4:blue;4:circle;4:circle;4:triangle;4:and[%s,%s];4:size3;4:size1
'λx.contains(iota(filter(filter(filter(filter(filter(x.s, or[rectangle,yellow]), not[iff[or[and[not[iff[not[nand[circle,green]],blue]],green],triangle],blue]]), rectangle), apply(same_color,x.o)), blue)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:yellow;4:not[%s];4:iff[%s,%s];4:or[%s,%s];4:and[%s,%s];4:not[%s];4:iff[%s,%s];4:not[%s];4:nand[%s,%s];4:circle;4:green;4:blue;4:green;4:triangle;4:blue;4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue;3:%s.s;2:x
'λx.apply(or[and[or[size3,or[triangle,size2]],size1],blue],iota(filter(filter(x.s, size2), yellow)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size3;4:or[%s,%s];4:triangle;4:size2;4:size1;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:yellow
'λx.apply(circle,iota(filter(filter(x.s, triangle), size2)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2
'λx.apply(or[apply(size-gt,x.o),implies[not[yellow],not[not[size1]]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:implies[%s,%s];4:not[%s];4:yellow;4:not[%s];4:not[%s];4:size1;1:%s.o;2:x
'λx.apply(and[circle,and[circle,triangle]],iota(filter(filter(filter(x.s, green), size1), size1)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:and[%s,%s];4:circle;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1;4:size1
'λx.forall(or[and[green,yellow],rectangle],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:and[%s,%s];4:green;4:yellow;4:rectangle;3:%s.s;2:x
'λx.apply(and[size1,green],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(and[blue,and[circle,rectangle]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:circle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, not[triangle]), rectangle), or[apply(same_size,x.o),rectangle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:rectangle;4:or[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:rectangle
'λx.apply(or[and[or[size2,or[not[triangle],apply(same_shape,x.o)]],implies[size1,nor[size3,rectangle]]],and[size2,and[green,rectangle]]],iota(filter(filter(x.s, blue), size2)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size2;4:or[%s,%s];4:not[%s];4:triangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:implies[%s,%s];4:size1;4:nor[%s,%s];4:size3;4:rectangle;4:and[%s,%s];4:size2;4:and[%s,%s];4:green;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2
'λx.apply(or[apply(same_shape,iota(filter(filter(x.s, nor[apply(size-lt,iota(x.s)),triangle]), blue))),rectangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:triangle;4:blue;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.exists(apply(same_size,iota(x.s)), x.s)'	0:exists(%s, %s);4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(or[size2,and[and[size3,not[apply(same_shape,iota(x.s))]],and[and[or[size2,iff[blue,nor[triangle,apply(same_size,iota(x.s))]]],size3],triangle]]],iota(filter(filter(filter(x.s, or[iff[not[green],blue],rectangle]), circle), yellow)))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:size3;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size2;4:iff[%s,%s];4:blue;4:nor[%s,%s];4:triangle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size3;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:iff[%s,%s];4:not[%s];4:green;4:blue;4:rectangle;4:circle;4:yellow
'λx.empty(filter(filter(x.s, apply(same_size,iota(filter(filter(filter(filter(filter(x.s, size3), and[circle,rectangle]), circle), size2), green)))), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:circle;4:rectangle;4:circle;4:size2;4:green;4:size2
'λx.empty(filter(filter(filter(x.s, green), yellow), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:yellow;4:yellow
'λx.apply(and[or[triangle,or[size2,nor[blue,apply(same_color,x.o)]]],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:triangle;4:or[%s,%s];4:size2;4:nor[%s,%s];4:blue;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:triangle;1:%s.o;2:x
'λx.exists(rectangle, filter(x.s, circle))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[apply(same_shape,iota(x.s)),not[size1]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:not[%s];4:size1;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(filter(filter(x.s, rectangle), and[size3,yellow]), and[or[green,rectangle],apply(same_shape,x.o)]), yellow), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:size3;4:yellow;4:and[%s,%s];4:or[%s,%s];4:green;4:rectangle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow;4:rectangle
'λx.apply(apply(size-geq,x.o),iota(filter(filter(x.s, and[blue,blue]), not[not[size1]])))'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:blue;4:not[%s];4:not[%s];4:size1
'λx.empty(filter(x.s, apply(same_shape,x.o)))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(filter(x.s, nand[and[apply(same_size,x.o),apply(size-lt,iota(x.s))],circle]), triangle), or[not[triangle],nand[green,apply(same_shape,iota(filter(filter(x.s, nor[nand[size2,rectangle],blue]), yellow)))]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:circle;4:triangle;4:or[%s,%s];4:not[%s];4:triangle;4:nand[%s,%s];4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:nand[%s,%s];4:size2;4:rectangle;4:blue;4:yellow
'λx.apply(rectangle,iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.forall(size1,x.s)'	0:forall(%s,%s);4:size1;3:%s.s;2:x
'λx.forall(size2,x.s)'	0:forall(%s,%s);4:size2;3:%s.s;2:x
'λx.forall(size3,x.s)'	0:forall(%s,%s);4:size3;3:%s.s;2:x
'λx.forall(or[and[size1,green],triangle],filter(x.s, yellow))'	0:forall(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size1;4:green;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.exists(not[triangle], x.s)'	0:exists(%s, %s);4:not[%s];4:triangle;3:%s.s;2:x
'λx.apply(and[and[and[apply(size-lt,iota(filter(x.s, rectangle))),size1],rectangle],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1;4:rectangle;4:size3;1:%s.o;2:x
'λx.apply(and[yellow,and[yellow,and[or[circle,yellow],yellow]]],iota(filter(filter(filter(filter(filter(x.s, circle), blue), apply(size-gt,x.o)), apply(same_color,x.o)), green)))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:and[%s,%s];4:yellow;4:and[%s,%s];4:or[%s,%s];4:circle;4:yellow;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green
'λx.apply(and[and[size1,rectangle],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:rectangle;4:size3;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, and[not[yellow],rectangle])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:yellow;4:rectangle
'λx.apply(and[not[or[blue,size1]],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:or[%s,%s];4:blue;4:size1;4:size2;1:%s.o;2:x
'λx.apply(iff[not[nor[blue,green]],triangle],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:iff[%s,%s];4:not[%s];4:nor[%s,%s];4:blue;4:green;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.forall(and[not[and[or[yellow,blue],size1]],apply(same_shape,x.o)],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:or[%s,%s];4:yellow;4:blue;4:size1;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.empty(filter(x.s, and[and[green,size1],circle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:green;4:size1;4:circle
'λx.empty(filter(filter(filter(x.s, yellow), size3), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size3;4:rectangle
'λx.exists(circle, filter(filter(filter(x.s, size2), yellow), size2))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:yellow;4:size2
'λx.apply(and[rectangle,circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:circle;1:%s.o;2:x
'λx.apply(and[not[triangle],and[not[rectangle],size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:triangle;4:and[%s,%s];4:not[%s];4:rectangle;4:size2;1:%s.o;2:x
'λx.contains(iota(x.s), filter(x.s, and[and[circle,apply(same_size,x.o)],size1]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size1
'λx.exists(and[yellow,implies[size2,green]], filter(x.s, circle))'	0:exists(%s, %s);4:and[%s,%s];4:yellow;4:implies[%s,%s];4:size2;4:green;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(not[apply(size-lt,x.o)],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(x.s, blue)), filter(filter(x.s, not[size3]), size3))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;4:size3
'λx.apply(triangle,iota(filter(filter(x.s, apply(same_color,iota(filter(x.s, or[and[size1,size2],apply(same_size,x.o)])))), or[circle,apply(same_shape,iota(x.s))])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size1;4:size2;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:circle;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.forall(nand[or[size2,apply(same_shape,iota(filter(x.s, size3)))],triangle],x.s)'	0:forall(%s,%s);4:nand[%s,%s];4:or[%s,%s];4:size2;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle;3:%s.s;2:x
'λx.exists(not[yellow], filter(x.s, size3))'	0:exists(%s, %s);4:not[%s];4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(and[circle,blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:blue;1:%s.o;2:x
'λx.contains(iota(filter(x.s, blue)), filter(x.s, yellow))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(or[triangle,blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:blue;1:%s.o;2:x
'λx.apply(and[blue,green],iota(filter(filter(x.s, size3), and[yellow,size1])))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:yellow;4:size1
'λx.apply(and[or[size2,yellow],implies[nand[size1,green],not[not[and[triangle,size3]]]]],iota(filter(filter(x.s, rectangle), or[apply(same_shape,iota(x.s)),and[size3,green]])))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size2;4:yellow;4:implies[%s,%s];4:nand[%s,%s];4:size1;4:green;4:not[%s];4:not[%s];4:and[%s,%s];4:triangle;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:green
'λx.forall(green,filter(filter(x.s, blue), yellow))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow
'λx.apply(iff[yellow,green],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:yellow;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(x.s, blue)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.forall(or[and[and[size1,nor[circle,rectangle]],nor[triangle,and[apply(size-leq,x.o),apply(same_shape,x.o)]]],not[green]],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:nor[%s,%s];4:circle;4:rectangle;4:nor[%s,%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:not[%s];4:green;3:%s.s;2:x
'λx.exists(circle, filter(filter(x.s, blue), rectangle))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle
'λx.apply(iff[size1,triangle],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:iff[%s,%s];4:size1;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.exists(rectangle, filter(x.s, yellow))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(or[size3,apply(same_size,iota(x.s))],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(and[and[green,and[and[blue,or[green,triangle]],size2]],and[blue,blue]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:green;4:and[%s,%s];4:and[%s,%s];4:blue;4:or[%s,%s];4:green;4:triangle;4:size2;4:and[%s,%s];4:blue;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(x.s, yellow), size1)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1
'λx.apply(yellow,iota(filter(filter(x.s, yellow), green)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green
'λx.apply(not[size3],iota(filter(filter(filter(filter(x.s, apply(same_color,iota(x.s))), not[and[apply(size-leq,iota(x.s)),apply(same_size,x.o)]]), apply(same_shape,x.o)), circle)))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:circle
'λx.apply(and[blue,blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(and[or[iff[and[circle,nand[apply(same_shape,iota(filter(filter(x.s, and[size3,yellow]), and[rectangle,size1]))),nor[yellow,or[and[triangle,green],yellow]]]],size2],triangle],not[size3]],iota(filter(x.s, and[rectangle,triangle])))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:iff[%s,%s];4:and[%s,%s];4:circle;4:nand[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:yellow;4:and[%s,%s];4:rectangle;4:size1;4:nor[%s,%s];4:yellow;4:or[%s,%s];4:and[%s,%s];4:triangle;4:green;4:yellow;4:size2;4:triangle;4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:triangle
'λx.forall(blue,filter(filter(x.s, rectangle), size3))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3
'λx.forall(size1,filter(filter(filter(filter(filter(filter(filter(filter(filter(x.s, nor[not[yellow],size3]), rectangle), size2), apply(same_shape,x.o)), yellow), or[yellow,iff[circle,and[or[rectangle,size3],green]]]), or[and[nor[size3,apply(same_size,iota(x.s))],yellow],apply(size-lt,x.o)]), size3), yellow))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:not[%s];4:yellow;4:size3;4:rectangle;4:size2;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:yellow;4:or[%s,%s];4:yellow;4:iff[%s,%s];4:circle;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:size3;4:green;4:or[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:size3;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:yellow;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:size3;4:yellow
'λx.apply(blue,iota(filter(filter(filter(filter(filter(filter(x.s, implies[size2,blue]), apply(same_size,x.o)), and[green,rectangle]), triangle), triangle), circle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:size2;4:blue;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:and[%s,%s];4:green;4:rectangle;4:triangle;4:triangle;4:circle
'λx.forall(and[iff[blue,yellow],blue],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:blue;4:yellow;4:blue;3:%s.s;2:x
'λx.forall(and[and[size2,green],yellow],filter(x.s, triangle))'	0:forall(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size2;4:green;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.exists(or[nand[green,blue],yellow], filter(x.s, apply(same_color,x.o)))'	0:exists(%s, %s);4:or[%s,%s];4:nand[%s,%s];4:green;4:blue;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.contains(x.o, filter(filter(filter(x.s, not[not[size3]]), and[apply(same_shape,x.o),nand[green,or[yellow,nand[yellow,or[apply(size-gt,x.o),apply(same_shape,iota(filter(x.s, circle)))]]]]]), triangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:size3;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:nand[%s,%s];4:green;4:or[%s,%s];4:yellow;4:nand[%s,%s];4:yellow;4:or[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle
'λx.apply(apply(same_color,iota(filter(filter(filter(x.s, size1), apply(same_size,x.o)), iff[apply(size-geq,iota(filter(x.s, size3))),or[size2,circle]]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:iff[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:size2;4:circle;1:%s.o;2:x
'λx.apply(and[blue,yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:yellow;1:%s.o;2:x
'λx.forall(nand[or[green,implies[implies[apply(same_shape,x.o),or[yellow,rectangle]],and[implies[not[size1],size1],or[not[blue],and[circle,not[and[or[blue,blue],circle]]]]]]],implies[and[size3,triangle],apply(same_color,iota(filter(filter(filter(x.s, size2), size3), and[size1,and[green,blue]])))]],x.s)'	0:forall(%s,%s);4:nand[%s,%s];4:or[%s,%s];4:green;4:implies[%s,%s];4:implies[%s,%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:yellow;4:rectangle;4:and[%s,%s];4:implies[%s,%s];4:not[%s];4:size1;4:size1;4:or[%s,%s];4:not[%s];4:blue;4:and[%s,%s];4:circle;4:not[%s];4:and[%s,%s];4:or[%s,%s];4:blue;4:blue;4:circle;4:implies[%s,%s];4:and[%s,%s];4:size3;4:triangle;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:size3;4:and[%s,%s];4:size1;4:and[%s,%s];4:green;4:blue;3:%s.s;2:x
'λx.apply(and[circle,rectangle],iota(filter(x.s, green)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(yellow,iota(filter(filter(x.s, not[triangle]), size3)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:size3
'λx.contains(iota(x.s), filter(x.s, apply(same_shape,x.o)))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, and[size2,size2]), and[implies[size1,or[rectangle,circle]],rectangle])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:size2;4:and[%s,%s];4:implies[%s,%s];4:size1;4:or[%s,%s];4:rectangle;4:circle;4:rectangle
'λx.empty(filter(filter(filter(filter(x.s, size1), triangle), size2), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle;4:size2;4:size3
'λx.apply(circle,iota(filter(x.s, or[yellow,triangle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:triangle
'λx.empty(filter(filter(x.s, apply(same_shape,iota(x.s))), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:circle
'λx.apply(not[or[and[size3,and[implies[yellow,nand[blue,yellow]],and[not[green],yellow]]],triangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:implies[%s,%s];4:yellow;4:nand[%s,%s];4:blue;4:yellow;4:and[%s,%s];4:not[%s];4:green;4:yellow;4:triangle;1:%s.o;2:x
'λx.apply(iff[apply(same_color,x.o),and[nor[rectangle,and[rectangle,apply(size-gt,iota(filter(x.s, size3)))]],green]],iota(filter(filter(x.s, rectangle), size1)))'	0:apply(%s,%s);4:iff[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:and[%s,%s];4:nor[%s,%s];4:rectangle;4:and[%s,%s];4:rectangle;4:apply(%s,%s);5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1
'λx.exists(yellow, filter(filter(filter(filter(x.s, not[size3]), and[apply(same_color,x.o),green]), size3), yellow))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:green;4:size3;4:yellow
'λx.apply(rectangle,iota(filter(filter(filter(filter(filter(filter(x.s, yellow), size1), apply(same_color,x.o)), circle), triangle), and[nand[size1,size1],size3])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;4:triangle;4:and[%s,%s];4:nand[%s,%s];4:size1;4:size1;4:size3
'λx.apply(and[size1,and[size2,size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:and[%s,%s];4:size2;4:size1;1:%s.o;2:x
'λx.apply(size1,iota(filter(x.s, or[rectangle,circle])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:circle
'λx.apply(and[not[size3],size3],iota(filter(filter(filter(filter(filter(x.s, circle), apply(same_shape,x.o)), blue), or[size2,blue]), and[yellow,nand[or[size2,size1],size3]])))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size3;4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:blue;4:or[%s,%s];4:size2;4:blue;4:and[%s,%s];4:yellow;4:nand[%s,%s];4:or[%s,%s];4:size2;4:size1;4:size3
'λx.empty(filter(x.s, and[size2,size3]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:size3
'λx.empty(filter(x.s, and[size1,size3]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:size3
'λx.apply(and[blue,triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:triangle;1:%s.o;2:x
'λx.apply(size2,iota(filter(x.s, and[triangle,implies[size2,and[circle,circle]]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:implies[%s,%s];4:size2;4:and[%s,%s];4:circle;4:circle
'λx.apply(apply(same_color,iota(filter(filter(x.s, rectangle), nand[circle,size1]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:nand[%s,%s];4:circle;4:size1;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(x.s, apply(same_size,x.o)), apply(same_shape,iota(filter(x.s, circle))))))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(nor[and[and[size3,yellow],nor[triangle,size1]],green],iota(filter(filter(filter(filter(x.s, circle), yellow), triangle), rectangle)))'	0:apply(%s,%s);4:nor[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:yellow;4:nor[%s,%s];4:triangle;4:size1;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow;4:triangle;4:rectangle
'λx.exists(not[and[size2,blue]], x.s)'	0:exists(%s, %s);4:not[%s];4:and[%s,%s];4:size2;4:blue;3:%s.s;2:x
'λx.forall(green,filter(x.s, nor[not[blue],and[size3,apply(same_shape,x.o)]]))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:not[%s];4:blue;4:and[%s,%s];4:size3;4:apply(%s,%s);5:same_shape;1:%s.o;2:x
'λx.exists(nor[or[yellow,size2],yellow], x.s)'	0:exists(%s, %s);4:nor[%s,%s];4:or[%s,%s];4:yellow;4:size2;4:yellow;3:%s.s;2:x
'λx.contains(iota(filter(x.s, green)), filter(x.s, rectangle))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(rectangle,iota(filter(x.s, and[size3,apply(size-leq,x.o)])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:apply(%s,%s);5:size-leq;1:%s.o;2:x
'λx.forall(and[triangle,blue],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:triangle;4:blue;3:%s.s;2:x
'λx.apply(and[circle,size1],iota(filter(x.s, and[circle,size2])))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size2
'λx.contains(x.o, filter(filter(x.s, circle), or[and[rectangle,circle],and[not[blue],implies[size1,implies[yellow,or[or[circle,blue],yellow]]]]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:circle;4:and[%s,%s];4:not[%s];4:blue;4:implies[%s,%s];4:size1;4:implies[%s,%s];4:yellow;4:or[%s,%s];4:or[%s,%s];4:circle;4:blue;4:yellow
'λx.empty(filter(filter(x.s, blue), not[size2]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:size2
'λx.contains(iota(filter(filter(filter(x.s, and[triangle,size1]), size3), or[size1,and[yellow,size1]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:size1;4:size3;4:or[%s,%s];4:size1;4:and[%s,%s];4:yellow;4:size1;3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, blue), nand[size3,circle]), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:nand[%s,%s];4:size3;4:circle;4:green
'λx.apply(rectangle,iota(filter(filter(x.s, circle), green)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green
'λx.apply(rectangle,iota(filter(filter(x.s, circle), size2)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size2
'λx.apply(nand[size2,rectangle],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:size2;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.exists(implies[and[yellow,size1],size3], filter(filter(x.s, yellow), or[rectangle,and[size1,green]]))'	0:exists(%s, %s);4:implies[%s,%s];4:and[%s,%s];4:yellow;4:size1;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:rectangle;4:and[%s,%s];4:size1;4:green
'λx.empty(filter(x.s, nand[size1,or[size3,blue]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:size1;4:or[%s,%s];4:size3;4:blue
'λx.apply(implies[size2,circle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size2;4:circle;1:%s.o;2:x
'λx.apply(implies[size1,circle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:size1;4:circle;1:%s.o;2:x
'λx.apply(or[yellow,apply(same_color,x.o)],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.forall(blue,filter(filter(x.s, triangle), yellow))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:yellow
'λx.empty(filter(filter(x.s, apply(size-lt,x.o)), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:size1
'λx.contains(x.o, filter(filter(filter(filter(filter(x.s, and[and[and[size1,and[not[size3],triangle]],size1],triangle]), size1), iff[and[blue,green],blue]), and[yellow,yellow]), blue))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size1;4:and[%s,%s];4:not[%s];4:size3;4:triangle;4:size1;4:triangle;4:size1;4:iff[%s,%s];4:and[%s,%s];4:blue;4:green;4:blue;4:and[%s,%s];4:yellow;4:yellow;4:blue
'λx.apply(nor[blue,size2],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:blue;4:size2;1:%s.o;2:x
'λx.apply(iff[nand[not[rectangle],rectangle],triangle],x.o)'	0:apply(%s,%s);4:iff[%s,%s];4:nand[%s,%s];4:not[%s];4:rectangle;4:rectangle;4:triangle;1:%s.o;2:x
'λx.apply(or[not[rectangle],circle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:rectangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(nor[rectangle,green],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:rectangle;4:green;1:%s.o;2:x
'λx.apply(apply(size-geq,iota(filter(x.s, not[size3]))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;1:%s.o;2:x
'λx.apply(or[green,circle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:circle;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(filter(x.s, implies[yellow,and[yellow,not[apply(same_color,iota(filter(filter(x.s, rectangle), or[triangle,blue])))]]]), yellow), size1)), filter(x.s, blue))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:yellow;4:and[%s,%s];4:yellow;4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:or[%s,%s];4:triangle;4:blue;4:yellow;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[not[and[size1,not[green]]],apply(same_size,x.o)],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:size1;4:not[%s];4:green;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(blue,iota(filter(filter(filter(filter(x.s, apply(size-leq,iota(x.s))), implies[size3,size2]), triangle), yellow)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x;4:implies[%s,%s];4:size3;4:size2;4:triangle;4:yellow
'λx.apply(size1,iota(filter(filter(filter(filter(filter(x.s, blue), not[blue]), nand[or[apply(size-geq,x.o),or[triangle,size3]],size2]), rectangle), blue)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:blue;4:nand[%s,%s];4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:or[%s,%s];4:triangle;4:size3;4:size2;4:rectangle;4:blue
'λx.apply(or[triangle,and[size2,circle]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:and[%s,%s];4:size2;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size3,blue],iota(filter(filter(x.s, green), and[and[size1,or[size2,green]],triangle])))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:and[%s,%s];4:size1;4:or[%s,%s];4:size2;4:green;4:triangle
'λx.empty(filter(filter(filter(x.s, size3), size2), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2;4:yellow
'λx.apply(or[green,blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:blue;1:%s.o;2:x
'λx.apply(not[and[triangle,size3]],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:triangle;4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(not[not[or[and[yellow,size2],triangle]]],iota(filter(x.s, apply(same_size,iota(x.s)))))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:or[%s,%s];4:and[%s,%s];4:yellow;4:size2;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, green), rectangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle
'λx.apply(triangle,iota(filter(x.s, circle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(rectangle,iota(filter(filter(x.s, apply(size-lt,x.o)), not[apply(same_shape,iota(x.s))])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(filter(filter(filter(x.s, blue), apply(same_size,x.o)), blue)), filter(x.s, apply(size-geq,iota(x.s))))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-geq;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(filter(x.s, triangle), green), circle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green;4:circle
'λx.exists(nand[triangle,and[blue,size2]], filter(filter(filter(filter(filter(filter(x.s, size1), green), or[size3,blue]), triangle), circle), size3))'	0:exists(%s, %s);4:nand[%s,%s];4:triangle;4:and[%s,%s];4:blue;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green;4:or[%s,%s];4:size3;4:blue;4:triangle;4:circle;4:size3
'λx.apply(and[and[and[size3,and[green,or[size2,implies[and[blue,yellow],implies[triangle,rectangle]]]]],or[or[and[blue,yellow],blue],size2]],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:green;4:or[%s,%s];4:size2;4:implies[%s,%s];4:and[%s,%s];4:blue;4:yellow;4:implies[%s,%s];4:triangle;4:rectangle;4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:blue;4:yellow;4:blue;4:size2;4:blue;1:%s.o;2:x
'λx.forall(apply(same_shape,iota(x.s)),x.s)'	0:forall(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.apply(yellow,iota(filter(filter(x.s, circle), green)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green
'λx.apply(not[and[yellow,rectangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:yellow;4:rectangle;1:%s.o;2:x
'λx.apply(implies[rectangle,and[and[size3,not[green]],size1]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:rectangle;4:and[%s,%s];4:and[%s,%s];4:size3;4:not[%s];4:green;4:size1;1:%s.o;2:x
'λx.exists(blue, filter(filter(x.s, circle), size1))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1
'λx.empty(filter(filter(x.s, yellow), and[size1,not[triangle]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:size1;4:not[%s];4:triangle
'λx.apply(nor[rectangle,yellow],iota(x.s))'	0:apply(%s,%s);4:nor[%s,%s];4:rectangle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, blue), size1), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1;4:size3
'λx.apply(apply(same_shape,iota(filter(filter(x.s, blue), yellow))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(filter(filter(x.s, green), apply(same_shape,iota(filter(filter(filter(x.s, yellow), green), circle)))), circle), and[not[size3],size2])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green;4:circle;4:circle;4:and[%s,%s];4:not[%s];4:size3;4:size2
'λx.empty(filter(filter(x.s, apply(same_shape,x.o)), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green
'λx.empty(filter(filter(x.s, apply(same_shape,x.o)), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:size3
'λx.exists(and[nand[triangle,size3],size3], filter(filter(x.s, not[or[not[apply(same_size,x.o)],blue]]), and[circle,and[triangle,rectangle]]))'	0:exists(%s, %s);4:and[%s,%s];4:nand[%s,%s];4:triangle;4:size3;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:not[%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:blue;4:and[%s,%s];4:circle;4:and[%s,%s];4:triangle;4:rectangle
'λx.apply(or[yellow,and[green,not[and[rectangle,triangle]]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:and[%s,%s];4:green;4:not[%s];4:and[%s,%s];4:rectangle;4:triangle;1:%s.o;2:x
'λx.apply(or[not[triangle],and[apply(same_size,iota(x.s)),blue]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(x.s, triangle), and[not[size1],or[blue,size2]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:not[%s];4:size1;4:or[%s,%s];4:blue;4:size2
'λx.apply(rectangle,iota(filter(filter(x.s, size3), blue)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue
'λx.apply(size2,iota(filter(filter(x.s, and[and[and[rectangle,circle],size3],size3]), not[yellow])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:circle;4:size3;4:size3;4:not[%s];4:yellow
'λx.apply(or[not[size1],size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:size1;4:size3;1:%s.o;2:x
'λx.apply(not[and[size1,nand[yellow,rectangle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size1;4:nand[%s,%s];4:yellow;4:rectangle;1:%s.o;2:x
'λx.forall(or[and[and[and[or[green,yellow],and[size3,size2]],blue],triangle],apply(same_size,x.o)],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:green;4:yellow;4:and[%s,%s];4:size3;4:size2;4:blue;4:triangle;4:apply(%s,%s);5:same_size;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(size1,iota(filter(x.s, and[iff[rectangle,blue],not[and[not[yellow],size1]]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:iff[%s,%s];4:rectangle;4:blue;4:not[%s];4:and[%s,%s];4:not[%s];4:yellow;4:size1
'λx.exists(and[green,size2], filter(x.s, implies[apply(same_size,iota(x.s)),circle]))'	0:exists(%s, %s);4:and[%s,%s];4:green;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:circle
'λx.apply(apply(same_shape,iota(filter(x.s, green))),iota(filter(x.s, size3)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(and[not[and[apply(same_color,x.o),size2]],yellow],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size2;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(or[yellow,not[or[green,implies[size2,size1]]]],iota(filter(filter(x.s, and[triangle,size1]), and[and[circle,apply(same_size,iota(x.s))],triangle])))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:not[%s];4:or[%s,%s];4:green;4:implies[%s,%s];4:size2;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:size1;4:and[%s,%s];4:and[%s,%s];4:circle;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:triangle
'λx.apply(and[size1,triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:triangle;1:%s.o;2:x
'λx.apply(and[size3,triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:triangle;1:%s.o;2:x
'λx.apply(or[size3,rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:rectangle;1:%s.o;2:x
'λx.apply(or[size1,circle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[apply(same_shape,iota(filter(x.s, and[green,green]))),apply(size-lt,iota(filter(filter(x.s, green), blue)))],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:green;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue;4:rectangle;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, apply(same_color,x.o)), circle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle
'λx.apply(nor[nand[blue,size2],rectangle],x.o)'	0:apply(%s,%s);4:nor[%s,%s];4:nand[%s,%s];4:blue;4:size2;4:rectangle;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, or[size3,and[green,blue]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:and[%s,%s];4:green;4:blue
'λx.apply(nand[implies[size2,triangle],yellow],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:implies[%s,%s];4:size2;4:triangle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(filter(x.s, circle), triangle), and[apply(same_size,iota(filter(filter(x.s, yellow), green))),size1])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:green;4:size1
'λx.exists(and[triangle,and[circle,triangle]], filter(x.s, apply(same_size,x.o)))'	0:exists(%s, %s);4:and[%s,%s];4:triangle;4:and[%s,%s];4:circle;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, rectangle), yellow), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:yellow;4:rectangle
'λx.apply(nand[not[and[and[triangle,blue],or[apply(size-geq,x.o),apply(same_size,iota(x.s))]]],size3],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:triangle;4:blue;4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:size3;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, apply(size-lt,iota(x.s)))))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size3,circle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_size,x.o),iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.forall(implies[triangle,size2],x.s)'	0:forall(%s,%s);4:implies[%s,%s];4:triangle;4:size2;3:%s.s;2:x
'λx.apply(or[and[circle,blue],yellow],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:circle;4:blue;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(or[rectangle,size2],iota(filter(x.s, and[rectangle,green])))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:green
'λx.apply(and[size1,apply(same_size,x.o)],iota(filter(filter(x.s, circle), size2)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size2
'λx.apply(or[nor[size2,size1],size3],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:or[%s,%s];4:nor[%s,%s];4:size2;4:size1;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[apply(size-gt,x.o),not[green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:size-gt;1:%s.o;2:x;4:not[%s];4:green;1:%s.o;2:x
'λx.apply(and[and[size2,implies[rectangle,size2]],nor[size1,circle]],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size2;4:implies[%s,%s];4:rectangle;4:size2;4:nor[%s,%s];4:size1;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(blue,iota(filter(filter(filter(x.s, size2), iff[triangle,nand[blue,size3]]), and[not[blue],size1])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:iff[%s,%s];4:triangle;4:nand[%s,%s];4:blue;4:size3;4:and[%s,%s];4:not[%s];4:blue;4:size1
'λx.forall(and[size3,green],filter(filter(filter(filter(x.s, apply(same_size,x.o)), circle), size2), circle))'	0:forall(%s,%s);4:and[%s,%s];4:size3;4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:circle;4:size2;4:circle
'λx.apply(and[iff[yellow,circle],and[nor[and[green,circle],nand[size1,size1]],not[green]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:yellow;4:circle;4:and[%s,%s];4:nor[%s,%s];4:and[%s,%s];4:green;4:circle;4:nand[%s,%s];4:size1;4:size1;4:not[%s];4:green;1:%s.o;2:x
'λx.apply(apply(same_size,iota(filter(x.s, implies[or[size1,blue],size2]))),iota(x.s))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:implies[%s,%s];4:or[%s,%s];4:size1;4:blue;4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(iff[not[blue],and[apply(size-lt,iota(x.s)),yellow]],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:iff[%s,%s];4:not[%s];4:blue;4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:iota(%s);3:%s.s;2:x;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(or[apply(same_color,iota(x.s)),green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:green;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, and[or[rectangle,yellow],blue]), implies[or[rectangle,blue],size2])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:rectangle;4:yellow;4:blue;4:implies[%s,%s];4:or[%s,%s];4:rectangle;4:blue;4:size2
'λx.apply(or[green,blue],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(not[and[apply(same_color,x.o),circle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:circle;1:%s.o;2:x
'λx.apply(implies[green,triangle],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:green;4:triangle;1:%s.o;2:x
'λx.exists(and[size3,and[and[yellow,size2],apply(size-leq,x.o)]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:size3;4:and[%s,%s];4:and[%s,%s];4:yellow;4:size2;4:apply(%s,%s);5:size-leq;1:%s.o;2:x;3:%s.s;2:x
'λx.exists(and[apply(same_size,x.o),size3], filter(filter(x.s, circle), triangle))'	0:exists(%s, %s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle
'λx.exists(or[or[size3,size1],size2], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:or[%s,%s];4:size3;4:size1;4:size2;3:%s.s;2:x
'λx.apply(nor[size1,size2],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:nor[%s,%s];4:size1;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(yellow,iota(filter(x.s, apply(same_color,x.o))))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:%s.o;2:x
'λx.apply(and[size2,triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:triangle;1:%s.o;2:x
'λx.forall(and[yellow,triangle],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:yellow;4:triangle;3:%s.s;2:x
'λx.apply(green,iota(filter(filter(x.s, yellow), triangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle
'λx.contains(iota(filter(filter(x.s, size3), size1)), filter(filter(filter(x.s, rectangle), size2), or[not[and[circle,rectangle]],or[and[yellow,size1],and[rectangle,blue]]]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:circle;4:rectangle;4:or[%s,%s];4:and[%s,%s];4:yellow;4:size1;4:and[%s,%s];4:rectangle;4:blue
'λx.apply(and[blue,nand[circle,blue]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:nand[%s,%s];4:circle;4:blue;1:iota(%s);3:%s.s;2:x
'λx.contains(iota(x.s), filter(filter(x.s, not[size3]), or[or[size1,yellow],size3]))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;4:or[%s,%s];4:or[%s,%s];4:size1;4:yellow;4:size3
'λx.apply(or[and[size2,yellow],blue],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size2;4:yellow;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(and[apply(same_shape,iota(filter(filter(x.s, size1), nand[rectangle,nand[not[circle],or[iff[size2,rectangle],size1]]]))),blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:nand[%s,%s];4:rectangle;4:nand[%s,%s];4:not[%s];4:circle;4:or[%s,%s];4:iff[%s,%s];4:size2;4:rectangle;4:size1;4:blue;1:%s.o;2:x
'λx.apply(and[nand[nand[green,triangle],green],rectangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:nand[%s,%s];4:nand[%s,%s];4:green;4:triangle;4:green;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[circle,and[yellow,not[size3]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:and[%s,%s];4:yellow;4:not[%s];4:size3;1:%s.o;2:x
'λx.apply(and[rectangle,not[or[size1,or[apply(size-geq,iota(filter(x.s, and[yellow,size2]))),not[size1]]]]],iota(filter(x.s, not[size2])))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:not[%s];4:or[%s,%s];4:size1;4:or[%s,%s];4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size2;4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2
'λx.exists(yellow, filter(filter(x.s, rectangle), triangle))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:triangle
'λx.forall(rectangle,filter(x.s, not[size3]))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3
'λx.apply(and[yellow,triangle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.exists(nand[triangle,not[not[yellow]]], x.s)'	0:exists(%s, %s);4:nand[%s,%s];4:triangle;4:not[%s];4:not[%s];4:yellow;3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, apply(same_size,x.o)), or[and[blue,green],green]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:or[%s,%s];4:and[%s,%s];4:blue;4:green;4:green
'λx.empty(filter(x.s, and[blue,apply(same_size,iota(x.s))]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(same_shape,iota(filter(filter(filter(x.s, iff[rectangle,size3]), triangle), circle))),iota(filter(x.s, blue)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:rectangle;4:size3;4:triangle;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(implies[triangle,yellow],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:triangle;4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[nor[circle,yellow],triangle],x.o)'	0:apply(%s,%s);4:nand[%s,%s];4:nor[%s,%s];4:circle;4:yellow;4:triangle;1:%s.o;2:x
'λx.apply(not[blue],x.o)'	0:apply(%s,%s);4:not[%s];4:blue;1:%s.o;2:x
'λx.forall(apply(same_color,x.o),filter(x.s, or[size3,size1]))'	0:forall(%s,%s);4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:size1
'λx.apply(size2,iota(filter(x.s, and[size3,not[not[blue]]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:not[%s];4:not[%s];4:blue
'λx.apply(and[iff[apply(same_size,iota(x.s)),apply(same_size,x.o)],iff[triangle,implies[rectangle,yellow]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:iff[%s,%s];4:triangle;4:implies[%s,%s];4:rectangle;4:yellow;1:%s.o;2:x
'λx.exists(size1, filter(filter(filter(x.s, and[green,circle]), and[not[triangle],and[size1,apply(size-geq,x.o)]]), and[and[size3,triangle],blue]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:circle;4:and[%s,%s];4:not[%s];4:triangle;4:and[%s,%s];4:size1;4:apply(%s,%s);5:size-geq;1:%s.o;2:x;4:and[%s,%s];4:and[%s,%s];4:size3;4:triangle;4:blue
'λx.apply(and[apply(same_shape,iota(filter(x.s, and[green,green]))),apply(size-lt,iota(filter(x.s, triangle)))],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:green;4:apply(%s,%s);5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;1:%s.o;2:x
'λx.apply(not[apply(same_shape,x.o)],iota(filter(filter(x.s, yellow), or[and[yellow,apply(same_color,iota(x.s))],or[blue,or[triangle,size1]]])))'	0:apply(%s,%s);4:not[%s];4:apply(%s,%s);5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:and[%s,%s];4:yellow;4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:or[%s,%s];4:triangle;4:size1
'λx.apply(and[apply(same_color,x.o),blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:blue;1:%s.o;2:x
'λx.apply(or[green,and[apply(size-lt,x.o),rectangle]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:and[%s,%s];4:apply(%s,%s);5:size-lt;1:%s.o;2:x;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[blue,and[size2,size3]],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:size2;4:size3;4:size3;1:%s.o;2:x
'λx.forall(and[triangle,green],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:triangle;4:green;3:%s.s;2:x
'λx.exists(nor[size3,and[size3,not[triangle]]], filter(x.s, size2))'	0:exists(%s, %s);4:nor[%s,%s];4:size3;4:and[%s,%s];4:size3;4:not[%s];4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.exists(and[apply(same_size,x.o),apply(size-gt,x.o)], filter(x.s, blue))'	0:exists(%s, %s);4:and[%s,%s];4:apply(%s,%s);5:same_size;1:%s.o;2:x;4:apply(%s,%s);5:size-gt;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(or[yellow,rectangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.exists(apply(same_color,iota(filter(filter(filter(x.s, rectangle), and[apply(same_shape,iota(x.s)),rectangle]), nor[and[circle,blue],circle]))), filter(filter(filter(filter(filter(x.s, size3), not[green]), triangle), and[or[size1,and[and[triangle,and[or[not[size1],not[green]],or[and[size2,not[green]],circle]]],size2]],blue]), green))'	0:exists(%s, %s);4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:and[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:rectangle;4:nor[%s,%s];4:and[%s,%s];4:circle;4:blue;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:green;4:triangle;4:and[%s,%s];4:or[%s,%s];4:size1;4:and[%s,%s];4:and[%s,%s];4:triangle;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:size1;4:not[%s];4:green;4:or[%s,%s];4:and[%s,%s];4:size2;4:not[%s];4:green;4:circle;4:size2;4:blue;4:green
'λx.forall(or[circle,size3],filter(filter(x.s, apply(same_shape,x.o)), rectangle))'	0:forall(%s,%s);4:or[%s,%s];4:circle;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:rectangle
'λx.apply(or[rectangle,and[not[apply(same_shape,iota(filter(filter(filter(x.s, triangle), circle), circle)))],rectangle]],iota(filter(filter(x.s, iff[rectangle,iff[circle,green]]), yellow)))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:and[%s,%s];4:not[%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:circle;4:circle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:iff[%s,%s];4:rectangle;4:iff[%s,%s];4:circle;4:green;4:yellow
'λx.apply(and[or[and[not[nand[yellow,triangle]],rectangle],or[and[and[green,not[triangle]],size1],rectangle]],circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:not[%s];4:nand[%s,%s];4:yellow;4:triangle;4:rectangle;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:green;4:not[%s];4:triangle;4:size1;4:rectangle;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[apply(same_shape,iota(x.s)),not[apply(same_color,iota(x.s))]],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:apply(%s,%s);5:same_shape;1:iota(%s);3:%s.s;2:x;4:not[%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(rectangle,iota(filter(x.s, and[size1,triangle])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:triangle
'λx.apply(size3,iota(filter(filter(filter(filter(x.s, rectangle), yellow), green), size1)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:yellow;4:green;4:size1
'λx.contains(iota(filter(filter(x.s, circle), apply(same_color,x.o))), filter(filter(filter(filter(filter(filter(x.s, circle), implies[or[blue,and[yellow,nand[and[and[and[nor[rectangle,size3],green],blue],size1],blue]]],triangle]), green), triangle), size2), or[yellow,yellow]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:implies[%s,%s];4:or[%s,%s];4:blue;4:and[%s,%s];4:yellow;4:nand[%s,%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:nor[%s,%s];4:rectangle;4:size3;4:green;4:blue;4:size1;4:blue;4:triangle;4:green;4:triangle;4:size2;4:or[%s,%s];4:yellow;4:yellow
'λx.forall(rectangle,filter(x.s, and[and[and[circle,and[and[not[size2],size1],size3]],not[size2]],green]))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size2;4:size1;4:size3;4:not[%s];4:size2;4:green
'λx.apply(implies[circle,and[apply(same_size,iota(x.s)),or[circle,implies[yellow,triangle]]]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:circle;4:and[%s,%s];4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:implies[%s,%s];4:yellow;4:triangle;1:%s.o;2:x
'λx.apply(size1,iota(filter(x.s, nand[nand[nand[size2,and[and[yellow,nand[and[not[size3],green],apply(same_shape,x.o)]],green]],size3],and[yellow,and[green,not[size2]]]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:nand[%s,%s];4:nand[%s,%s];4:nand[%s,%s];4:size2;4:and[%s,%s];4:and[%s,%s];4:yellow;4:nand[%s,%s];4:and[%s,%s];4:not[%s];4:size3;4:green;4:apply(%s,%s);5:same_shape;1:%s.o;2:x;4:green;4:size3;4:and[%s,%s];4:yellow;4:and[%s,%s];4:green;4:not[%s];4:size2
'λx.apply(green,iota(filter(x.s, or[not[or[green,circle]],triangle])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:or[%s,%s];4:green;4:circle;4:triangle
'λx.forall(not[circle],filter(x.s, size2))'	0:forall(%s,%s);4:not[%s];4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.contains(iota(x.s), filter(x.s, rectangle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(green,iota(filter(filter(x.s, triangle), not[blue])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:not[%s];4:blue
'λx.apply(implies[implies[size2,green],blue],iota(x.s))'	0:apply(%s,%s);4:implies[%s,%s];4:implies[%s,%s];4:size2;4:green;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(nand[or[size2,green],triangle],iota(x.s))'	0:apply(%s,%s);4:nand[%s,%s];4:or[%s,%s];4:size2;4:green;4:triangle;1:iota(%s);3:%s.s;2:x
'λx.apply(and[iff[yellow,yellow],green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:iff[%s,%s];4:yellow;4:yellow;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(or[circle,rectangle],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(blue, filter(filter(x.s, apply(same_color,iota(filter(filter(filter(x.s, size2), not[size3]), yellow)))), size1))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:not[%s];4:size3;4:yellow;4:size1
'λx.apply(and[implies[and[not[blue],yellow],size1],green],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:implies[%s,%s];4:and[%s,%s];4:not[%s];4:blue;4:yellow;4:size1;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(not[size3],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(not[size1],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(not[and[and[size2,triangle],size1]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:triangle;4:size1;1:%s.o;2:x
'λx.apply(and[yellow,and[size2,green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:and[%s,%s];4:size2;4:green;1:%s.o;2:x
'λx.apply(and[size3,and[iff[not[nor[blue,green]],size3],green]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:and[%s,%s];4:iff[%s,%s];4:not[%s];4:nor[%s,%s];4:blue;4:green;4:size3;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(x.s, not[yellow]), yellow)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:yellow
'λx.apply(and[rectangle,and[nor[green,blue],and[yellow,and[and[blue,size2],green]]]],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:nor[%s,%s];4:green;4:blue;4:and[%s,%s];4:yellow;4:and[%s,%s];4:and[%s,%s];4:blue;4:size2;4:green;1:iota(%s);3:%s.s;2:x
'λx.apply(and[and[triangle,blue],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:triangle;4:blue;4:green;1:%s.o;2:x
'λx.apply(apply(same_size,x.o),iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:apply(%s,%s);5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[blue,apply(same_size,iota(x.s))],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(implies[implies[circle,green],and[size1,circle]],x.o)'	0:apply(%s,%s);4:implies[%s,%s];4:implies[%s,%s];4:circle;4:green;4:and[%s,%s];4:size1;4:circle;1:%s.o;2:x
'λx.apply(iff[size2,blue],iota(x.s))'	0:apply(%s,%s);4:iff[%s,%s];4:size2;4:blue;1:iota(%s);3:%s.s;2:x
'λx.exists(and[or[rectangle,apply(same_color,x.o)],size2], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:or[%s,%s];4:rectangle;4:apply(%s,%s);5:same_color;1:%s.o;2:x;4:size2;3:%s.s;2:x
'λx.contains(iota(filter(filter(x.s, nor[circle,or[triangle,and[green,green]]]), size2)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:nor[%s,%s];4:circle;4:or[%s,%s];4:triangle;4:and[%s,%s];4:green;4:green;4:size2;3:%s.s;2:x
'λx.apply(and[not[size3],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size3;4:blue;1:%s.o;2:x
'λx.forall(blue,filter(x.s, not[circle]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.empty(filter(filter(filter(x.s, not[size1]), apply(same_size,iota(x.s))), apply(size-leq,iota(x.s))))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:apply(%s,%s);5:size-leq;1:iota(%s);3:%s.s;2:x
'λx.apply(apply(size-geq,iota(filter(filter(filter(x.s, apply(same_size,iota(x.s))), yellow), size2))),x.o)'	0:apply(%s,%s);4:apply(%s,%s);5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:apply(%s,%s);5:same_size;1:iota(%s);3:%s.s;2:x;4:yellow;4:size2;1:%s.o;2:x
'λx.forall(size2,filter(filter(x.s, or[and[apply(same_color,iota(x.s)),triangle],circle]), not[yellow]))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:apply(%s,%s);5:same_color;1:iota(%s);3:%s.s;2:x;4:triangle;4:circle;4:not[%s];4:yellow
'λx.contains(x.o, filter(filter(filter(x.s, size2), or[circle,circle]), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:circle;4:circle;4:green
'λx.apply(nand[not[and[green,or[rectangle,triangle]]],or[nand[size3,blue],and[size3,circle]]],iota(filter(filter(x.s, size3), circle)))'	0:apply(%s,%s);4:nand[%s,%s];4:not[%s];4:and[%s,%s];4:green;4:or[%s,%s];4:rectangle;4:triangle;4:or[%s,%s];4:nand[%s,%s];4:size3;4:blue;4:and[%s,%s];4:size3;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle
'λx.apply(triangle,iota(filter(filter(filter(filter(filter(x.s, rectangle), green), size3), size2), triangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green;4:size3;4:size2;4:triangle

'λx.empty(filter(filter(x.s, not[and[green,curry[same_shape,x.o]]]), and[green,rectangle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:green;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:green;4:rectangle
'λx.forall(blue,filter(filter(x.s, or[curry[same_color,x.o],triangle]), not[size1]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:triangle;4:not[%s];4:size1
'λx.forall(or[and[curry[same_size,x.o],curry[same_color,x.o]],not[curry[same_shape,x.o]]],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(and[not[blue],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:blue;4:triangle;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(filter(x.s, blue), curry[same_shape,x.o]), not[curry[same_size,x.o]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.exists(curry[same_shape,x.o], filter(x.s, and[not[curry[same_color,x.o]],not[and[yellow,size1]]]))'	0:exists(%s, %s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:yellow;4:size1
'λx.empty(filter(filter(filter(x.s, rectangle), circle), not[curry[same_color,iota(filter(x.s, curry[same_shape,x.o]))]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle;4:not[%s];4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.empty(filter(filter(x.s, size2), curry[same_size,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.apply(not[and[or[size3,size2],blue]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:or[%s,%s];4:size3;4:size2;4:blue;1:%s.o;2:x
'λx.forall(circle,filter(filter(filter(x.s, curry[same_shape,x.o]), curry[same_color,x.o]), not[blue]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:not[%s];4:blue
'λx.exists(size2, filter(x.s, blue))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[curry[same_shape,iota(filter(filter(x.s, blue), size3))],not[blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3;4:not[%s];4:blue;1:%s.o;2:x
'λx.apply(not[or[triangle,yellow]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:triangle;4:yellow;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, not[rectangle]), blue), curry[same_shape,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.exists(curry[same_color,x.o], filter(x.s, not[curry[same_shape,x.o]]))'	0:exists(%s, %s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(not[size3],iota(filter(x.s, curry[size-geq,x.o])))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-geq;1:%s.o;2:x
'λx.exists(and[not[curry[same_shape,x.o]],curry[same_size,x.o]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(or[rectangle,blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:blue;1:%s.o;2:x
'λx.forall(blue,filter(x.s, and[circle,curry[same_size,x.o]]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.apply(and[curry[same_size,iota(filter(filter(x.s, green), rectangle))],not[size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle;4:not[%s];4:size1;1:%s.o;2:x
'λx.forall(yellow,filter(x.s, curry[size-gt,iota(filter(filter(x.s, curry[same_size,x.o]), triangle))]))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:triangle
'λx.exists(and[not[and[green,size2]],triangle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:green;4:size2;4:triangle;3:%s.s;2:x
'λx.apply(or[not[yellow],rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:yellow;4:rectangle;1:%s.o;2:x
'λx.empty(filter(filter(x.s, green), and[curry[same_size,x.o],size1]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:size1
'λx.apply(yellow,iota(filter(filter(x.s, size3), yellow)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow
'λx.apply(triangle,iota(filter(x.s, curry[same_size,iota(filter(x.s, triangle))])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(or[blue,and[triangle,green]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:and[%s,%s];4:triangle;4:green;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, curry[same_color,x.o])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(and[triangle,blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:blue;1:%s.o;2:x
'λx.apply(and[blue,blue],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(and[or[yellow,blue],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:yellow;4:blue;4:circle;1:%s.o;2:x
'λx.apply(or[not[blue],not[circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:blue;4:not[%s];4:circle;1:%s.o;2:x
'λx.apply(and[blue,or[curry[same_shape,x.o],blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue;1:%s.o;2:x
'λx.apply(or[triangle,or[triangle,and[rectangle,not[blue]]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:or[%s,%s];4:triangle;4:and[%s,%s];4:rectangle;4:not[%s];4:blue;1:%s.o;2:x
'λx.exists(not[and[circle,size1]], filter(x.s, not[or[curry[same_color,x.o],not[curry[same_shape,x.o]]]]))'	0:exists(%s, %s);4:not[%s];4:and[%s,%s];4:circle;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.forall(and[circle,size2],filter(filter(x.s, curry[same_shape,x.o]), not[curry[same_color,x.o]]))'	0:forall(%s,%s);4:and[%s,%s];4:circle;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(curry[same_color,iota(filter(x.s, rectangle))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;1:%s.o;2:x
'λx.apply(or[triangle,rectangle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.apply(blue,iota(filter(x.s, curry[size-leq,x.o])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-leq;1:%s.o;2:x
'λx.forall(blue,filter(filter(x.s, curry[same_color,x.o]), and[circle,curry[same_shape,x.o]]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:and[%s,%s];4:circle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.empty(filter(filter(x.s, curry[size-gt,x.o]), and[curry[same_shape,x.o],not[size3]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-gt;1:%s.o;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:size3
'λx.apply(triangle,iota(filter(filter(x.s, triangle), yellow)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:yellow
'λx.empty(filter(x.s, and[rectangle,and[green,curry[same_shape,x.o]]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:and[%s,%s];4:green;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, curry[size-gt,x.o]), blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-gt;1:%s.o;2:x;4:blue
'λx.exists(not[blue], filter(x.s, circle))'	0:exists(%s, %s);4:not[%s];4:blue;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(or[and[blue,circle],and[not[circle],or[green,yellow]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:blue;4:circle;4:and[%s,%s];4:not[%s];4:circle;4:or[%s,%s];4:green;4:yellow;1:%s.o;2:x
'λx.apply(or[size2,size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:size1;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, curry[same_shape,x.o]), or[not[curry[same_color,x.o]],size3]), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:size3;4:yellow
'λx.contains(iota(filter(filter(x.s, size1), green)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green;3:%s.s;2:x
'λx.forall(size2,filter(x.s, not[curry[size-geq,x.o]]))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:size-geq;1:%s.o;2:x
'λx.forall(size1,filter(x.s, or[size1,and[size3,curry[same_size,x.o]]]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:and[%s,%s];4:size3;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.exists(not[circle], filter(x.s, size2))'	0:exists(%s, %s);4:not[%s];4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(curry[same_size,iota(filter(x.s, and[size3,size3]))],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(or[rectangle,curry[same_color,iota(filter(x.s, circle))]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;1:%s.o;2:x
'λx.contains(iota(filter(x.s, not[or[curry[size-gt,x.o],and[size1,triangle]]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:curry[%s,%s];5:size-gt;1:%s.o;2:x;4:and[%s,%s];4:size1;4:triangle;3:%s.s;2:x
'λx.contains(iota(filter(x.s, not[curry[same_color,x.o]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:%s.s;2:x
'λx.exists(rectangle, filter(x.s, or[curry[same_color,x.o],size2]))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:size2
'λx.contains(x.o, filter(filter(x.s, not[blue]), not[circle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:not[%s];4:circle
'λx.apply(rectangle,iota(filter(x.s, and[rectangle,blue])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:blue
'λx.empty(filter(filter(x.s, green), and[size3,curry[same_shape,x.o]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:size3;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(triangle,iota(filter(x.s, and[triangle,not[green]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:not[%s];4:green
'λx.apply(yellow,iota(x.s))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(curry[same_size,iota(filter(filter(filter(x.s, not[or[and[yellow,size2],and[size1,yellow]]]), circle), curry[same_size,x.o]))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:yellow;4:size2;4:and[%s,%s];4:size1;4:yellow;4:circle;4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(curry[same_color,x.o],iota(filter(x.s, curry[same_shape,x.o])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, blue), size1)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1
'λx.apply(or[and[green,not[circle]],and[size2,triangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:green;4:not[%s];4:circle;4:and[%s,%s];4:size2;4:triangle;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, and[blue,and[blue,not[curry[same_color,x.o]]]]), curry[same_shape,x.o])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:and[%s,%s];4:blue;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.exists(blue, filter(x.s, or[triangle,curry[same_shape,x.o]]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(and[green,and[curry[same_shape,iota(filter(x.s, blue))],green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green;1:%s.o;2:x
'λx.exists(size1, filter(x.s, curry[same_shape,x.o]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(and[blue,not[triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:not[%s];4:triangle;1:%s.o;2:x
'λx.apply(or[and[circle,blue],and[not[circle],not[blue]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:circle;4:blue;4:and[%s,%s];4:not[%s];4:circle;4:not[%s];4:blue;1:%s.o;2:x
'λx.exists(or[and[curry[same_size,x.o],or[size1,circle]],not[blue]], filter(x.s, curry[same_color,x.o]))'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:or[%s,%s];4:size1;4:circle;4:not[%s];4:blue;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(not[triangle],iota(filter(x.s, curry[same_shape,x.o])))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, or[green,yellow]), circle)), filter(x.s, curry[size-gt,iota(filter(x.s, curry[size-lt,x.o]))]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:yellow;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-lt;1:%s.o;2:x
'λx.apply(or[and[or[green,circle],not[size1]],rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:green;4:circle;4:not[%s];4:size1;4:rectangle;1:%s.o;2:x
'λx.apply(curry[same_size,x.o],iota(filter(x.s, and[curry[same_color,x.o],blue])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:blue
'λx.forall(blue,filter(filter(x.s, and[rectangle,curry[same_shape,x.o]]), not[size2]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:size2
'λx.apply(triangle,iota(filter(x.s, curry[same_color,x.o])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(curry[same_shape,x.o],iota(filter(x.s, not[size1])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1
'λx.apply(size1,iota(filter(filter(filter(x.s, curry[size-gt,x.o]), size1), not[yellow])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-gt;1:%s.o;2:x;4:size1;4:not[%s];4:yellow
'λx.exists(green, filter(filter(x.s, curry[same_shape,x.o]), not[triangle]))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:triangle
'λx.contains(iota(filter(x.s, or[green,size1])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:size1;3:%s.s;2:x
'λx.apply(or[size2,not[blue]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:not[%s];4:blue;1:%s.o;2:x
'λx.empty(filter(x.s, and[curry[size-gt,x.o],curry[same_shape,x.o]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:size-gt;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(not[curry[same_size,x.o]],iota(filter(x.s, and[size1,blue])))'	0:apply(%s,%s);4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:blue
'λx.empty(filter(filter(filter(x.s, not[rectangle]), green), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;4:green;4:size3
'λx.apply(not[yellow],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(size3,iota(filter(filter(x.s, not[yellow]), size3)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:size3
'λx.apply(circle,iota(filter(x.s, or[curry[same_shape,x.o],circle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:circle
'λx.apply(and[not[blue],curry[same_shape,iota(filter(x.s, blue))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:blue;4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.apply(or[size3,circle],iota(filter(x.s, curry[same_size,x.o])))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.exists(triangle, filter(x.s, not[and[size2,green]]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:size2;4:green
'λx.apply(or[and[green,rectangle],triangle],iota(filter(filter(x.s, green), curry[same_shape,x.o])))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:green;4:rectangle;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.forall(blue,filter(filter(x.s, curry[same_shape,x.o]), circle))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:circle
'λx.forall(not[green],filter(x.s, curry[size-lt,x.o]))'	0:forall(%s,%s);4:not[%s];4:green;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-lt;1:%s.o;2:x
'λx.apply(not[curry[same_shape,x.o]],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.empty(filter(filter(x.s, not[and[size2,yellow]]), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:size2;4:yellow;4:triangle
'λx.apply(curry[same_color,x.o],iota(filter(filter(x.s, or[triangle,circle]), size1)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:circle;4:size1
'λx.exists(or[not[curry[same_color,x.o]],blue], filter(x.s, curry[same_shape,x.o]))'	0:exists(%s, %s);4:or[%s,%s];4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(not[yellow],iota(filter(filter(x.s, size2), circle)))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle
'λx.exists(and[size2,not[green]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:size2;4:not[%s];4:green;3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(filter(x.s, curry[same_shape,x.o]), blue), size2)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue;4:size2
'λx.apply(circle,iota(filter(filter(x.s, blue), circle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle
'λx.apply(size1,iota(filter(filter(x.s, triangle), green)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green
'λx.apply(or[or[circle,or[size1,size3]],blue],iota(filter(filter(x.s, curry[same_size,x.o]), curry[same_shape,x.o])))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:circle;4:or[%s,%s];4:size1;4:size3;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(and[size3,rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:rectangle;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, curry[same_color,x.o]), blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:blue
'λx.apply(or[blue,triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:triangle;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, size3), circle)), filter(filter(x.s, curry[same_shape,x.o]), or[yellow,circle]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:yellow;4:circle
'λx.apply(not[and[rectangle,triangle]],iota(filter(x.s, curry[same_shape,x.o])))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:rectangle;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.forall(and[size2,curry[same_shape,x.o]],filter(x.s, blue))'	0:forall(%s,%s);4:and[%s,%s];4:size2;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[circle,and[circle,size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:and[%s,%s];4:circle;4:size2;1:%s.o;2:x
'λx.forall(not[size1],filter(x.s, rectangle))'	0:forall(%s,%s);4:not[%s];4:size1;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[size3,yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:yellow;1:%s.o;2:x
'λx.forall(circle,filter(x.s, or[curry[size-lt,x.o],blue]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:size-lt;1:%s.o;2:x;4:blue
'λx.apply(and[not[rectangle],not[size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:rectangle;4:not[%s];4:size1;1:%s.o;2:x
'λx.apply(and[curry[same_shape,x.o],not[size2]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(or[not[yellow],curry[same_color,iota(filter(filter(x.s, not[blue]), size3))]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:yellow;4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:size3;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, and[and[blue,curry[same_shape,x.o]],blue])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue
'λx.apply(or[or[blue,triangle],rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:blue;4:triangle;4:rectangle;1:%s.o;2:x
'λx.apply(curry[same_color,iota(filter(filter(x.s, or[size1,curry[size-gt,x.o]]), not[triangle]))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:curry[%s,%s];5:size-gt;1:%s.o;2:x;4:not[%s];4:triangle;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(x.s, size2), and[blue,curry[same_shape,x.o]])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(filter(x.s, size1), size1), rectangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1;4:rectangle
'λx.apply(and[size1,yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:yellow;1:%s.o;2:x
'λx.forall(blue,filter(filter(x.s, curry[same_color,x.o]), circle))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:circle
'λx.apply(and[rectangle,or[curry[same_color,iota(filter(x.s, size2))],yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:or[%s,%s];4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:yellow;1:%s.o;2:x
'λx.apply(curry[same_size,x.o],iota(filter(x.s, not[rectangle])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle
'λx.apply(and[curry[same_shape,x.o],curry[size-lt,x.o]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:size-lt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[triangle,yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:yellow;1:%s.o;2:x
'λx.apply(curry[same_color,x.o],iota(filter(filter(x.s, size3), green)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green
'λx.exists(not[or[triangle,and[curry[same_color,x.o],yellow]]], x.s)'	0:exists(%s, %s);4:not[%s];4:or[%s,%s];4:triangle;4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:yellow;3:%s.s;2:x
'λx.forall(not[size3],filter(filter(x.s, rectangle), blue))'	0:forall(%s,%s);4:not[%s];4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue
'λx.apply(not[and[blue,not[circle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:blue;4:not[%s];4:circle;1:%s.o;2:x
'λx.apply(and[blue,size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:size2;1:%s.o;2:x
'λx.apply(and[not[rectangle],or[circle,blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:rectangle;4:or[%s,%s];4:circle;4:blue;1:%s.o;2:x
'λx.exists(not[rectangle], filter(x.s, curry[same_shape,x.o]))'	0:exists(%s, %s);4:not[%s];4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.empty(filter(filter(x.s, not[curry[same_size,x.o]]), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:size3
'λx.apply(blue,iota(filter(x.s, size3)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(not[or[not[circle],blue]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:not[%s];4:circle;4:blue;1:%s.o;2:x
'λx.apply(or[not[triangle],size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:triangle;4:size3;1:%s.o;2:x
'λx.exists(circle, filter(x.s, or[yellow,curry[same_color,x.o]]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.forall(size1,filter(filter(x.s, curry[same_shape,x.o]), curry[size-lt,x.o]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:size-lt;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(x.s, green), curry[same_shape,x.o])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(curry[same_color,x.o],iota(filter(filter(x.s, green), or[size3,size3])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:size3;4:size3
'λx.empty(filter(filter(filter(x.s, curry[same_color,x.o]), curry[size-geq,x.o]), and[blue,size2]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:curry[%s,%s];5:size-geq;1:%s.o;2:x;4:and[%s,%s];4:blue;4:size2
'λx.apply(yellow,x.o)'	0:apply(%s,%s);4:yellow;1:%s.o;2:x
'λx.forall(circle,filter(filter(x.s, curry[same_size,x.o]), blue))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:blue
'λx.apply(curry[same_size,iota(filter(x.s, not[size3]))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;1:%s.o;2:x
'λx.apply(or[size1,blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:blue;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, or[rectangle,blue]), size1))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:blue;4:size1
'λx.apply(blue,iota(filter(filter(x.s, not[rectangle]), or[yellow,circle])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;4:or[%s,%s];4:yellow;4:circle
'λx.apply(or[size1,or[and[yellow,size2],rectangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:or[%s,%s];4:and[%s,%s];4:yellow;4:size2;4:rectangle;1:%s.o;2:x
'λx.apply(not[and[size2,not[circle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size2;4:not[%s];4:circle;1:%s.o;2:x
'λx.exists(not[size2], filter(filter(x.s, curry[same_color,x.o]), or[triangle,and[size1,yellow]]))'	0:exists(%s, %s);4:not[%s];4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:or[%s,%s];4:triangle;4:and[%s,%s];4:size1;4:yellow
'λx.empty(filter(filter(x.s, rectangle), or[and[size1,yellow],blue]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:or[%s,%s];4:and[%s,%s];4:size1;4:yellow;4:blue
'λx.forall(not[curry[same_shape,x.o]],filter(x.s, or[size1,and[triangle,blue]]))'	0:forall(%s,%s);4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:and[%s,%s];4:triangle;4:blue
'λx.exists(not[yellow], filter(x.s, or[curry[same_shape,x.o],yellow]))'	0:exists(%s, %s);4:not[%s];4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:yellow
'λx.forall(size2,filter(x.s, curry[size-leq,x.o]))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-leq;1:%s.o;2:x
'λx.apply(or[triangle,blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:blue;1:%s.o;2:x
'λx.exists(not[curry[same_size,x.o]], filter(x.s, triangle))'	0:exists(%s, %s);4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(not[rectangle],x.o)'	0:apply(%s,%s);4:not[%s];4:rectangle;1:%s.o;2:x
'λx.forall(blue,filter(filter(x.s, circle), curry[size-lt,x.o]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:curry[%s,%s];5:size-lt;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, circle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(not[yellow],iota(filter(x.s, and[curry[same_color,x.o],circle])))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:circle
'λx.contains(x.o, filter(filter(x.s, or[green,circle]), or[blue,triangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:circle;4:or[%s,%s];4:blue;4:triangle
'λx.apply(curry[size-lt,x.o],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:curry[%s,%s];5:size-lt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.empty(filter(filter(filter(x.s, curry[same_size,x.o]), circle), not[blue]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:circle;4:not[%s];4:blue
'λx.empty(filter(filter(filter(x.s, not[circle]), yellow), curry[same_color,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:yellow;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.forall(and[curry[same_shape,x.o],curry[same_color,x.o]],filter(x.s, curry[same_shape,x.o]))'	0:forall(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(not[and[yellow,and[size3,not[rectangle]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:size3;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.apply(or[size3,curry[same_size,iota(filter(x.s, size3))]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;1:%s.o;2:x
'λx.apply(or[and[size3,green],and[or[size1,rectangle],blue]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size3;4:green;4:and[%s,%s];4:or[%s,%s];4:size1;4:rectangle;4:blue;1:%s.o;2:x
'λx.empty(filter(filter(x.s, curry[same_color,x.o]), and[circle,not[blue]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:and[%s,%s];4:circle;4:not[%s];4:blue
'λx.forall(and[yellow,not[size1]],filter(x.s, rectangle))'	0:forall(%s,%s);4:and[%s,%s];4:yellow;4:not[%s];4:size1;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(not[green],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:%s.s;2:x
'λx.forall(size3,filter(x.s, and[curry[same_size,iota(filter(filter(x.s, curry[same_shape,x.o]), green))],size1]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:green;4:size1
'λx.forall(not[and[circle,and[not[blue],and[circle,curry[same_color,x.o]]]]],x.s)'	0:forall(%s,%s);4:not[%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:not[%s];4:blue;4:and[%s,%s];4:circle;4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:%s.s;2:x
'λx.forall(or[curry[size-geq,iota(filter(x.s, curry[size-leq,x.o]))],size2],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:curry[%s,%s];5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-leq;1:%s.o;2:x;4:size2;3:%s.s;2:x
'λx.exists(size2, filter(x.s, or[and[curry[same_shape,x.o],blue],yellow]))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue;4:yellow
'λx.exists(and[not[and[circle,green]],curry[same_color,iota(filter(x.s, not[curry[same_color,x.o]]))]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:circle;4:green;4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(or[not[circle],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:circle;4:blue;1:%s.o;2:x
'λx.apply(curry[same_shape,x.o],iota(filter(x.s, curry[same_shape,x.o])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(curry[same_size,iota(filter(x.s, circle))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;1:%s.o;2:x
'λx.apply(size2,iota(filter(x.s, size2)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.contains(x.o, filter(filter(x.s, or[or[yellow,rectangle],green]), or[and[circle,circle],blue]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:yellow;4:rectangle;4:green;4:or[%s,%s];4:and[%s,%s];4:circle;4:circle;4:blue
'λx.contains(iota(filter(filter(x.s, circle), curry[size-geq,x.o])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:curry[%s,%s];5:size-geq;1:%s.o;2:x;3:%s.s;2:x
'λx.forall(size1,filter(filter(x.s, blue), circle))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle
'λx.forall(curry[same_shape,x.o],filter(filter(x.s, or[size1,blue]), not[yellow]))'	0:forall(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:blue;4:not[%s];4:yellow
'λx.contains(x.o, filter(x.s, and[or[not[size2],green],rectangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:size2;4:green;4:rectangle
'λx.apply(not[and[not[or[circle,size1]],or[size3,blue]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:or[%s,%s];4:circle;4:size1;4:or[%s,%s];4:size3;4:blue;1:%s.o;2:x
'λx.forall(or[circle,not[green]],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:circle;4:not[%s];4:green;3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, curry[same_shape,x.o]), not[curry[same_color,x.o]]), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:rectangle
'λx.exists(not[circle], filter(x.s, curry[same_shape,x.o]))'	0:exists(%s, %s);4:not[%s];4:circle;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(or[and[yellow,rectangle],circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:yellow;4:rectangle;4:circle;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, or[curry[same_color,x.o],blue])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:blue
'λx.empty(filter(filter(x.s, or[curry[size-gt,x.o],blue]), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:size-gt;1:%s.o;2:x;4:blue;4:rectangle
'λx.apply(not[curry[same_size,x.o]],iota(filter(x.s, and[curry[same_shape,x.o],size3])))'	0:apply(%s,%s);4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size3
'λx.apply(curry[same_shape,x.o],iota(filter(filter(x.s, not[size3]), blue)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;4:blue
'λx.apply(and[size3,not[rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.contains(x.o, x.s)'	0:contains(%s, %s);1:%s.o;2:x;3:%s.s;2:x
'λx.forall(circle,filter(filter(x.s, curry[same_shape,x.o]), and[not[curry[same_color,x.o]],or[rectangle,triangle]]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:or[%s,%s];4:rectangle;4:triangle
'λx.apply(not[and[size3,blue]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size3;4:blue;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, circle), size3)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3
'λx.empty(filter(filter(x.s, and[curry[same_shape,x.o],and[blue,curry[same_color,x.o]]]), not[circle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:blue;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:not[%s];4:circle
'λx.apply(yellow,iota(filter(filter(x.s, size3), circle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle
'λx.empty(filter(filter(filter(x.s, not[triangle]), size1), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:size1;4:yellow
'λx.contains(iota(filter(filter(x.s, size1), rectangle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle;3:%s.s;2:x
'λx.forall(yellow,filter(filter(x.s, size2), circle))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle
'λx.forall(or[curry[same_shape,x.o],curry[same_size,x.o]],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;3:%s.s;2:x
'λx.forall(not[curry[same_shape,x.o]],filter(x.s, yellow))'	0:forall(%s,%s);4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(not[size1],iota(filter(x.s, curry[same_shape,x.o])))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, not[curry[size-geq,iota(filter(filter(filter(filter(x.s, size3), size3), circle), curry[same_size,x.o]))]]), blue), and[rectangle,size3]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size3;4:circle;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:blue;4:and[%s,%s];4:rectangle;4:size3
'λx.apply(not[and[yellow,not[size3]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:yellow;4:not[%s];4:size3;1:%s.o;2:x
'λx.apply(or[and[not[rectangle],green],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:not[%s];4:rectangle;4:green;4:blue;1:%s.o;2:x
'λx.apply(or[size1,curry[same_size,x.o]],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(or[triangle,or[or[yellow,rectangle],green]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:or[%s,%s];4:or[%s,%s];4:yellow;4:rectangle;4:green;1:%s.o;2:x
'λx.exists(and[triangle,not[green]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:triangle;4:not[%s];4:green;3:%s.s;2:x
'λx.forall(size2,filter(x.s, size3))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(rectangle, filter(filter(x.s, curry[same_color,x.o]), and[size2,not[blue]]))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:and[%s,%s];4:size2;4:not[%s];4:blue
'λx.apply(and[not[and[yellow,rectangle]],or[not[size3],size3]],iota(filter(x.s, curry[same_shape,x.o])))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:yellow;4:rectangle;4:or[%s,%s];4:not[%s];4:size3;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.exists(and[or[not[curry[same_color,x.o]],and[and[yellow,size1],size2]],curry[same_shape,x.o]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:or[%s,%s];4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:and[%s,%s];4:and[%s,%s];4:yellow;4:size1;4:size2;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.exists(and[not[and[size1,circle]],curry[same_shape,x.o]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:size1;4:circle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(and[blue,not[size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:not[%s];4:size1;1:%s.o;2:x
'λx.exists(and[curry[same_shape,x.o],curry[size-lt,x.o]], filter(x.s, blue))'	0:exists(%s, %s);4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:size-lt;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.exists(not[curry[same_color,x.o]], filter(filter(x.s, curry[same_shape,x.o]), not[yellow]))'	0:exists(%s, %s);4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:yellow
'λx.empty(filter(filter(x.s, size3), not[or[curry[same_shape,x.o],circle]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:circle
'λx.apply(not[and[circle,not[blue]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:circle;4:not[%s];4:blue;1:%s.o;2:x
'λx.forall(blue,filter(filter(x.s, curry[same_shape,x.o]), size2))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size2
'λx.contains(x.o, filter(filter(x.s, circle), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green
'λx.empty(filter(filter(filter(x.s, curry[same_size,iota(x.s)]), size1), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:iota(%s);3:%s.s;2:x;4:size1;4:yellow
'λx.apply(not[and[size1,not[blue]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size1;4:not[%s];4:blue;1:%s.o;2:x
'λx.empty(filter(filter(x.s, and[curry[same_color,x.o],blue]), curry[size-gt,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:blue;4:curry[%s,%s];5:size-gt;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(x.s, not[circle]), yellow)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:yellow
'λx.forall(or[size1,circle],filter(filter(x.s, yellow), curry[same_size,x.o]))'	0:forall(%s,%s);4:or[%s,%s];4:size1;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.contains(iota(filter(x.s, and[curry[same_shape,x.o],curry[same_shape,x.o]])), filter(x.s, blue))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.forall(and[or[circle,and[curry[same_shape,iota(filter(filter(x.s, curry[size-geq,x.o]), curry[same_shape,x.o]))],curry[same_color,x.o]]],circle],filter(x.s, circle))'	0:forall(%s,%s);4:and[%s,%s];4:or[%s,%s];4:circle;4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-geq;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(curry[same_size,iota(filter(x.s, or[not[circle],size3]))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:circle;4:size3;1:%s.o;2:x
'λx.empty(filter(filter(x.s, curry[size-lt,x.o]), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-lt;1:%s.o;2:x;4:green
'λx.exists(curry[same_shape,x.o], filter(x.s, or[curry[size-lt,x.o],and[not[triangle],green]]))'	0:exists(%s, %s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:size-lt;1:%s.o;2:x;4:and[%s,%s];4:not[%s];4:triangle;4:green
'λx.empty(filter(filter(x.s, curry[same_shape,x.o]), or[green,yellow]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:green;4:yellow
'λx.apply(blue,iota(filter(x.s, and[not[curry[same_color,x.o]],blue])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:blue
'λx.apply(yellow,iota(filter(x.s, size2)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.forall(blue,filter(x.s, size1))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(circle,iota(filter(filter(x.s, and[curry[same_shape,x.o],green]), green)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:green;4:green
'λx.apply(blue,iota(filter(filter(filter(x.s, curry[same_color,x.o]), blue), blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:blue;4:blue
'λx.contains(iota(filter(filter(x.s, size3), circle)), filter(filter(x.s, circle), blue))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue
'λx.exists(not[green], filter(x.s, triangle))'	0:exists(%s, %s);4:not[%s];4:green;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(circle,iota(filter(filter(x.s, and[curry[same_size,x.o],blue]), circle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:blue;4:circle
'λx.apply(curry[same_shape,x.o],iota(filter(filter(x.s, blue), or[green,size1])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:green;4:size1
'λx.exists(and[not[yellow],and[size1,curry[same_shape,x.o]]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:yellow;4:and[%s,%s];4:size1;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.empty(filter(filter(x.s, or[circle,rectangle]), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:rectangle;4:blue
'λx.apply(curry[size-geq,x.o],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:curry[%s,%s];5:size-geq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(curry[same_shape,iota(filter(x.s, or[circle,curry[size-geq,x.o]]))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:curry[%s,%s];5:size-geq;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(curry[same_shape,x.o],iota(filter(filter(filter(x.s, blue), size1), or[circle,rectangle])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1;4:or[%s,%s];4:circle;4:rectangle
'λx.exists(not[triangle], filter(x.s, yellow))'	0:exists(%s, %s);4:not[%s];4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.exists(and[circle,yellow], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:circle;4:yellow;3:%s.s;2:x
'λx.apply(curry[same_shape,iota(x.s)],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(curry[same_shape,x.o],iota(filter(filter(x.s, blue), curry[same_color,x.o])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(not[curry[size-geq,x.o]],iota(filter(filter(filter(x.s, size2), and[yellow,yellow]), or[triangle,yellow])))'	0:apply(%s,%s);4:not[%s];4:curry[%s,%s];5:size-geq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:yellow;4:yellow;4:or[%s,%s];4:triangle;4:yellow
'λx.apply(size2,iota(filter(filter(x.s, circle), not[size1])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:size1
'λx.apply(circle,x.o)'	0:apply(%s,%s);4:circle;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, not[or[triangle,size1]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:triangle;4:size1
'λx.exists(not[curry[same_size,x.o]], filter(x.s, green))'	0:exists(%s, %s);4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(or[or[circle,size3],rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:circle;4:size3;4:rectangle;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, and[and[not[curry[same_shape,x.o]],blue],not[size1]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue;4:not[%s];4:size1
'λx.empty(filter(filter(x.s, blue), curry[size-gt,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:curry[%s,%s];5:size-gt;1:%s.o;2:x
'λx.exists(curry[same_shape,x.o], filter(x.s, not[rectangle]))'	0:exists(%s, %s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle
'λx.apply(yellow,iota(filter(filter(x.s, size3), curry[same_color,x.o])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.exists(curry[same_size,x.o], filter(x.s, not[size3]))'	0:exists(%s, %s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3
'λx.apply(rectangle,iota(filter(filter(x.s, size1), curry[same_shape,x.o])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.empty(filter(filter(x.s, curry[same_size,x.o]), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:size1
'λx.apply(or[or[yellow,size1],green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:yellow;4:size1;4:green;1:%s.o;2:x
'λx.exists(and[curry[same_color,x.o],rectangle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:rectangle;3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(filter(x.s, or[size3,yellow]), or[not[yellow],size1]), curry[same_color,x.o])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:yellow;4:or[%s,%s];4:not[%s];4:yellow;4:size1;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(not[and[or[green,yellow],triangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:or[%s,%s];4:green;4:yellow;4:triangle;1:%s.o;2:x
'λx.exists(curry[same_shape,x.o], filter(x.s, green))'	0:exists(%s, %s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.forall(size1,filter(x.s, and[curry[same_shape,x.o],curry[size-lt,x.o]]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:size-lt;1:%s.o;2:x
'λx.apply(or[or[and[green,yellow],or[blue,and[triangle,green]]],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:green;4:yellow;4:or[%s,%s];4:blue;4:and[%s,%s];4:triangle;4:green;4:blue;1:%s.o;2:x
'λx.apply(and[green,not[triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:not[%s];4:triangle;1:%s.o;2:x
'λx.empty(filter(x.s, curry[size-lt,x.o]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-lt;1:%s.o;2:x
'λx.apply(curry[same_shape,iota(filter(filter(x.s, circle), and[curry[same_size,x.o],blue]))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:blue;1:%s.o;2:x
'λx.apply(or[or[blue,rectangle],not[size1]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:blue;4:rectangle;4:not[%s];4:size1;1:%s.o;2:x
'λx.empty(filter(filter(x.s, rectangle), curry[same_shape,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.exists(size3, filter(x.s, or[triangle,yellow]))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:yellow
'λx.exists(and[and[or[size1,not[triangle]],curry[same_shape,x.o]],green], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size1;4:not[%s];4:triangle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:green;3:%s.s;2:x
'λx.apply(curry[same_color,x.o],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(not[or[size1,curry[same_size,iota(filter(x.s, size3))]]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:size1;4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;1:%s.o;2:x
'λx.apply(not[size1],iota(filter(x.s, not[size1])))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1
'λx.exists(curry[same_shape,x.o], filter(x.s, not[size1]))'	0:exists(%s, %s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1
'λx.apply(size1,iota(x.s))'	0:apply(%s,%s);4:size1;1:iota(%s);3:%s.s;2:x
'λx.forall(circle,filter(filter(filter(x.s, curry[same_color,x.o]), not[blue]), curry[same_shape,x.o]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:not[%s];4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(or[rectangle,size1],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.forall(and[curry[same_shape,x.o],curry[same_shape,x.o]],filter(x.s, curry[size-lt,x.o]))'	0:forall(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-lt;1:%s.o;2:x
'λx.exists(blue, filter(x.s, triangle))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.exists(curry[same_color,x.o], filter(x.s, triangle))'	0:exists(%s, %s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(or[circle,triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:triangle;1:%s.o;2:x
'λx.apply(or[size3,and[size1,blue]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:and[%s,%s];4:size1;4:blue;1:%s.o;2:x
'λx.contains(iota(filter(x.s, curry[size-leq,x.o])), filter(x.s, blue))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-leq;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(curry[same_color,x.o],iota(filter(x.s, and[green,size3])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:size3
'λx.forall(rectangle,filter(x.s, or[green,size1]))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:size1
'λx.apply(and[or[yellow,green],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:yellow;4:green;4:circle;1:%s.o;2:x
'λx.apply(triangle,iota(filter(x.s, green)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(or[circle,or[size1,green]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:or[%s,%s];4:size1;4:green;1:%s.o;2:x
'λx.apply(or[not[circle],size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:circle;4:size3;1:%s.o;2:x
'λx.apply(or[blue,curry[same_color,iota(filter(x.s, blue))]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, curry[same_color,x.o]), size1), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:size1;4:triangle
'λx.apply(curry[same_shape,iota(filter(filter(x.s, blue), or[circle,size3]))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:circle;4:size3;1:%s.o;2:x
'λx.forall(curry[size-lt,x.o],filter(x.s, size3))'	0:forall(%s,%s);4:curry[%s,%s];5:size-lt;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.forall(or[curry[same_size,x.o],curry[same_color,x.o]],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:%s.s;2:x
'λx.forall(triangle,filter(x.s, size3))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.contains(x.o, filter(filter(x.s, green), curry[same_shape,iota(filter(x.s, blue))]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.forall(green,filter(filter(x.s, yellow), curry[same_shape,x.o]))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.exists(curry[same_color,x.o], filter(filter(x.s, rectangle), size1))'	0:exists(%s, %s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1
'λx.forall(curry[same_shape,x.o],filter(filter(x.s, green), rectangle))'	0:forall(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle
'λx.apply(not[and[size1,yellow]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size1;4:yellow;1:%s.o;2:x
'λx.apply(or[and[rectangle,yellow],circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:rectangle;4:yellow;4:circle;1:%s.o;2:x
'λx.exists(and[or[triangle,rectangle],or[rectangle,yellow]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:or[%s,%s];4:triangle;4:rectangle;4:or[%s,%s];4:rectangle;4:yellow;3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(x.s, or[size2,yellow]), triangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:yellow;4:triangle
'λx.exists(not[rectangle], filter(x.s, size3))'	0:exists(%s, %s);4:not[%s];4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.forall(rectangle,filter(filter(x.s, curry[same_shape,x.o]), size1))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size1
'λx.apply(or[circle,green],iota(filter(x.s, not[blue])))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.forall(curry[size-leq,iota(filter(x.s, curry[same_shape,x.o]))],filter(x.s, size3))'	0:forall(%s,%s);4:curry[%s,%s];5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(and[rectangle,green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:green;1:%s.o;2:x
'λx.forall(or[and[curry[same_size,x.o],size1],triangle],filter(filter(x.s, curry[same_shape,x.o]), yellow))'	0:forall(%s,%s);4:or[%s,%s];4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:size1;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:yellow
'λx.apply(or[size1,triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:triangle;1:%s.o;2:x
'λx.apply(curry[same_shape,iota(filter(x.s, size3))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;1:%s.o;2:x
'λx.exists(curry[size-gt,x.o], filter(x.s, size1))'	0:exists(%s, %s);4:curry[%s,%s];5:size-gt;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.empty(filter(x.s, not[curry[size-leq,x.o]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:size-leq;1:%s.o;2:x
'λx.apply(not[and[blue,size2]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:blue;4:size2;1:%s.o;2:x
'λx.forall(or[curry[same_shape,iota(filter(filter(x.s, triangle), green))],rectangle],filter(x.s, or[triangle,and[triangle,curry[same_color,iota(filter(x.s, curry[size-lt,x.o]))]]]))'	0:forall(%s,%s);4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:and[%s,%s];4:triangle;4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-lt;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, size3)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.empty(filter(filter(x.s, green), curry[same_shape,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.forall(not[triangle],filter(x.s, blue))'	0:forall(%s,%s);4:not[%s];4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.exists(and[not[blue],curry[same_shape,x.o]], filter(x.s, circle))'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(curry[same_shape,iota(filter(filter(x.s, size1), blue))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue;1:%s.o;2:x
'λx.apply(size2,iota(filter(x.s, size1)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(or[yellow,rectangle],iota(filter(filter(filter(x.s, rectangle), or[curry[same_color,x.o],triangle]), not[and[green,or[size3,yellow]]])))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:or[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:triangle;4:not[%s];4:and[%s,%s];4:green;4:or[%s,%s];4:size3;4:yellow
'λx.empty(filter(filter(x.s, and[curry[same_color,x.o],not[size1]]), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:not[%s];4:size1;4:blue
'λx.apply(or[circle,and[size2,yellow]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:and[%s,%s];4:size2;4:yellow;1:%s.o;2:x
'λx.forall(curry[same_shape,x.o],filter(filter(x.s, not[curry[same_color,x.o]]), not[curry[same_size,x.o]]))'	0:forall(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.apply(or[or[rectangle,circle],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:rectangle;4:circle;4:blue;1:%s.o;2:x
'λx.apply(and[rectangle,size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:size3;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, size3), or[yellow,and[triangle,blue]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:yellow;4:and[%s,%s];4:triangle;4:blue;3:%s.s;2:x
'λx.apply(and[size2,not[triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:not[%s];4:triangle;1:%s.o;2:x
'λx.apply(not[and[yellow,rectangle]],iota(filter(x.s, curry[same_shape,x.o])))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:yellow;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.exists(green, filter(filter(x.s, curry[same_color,x.o]), circle))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:circle
'λx.apply(green,iota(filter(filter(x.s, green), size1)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1
'λx.empty(filter(filter(x.s, green), and[not[rectangle],curry[size-lt,x.o]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:not[%s];4:rectangle;4:curry[%s,%s];5:size-lt;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, and[and[circle,curry[same_size,x.o]],not[rectangle]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:circle;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:not[%s];4:rectangle
'λx.contains(x.o, filter(x.s, and[circle,blue]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:blue
'λx.apply(size2,iota(filter(x.s, curry[same_shape,x.o])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, yellow), triangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle
'λx.exists(circle, filter(x.s, curry[same_size,x.o]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.exists(not[size2], x.s)'	0:exists(%s, %s);4:not[%s];4:size2;3:%s.s;2:x
'λx.apply(not[curry[same_color,x.o]],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(or[blue,not[size1]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:not[%s];4:size1;1:%s.o;2:x
'λx.apply(not[and[green,size3]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:green;4:size3;1:%s.o;2:x
'λx.apply(curry[same_shape,x.o],iota(filter(x.s, not[and[yellow,rectangle]])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:yellow;4:rectangle
'λx.apply(not[and[and[yellow,size3],not[rectangle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:size3;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.apply(or[size3,size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:size2;1:%s.o;2:x
'λx.forall(not[curry[same_size,x.o]],filter(x.s, size3))'	0:forall(%s,%s);4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(triangle, filter(x.s, not[and[green,size2]]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:green;4:size2
'λx.apply(and[not[yellow],not[rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:yellow;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.exists(or[blue,or[rectangle,triangle]], filter(x.s, or[circle,yellow]))'	0:exists(%s, %s);4:or[%s,%s];4:blue;4:or[%s,%s];4:rectangle;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:yellow
'λx.exists(circle, filter(x.s, not[yellow]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow
'λx.apply(or[and[size2,yellow],size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size2;4:yellow;4:size1;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(x.s, curry[same_size,x.o]), yellow)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:yellow
'λx.apply(not[or[circle,blue]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:circle;4:blue;1:%s.o;2:x
'λx.apply(and[not[green],not[or[size3,triangle]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:green;4:not[%s];4:or[%s,%s];4:size3;4:triangle;1:%s.o;2:x
'λx.apply(or[or[and[triangle,size2],circle],size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:triangle;4:size2;4:circle;4:size1;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, curry[same_size,x.o]), size1), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:size1;4:yellow
'λx.exists(curry[same_shape,x.o], filter(x.s, not[curry[same_size,x.o]]))'	0:exists(%s, %s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.apply(or[triangle,size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:size2;1:%s.o;2:x
'λx.apply(size3,x.o)'	0:apply(%s,%s);4:size3;1:%s.o;2:x
'λx.forall(and[triangle,blue],filter(filter(filter(x.s, or[triangle,and[blue,curry[same_shape,x.o]]]), not[rectangle]), curry[same_color,x.o]))'	0:forall(%s,%s);4:and[%s,%s];4:triangle;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:and[%s,%s];4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:rectangle;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(or[size1,circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:circle;1:%s.o;2:x
'λx.exists(and[green,triangle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:green;4:triangle;3:%s.s;2:x
'λx.apply(not[and[or[circle,blue],or[triangle,rectangle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:or[%s,%s];4:circle;4:blue;4:or[%s,%s];4:triangle;4:rectangle;1:%s.o;2:x
'λx.apply(not[and[not[blue],not[circle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:blue;4:not[%s];4:circle;1:%s.o;2:x
'λx.apply(not[blue],iota(filter(x.s, and[size2,curry[same_color,x.o]])))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.exists(yellow, filter(x.s, circle))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(or[yellow,rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:rectangle;1:%s.o;2:x
'λx.empty(filter(filter(x.s, yellow), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size3
'λx.exists(or[triangle,size2], filter(x.s, not[green]))'	0:exists(%s, %s);4:or[%s,%s];4:triangle;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green
'λx.contains(iota(filter(filter(x.s, triangle), size1)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size1;3:%s.s;2:x
'λx.apply(not[and[size1,rectangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size1;4:rectangle;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, rectangle), green)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green
'λx.exists(size2, filter(x.s, not[or[and[curry[same_color,x.o],circle],yellow]]))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:circle;4:yellow
'λx.contains(iota(filter(filter(x.s, not[curry[same_color,x.o]]), size2)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:size2;3:%s.s;2:x
'λx.apply(not[size3],iota(filter(x.s, curry[same_size,x.o])))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.apply(or[and[triangle,green],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:triangle;4:green;4:blue;1:%s.o;2:x
'λx.exists(or[not[curry[same_color,x.o]],and[not[curry[same_size,x.o]],blue]], filter(x.s, curry[same_shape,x.o]))'	0:exists(%s, %s);4:or[%s,%s];4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:and[%s,%s];4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(not[size3],iota(filter(filter(x.s, curry[same_color,x.o]), circle)))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:circle
'λx.apply(and[curry[same_shape,x.o],circle],iota(filter(filter(x.s, circle), green)))'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green
'λx.exists(or[size3,blue], filter(x.s, or[green,curry[same_shape,x.o]]))'	0:exists(%s, %s);4:or[%s,%s];4:size3;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.exists(blue, filter(x.s, curry[same_shape,x.o]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.forall(triangle,filter(x.s, blue))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.exists(and[curry[same_shape,x.o],not[yellow]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:yellow;3:%s.s;2:x
'λx.apply(or[circle,not[yellow]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:not[%s];4:yellow;1:%s.o;2:x
'λx.forall(circle,filter(filter(x.s, curry[same_color,x.o]), blue))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:blue
'λx.contains(iota(filter(x.s, not[curry[same_color,x.o]])), filter(x.s, blue))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(circle,iota(filter(x.s, and[circle,curry[same_shape,x.o]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.exists(yellow, filter(filter(x.s, or[size2,triangle]), yellow))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:triangle;4:yellow
'λx.forall(not[curry[same_shape,x.o]],filter(x.s, curry[size-gt,x.o]))'	0:forall(%s,%s);4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-gt;1:%s.o;2:x
'λx.apply(or[not[size3],not[circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:size3;4:not[%s];4:circle;1:%s.o;2:x
'λx.forall(or[curry[size-gt,x.o],blue],filter(filter(x.s, curry[same_color,x.o]), size1))'	0:forall(%s,%s);4:or[%s,%s];4:curry[%s,%s];5:size-gt;1:%s.o;2:x;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:size1
'λx.exists(circle, filter(x.s, size1))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(or[blue,or[triangle,rectangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:or[%s,%s];4:triangle;4:rectangle;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, or[curry[same_shape,x.o],green]), not[size3]), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:green;4:not[%s];4:size3;4:triangle
'λx.exists(not[or[yellow,not[curry[same_shape,x.o]]]], x.s)'	0:exists(%s, %s);4:not[%s];4:or[%s,%s];4:yellow;4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(rectangle,iota(filter(x.s, not[curry[same_size,x.o]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.exists(and[rectangle,not[green]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:rectangle;4:not[%s];4:green;3:%s.s;2:x
'λx.apply(green,iota(filter(x.s, or[blue,and[curry[same_color,x.o],curry[same_shape,x.o]]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, green), size3)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size3
'λx.contains(x.o, filter(filter(x.s, or[or[size3,blue],size2]), circle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:size3;4:blue;4:size2;4:circle
'λx.apply(not[and[blue,triangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:blue;4:triangle;1:%s.o;2:x
'λx.forall(size2,filter(filter(x.s, curry[same_shape,x.o]), circle))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:circle
'λx.empty(filter(filter(filter(x.s, blue), not[circle]), curry[same_color,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:circle;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, or[blue,rectangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:rectangle
'λx.empty(filter(filter(x.s, and[size1,and[yellow,curry[same_shape,x.o]]]), not[rectangle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:and[%s,%s];4:yellow;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:rectangle
'λx.empty(filter(filter(x.s, not[blue]), and[curry[same_color,x.o],and[triangle,curry[same_shape,x.o]]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:and[%s,%s];4:triangle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(or[and[curry[same_color,iota(filter(x.s, curry[same_shape,x.o]))],size3],not[size3]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size3;4:not[%s];4:size3;1:%s.o;2:x
'λx.apply(or[size3,triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:triangle;1:%s.o;2:x
'λx.apply(or[blue,or[and[green,triangle],circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:or[%s,%s];4:and[%s,%s];4:green;4:triangle;4:circle;1:%s.o;2:x
'λx.exists(and[circle,blue], filter(x.s, curry[same_shape,x.o]))'	0:exists(%s, %s);4:and[%s,%s];4:circle;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.exists(or[circle,not[blue]], filter(filter(x.s, curry[same_shape,x.o]), curry[same_color,x.o]))'	0:exists(%s, %s);4:or[%s,%s];4:circle;4:not[%s];4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.exists(yellow, filter(x.s, size1))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(not[or[and[size2,triangle],size1]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:and[%s,%s];4:size2;4:triangle;4:size1;1:%s.o;2:x
'λx.forall(blue,filter(x.s, or[and[size3,circle],and[or[and[size2,size3],curry[same_shape,x.o]],size2]]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size3;4:circle;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size2;4:size3;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size2
'λx.forall(size1,filter(filter(filter(x.s, rectangle), size3), blue))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3;4:blue
'λx.apply(not[and[triangle,not[size3]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:triangle;4:not[%s];4:size3;1:%s.o;2:x
'λx.forall(yellow,filter(x.s, not[or[size2,circle]]))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:size2;4:circle
'λx.apply(or[and[size2,yellow],circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size2;4:yellow;4:circle;1:%s.o;2:x
'λx.apply(and[circle,or[green,yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:or[%s,%s];4:green;4:yellow;1:%s.o;2:x
'λx.forall(curry[size-leq,x.o],filter(x.s, circle))'	0:forall(%s,%s);4:curry[%s,%s];5:size-leq;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(or[blue,and[not[triangle],size3]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:and[%s,%s];4:not[%s];4:triangle;4:size3;1:%s.o;2:x
'λx.exists(circle, filter(filter(x.s, curry[same_size,x.o]), blue))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:blue
'λx.apply(size1,iota(filter(x.s, and[curry[size-gt,x.o],size1])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:size-gt;1:%s.o;2:x;4:size1
'λx.apply(curry[same_size,x.o],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(or[circle,blue], filter(x.s, size1))'	0:exists(%s, %s);4:or[%s,%s];4:circle;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(and[rectangle,yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:yellow;1:%s.o;2:x
'λx.apply(curry[same_color,iota(filter(x.s, size3))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, circle), blue))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue
'λx.contains(iota(filter(filter(x.s, size1), or[or[blue,circle],size3])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:or[%s,%s];4:or[%s,%s];4:blue;4:circle;4:size3;3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, not[circle]), not[blue]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:not[%s];4:blue
'λx.apply(not[green],iota(filter(filter(x.s, size1), circle)))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle
'λx.apply(not[and[green,size1]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:green;4:size1;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, and[not[not[curry[same_shape,x.o]]],blue]), blue)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue;4:blue;3:%s.s;2:x
'λx.apply(and[size2,green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:green;1:%s.o;2:x
'λx.apply(curry[same_color,iota(filter(x.s, blue))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.apply(and[yellow,rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:rectangle;1:%s.o;2:x
'λx.forall(yellow,filter(x.s, triangle))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.exists(not[triangle], filter(filter(x.s, or[green,size1]), or[and[rectangle,size3],curry[same_shape,x.o]]))'	0:exists(%s, %s);4:not[%s];4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:size1;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:size3;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.contains(iota(x.s), filter(filter(x.s, blue), circle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle
'λx.exists(and[curry[same_color,x.o],not[blue]], filter(x.s, or[curry[same_size,iota(filter(x.s, blue))],or[curry[same_size,x.o],blue]]))'	0:exists(%s, %s);4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:not[%s];4:blue;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:blue
'λx.apply(curry[size-gt,x.o],iota(filter(filter(x.s, size1), blue)))'	0:apply(%s,%s);4:curry[%s,%s];5:size-gt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue
'λx.apply(not[and[not[and[circle,blue]],or[blue,or[blue,circle]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:circle;4:blue;4:or[%s,%s];4:blue;4:or[%s,%s];4:blue;4:circle;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, curry[same_color,x.o]), size2)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:size2;3:%s.s;2:x
'λx.apply(or[or[curry[size-geq,iota(filter(x.s, blue))],green],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:curry[%s,%s];5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green;4:blue;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(x.s, triangle), not[blue]), curry[same_shape,x.o]), curry[same_color,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:not[%s];4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(or[curry[same_shape,iota(filter(filter(x.s, not[size1]), circle))],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:circle;4:blue;1:%s.o;2:x
'λx.apply(curry[same_size,x.o],iota(filter(filter(x.s, blue), curry[same_color,x.o])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.empty(filter(filter(x.s, curry[same_shape,x.o]), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:green
'λx.apply(not[and[triangle,or[yellow,green]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:triangle;4:or[%s,%s];4:yellow;4:green;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, not[circle]), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:green
'λx.apply(or[curry[same_color,x.o],triangle],iota(filter(x.s, not[green])))'	0:apply(%s,%s);4:or[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green
'λx.forall(size3,filter(filter(x.s, blue), or[curry[same_shape,x.o],size1]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size1
'λx.forall(size1,filter(filter(filter(x.s, or[yellow,blue]), curry[same_size,x.o]), rectangle))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:blue;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:rectangle
'λx.forall(or[not[and[curry[same_shape,x.o],size3]],curry[same_size,x.o]],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:not[%s];4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size3;4:curry[%s,%s];5:same_size;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(or[or[size3,circle],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:size3;4:circle;4:blue;1:%s.o;2:x
'λx.exists(and[blue,curry[size-gt,x.o]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:blue;4:curry[%s,%s];5:size-gt;1:%s.o;2:x;3:%s.s;2:x
'λx.exists(circle, filter(x.s, and[blue,curry[same_shape,x.o]]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(x.s, green), size1), not[triangle])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1;4:not[%s];4:triangle;3:%s.s;2:x
'λx.exists(not[size3], filter(filter(x.s, circle), curry[same_color,x.o]))'	0:exists(%s, %s);4:not[%s];4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(not[and[green,rectangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:green;4:rectangle;1:%s.o;2:x
'λx.apply(or[and[not[blue],size1],rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:not[%s];4:blue;4:size1;4:rectangle;1:%s.o;2:x
'λx.exists(or[blue,green], filter(x.s, curry[same_shape,x.o]))'	0:exists(%s, %s);4:or[%s,%s];4:blue;4:green;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(or[or[size3,blue],curry[same_shape,x.o]],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:size3;4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(green,iota(filter(filter(x.s, not[triangle]), green)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:green
'λx.apply(or[size3,and[size1,triangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:and[%s,%s];4:size1;4:triangle;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, size2)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.forall(curry[size-leq,x.o],filter(filter(x.s, or[size1,circle]), yellow))'	0:forall(%s,%s);4:curry[%s,%s];5:size-leq;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:circle;4:yellow
'λx.apply(not[and[not[blue],rectangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:blue;4:rectangle;1:%s.o;2:x
'λx.empty(filter(filter(x.s, blue), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1
'λx.apply(and[size3,circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:circle;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(curry[same_size,x.o],iota(filter(filter(x.s, triangle), size2)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2
'λx.apply(not[size3],x.o)'	0:apply(%s,%s);4:not[%s];4:size3;1:%s.o;2:x
'λx.apply(or[blue,not[circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:not[%s];4:circle;1:%s.o;2:x
'λx.apply(and[not[blue],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:blue;4:circle;1:%s.o;2:x
'λx.forall(or[size1,or[curry[same_shape,x.o],and[blue,size2]]],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:size1;4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:blue;4:size2;3:%s.s;2:x
'λx.forall(green,filter(filter(x.s, size3), curry[same_size,x.o]))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.apply(or[rectangle,triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:triangle;1:%s.o;2:x
'λx.forall(blue,filter(filter(filter(x.s, curry[same_color,x.o]), curry[same_shape,x.o]), triangle))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:triangle
'λx.exists(yellow, filter(x.s, not[triangle]))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.apply(and[blue,not[size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:not[%s];4:size3;1:%s.o;2:x
'λx.apply(curry[same_shape,iota(filter(filter(x.s, blue), size3))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3;1:%s.o;2:x
'λx.apply(or[circle,or[blue,triangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:or[%s,%s];4:blue;4:triangle;1:%s.o;2:x
'λx.exists(or[circle,not[blue]], filter(x.s, curry[same_color,x.o]))'	0:exists(%s, %s);4:or[%s,%s];4:circle;4:not[%s];4:blue;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(and[blue,or[triangle,size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:or[%s,%s];4:triangle;4:size2;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(x.s, or[triangle,rectangle]), size2)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:rectangle;4:size2
'λx.empty(filter(filter(x.s, rectangle), or[size1,blue]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:or[%s,%s];4:size1;4:blue
'λx.forall(blue,filter(x.s, and[circle,curry[size-geq,x.o]]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:curry[%s,%s];5:size-geq;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, not[curry[same_color,x.o]]), blue)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:blue;3:%s.s;2:x
'λx.apply(or[rectangle,curry[same_shape,x.o]],iota(filter(filter(filter(x.s, green), curry[size-geq,x.o]), circle)))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:curry[%s,%s];5:size-geq;1:%s.o;2:x;4:circle
'λx.apply(curry[same_color,x.o],iota(x.s))'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:%s.s;2:x
'λx.apply(curry[same_color,x.o],iota(filter(filter(filter(x.s, blue), size2), curry[same_shape,x.o])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.empty(filter(filter(x.s, not[blue]), curry[same_shape,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(curry[same_shape,x.o],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(curry[same_color,x.o],iota(filter(filter(x.s, circle), blue)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue
'λx.exists(green, filter(x.s, circle))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.exists(circle, filter(x.s, and[or[size1,size3],green]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:size1;4:size3;4:green
'λx.empty(filter(filter(x.s, size3), curry[size-lt,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:curry[%s,%s];5:size-lt;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, not[and[not[and[not[blue],circle]],not[rectangle]]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:not[%s];4:blue;4:circle;4:not[%s];4:rectangle
'λx.forall(curry[size-leq,x.o],filter(x.s, or[curry[same_shape,x.o],green]))'	0:forall(%s,%s);4:curry[%s,%s];5:size-leq;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:green
'λx.exists(blue, filter(x.s, or[size1,rectangle]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:rectangle
'λx.exists(green, x.s)'	0:exists(%s, %s);4:green;3:%s.s;2:x
'λx.forall(circle,x.s)'	0:forall(%s,%s);4:circle;3:%s.s;2:x
'λx.apply(not[circle],iota(filter(filter(x.s, or[size3,and[rectangle,size1]]), curry[same_color,x.o])))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:and[%s,%s];4:rectangle;4:size1;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.exists(size3, filter(x.s, or[yellow,triangle]))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:triangle
'λx.apply(or[triangle,or[rectangle,blue]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:or[%s,%s];4:rectangle;4:blue;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, size3), green)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green
'λx.apply(not[and[circle,not[size1]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:circle;4:not[%s];4:size1;1:%s.o;2:x
'λx.forall(curry[same_size,x.o],filter(filter(x.s, curry[same_shape,x.o]), not[curry[same_size,x.o]]))'	0:forall(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.exists(and[curry[same_color,x.o],size2], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:size2;3:%s.s;2:x
'λx.exists(green, filter(x.s, not[curry[same_color,x.o]]))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(not[not[or[blue,rectangle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:or[%s,%s];4:blue;4:rectangle;1:%s.o;2:x
'λx.forall(circle,filter(filter(filter(x.s, yellow), size1), curry[same_shape,x.o]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.empty(filter(x.s, and[circle,curry[size-gt,iota(filter(x.s, green))]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:curry[%s,%s];5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.contains(x.o, filter(x.s, not[size2]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2
'λx.apply(and[size2,curry[same_shape,iota(filter(x.s, blue))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.apply(and[circle,not[curry[same_shape,iota(filter(x.s, blue))]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:not[%s];4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, or[blue,curry[same_color,x.o]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.exists(and[not[green],rectangle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:green;4:rectangle;3:%s.s;2:x
'λx.exists(rectangle, x.s)'	0:exists(%s, %s);4:rectangle;3:%s.s;2:x
'λx.apply(size2,iota(x.s))'	0:apply(%s,%s);4:size2;1:iota(%s);3:%s.s;2:x
'λx.apply(or[not[or[blue,size1]],circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:or[%s,%s];4:blue;4:size1;4:circle;1:%s.o;2:x
'λx.apply(curry[same_size,iota(filter(x.s, triangle))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;1:%s.o;2:x
'λx.apply(and[rectangle,blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:blue;1:%s.o;2:x
'λx.empty(filter(filter(x.s, triangle), and[curry[same_shape,x.o],green]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:green
'λx.apply(not[green],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(curry[same_color,x.o],iota(filter(filter(x.s, size3), circle)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle
'λx.exists(or[blue,rectangle], filter(filter(x.s, curry[same_shape,x.o]), curry[same_color,x.o]))'	0:exists(%s, %s);4:or[%s,%s];4:blue;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.exists(and[and[not[yellow],not[yellow]],curry[same_shape,x.o]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:yellow;4:not[%s];4:yellow;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.exists(circle, filter(x.s, blue))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(curry[same_shape,iota(filter(filter(x.s, blue), size1))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, and[and[yellow,not[triangle]],yellow]), size2)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:yellow;4:not[%s];4:triangle;4:yellow;4:size2
'λx.empty(filter(filter(filter(x.s, curry[same_shape,x.o]), blue), not[circle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue;4:not[%s];4:circle
'λx.exists(and[rectangle,curry[same_color,x.o]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:rectangle;4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, curry[same_shape,iota(filter(x.s, blue))]), not[blue]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:blue
'λx.empty(filter(filter(filter(x.s, curry[same_shape,x.o]), not[blue]), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:blue;4:triangle
'λx.forall(rectangle,filter(x.s, or[size1,green]))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:green
'λx.forall(green,filter(filter(x.s, and[curry[size-lt,x.o],green]), circle))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:size-lt;1:%s.o;2:x;4:green;4:circle
'λx.empty(filter(filter(filter(x.s, curry[size-geq,x.o]), not[circle]), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-geq;1:%s.o;2:x;4:not[%s];4:circle;4:blue
'λx.forall(curry[same_color,iota(filter(filter(x.s, curry[same_color,x.o]), blue))],filter(filter(x.s, circle), rectangle))'	0:forall(%s,%s);4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle
'λx.forall(and[size1,triangle],filter(x.s, green))'	0:forall(%s,%s);4:and[%s,%s];4:size1;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.empty(filter(filter(x.s, curry[size-lt,x.o]), curry[same_shape,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-lt;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.exists(curry[same_shape,x.o], filter(x.s, not[yellow]))'	0:exists(%s, %s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow
'λx.exists(not[yellow], filter(x.s, or[rectangle,curry[same_shape,x.o]]))'	0:exists(%s, %s);4:not[%s];4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, curry[same_shape,x.o]), size2), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size2;4:rectangle
'λx.exists(size2, filter(x.s, not[green]))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green
'λx.forall(yellow,filter(filter(filter(filter(x.s, circle), curry[same_color,x.o]), blue), curry[same_shape,x.o]))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(and[green,not[size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:not[%s];4:size3;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(x.s, curry[size-gt,x.o]), blue), size1)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-gt;1:%s.o;2:x;4:blue;4:size1;3:%s.s;2:x
'λx.apply(or[circle,blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:blue;1:%s.o;2:x
'λx.exists(size3, filter(x.s, not[blue]))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.apply(or[size1,yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:yellow;1:%s.o;2:x
'λx.apply(or[and[green,triangle],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:green;4:triangle;4:blue;1:%s.o;2:x
'λx.apply(not[and[not[blue],size2]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:blue;4:size2;1:%s.o;2:x
'λx.apply(or[or[green,green],size3],iota(filter(x.s, curry[size-lt,x.o])))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:green;4:green;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-lt;1:%s.o;2:x
'λx.apply(not[and[not[rectangle],yellow]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:rectangle;4:yellow;1:%s.o;2:x
'λx.contains(iota(filter(x.s, and[curry[size-leq,x.o],not[size1]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:size-leq;1:%s.o;2:x;4:not[%s];4:size1;3:%s.s;2:x
'λx.apply(not[size2],iota(filter(x.s, curry[same_shape,x.o])))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.exists(or[size1,not[curry[size-geq,x.o]]], filter(x.s, blue))'	0:exists(%s, %s);4:or[%s,%s];4:size1;4:not[%s];4:curry[%s,%s];5:size-geq;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.forall(size1,filter(x.s, and[curry[same_shape,x.o],yellow]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:yellow
'λx.contains(x.o, filter(x.s, and[rectangle,size3]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:size3
'λx.apply(and[not[blue],or[blue,curry[same_shape,iota(filter(x.s, blue))]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:blue;4:or[%s,%s];4:blue;4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.apply(or[or[rectangle,circle],size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:rectangle;4:circle;4:size3;1:%s.o;2:x
'λx.apply(or[blue,green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:green;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, blue), curry[same_shape,x.o])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(and[not[triangle],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:triangle;4:blue;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, yellow), or[triangle,and[green,rectangle]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:triangle;4:and[%s,%s];4:green;4:rectangle
'λx.apply(size2,iota(filter(filter(x.s, rectangle), yellow)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:yellow
'λx.empty(filter(filter(x.s, blue), not[curry[same_shape,x.o]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(and[and[size2,curry[same_shape,x.o]],not[triangle]],iota(filter(x.s, green)))'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size2;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.exists(circle, filter(x.s, and[or[size3,size1],or[green,not[curry[same_color,x.o]]]]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:size3;4:size1;4:or[%s,%s];4:green;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(or[and[triangle,size2],size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:triangle;4:size2;4:size1;1:%s.o;2:x
'λx.apply(or[yellow,curry[size-geq,iota(filter(x.s, blue))]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:curry[%s,%s];5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.forall(size1,filter(x.s, curry[size-lt,x.o]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-lt;1:%s.o;2:x
'λx.exists(or[not[or[curry[same_color,x.o],yellow]],curry[size-lt,x.o]], filter(x.s, curry[same_shape,x.o]))'	0:exists(%s, %s);4:or[%s,%s];4:not[%s];4:or[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:yellow;4:curry[%s,%s];5:size-lt;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(and[blue,not[rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.empty(filter(x.s, rectangle))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[size3,triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:triangle;1:%s.o;2:x
'λx.exists(not[curry[same_color,x.o]], filter(x.s, curry[same_shape,x.o]))'	0:exists(%s, %s);4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.forall(or[curry[size-leq,x.o],and[not[size3],not[curry[same_shape,x.o]]]],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:curry[%s,%s];5:size-leq;1:%s.o;2:x;4:and[%s,%s];4:not[%s];4:size3;4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.forall(size1,filter(x.s, rectangle))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(curry[same_shape,iota(filter(x.s, and[size2,blue]))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:blue;1:%s.o;2:x
'λx.apply(and[blue,rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:rectangle;1:%s.o;2:x
'λx.empty(filter(filter(x.s, size2), curry[size-lt,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:curry[%s,%s];5:size-lt;1:%s.o;2:x
'λx.exists(and[not[green],curry[same_size,x.o]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:green;4:curry[%s,%s];5:same_size;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(not[and[blue,green]],iota(filter(x.s, curry[size-leq,x.o])))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:blue;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-leq;1:%s.o;2:x
'λx.apply(and[or[blue,circle],curry[same_color,x.o]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:blue;4:circle;4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(or[or[or[size3,size2],blue],rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:size3;4:size2;4:blue;4:rectangle;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(x.s, not[and[circle,curry[same_size,x.o]]]), yellow)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:circle;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:yellow
'λx.apply(circle,iota(filter(filter(x.s, size3), yellow)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow
'λx.apply(and[not[size2],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size2;4:rectangle;1:%s.o;2:x
'λx.apply(curry[same_color,iota(filter(x.s, circle))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;1:%s.o;2:x
'λx.apply(curry[size-gt,iota(filter(x.s, circle))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;1:%s.o;2:x
'λx.apply(size1,iota(filter(x.s, and[not[curry[same_shape,x.o]],blue])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue
'λx.forall(curry[size-geq,x.o],x.s)'	0:forall(%s,%s);4:curry[%s,%s];5:size-geq;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(or[blue,circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:circle;1:%s.o;2:x
'λx.apply(triangle,iota(filter(x.s, and[blue,size1])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size1
'λx.empty(filter(filter(filter(filter(x.s, not[curry[same_color,x.o]]), not[circle]), curry[same_shape,x.o]), curry[same_shape,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:not[%s];4:circle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.forall(yellow,filter(x.s, size3))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(curry[same_color,x.o],iota(filter(x.s, green)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.empty(filter(filter(filter(x.s, curry[same_color,x.o]), yellow), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:yellow;4:size1
'λx.apply(size2,iota(filter(x.s, and[circle,green])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:green
'λx.exists(or[triangle,and[yellow,circle]], filter(x.s, curry[same_size,x.o]))'	0:exists(%s, %s);4:or[%s,%s];4:triangle;4:and[%s,%s];4:yellow;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.exists(curry[same_size,x.o], filter(x.s, not[green]))'	0:exists(%s, %s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green
'λx.empty(filter(x.s, and[rectangle,curry[same_shape,x.o]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(or[rectangle,or[and[yellow,size2],size1]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:or[%s,%s];4:and[%s,%s];4:yellow;4:size2;4:size1;1:%s.o;2:x
'λx.exists(rectangle, filter(x.s, or[size2,curry[same_color,x.o]]))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.exists(size2, filter(filter(filter(x.s, curry[size-geq,x.o]), size2), triangle))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-geq;1:%s.o;2:x;4:size2;4:triangle
'λx.exists(yellow, filter(filter(x.s, curry[same_shape,x.o]), size3))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size3
'λx.apply(triangle,iota(filter(x.s, blue)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.exists(and[circle,and[size1,not[green]]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:circle;4:and[%s,%s];4:size1;4:not[%s];4:green;3:%s.s;2:x
'λx.apply(curry[same_shape,x.o],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(not[and[size3,triangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size3;4:triangle;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, or[circle,size1]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:size1
'λx.apply(circle,iota(filter(x.s, green)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(or[and[green,size3],or[size1,circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:green;4:size3;4:or[%s,%s];4:size1;4:circle;1:%s.o;2:x
'λx.forall(curry[same_size,x.o],filter(x.s, size3))'	0:forall(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.empty(filter(x.s, and[blue,rectangle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:rectangle
'λx.forall(not[size1],x.s)'	0:forall(%s,%s);4:not[%s];4:size1;3:%s.s;2:x
'λx.empty(filter(filter(x.s, curry[same_color,x.o]), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:yellow
'λx.apply(and[not[rectangle],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:rectangle;4:size2;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, size2), or[circle,curry[same_shape,x.o]])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:circle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(not[blue],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(size2,iota(filter(x.s, curry[size-leq,x.o])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-leq;1:%s.o;2:x
'λx.exists(not[triangle], filter(x.s, curry[same_shape,x.o]))'	0:exists(%s, %s);4:not[%s];4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.forall(curry[size-gt,x.o],filter(x.s, blue))'	0:forall(%s,%s);4:curry[%s,%s];5:size-gt;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[size1,rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:rectangle;1:%s.o;2:x
'λx.apply(not[size3],iota(filter(x.s, curry[same_shape,x.o])))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(curry[same_shape,x.o],iota(filter(filter(filter(x.s, size1), curry[same_color,x.o]), green)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:green
'λx.forall(not[curry[size-lt,x.o]],x.s)'	0:forall(%s,%s);4:not[%s];4:curry[%s,%s];5:size-lt;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(or[and[triangle,size2],and[size1,not[green]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:triangle;4:size2;4:and[%s,%s];4:size1;4:not[%s];4:green;1:%s.o;2:x
'λx.apply(curry[same_shape,x.o],iota(filter(filter(x.s, triangle), green)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green
'λx.apply(yellow,iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(and[not[rectangle],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:rectangle;4:yellow;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, and[rectangle,blue])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:blue
'λx.empty(filter(x.s, and[or[and[circle,curry[same_shape,x.o]],blue],curry[same_color,x.o]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:circle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(or[and[rectangle,green],size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:rectangle;4:green;4:size1;1:%s.o;2:x
'λx.apply(or[size3,yellow],iota(filter(x.s, or[curry[size-leq,x.o],size3])))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:size-leq;1:%s.o;2:x;4:size3
'λx.apply(curry[same_color,iota(filter(filter(x.s, curry[same_color,x.o]), rectangle))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:rectangle;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(x.s, curry[same_size,x.o]), blue)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:blue
'λx.apply(not[rectangle],iota(filter(x.s, and[curry[same_size,x.o],green])))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:green
'λx.apply(size3,iota(filter(filter(x.s, size3), blue)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue
'λx.empty(filter(filter(x.s, and[curry[same_size,x.o],yellow]), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:yellow;4:size1
'λx.contains(iota(filter(x.s, size3)), filter(x.s, curry[same_shape,x.o]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.empty(filter(filter(x.s, rectangle), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1
'λx.apply(or[size2,size1],iota(filter(filter(x.s, blue), curry[same_shape,x.o])))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, and[curry[same_color,x.o],curry[same_size,x.o]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.apply(curry[same_shape,iota(filter(filter(x.s, or[blue,size2]), size1))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:size2;4:size1;1:%s.o;2:x
'λx.apply(curry[same_size,iota(filter(x.s, size1))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;1:%s.o;2:x
'λx.apply(not[triangle],iota(filter(filter(x.s, or[size1,circle]), yellow)))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:circle;4:yellow
'λx.apply(and[blue,circle],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.empty(filter(x.s, and[and[curry[same_shape,x.o],curry[size-gt,x.o]],not[size3]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:size-gt;1:%s.o;2:x;4:not[%s];4:size3
'λx.apply(circle,iota(filter(filter(x.s, circle), not[green])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:green
'λx.apply(or[or[triangle,blue],rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:triangle;4:blue;4:rectangle;1:%s.o;2:x
'λx.empty(filter(x.s, and[and[and[curry[same_color,x.o],curry[same_shape,x.o]],not[blue]],triangle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:blue;4:triangle
'λx.contains(x.o, filter(x.s, rectangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(yellow,iota(filter(filter(filter(x.s, size3), curry[same_size,x.o]), yellow)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:yellow
'λx.exists(blue, filter(x.s, or[curry[same_shape,x.o],triangle]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:triangle
'λx.contains(iota(filter(x.s, and[curry[same_shape,x.o],circle])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:circle;3:%s.s;2:x
'λx.contains(x.o, filter(x.s, not[yellow]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow
'λx.apply(blue,iota(filter(x.s, curry[same_color,x.o])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(not[rectangle],iota(filter(filter(x.s, green), or[size2,and[not[circle],size3]])))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:size2;4:and[%s,%s];4:not[%s];4:circle;4:size3
'λx.contains(iota(filter(x.s, and[not[green],size3])), filter(filter(x.s, rectangle), not[curry[same_shape,x.o]]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:green;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, or[size3,curry[same_size,x.o]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.apply(curry[size-lt,x.o],iota(filter(filter(x.s, not[yellow]), size3)))'	0:apply(%s,%s);4:curry[%s,%s];5:size-lt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:size3
'λx.forall(or[curry[size-leq,x.o],size3],filter(x.s, curry[same_shape,x.o]))'	0:forall(%s,%s);4:or[%s,%s];4:curry[%s,%s];5:size-leq;1:%s.o;2:x;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(and[triangle,size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:size3;1:%s.o;2:x
'λx.apply(not[and[not[size1],rectangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:size1;4:rectangle;1:%s.o;2:x
'λx.forall(or[and[or[not[yellow],rectangle],not[and[curry[same_shape,x.o],or[size2,rectangle]]]],size3],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:not[%s];4:yellow;4:rectangle;4:not[%s];4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:size2;4:rectangle;4:size3;3:%s.s;2:x
'λx.apply(or[rectangle,not[blue]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:not[%s];4:blue;1:%s.o;2:x
'λx.apply(not[and[or[circle,rectangle],yellow]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:or[%s,%s];4:circle;4:rectangle;4:yellow;1:%s.o;2:x
'λx.empty(filter(filter(x.s, curry[same_size,x.o]), not[curry[same_size,iota(filter(x.s, and[not[and[rectangle,circle]],curry[same_shape,x.o]]))]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:not[%s];4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:rectangle;4:circle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.forall(green,filter(x.s, curry[size-gt,x.o]))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-gt;1:%s.o;2:x
'λx.apply(and[not[size1],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size1;4:blue;1:%s.o;2:x
'λx.forall(not[circle],filter(x.s, curry[same_size,x.o]))'	0:forall(%s,%s);4:not[%s];4:circle;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.apply(not[and[not[size1],yellow]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:size1;4:yellow;1:%s.o;2:x
'λx.exists(not[yellow], x.s)'	0:exists(%s, %s);4:not[%s];4:yellow;3:%s.s;2:x
'λx.apply(not[and[or[yellow,green],circle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:or[%s,%s];4:yellow;4:green;4:circle;1:%s.o;2:x
'λx.forall(yellow,filter(filter(filter(x.s, triangle), size2), curry[same_shape,x.o]))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, and[blue,curry[same_size,x.o]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.forall(circle,filter(filter(filter(x.s, size2), curry[same_shape,x.o]), green))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:green
'λx.forall(curry[same_size,x.o],filter(x.s, yellow))'	0:forall(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.exists(and[not[size3],or[green,yellow]], filter(x.s, curry[same_shape,x.o]))'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:size3;4:or[%s,%s];4:green;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.forall(or[curry[same_shape,x.o],not[blue]],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:blue;3:%s.s;2:x
'λx.apply(blue,iota(filter(x.s, and[not[curry[size-gt,x.o]],curry[same_color,x.o]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:curry[%s,%s];5:size-gt;1:%s.o;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, size2), curry[same_shape,x.o])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(not[and[triangle,or[green,yellow]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:triangle;4:or[%s,%s];4:green;4:yellow;1:%s.o;2:x
'λx.apply(curry[same_shape,iota(filter(filter(x.s, and[size1,curry[same_color,x.o]]), size1))],iota(filter(filter(filter(x.s, not[size1]), or[green,curry[same_shape,x.o]]), blue)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:or[%s,%s];4:green;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue
'λx.empty(filter(filter(filter(x.s, rectangle), curry[same_shape,x.o]), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size2
'λx.contains(iota(filter(x.s, curry[same_color,x.o])), filter(x.s, blue))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.forall(curry[size-geq,iota(filter(x.s, curry[same_size,x.o]))],x.s)'	0:forall(%s,%s);4:curry[%s,%s];5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;3:%s.s;2:x
'λx.forall(size3,filter(filter(x.s, and[and[or[yellow,size1],curry[same_shape,x.o]],and[not[curry[same_size,x.o]],curry[size-gt,x.o]]]), not[size3]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:or[%s,%s];4:yellow;4:size1;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:curry[%s,%s];5:size-gt;1:%s.o;2:x;4:not[%s];4:size3
'λx.exists(green, filter(x.s, curry[same_shape,x.o]))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, size3)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.forall(green,filter(filter(filter(x.s, curry[size-gt,x.o]), or[rectangle,curry[same_shape,x.o]]), yellow))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-gt;1:%s.o;2:x;4:or[%s,%s];4:rectangle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:yellow
'λx.apply(triangle,iota(filter(x.s, curry[size-lt,x.o])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-lt;1:%s.o;2:x
'λx.apply(or[size3,and[not[size3],and[not[and[rectangle,and[green,size3]]],and[not[and[yellow,rectangle]],curry[same_shape,iota(filter(filter(x.s, blue), curry[same_shape,x.o]))]]]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:and[%s,%s];4:not[%s];4:size3;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:rectangle;4:and[%s,%s];4:green;4:size3;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:yellow;4:rectangle;4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.forall(blue,filter(x.s, curry[same_shape,x.o]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(and[curry[same_color,x.o],or[blue,not[rectangle]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:or[%s,%s];4:blue;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, rectangle), size3), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3;4:blue
'λx.contains(iota(filter(x.s, rectangle)), filter(x.s, size2))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.contains(x.o, filter(x.s, not[triangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.exists(not[green], filter(x.s, curry[same_size,x.o]))'	0:exists(%s, %s);4:not[%s];4:green;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.apply(or[or[rectangle,blue],circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:rectangle;4:blue;4:circle;1:%s.o;2:x
'λx.apply(curry[same_shape,x.o],iota(filter(filter(x.s, blue), size3)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3
'λx.apply(or[yellow,or[or[curry[same_color,iota(filter(filter(x.s, rectangle), blue))],size1],size3]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:or[%s,%s];4:or[%s,%s];4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue;4:size1;4:size3;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, and[blue,circle])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:circle
'λx.apply(or[and[curry[same_shape,x.o],or[rectangle,size3]],circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:rectangle;4:size3;4:circle;1:%s.o;2:x
'λx.apply(not[size1],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(curry[same_size,iota(filter(filter(x.s, size3), circle))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle;1:%s.o;2:x
'λx.apply(not[green],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(curry[same_color,x.o],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(not[curry[same_size,iota(filter(filter(x.s, curry[same_shape,x.o]), curry[size-lt,x.o]))]],x.o)'	0:apply(%s,%s);4:not[%s];4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:size-lt;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[green,not[circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:not[%s];4:circle;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, size2)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.exists(blue, filter(filter(x.s, curry[same_color,x.o]), and[circle,curry[same_shape,x.o]]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:and[%s,%s];4:circle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.exists(triangle, filter(x.s, size1))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(blue,iota(filter(filter(x.s, triangle), blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue
'λx.apply(and[not[blue],not[circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:blue;4:not[%s];4:circle;1:%s.o;2:x
'λx.forall(curry[same_shape,x.o],filter(x.s, curry[size-leq,x.o]))'	0:forall(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-leq;1:%s.o;2:x
'λx.forall(or[and[curry[same_size,x.o],curry[same_size,x.o]],green],filter(x.s, not[triangle]))'	0:forall(%s,%s);4:or[%s,%s];4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:green;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.apply(size2,iota(filter(x.s, and[not[curry[same_color,x.o]],size2])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:size2
'λx.forall(or[rectangle,blue],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:rectangle;4:blue;3:%s.s;2:x
'λx.apply(curry[same_shape,x.o],iota(filter(filter(x.s, size3), blue)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue
'λx.empty(filter(x.s, and[not[circle],and[curry[same_shape,x.o],not[curry[same_color,x.o]]]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:circle;4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.empty(filter(filter(x.s, yellow), or[and[size1,size1],curry[same_shape,x.o]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:and[%s,%s];4:size1;4:size1;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(or[blue,and[size3,not[triangle]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:and[%s,%s];4:size3;4:not[%s];4:triangle;1:%s.o;2:x
'λx.exists(and[not[curry[same_size,x.o]],curry[same_shape,x.o]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.exists(or[and[size1,triangle],and[not[curry[same_color,x.o]],not[triangle]]], filter(x.s, curry[same_shape,x.o]))'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:size1;4:triangle;4:and[%s,%s];4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:not[%s];4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(not[curry[same_shape,x.o]],iota(filter(filter(x.s, curry[same_size,iota(filter(x.s, yellow))]), triangle)))'	0:apply(%s,%s);4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle
'λx.apply(or[and[blue,circle],and[green,triangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:blue;4:circle;4:and[%s,%s];4:green;4:triangle;1:%s.o;2:x
'λx.apply(or[or[blue,rectangle],triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:blue;4:rectangle;4:triangle;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, size3), blue), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue;4:rectangle
'λx.exists(and[circle,curry[same_size,x.o]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:circle;4:curry[%s,%s];5:same_size;1:%s.o;2:x;3:%s.s;2:x
'λx.forall(and[size1,rectangle],filter(filter(x.s, curry[same_shape,x.o]), yellow))'	0:forall(%s,%s);4:and[%s,%s];4:size1;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:yellow
'λx.apply(curry[same_shape,x.o],iota(filter(x.s, and[or[blue,circle],curry[same_size,x.o]])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:blue;4:circle;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.exists(not[curry[same_size,x.o]], filter(x.s, size1))'	0:exists(%s, %s);4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(yellow,iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(and[and[size2,rectangle],not[blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size2;4:rectangle;4:not[%s];4:blue;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, curry[same_shape,x.o]), green), not[circle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:green;4:not[%s];4:circle
'λx.exists(curry[same_shape,x.o], filter(x.s, blue))'	0:exists(%s, %s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.empty(filter(x.s, and[curry[same_shape,x.o],green]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:green
'λx.apply(or[or[circle,blue],and[green,triangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:circle;4:blue;4:and[%s,%s];4:green;4:triangle;1:%s.o;2:x
'λx.forall(yellow,filter(x.s, not[size2]))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2
'λx.apply(not[curry[same_size,x.o]],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(and[curry[same_shape,iota(filter(x.s, blue))],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, not[size3]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3
'λx.exists(and[or[rectangle,size3],or[curry[same_shape,x.o],triangle]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:or[%s,%s];4:rectangle;4:size3;4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:triangle;3:%s.s;2:x
'λx.apply(blue,iota(filter(x.s, and[size3,curry[same_shape,x.o]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(and[rectangle,and[rectangle,not[or[curry[same_shape,iota(filter(x.s, circle))],and[size1,green]]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:rectangle;4:not[%s];4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:size1;4:green;1:%s.o;2:x
'λx.apply(not[and[or[rectangle,yellow],not[circle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:or[%s,%s];4:rectangle;4:yellow;4:not[%s];4:circle;1:%s.o;2:x
'λx.apply(curry[same_shape,iota(filter(x.s, or[size3,size2]))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:size2;1:%s.o;2:x
'λx.forall(rectangle,filter(filter(x.s, blue), curry[same_shape,x.o]))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.exists(or[circle,green], filter(x.s, or[size2,size3]))'	0:exists(%s, %s);4:or[%s,%s];4:circle;4:green;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:size3
'λx.apply(curry[same_color,x.o],iota(filter(filter(x.s, green), circle)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:circle
'λx.forall(size2,filter(x.s, blue))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.exists(or[and[blue,curry[same_shape,x.o]],and[yellow,size3]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:yellow;4:size3;3:%s.s;2:x
'λx.apply(and[not[size3],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size3;4:blue;1:%s.o;2:x
'λx.exists(size1, filter(x.s, triangle))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(circle,iota(filter(x.s, circle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.forall(blue,filter(x.s, triangle))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.empty(filter(filter(x.s, curry[size-gt,x.o]), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-gt;1:%s.o;2:x;4:triangle
'λx.apply(or[rectangle,and[size1,circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:and[%s,%s];4:size1;4:circle;1:%s.o;2:x
'λx.apply(or[not[yellow],triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:yellow;4:triangle;1:%s.o;2:x
'λx.apply(or[or[and[size2,yellow],size1],rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size2;4:yellow;4:size1;4:rectangle;1:%s.o;2:x
'λx.apply(or[or[blue,green],triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:blue;4:green;4:triangle;1:%s.o;2:x
'λx.apply(curry[same_color,iota(filter(filter(x.s, or[yellow,size3]), circle))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:size3;4:circle;1:%s.o;2:x
'λx.apply(or[not[not[curry[same_shape,x.o]]],not[size1]],iota(filter(filter(x.s, rectangle), blue)))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue
'λx.contains(iota(filter(x.s, triangle)), filter(x.s, green))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(or[and[curry[same_shape,iota(filter(filter(x.s, yellow), or[rectangle,size3]))],size3],or[green,size2]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:rectangle;4:size3;4:size3;4:or[%s,%s];4:green;4:size2;1:%s.o;2:x
'λx.apply(and[blue,curry[same_color,x.o]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(curry[same_size,iota(filter(filter(filter(x.s, not[curry[same_size,x.o]]), triangle), size3))],iota(filter(x.s, green)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:triangle;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(blue,iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(and[curry[size-leq,iota(filter(x.s, or[green,circle]))],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:circle;4:blue;1:%s.o;2:x
'λx.apply(or[blue,or[rectangle,triangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:or[%s,%s];4:rectangle;4:triangle;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, curry[same_shape,x.o]), size1), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size1;4:yellow
'λx.apply(curry[same_color,x.o],iota(filter(filter(filter(x.s, blue), size1), curry[same_size,x.o])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.apply(curry[same_size,x.o],iota(filter(x.s, curry[same_shape,x.o])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.exists(and[or[not[triangle],blue],curry[same_shape,x.o]], filter(x.s, curry[same_color,x.o]))'	0:exists(%s, %s);4:and[%s,%s];4:or[%s,%s];4:not[%s];4:triangle;4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(or[triangle,not[yellow]],iota(filter(x.s, curry[same_shape,x.o])))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.forall(curry[size-geq,iota(filter(x.s, curry[same_shape,x.o]))],filter(x.s, size1))'	0:forall(%s,%s);4:curry[%s,%s];5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.forall(rectangle,filter(filter(x.s, size3), yellow))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow
'λx.forall(curry[same_size,x.o],filter(filter(x.s, not[circle]), not[curry[same_color,x.o]]))'	0:forall(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.exists(size3, filter(filter(x.s, or[yellow,or[triangle,curry[same_color,x.o]]]), size3))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:or[%s,%s];4:triangle;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:size3
'λx.exists(size1, filter(x.s, circle))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(not[and[blue,size3]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:blue;4:size3;1:%s.o;2:x
'λx.forall(size3,filter(filter(x.s, and[yellow,curry[same_shape,x.o]]), yellow))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:yellow
'λx.apply(not[and[or[triangle,rectangle],blue]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:or[%s,%s];4:triangle;4:rectangle;4:blue;1:%s.o;2:x
'λx.exists(not[curry[same_size,x.o]], filter(x.s, or[yellow,curry[same_shape,x.o]]))'	0:exists(%s, %s);4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.forall(and[blue,curry[same_shape,x.o]],filter(x.s, blue))'	0:forall(%s,%s);4:and[%s,%s];4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.contains(iota(filter(x.s, green)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;3:%s.s;2:x
'λx.contains(iota(filter(x.s, and[blue,or[green,size3]])), filter(x.s, curry[same_color,x.o]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:or[%s,%s];4:green;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.exists(or[blue,curry[same_shape,x.o]], filter(x.s, not[or[curry[same_color,x.o],size1]]))'	0:exists(%s, %s);4:or[%s,%s];4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:size1
'λx.apply(and[yellow,not[circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:not[%s];4:circle;1:%s.o;2:x
'λx.apply(and[or[green,yellow],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:green;4:yellow;4:circle;1:%s.o;2:x
'λx.apply(curry[same_color,iota(filter(filter(x.s, not[yellow]), size3))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:size3;1:%s.o;2:x
'λx.forall(green,filter(filter(x.s, and[blue,curry[same_color,iota(filter(filter(filter(x.s, blue), not[size2]), circle))]]), curry[same_color,x.o]))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:size2;4:circle;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, or[blue,circle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:circle
'λx.apply(or[rectangle,circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:circle;1:%s.o;2:x
'λx.apply(and[circle,or[yellow,green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:or[%s,%s];4:yellow;4:green;1:%s.o;2:x
'λx.forall(curry[same_shape,iota(filter(x.s, circle))],filter(x.s, size3))'	0:forall(%s,%s);4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(and[curry[same_shape,iota(filter(x.s, blue))],not[green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:green;1:%s.o;2:x
'λx.apply(or[and[size1,green],or[rectangle,and[yellow,triangle]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size1;4:green;4:or[%s,%s];4:rectangle;4:and[%s,%s];4:yellow;4:triangle;1:%s.o;2:x
'λx.apply(not[and[not[circle],size1]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:circle;4:size1;1:%s.o;2:x
'λx.apply(curry[same_color,x.o],iota(filter(x.s, or[green,blue])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:blue
'λx.apply(or[not[blue],rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:blue;4:rectangle;1:%s.o;2:x
'λx.apply(or[and[circle,size1],rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:circle;4:size1;4:rectangle;1:%s.o;2:x
'λx.apply(or[and[not[yellow],or[circle,green]],and[not[and[circle,curry[same_shape,x.o]]],yellow]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:not[%s];4:yellow;4:or[%s,%s];4:circle;4:green;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:circle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:yellow;1:%s.o;2:x
'λx.forall(not[blue],filter(filter(filter(x.s, not[size1]), curry[same_size,x.o]), curry[same_color,x.o]))'	0:forall(%s,%s);4:not[%s];4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(not[and[circle,or[yellow,green]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:circle;4:or[%s,%s];4:yellow;4:green;1:%s.o;2:x
'λx.empty(x.s)'	0:empty(%s);3:%s.s;2:x
'λx.exists(or[not[blue],circle], filter(x.s, or[blue,curry[same_color,x.o]]))'	0:exists(%s, %s);4:or[%s,%s];4:not[%s];4:blue;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(not[and[triangle,yellow]],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:triangle;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(or[size1,not[blue]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:not[%s];4:blue;1:%s.o;2:x
'λx.apply(curry[same_size,x.o],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(not[green],x.o)'	0:apply(%s,%s);4:not[%s];4:green;1:%s.o;2:x
'λx.apply(or[triangle,not[circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:not[%s];4:circle;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, curry[size-leq,iota(filter(filter(x.s, blue), size1))]), triangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1;4:triangle
'λx.apply(circle,iota(filter(x.s, and[curry[same_shape,x.o],green])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:green
'λx.apply(curry[same_color,x.o],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(or[size2,not[yellow]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:not[%s];4:yellow;1:%s.o;2:x
'λx.exists(curry[same_shape,x.o], filter(filter(x.s, triangle), size3))'	0:exists(%s, %s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3
'λx.apply(size3,iota(filter(filter(x.s, size3), not[rectangle])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:rectangle
'λx.apply(and[size1,curry[same_shape,x.o]],iota(filter(filter(x.s, or[green,or[blue,rectangle]]), size1)))'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:or[%s,%s];4:blue;4:rectangle;4:size1
'λx.forall(blue,filter(x.s, curry[size-leq,iota(filter(x.s, curry[same_size,x.o]))]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.apply(curry[same_size,x.o],iota(filter(x.s, curry[size-leq,x.o])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-leq;1:%s.o;2:x
'λx.apply(or[or[curry[same_shape,iota(filter(x.s, yellow))],size2],circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2;4:circle;1:%s.o;2:x
'λx.apply(curry[same_size,iota(filter(x.s, curry[same_shape,x.o]))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, curry[same_size,x.o]), size1), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:size1;4:rectangle
'λx.apply(and[blue,curry[same_shape,x.o]],iota(filter(x.s, curry[same_shape,iota(filter(x.s, circle))])))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.exists(or[blue,size1], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:blue;4:size1;3:%s.s;2:x
'λx.apply(not[or[blue,circle]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:blue;4:circle;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, curry[same_shape,x.o]), size2), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size2;4:yellow
'λx.contains(iota(filter(filter(filter(x.s, or[curry[same_color,x.o],and[size2,size3]]), blue), blue)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:and[%s,%s];4:size2;4:size3;4:blue;4:blue;3:%s.s;2:x
'λx.forall(blue,filter(filter(x.s, or[curry[same_color,x.o],size3]), rectangle))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:size3;4:rectangle
'λx.apply(or[not[circle],circle],iota(filter(x.s, curry[same_shape,x.o])))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:circle;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(curry[same_shape,x.o],iota(filter(filter(x.s, circle), curry[same_size,x.o])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.apply(and[blue,triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:triangle;1:%s.o;2:x
'λx.exists(triangle, x.s)'	0:exists(%s, %s);4:triangle;3:%s.s;2:x
'λx.apply(not[or[triangle,blue]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:triangle;4:blue;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, curry[size-geq,iota(filter(x.s, blue))]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(curry[same_color,x.o],iota(filter(x.s, not[yellow])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow
'λx.exists(size1, filter(filter(x.s, blue), curry[same_color,x.o]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.forall(rectangle,filter(filter(filter(x.s, size1), curry[same_shape,x.o]), yellow))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:yellow
'λx.apply(curry[same_shape,iota(filter(filter(x.s, and[rectangle,not[curry[same_color,x.o]]]), rectangle))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:rectangle;1:%s.o;2:x
'λx.empty(filter(filter(x.s, yellow), not[or[rectangle,curry[same_shape,x.o]]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:or[%s,%s];4:rectangle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.empty(filter(filter(x.s, and[yellow,size1]), curry[same_color,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size1;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.forall(rectangle,filter(filter(x.s, size1), blue))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue
'λx.exists(green, filter(x.s, or[curry[same_size,iota(filter(filter(x.s, rectangle), curry[size-lt,x.o]))],yellow]))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:curry[%s,%s];5:size-lt;1:%s.o;2:x;4:yellow
'λx.exists(size3, filter(x.s, triangle))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(or[circle,and[size3,green]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:and[%s,%s];4:size3;4:green;1:%s.o;2:x
'λx.apply(or[not[blue],size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:blue;4:size2;1:%s.o;2:x
'λx.exists(yellow, filter(x.s, size2))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(curry[size-gt,x.o],iota(filter(x.s, and[size1,blue])))'	0:apply(%s,%s);4:curry[%s,%s];5:size-gt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:blue
'λx.forall(not[rectangle],filter(x.s, curry[same_shape,x.o]))'	0:forall(%s,%s);4:not[%s];4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.forall(curry[same_size,x.o],filter(x.s, not[curry[same_color,x.o]]))'	0:forall(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, size2), circle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle
'λx.apply(curry[same_shape,iota(filter(x.s, not[and[rectangle,yellow]]))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:rectangle;4:yellow;1:%s.o;2:x
'λx.apply(or[size3,not[circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:not[%s];4:circle;1:%s.o;2:x
'λx.apply(not[or[triangle,size1]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:triangle;4:size1;1:%s.o;2:x
'λx.apply(and[not[green],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:green;4:circle;1:%s.o;2:x
'λx.forall(green,filter(filter(x.s, triangle), size1))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size1
'λx.exists(curry[same_shape,x.o], filter(x.s, or[circle,blue]))'	0:exists(%s, %s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:blue
'λx.exists(or[and[rectangle,blue],and[yellow,circle]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:rectangle;4:blue;4:and[%s,%s];4:yellow;4:circle;3:%s.s;2:x
'λx.apply(curry[same_shape,iota(filter(x.s, not[curry[size-geq,x.o]]))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:size-geq;1:%s.o;2:x;1:%s.o;2:x
'λx.exists(blue, filter(x.s, size1))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.forall(size1,filter(x.s, not[yellow]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow
'λx.forall(blue,filter(x.s, curry[size-lt,x.o]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-lt;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(x.s, size1), green)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green
'λx.apply(not[circle],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(curry[size-lt,iota(filter(filter(x.s, green), size1))], x.s)'	0:exists(%s, %s);4:curry[%s,%s];5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1;3:%s.s;2:x
'λx.exists(not[rectangle], filter(x.s, or[and[green,size1],curry[same_shape,x.o]]))'	0:exists(%s, %s);4:not[%s];4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:green;4:size1;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(and[green,and[rectangle,size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:rectangle;4:size1;1:%s.o;2:x
'λx.forall(curry[same_shape,x.o],filter(x.s, size3))'	0:forall(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(blue,iota(filter(x.s, or[and[size2,curry[same_size,x.o]],blue])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size2;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:blue
'λx.contains(x.o, filter(filter(x.s, size2), circle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle
'λx.apply(or[size1,green],iota(filter(x.s, and[curry[same_color,x.o],circle])))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:circle
'λx.exists(and[not[size2],curry[same_color,x.o]], filter(x.s, or[triangle,not[curry[same_shape,x.o]]]))'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:size2;4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.forall(blue,filter(filter(filter(x.s, or[curry[same_color,x.o],size2]), rectangle), rectangle))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:size2;4:rectangle;4:rectangle
'λx.apply(size1,iota(filter(filter(x.s, green), size1)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1
'λx.apply(not[and[or[green,size3],rectangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:or[%s,%s];4:green;4:size3;4:rectangle;1:%s.o;2:x
'λx.apply(and[triangle,green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:green;1:%s.o;2:x
'λx.apply(or[size3,triangle],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.forall(rectangle,x.s)'	0:forall(%s,%s);4:rectangle;3:%s.s;2:x
'λx.apply(curry[same_color,x.o],iota(filter(filter(x.s, curry[size-geq,x.o]), curry[same_shape,x.o])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-geq;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(and[green,triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:triangle;1:%s.o;2:x
'λx.apply(or[yellow,size2],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.exists(or[and[green,curry[same_shape,x.o]],and[curry[same_shape,x.o],blue]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:green;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue;3:%s.s;2:x
'λx.apply(and[blue,circle],iota(x.s))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:circle;1:iota(%s);3:%s.s;2:x
'λx.apply(or[circle,and[triangle,blue]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:and[%s,%s];4:triangle;4:blue;1:%s.o;2:x
'λx.apply(and[green,size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:size1;1:%s.o;2:x
'λx.exists(blue, filter(x.s, or[not[curry[size-geq,x.o]],size1]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:curry[%s,%s];5:size-geq;1:%s.o;2:x;4:size1
'λx.forall(or[blue,size1],filter(x.s, curry[same_color,x.o]))'	0:forall(%s,%s);4:or[%s,%s];4:blue;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.exists(size2, filter(x.s, not[blue]))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.forall(circle,filter(filter(x.s, and[curry[same_color,x.o],green]), triangle))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:green;4:triangle
'λx.empty(filter(filter(filter(filter(x.s, not[blue]), curry[same_color,x.o]), circle), curry[same_shape,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:circle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.exists(size1, filter(filter(x.s, curry[same_shape,x.o]), blue))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue
'λx.apply(or[blue,size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:size3;1:%s.o;2:x
'λx.exists(and[not[curry[same_shape,x.o]],curry[same_color,x.o]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:%s.s;2:x
'λx.forall(rectangle,filter(x.s, blue))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(or[and[triangle,size2],and[not[circle],not[blue]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:triangle;4:size2;4:and[%s,%s];4:not[%s];4:circle;4:not[%s];4:blue;1:%s.o;2:x
'λx.apply(or[green,or[yellow,blue]],iota(filter(x.s, curry[same_shape,x.o])))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:or[%s,%s];4:yellow;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(x.s, not[curry[same_shape,x.o]]), or[yellow,size3])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:yellow;4:size3
'λx.apply(not[size2],iota(filter(filter(filter(x.s, curry[same_color,x.o]), blue), blue)))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:blue;4:blue
'λx.apply(curry[same_size,x.o],iota(filter(filter(x.s, size3), circle)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle
'λx.empty(filter(filter(filter(filter(filter(x.s, curry[same_shape,x.o]), yellow), not[triangle]), curry[same_size,x.o]), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:yellow;4:not[%s];4:triangle;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:yellow
'λx.apply(yellow,iota(filter(filter(x.s, size3), triangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle
'λx.empty(filter(filter(x.s, and[yellow,not[size1]]), curry[same_shape,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:not[%s];4:size1;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(not[size3],iota(filter(x.s, and[circle,yellow])))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:yellow
'λx.empty(filter(filter(x.s, and[curry[same_size,x.o],blue]), or[size1,triangle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:blue;4:or[%s,%s];4:size1;4:triangle
'λx.forall(size3,filter(filter(x.s, yellow), or[size1,not[circle]]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:size1;4:not[%s];4:circle
'λx.contains(x.o, filter(x.s, not[and[triangle,not[blue]]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:triangle;4:not[%s];4:blue
'λx.apply(or[rectangle,green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:green;1:%s.o;2:x
'λx.exists(or[yellow,green], filter(x.s, size3))'	0:exists(%s, %s);4:or[%s,%s];4:yellow;4:green;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(size3,iota(filter(x.s, size3)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(and[size2,blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:blue;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, and[curry[same_size,x.o],blue])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:blue
'λx.contains(iota(filter(x.s, and[blue,not[circle]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:not[%s];4:circle;3:%s.s;2:x
'λx.apply(not[and[green,circle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:green;4:circle;1:%s.o;2:x
'λx.apply(size2,iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(size1,iota(filter(filter(filter(filter(x.s, blue), curry[same_color,x.o]), size1), size1)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:size1;4:size1
'λx.apply(and[or[circle,circle],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:circle;4:circle;4:blue;1:%s.o;2:x
'λx.apply(and[curry[same_shape,iota(filter(x.s, blue))],not[blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:blue;1:%s.o;2:x
'λx.apply(not[and[circle,or[not[blue],triangle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:circle;4:or[%s,%s];4:not[%s];4:blue;4:triangle;1:%s.o;2:x
'λx.apply(not[curry[same_size,iota(filter(x.s, size1))]],x.o)'	0:apply(%s,%s);4:not[%s];4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, rectangle), not[green])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:green
'λx.apply(blue,iota(filter(x.s, or[curry[same_size,x.o],and[size3,size3]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:and[%s,%s];4:size3;4:size3
'λx.apply(curry[size-gt,iota(filter(x.s, yellow))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;1:%s.o;2:x
'λx.forall(not[rectangle],filter(x.s, yellow))'	0:forall(%s,%s);4:not[%s];4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(size1,iota(filter(x.s, and[size1,green])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:green
'λx.apply(or[or[blue,and[green,triangle]],circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:blue;4:and[%s,%s];4:green;4:triangle;4:circle;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(filter(filter(x.s, curry[same_shape,x.o]), blue), and[circle,curry[same_color,x.o]]), blue)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue;4:and[%s,%s];4:circle;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:blue
'λx.exists(not[curry[same_shape,x.o]], filter(x.s, curry[same_size,x.o]))'	0:exists(%s, %s);4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.exists(and[curry[same_shape,x.o],not[curry[same_color,x.o]]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, rectangle), not[size2]), not[blue]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:size2;4:not[%s];4:blue
'λx.apply(or[size1,size3],iota(filter(x.s, not[circle])))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.empty(filter(filter(x.s, curry[same_shape,x.o]), not[or[curry[same_color,x.o],and[green,curry[same_color,x.o]]]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:or[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:and[%s,%s];4:green;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(or[not[circle],size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:circle;4:size2;1:%s.o;2:x
'λx.apply(not[and[blue,or[triangle,rectangle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:blue;4:or[%s,%s];4:triangle;4:rectangle;1:%s.o;2:x
'λx.forall(curry[size-leq,x.o],filter(x.s, or[triangle,curry[same_shape,x.o]]))'	0:forall(%s,%s);4:curry[%s,%s];5:size-leq;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(and[or[triangle,size1],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:triangle;4:size1;4:yellow;1:%s.o;2:x
'λx.apply(or[rectangle,size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:size1;1:%s.o;2:x
'λx.apply(and[not[circle],or[yellow,green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:circle;4:or[%s,%s];4:yellow;4:green;1:%s.o;2:x
'λx.forall(triangle,filter(filter(x.s, yellow), and[size3,curry[same_shape,x.o]]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:size3;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, and[circle,or[green,yellow]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:or[%s,%s];4:green;4:yellow
'λx.apply(or[blue,and[not[circle],size3]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:and[%s,%s];4:not[%s];4:circle;4:size3;1:%s.o;2:x
'λx.empty(filter(x.s, size2))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(or[circle,not[size1]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:not[%s];4:size1;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, and[blue,triangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:triangle
'λx.exists(and[not[or[size1,circle]],blue], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:or[%s,%s];4:size1;4:circle;4:blue;3:%s.s;2:x
'λx.forall(or[not[curry[same_shape,x.o]],blue],filter(filter(x.s, curry[same_size,x.o]), rectangle))'	0:forall(%s,%s);4:or[%s,%s];4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:rectangle
'λx.apply(and[curry[same_size,iota(filter(x.s, yellow))],not[circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:circle;1:%s.o;2:x
'λx.exists(or[size1,size2], filter(x.s, or[curry[size-gt,x.o],size3]))'	0:exists(%s, %s);4:or[%s,%s];4:size1;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:size-gt;1:%s.o;2:x;4:size3
'λx.contains(x.o, filter(filter(x.s, not[size2]), blue))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:blue
'λx.apply(not[rectangle],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(blue,iota(filter(x.s, not[curry[same_color,x.o]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.exists(or[green,curry[same_shape,x.o]], filter(x.s, blue))'	0:exists(%s, %s);4:or[%s,%s];4:green;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[size2,blue],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(or[circle,yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:yellow;1:%s.o;2:x
'λx.exists(or[triangle,or[curry[same_shape,x.o],yellow]], filter(x.s, size3))'	0:exists(%s, %s);4:or[%s,%s];4:triangle;4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(not[or[rectangle,yellow]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:rectangle;4:yellow;1:%s.o;2:x
'λx.apply(or[and[size3,not[triangle]],size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size3;4:not[%s];4:triangle;4:size1;1:%s.o;2:x
'λx.apply(and[not[blue],and[curry[same_size,x.o],not[circle]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:blue;4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:not[%s];4:circle;1:%s.o;2:x
'λx.apply(and[triangle,size1],iota(filter(x.s, green)))'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.forall(triangle,filter(x.s, curry[size-gt,x.o]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-gt;1:%s.o;2:x
'λx.apply(or[and[triangle,blue],size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:triangle;4:blue;4:size2;1:%s.o;2:x
'λx.forall(size1,filter(x.s, green))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[size1,size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:size1;1:%s.o;2:x
'λx.exists(triangle, filter(filter(x.s, size3), green))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green
'λx.forall(curry[same_shape,x.o],filter(x.s, not[curry[same_size,x.o]]))'	0:forall(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.forall(yellow,filter(filter(x.s, yellow), curry[same_shape,iota(filter(x.s, curry[same_shape,x.o]))]))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.exists(or[blue,rectangle], filter(filter(x.s, or[circle,size1]), curry[same_shape,x.o]))'	0:exists(%s, %s);4:or[%s,%s];4:blue;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:size1;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(not[or[triangle,size2]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:triangle;4:size2;1:%s.o;2:x
'λx.forall(blue,filter(x.s, not[circle]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.empty(filter(filter(x.s, and[circle,not[blue]]), and[curry[same_shape,x.o],curry[same_color,x.o]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:not[%s];4:blue;4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(and[yellow,size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:size3;1:%s.o;2:x
'λx.exists(not[circle], filter(x.s, curry[same_size,x.o]))'	0:exists(%s, %s);4:not[%s];4:circle;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.contains(iota(x.s), filter(x.s, circle))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.exists(curry[same_shape,x.o], filter(filter(x.s, curry[same_color,x.o]), or[not[circle],blue]))'	0:exists(%s, %s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:or[%s,%s];4:not[%s];4:circle;4:blue
'λx.apply(curry[same_color,x.o],iota(filter(filter(filter(x.s, blue), curry[same_size,x.o]), curry[same_shape,x.o])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.exists(not[or[not[curry[same_shape,x.o]],yellow]], x.s)'	0:exists(%s, %s);4:not[%s];4:or[%s,%s];4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:yellow;3:%s.s;2:x
'λx.contains(iota(x.s), x.s)'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:%s.s;2:x
'λx.exists(triangle, filter(x.s, or[not[green],size3]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:green;4:size3
'λx.apply(blue,iota(filter(filter(filter(x.s, blue), and[size1,rectangle]), curry[same_shape,x.o])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:size1;4:rectangle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(x.s, not[triangle]), curry[same_shape,x.o]), yellow), curry[same_size,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:yellow;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.apply(or[and[circle,blue],not[or[blue,circle]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:circle;4:blue;4:not[%s];4:or[%s,%s];4:blue;4:circle;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, or[triangle,blue]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:blue
'λx.empty(filter(filter(x.s, green), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle
'λx.apply(or[curry[same_color,iota(filter(x.s, blue))],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue;1:%s.o;2:x
'λx.apply(or[curry[same_color,x.o],curry[same_color,x.o]],iota(filter(x.s, not[yellow])))'	0:apply(%s,%s);4:or[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow
'λx.contains(x.o, filter(x.s, curry[same_shape,iota(filter(filter(x.s, size2), curry[same_shape,x.o]))]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(curry[same_shape,iota(filter(x.s, circle))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;1:%s.o;2:x
'λx.apply(or[size1,size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:size2;1:%s.o;2:x
'λx.forall(or[blue,not[curry[same_color,x.o]]],filter(filter(x.s, circle), curry[same_shape,x.o]))'	0:forall(%s,%s);4:or[%s,%s];4:blue;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.forall(or[curry[same_size,x.o],yellow],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:yellow;3:%s.s;2:x
'λx.contains(iota(filter(x.s, curry[same_shape,x.o])), filter(x.s, blue))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.empty(filter(filter(filter(x.s, blue), not[circle]), curry[same_shape,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:circle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(not[green],iota(filter(x.s, not[curry[same_color,x.o]])))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, not[or[blue,circle]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:blue;4:circle
'λx.apply(size1,iota(filter(filter(x.s, curry[same_color,iota(filter(filter(x.s, green), size3))]), size1)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size3;4:size1
'λx.empty(filter(filter(x.s, and[not[curry[same_shape,x.o]],not[triangle]]), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:triangle;4:blue
'λx.forall(size3,filter(filter(x.s, curry[same_shape,x.o]), yellow))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:yellow
'λx.apply(not[and[and[curry[same_shape,x.o],not[circle]],not[blue]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:circle;4:not[%s];4:blue;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, not[blue]), circle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:circle
'λx.apply(blue,iota(filter(filter(x.s, circle), curry[same_color,x.o])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.exists(curry[same_size,x.o], filter(x.s, circle))'	0:exists(%s, %s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.contains(iota(filter(filter(x.s, curry[same_size,x.o]), and[circle,and[size2,or[green,blue]]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:and[%s,%s];4:circle;4:and[%s,%s];4:size2;4:or[%s,%s];4:green;4:blue;3:%s.s;2:x
'λx.apply(size1,iota(filter(x.s, size1)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.forall(blue,x.s)'	0:forall(%s,%s);4:blue;3:%s.s;2:x
'λx.apply(curry[size-lt,iota(filter(filter(x.s, yellow), not[size2]))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:size2;1:%s.o;2:x
'λx.apply(or[or[blue,circle],rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:blue;4:circle;4:rectangle;1:%s.o;2:x
'λx.apply(triangle,x.o)'	0:apply(%s,%s);4:triangle;1:%s.o;2:x
'λx.apply(and[not[curry[same_shape,iota(filter(x.s, rectangle))]],not[size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:size3;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(x.s, yellow), circle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle
'λx.forall(circle,filter(filter(x.s, and[curry[same_color,x.o],curry[same_shape,x.o]]), blue))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue
'λx.apply(circle,iota(filter(filter(filter(filter(x.s, not[green]), size3), curry[same_shape,x.o]), circle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:size3;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:circle
'λx.contains(iota(filter(x.s, size2)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;3:%s.s;2:x
'λx.exists(blue, filter(x.s, or[size1,and[blue,curry[size-lt,x.o]]]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:and[%s,%s];4:blue;4:curry[%s,%s];5:size-lt;1:%s.o;2:x
'λx.apply(not[and[rectangle,size3]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:rectangle;4:size3;1:%s.o;2:x
'λx.empty(filter(filter(x.s, or[size3,size1]), or[rectangle,rectangle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:size1;4:or[%s,%s];4:rectangle;4:rectangle
'λx.apply(and[blue,curry[same_shape,x.o]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.forall(curry[same_size,x.o],filter(x.s, or[size1,curry[same_shape,x.o]]))'	0:forall(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(and[blue,or[triangle,size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:or[%s,%s];4:triangle;4:size3;1:%s.o;2:x
'λx.exists(and[curry[same_shape,x.o],not[rectangle]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:rectangle;3:%s.s;2:x
'λx.apply(or[not[triangle],not[green]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:triangle;4:not[%s];4:green;1:%s.o;2:x
'λx.apply(and[not[circle],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:circle;4:green;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, curry[same_shape,x.o]), or[circle,blue]), or[curry[same_color,x.o],circle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:circle;4:blue;4:or[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:circle
'λx.exists(and[circle,curry[same_size,x.o]], filter(filter(x.s, curry[same_shape,x.o]), not[blue]))'	0:exists(%s, %s);4:and[%s,%s];4:circle;4:curry[%s,%s];5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:blue
'λx.apply(circle,iota(filter(x.s, blue)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(size2,iota(filter(x.s, green)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.contains(iota(filter(filter(x.s, size3), yellow)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow;3:%s.s;2:x
'λx.apply(or[not[yellow],size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:yellow;4:size1;1:%s.o;2:x
'λx.empty(filter(filter(x.s, size3), and[not[blue],curry[same_shape,x.o]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:not[%s];4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(and[or[size1,triangle],and[not[size3],not[green]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size1;4:triangle;4:and[%s,%s];4:not[%s];4:size3;4:not[%s];4:green;1:%s.o;2:x
'λx.apply(or[blue,size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:size1;1:%s.o;2:x
'λx.forall(curry[same_shape,x.o],filter(filter(x.s, size2), green))'	0:forall(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green
'λx.apply(triangle,iota(filter(filter(x.s, curry[same_shape,x.o]), size2)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size2
'λx.contains(x.o, filter(x.s, not[size1]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1
'λx.apply(curry[same_shape,x.o],iota(filter(filter(x.s, not[size1]), blue)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:blue
'λx.forall(size2,filter(filter(x.s, size1), curry[same_size,x.o]))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, or[circle,and[blue,triangle]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:and[%s,%s];4:blue;4:triangle
'λx.forall(not[green],x.s)'	0:forall(%s,%s);4:not[%s];4:green;3:%s.s;2:x
'λx.contains(iota(filter(x.s, blue)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;3:%s.s;2:x
'λx.empty(filter(filter(x.s, or[size3,curry[same_shape,x.o]]), curry[size-gt,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:size-gt;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, curry[same_shape,x.o]), yellow), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:yellow;4:size2
'λx.apply(curry[same_shape,iota(filter(filter(x.s, not[size2]), blue))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:blue;1:%s.o;2:x
'λx.apply(not[and[yellow,not[circle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:yellow;4:not[%s];4:circle;1:%s.o;2:x
'λx.apply(or[blue,not[size2]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:not[%s];4:size2;1:%s.o;2:x
'λx.forall(circle,filter(x.s, size1))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(curry[same_color,x.o],iota(filter(x.s, or[curry[same_size,x.o],size3])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:size3
'λx.apply(size1,iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.exists(not[and[curry[same_size,x.o],yellow]], filter(x.s, curry[same_shape,x.o]))'	0:exists(%s, %s);4:not[%s];4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, curry[same_shape,x.o]), blue)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue;3:%s.s;2:x
'λx.apply(curry[same_shape,iota(filter(filter(x.s, size3), blue))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue;1:%s.o;2:x
'λx.apply(not[and[not[circle],blue]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:circle;4:blue;1:%s.o;2:x
'λx.exists(not[blue], x.s)'	0:exists(%s, %s);4:not[%s];4:blue;3:%s.s;2:x
'λx.apply(curry[same_shape,iota(filter(x.s, triangle))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;1:%s.o;2:x
'λx.exists(not[blue], filter(x.s, or[curry[same_color,x.o],and[size3,circle]]))'	0:exists(%s, %s);4:not[%s];4:blue;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:and[%s,%s];4:size3;4:circle
'λx.forall(not[size1],filter(x.s, curry[same_size,x.o]))'	0:forall(%s,%s);4:not[%s];4:size1;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(x.s, and[curry[same_shape,x.o],blue]), blue)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue;4:blue
'λx.empty(filter(filter(filter(x.s, circle), size3), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3;4:blue
'λx.apply(green,iota(filter(filter(x.s, green), or[size1,rectangle])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:or[%s,%s];4:size1;4:rectangle
'λx.exists(triangle, filter(filter(x.s, not[yellow]), not[curry[size-lt,x.o]]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:not[%s];4:curry[%s,%s];5:size-lt;1:%s.o;2:x
'λx.forall(curry[same_color,x.o],filter(filter(x.s, not[size3]), curry[same_shape,x.o]))'	0:forall(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(or[or[circle,rectangle],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:circle;4:rectangle;4:blue;1:%s.o;2:x
'λx.empty(filter(x.s, and[not[size1],and[yellow,curry[same_shape,x.o]]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:size1;4:and[%s,%s];4:yellow;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, green)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.empty(filter(filter(filter(x.s, curry[same_shape,x.o]), size3), curry[size-lt,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size3;4:curry[%s,%s];5:size-lt;1:%s.o;2:x
'λx.apply(and[not[size3],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size3;4:rectangle;1:%s.o;2:x
'λx.apply(and[rectangle,curry[same_color,iota(filter(filter(x.s, size2), blue))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue;1:%s.o;2:x
'λx.forall(blue,filter(filter(x.s, size2), curry[same_shape,x.o]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(not[or[blue,not[circle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:blue;4:not[%s];4:circle;1:%s.o;2:x
'λx.apply(and[green,curry[same_shape,iota(filter(x.s, blue))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.exists(green, filter(x.s, or[size1,rectangle]))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:rectangle
'λx.forall(circle,filter(x.s, curry[same_color,x.o]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(not[and[yellow,not[triangle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:yellow;4:not[%s];4:triangle;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, size3), yellow), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow;4:triangle
'λx.forall(and[circle,green],filter(x.s, size1))'	0:forall(%s,%s);4:and[%s,%s];4:circle;4:green;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(triangle,iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.empty(filter(filter(x.s, rectangle), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3
'λx.apply(curry[same_shape,x.o],iota(filter(x.s, and[size3,blue])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:blue
'λx.apply(and[blue,or[rectangle,size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:or[%s,%s];4:rectangle;4:size3;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, or[triangle,and[circle,size3]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:and[%s,%s];4:circle;4:size3
'λx.forall(or[not[size1],or[blue,curry[size-gt,x.o]]],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:not[%s];4:size1;4:or[%s,%s];4:blue;4:curry[%s,%s];5:size-gt;1:%s.o;2:x;3:%s.s;2:x
'λx.forall(not[green],filter(x.s, size1))'	0:forall(%s,%s);4:not[%s];4:green;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.forall(green,filter(x.s, and[green,curry[same_size,iota(filter(filter(x.s, curry[same_shape,x.o]), not[curry[size-geq,x.o]]))]]))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:curry[%s,%s];5:size-geq;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, curry[same_color,x.o]), blue)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:blue
'λx.apply(and[green,or[size1,size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:or[%s,%s];4:size1;4:size2;1:%s.o;2:x
'λx.exists(curry[same_size,x.o], filter(x.s, and[not[green],not[size3]]))'	0:exists(%s, %s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:green;4:not[%s];4:size3
'λx.apply(or[or[size1,circle],and[triangle,size2]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:size1;4:circle;4:and[%s,%s];4:triangle;4:size2;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, curry[same_size,x.o]), yellow), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:yellow;4:size1
'λx.forall(not[circle],filter(x.s, size1))'	0:forall(%s,%s);4:not[%s];4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.forall(not[blue],filter(x.s, triangle))'	0:forall(%s,%s);4:not[%s];4:blue;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.exists(or[and[rectangle,size2],circle], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:rectangle;4:size2;4:circle;3:%s.s;2:x
'λx.forall(size3,filter(x.s, triangle))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(or[size2,size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:size3;1:%s.o;2:x
'λx.apply(not[size1],iota(filter(x.s, or[size3,curry[same_size,x.o]])))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.apply(triangle,iota(filter(x.s, and[size3,green])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:green
'λx.empty(filter(filter(filter(x.s, size2), blue), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue;4:triangle
'λx.empty(filter(x.s, green))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.empty(filter(filter(x.s, not[and[circle,green]]), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:circle;4:green;4:size1
'λx.apply(green,iota(filter(filter(x.s, not[curry[same_size,x.o]]), rectangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:rectangle
'λx.forall(curry[same_size,iota(filter(filter(x.s, circle), yellow))],filter(x.s, yellow))'	0:forall(%s,%s);4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.empty(filter(filter(filter(x.s, curry[same_shape,x.o]), curry[same_color,x.o]), and[blue,or[triangle,rectangle]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:and[%s,%s];4:blue;4:or[%s,%s];4:triangle;4:rectangle
'λx.apply(blue,iota(filter(filter(filter(x.s, curry[same_size,x.o]), circle), blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:circle;4:blue
'λx.forall(curry[same_size,x.o],filter(x.s, curry[same_shape,x.o]))'	0:forall(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.forall(curry[same_shape,x.o],filter(filter(x.s, not[triangle]), blue))'	0:forall(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:blue
'λx.empty(filter(filter(filter(x.s, size2), curry[same_size,iota(filter(x.s, curry[same_shape,x.o]))]), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:triangle
'λx.empty(filter(x.s, not[curry[same_shape,x.o]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(curry[same_color,iota(filter(x.s, not[yellow]))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;1:%s.o;2:x
'λx.apply(and[curry[same_color,x.o],rectangle],iota(filter(filter(x.s, rectangle), size1)))'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1
'λx.apply(curry[same_size,x.o],iota(filter(x.s, or[circle,not[or[curry[same_size,x.o],yellow]]])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:not[%s];4:or[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:yellow
'λx.apply(not[and[rectangle,not[blue]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:rectangle;4:not[%s];4:blue;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, size3), circle), curry[same_shape,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(or[rectangle,not[green]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:not[%s];4:green;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, and[and[curry[same_size,x.o],curry[same_color,x.o]],size2])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:size2
'λx.exists(not[or[not[curry[same_shape,x.o]],or[not[size3],and[curry[same_size,x.o],curry[same_color,x.o]]]]], x.s)'	0:exists(%s, %s);4:not[%s];4:or[%s,%s];4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:not[%s];4:size3;4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(or[size3,not[curry[same_color,x.o]]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(circle,iota(filter(filter(x.s, green), circle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:circle
'λx.forall(circle,filter(filter(filter(filter(x.s, curry[same_shape,x.o]), not[blue]), green), triangle))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:blue;4:green;4:triangle
'λx.exists(or[rectangle,size1], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:rectangle;4:size1;3:%s.s;2:x
'λx.exists(curry[size-geq,x.o], filter(filter(x.s, and[and[blue,curry[same_color,x.o]],size3]), blue))'	0:exists(%s, %s);4:curry[%s,%s];5:size-geq;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:blue;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:size3;4:blue
'λx.apply(not[circle],iota(filter(filter(x.s, green), curry[same_shape,x.o])))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(triangle,iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.forall(green,filter(filter(x.s, or[blue,size1]), rectangle))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:size1;4:rectangle
'λx.apply(or[circle,or[circle,and[yellow,rectangle]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:or[%s,%s];4:circle;4:and[%s,%s];4:yellow;4:rectangle;1:%s.o;2:x
'λx.exists(or[and[size2,triangle],circle], filter(x.s, blue))'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:size2;4:triangle;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(curry[same_size,x.o],iota(filter(filter(x.s, yellow), size3)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size3
'λx.apply(not[curry[same_color,iota(filter(x.s, blue))]],x.o)'	0:apply(%s,%s);4:not[%s];4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.apply(or[curry[same_shape,x.o],size1],iota(filter(x.s, and[curry[size-leq,x.o],blue])))'	0:apply(%s,%s);4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:size-leq;1:%s.o;2:x;4:blue
'λx.empty(filter(filter(x.s, curry[same_shape,iota(filter(x.s, and[blue,blue]))]), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:blue;4:yellow
'λx.contains(x.o, filter(filter(x.s, size2), blue))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue
'λx.exists(or[curry[same_shape,x.o],blue], filter(x.s, size2))'	0:exists(%s, %s);4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(blue,iota(filter(filter(x.s, size1), and[curry[same_color,x.o],curry[same_shape,x.o]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.exists(curry[same_shape,x.o], filter(filter(x.s, not[and[curry[same_color,x.o],curry[same_size,x.o]]]), not[yellow]))'	0:exists(%s, %s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:not[%s];4:yellow
'λx.apply(curry[same_shape,x.o],iota(filter(filter(x.s, circle), not[size2])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:size2
'λx.exists(blue, filter(filter(x.s, curry[same_shape,x.o]), not[triangle]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:triangle
'λx.apply(curry[same_shape,x.o],iota(filter(filter(x.s, blue), size1)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1
'λx.apply(curry[size-gt,x.o],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:curry[%s,%s];5:size-gt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(triangle,iota(filter(filter(x.s, and[not[yellow],triangle]), triangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:yellow;4:triangle;4:triangle
'λx.apply(or[and[not[rectangle],size3],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:not[%s];4:rectangle;4:size3;4:blue;1:%s.o;2:x
'λx.empty(filter(filter(x.s, triangle), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue
'λx.apply(or[circle,or[and[triangle,size3],blue]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:or[%s,%s];4:and[%s,%s];4:triangle;4:size3;4:blue;1:%s.o;2:x
'λx.apply(not[size3],iota(filter(x.s, or[size1,curry[same_size,x.o]])))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.apply(or[rectangle,or[circle,blue]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:or[%s,%s];4:circle;4:blue;1:%s.o;2:x
'λx.apply(not[and[not[and[blue,circle]],or[circle,blue]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:blue;4:circle;4:or[%s,%s];4:circle;4:blue;1:%s.o;2:x
'λx.forall(not[size1],filter(x.s, blue))'	0:forall(%s,%s);4:not[%s];4:size1;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.exists(not[triangle], filter(filter(x.s, curry[same_shape,x.o]), size2))'	0:exists(%s, %s);4:not[%s];4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size2
'λx.apply(or[size1,or[yellow,green]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:or[%s,%s];4:yellow;4:green;1:%s.o;2:x
'λx.apply(yellow,iota(filter(x.s, and[circle,not[size1]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:not[%s];4:size1
'λx.contains(x.o, filter(x.s, and[not[blue],circle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:blue;4:circle
'λx.apply(not[circle],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:%s.s;2:x
'λx.exists(size2, x.s)'	0:exists(%s, %s);4:size2;3:%s.s;2:x
'λx.forall(yellow,filter(x.s, or[and[rectangle,size1],and[size2,curry[same_shape,x.o]]]))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:size1;4:and[%s,%s];4:size2;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(curry[size-gt,x.o],iota(filter(x.s, green)))'	0:apply(%s,%s);4:curry[%s,%s];5:size-gt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.forall(curry[same_size,x.o],x.s)'	0:forall(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(or[and[triangle,blue],circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:triangle;4:blue;4:circle;1:%s.o;2:x
'λx.empty(filter(filter(x.s, circle), and[not[blue],curry[same_size,x.o]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:not[%s];4:blue;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.apply(curry[same_color,x.o],iota(filter(filter(x.s, blue), curry[same_color,x.o])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(and[not[circle],not[blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:circle;4:not[%s];4:blue;1:%s.o;2:x
'λx.apply(and[not[triangle],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:triangle;4:size3;1:%s.o;2:x
'λx.apply(not[and[size3,size1]],iota(filter(x.s, curry[same_shape,x.o])))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size3;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(or[triangle,or[green,blue]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:or[%s,%s];4:green;4:blue;1:%s.o;2:x
'λx.exists(size3, filter(x.s, not[rectangle]))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle
'λx.apply(or[circle,and[blue,triangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:and[%s,%s];4:blue;4:triangle;1:%s.o;2:x
'λx.apply(or[triangle,and[rectangle,not[blue]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:and[%s,%s];4:rectangle;4:not[%s];4:blue;1:%s.o;2:x
'λx.empty(filter(filter(x.s, and[curry[same_color,x.o],yellow]), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:yellow;4:size1
'λx.contains(x.o, filter(filter(x.s, blue), circle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle
'λx.apply(size1,iota(filter(filter(x.s, size1), curry[size-gt,x.o])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:curry[%s,%s];5:size-gt;1:%s.o;2:x
'λx.exists(and[not[and[green,and[size2,circle]]],or[green,blue]], filter(x.s, or[yellow,or[curry[same_shape,x.o],yellow]]))'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:green;4:and[%s,%s];4:size2;4:circle;4:or[%s,%s];4:green;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:yellow
'λx.apply(and[not[not[not[and[curry[same_color,iota(filter(x.s, size2))],yellow]]]],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:not[%s];4:not[%s];4:and[%s,%s];4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:yellow;4:rectangle;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, curry[same_size,x.o])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, circle), size2)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size2
'λx.exists(and[or[size1,and[triangle,size3]],or[and[green,size3],curry[same_color,x.o]]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:or[%s,%s];4:size1;4:and[%s,%s];4:triangle;4:size3;4:or[%s,%s];4:and[%s,%s];4:green;4:size3;4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(size1,iota(filter(x.s, curry[same_shape,x.o])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(and[not[blue],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:blue;4:rectangle;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, size2), not[circle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:not[%s];4:circle
'λx.forall(circle,filter(x.s, curry[same_shape,iota(filter(filter(x.s, not[green]), circle))]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:circle
'λx.apply(or[not[rectangle],rectangle],iota(filter(x.s, curry[same_shape,x.o])))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:rectangle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(curry[same_shape,x.o],iota(filter(filter(x.s, size3), and[blue,rectangle])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:blue;4:rectangle
'λx.apply(size2,iota(filter(filter(x.s, and[size2,rectangle]), curry[same_color,x.o])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:rectangle;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(and[curry[same_size,iota(filter(x.s, size1))],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1;1:%s.o;2:x
'λx.apply(not[or[size1,and[green,size2]]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:size1;4:and[%s,%s];4:green;4:size2;1:%s.o;2:x
'λx.forall(circle,filter(filter(x.s, or[curry[same_size,x.o],size3]), yellow))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:size3;4:yellow
'λx.forall(curry[size-lt,iota(filter(x.s, blue))],filter(filter(x.s, curry[same_color,x.o]), blue))'	0:forall(%s,%s);4:curry[%s,%s];5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:blue
'λx.exists(circle, filter(x.s, curry[same_size,iota(filter(filter(x.s, blue), curry[same_size,x.o]))]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.apply(not[and[size3,yellow]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size3;4:yellow;1:%s.o;2:x
'λx.apply(or[not[yellow],size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:yellow;4:size2;1:%s.o;2:x
'λx.forall(size2,filter(filter(x.s, and[curry[same_color,x.o],blue]), not[and[size3,not[curry[same_color,iota(filter(x.s, blue))]]]]))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:blue;4:not[%s];4:and[%s,%s];4:size3;4:not[%s];4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.forall(or[curry[size-gt,x.o],size2],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:curry[%s,%s];5:size-gt;1:%s.o;2:x;4:size2;3:%s.s;2:x
'λx.apply(or[or[green,circle],size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:green;4:circle;4:size1;1:%s.o;2:x
'λx.apply(size1,iota(filter(x.s, and[curry[same_color,x.o],and[size1,or[or[rectangle,size3],circle]]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:and[%s,%s];4:size1;4:or[%s,%s];4:or[%s,%s];4:rectangle;4:size3;4:circle
'λx.forall(curry[same_color,x.o],filter(x.s, curry[size-leq,x.o]))'	0:forall(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-leq;1:%s.o;2:x
'λx.exists(curry[size-gt,x.o], x.s)'	0:exists(%s, %s);4:curry[%s,%s];5:size-gt;1:%s.o;2:x;3:%s.s;2:x
'λx.empty(filter(filter(x.s, blue), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2
'λx.forall(or[or[and[circle,size3],size1],curry[size-lt,x.o]],filter(filter(x.s, blue), curry[same_color,x.o]))'	0:forall(%s,%s);4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:circle;4:size3;4:size1;4:curry[%s,%s];5:size-lt;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.exists(and[blue,not[size1]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:blue;4:not[%s];4:size1;3:%s.s;2:x
'λx.apply(green,iota(filter(filter(x.s, green), and[size3,triangle])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:size3;4:triangle
'λx.empty(filter(filter(x.s, curry[same_shape,x.o]), not[curry[same_color,x.o]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(filter(x.s, not[size1]), rectangle), yellow)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:rectangle;4:yellow
'λx.apply(not[and[not[size1],circle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:size1;4:circle;1:%s.o;2:x
'λx.apply(not[and[circle,green]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:circle;4:green;1:%s.o;2:x
'λx.apply(not[or[green,size2]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:green;4:size2;1:%s.o;2:x
'λx.forall(circle,filter(filter(x.s, size2), yellow))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:yellow
'λx.exists(or[size3,size2], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:size3;4:size2;3:%s.s;2:x
'λx.apply(and[curry[same_color,x.o],not[size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:not[%s];4:size3;1:%s.o;2:x
'λx.empty(filter(filter(x.s, not[triangle]), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:blue
'λx.apply(and[blue,size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:size1;1:%s.o;2:x
'λx.apply(not[curry[same_color,x.o]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.forall(curry[same_shape,x.o],filter(x.s, circle))'	0:forall(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(or[size3,not[triangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:not[%s];4:triangle;1:%s.o;2:x
'λx.exists(not[or[blue,circle]], x.s)'	0:exists(%s, %s);4:not[%s];4:or[%s,%s];4:blue;4:circle;3:%s.s;2:x
'λx.exists(green, filter(filter(x.s, size3), triangle))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle
'λx.contains(x.o, filter(filter(x.s, green), rectangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle
'λx.empty(filter(filter(x.s, yellow), curry[same_shape,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(not[and[blue,yellow]],iota(filter(x.s, curry[size-leq,x.o])))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:blue;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-leq;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(x.s, rectangle), curry[same_size,x.o])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.apply(or[not[circle],not[blue]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:circle;4:not[%s];4:blue;1:%s.o;2:x
'λx.apply(or[or[blue,yellow],triangle],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:blue;4:yellow;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(blue,iota(filter(filter(x.s, not[triangle]), blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:blue
'λx.contains(x.o, filter(x.s, or[not[circle],blue]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:circle;4:blue
'λx.exists(or[yellow,size3], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:yellow;4:size3;3:%s.s;2:x
'λx.apply(curry[same_shape,iota(filter(filter(filter(x.s, not[curry[same_size,x.o]]), size3), curry[same_shape,x.o]))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:size3;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, and[curry[same_color,x.o],size1]), rectangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:size1;4:rectangle
'λx.apply(or[or[rectangle,blue],triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:rectangle;4:blue;4:triangle;1:%s.o;2:x
'λx.empty(filter(filter(x.s, yellow), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle
'λx.apply(or[and[not[yellow],size1],not[circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:not[%s];4:yellow;4:size1;4:not[%s];4:circle;1:%s.o;2:x
'λx.exists(curry[same_shape,x.o], filter(x.s, or[and[blue,curry[same_color,x.o]],circle]))'	0:exists(%s, %s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:blue;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:circle
'λx.apply(size3,iota(filter(filter(x.s, not[size1]), circle)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:circle
'λx.forall(size1,filter(filter(x.s, green), circle))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:circle
'λx.apply(or[triangle,blue],iota(filter(x.s, curry[size-leq,x.o])))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-leq;1:%s.o;2:x
'λx.apply(not[not[or[not[blue],circle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:or[%s,%s];4:not[%s];4:blue;4:circle;1:%s.o;2:x
'λx.exists(curry[same_size,x.o], filter(filter(x.s, not[circle]), not[blue]))'	0:exists(%s, %s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:not[%s];4:blue
'λx.apply(curry[same_shape,iota(filter(x.s, and[blue,curry[same_shape,x.o]]))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.exists(not[yellow], filter(x.s, curry[same_shape,x.o]))'	0:exists(%s, %s);4:not[%s];4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(not[not[or[size3,blue]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:or[%s,%s];4:size3;4:blue;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, not[circle]), curry[same_shape,x.o]), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size3
'λx.empty(filter(filter(x.s, and[blue,and[not[size1],curry[same_color,x.o]]]), curry[same_size,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:and[%s,%s];4:not[%s];4:size1;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, size1), blue)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue
'λx.apply(and[blue,circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:circle;1:%s.o;2:x
'λx.apply(or[rectangle,and[circle,blue]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:and[%s,%s];4:circle;4:blue;1:%s.o;2:x
'λx.apply(and[size2,or[curry[same_color,iota(filter(x.s, size3))],size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:or[%s,%s];4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2;1:%s.o;2:x
'λx.forall(circle,filter(x.s, blue))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(not[and[size2,size3]],iota(filter(x.s, curry[same_shape,x.o])))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size2;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(not[green],iota(filter(x.s, and[size3,or[triangle,circle]])))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:or[%s,%s];4:triangle;4:circle
'λx.exists(size2, filter(x.s, triangle))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(and[curry[same_shape,x.o],or[circle,size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:circle;4:size1;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, curry[same_shape,x.o]), blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue
'λx.contains(x.o, filter(filter(x.s, blue), size2))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2
'λx.contains(iota(filter(x.s, and[blue,curry[same_shape,x.o]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(size3,iota(x.s))'	0:apply(%s,%s);4:size3;1:iota(%s);3:%s.s;2:x
'λx.apply(or[size3,and[blue,size1]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:and[%s,%s];4:blue;4:size1;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, curry[same_shape,x.o]), curry[size-geq,x.o])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:size-geq;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(x.s, blue), size1)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1
'λx.apply(not[and[not[yellow],size3]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:yellow;4:size3;1:%s.o;2:x
'λx.forall(curry[same_size,x.o],filter(x.s, or[size2,rectangle]))'	0:forall(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:rectangle
'λx.exists(triangle, filter(x.s, blue))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.empty(filter(filter(x.s, curry[same_color,x.o]), and[and[blue,not[size1]],curry[same_shape,x.o]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:and[%s,%s];4:and[%s,%s];4:blue;4:not[%s];4:size1;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.forall(not[size3],x.s)'	0:forall(%s,%s);4:not[%s];4:size3;3:%s.s;2:x
'λx.apply(not[blue],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[yellow,triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:triangle;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(filter(x.s, curry[same_shape,x.o]), size3), not[green])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size3;4:not[%s];4:green
'λx.apply(blue,iota(filter(filter(x.s, curry[same_color,x.o]), circle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:circle
'λx.apply(not[and[size2,triangle]],iota(filter(x.s, curry[same_shape,x.o])))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size2;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, not[circle]), curry[same_size,x.o]), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:blue
'λx.empty(filter(filter(x.s, not[blue]), or[curry[same_shape,x.o],blue]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue
'λx.apply(not[blue],x.o)'	0:apply(%s,%s);4:not[%s];4:blue;1:%s.o;2:x
'λx.forall(green,filter(filter(x.s, yellow), curry[same_color,x.o]))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(or[and[blue,circle],not[or[blue,circle]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:blue;4:circle;4:not[%s];4:or[%s,%s];4:blue;4:circle;1:%s.o;2:x
'λx.apply(and[curry[same_shape,x.o],not[rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.forall(curry[same_shape,x.o],filter(x.s, not[and[size1,yellow]]))'	0:forall(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:size1;4:yellow
'λx.forall(size1,filter(filter(x.s, not[curry[same_shape,x.o]]), blue))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue
'λx.apply(or[yellow,or[circle,triangle]],iota(filter(x.s, curry[same_shape,x.o])))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:or[%s,%s];4:circle;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.exists(not[size3], filter(x.s, curry[same_size,x.o]))'	0:exists(%s, %s);4:not[%s];4:size3;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.forall(circle,filter(filter(x.s, size1), rectangle))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle
'λx.empty(filter(x.s, triangle))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(and[and[size1,curry[same_shape,iota(filter(x.s, size1))]],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size1;4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1;1:%s.o;2:x
'λx.apply(size3,iota(filter(x.s, curry[same_shape,x.o])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.exists(or[blue,not[size3]], filter(x.s, curry[same_shape,x.o]))'	0:exists(%s, %s);4:or[%s,%s];4:blue;4:not[%s];4:size3;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.forall(or[blue,or[curry[same_size,x.o],curry[same_shape,x.o]]],filter(x.s, size3))'	0:forall(%s,%s);4:or[%s,%s];4:blue;4:or[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.forall(size3,filter(filter(x.s, yellow), curry[same_shape,x.o]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.false'	0:false
'λx.empty(filter(filter(x.s, curry[same_shape,x.o]), and[or[curry[same_shape,x.o],triangle],not[curry[same_color,x.o]]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:triangle;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(not[and[triangle,size1]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:triangle;4:size1;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(x.s, curry[size-gt,x.o]), triangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-gt;1:%s.o;2:x;4:triangle
'λx.forall(circle,filter(x.s, and[blue,curry[same_shape,x.o]]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(not[and[size3,circle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size3;4:circle;1:%s.o;2:x
'λx.exists(triangle, filter(x.s, curry[size-geq,x.o]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-geq;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, blue), size3))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3
'λx.apply(not[or[not[or[blue,circle]],curry[size-gt,x.o]]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:not[%s];4:or[%s,%s];4:blue;4:circle;4:curry[%s,%s];5:size-gt;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(triangle,iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(or[or[and[size3,circle],size1],triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size3;4:circle;4:size1;4:triangle;1:%s.o;2:x
'λx.forall(size1,filter(filter(x.s, curry[same_shape,x.o]), yellow))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:yellow
'λx.apply(and[size2,not[circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:not[%s];4:circle;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, size1)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(or[size1,and[not[rectangle],not[and[size2,circle]]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:and[%s,%s];4:not[%s];4:rectangle;4:not[%s];4:and[%s,%s];4:size2;4:circle;1:%s.o;2:x
'λx.apply(or[blue,and[green,rectangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:and[%s,%s];4:green;4:rectangle;1:%s.o;2:x
'λx.apply(and[not[size2],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size2;4:blue;1:%s.o;2:x
'λx.empty(filter(x.s, and[yellow,curry[same_color,x.o]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.exists(or[yellow,triangle], filter(x.s, or[rectangle,curry[same_size,x.o]]))'	0:exists(%s, %s);4:or[%s,%s];4:yellow;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.forall(curry[size-leq,x.o],filter(x.s, size2))'	0:forall(%s,%s);4:curry[%s,%s];5:size-leq;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(or[green,triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:triangle;1:%s.o;2:x
'λx.apply(or[green,or[not[triangle],triangle]],iota(filter(x.s, curry[size-geq,x.o])))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:or[%s,%s];4:not[%s];4:triangle;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-geq;1:%s.o;2:x
'λx.forall(yellow,filter(filter(x.s, size3), triangle))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle
'λx.forall(curry[size-geq,x.o],filter(x.s, or[size2,and[green,triangle]]))'	0:forall(%s,%s);4:curry[%s,%s];5:size-geq;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:and[%s,%s];4:green;4:triangle
'λx.forall(curry[size-leq,x.o],filter(x.s, curry[same_shape,x.o]))'	0:forall(%s,%s);4:curry[%s,%s];5:size-leq;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, and[blue,or[green,curry[same_color,iota(filter(x.s, circle))]]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:or[%s,%s];4:green;4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(not[size3],iota(filter(x.s, not[curry[same_color,x.o]])))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.forall(not[curry[size-gt,x.o]],x.s)'	0:forall(%s,%s);4:not[%s];4:curry[%s,%s];5:size-gt;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(not[and[not[blue],triangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:blue;4:triangle;1:%s.o;2:x
'λx.apply(not[size1],iota(filter(filter(x.s, size3), yellow)))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow
'λx.empty(filter(filter(x.s, size2), and[curry[same_color,iota(filter(filter(x.s, blue), curry[same_shape,x.o]))],triangle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:triangle
'λx.forall(not[curry[same_color,x.o]],filter(filter(x.s, not[blue]), rectangle))'	0:forall(%s,%s);4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:rectangle
'λx.exists(or[curry[same_shape,x.o],yellow], filter(x.s, size3))'	0:exists(%s, %s);4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.empty(filter(filter(x.s, green), and[curry[same_size,x.o],circle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:circle
'λx.forall(circle,filter(filter(x.s, size3), curry[same_shape,x.o]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(curry[same_size,x.o],iota(filter(x.s, not[curry[same_shape,x.o]])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, size1), blue))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue
'λx.exists(not[curry[same_size,x.o]], filter(filter(x.s, curry[same_shape,x.o]), or[blue,rectangle]))'	0:exists(%s, %s);4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:blue;4:rectangle
'λx.contains(x.o, filter(x.s, or[size1,blue]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:blue
'λx.empty(filter(filter(x.s, not[size3]), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;4:green
'λx.apply(or[green,size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:size1;1:%s.o;2:x
'λx.apply(curry[same_shape,x.o],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(or[triangle,and[size2,yellow]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:and[%s,%s];4:size2;4:yellow;1:%s.o;2:x
'λx.exists(not[or[circle,blue]], filter(x.s, curry[same_size,x.o]))'	0:exists(%s, %s);4:not[%s];4:or[%s,%s];4:circle;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.apply(size2,iota(filter(x.s, circle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(not[or[curry[same_color,iota(filter(x.s, blue))],blue]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue;1:%s.o;2:x
'λx.exists(or[green,blue], filter(x.s, curry[same_shape,x.o]))'	0:exists(%s, %s);4:or[%s,%s];4:green;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(x.s, or[green,circle]), size3)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:circle;4:size3
'λx.empty(filter(filter(x.s, rectangle), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:yellow
'λx.contains(x.o, filter(x.s, not[circle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.apply(size1,iota(filter(x.s, curry[same_size,x.o])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(x.s, curry[same_shape,x.o]), and[curry[same_size,x.o],rectangle])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:rectangle
'λx.exists(or[or[and[yellow,size1],size2],blue], filter(x.s, curry[same_shape,x.o]))'	0:exists(%s, %s);4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:yellow;4:size1;4:size2;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.exists(curry[same_color,x.o], filter(x.s, size1))'	0:exists(%s, %s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.forall(circle,filter(filter(x.s, and[curry[same_color,x.o],blue]), and[curry[same_shape,x.o],blue]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:blue;4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue
'λx.forall(size3,filter(filter(x.s, not[curry[same_color,x.o]]), curry[same_shape,x.o]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(or[or[and[curry[same_size,x.o],curry[same_color,x.o]],not[triangle]],circle],iota(filter(x.s, curry[same_shape,x.o])))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:not[%s];4:triangle;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(and[or[size2,curry[same_shape,iota(filter(x.s, size3))]],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size2;4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, curry[same_color,x.o]), not[yellow])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:not[%s];4:yellow
'λx.apply(curry[same_shape,x.o],iota(filter(filter(x.s, blue), size2)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2
'λx.forall(size3,filter(filter(filter(x.s, or[green,curry[same_shape,x.o]]), curry[size-gt,x.o]), curry[size-gt,x.o]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:size-gt;1:%s.o;2:x;4:curry[%s,%s];5:size-gt;1:%s.o;2:x
'λx.exists(curry[same_shape,x.o], filter(x.s, not[and[curry[same_size,x.o],curry[same_color,x.o]]]))'	0:exists(%s, %s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.forall(not[circle],filter(x.s, yellow))'	0:forall(%s,%s);4:not[%s];4:circle;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(blue,iota(filter(x.s, not[yellow])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow
'λx.apply(green,iota(filter(x.s, and[green,size3])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:size3
'λx.apply(green,iota(filter(filter(x.s, not[blue]), size2)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:size2
'λx.forall(curry[size-gt,x.o],filter(filter(x.s, circle), or[yellow,size2]))'	0:forall(%s,%s);4:curry[%s,%s];5:size-gt;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:yellow;4:size2
'λx.contains(x.o, filter(filter(x.s, or[green,yellow]), curry[same_shape,iota(filter(x.s, blue))]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:yellow;4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[circle,or[blue,yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:or[%s,%s];4:blue;4:yellow;1:%s.o;2:x
'λx.forall(not[yellow],filter(x.s, curry[same_color,x.o]))'	0:forall(%s,%s);4:not[%s];4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(not[and[size1,circle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size1;4:circle;1:%s.o;2:x
'λx.exists(and[curry[same_size,x.o],circle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:circle;3:%s.s;2:x
'λx.apply(and[circle,green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:green;1:%s.o;2:x
'λx.apply(or[or[green,yellow],circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:green;4:yellow;4:circle;1:%s.o;2:x
'λx.exists(green, filter(filter(x.s, triangle), size3))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3
'λx.forall(circle,filter(filter(filter(x.s, curry[same_shape,x.o]), curry[same_color,x.o]), blue))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:blue
'λx.exists(size1, filter(x.s, curry[size-gt,x.o]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-gt;1:%s.o;2:x
'λx.apply(and[not[blue],and[curry[same_color,x.o],circle]],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:blue;4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(curry[same_shape,x.o],iota(filter(x.s, or[size3,curry[same_size,x.o]])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.forall(not[blue],filter(x.s, circle))'	0:forall(%s,%s);4:not[%s];4:blue;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.forall(blue,filter(filter(filter(x.s, curry[same_color,x.o]), circle), curry[same_shape,x.o]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:circle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(and[green,rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:rectangle;1:%s.o;2:x
'λx.apply(or[triangle,blue],iota(filter(filter(x.s, curry[same_color,x.o]), not[size3])))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:not[%s];4:size3
'λx.forall(blue,filter(filter(filter(x.s, curry[same_shape,x.o]), circle), or[blue,curry[same_color,x.o]]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:circle;4:or[%s,%s];4:blue;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, triangle), blue))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue
'λx.apply(or[circle,and[and[blue,not[yellow]],not[rectangle]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:and[%s,%s];4:and[%s,%s];4:blue;4:not[%s];4:yellow;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.apply(curry[same_shape,iota(filter(filter(x.s, size2), triangle))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:triangle;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, blue), curry[same_size,x.o])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.apply(not[and[size1,green]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size1;4:green;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, blue))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(curry[same_size,x.o],iota(filter(filter(x.s, curry[same_shape,x.o]), curry[same_size,x.o])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(filter(filter(x.s, rectangle), size1), curry[same_color,x.o]), size1)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:size1
'λx.apply(or[size1,or[rectangle,and[yellow,size2]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:or[%s,%s];4:rectangle;4:and[%s,%s];4:yellow;4:size2;1:%s.o;2:x
'λx.exists(blue, filter(x.s, or[yellow,and[blue,not[curry[size-leq,x.o]]]]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:and[%s,%s];4:blue;4:not[%s];4:curry[%s,%s];5:size-leq;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, curry[same_shape,iota(filter(filter(x.s, circle), green))]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green
'λx.forall(not[curry[same_shape,x.o]],filter(filter(x.s, size3), rectangle))'	0:forall(%s,%s);4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle
'λx.apply(or[size1,not[circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:not[%s];4:circle;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(x.s, not[green]), size3), and[curry[same_shape,x.o],rectangle])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:size3;4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:rectangle;3:%s.s;2:x
'λx.apply(or[and[rectangle,green],yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:rectangle;4:green;4:yellow;1:%s.o;2:x
'λx.apply(curry[same_shape,iota(filter(x.s, curry[size-lt,x.o]))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-lt;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(not[or[size2,triangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:size2;4:triangle;1:%s.o;2:x
'λx.empty(filter(x.s, not[or[triangle,curry[size-leq,x.o]]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:triangle;4:curry[%s,%s];5:size-leq;1:%s.o;2:x
'λx.exists(circle, filter(x.s, yellow))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(or[green,yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:yellow;1:%s.o;2:x
'λx.empty(filter(x.s, and[and[curry[same_shape,x.o],not[curry[same_color,x.o]]],curry[same_shape,x.o]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.empty(filter(x.s, and[size1,curry[same_size,x.o]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.forall(not[rectangle],filter(filter(x.s, triangle), or[or[size3,or[not[curry[same_size,iota(filter(x.s, curry[same_shape,x.o]))]],size3]],size1]))'	0:forall(%s,%s);4:not[%s];4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:or[%s,%s];4:or[%s,%s];4:size3;4:or[%s,%s];4:not[%s];4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size3;4:size1
'λx.exists(curry[same_color,x.o], filter(filter(x.s, size1), not[yellow]))'	0:exists(%s, %s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:not[%s];4:yellow
'λx.apply(not[and[size2,blue]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size2;4:blue;1:%s.o;2:x
'λx.forall(curry[same_size,x.o],filter(x.s, or[rectangle,size2]))'	0:forall(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:size2
'λx.exists(or[and[yellow,rectangle],size2], filter(x.s, not[green]))'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:yellow;4:rectangle;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green
'λx.apply(curry[same_shape,x.o],iota(filter(filter(x.s, blue), or[size3,size1])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:size3;4:size1
'λx.forall(size3,filter(filter(x.s, curry[same_shape,x.o]), blue))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue
'λx.contains(x.o, filter(x.s, or[not[blue],size1]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:blue;4:size1
'λx.forall(blue,filter(filter(x.s, yellow), curry[same_shape,x.o]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.forall(circle,filter(filter(filter(x.s, blue), curry[same_color,x.o]), curry[same_shape,x.o]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.exists(blue, filter(x.s, size3))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(and[size1,and[rectangle,green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:and[%s,%s];4:rectangle;4:green;1:%s.o;2:x
'λx.apply(or[rectangle,and[not[blue],circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:and[%s,%s];4:not[%s];4:blue;4:circle;1:%s.o;2:x
'λx.exists(curry[size-lt,x.o], x.s)'	0:exists(%s, %s);4:curry[%s,%s];5:size-lt;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(curry[size-geq,x.o],iota(filter(filter(x.s, not[curry[same_color,x.o]]), not[rectangle])))'	0:apply(%s,%s);4:curry[%s,%s];5:size-geq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:not[%s];4:rectangle
'λx.contains(iota(filter(x.s, not[not[and[curry[same_shape,x.o],blue]]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue;3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(x.s, triangle), green)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green
'λx.forall(triangle,filter(filter(x.s, yellow), curry[same_shape,x.o]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(and[blue,and[curry[same_shape,x.o],blue]],iota(filter(filter(x.s, blue), curry[size-leq,x.o])))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:curry[%s,%s];5:size-leq;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, circle), and[blue,curry[same_size,x.o]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:blue;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(x.s, not[size1]), curry[same_size,x.o]), blue), curry[same_color,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:blue;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.exists(and[size3,or[yellow,triangle]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:size3;4:or[%s,%s];4:yellow;4:triangle;3:%s.s;2:x
'λx.apply(or[and[yellow,size2],triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:yellow;4:size2;4:triangle;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, and[yellow,curry[same_size,x.o]]), curry[same_color,x.o]), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:triangle
'λx.apply(or[triangle,not[or[blue,circle]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:not[%s];4:or[%s,%s];4:blue;4:circle;1:%s.o;2:x
'λx.empty(filter(x.s, and[yellow,and[curry[same_shape,x.o],not[size1]]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:size1
'λx.apply(and[size3,curry[same_shape,x.o]],iota(filter(x.s, and[blue,curry[size-lt,x.o]])))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:curry[%s,%s];5:size-lt;1:%s.o;2:x
'λx.apply(curry[same_size,x.o],iota(filter(filter(x.s, curry[same_size,x.o]), curry[same_shape,x.o])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(filter(x.s, curry[same_size,x.o]), blue), circle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:blue;4:circle
'λx.apply(rectangle,iota(filter(filter(x.s, rectangle), curry[same_size,x.o])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.apply(curry[same_shape,iota(filter(filter(x.s, blue), not[size2]))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:size2;1:%s.o;2:x
'λx.empty(filter(filter(x.s, or[curry[same_shape,x.o],blue]), or[green,yellow]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue;4:or[%s,%s];4:green;4:yellow
'λx.apply(and[and[circle,not[blue]],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:circle;4:not[%s];4:blue;4:circle;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(filter(x.s, curry[same_color,x.o]), rectangle), size1)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:rectangle;4:size1
'λx.apply(triangle,iota(filter(x.s, and[blue,triangle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:triangle
'λx.forall(size2,filter(x.s, or[triangle,blue]))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:blue
'λx.apply(and[or[not[yellow],circle],not[rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:not[%s];4:yellow;4:circle;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.exists(blue, filter(x.s, and[blue,and[and[circle,curry[same_size,x.o]],circle]]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:and[%s,%s];4:and[%s,%s];4:circle;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:circle
'λx.apply(and[or[size3,triangle],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size3;4:triangle;4:blue;1:%s.o;2:x
'λx.apply(or[size2,and[triangle,blue]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:and[%s,%s];4:triangle;4:blue;1:%s.o;2:x
'λx.forall(and[curry[same_size,x.o],blue],filter(x.s, curry[same_color,x.o]))'	0:forall(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.exists(curry[same_shape,x.o], filter(filter(x.s, blue), not[and[not[green],and[curry[same_color,x.o],and[curry[same_size,x.o],blue]]]]))'	0:exists(%s, %s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:and[%s,%s];4:not[%s];4:green;4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:blue
'λx.apply(or[or[circle,green],yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:circle;4:green;4:yellow;1:%s.o;2:x
'λx.empty(filter(x.s, and[curry[size-lt,x.o],size2]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:size-lt;1:%s.o;2:x;4:size2
'λx.exists(curry[same_shape,iota(filter(x.s, or[and[yellow,and[curry[same_size,x.o],size2]],blue]))], x.s)'	0:exists(%s, %s);4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:size2;4:blue;3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, not[circle]), yellow))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:yellow
'λx.apply(and[not[yellow],or[blue,not[rectangle]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:yellow;4:or[%s,%s];4:blue;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(filter(x.s, blue), curry[same_size,x.o]), circle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:circle
'λx.apply(or[yellow,not[size2]],iota(filter(x.s, and[curry[same_color,x.o],triangle])))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:triangle
'λx.exists(not[green], filter(x.s, and[rectangle,curry[size-geq,x.o]]))'	0:exists(%s, %s);4:not[%s];4:green;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:curry[%s,%s];5:size-geq;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(x.s, rectangle), yellow)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:yellow
'λx.exists(curry[same_shape,x.o], filter(x.s, size1))'	0:exists(%s, %s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.contains(x.o, filter(x.s, curry[same_color,iota(filter(x.s, blue))]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(not[and[or[size2,size3],blue]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:or[%s,%s];4:size2;4:size3;4:blue;1:%s.o;2:x
'λx.exists(not[size1], filter(x.s, curry[same_size,x.o]))'	0:exists(%s, %s);4:not[%s];4:size1;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.exists(or[and[blue,rectangle],not[curry[same_shape,x.o]]], filter(x.s, curry[same_color,x.o]))'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:blue;4:rectangle;4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(and[blue,or[size3,triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:or[%s,%s];4:size3;4:triangle;1:%s.o;2:x
'λx.apply(not[size2],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(and[circle,and[not[blue],circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:and[%s,%s];4:not[%s];4:blue;4:circle;1:%s.o;2:x
'λx.apply(not[yellow],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(x.s, size3), green)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green
'λx.exists(and[not[or[circle,size1]],blue], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:or[%s,%s];4:circle;4:size1;4:blue;3:%s.s;2:x
'λx.empty(filter(filter(x.s, blue), or[rectangle,size3]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:rectangle;4:size3
'λx.apply(or[not[yellow],size3],iota(filter(x.s, not[or[size2,rectangle]])))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:yellow;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:size2;4:rectangle
'λx.apply(or[curry[same_size,iota(filter(x.s, rectangle))],size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size3;1:%s.o;2:x
'λx.empty(filter(filter(x.s, or[curry[same_size,x.o],green]), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:green;4:circle
'λx.forall(and[size2,not[rectangle]],filter(x.s, blue))'	0:forall(%s,%s);4:and[%s,%s];4:size2;4:not[%s];4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(or[or[yellow,circle],green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:yellow;4:circle;4:green;1:%s.o;2:x
'λx.apply(and[not[size1],or[not[triangle],green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size1;4:or[%s,%s];4:not[%s];4:triangle;4:green;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, and[blue,circle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:circle
'λx.apply(not[and[curry[same_shape,x.o],or[blue,circle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:blue;4:circle;1:%s.o;2:x
'λx.exists(or[not[curry[same_size,x.o]],rectangle], filter(x.s, curry[same_color,x.o]))'	0:exists(%s, %s);4:or[%s,%s];4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.exists(curry[same_shape,x.o], filter(x.s, not[or[curry[same_color,x.o],yellow]]))'	0:exists(%s, %s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:yellow
'λx.apply(not[not[and[not[blue],circle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:and[%s,%s];4:not[%s];4:blue;4:circle;1:%s.o;2:x
'λx.apply(not[and[not[blue],or[circle,triangle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:blue;4:or[%s,%s];4:circle;4:triangle;1:%s.o;2:x
'λx.forall(triangle,filter(x.s, green))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.empty(filter(filter(filter(filter(x.s, curry[same_size,x.o]), curry[same_color,x.o]), not[size1]), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:not[%s];4:size1;4:blue
'λx.forall(not[curry[same_size,x.o]],filter(x.s, size2))'	0:forall(%s,%s);4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.contains(x.o, filter(filter(x.s, and[not[circle],or[yellow,green]]), curry[same_color,x.o]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:circle;4:or[%s,%s];4:yellow;4:green;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, green), rectangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:rectangle
'λx.forall(blue,filter(filter(filter(x.s, triangle), or[curry[same_color,x.o],rectangle]), curry[same_shape,x.o]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:or[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:rectangle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.forall(size1,filter(filter(filter(x.s, curry[same_shape,x.o]), curry[same_color,x.o]), blue))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:blue
'λx.apply(and[not[circle],curry[same_shape,x.o]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:circle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[yellow,circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:circle;1:%s.o;2:x
'λx.apply(or[and[or[size1,green],curry[same_shape,x.o]],yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size1;4:green;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:yellow;1:%s.o;2:x
'λx.empty(filter(filter(x.s, or[size1,circle]), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:circle;4:yellow
'λx.forall(blue,filter(filter(x.s, circle), and[or[curry[same_color,x.o],blue],curry[same_shape,x.o]]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:and[%s,%s];4:or[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.forall(blue,filter(filter(x.s, curry[same_shape,x.o]), or[and[triangle,or[curry[same_color,x.o],size1]],and[curry[same_color,x.o],rectangle]]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:and[%s,%s];4:triangle;4:or[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:size1;4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:rectangle
'λx.apply(rectangle,iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(not[and[not[blue],not[rectangle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:blue;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.forall(rectangle,filter(x.s, curry[size-lt,x.o]))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-lt;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, and[green,size2])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:size2
'λx.exists(size1, filter(x.s, yellow))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(green,iota(filter(filter(x.s, green), triangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:triangle
'λx.exists(triangle, filter(x.s, size3))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(size1,iota(filter(x.s, and[green,triangle])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:triangle
'λx.forall(green,filter(x.s, rectangle))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.empty(filter(x.s, curry[size-gt,x.o]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-gt;1:%s.o;2:x
'λx.apply(and[blue,or[triangle,size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:or[%s,%s];4:triangle;4:size1;1:%s.o;2:x
'λx.apply(not[and[size3,yellow]],iota(filter(filter(filter(filter(x.s, triangle), size3), triangle), and[triangle,green])))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size3;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3;4:triangle;4:and[%s,%s];4:triangle;4:green
'λx.exists(blue, filter(x.s, circle))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(blue,iota(filter(x.s, curry[same_color,iota(filter(x.s, and[blue,curry[same_shape,x.o]]))])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(or[and[not[triangle],size3],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:not[%s];4:triangle;4:size3;4:blue;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, and[curry[same_shape,x.o],blue])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue
'λx.apply(green,iota(filter(x.s, curry[same_shape,iota(filter(x.s, size3))])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.forall(curry[same_size,x.o],filter(x.s, triangle))'	0:forall(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.exists(yellow, filter(x.s, size3))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(size2, filter(filter(filter(filter(x.s, not[blue]), rectangle), curry[same_color,x.o]), size2))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:rectangle;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:size2
'λx.empty(filter(filter(filter(x.s, or[not[curry[same_color,x.o]],triangle]), curry[same_shape,x.o]), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:triangle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:rectangle
'λx.apply(blue,iota(filter(x.s, curry[same_shape,x.o])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.exists(blue, filter(x.s, or[triangle,size2]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:size2
'λx.forall(rectangle,filter(filter(x.s, curry[same_size,x.o]), size1))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:size1
'λx.apply(or[circle,or[green,size1]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:or[%s,%s];4:green;4:size1;1:%s.o;2:x
'λx.apply(curry[same_color,x.o],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(or[not[and[size3,circle]],green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:and[%s,%s];4:size3;4:circle;4:green;1:%s.o;2:x
'λx.apply(and[or[and[not[triangle],triangle],curry[same_shape,iota(filter(x.s, blue))]],not[blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:not[%s];4:triangle;4:triangle;4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:blue;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, and[rectangle,yellow])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:yellow
'λx.apply(curry[size-gt,x.o],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:curry[%s,%s];5:size-gt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(green,iota(filter(filter(x.s, rectangle), size2)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size2
'λx.apply(or[yellow,or[green,circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:or[%s,%s];4:green;4:circle;1:%s.o;2:x
'λx.apply(curry[same_shape,x.o],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.exists(blue, filter(x.s, not[size3]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3
'λx.apply(curry[same_shape,iota(filter(x.s, rectangle))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;1:%s.o;2:x
'λx.apply(curry[same_size,x.o],iota(filter(x.s, not[triangle])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.exists(green, filter(x.s, curry[same_shape,iota(filter(x.s, triangle))]))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(triangle,iota(filter(filter(x.s, size3), blue)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue
'λx.apply(rectangle,iota(filter(filter(x.s, curry[same_shape,x.o]), size1)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size1
'λx.forall(size3,filter(filter(filter(x.s, yellow), or[curry[same_shape,x.o],circle]), size1))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:circle;4:size1
'λx.apply(or[triangle,or[not[size3],rectangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:or[%s,%s];4:not[%s];4:size3;4:rectangle;1:%s.o;2:x
'λx.empty(filter(filter(x.s, and[curry[same_shape,x.o],yellow]), not[size3]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:yellow;4:not[%s];4:size3
'λx.empty(filter(filter(filter(filter(x.s, circle), curry[same_shape,x.o]), blue), curry[same_color,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.exists(or[blue,circle], filter(x.s, or[and[rectangle,triangle],curry[same_shape,x.o]]))'	0:exists(%s, %s);4:or[%s,%s];4:blue;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:triangle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.exists(circle, x.s)'	0:exists(%s, %s);4:circle;3:%s.s;2:x
'λx.apply(and[size1,blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:blue;1:%s.o;2:x
'λx.apply(or[yellow,circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:circle;1:%s.o;2:x
'λx.apply(and[curry[same_color,x.o],not[rectangle]],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.forall(circle,filter(x.s, size3))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(green,iota(filter(filter(x.s, green), size3)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size3
'λx.apply(and[circle,not[blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:not[%s];4:blue;1:%s.o;2:x
'λx.apply(curry[same_color,iota(filter(x.s, and[not[green],rectangle]))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:green;4:rectangle;1:%s.o;2:x
'λx.forall(size2,filter(x.s, green))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(triangle,iota(filter(filter(x.s, size2), triangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:triangle
'λx.apply(and[green,circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:circle;1:%s.o;2:x
'λx.apply(not[and[triangle,or[size1,and[size2,green]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:triangle;4:or[%s,%s];4:size1;4:and[%s,%s];4:size2;4:green;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(filter(x.s, circle), green), not[size2])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green;4:not[%s];4:size2
'λx.apply(green,iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.empty(filter(filter(x.s, blue), not[triangle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:triangle
'λx.apply(curry[same_shape,x.o],iota(filter(x.s, curry[size-lt,x.o])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-lt;1:%s.o;2:x
'λx.apply(not[green],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(and[circle,yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:yellow;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(filter(x.s, curry[same_shape,x.o]), size2), blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size2;4:blue
'λx.apply(or[blue,circle],iota(filter(filter(x.s, size2), curry[same_shape,x.o])))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(not[or[blue,triangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:blue;4:triangle;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, size1)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(green,iota(filter(x.s, circle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(or[yellow,curry[size-geq,x.o]],iota(filter(filter(x.s, green), not[and[size1,curry[same_size,x.o]]])))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:curry[%s,%s];5:size-geq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:and[%s,%s];4:size1;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.apply(not[or[and[blue,circle],triangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:and[%s,%s];4:blue;4:circle;4:triangle;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, circle), size3)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3;3:%s.s;2:x
'λx.apply(or[not[size2],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:size2;4:blue;1:%s.o;2:x
'λx.apply(and[rectangle,not[size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:not[%s];4:size2;1:%s.o;2:x
'λx.forall(curry[size-leq,x.o],x.s)'	0:forall(%s,%s);4:curry[%s,%s];5:size-leq;1:%s.o;2:x;3:%s.s;2:x
'λx.empty(filter(filter(x.s, not[size2]), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:rectangle
'λx.apply(curry[same_size,x.o],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.contains(iota(filter(x.s, or[and[or[size1,or[blue,triangle]],or[rectangle,yellow]],circle])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:size1;4:or[%s,%s];4:blue;4:triangle;4:or[%s,%s];4:rectangle;4:yellow;4:circle;3:%s.s;2:x
'λx.apply(not[or[triangle,and[blue,circle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:triangle;4:and[%s,%s];4:blue;4:circle;1:%s.o;2:x
'λx.exists(and[size2,or[green,yellow]], filter(x.s, or[or[curry[same_color,x.o],and[curry[same_shape,iota(filter(x.s, blue))],blue]],and[blue,rectangle]]))'	0:exists(%s, %s);4:and[%s,%s];4:size2;4:or[%s,%s];4:green;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue;4:and[%s,%s];4:blue;4:rectangle
'λx.forall(circle,filter(x.s, and[blue,or[curry[same_color,x.o],green]]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:or[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:green
'λx.apply(not[or[triangle,or[size3,size1]]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:triangle;4:or[%s,%s];4:size3;4:size1;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, size2)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.forall(triangle,filter(filter(x.s, or[size3,circle]), curry[same_size,x.o]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:circle;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(x.s, triangle), size1)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size1
'λx.apply(or[size1,or[triangle,blue]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:or[%s,%s];4:triangle;4:blue;1:%s.o;2:x
'λx.apply(and[circle,curry[same_shape,iota(filter(x.s, curry[same_shape,x.o]))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.forall(triangle,filter(filter(filter(x.s, size1), curry[same_color,x.o]), yellow))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:yellow
'λx.apply(and[size3,curry[same_shape,iota(filter(filter(x.s, size2), blue))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue;1:%s.o;2:x
'λx.apply(not[or[and[triangle,green],yellow]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:and[%s,%s];4:triangle;4:green;4:yellow;1:%s.o;2:x
'λx.apply(or[and[triangle,green],and[circle,blue]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:triangle;4:green;4:and[%s,%s];4:circle;4:blue;1:%s.o;2:x
'λx.apply(curry[same_color,x.o],iota(filter(filter(filter(filter(x.s, blue), curry[same_shape,x.o]), curry[same_size,x.o]), circle)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:circle
'λx.apply(curry[same_color,x.o],iota(filter(filter(filter(x.s, or[curry[same_size,x.o],yellow]), circle), green)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:yellow;4:circle;4:green
'λx.apply(and[blue,curry[same_size,iota(filter(x.s, blue))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.apply(or[and[circle,size3],or[triangle,size1]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:circle;4:size3;4:or[%s,%s];4:triangle;4:size1;1:%s.o;2:x
'λx.apply(yellow,iota(filter(x.s, not[curry[same_size,x.o]])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.apply(not[and[rectangle,circle]],iota(filter(x.s, curry[size-geq,x.o])))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:rectangle;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-geq;1:%s.o;2:x
'λx.apply(and[not[triangle],not[size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:triangle;4:not[%s];4:size1;1:%s.o;2:x
'λx.apply(curry[same_color,iota(x.s)],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:iota(%s);3:%s.s;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(or[or[green,yellow],size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:green;4:yellow;4:size1;1:%s.o;2:x
'λx.forall(size3,filter(filter(x.s, blue), triangle))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle
'λx.apply(curry[same_color,iota(filter(filter(filter(x.s, or[size1,green]), circle), circle))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:green;4:circle;4:circle;1:%s.o;2:x
'λx.apply(not[and[and[circle,or[yellow,green]],circle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:or[%s,%s];4:yellow;4:green;4:circle;1:%s.o;2:x
'λx.apply(curry[same_shape,iota(filter(x.s, green))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;1:%s.o;2:x
'λx.forall(or[size2,and[size3,not[curry[same_shape,x.o]]]],filter(x.s, green))'	0:forall(%s,%s);4:or[%s,%s];4:size2;4:and[%s,%s];4:size3;4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.forall(blue,filter(filter(filter(x.s, curry[same_shape,x.o]), curry[same_color,x.o]), circle))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:circle
'λx.forall(size3,filter(x.s, blue))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(not[and[size2,rectangle]],iota(filter(x.s, or[and[triangle,rectangle],curry[same_shape,x.o]])))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size2;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:triangle;4:rectangle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.exists(not[blue], filter(x.s, curry[same_color,x.o]))'	0:exists(%s, %s);4:not[%s];4:blue;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.forall(circle,filter(filter(filter(x.s, curry[same_color,x.o]), curry[same_shape,x.o]), not[blue]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:blue
'λx.exists(not[yellow], filter(x.s, or[curry[same_shape,x.o],circle]))'	0:exists(%s, %s);4:not[%s];4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:circle
'λx.apply(not[and[blue,and[or[size2,size3],blue]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:blue;4:and[%s,%s];4:or[%s,%s];4:size2;4:size3;4:blue;1:%s.o;2:x
'λx.apply(or[blue,or[rectangle,circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:or[%s,%s];4:rectangle;4:circle;1:%s.o;2:x
'λx.exists(or[circle,blue], filter(x.s, curry[same_shape,x.o]))'	0:exists(%s, %s);4:or[%s,%s];4:circle;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(and[circle,size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:size2;1:%s.o;2:x
'λx.empty(filter(filter(x.s, and[blue,size3]), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size3;4:rectangle
'λx.apply(not[and[not[circle],not[blue]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:circle;4:not[%s];4:blue;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, green), curry[same_size,x.o])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.apply(curry[same_color,iota(filter(filter(x.s, not[curry[same_shape,x.o]]), size3))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size3;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, or[curry[same_shape,x.o],yellow]), blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:yellow;4:blue
'λx.apply(or[green,and[triangle,yellow]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:and[%s,%s];4:triangle;4:yellow;1:%s.o;2:x
'λx.exists(or[curry[same_shape,x.o],rectangle], filter(x.s, not[yellow]))'	0:exists(%s, %s);4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow
'λx.exists(circle, filter(filter(x.s, curry[same_shape,x.o]), yellow))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:yellow
'λx.exists(or[triangle,rectangle], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:triangle;4:rectangle;3:%s.s;2:x
'λx.apply(rectangle,iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.contains(iota(filter(filter(x.s, yellow), and[circle,not[curry[same_color,x.o]]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:circle;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(or[or[curry[same_size,iota(filter(x.s, blue))],size1],yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1;4:yellow;1:%s.o;2:x
'λx.apply(green,x.o)'	0:apply(%s,%s);4:green;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, curry[size-geq,x.o])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-geq;1:%s.o;2:x
'λx.exists(and[or[size1,curry[same_shape,x.o]],green], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:or[%s,%s];4:size1;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:green;3:%s.s;2:x
'λx.apply(and[curry[same_shape,x.o],or[blue,and[not[blue],not[triangle]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:blue;4:and[%s,%s];4:not[%s];4:blue;4:not[%s];4:triangle;1:%s.o;2:x
'λx.empty(filter(filter(x.s, circle), curry[same_shape,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(not[triangle],x.o)'	0:apply(%s,%s);4:not[%s];4:triangle;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(filter(x.s, and[curry[same_shape,x.o],size1]), rectangle), blue)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size1;4:rectangle;4:blue
'λx.apply(not[and[blue,circle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:blue;4:circle;1:%s.o;2:x
'λx.apply(yellow,iota(filter(x.s, size3)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.contains(x.o, filter(x.s, and[blue,circle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:circle
'λx.forall(green,filter(filter(filter(filter(x.s, curry[same_shape,x.o]), size2), size2), yellow))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size2;4:size2;4:yellow
'λx.forall(not[curry[same_shape,x.o]],filter(filter(x.s, blue), not[circle]))'	0:forall(%s,%s);4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:circle
'λx.exists(blue, x.s)'	0:exists(%s, %s);4:blue;3:%s.s;2:x
'λx.apply(and[green,or[curry[same_color,iota(filter(x.s, size2))],green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:or[%s,%s];4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green;1:%s.o;2:x
'λx.exists(not[circle], filter(filter(x.s, size1), yellow))'	0:exists(%s, %s);4:not[%s];4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow
'λx.contains(x.o, filter(x.s, and[curry[same_size,x.o],curry[same_shape,iota(filter(x.s, blue))]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(or[size1,and[rectangle,green]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:and[%s,%s];4:rectangle;4:green;1:%s.o;2:x
'λx.apply(and[not[green],or[size1,and[triangle,size2]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:green;4:or[%s,%s];4:size1;4:and[%s,%s];4:triangle;4:size2;1:%s.o;2:x
'λx.apply(or[size2,blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:blue;1:%s.o;2:x
'λx.exists(size1, x.s)'	0:exists(%s, %s);4:size1;3:%s.s;2:x
'λx.exists(or[size1,blue], filter(x.s, or[size3,rectangle]))'	0:exists(%s, %s);4:or[%s,%s];4:size1;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:rectangle
'λx.empty(filter(filter(x.s, and[curry[same_size,x.o],size2]), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:size2;4:size2
'λx.apply(or[not[yellow],circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:yellow;4:circle;1:%s.o;2:x
'λx.apply(or[not[circle],size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:circle;4:size1;1:%s.o;2:x
'λx.apply(and[not[triangle],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:triangle;4:size2;1:%s.o;2:x
'λx.forall(green,filter(x.s, not[and[blue,curry[same_color,x.o]]]))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:blue;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.empty(filter(x.s, size3))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(and[blue,and[not[triangle],not[size2]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:not[%s];4:triangle;4:not[%s];4:size2;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, and[blue,or[size2,triangle]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:or[%s,%s];4:size2;4:triangle
'λx.apply(size2,iota(filter(filter(filter(x.s, size2), not[rectangle]), curry[size-gt,x.o])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:not[%s];4:rectangle;4:curry[%s,%s];5:size-gt;1:%s.o;2:x
'λx.forall(size1,filter(x.s, yellow))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(blue,iota(filter(x.s, and[and[not[and[triangle,size2]],curry[same_shape,x.o]],blue])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:triangle;4:size2;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue
'λx.forall(and[or[and[not[curry[same_shape,x.o]],size3],size2],size3],filter(x.s, curry[size-lt,x.o]))'	0:forall(%s,%s);4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size3;4:size2;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-lt;1:%s.o;2:x
'λx.apply(not[and[not[blue],circle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:blue;4:circle;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, and[size3,curry[same_shape,x.o]])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.forall(or[curry[same_shape,x.o],curry[size-geq,x.o]],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:size-geq;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(triangle,iota(filter(filter(filter(x.s, not[yellow]), curry[size-leq,x.o]), triangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:curry[%s,%s];5:size-leq;1:%s.o;2:x;4:triangle
'λx.forall(size2,filter(filter(x.s, not[circle]), not[yellow]))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:not[%s];4:yellow
'λx.apply(not[or[curry[same_size,iota(filter(filter(x.s, size3), triangle))],circle]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle;4:circle;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(x.s, blue), and[curry[same_size,x.o],circle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:circle
'λx.exists(and[rectangle,and[curry[same_color,x.o],size1]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:rectangle;4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:size1;3:%s.s;2:x
'λx.apply(or[circle,green],iota(filter(x.s, and[curry[same_size,x.o],circle])))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:circle
'λx.exists(or[size2,or[yellow,curry[same_shape,x.o]]], filter(x.s, blue))'	0:exists(%s, %s);4:or[%s,%s];4:size2;4:or[%s,%s];4:yellow;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(blue,iota(filter(filter(x.s, rectangle), blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue
'λx.apply(or[triangle,not[yellow]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:not[%s];4:yellow;1:%s.o;2:x
'λx.empty(filter(filter(x.s, not[and[size1,not[blue]]]), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:size1;4:not[%s];4:blue;4:rectangle
'λx.exists(and[curry[same_color,x.o],not[and[blue,not[circle]]]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:blue;4:not[%s];4:circle;3:%s.s;2:x
'λx.forall(size3,filter(filter(x.s, size1), curry[same_size,x.o]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, size3), not[rectangle])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:rectangle;3:%s.s;2:x
'λx.apply(or[or[size1,green],circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:size1;4:green;4:circle;1:%s.o;2:x
'λx.forall(green,x.s)'	0:forall(%s,%s);4:green;3:%s.s;2:x
'λx.forall(circle,filter(filter(x.s, green), not[curry[same_shape,x.o]]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(not[triangle],iota(filter(x.s, curry[same_size,x.o])))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.exists(and[green,curry[same_shape,x.o]], filter(x.s, size2))'	0:exists(%s, %s);4:and[%s,%s];4:green;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.empty(filter(filter(x.s, curry[same_shape,x.o]), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:circle
'λx.apply(and[curry[same_size,x.o],size3],iota(filter(x.s, green)))'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(or[triangle,curry[same_size,iota(filter(x.s, size2))]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;1:%s.o;2:x
'λx.exists(green, filter(x.s, and[not[triangle],curry[same_shape,x.o]]))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:triangle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, circle), blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue
'λx.empty(filter(filter(x.s, curry[same_size,x.o]), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:size2
'λx.apply(blue,iota(filter(x.s, or[curry[same_shape,x.o],and[circle,yellow]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:circle;4:yellow
'λx.apply(and[or[circle,blue],not[and[blue,circle]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:circle;4:blue;4:not[%s];4:and[%s,%s];4:blue;4:circle;1:%s.o;2:x
'λx.forall(curry[same_size,x.o],filter(x.s, not[curry[same_shape,x.o]]))'	0:forall(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.contains(iota(filter(x.s, or[size2,curry[same_color,x.o]])), filter(x.s, blue))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(curry[same_shape,iota(filter(filter(x.s, circle), green))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green;1:%s.o;2:x
'λx.apply(and[size2,rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:rectangle;1:%s.o;2:x
'λx.exists(and[or[circle,blue],or[rectangle,curry[same_shape,x.o]]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:or[%s,%s];4:circle;4:blue;4:or[%s,%s];4:rectangle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(curry[same_size,x.o],iota(filter(x.s, not[curry[size-gt,x.o]])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:size-gt;1:%s.o;2:x
'λx.forall(curry[same_color,x.o],filter(filter(x.s, or[and[circle,curry[same_shape,x.o]],green]), blue))'	0:forall(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:circle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:green;4:blue
'λx.apply(triangle,iota(filter(filter(x.s, and[blue,not[size2]]), triangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:not[%s];4:size2;4:triangle
'λx.apply(size1,iota(filter(x.s, not[curry[same_shape,x.o]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.contains(iota(x.s), filter(x.s, blue))'	0:contains(%s, %s);1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(green,iota(filter(filter(x.s, size1), curry[same_size,x.o])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.exists(yellow, x.s)'	0:exists(%s, %s);4:yellow;3:%s.s;2:x
'λx.apply(curry[same_shape,x.o],iota(filter(filter(x.s, blue), or[not[blue],and[curry[same_shape,x.o],blue]])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:not[%s];4:blue;4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue
'λx.contains(x.o, filter(filter(x.s, not[triangle]), not[blue]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:not[%s];4:blue
'λx.apply(green,iota(filter(x.s, and[size2,rectangle])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:rectangle
'λx.contains(x.o, filter(x.s, not[blue]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue
'λx.forall(circle,filter(x.s, and[green,curry[same_shape,x.o]]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.forall(size2,filter(x.s, yellow))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(or[and[size1,blue],size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size1;4:blue;4:size3;1:%s.o;2:x
'λx.apply(not[curry[same_size,x.o]],iota(filter(filter(x.s, size1), or[curry[same_shape,x.o],and[yellow,rectangle]])))'	0:apply(%s,%s);4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:yellow;4:rectangle
'λx.apply(or[blue,not[curry[same_size,iota(filter(x.s, curry[same_color,x.o]))]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:not[%s];4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.forall(and[size2,rectangle],filter(filter(x.s, curry[same_shape,x.o]), green))'	0:forall(%s,%s);4:and[%s,%s];4:size2;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:green
'λx.forall(size3,filter(filter(x.s, yellow), and[curry[same_shape,iota(filter(filter(filter(x.s, curry[same_shape,x.o]), or[size1,size3]), or[curry[same_size,x.o],curry[same_size,x.o]]))],blue]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:size1;4:size3;4:or[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:blue
'λx.apply(size1,iota(filter(filter(x.s, not[blue]), size1)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:size1
'λx.forall(not[curry[same_shape,x.o]],filter(filter(x.s, not[blue]), circle))'	0:forall(%s,%s);4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:circle
'λx.forall(not[and[and[rectangle,curry[same_color,x.o]],yellow]],x.s)'	0:forall(%s,%s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:yellow;3:%s.s;2:x
'λx.exists(and[rectangle,not[curry[size-lt,x.o]]], filter(x.s, not[green]))'	0:exists(%s, %s);4:and[%s,%s];4:rectangle;4:not[%s];4:curry[%s,%s];5:size-lt;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green
'λx.apply(not[not[not[and[yellow,triangle]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:not[%s];4:and[%s,%s];4:yellow;4:triangle;1:%s.o;2:x
'λx.empty(filter(filter(x.s, size3), curry[same_size,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.apply(or[and[blue,triangle],circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:blue;4:triangle;4:circle;1:%s.o;2:x
'λx.apply(and[size3,not[triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:not[%s];4:triangle;1:%s.o;2:x
'λx.apply(not[and[or[yellow,green],size1]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:or[%s,%s];4:yellow;4:green;4:size1;1:%s.o;2:x
'λx.apply(or[size1,rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:rectangle;1:%s.o;2:x
'λx.apply(and[not[size1],not[triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size1;4:not[%s];4:triangle;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, curry[same_color,x.o])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.exists(or[size3,circle], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:size3;4:circle;3:%s.s;2:x
'λx.apply(green,iota(filter(filter(filter(x.s, curry[same_shape,x.o]), green), and[not[and[curry[same_size,x.o],size1]],green])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:green;4:and[%s,%s];4:not[%s];4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:size1;4:green
'λx.forall(triangle,filter(filter(filter(filter(x.s, curry[same_shape,x.o]), curry[same_color,x.o]), not[blue]), circle))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:not[%s];4:blue;4:circle
'λx.apply(blue,iota(filter(filter(x.s, circle), curry[same_shape,x.o])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(size3,iota(filter(x.s, or[curry[size-lt,x.o],circle])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:size-lt;1:%s.o;2:x;4:circle
'λx.apply(and[size1,and[blue,size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:and[%s,%s];4:blue;4:size1;1:%s.o;2:x
'λx.exists(or[triangle,size2], filter(x.s, blue))'	0:exists(%s, %s);4:or[%s,%s];4:triangle;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[curry[size-lt,iota(filter(x.s, size1))],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size2;1:%s.o;2:x
'λx.apply(curry[same_size,iota(filter(filter(x.s, curry[same_color,x.o]), not[size3]))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:not[%s];4:size3;1:%s.o;2:x
'λx.apply(and[yellow,or[triangle,rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:or[%s,%s];4:triangle;4:rectangle;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, not[curry[same_size,x.o]]), blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:blue
'λx.apply(blue,iota(filter(filter(x.s, size1), or[or[blue,curry[same_size,x.o]],size3])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:or[%s,%s];4:or[%s,%s];4:blue;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:size3
'λx.apply(not[and[not[triangle],green]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:triangle;4:green;1:%s.o;2:x
'λx.apply(or[triangle,curry[same_color,iota(filter(filter(x.s, curry[same_shape,x.o]), or[curry[size-geq,x.o],not[not[size1]]]))]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:curry[%s,%s];5:size-geq;1:%s.o;2:x;4:not[%s];4:not[%s];4:size1;1:%s.o;2:x
'λx.empty(filter(filter(x.s, and[size1,curry[same_size,x.o]]), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:rectangle
'λx.apply(not[triangle],iota(filter(filter(filter(x.s, curry[same_size,x.o]), and[circle,blue]), blue)))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:and[%s,%s];4:circle;4:blue;4:blue
'λx.exists(or[curry[same_color,x.o],rectangle], filter(filter(x.s, curry[same_shape,x.o]), not[curry[same_size,x.o]]))'	0:exists(%s, %s);4:or[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, size2), not[triangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:not[%s];4:triangle
'λx.forall(or[curry[same_shape,x.o],size1],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size1;3:%s.s;2:x
'λx.exists(or[curry[same_shape,x.o],and[blue,rectangle]], filter(x.s, not[curry[same_size,x.o]]))'	0:exists(%s, %s);4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:blue;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.forall(blue,filter(filter(x.s, curry[same_color,x.o]), size3))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:size3
'λx.exists(not[curry[same_shape,x.o]], filter(x.s, blue))'	0:exists(%s, %s);4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[yellow,size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:size1;1:%s.o;2:x
'λx.apply(or[or[size3,blue],not[rectangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:size3;4:blue;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, triangle), not[size2])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:not[%s];4:size2
'λx.apply(circle,iota(filter(x.s, size1)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(curry[same_size,iota(filter(filter(filter(x.s, and[not[blue],size3]), size3), circle))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:blue;4:size3;4:size3;4:circle;1:%s.o;2:x
'λx.exists(blue, filter(filter(x.s, not[size1]), not[circle]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:not[%s];4:circle
'λx.forall(blue,filter(x.s, not[curry[same_size,x.o]]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.forall(and[curry[same_color,x.o],curry[same_color,x.o]],filter(x.s, curry[same_shape,x.o]))'	0:forall(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.exists(or[yellow,curry[same_size,x.o]], filter(x.s, size1))'	0:exists(%s, %s);4:or[%s,%s];4:yellow;4:curry[%s,%s];5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.empty(filter(x.s, and[and[size3,not[curry[same_shape,x.o]]],curry[size-lt,x.o]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:size3;4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:size-lt;1:%s.o;2:x
'λx.apply(and[or[triangle,blue],not[yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:triangle;4:blue;4:not[%s];4:yellow;1:%s.o;2:x
'λx.exists(not[size2], filter(x.s, curry[same_size,x.o]))'	0:exists(%s, %s);4:not[%s];4:size2;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.forall(curry[same_color,iota(filter(x.s, curry[same_shape,x.o]))],filter(x.s, curry[same_shape,x.o]))'	0:forall(%s,%s);4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(not[and[or[size3,and[rectangle,or[or[rectangle,size2],and[circle,and[size3,or[size2,curry[size-leq,iota(filter(x.s, curry[same_size,iota(filter(x.s, yellow))]))]]]]]]],or[circle,yellow]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:or[%s,%s];4:size3;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:or[%s,%s];4:rectangle;4:size2;4:and[%s,%s];4:circle;4:and[%s,%s];4:size3;4:or[%s,%s];4:size2;4:curry[%s,%s];5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:circle;4:yellow;1:%s.o;2:x
'λx.forall(blue,filter(filter(x.s, not[and[green,not[rectangle]]]), curry[same_color,x.o]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:green;4:not[%s];4:rectangle;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(or[rectangle,not[size1]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:not[%s];4:size1;1:%s.o;2:x
'λx.forall(rectangle,filter(filter(filter(x.s, curry[same_size,x.o]), circle), green))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:circle;4:green
'λx.apply(and[and[not[triangle],not[green]],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:triangle;4:not[%s];4:green;4:size1;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, curry[same_shape,x.o])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.empty(filter(filter(x.s, curry[same_shape,x.o]), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:yellow
'λx.apply(blue,iota(filter(filter(x.s, blue), circle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle
'λx.contains(iota(filter(filter(filter(x.s, or[rectangle,blue]), curry[same_shape,x.o]), size1)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size1;3:%s.s;2:x
'λx.apply(curry[same_shape,x.o],iota(filter(filter(x.s, or[size2,size1]), blue)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:size1;4:blue
'λx.empty(filter(filter(x.s, green), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1
'λx.exists(or[triangle,circle], filter(x.s, curry[same_shape,x.o]))'	0:exists(%s, %s);4:or[%s,%s];4:triangle;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(or[size3,rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:rectangle;1:%s.o;2:x
'λx.apply(and[curry[same_size,x.o],or[blue,size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:or[%s,%s];4:blue;4:size3;1:%s.o;2:x
'λx.apply(curry[same_shape,x.o],iota(filter(filter(x.s, curry[same_shape,x.o]), or[size1,curry[same_shape,x.o]])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:size1;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.contains(iota(filter(x.s, triangle)), filter(x.s, blue))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(or[not[yellow],size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:yellow;4:size3;1:%s.o;2:x
'λx.apply(curry[same_color,iota(filter(filter(x.s, size1), blue))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue;1:%s.o;2:x
'λx.apply(not[and[blue,curry[same_color,x.o]]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:blue;4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(not[and[curry[same_color,x.o],blue]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.forall(not[blue],x.s)'	0:forall(%s,%s);4:not[%s];4:blue;3:%s.s;2:x
'λx.forall(or[curry[same_color,x.o],or[and[or[curry[same_size,x.o],triangle],curry[same_size,x.o]],curry[same_shape,x.o]]],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:triangle;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(not[and[size3,or[rectangle,triangle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size3;4:or[%s,%s];4:rectangle;4:triangle;1:%s.o;2:x
'λx.apply(or[circle,or[and[triangle,blue],circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:or[%s,%s];4:and[%s,%s];4:triangle;4:blue;4:circle;1:%s.o;2:x
'λx.forall(not[size3],filter(x.s, rectangle))'	0:forall(%s,%s);4:not[%s];4:size3;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.exists(circle, filter(x.s, curry[same_color,x.o]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(not[and[size3,not[circle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size3;4:not[%s];4:circle;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, green), circle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:circle
'λx.apply(circle,iota(filter(filter(x.s, circle), curry[same_color,x.o])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.forall(curry[same_size,x.o],filter(x.s, and[size3,circle]))'	0:forall(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:circle
'λx.empty(filter(filter(filter(x.s, yellow), not[size3]), curry[same_shape,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:size3;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, blue), triangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle
'λx.empty(filter(filter(filter(x.s, not[blue]), rectangle), curry[same_color,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:rectangle;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.exists(curry[same_shape,x.o], filter(x.s, or[blue,size2]))'	0:exists(%s, %s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:size2
'λx.contains(iota(filter(filter(x.s, or[green,not[curry[same_color,x.o]]]), size2)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:size2;3:%s.s;2:x
'λx.apply(or[and[not[blue],rectangle],triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:not[%s];4:blue;4:rectangle;4:triangle;1:%s.o;2:x
'λx.apply(and[size1,curry[size-lt,x.o]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:curry[%s,%s];5:size-lt;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, or[curry[same_color,x.o],blue])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:blue
'λx.apply(or[size2,rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:rectangle;1:%s.o;2:x
'λx.apply(curry[same_shape,iota(filter(x.s, not[size1]))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;1:%s.o;2:x
'λx.apply(and[blue,and[blue,curry[same_color,iota(filter(x.s, blue))]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:blue;4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.apply(and[and[not[blue],rectangle],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:blue;4:rectangle;4:size2;1:%s.o;2:x
'λx.apply(size3,iota(filter(x.s, and[circle,curry[same_size,x.o]])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, or[size3,triangle]), blue))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:triangle;4:blue
'λx.forall(or[not[and[curry[same_shape,x.o],not[and[blue,triangle]]]],curry[same_color,x.o]],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:not[%s];4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:blue;4:triangle;4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:%s.s;2:x
'λx.exists(blue, filter(x.s, curry[size-geq,x.o]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-geq;1:%s.o;2:x
'λx.apply(and[curry[same_shape,iota(filter(x.s, curry[same_shape,x.o]))],or[or[triangle,circle],rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:or[%s,%s];4:triangle;4:circle;4:rectangle;1:%s.o;2:x
'λx.forall(size3,filter(x.s, and[or[and[not[green],curry[same_shape,x.o]],triangle],size1]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:not[%s];4:green;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:triangle;4:size1
'λx.exists(triangle, filter(x.s, and[or[size1,not[green]],triangle]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:size1;4:not[%s];4:green;4:triangle
'λx.exists(rectangle, filter(x.s, size1))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.empty(filter(filter(filter(x.s, or[curry[size-leq,x.o],triangle]), circle), or[yellow,size2]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:size-leq;1:%s.o;2:x;4:triangle;4:circle;4:or[%s,%s];4:yellow;4:size2
'λx.apply(or[curry[same_size,x.o],yellow],iota(filter(filter(x.s, curry[same_shape,x.o]), circle)))'	0:apply(%s,%s);4:or[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:circle
'λx.apply(or[curry[same_size,iota(filter(filter(filter(x.s, circle), triangle), green))],not[rectangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:triangle;4:green;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, curry[same_color,iota(filter(x.s, blue))]), blue))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue
'λx.apply(blue,iota(filter(x.s, and[triangle,size1])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:size1
'λx.apply(or[triangle,circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:circle;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, curry[same_shape,x.o]), blue), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue;4:circle
'λx.empty(filter(filter(x.s, curry[same_shape,x.o]), curry[size-lt,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:size-lt;1:%s.o;2:x
'λx.empty(filter(x.s, or[and[yellow,rectangle],and[size3,triangle]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:yellow;4:rectangle;4:and[%s,%s];4:size3;4:triangle
'λx.apply(curry[same_color,x.o],iota(filter(filter(x.s, circle), size3)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3
'λx.apply(not[blue],iota(filter(filter(filter(filter(x.s, size3), green), triangle), green)))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green;4:triangle;4:green
'λx.forall(curry[same_shape,x.o],filter(filter(x.s, size3), green))'	0:forall(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green
'λx.apply(circle,iota(filter(filter(x.s, curry[same_shape,x.o]), green)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:green
'λx.contains(iota(filter(x.s, size3)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;3:%s.s;2:x
'λx.forall(or[curry[size-gt,x.o],curry[same_size,x.o]],filter(x.s, or[size1,curry[same_shape,x.o]]))'	0:forall(%s,%s);4:or[%s,%s];4:curry[%s,%s];5:size-gt;1:%s.o;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.forall(curry[same_shape,iota(filter(x.s, curry[same_shape,x.o]))],filter(filter(x.s, triangle), rectangle))'	0:forall(%s,%s);4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle
'λx.apply(and[or[curry[same_shape,iota(filter(x.s, blue))],size1],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1;4:green;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, curry[same_shape,iota(filter(x.s, blue))]), curry[same_shape,x.o]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, blue), curry[size-gt,x.o])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:curry[%s,%s];5:size-gt;1:%s.o;2:x
'λx.apply(and[and[curry[same_shape,x.o],green],curry[same_shape,iota(filter(x.s, blue))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:green;4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.apply(or[and[green,yellow],blue],iota(filter(filter(x.s, or[green,curry[same_shape,x.o]]), blue)))'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:green;4:yellow;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue
'λx.apply(and[or[green,not[size2]],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:green;4:not[%s];4:size2;4:rectangle;1:%s.o;2:x
'λx.apply(size1,iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.forall(blue,filter(filter(x.s, size3), curry[same_shape,x.o]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(and[curry[same_shape,x.o],or[rectangle,blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:rectangle;4:blue;1:%s.o;2:x
'λx.empty(filter(filter(x.s, and[blue,not[size1]]), curry[same_color,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:not[%s];4:size1;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.forall(and[size1,size3],filter(filter(filter(x.s, curry[same_shape,x.o]), not[curry[same_color,x.o]]), not[and[circle,triangle]]))'	0:forall(%s,%s);4:and[%s,%s];4:size1;4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:circle;4:triangle
'λx.apply(and[not[green],yellow],iota(filter(filter(x.s, size3), yellow)))'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:green;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow
'λx.empty(filter(x.s, not[or[size2,circle]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:size2;4:circle
'λx.empty(filter(filter(x.s, and[not[size1],curry[same_color,x.o]]), or[blue,circle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:size1;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:or[%s,%s];4:blue;4:circle
'λx.empty(filter(filter(filter(x.s, circle), blue), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue;4:size1
'λx.empty(filter(filter(x.s, not[blue]), and[or[size3,curry[same_color,x.o]],rectangle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:and[%s,%s];4:or[%s,%s];4:size3;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:rectangle
'λx.apply(curry[same_color,iota(filter(filter(x.s, blue), circle))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, and[not[yellow],curry[same_shape,x.o]]), size1)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:yellow;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size1
'λx.forall(not[green],filter(x.s, circle))'	0:forall(%s,%s);4:not[%s];4:green;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[curry[same_shape,x.o],or[circle,blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:circle;4:blue;1:%s.o;2:x
'λx.empty(filter(filter(x.s, or[size3,rectangle]), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:rectangle;4:blue
'λx.forall(size1,filter(filter(filter(x.s, green), triangle), size2))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:triangle;4:size2
'λx.exists(circle, filter(x.s, size3))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(size1,iota(filter(filter(x.s, and[size1,circle]), not[green])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:circle;4:not[%s];4:green
'λx.apply(rectangle,iota(x.s))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.exists(triangle, filter(x.s, not[curry[same_size,x.o]]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.apply(triangle,iota(filter(x.s, size2)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(size3,iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.empty(filter(filter(x.s, not[curry[same_shape,x.o]]), not[curry[same_size,x.o]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.forall(size2,filter(x.s, curry[size-lt,x.o]))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-lt;1:%s.o;2:x
'λx.apply(or[and[not[blue],not[circle]],and[size1,size2]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:not[%s];4:blue;4:not[%s];4:circle;4:and[%s,%s];4:size1;4:size2;1:%s.o;2:x
'λx.empty(filter(filter(x.s, yellow), curry[same_color,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(x.s, curry[same_shape,iota(x.s)]), size2), green), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:iota(%s);3:%s.s;2:x;4:size2;4:green;4:size2
'λx.apply(or[blue,size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:size2;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(filter(x.s, and[size3,curry[same_shape,x.o]]), not[green]), rectangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:green;4:rectangle
'λx.forall(circle,filter(filter(x.s, rectangle), blue))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue
'λx.apply(and[or[triangle,size3],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:triangle;4:size3;4:blue;1:%s.o;2:x
'λx.exists(or[and[curry[same_color,x.o],green],blue], filter(x.s, curry[same_shape,x.o]))'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:green;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, blue), size2)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2
'λx.forall(not[circle],x.s)'	0:forall(%s,%s);4:not[%s];4:circle;3:%s.s;2:x
'λx.forall(curry[same_size,x.o],filter(x.s, not[triangle]))'	0:forall(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.forall(blue,filter(x.s, curry[same_size,iota(filter(x.s, triangle))]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.contains(iota(filter(x.s, curry[size-leq,x.o])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-leq;1:%s.o;2:x;3:%s.s;2:x
'λx.exists(and[size2,not[green]], filter(x.s, not[curry[same_shape,x.o]]))'	0:exists(%s, %s);4:and[%s,%s];4:size2;4:not[%s];4:green;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(or[yellow,not[circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:not[%s];4:circle;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, blue), curry[same_shape,iota(filter(x.s, curry[same_color,x.o]))])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(curry[same_color,x.o],iota(filter(filter(x.s, not[blue]), curry[same_shape,x.o])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.exists(curry[same_size,x.o], filter(x.s, not[and[curry[same_color,x.o],curry[same_shape,x.o]]]))'	0:exists(%s, %s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.forall(blue,filter(filter(x.s, curry[size-leq,x.o]), circle))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-leq;1:%s.o;2:x;4:circle
'λx.apply(circle,iota(filter(filter(filter(x.s, circle), or[triangle,curry[same_color,x.o]]), not[size3])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:or[%s,%s];4:triangle;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:not[%s];4:size3
'λx.apply(blue,iota(filter(x.s, and[circle,size3])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size3
'λx.apply(and[not[curry[size-lt,iota(filter(x.s, blue))]],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:curry[%s,%s];5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, green), curry[same_color,x.o])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(curry[same_shape,x.o],iota(filter(filter(x.s, triangle), curry[size-gt,x.o])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:curry[%s,%s];5:size-gt;1:%s.o;2:x
'λx.apply(not[and[not[or[rectangle,blue]],curry[same_color,x.o]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:or[%s,%s];4:rectangle;4:blue;4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(or[or[yellow,not[circle]],and[green,green]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:yellow;4:not[%s];4:circle;4:and[%s,%s];4:green;4:green;1:%s.o;2:x
'λx.forall(or[not[curry[same_shape,x.o]],curry[same_color,x.o]],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(not[and[green,triangle]],iota(filter(filter(x.s, and[or[yellow,size2],yellow]), curry[same_size,x.o])))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:green;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:yellow;4:size2;4:yellow;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.apply(and[size3,curry[same_color,x.o]],iota(filter(filter(x.s, blue), curry[same_size,x.o])))'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.forall(curry[same_shape,iota(filter(x.s, curry[same_shape,x.o]))],filter(filter(filter(x.s, rectangle), yellow), green))'	0:forall(%s,%s);4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:yellow;4:green
'λx.apply(or[green,not[or[blue,circle]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:not[%s];4:or[%s,%s];4:blue;4:circle;1:%s.o;2:x
'λx.exists(triangle, filter(x.s, not[green]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green
'λx.exists(curry[same_shape,x.o], filter(x.s, and[green,curry[same_shape,iota(filter(x.s, blue))]]))'	0:exists(%s, %s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(or[blue,or[size3,and[size2,and[yellow,and[circle,and[or[circle,curry[same_color,iota(filter(x.s, blue))]],green]]]]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:or[%s,%s];4:size3;4:and[%s,%s];4:size2;4:and[%s,%s];4:yellow;4:and[%s,%s];4:circle;4:and[%s,%s];4:or[%s,%s];4:circle;4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:green;1:%s.o;2:x
'λx.apply(and[curry[same_color,iota(filter(x.s, curry[same_shape,x.o]))],not[and[green,yellow]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:green;4:yellow;1:%s.o;2:x
'λx.exists(green, filter(x.s, or[rectangle,size1]))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:size1
'λx.apply(or[curry[same_color,x.o],yellow],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:or[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(curry[same_shape,iota(filter(filter(x.s, curry[same_shape,x.o]), blue))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue;1:%s.o;2:x
'λx.apply(not[and[size3,size2]],iota(filter(filter(x.s, or[size2,or[triangle,green]]), size1)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size3;4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:or[%s,%s];4:triangle;4:green;4:size1
'λx.empty(filter(x.s, circle))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.contains(x.o, filter(x.s, or[triangle,and[rectangle,not[blue]]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:and[%s,%s];4:rectangle;4:not[%s];4:blue
'λx.apply(curry[same_size,x.o],iota(filter(filter(x.s, yellow), or[curry[same_shape,x.o],size1])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size1
'λx.apply(and[and[curry[same_shape,iota(filter(x.s, blue))],curry[same_size,x.o]],not[blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:not[%s];4:blue;1:%s.o;2:x
'λx.apply(and[not[triangle],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:triangle;4:green;1:%s.o;2:x
'λx.exists(not[triangle], filter(x.s, blue))'	0:exists(%s, %s);4:not[%s];4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.empty(filter(filter(x.s, curry[same_shape,x.o]), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:rectangle
'λx.forall(not[triangle],filter(x.s, size3))'	0:forall(%s,%s);4:not[%s];4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.forall(blue,filter(filter(x.s, not[curry[same_color,x.o]]), curry[same_shape,x.o]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.forall(curry[size-geq,x.o],filter(x.s, not[curry[same_shape,x.o]]))'	0:forall(%s,%s);4:curry[%s,%s];5:size-geq;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(and[not[size2],not[green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size2;4:not[%s];4:green;1:%s.o;2:x
'λx.exists(triangle, filter(filter(x.s, curry[same_shape,x.o]), blue))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue
'λx.exists(not[and[green,size2]], filter(x.s, triangle))'	0:exists(%s, %s);4:not[%s];4:and[%s,%s];4:green;4:size2;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.forall(size2,filter(x.s, or[blue,triangle]))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:triangle
'λx.apply(and[triangle,curry[same_shape,iota(filter(x.s, blue))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:triangle;4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.apply(not[curry[same_size,x.o]],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.contains(x.o, filter(x.s, and[not[circle],not[blue]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:circle;4:not[%s];4:blue
'λx.apply(or[green,curry[same_shape,x.o]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.exists(not[blue], filter(x.s, triangle))'	0:exists(%s, %s);4:not[%s];4:blue;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.forall(not[circle],filter(x.s, curry[same_shape,x.o]))'	0:forall(%s,%s);4:not[%s];4:circle;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(and[not[rectangle],size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:rectangle;4:size3;1:%s.o;2:x
'λx.empty(filter(filter(x.s, not[curry[same_size,x.o]]), curry[same_shape,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.exists(size3, filter(x.s, or[yellow,circle]))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:circle
'λx.apply(rectangle,iota(filter(filter(x.s, size1), not[yellow])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:not[%s];4:yellow
'λx.exists(not[triangle], filter(x.s, or[blue,circle]))'	0:exists(%s, %s);4:not[%s];4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:circle
'λx.empty(filter(filter(x.s, curry[same_shape,x.o]), not[blue]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:blue
'λx.forall(size3,filter(filter(filter(filter(x.s, curry[same_shape,x.o]), circle), green), circle))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:circle;4:green;4:circle
'λx.exists(triangle, filter(x.s, yellow))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.exists(yellow, filter(filter(x.s, size2), rectangle))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle
'λx.exists(curry[same_shape,x.o], filter(filter(x.s, size3), blue))'	0:exists(%s, %s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue
'λx.forall(curry[size-geq,x.o],filter(x.s, curry[same_shape,x.o]))'	0:forall(%s,%s);4:curry[%s,%s];5:size-geq;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(x.s, not[green]), size2)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:size2
'λx.apply(not[size2],iota(filter(filter(x.s, curry[same_color,x.o]), blue)))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:blue
'λx.apply(size1,iota(filter(filter(filter(x.s, curry[same_shape,x.o]), blue), size1)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue;4:size1
'λx.apply(size1,iota(filter(filter(x.s, curry[same_color,x.o]), triangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:triangle
'λx.apply(triangle,iota(filter(x.s, and[size1,or[size2,triangle]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:or[%s,%s];4:size2;4:triangle
'λx.apply(blue,iota(filter(filter(x.s, size1), triangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle
'λx.apply(or[and[circle,circle],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:circle;4:circle;4:blue;1:%s.o;2:x
'λx.forall(blue,filter(filter(filter(x.s, or[curry[same_shape,x.o],blue]), circle), curry[same_color,x.o]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue;4:circle;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.forall(or[circle,and[not[curry[same_color,x.o]],curry[same_shape,x.o]]],filter(x.s, blue))'	0:forall(%s,%s);4:or[%s,%s];4:circle;4:and[%s,%s];4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(or[circle,or[and[size3,triangle],blue]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:or[%s,%s];4:and[%s,%s];4:size3;4:triangle;4:blue;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, circle), curry[same_size,x.o])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(x.s, size1), blue), rectangle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue;4:rectangle;3:%s.s;2:x
'λx.empty(filter(filter(x.s, green), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:triangle
'λx.apply(not[triangle],iota(filter(filter(x.s, yellow), curry[same_shape,x.o])))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(or[not[and[blue,circle]],rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:and[%s,%s];4:blue;4:circle;4:rectangle;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, blue), curry[same_shape,x.o])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(curry[same_shape,iota(filter(filter(x.s, size1), green))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, blue), curry[same_color,x.o]), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:size2
'λx.empty(filter(filter(filter(x.s, yellow), size1), curry[same_shape,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(or[not[blue],circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:blue;4:circle;1:%s.o;2:x
'λx.exists(not[size3], filter(x.s, curry[same_shape,x.o]))'	0:exists(%s, %s);4:not[%s];4:size3;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(not[size1],x.o)'	0:apply(%s,%s);4:not[%s];4:size1;1:%s.o;2:x
'λx.apply(or[and[and[yellow,triangle],size2],size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:triangle;4:size2;4:size1;1:%s.o;2:x
'λx.empty(filter(x.s, or[and[curry[same_shape,x.o],and[yellow,or[yellow,rectangle]]],and[blue,yellow]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:yellow;4:or[%s,%s];4:yellow;4:rectangle;4:and[%s,%s];4:blue;4:yellow
'λx.empty(filter(filter(filter(filter(x.s, circle), not[blue]), curry[same_shape,x.o]), curry[same_color,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(curry[same_shape,iota(filter(x.s, blue))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, curry[same_size,x.o]), blue)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:blue
'λx.exists(rectangle, filter(x.s, green))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(blue,iota(filter(filter(x.s, curry[same_shape,x.o]), size2)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size2
'λx.apply(not[and[blue,not[size1]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:blue;4:not[%s];4:size1;1:%s.o;2:x
'λx.forall(or[not[curry[same_shape,x.o]],curry[same_size,x.o]],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(and[size1,not[circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:not[%s];4:circle;1:%s.o;2:x
'λx.exists(not[triangle], x.s)'	0:exists(%s, %s);4:not[%s];4:triangle;3:%s.s;2:x
'λx.forall(size3,filter(filter(filter(x.s, curry[same_shape,x.o]), yellow), size2))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:yellow;4:size2
'λx.apply(or[circle,and[rectangle,yellow]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:and[%s,%s];4:rectangle;4:yellow;1:%s.o;2:x
'λx.forall(curry[same_color,x.o],filter(x.s, curry[same_color,iota(filter(x.s, curry[same_shape,x.o]))]))'	0:forall(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.exists(or[circle,blue], filter(x.s, or[yellow,not[curry[same_shape,x.o]]]))'	0:exists(%s, %s);4:or[%s,%s];4:circle;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.forall(curry[same_color,x.o],filter(x.s, curry[same_shape,x.o]))'	0:forall(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.contains(iota(filter(x.s, and[size1,rectangle])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:rectangle;3:%s.s;2:x
'λx.apply(and[curry[same_color,x.o],not[and[circle,blue]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:circle;4:blue;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, or[blue,not[triangle]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:not[%s];4:triangle
'λx.exists(circle, filter(x.s, and[curry[same_shape,x.o],green]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:green
'λx.forall(not[green],filter(filter(x.s, triangle), size3))'	0:forall(%s,%s);4:not[%s];4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3
'λx.contains(x.o, filter(x.s, or[blue,size3]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:size3
'λx.forall(blue,filter(filter(x.s, curry[size-geq,x.o]), circle))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-geq;1:%s.o;2:x;4:circle
'λx.empty(filter(filter(x.s, and[curry[size-geq,iota(filter(filter(x.s, curry[same_color,x.o]), not[not[and[curry[same_shape,x.o],blue]]]))],size2]), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:not[%s];4:not[%s];4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue;4:size2;4:size3
'λx.apply(blue,iota(filter(filter(x.s, size2), blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue
'λx.contains(iota(filter(x.s, curry[same_shape,x.o])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.forall(and[circle,size2],filter(filter(filter(x.s, not[curry[same_color,x.o]]), curry[same_shape,x.o]), or[size1,not[triangle]]))'	0:forall(%s,%s);4:and[%s,%s];4:circle;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:size1;4:not[%s];4:triangle
'λx.exists(not[and[triangle,green]], filter(filter(x.s, or[curry[same_shape,x.o],curry[same_shape,x.o]]), or[circle,blue]))'	0:exists(%s, %s);4:not[%s];4:and[%s,%s];4:triangle;4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:circle;4:blue
'λx.forall(or[triangle,not[triangle]],filter(filter(x.s, not[not[curry[same_size,iota(filter(x.s, curry[same_shape,x.o]))]]]), rectangle))'	0:forall(%s,%s);4:or[%s,%s];4:triangle;4:not[%s];4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:rectangle
'λx.contains(x.o, filter(filter(x.s, rectangle), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green
'λx.apply(or[or[blue,and[size3,triangle]],circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:blue;4:and[%s,%s];4:size3;4:triangle;4:circle;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, and[circle,blue])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:blue
'λx.apply(and[not[circle],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:circle;4:yellow;1:%s.o;2:x
'λx.exists(blue, filter(x.s, or[curry[size-lt,x.o],size1]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:size-lt;1:%s.o;2:x;4:size1
'λx.apply(and[or[not[blue],circle],not[circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:not[%s];4:blue;4:circle;4:not[%s];4:circle;1:%s.o;2:x
'λx.apply(or[and[blue,triangle],curry[same_color,iota(filter(filter(x.s, rectangle), size1))]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:blue;4:triangle;4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1;1:%s.o;2:x
'λx.exists(circle, filter(filter(x.s, not[green]), and[size3,curry[same_shape,x.o]]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:and[%s,%s];4:size3;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(or[curry[same_shape,x.o],triangle],iota(filter(filter(x.s, circle), size1)))'	0:apply(%s,%s);4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1
'λx.forall(blue,filter(x.s, and[and[curry[same_color,x.o],circle],curry[same_shape,x.o]]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:circle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(not[and[not[size2],and[not[circle],blue]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:size2;4:and[%s,%s];4:not[%s];4:circle;4:blue;1:%s.o;2:x
'λx.forall(triangle,filter(x.s, circle))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.exists(not[size2], filter(filter(x.s, not[curry[same_color,x.o]]), circle))'	0:exists(%s, %s);4:not[%s];4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:circle
'λx.forall(or[not[and[or[circle,size3],or[size3,and[green,circle]]]],or[or[curry[same_size,x.o],size1],curry[same_shape,x.o]]],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:not[%s];4:and[%s,%s];4:or[%s,%s];4:circle;4:size3;4:or[%s,%s];4:size3;4:and[%s,%s];4:green;4:circle;4:or[%s,%s];4:or[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:size1;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(and[curry[size-lt,x.o],curry[same_shape,x.o]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:size-lt;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(curry[size-gt,x.o],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:curry[%s,%s];5:size-gt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.contains(x.o, filter(filter(x.s, triangle), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green
'λx.apply(not[and[not[size1],blue]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:size1;4:blue;1:%s.o;2:x
'λx.exists(curry[same_size,iota(filter(x.s, curry[same_shape,x.o]))], filter(x.s, not[circle]))'	0:exists(%s, %s);4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.apply(size1,iota(filter(x.s, blue)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(size3,iota(filter(filter(x.s, triangle), curry[same_color,x.o])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.empty(filter(filter(x.s, size2), and[yellow,curry[same_shape,x.o]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:yellow;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.contains(iota(filter(filter(filter(x.s, or[curry[same_shape,x.o],yellow]), blue), not[green])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:yellow;4:blue;4:not[%s];4:green;3:%s.s;2:x
'λx.forall(curry[same_shape,iota(filter(x.s, curry[same_shape,x.o]))],filter(filter(x.s, rectangle), circle))'	0:forall(%s,%s);4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle
'λx.forall(curry[same_shape,x.o],filter(filter(x.s, green), not[circle]))'	0:forall(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:circle
'λx.forall(curry[size-leq,iota(filter(filter(x.s, size1), or[and[curry[same_color,x.o],triangle],rectangle]))],x.s)'	0:forall(%s,%s);4:curry[%s,%s];5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:or[%s,%s];4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:triangle;4:rectangle;3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(filter(x.s, curry[same_color,x.o]), blue), circle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:blue;4:circle
'λx.forall(rectangle,filter(filter(x.s, circle), curry[same_shape,x.o]))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(not[curry[same_size,x.o]],iota(filter(filter(x.s, size1), blue)))'	0:apply(%s,%s);4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue
'λx.contains(x.o, filter(x.s, or[blue,not[rectangle]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:not[%s];4:rectangle
'λx.apply(or[curry[same_color,x.o],size2],iota(filter(x.s, curry[size-geq,x.o])))'	0:apply(%s,%s);4:or[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-geq;1:%s.o;2:x
'λx.apply(or[not[size1],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:size1;4:blue;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(x.s, circle), curry[same_size,x.o])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.apply(curry[same_size,x.o],iota(filter(filter(x.s, blue), size3)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3
'λx.exists(not[curry[same_shape,x.o]], filter(x.s, or[curry[same_shape,x.o],curry[same_size,x.o]]))'	0:exists(%s, %s);4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.apply(not[circle],iota(filter(x.s, green)))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.empty(filter(filter(x.s, rectangle), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green
'λx.apply(not[curry[same_shape,x.o]],x.o)'	0:apply(%s,%s);4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.contains(iota(filter(x.s, rectangle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, rectangle), size1)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1
'λx.apply(not[and[triangle,blue]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:triangle;4:blue;1:%s.o;2:x
'λx.apply(and[size2,not[blue]],iota(filter(filter(x.s, triangle), curry[same_color,x.o])))'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, curry[same_size,x.o])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.empty(filter(x.s, and[curry[same_color,x.o],yellow]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:yellow
'λx.apply(or[and[curry[same_size,x.o],size1],not[not[not[blue]]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:size1;4:not[%s];4:not[%s];4:not[%s];4:blue;1:%s.o;2:x
'λx.exists(triangle, filter(x.s, not[yellow]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow
'λx.apply(and[curry[same_shape,x.o],blue],iota(filter(filter(x.s, not[or[and[triangle,size2],green]]), blue)))'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:and[%s,%s];4:triangle;4:size2;4:green;4:blue
'λx.forall(or[and[size3,size1],or[and[curry[size-leq,x.o],not[size3]],size3]],filter(x.s, curry[same_shape,x.o]))'	0:forall(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size3;4:size1;4:or[%s,%s];4:and[%s,%s];4:curry[%s,%s];5:size-leq;1:%s.o;2:x;4:not[%s];4:size3;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, not[green])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green
'λx.apply(or[not[triangle],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:triangle;4:blue;1:%s.o;2:x
'λx.apply(or[blue,curry[same_shape,x.o]],iota(filter(filter(x.s, not[curry[same_size,x.o]]), rectangle)))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:rectangle
'λx.exists(size1, filter(x.s, not[circle]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.exists(curry[same_shape,x.o], filter(filter(x.s, not[size3]), not[blue]))'	0:exists(%s, %s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;4:not[%s];4:blue
'λx.apply(or[size3,triangle],iota(filter(x.s, green)))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.exists(rectangle, filter(x.s, or[yellow,size1]))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:size1
'λx.exists(curry[same_color,x.o], filter(filter(x.s, curry[same_size,x.o]), and[size1,blue]))'	0:exists(%s, %s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:and[%s,%s];4:size1;4:blue
'λx.empty(filter(filter(x.s, not[size2]), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:green
'λx.apply(curry[same_shape,x.o],iota(filter(filter(x.s, or[blue,curry[same_size,x.o]]), size3)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:size3
'λx.apply(and[rectangle,not[size3]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:not[%s];4:size3;1:%s.o;2:x
'λx.apply(or[not[yellow],not[size1]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:yellow;4:not[%s];4:size1;1:%s.o;2:x
'λx.apply(or[size3,circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:circle;1:%s.o;2:x
'λx.apply(and[or[size2,triangle],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size2;4:triangle;4:blue;1:%s.o;2:x
'λx.apply(curry[same_size,x.o],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.empty(filter(filter(filter(x.s, circle), curry[same_color,x.o]), not[blue]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:not[%s];4:blue
'λx.empty(filter(filter(x.s, curry[same_shape,x.o]), or[and[triangle,rectangle],or[and[yellow,size1],not[curry[same_size,x.o]]]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:and[%s,%s];4:triangle;4:rectangle;4:or[%s,%s];4:and[%s,%s];4:yellow;4:size1;4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, curry[same_shape,x.o]), and[size2,blue])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:size2;4:blue
'λx.apply(curry[same_shape,iota(filter(filter(x.s, size2), not[green]))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:not[%s];4:green;1:%s.o;2:x
'λx.apply(not[and[not[blue],size1]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:blue;4:size1;1:%s.o;2:x
'λx.forall(yellow,x.s)'	0:forall(%s,%s);4:yellow;3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(filter(x.s, not[curry[same_size,x.o]]), curry[same_shape,x.o]), size3)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size3
'λx.apply(or[or[blue,rectangle],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:blue;4:rectangle;4:blue;1:%s.o;2:x
'λx.apply(not[and[rectangle,or[yellow,green]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:rectangle;4:or[%s,%s];4:yellow;4:green;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(x.s, yellow), curry[same_size,x.o])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.contains(iota(filter(x.s, yellow)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;3:%s.s;2:x
'λx.contains(iota(filter(filter(x.s, yellow), size3)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size3;3:%s.s;2:x
'λx.apply(size3,iota(filter(filter(x.s, yellow), size3)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size3
'λx.apply(blue,iota(filter(filter(filter(x.s, blue), curry[same_shape,x.o]), size3)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size3
'λx.apply(size2,iota(filter(x.s, and[or[blue,circle],triangle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:blue;4:circle;4:triangle
'λx.apply(yellow,iota(filter(filter(filter(x.s, and[not[size3],circle]), circle), curry[same_shape,x.o])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:size3;4:circle;4:circle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(curry[size-geq,iota(filter(x.s, triangle))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(filter(x.s, curry[same_color,x.o]), circle), curry[same_size,x.o])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:circle;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.forall(green,filter(filter(x.s, and[yellow,curry[same_color,x.o]]), yellow))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:yellow
'λx.apply(curry[same_color,iota(x.s)],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(or[yellow,or[green,or[circle,green]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:or[%s,%s];4:green;4:or[%s,%s];4:circle;4:green;1:%s.o;2:x
'λx.apply(not[size3],iota(filter(filter(x.s, green), not[rectangle])))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:rectangle
'λx.exists(or[yellow,curry[same_shape,x.o]], filter(x.s, not[yellow]))'	0:exists(%s, %s);4:or[%s,%s];4:yellow;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow
'λx.exists(circle, filter(x.s, and[circle,curry[same_color,iota(x.s)]]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:curry[%s,%s];5:same_color;1:iota(%s);3:%s.s;2:x
'λx.forall(blue,filter(filter(x.s, circle), curry[same_shape,x.o]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(or[curry[same_color,x.o],curry[same_size,x.o]],iota(filter(x.s, not[curry[same_shape,x.o]])))'	0:apply(%s,%s);4:or[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, not[size1])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1
'λx.apply(or[or[circle,and[triangle,green]],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:circle;4:and[%s,%s];4:triangle;4:green;4:blue;1:%s.o;2:x
'λx.exists(or[blue,and[rectangle,yellow]], filter(x.s, curry[same_shape,x.o]))'	0:exists(%s, %s);4:or[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(curry[same_color,x.o],iota(filter(x.s, or[circle,blue])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:blue
'λx.forall(green,filter(filter(filter(x.s, curry[same_shape,x.o]), or[green,not[and[curry[same_color,x.o],size1]]]), blue))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:green;4:not[%s];4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:size1;4:blue
'λx.empty(filter(filter(filter(x.s, yellow), not[circle]), or[curry[same_shape,x.o],size3]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:not[%s];4:circle;4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size3
'λx.exists(curry[size-gt,x.o], filter(x.s, blue))'	0:exists(%s, %s);4:curry[%s,%s];5:size-gt;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.forall(not[not[or[curry[size-gt,x.o],rectangle]]],filter(filter(x.s, size1), yellow))'	0:forall(%s,%s);4:not[%s];4:not[%s];4:or[%s,%s];4:curry[%s,%s];5:size-gt;1:%s.o;2:x;4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow
'λx.apply(or[or[circle,green],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:circle;4:green;4:blue;1:%s.o;2:x
'λx.apply(size3,iota(filter(x.s, and[circle,size3])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:size3
'λx.empty(filter(x.s, and[green,curry[same_shape,x.o]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(curry[same_color,x.o],iota(filter(filter(filter(x.s, not[and[yellow,blue]]), or[triangle,circle]), blue)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:yellow;4:blue;4:or[%s,%s];4:triangle;4:circle;4:blue
'λx.apply(not[and[circle,yellow]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:circle;4:yellow;1:%s.o;2:x
'λx.apply(or[green,or[blue,not[size1]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:or[%s,%s];4:blue;4:not[%s];4:size1;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, triangle), curry[size-gt,x.o])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:curry[%s,%s];5:size-gt;1:%s.o;2:x
'λx.forall(blue,filter(x.s, rectangle))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.empty(filter(x.s, and[and[curry[same_shape,x.o],or[yellow,and[green,rectangle]]],or[green,size2]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:yellow;4:and[%s,%s];4:green;4:rectangle;4:or[%s,%s];4:green;4:size2
'λx.exists(rectangle, filter(filter(x.s, and[or[size1,blue],rectangle]), rectangle))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:size1;4:blue;4:rectangle;4:rectangle
'λx.forall(curry[same_shape,x.o],filter(filter(x.s, size3), rectangle))'	0:forall(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle
'λx.apply(blue,x.o)'	0:apply(%s,%s);4:blue;1:%s.o;2:x
'λx.apply(or[blue,not[triangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:not[%s];4:triangle;1:%s.o;2:x
'λx.apply(not[or[size1,rectangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:size1;4:rectangle;1:%s.o;2:x
'λx.apply(or[triangle,rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:rectangle;1:%s.o;2:x
'λx.forall(or[green,yellow],filter(filter(x.s, and[circle,curry[same_color,x.o]]), curry[same_shape,x.o]))'	0:forall(%s,%s);4:or[%s,%s];4:green;4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.exists(and[curry[size-geq,x.o],or[and[curry[same_shape,x.o],not[curry[same_color,x.o]]],and[blue,rectangle]]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:curry[%s,%s];5:size-geq;1:%s.o;2:x;4:or[%s,%s];4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:and[%s,%s];4:blue;4:rectangle;3:%s.s;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, yellow), rectangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:rectangle
'λx.apply(or[triangle,green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:green;1:%s.o;2:x
'λx.apply(and[circle,blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:blue;1:%s.o;2:x
'λx.apply(and[not[green],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:green;4:size1;1:%s.o;2:x
'λx.exists(triangle, filter(x.s, curry[same_size,iota(filter(filter(x.s, rectangle), yellow))]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:yellow
'λx.apply(or[triangle,and[rectangle,or[yellow,green]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:and[%s,%s];4:rectangle;4:or[%s,%s];4:yellow;4:green;1:%s.o;2:x
'λx.forall(not[size1],filter(x.s, circle))'	0:forall(%s,%s);4:not[%s];4:size1;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(or[or[circle,triangle],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:circle;4:triangle;4:blue;1:%s.o;2:x
'λx.forall(size3,filter(filter(x.s, curry[same_color,x.o]), yellow))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:yellow
'λx.apply(size2,iota(filter(filter(x.s, and[size2,not[curry[same_shape,x.o]]]), blue)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue
'λx.apply(or[circle,not[blue]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:not[%s];4:blue;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, and[blue,size3])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size3
'λx.contains(iota(filter(filter(x.s, size1), curry[same_shape,x.o])), filter(x.s, blue))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(or[size1,or[green,circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:or[%s,%s];4:green;4:circle;1:%s.o;2:x
'λx.apply(or[size3,rectangle],iota(filter(x.s, curry[size-lt,x.o])))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-lt;1:%s.o;2:x
'λx.apply(not[blue],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.empty(filter(filter(filter(x.s, curry[same_color,x.o]), rectangle), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:rectangle;4:blue
'λx.apply(not[and[and[not[blue],not[size3]],curry[same_size,x.o]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:blue;4:not[%s];4:size3;4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[curry[same_color,x.o],not[and[not[blue],circle]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:not[%s];4:blue;4:circle;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(filter(x.s, blue), not[curry[same_size,x.o]]), curry[same_shape,x.o])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.empty(filter(filter(x.s, not[or[size3,green]]), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:size3;4:green;4:rectangle
'λx.empty(filter(filter(x.s, rectangle), not[size2]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:not[%s];4:size2
'λx.apply(or[not[and[size1,rectangle]],size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:and[%s,%s];4:size1;4:rectangle;4:size2;1:%s.o;2:x
'λx.exists(curry[same_size,x.o], filter(x.s, or[blue,yellow]))'	0:exists(%s, %s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:yellow
'λx.apply(circle,iota(filter(filter(x.s, curry[same_shape,x.o]), size3)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size3
'λx.exists(yellow, filter(x.s, rectangle))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[curry[same_shape,iota(filter(x.s, blue))],curry[same_shape,x.o]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.exists(green, filter(x.s, or[size2,size1]))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:size1
'λx.contains(iota(filter(x.s, or[and[circle,rectangle],curry[same_shape,x.o]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:circle;4:rectangle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(blue,iota(filter(filter(x.s, not[and[blue,size1]]), curry[same_shape,x.o])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:blue;4:size1;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.contains(iota(filter(x.s, curry[same_color,x.o])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(and[or[yellow,or[rectangle,or[green,triangle]]],curry[same_shape,x.o]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:yellow;4:or[%s,%s];4:rectangle;4:or[%s,%s];4:green;4:triangle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, not[and[circle,size3]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:circle;4:size3
'λx.exists(not[and[and[size3,and[triangle,curry[same_size,iota(filter(x.s, size1))]]],circle]], x.s)'	0:exists(%s, %s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:size3;4:and[%s,%s];4:triangle;4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:circle;3:%s.s;2:x
'λx.apply(not[and[circle,size1]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:circle;4:size1;1:%s.o;2:x
'λx.apply(not[or[yellow,size1]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:yellow;4:size1;1:%s.o;2:x
'λx.forall(curry[same_color,x.o],filter(filter(x.s, curry[same_shape,x.o]), or[curry[same_shape,x.o],size2]))'	0:forall(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size2
'λx.apply(or[or[triangle,rectangle],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:triangle;4:rectangle;4:blue;1:%s.o;2:x
'λx.empty(filter(filter(x.s, or[or[size3,circle],size2]), and[blue,curry[same_shape,x.o]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:size3;4:circle;4:size2;4:and[%s,%s];4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.forall(curry[same_color,x.o],filter(x.s, and[or[blue,curry[same_shape,x.o]],not[blue]]))'	0:forall(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:blue
'λx.apply(blue,iota(filter(x.s, and[curry[same_color,x.o],not[green]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:not[%s];4:green
'λx.forall(size2,x.s)'	0:forall(%s,%s);4:size2;3:%s.s;2:x
'λx.exists(not[size3], x.s)'	0:exists(%s, %s);4:not[%s];4:size3;3:%s.s;2:x
'λx.exists(not[size1], filter(x.s, blue))'	0:exists(%s, %s);4:not[%s];4:size1;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.forall(circle,filter(filter(x.s, blue), or[not[curry[same_shape,iota(filter(x.s, blue))]],yellow]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:not[%s];4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow
'λx.apply(or[and[curry[same_color,x.o],or[circle,blue]],rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:or[%s,%s];4:circle;4:blue;4:rectangle;1:%s.o;2:x
'λx.forall(blue,filter(filter(filter(x.s, and[curry[same_color,x.o],size1]), curry[same_shape,x.o]), size1))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:size1;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size1
'λx.empty(filter(filter(x.s, curry[size-gt,x.o]), curry[same_shape,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-gt;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(not[or[and[triangle,yellow],and[green,triangle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:and[%s,%s];4:triangle;4:yellow;4:and[%s,%s];4:green;4:triangle;1:%s.o;2:x
'λx.forall(and[rectangle,not[size3]],filter(x.s, and[not[not[curry[same_shape,x.o]]],green]))'	0:forall(%s,%s);4:and[%s,%s];4:rectangle;4:not[%s];4:size3;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:green
'λx.apply(not[and[curry[same_size,x.o],size1]],iota(filter(x.s, green)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[curry[same_shape,x.o],curry[same_shape,x.o]],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(not[yellow],x.o)'	0:apply(%s,%s);4:not[%s];4:yellow;1:%s.o;2:x
'λx.forall(or[yellow,and[triangle,curry[same_shape,x.o]]],filter(x.s, not[circle]))'	0:forall(%s,%s);4:or[%s,%s];4:yellow;4:and[%s,%s];4:triangle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.forall(circle,filter(filter(filter(x.s, size2), green), curry[same_shape,x.o]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(x.s, size1)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(curry[same_color,x.o],iota(filter(filter(x.s, curry[size-leq,x.o]), blue)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-leq;1:%s.o;2:x;4:blue
'λx.apply(and[not[curry[same_size,iota(filter(x.s, size3))]],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:size2;1:%s.o;2:x
'λx.apply(or[rectangle,or[triangle,size2]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:or[%s,%s];4:triangle;4:size2;1:%s.o;2:x
'λx.exists(not[yellow], filter(x.s, triangle))'	0:exists(%s, %s);4:not[%s];4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.exists(rectangle, filter(x.s, not[green]))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green
'λx.forall(blue,filter(x.s, size3))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.exists(rectangle, filter(x.s, and[curry[same_size,x.o],size1]))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:size1
'λx.contains(x.o, filter(x.s, or[curry[same_shape,iota(filter(filter(x.s, size1), blue))],rectangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue;4:rectangle
'λx.apply(circle,iota(filter(filter(x.s, circle), curry[same_size,x.o])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.apply(and[and[not[size2],not[size2]],curry[same_shape,iota(filter(x.s, blue))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:size2;4:not[%s];4:size2;4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, blue), triangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle
'λx.empty(filter(filter(x.s, and[not[green],triangle]), or[and[triangle,curry[same_shape,x.o]],and[blue,size3]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:green;4:triangle;4:or[%s,%s];4:and[%s,%s];4:triangle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:blue;4:size3
'λx.apply(size2,iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(or[circle,rectangle],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(blue,iota(filter(filter(x.s, curry[size-leq,x.o]), triangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-leq;1:%s.o;2:x;4:triangle
'λx.apply(triangle,iota(filter(x.s, and[or[or[green,size1],curry[size-gt,x.o]],triangle])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:green;4:size1;4:curry[%s,%s];5:size-gt;1:%s.o;2:x;4:triangle
'λx.empty(filter(filter(filter(x.s, not[curry[size-geq,x.o]]), size2), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:size-geq;1:%s.o;2:x;4:size2;4:rectangle
'λx.apply(curry[same_color,iota(filter(filter(x.s, size2), or[size3,triangle]))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:size3;4:triangle;1:%s.o;2:x
'λx.apply(circle,iota(x.s))'	0:apply(%s,%s);4:circle;1:iota(%s);3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, curry[same_shape,x.o]), not[size1]), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:size1;4:rectangle
'λx.apply(size1,iota(filter(filter(x.s, size1), blue)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue
'λx.exists(or[and[curry[same_shape,x.o],not[triangle]],and[or[green,and[triangle,curry[same_color,x.o]]],blue]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:triangle;4:and[%s,%s];4:or[%s,%s];4:green;4:and[%s,%s];4:triangle;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:blue;3:%s.s;2:x
'λx.apply(curry[same_size,x.o],iota(filter(x.s, or[curry[same_shape,x.o],and[circle,triangle]])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:circle;4:triangle
'λx.apply(not[size1],iota(filter(filter(x.s, triangle), green)))'	0:apply(%s,%s);4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green
'λx.apply(rectangle,iota(filter(filter(x.s, blue), size2)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2
'λx.apply(triangle,iota(x.s))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:%s.s;2:x
'λx.forall(blue,filter(x.s, and[not[curry[same_shape,x.o]],curry[size-lt,x.o]]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:size-lt;1:%s.o;2:x
'λx.apply(or[and[blue,blue],not[triangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:blue;4:blue;4:not[%s];4:triangle;1:%s.o;2:x
'λx.apply(or[or[circle,and[size3,triangle]],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:circle;4:and[%s,%s];4:size3;4:triangle;4:blue;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, size3), curry[same_shape,x.o])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.empty(filter(x.s, and[not[size2],rectangle]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:size2;4:rectangle
'λx.apply(rectangle,iota(filter(x.s, blue)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[curry[same_color,x.o],curry[same_color,x.o]],iota(filter(x.s, curry[size-geq,x.o])))'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-geq;1:%s.o;2:x
'λx.apply(curry[size-lt,iota(filter(filter(x.s, blue), size1))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(x.s, and[curry[same_shape,iota(filter(x.s, curry[same_shape,x.o]))],blue]), yellow), rectangle), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue;4:yellow;4:rectangle;4:size3
'λx.forall(blue,filter(filter(x.s, curry[same_shape,x.o]), rectangle))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:rectangle
'λx.forall(curry[same_shape,x.o],filter(filter(filter(x.s, or[rectangle,triangle]), curry[same_color,x.o]), green))'	0:forall(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:triangle;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:green
'λx.empty(filter(x.s, and[or[not[curry[same_size,x.o]],curry[size-gt,x.o]],curry[same_shape,x.o]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:curry[%s,%s];5:size-gt;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.exists(or[or[rectangle,blue],circle], filter(filter(x.s, curry[same_color,x.o]), curry[same_shape,x.o]))'	0:exists(%s, %s);4:or[%s,%s];4:or[%s,%s];4:rectangle;4:blue;4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(size1,iota(filter(x.s, and[yellow,and[not[curry[same_size,x.o]],rectangle]])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:and[%s,%s];4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:rectangle
'λx.contains(x.o, filter(x.s, or[not[triangle],blue]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:triangle;4:blue
'λx.apply(triangle,iota(filter(x.s, and[triangle,or[not[curry[same_size,x.o]],or[blue,yellow]]])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:or[%s,%s];4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:or[%s,%s];4:blue;4:yellow
'λx.contains(iota(filter(filter(x.s, not[not[curry[size-lt,x.o]]]), circle)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:curry[%s,%s];5:size-lt;1:%s.o;2:x;4:circle;3:%s.s;2:x
'λx.forall(blue,filter(filter(x.s, curry[same_size,x.o]), circle))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:circle
'λx.apply(curry[same_size,x.o],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.contains(iota(filter(filter(x.s, triangle), yellow)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:yellow;3:%s.s;2:x
'λx.exists(or[size1,blue], filter(x.s, rectangle))'	0:exists(%s, %s);4:or[%s,%s];4:size1;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.forall(not[curry[size-gt,x.o]],filter(x.s, curry[same_shape,x.o]))'	0:forall(%s,%s);4:not[%s];4:curry[%s,%s];5:size-gt;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(filter(filter(x.s, blue), blue), size3), curry[same_shape,x.o])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue;4:size3;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.exists(or[green,and[triangle,curry[same_color,x.o]]], filter(x.s, or[blue,size2]))'	0:exists(%s, %s);4:or[%s,%s];4:green;4:and[%s,%s];4:triangle;4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:size2
'λx.apply(and[not[and[and[circle,or[curry[same_size,iota(filter(x.s, size3))],yellow]],size1]],size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:or[%s,%s];4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow;4:size1;4:size2;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(filter(x.s, curry[size-gt,x.o]), size1), green)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-gt;1:%s.o;2:x;4:size1;4:green
'λx.forall(or[curry[same_shape,x.o],triangle],filter(x.s, blue))'	0:forall(%s,%s);4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.empty(filter(filter(filter(x.s, size2), curry[same_shape,x.o]), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:yellow
'λx.apply(and[green,size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:size2;1:%s.o;2:x
'λx.apply(curry[same_color,x.o],iota(filter(x.s, not[size2])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2
'λx.apply(not[size2],x.o)'	0:apply(%s,%s);4:not[%s];4:size2;1:%s.o;2:x
'λx.apply(or[blue,curry[same_color,iota(filter(filter(x.s, blue), blue))]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(x.s, curry[same_color,x.o]), blue), circle), curry[same_shape,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:blue;4:circle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(or[size1,not[and[blue,circle]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:not[%s];4:and[%s,%s];4:blue;4:circle;1:%s.o;2:x
'λx.apply(not[green],iota(filter(x.s, curry[size-leq,x.o])))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-leq;1:%s.o;2:x
'λx.exists(and[size2,curry[same_shape,x.o]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:size2;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.forall(size1,filter(x.s, blue))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(not[and[rectangle,green]],iota(filter(x.s, curry[same_shape,x.o])))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:rectangle;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(filter(x.s, green), not[size2]), circle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:not[%s];4:size2;4:circle
'λx.apply(curry[same_size,x.o],iota(filter(filter(filter(x.s, blue), size3), blue)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3;4:blue
'λx.forall(circle,filter(filter(x.s, size2), curry[same_shape,x.o]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(or[not[circle],not[size1]],iota(filter(x.s, curry[same_shape,x.o])))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:circle;4:not[%s];4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(curry[same_size,x.o],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.contains(x.o, filter(x.s, and[circle,not[blue]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:not[%s];4:blue
'λx.apply(curry[same_color,x.o],iota(filter(x.s, curry[size-leq,x.o])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-leq;1:%s.o;2:x
'λx.apply(and[or[blue,size3],curry[same_size,x.o]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:blue;4:size3;4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[circle,curry[same_size,iota(filter(x.s, circle))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;1:%s.o;2:x
'λx.apply(curry[same_shape,x.o],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(or[curry[same_size,iota(filter(x.s, size1))],size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:size1;1:%s.o;2:x
'λx.apply(not[size3],iota(filter(filter(x.s, size2), green)))'	0:apply(%s,%s);4:not[%s];4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green
'λx.apply(curry[same_shape,x.o],iota(filter(x.s, and[blue,size1])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size1
'λx.apply(size2,iota(filter(x.s, or[triangle,circle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:circle
'λx.exists(not[and[green,triangle]], filter(filter(x.s, or[curry[same_shape,x.o],yellow]), size2))'	0:exists(%s, %s);4:not[%s];4:and[%s,%s];4:green;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:yellow;4:size2
'λx.exists(blue, filter(filter(x.s, curry[same_shape,iota(filter(x.s, blue))]), blue))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue
'λx.exists(and[circle,green], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:circle;4:green;3:%s.s;2:x
'λx.apply(not[not[not[and[blue,or[triangle,rectangle]]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:not[%s];4:and[%s,%s];4:blue;4:or[%s,%s];4:triangle;4:rectangle;1:%s.o;2:x
'λx.forall(and[or[not[curry[same_size,x.o]],size2],not[size2]],filter(x.s, yellow))'	0:forall(%s,%s);4:and[%s,%s];4:or[%s,%s];4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:size2;4:not[%s];4:size2;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(or[and[circle,blue],and[circle,yellow]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:circle;4:blue;4:and[%s,%s];4:circle;4:yellow;1:%s.o;2:x
'λx.apply(not[and[size3,green]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size3;4:green;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(x.s, curry[same_color,x.o]), blue)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:blue
'λx.exists(yellow, filter(x.s, not[circle]))'	0:exists(%s, %s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.apply(or[or[triangle,blue],circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:triangle;4:blue;4:circle;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, and[curry[same_size,x.o],or[curry[same_color,x.o],green]]), not[blue]), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:or[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:green;4:not[%s];4:blue;4:circle
'λx.forall(yellow,filter(filter(filter(filter(filter(filter(x.s, and[size1,or[curry[size-leq,iota(filter(filter(x.s, or[triangle,not[curry[same_color,x.o]]]), blue))],curry[same_color,x.o]]]), size2), triangle), green), rectangle), green))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:or[%s,%s];4:curry[%s,%s];5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:blue;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:size2;4:triangle;4:green;4:rectangle;4:green
'λx.apply(yellow,iota(filter(filter(x.s, yellow), triangle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:triangle
'λx.empty(filter(filter(x.s, size3), triangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle
'λx.apply(triangle,iota(filter(filter(x.s, triangle), size3)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3
'λx.exists(triangle, filter(x.s, or[yellow,blue]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:blue
'λx.exists(size3, x.s)'	0:exists(%s, %s);4:size3;3:%s.s;2:x
'λx.apply(and[yellow,or[not[curry[size-lt,iota(filter(x.s, and[size3,not[green]]))]],yellow]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:yellow;4:or[%s,%s];4:not[%s];4:curry[%s,%s];5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:not[%s];4:green;4:yellow;1:%s.o;2:x
'λx.apply(or[size3,size1],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.exists(blue, filter(filter(x.s, curry[same_shape,x.o]), blue))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue
'λx.apply(or[rectangle,or[circle,size3]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:or[%s,%s];4:circle;4:size3;1:%s.o;2:x
'λx.exists(or[triangle,curry[same_color,x.o]], filter(x.s, and[curry[same_shape,x.o],blue]))'	0:exists(%s, %s);4:or[%s,%s];4:triangle;4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue
'λx.exists(not[and[not[blue],triangle]], filter(filter(x.s, curry[same_shape,x.o]), curry[same_color,x.o]))'	0:exists(%s, %s);4:not[%s];4:and[%s,%s];4:not[%s];4:blue;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(not[or[and[not[circle],not[blue]],and[blue,circle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:and[%s,%s];4:not[%s];4:circle;4:not[%s];4:blue;4:and[%s,%s];4:blue;4:circle;1:%s.o;2:x
'λx.forall(size2,filter(x.s, rectangle))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[or[green,curry[same_color,x.o]],not[yellow]],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:green;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.forall(curry[same_shape,x.o],filter(filter(x.s, not[rectangle]), yellow))'	0:forall(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle;4:yellow
'λx.apply(or[size1,curry[same_shape,x.o]],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(or[yellow,or[green,size1]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:or[%s,%s];4:green;4:size1;1:%s.o;2:x
'λx.apply(or[triangle,curry[size-geq,x.o]],iota(filter(x.s, curry[same_shape,x.o])))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:curry[%s,%s];5:size-geq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(not[and[rectangle,not[size1]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:rectangle;4:not[%s];4:size1;1:%s.o;2:x
'λx.apply(or[and[size1,blue],circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size1;4:blue;4:circle;1:%s.o;2:x
'λx.apply(or[and[size1,triangle],size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size1;4:triangle;4:size3;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, curry[same_size,x.o]), curry[same_color,x.o])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.forall(curry[same_shape,x.o],filter(filter(x.s, curry[same_shape,iota(filter(x.s, curry[same_shape,x.o]))]), curry[same_color,x.o]))'	0:forall(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(and[curry[same_shape,x.o],blue],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(blue,iota(filter(filter(x.s, not[curry[same_color,x.o]]), and[blue,curry[same_shape,x.o]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:and[%s,%s];4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(or[yellow,not[and[not[circle],not[size1]]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:not[%s];4:and[%s,%s];4:not[%s];4:circle;4:not[%s];4:size1;1:%s.o;2:x
'λx.forall(circle,filter(filter(filter(x.s, curry[same_color,x.o]), green), triangle))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:green;4:triangle
'λx.forall(and[curry[same_color,iota(filter(x.s, blue))],and[blue,curry[same_shape,x.o]]],filter(x.s, blue))'	0:forall(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.forall(triangle,filter(filter(x.s, curry[same_shape,x.o]), circle))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:circle
'λx.contains(x.o, filter(x.s, and[curry[same_size,iota(filter(x.s, blue))],blue]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue
'λx.forall(curry[size-gt,x.o],filter(x.s, size1))'	0:forall(%s,%s);4:curry[%s,%s];5:size-gt;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.contains(iota(filter(filter(x.s, blue), curry[same_color,x.o])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(circle,iota(filter(x.s, and[circle,curry[same_color,x.o]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.empty(filter(filter(x.s, circle), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green
'λx.apply(not[and[circle,blue]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:circle;4:blue;1:%s.o;2:x
'λx.apply(curry[same_size,x.o],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.apply(curry[same_size,x.o],iota(filter(x.s, or[green,blue])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:blue
'λx.apply(or[and[circle,blue],not[or[circle,blue]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:circle;4:blue;4:not[%s];4:or[%s,%s];4:circle;4:blue;1:%s.o;2:x
'λx.apply(or[curry[same_size,x.o],triangle],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:or[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(or[or[circle,blue],not[size1]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:circle;4:blue;4:not[%s];4:size1;1:%s.o;2:x
'λx.exists(blue, filter(x.s, and[curry[same_size,x.o],circle]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:circle
'λx.apply(triangle,iota(filter(x.s, curry[size-gt,x.o])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-gt;1:%s.o;2:x
'λx.forall(curry[same_size,x.o],filter(filter(x.s, curry[same_shape,x.o]), size3))'	0:forall(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size3
'λx.empty(filter(filter(filter(x.s, or[size2,rectangle]), yellow), curry[same_shape,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:rectangle;4:yellow;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(curry[same_color,x.o],iota(filter(x.s, not[not[curry[same_shape,x.o]]])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(curry[same_size,iota(filter(x.s, curry[size-leq,x.o]))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-leq;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(filter(filter(x.s, circle), not[green]), size1), size1)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:green;4:size1;4:size1
'λx.exists(and[size3,not[rectangle]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:size3;4:not[%s];4:rectangle;3:%s.s;2:x
'λx.apply(green,iota(filter(x.s, not[size1])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1
'λx.apply(or[circle,size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:size1;1:%s.o;2:x
'λx.apply(and[curry[same_shape,iota(filter(x.s, blue))],curry[same_color,x.o]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[or[blue,circle],not[and[circle,blue]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:blue;4:circle;4:not[%s];4:and[%s,%s];4:circle;4:blue;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, not[size2]), curry[same_shape,x.o]), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:green
'λx.forall(size2,filter(filter(x.s, curry[same_shape,x.o]), green))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:green
'λx.apply(or[circle,curry[same_shape,iota(filter(x.s, and[not[size1],yellow]))]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:size1;4:yellow;1:%s.o;2:x
'λx.apply(not[yellow],iota(filter(filter(x.s, circle), curry[same_color,x.o])))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.exists(curry[same_color,x.o], filter(x.s, rectangle))'	0:exists(%s, %s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.empty(filter(filter(filter(x.s, curry[same_color,x.o]), blue), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:blue;4:rectangle
'λx.apply(blue,iota(filter(x.s, or[curry[same_size,x.o],blue])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:blue
'λx.contains(iota(filter(x.s, not[size1])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;3:%s.s;2:x
'λx.apply(or[and[circle,yellow],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:circle;4:yellow;4:blue;1:%s.o;2:x
'λx.apply(and[curry[same_shape,x.o],not[and[or[triangle,rectangle],blue]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:or[%s,%s];4:triangle;4:rectangle;4:blue;1:%s.o;2:x
'λx.apply(and[not[size2],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:size2;4:triangle;1:%s.o;2:x
'λx.forall(yellow,filter(filter(x.s, size2), triangle))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:triangle
'λx.exists(triangle, filter(x.s, curry[same_color,x.o]))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(and[rectangle,or[size3,and[not[curry[same_shape,iota(filter(x.s, circle))]],rectangle]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:or[%s,%s];4:size3;4:and[%s,%s];4:not[%s];4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:rectangle;1:%s.o;2:x
'λx.apply(or[blue,and[green,not[rectangle]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:and[%s,%s];4:green;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.apply(curry[same_size,iota(filter(x.s, size3))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;1:%s.o;2:x
'λx.apply(or[curry[same_shape,iota(filter(filter(x.s, blue), not[size2]))],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:not[%s];4:size2;4:blue;1:%s.o;2:x
'λx.apply(or[or[size2,curry[same_shape,x.o]],blue],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:size2;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(green,iota(filter(filter(filter(x.s, circle), not[size2]), green)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:size2;4:green
'λx.exists(and[not[green],rectangle], filter(x.s, curry[size-geq,x.o]))'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:green;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-geq;1:%s.o;2:x
'λx.forall(blue,filter(filter(x.s, curry[same_color,x.o]), and[curry[same_size,x.o],size1]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:size1
'λx.apply(curry[same_shape,iota(filter(filter(x.s, circle), size3))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3;1:%s.o;2:x
'λx.forall(triangle,filter(filter(x.s, blue), size3))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3
'λx.apply(and[size2,circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:circle;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, and[yellow,not[triangle]]), size2)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:not[%s];4:triangle;4:size2;3:%s.s;2:x
'λx.apply(curry[same_shape,x.o],iota(filter(filter(x.s, blue), curry[size-leq,x.o])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:curry[%s,%s];5:size-leq;1:%s.o;2:x
'λx.apply(not[and[circle,size3]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:circle;4:size3;1:%s.o;2:x
'λx.apply(not[and[size2,not[blue]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size2;4:not[%s];4:blue;1:%s.o;2:x
'λx.apply(or[or[rectangle,and[yellow,triangle]],size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:rectangle;4:and[%s,%s];4:yellow;4:triangle;4:size1;1:%s.o;2:x
'λx.apply(and[blue,blue],iota(filter(x.s, curry[same_color,x.o])))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.exists(or[curry[same_color,x.o],green], filter(filter(x.s, size3), or[triangle,blue]))'	0:exists(%s, %s);4:or[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:triangle;4:blue
'λx.apply(or[and[not[or[and[or[or[or[rectangle,circle],size3],curry[same_color,x.o]],circle],blue]],curry[same_color,x.o]],and[blue,circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:not[%s];4:or[%s,%s];4:and[%s,%s];4:or[%s,%s];4:or[%s,%s];4:or[%s,%s];4:rectangle;4:circle;4:size3;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:circle;4:blue;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:and[%s,%s];4:blue;4:circle;1:%s.o;2:x
'λx.apply(green,iota(x.s))'	0:apply(%s,%s);4:green;1:iota(%s);3:%s.s;2:x
'λx.forall(not[rectangle],filter(x.s, curry[same_size,x.o]))'	0:forall(%s,%s);4:not[%s];4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.exists(and[and[circle,blue],curry[same_shape,x.o]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:circle;4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, blue), curry[same_size,x.o]), not[circle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:not[%s];4:circle
'λx.contains(iota(filter(filter(x.s, and[blue,curry[same_shape,x.o]]), not[size2])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:size2;3:%s.s;2:x
'λx.apply(size1,x.o)'	0:apply(%s,%s);4:size1;1:%s.o;2:x
'λx.exists(and[and[blue,or[green,not[curry[same_size,x.o]]]],curry[same_shape,x.o]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:and[%s,%s];4:blue;4:or[%s,%s];4:green;4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(curry[same_color,x.o],iota(filter(filter(x.s, curry[same_size,x.o]), size3)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:size3
'λx.apply(size1,iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(not[or[and[blue,triangle],and[blue,rectangle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:and[%s,%s];4:blue;4:triangle;4:and[%s,%s];4:blue;4:rectangle;1:%s.o;2:x
'λx.apply(and[or[green,yellow],not[circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:green;4:yellow;4:not[%s];4:circle;1:%s.o;2:x
'λx.apply(curry[same_shape,x.o],iota(filter(filter(x.s, blue), and[curry[same_color,x.o],circle])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:circle
'λx.contains(x.o, filter(x.s, not[or[circle,blue]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:circle;4:blue
'λx.apply(green,iota(filter(x.s, and[not[curry[same_size,x.o]],rectangle])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:rectangle
'λx.apply(or[and[and[yellow,size3],not[rectangle]],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:size3;4:not[%s];4:rectangle;4:blue;1:%s.o;2:x
'λx.apply(or[curry[same_shape,x.o],circle],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.forall(blue,filter(x.s, curry[size-leq,x.o]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-leq;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, triangle), curry[same_size,x.o])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.apply(or[or[circle,blue],rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:circle;4:blue;4:rectangle;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, or[yellow,circle])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:circle
'λx.empty(filter(filter(filter(filter(x.s, curry[same_size,x.o]), yellow), size2), curry[same_size,iota(filter(x.s, blue))]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:yellow;4:size2;4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.empty(filter(x.s, blue))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.exists(curry[same_shape,x.o], filter(x.s, or[blue,circle]))'	0:exists(%s, %s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:circle
'λx.forall(rectangle,filter(filter(filter(x.s, curry[same_size,x.o]), size1), yellow))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:size1;4:yellow
'λx.apply(curry[same_color,iota(filter(x.s, triangle))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;1:%s.o;2:x
'λx.apply(or[not[and[yellow,size3]],rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:and[%s,%s];4:yellow;4:size3;4:rectangle;1:%s.o;2:x
'λx.apply(size2,x.o)'	0:apply(%s,%s);4:size2;1:%s.o;2:x
'λx.apply(curry[same_color,iota(filter(x.s, curry[size-leq,x.o]))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-leq;1:%s.o;2:x;1:%s.o;2:x
'λx.empty(filter(x.s, and[triangle,yellow]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:yellow
'λx.apply(not[and[not[size3],circle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:size3;4:circle;1:%s.o;2:x
'λx.forall(or[and[not[and[and[and[curry[same_size,iota(filter(x.s, and[triangle,yellow]))],yellow],size1],blue]],yellow],green],filter(x.s, green))'	0:forall(%s,%s);4:or[%s,%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:yellow;4:yellow;4:size1;4:blue;4:yellow;4:green;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(not[not[and[circle,yellow]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:and[%s,%s];4:circle;4:yellow;1:%s.o;2:x
'λx.empty(filter(filter(x.s, rectangle), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue
'λx.forall(circle,filter(filter(x.s, curry[same_shape,x.o]), blue))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue
'λx.empty(filter(x.s, and[curry[same_shape,x.o],curry[size-gt,x.o]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:size-gt;1:%s.o;2:x
'λx.forall(size3,filter(filter(x.s, curry[same_size,x.o]), size2))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:size2
'λx.forall(size1,filter(filter(x.s, curry[size-lt,x.o]), not[rectangle]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-lt;1:%s.o;2:x;4:not[%s];4:rectangle
'λx.contains(iota(filter(filter(x.s, size1), blue)), filter(x.s, and[or[curry[same_shape,x.o],circle],size1]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:circle;4:size1
'λx.apply(or[rectangle,not[and[circle,blue]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:not[%s];4:and[%s,%s];4:circle;4:blue;1:%s.o;2:x
'λx.empty(filter(x.s, and[not[curry[same_color,x.o]],curry[same_shape,x.o]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, or[size1,and[size3,rectangle]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:and[%s,%s];4:size3;4:rectangle
'λx.empty(filter(filter(x.s, or[size2,rectangle]), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:rectangle;4:yellow
'λx.forall(curry[same_size,x.o],filter(x.s, blue))'	0:forall(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(or[circle,size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:size3;1:%s.o;2:x
'λx.empty(filter(filter(x.s, triangle), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2
'λx.apply(curry[same_color,iota(filter(x.s, not[not[blue]]))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:blue;1:%s.o;2:x
'λx.empty(filter(filter(x.s, not[curry[same_color,x.o]]), curry[same_shape,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(or[or[circle,size1],green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:circle;4:size1;4:green;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(x.s, curry[same_color,x.o]), size3)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:size3
'λx.exists(not[circle], filter(x.s, or[not[or[yellow,size2]],and[size3,triangle]]))'	0:exists(%s, %s);4:not[%s];4:circle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:or[%s,%s];4:yellow;4:size2;4:and[%s,%s];4:size3;4:triangle
'λx.apply(or[yellow,curry[same_shape,x.o]],iota(filter(filter(x.s, curry[same_size,x.o]), blue)))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:blue
'λx.exists(or[circle,size3], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:circle;4:size3;3:%s.s;2:x
'λx.empty(filter(x.s, size1))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.empty(filter(filter(x.s, curry[size-lt,x.o]), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-lt;1:%s.o;2:x;4:size3
'λx.apply(or[or[yellow,not[circle]],green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:yellow;4:not[%s];4:circle;4:green;1:%s.o;2:x
'λx.forall(blue,filter(x.s, and[and[curry[same_shape,x.o],size1],curry[same_color,x.o]]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size1;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(x.s, yellow), circle)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:circle
'λx.apply(blue,iota(filter(filter(x.s, size3), circle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:circle
'λx.apply(or[not[and[or[curry[same_color,x.o],size3],curry[same_size,x.o]]],green],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:and[%s,%s];4:or[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:size3;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.exists(green, filter(x.s, size3))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(or[green,or[circle,yellow]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:or[%s,%s];4:circle;4:yellow;1:%s.o;2:x
'λx.exists(curry[same_color,x.o], filter(filter(x.s, size3), or[triangle,blue]))'	0:exists(%s, %s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:or[%s,%s];4:triangle;4:blue
'λx.apply(not[or[yellow,green]],iota(filter(filter(x.s, circle), curry[size-geq,x.o])))'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:yellow;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:curry[%s,%s];5:size-geq;1:%s.o;2:x
'λx.apply(blue,iota(x.s))'	0:apply(%s,%s);4:blue;1:iota(%s);3:%s.s;2:x
'λx.apply(not[not[or[blue,not[circle]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:or[%s,%s];4:blue;4:not[%s];4:circle;1:%s.o;2:x
'λx.exists(rectangle, filter(x.s, and[curry[size-gt,iota(filter(x.s, size3))],not[blue]]))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:blue
'λx.apply(or[blue,curry[same_shape,x.o]],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(green,iota(filter(x.s, and[curry[same_shape,x.o],green])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:green
'λx.empty(filter(filter(x.s, green), and[curry[same_shape,x.o],triangle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:triangle
'λx.apply(and[not[and[circle,blue]],not[triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:circle;4:blue;4:not[%s];4:triangle;1:%s.o;2:x
'λx.forall(curry[same_size,iota(filter(filter(x.s, size2), blue))],filter(x.s, size2))'	0:forall(%s,%s);4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(or[green,or[circle,size1]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:or[%s,%s];4:circle;4:size1;1:%s.o;2:x
'λx.apply(or[blue,curry[same_color,iota(filter(x.s, curry[size-leq,x.o]))]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-leq;1:%s.o;2:x;1:%s.o;2:x
'λx.forall(circle,filter(x.s, and[and[green,or[size3,rectangle]],curry[same_shape,x.o]]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:green;4:or[%s,%s];4:size3;4:rectangle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(not[and[not[size1],and[not[circle],not[green]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:size1;4:and[%s,%s];4:not[%s];4:circle;4:not[%s];4:green;1:%s.o;2:x
'λx.forall(curry[same_shape,x.o],filter(x.s, curry[same_shape,iota(filter(x.s, curry[same_shape,x.o]))]))'	0:forall(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.forall(curry[same_shape,x.o],x.s)'	0:forall(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(circle,iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.exists(and[rectangle,or[yellow,size1]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:rectangle;4:or[%s,%s];4:yellow;4:size1;3:%s.s;2:x
'λx.contains(x.o, filter(x.s, or[blue,or[circle,size3]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:or[%s,%s];4:circle;4:size3
'λx.apply(or[blue,rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:rectangle;1:%s.o;2:x
'λx.forall(blue,filter(filter(x.s, curry[same_shape,x.o]), size3))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size3
'λx.apply(size2,iota(filter(x.s, blue)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(or[blue,curry[same_shape,iota(filter(x.s, blue))]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.exists(not[yellow], filter(x.s, circle))'	0:exists(%s, %s);4:not[%s];4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.empty(filter(filter(filter(x.s, curry[same_color,x.o]), not[blue]), not[circle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:not[%s];4:blue;4:not[%s];4:circle
'λx.apply(yellow,iota(filter(filter(x.s, yellow), size1)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size1
'λx.apply(or[blue,or[circle,size3]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:or[%s,%s];4:circle;4:size3;1:%s.o;2:x
'λx.apply(or[or[curry[same_shape,x.o],yellow],yellow],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:yellow;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(and[curry[same_size,iota(filter(x.s, blue))],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue;1:%s.o;2:x
'λx.apply(or[curry[same_size,iota(x.s)],size2],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:curry[%s,%s];5:same_size;1:iota(%s);3:%s.s;2:x;4:size2;1:%s.o;2:x
'λx.exists(not[not[or[and[curry[same_color,x.o],blue],not[circle]]]], filter(x.s, curry[same_shape,x.o]))'	0:exists(%s, %s);4:not[%s];4:not[%s];4:or[%s,%s];4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:blue;4:not[%s];4:circle;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.exists(size2, filter(x.s, curry[same_color,x.o]))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(curry[size-gt,iota(filter(filter(filter(x.s, not[size1]), or[green,rectangle]), rectangle))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:size-gt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:or[%s,%s];4:green;4:rectangle;4:rectangle;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(filter(filter(filter(x.s, curry[same_shape,x.o]), blue), blue), not[size1]), size3)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue;4:blue;4:not[%s];4:size1;4:size3
'λx.apply(circle,iota(filter(filter(x.s, circle), size1)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1
'λx.apply(size2,iota(filter(filter(x.s, rectangle), blue)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue
'λx.apply(triangle,iota(filter(filter(x.s, triangle), not[green])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:not[%s];4:green
'λx.apply(and[curry[same_size,x.o],curry[same_size,iota(filter(x.s, not[triangle]))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;1:%s.o;2:x
'λx.forall(size1,filter(filter(filter(x.s, curry[same_shape,x.o]), circle), size3))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:circle;4:size3
'λx.forall(or[size2,circle],filter(x.s, not[curry[same_shape,x.o]]))'	0:forall(%s,%s);4:or[%s,%s];4:size2;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(curry[same_color,iota(filter(filter(x.s, curry[same_shape,x.o]), not[and[size1,size3]]))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:size1;4:size3;1:%s.o;2:x
'λx.apply(curry[same_size,iota(filter(x.s, or[size3,green]))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:green;1:%s.o;2:x
'λx.empty(filter(filter(x.s, and[curry[same_shape,x.o],size3]), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size3;4:blue
'λx.apply(size3,iota(filter(filter(x.s, not[size1]), green)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:green
'λx.apply(blue,iota(filter(x.s, and[curry[same_color,x.o],blue])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:blue
'λx.apply(curry[same_shape,x.o],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.contains(x.o, filter(filter(x.s, or[circle,size2]), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:size2;4:green
'λx.exists(size3, filter(x.s, curry[same_shape,x.o]))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, curry[same_color,x.o]), circle), not[blue]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:circle;4:not[%s];4:blue
'λx.apply(not[or[size1,triangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:size1;4:triangle;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(x.s, not[circle]), green), curry[same_shape,x.o]), size2))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:green;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size2
'λx.apply(rectangle,iota(filter(filter(x.s, or[blue,triangle]), or[rectangle,green])))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:triangle;4:or[%s,%s];4:rectangle;4:green
'λx.empty(filter(x.s, yellow))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(size2,iota(filter(filter(x.s, circle), yellow)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow
'λx.exists(or[circle,triangle], filter(x.s, size3))'	0:exists(%s, %s);4:or[%s,%s];4:circle;4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.forall(green,filter(x.s, triangle))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.exists(rectangle, filter(x.s, curry[same_color,x.o]))'	0:exists(%s, %s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(curry[size-lt,x.o],iota(filter(filter(x.s, size2), yellow)))'	0:apply(%s,%s);4:curry[%s,%s];5:size-lt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:yellow
'λx.apply(and[blue,curry[same_color,iota(filter(x.s, curry[same_color,x.o]))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(not[and[size2,yellow]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size2;4:yellow;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, and[not[curry[same_shape,x.o]],blue])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue
'λx.apply(not[rectangle],iota(filter(filter(x.s, yellow), curry[same_size,x.o])))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(x.s, size1), yellow)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:yellow
'λx.apply(or[and[curry[same_size,x.o],or[green,yellow]],size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:or[%s,%s];4:green;4:yellow;4:size1;1:%s.o;2:x
'λx.apply(and[circle,blue],iota(filter(filter(x.s, circle), size2)))'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size2
'λx.apply(and[green,not[size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:not[%s];4:size1;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, circle), blue)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue
'λx.apply(curry[same_shape,iota(filter(x.s, curry[same_size,x.o]))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(not[or[and[curry[same_color,iota(filter(x.s, blue))],triangle],blue]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:and[%s,%s];4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle;4:blue;1:%s.o;2:x
'λx.exists(size2, filter(x.s, not[triangle]))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.empty(filter(filter(x.s, blue), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle
'λx.apply(size3,iota(filter(filter(filter(x.s, curry[same_shape,x.o]), green), size3)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:green;4:size3
'λx.apply(curry[same_shape,x.o],iota(filter(filter(x.s, size3), green)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green
'λx.forall(curry[same_size,x.o],filter(x.s, circle))'	0:forall(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.exists(or[size2,size1], filter(x.s, curry[same_size,x.o]))'	0:exists(%s, %s);4:or[%s,%s];4:size2;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.forall(size2,filter(filter(x.s, size2), or[blue,curry[same_shape,iota(filter(x.s, curry[same_shape,x.o]))]]))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:or[%s,%s];4:blue;4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(and[or[circle,blue],curry[same_size,x.o]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:circle;4:blue;4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.contains(x.o, filter(filter(x.s, size1), green))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green
'λx.empty(filter(filter(filter(x.s, circle), size1), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1;4:blue
'λx.contains(x.o, filter(filter(x.s, or[yellow,green]), not[circle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:green;4:not[%s];4:circle
'λx.apply(or[or[not[blue],circle],size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:not[%s];4:blue;4:circle;4:size1;1:%s.o;2:x
'λx.apply(and[curry[same_color,iota(filter(x.s, curry[same_shape,x.o]))],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue;1:%s.o;2:x
'λx.forall(and[curry[same_shape,x.o],curry[size-leq,x.o]],filter(x.s, curry[same_shape,x.o]))'	0:forall(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:size-leq;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(not[circle],x.o)'	0:apply(%s,%s);4:not[%s];4:circle;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, not[rectangle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:rectangle
'λx.apply(and[size1,not[green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:not[%s];4:green;1:%s.o;2:x
'λx.empty(filter(filter(x.s, size2), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle
'λx.forall(curry[same_shape,x.o],filter(x.s, blue))'	0:forall(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(or[blue,and[rectangle,circle]],iota(filter(x.s, curry[same_color,x.o])))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(not[not[or[size1,rectangle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:or[%s,%s];4:size1;4:rectangle;1:%s.o;2:x
'λx.apply(size1,iota(filter(x.s, green)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.exists(and[not[curry[same_size,x.o]],and[or[blue,size1],triangle]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:and[%s,%s];4:or[%s,%s];4:blue;4:size1;4:triangle;3:%s.s;2:x
'λx.apply(not[not[curry[same_shape,x.o]]],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:not[%s];4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(size1,iota(filter(filter(x.s, size1), triangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:triangle
'λx.forall(curry[same_shape,x.o],filter(filter(x.s, rectangle), blue))'	0:forall(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue
'λx.exists(curry[same_shape,x.o], filter(filter(x.s, not[triangle]), blue))'	0:exists(%s, %s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:blue
'λx.exists(curry[same_shape,iota(filter(x.s, blue))], x.s)'	0:exists(%s, %s);4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;3:%s.s;2:x
'λx.apply(size3,iota(filter(x.s, and[yellow,size3])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size3
'λx.exists(curry[same_shape,x.o], filter(x.s, not[curry[same_color,x.o]]))'	0:exists(%s, %s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.forall(blue,filter(filter(x.s, and[triangle,curry[same_shape,x.o]]), curry[same_size,x.o]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(x.s, yellow), size2)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size2
'λx.apply(or[not[blue],size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:blue;4:size1;1:%s.o;2:x
'λx.apply(or[curry[same_shape,iota(filter(x.s, size3))],rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle;1:%s.o;2:x
'λx.apply(or[circle,or[and[triangle,green],blue]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:or[%s,%s];4:and[%s,%s];4:triangle;4:green;4:blue;1:%s.o;2:x
'λx.forall(and[curry[same_size,x.o],or[size1,triangle]],filter(filter(x.s, yellow), curry[same_shape,x.o]))'	0:forall(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:or[%s,%s];4:size1;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(or[or[rectangle,rectangle],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:rectangle;4:rectangle;4:blue;1:%s.o;2:x
'λx.forall(curry[same_size,x.o],filter(filter(x.s, triangle), green))'	0:forall(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green
'λx.empty(filter(filter(x.s, curry[same_shape,x.o]), curry[size-gt,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:size-gt;1:%s.o;2:x
'λx.apply(curry[same_size,x.o],iota(filter(filter(x.s, circle), curry[same_shape,x.o])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, yellow), curry[same_shape,x.o]), not[size1]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:size1
'λx.exists(and[or[yellow,circle],size3], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:or[%s,%s];4:yellow;4:circle;4:size3;3:%s.s;2:x
'λx.apply(not[and[size2,yellow]],iota(filter(x.s, not[triangle])))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size2;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle
'λx.forall(yellow,filter(filter(x.s, circle), size3))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size3
'λx.forall(curry[same_color,x.o],filter(x.s, and[curry[same_shape,x.o],not[curry[same_color,x.o]]]))'	0:forall(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(not[and[triangle,not[blue]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:triangle;4:not[%s];4:blue;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(filter(x.s, curry[same_shape,x.o]), size1), blue)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size1;4:blue
'λx.forall(size1,filter(x.s, circle))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.contains(x.o, filter(x.s, or[circle,blue]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:blue
'λx.apply(or[or[and[rectangle,green],and[circle,blue]],or[and[and[size2,size1],size1],or[and[not[circle],or[yellow,green]],and[green,blue]]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:rectangle;4:green;4:and[%s,%s];4:circle;4:blue;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:size1;4:size1;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:circle;4:or[%s,%s];4:yellow;4:green;4:and[%s,%s];4:green;4:blue;1:%s.o;2:x
'λx.apply(or[size1,size3],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.exists(not[curry[same_shape,x.o]], filter(x.s, curry[same_color,x.o]))'	0:exists(%s, %s);4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(and[blue,size3],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:size3;1:%s.o;2:x
'λx.forall(or[circle,curry[same_color,x.o]],filter(filter(x.s, or[circle,curry[same_shape,x.o]]), not[and[rectangle,circle]]))'	0:forall(%s,%s);4:or[%s,%s];4:circle;4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:rectangle;4:circle
'λx.apply(not[triangle],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(triangle, filter(filter(x.s, or[not[green],size1]), triangle))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:green;4:size1;4:triangle
'λx.empty(filter(filter(x.s, or[curry[same_size,x.o],curry[same_shape,x.o]]), curry[size-lt,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:size-lt;1:%s.o;2:x
'λx.forall(triangle,x.s)'	0:forall(%s,%s);4:triangle;3:%s.s;2:x
'λx.exists(green, filter(x.s, not[size3]))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3
'λx.exists(not[curry[same_size,x.o]], filter(x.s, curry[same_shape,x.o]))'	0:exists(%s, %s);4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.forall(circle,filter(filter(filter(x.s, rectangle), curry[same_color,x.o]), size3))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:size3
'λx.apply(not[blue],iota(filter(x.s, and[curry[same_color,x.o],and[size2,triangle]])))'	0:apply(%s,%s);4:not[%s];4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:and[%s,%s];4:size2;4:triangle
'λx.contains(iota(filter(filter(x.s, and[size2,blue]), curry[size-geq,x.o])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:blue;4:curry[%s,%s];5:size-geq;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(curry[size-geq,x.o],iota(filter(x.s, or[and[size3,or[blue,rectangle]],size2])))'	0:apply(%s,%s);4:curry[%s,%s];5:size-geq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size3;4:or[%s,%s];4:blue;4:rectangle;4:size2
'λx.empty(filter(filter(filter(x.s, blue), size3), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size3;4:rectangle
'λx.apply(curry[same_size,x.o],iota(filter(filter(x.s, not[yellow]), circle)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow;4:circle
'λx.exists(or[curry[same_shape,x.o],green], filter(filter(x.s, triangle), size3))'	0:exists(%s, %s);4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size3
'λx.exists(and[curry[same_shape,iota(filter(filter(filter(x.s, size2), curry[same_size,x.o]), triangle))],triangle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:triangle;4:triangle;3:%s.s;2:x
'λx.apply(and[or[not[blue],size2],triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:not[%s];4:blue;4:size2;4:triangle;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, triangle), and[blue,curry[same_size,x.o]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:blue;4:curry[%s,%s];5:same_size;1:%s.o;2:x;3:%s.s;2:x
'λx.forall(triangle,filter(filter(filter(filter(filter(x.s, or[green,curry[same_shape,iota(filter(x.s, curry[same_shape,x.o]))]]), rectangle), blue), size2), triangle))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:rectangle;4:blue;4:size2;4:triangle
'λx.apply(not[size2],iota(filter(filter(x.s, curry[same_size,x.o]), rectangle)))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:rectangle
'λx.apply(blue,iota(filter(filter(filter(x.s, size3), curry[same_shape,x.o]), blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue
'λx.apply(circle,iota(filter(x.s, curry[same_shape,x.o])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, size3), blue), or[green,not[curry[same_color,x.o]]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue;4:or[%s,%s];4:green;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(x.s, blue), size2)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2
'λx.apply(or[blue,and[rectangle,green]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:and[%s,%s];4:rectangle;4:green;1:%s.o;2:x
'λx.exists(and[not[yellow],curry[same_shape,x.o]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:yellow;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.forall(circle,filter(filter(x.s, not[curry[same_shape,x.o]]), size3))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size3
'λx.contains(x.o, filter(x.s, not[and[circle,blue]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:circle;4:blue
'λx.forall(or[curry[same_shape,x.o],or[or[blue,curry[size-geq,x.o]],size1]],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:or[%s,%s];4:blue;4:curry[%s,%s];5:size-geq;1:%s.o;2:x;4:size1;3:%s.s;2:x
'λx.apply(curry[same_shape,x.o],iota(filter(filter(x.s, green), size2)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size2
'λx.forall(or[circle,size2],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:circle;4:size2;3:%s.s;2:x
'λx.empty(filter(filter(x.s, not[and[curry[same_color,x.o],curry[same_color,x.o]]]), curry[same_shape,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(x.s, curry[same_shape,x.o]), rectangle), green), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:rectangle;4:green;4:green
'λx.apply(or[blue,not[rectangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.forall(circle,filter(filter(filter(x.s, curry[same_shape,x.o]), size2), green))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size2;4:green
'λx.exists(curry[same_size,iota(filter(filter(filter(x.s, size3), triangle), green))], x.s)'	0:exists(%s, %s);4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle;4:green;3:%s.s;2:x
'λx.contains(iota(filter(filter(x.s, size1), and[green,curry[same_shape,x.o]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:and[%s,%s];4:green;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.exists(and[curry[size-lt,x.o],curry[same_shape,x.o]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:curry[%s,%s];5:size-lt;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(or[and[not[size3],rectangle],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:not[%s];4:size3;4:rectangle;4:blue;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(x.s, and[size3,and[yellow,yellow]]), curry[size-geq,x.o])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:and[%s,%s];4:yellow;4:yellow;4:curry[%s,%s];5:size-geq;1:%s.o;2:x
'λx.contains(iota(filter(x.s, rectangle)), filter(x.s, or[triangle,size2]))'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:size2
'λx.apply(not[and[and[yellow,circle],size3]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:circle;4:size3;1:%s.o;2:x
'λx.apply(or[yellow,size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:size3;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, blue), triangle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle
'λx.apply(or[blue,circle],iota(x.s))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:circle;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, circle), size2))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size2
'λx.forall(curry[same_size,x.o],filter(x.s, or[blue,green]))'	0:forall(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:green
'λx.apply(not[and[not[size3],and[curry[same_size,x.o],not[blue]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:size3;4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:not[%s];4:blue;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(x.s, size1), rectangle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle
'λx.apply(not[and[rectangle,size2]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:rectangle;4:size2;1:%s.o;2:x
'λx.apply(and[or[size3,size3],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size3;4:size3;4:blue;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, blue), circle), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle;4:size3
'λx.forall(not[curry[same_color,x.o]],filter(x.s, yellow))'	0:forall(%s,%s);4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.forall(yellow,filter(x.s, not[curry[same_shape,x.o]]))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(and[rectangle,size2],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:size2;1:%s.o;2:x
'λx.apply(not[and[triangle,green]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:triangle;4:green;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(x.s, rectangle), yellow)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:yellow
'λx.forall(or[circle,blue],filter(x.s, curry[same_shape,x.o]))'	0:forall(%s,%s);4:or[%s,%s];4:circle;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.exists(curry[size-lt,x.o], filter(filter(x.s, size3), yellow))'	0:exists(%s, %s);4:curry[%s,%s];5:size-lt;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow
'λx.forall(curry[same_color,x.o],filter(filter(filter(x.s, curry[same_shape,x.o]), blue), blue))'	0:forall(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue;4:blue
'λx.exists(not[blue], filter(filter(x.s, curry[same_shape,x.o]), and[curry[same_color,x.o],not[circle]]))'	0:exists(%s, %s);4:not[%s];4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:not[%s];4:circle
'λx.exists(curry[same_shape,x.o], filter(x.s, or[size1,size2]))'	0:exists(%s, %s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:size2
'λx.apply(or[size1,size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:size3;1:%s.o;2:x
'λx.apply(curry[same_shape,x.o],iota(filter(filter(x.s, and[size3,not[green]]), rectangle)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:not[%s];4:green;4:rectangle
'λx.apply(and[curry[same_size,x.o],and[curry[same_color,x.o],or[blue,circle]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:or[%s,%s];4:blue;4:circle;1:%s.o;2:x
'λx.forall(yellow,filter(filter(x.s, triangle), size2))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:size2
'λx.forall(not[and[curry[same_color,x.o],not[not[and[curry[same_shape,x.o],blue]]]]],filter(x.s, or[triangle,rectangle]))'	0:forall(%s,%s);4:not[%s];4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:not[%s];4:not[%s];4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:rectangle
'λx.forall(or[blue,curry[same_color,x.o]],filter(filter(x.s, curry[same_shape,x.o]), or[yellow,not[blue]]))'	0:forall(%s,%s);4:or[%s,%s];4:blue;4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:yellow;4:not[%s];4:blue
'λx.contains(x.o, filter(filter(x.s, circle), yellow))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow
'λx.apply(or[blue,or[and[triangle,green],circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:or[%s,%s];4:and[%s,%s];4:triangle;4:green;4:circle;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(filter(x.s, curry[same_shape,x.o]), size2), size2)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size2;4:size2
'λx.apply(and[not[triangle],curry[same_size,iota(filter(x.s, circle))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:triangle;4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, and[green,not[and[size1,curry[same_color,x.o]]]]), triangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:not[%s];4:and[%s,%s];4:size1;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:triangle
'λx.apply(or[or[and[size1,size3],and[circle,blue]],not[and[curry[same_shape,x.o],or[blue,circle]]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:size1;4:size3;4:and[%s,%s];4:circle;4:blue;4:not[%s];4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:blue;4:circle;1:%s.o;2:x
'λx.apply(curry[size-geq,iota(filter(filter(x.s, triangle), green))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:size-geq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green;1:%s.o;2:x
'λx.apply(and[green,or[rectangle,triangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:or[%s,%s];4:rectangle;4:triangle;1:%s.o;2:x
'λx.apply(size2,iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[rectangle,size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:size1;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, size3), triangle)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle
'λx.exists(or[rectangle,size1], filter(x.s, or[and[and[circle,not[curry[same_shape,iota(filter(filter(x.s, yellow), size3))]]],green],yellow]))'	0:exists(%s, %s);4:or[%s,%s];4:rectangle;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:not[%s];4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:size3;4:green;4:yellow
'λx.forall(and[not[rectangle],not[green]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:not[%s];4:rectangle;4:not[%s];4:green;3:%s.s;2:x
'λx.forall(curry[same_color,x.o],filter(filter(x.s, rectangle), curry[same_shape,x.o]))'	0:forall(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.exists(and[curry[same_shape,x.o],curry[size-gt,x.o]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:size-gt;1:%s.o;2:x;3:%s.s;2:x
'λx.forall(circle,filter(filter(filter(x.s, not[curry[same_shape,iota(filter(x.s, curry[same_shape,x.o]))]]), green), circle))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:green;4:circle
'λx.apply(or[triangle,blue],iota(filter(filter(x.s, size3), curry[same_color,x.o])))'	0:apply(%s,%s);4:or[%s,%s];4:triangle;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, and[triangle,blue])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:blue
'λx.exists(not[or[circle,yellow]], x.s)'	0:exists(%s, %s);4:not[%s];4:or[%s,%s];4:circle;4:yellow;3:%s.s;2:x
'λx.apply(or[and[not[rectangle],or[or[circle,green],green]],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:not[%s];4:rectangle;4:or[%s,%s];4:or[%s,%s];4:circle;4:green;4:green;4:blue;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, and[and[curry[same_color,x.o],curry[same_shape,x.o]],circle]), circle), or[green,yellow]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:circle;4:circle;4:or[%s,%s];4:green;4:yellow
'λx.contains(iota(filter(filter(x.s, rectangle), size1)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1;3:%s.s;2:x
'λx.apply(not[or[yellow,rectangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:yellow;4:rectangle;1:%s.o;2:x
'λx.exists(not[curry[same_color,x.o]], x.s)'	0:exists(%s, %s);4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(and[and[curry[same_size,iota(filter(x.s, blue))],blue],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:blue;4:blue;1:%s.o;2:x
'λx.forall(blue,filter(filter(filter(x.s, curry[same_color,x.o]), circle), circle))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:circle;4:circle
'λx.exists(or[yellow,triangle], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:yellow;4:triangle;3:%s.s;2:x
'λx.apply(and[circle,not[and[not[blue],size1]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:circle;4:not[%s];4:and[%s,%s];4:not[%s];4:blue;4:size1;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, triangle), not[yellow]), and[curry[same_color,x.o],size1]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:not[%s];4:yellow;4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:size1
'λx.exists(or[circle,size1], filter(x.s, curry[same_size,x.o]))'	0:exists(%s, %s);4:or[%s,%s];4:circle;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.apply(size3,iota(filter(x.s, green)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(not[curry[same_color,x.o]],iota(filter(x.s, and[not[green],size1])))'	0:apply(%s,%s);4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:green;4:size1
'λx.apply(and[curry[same_size,iota(filter(x.s, triangle))],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:rectangle;1:%s.o;2:x
'λx.apply(blue,iota(filter(filter(x.s, or[and[triangle,rectangle],curry[same_color,x.o]]), blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:triangle;4:rectangle;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:blue
'λx.forall(green,filter(filter(x.s, curry[same_size,iota(filter(x.s, curry[same_shape,x.o]))]), green))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:green
'λx.forall(size2,filter(filter(x.s, blue), circle))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle
'λx.apply(curry[same_shape,iota(filter(x.s, or[and[size1,size2],or[and[circle,rectangle],curry[same_shape,x.o]]]))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size1;4:size2;4:or[%s,%s];4:and[%s,%s];4:circle;4:rectangle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.exists(green, filter(x.s, triangle))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.forall(green,filter(filter(x.s, curry[same_color,x.o]), yellow))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:yellow
'λx.apply(blue,iota(filter(filter(x.s, blue), or[curry[same_shape,x.o],green])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:green
'λx.forall(size3,x.s)'	0:forall(%s,%s);4:size3;3:%s.s;2:x
'λx.forall(rectangle,filter(filter(x.s, size3), curry[same_color,iota(filter(filter(x.s, size1), rectangle))]))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:rectangle
'λx.forall(triangle,filter(filter(filter(x.s, curry[same_color,x.o]), yellow), rectangle))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:yellow;4:rectangle
'λx.apply(and[size2,yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:yellow;1:%s.o;2:x
'λx.apply(curry[size-geq,x.o],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:curry[%s,%s];5:size-geq;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.apply(or[or[green,curry[size-gt,iota(filter(x.s, not[not[blue]]))]],yellow],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:green;4:curry[%s,%s];5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:not[%s];4:blue;4:yellow;1:%s.o;2:x
'λx.empty(filter(filter(x.s, size3), and[curry[same_shape,x.o],yellow]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:yellow
'λx.apply(and[or[size1,triangle],curry[same_size,x.o]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size1;4:triangle;4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(blue,iota(filter(filter(filter(x.s, blue), curry[same_shape,x.o]), size1)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size1
'λx.apply(or[circle,and[yellow,rectangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:and[%s,%s];4:yellow;4:rectangle;1:%s.o;2:x
'λx.apply(not[green],iota(filter(x.s, circle)))'	0:apply(%s,%s);4:not[%s];4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.empty(filter(x.s, not[curry[same_size,x.o]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.apply(and[size2,or[circle,green]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:or[%s,%s];4:circle;4:green;1:%s.o;2:x
'λx.apply(and[curry[same_size,iota(filter(x.s, circle))],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:circle;1:%s.o;2:x
'λx.apply(and[curry[same_shape,x.o],blue],iota(filter(filter(x.s, circle), size1)))'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1
'λx.exists(blue, filter(x.s, size2))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.forall(curry[size-lt,iota(filter(filter(x.s, curry[same_shape,x.o]), or[size3,not[size3]]))],filter(filter(x.s, green), blue))'	0:forall(%s,%s);4:curry[%s,%s];5:size-lt;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:size3;4:not[%s];4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:blue
'λx.apply(and[curry[same_color,iota(filter(filter(x.s, curry[same_shape,x.o]), or[curry[same_size,x.o],or[size3,not[or[size3,curry[same_color,x.o]]]]]))],not[and[yellow,blue]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:or[%s,%s];4:size3;4:not[%s];4:or[%s,%s];4:size3;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:yellow;4:blue;1:%s.o;2:x
'λx.forall(curry[size-leq,x.o],filter(x.s, yellow))'	0:forall(%s,%s);4:curry[%s,%s];5:size-leq;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.forall(curry[same_shape,x.o],filter(filter(x.s, not[blue]), or[curry[size-lt,x.o],curry[same_shape,x.o]]))'	0:forall(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:or[%s,%s];4:curry[%s,%s];5:size-lt;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.forall(size1,filter(filter(x.s, size2), curry[same_size,x.o]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.apply(and[curry[same_color,x.o],not[size1]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:not[%s];4:size1;1:%s.o;2:x
'λx.forall(blue,filter(filter(filter(x.s, curry[same_size,x.o]), size1), curry[same_color,x.o]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:size1;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.exists(triangle, filter(x.s, green))'	0:exists(%s, %s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(or[not[size1],circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:size1;4:circle;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, curry[same_color,x.o]), green)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:green
'λx.apply(not[and[size1,triangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size1;4:triangle;1:%s.o;2:x
'λx.apply(not[triangle],iota(filter(filter(x.s, or[not[curry[same_color,x.o]],size3]), size2)))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:size3;4:size2
'λx.empty(filter(filter(filter(x.s, size3), yellow), curry[same_shape,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.forall(curry[same_size,x.o],filter(x.s, not[and[curry[same_color,x.o],curry[same_color,x.o]]]))'	0:forall(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(curry[same_shape,iota(filter(x.s, size2))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2;1:%s.o;2:x
'λx.apply(or[curry[same_size,x.o],green],iota(filter(x.s, curry[same_shape,x.o])))'	0:apply(%s,%s);4:or[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.empty(filter(x.s, curry[size-gt,iota(filter(x.s, blue))]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-gt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(yellow,iota(filter(filter(x.s, size3), not[green])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:green
'λx.empty(filter(filter(x.s, and[or[size3,curry[size-gt,x.o]],yellow]), curry[same_shape,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:size3;4:curry[%s,%s];5:size-gt;1:%s.o;2:x;4:yellow;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, curry[same_size,iota(filter(filter(filter(filter(x.s, or[blue,size3]), size2), rectangle), blue))]), green), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:size3;4:size2;4:rectangle;4:blue;4:green;4:size1
'λx.contains(x.o, filter(filter(filter(x.s, circle), size2), size2))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size2;4:size2
'λx.apply(and[and[not[blue],curry[same_color,x.o]],not[circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:blue;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:not[%s];4:circle;1:%s.o;2:x
'λx.exists(not[circle], x.s)'	0:exists(%s, %s);4:not[%s];4:circle;3:%s.s;2:x
'λx.apply(not[yellow],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.exists(curry[same_color,x.o], filter(filter(x.s, curry[same_color,iota(filter(x.s, rectangle))]), green))'	0:exists(%s, %s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:green
'λx.forall(and[blue,size1],filter(x.s, circle))'	0:forall(%s,%s);4:and[%s,%s];4:blue;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.forall(curry[same_shape,x.o],filter(filter(filter(x.s, curry[same_color,x.o]), size1), yellow))'	0:forall(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:size1;4:yellow
'λx.apply(not[curry[same_size,x.o]],iota(filter(filter(x.s, green), triangle)))'	0:apply(%s,%s);4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:triangle
'λx.apply(or[and[size1,not[green]],and[triangle,yellow]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size1;4:not[%s];4:green;4:and[%s,%s];4:triangle;4:yellow;1:%s.o;2:x
'λx.apply(curry[same_shape,x.o],iota(filter(x.s, or[size3,size3])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:size3
'λx.exists(or[yellow,size1], filter(x.s, not[circle]))'	0:exists(%s, %s);4:or[%s,%s];4:yellow;4:size1;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle
'λx.empty(filter(filter(filter(x.s, not[blue]), and[curry[same_size,x.o],curry[same_shape,x.o]]), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:rectangle
'λx.apply(triangle,iota(filter(filter(filter(x.s, triangle), not[yellow]), or[green,size1])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:not[%s];4:yellow;4:or[%s,%s];4:green;4:size1
'λx.forall(and[size2,triangle],filter(filter(x.s, yellow), curry[same_color,x.o]))'	0:forall(%s,%s);4:and[%s,%s];4:size2;4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(curry[same_color,x.o],iota(filter(filter(x.s, blue), triangle)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:triangle
'λx.empty(filter(filter(filter(x.s, not[green]), rectangle), curry[same_color,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:green;4:rectangle;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, size3), not[blue])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:blue;3:%s.s;2:x
'λx.apply(size1,iota(filter(x.s, circle)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[blue,curry[same_color,x.o]],iota(filter(filter(x.s, or[triangle,rectangle]), or[and[rectangle,circle],and[blue,size3]])))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:triangle;4:rectangle;4:or[%s,%s];4:and[%s,%s];4:rectangle;4:circle;4:and[%s,%s];4:blue;4:size3
'λx.apply(or[size2,not[green]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:not[%s];4:green;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, size3), triangle), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle;4:green
'λx.contains(iota(filter(filter(filter(x.s, size2), circle), blue)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle;4:blue;3:%s.s;2:x
'λx.apply(or[curry[same_color,iota(filter(x.s, and[curry[same_size,x.o],circle]))],size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:circle;4:size1;1:%s.o;2:x
'λx.apply(or[and[circle,size3],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:circle;4:size3;4:blue;1:%s.o;2:x
'λx.apply(not[and[and[not[blue],curry[same_size,x.o]],not[rectangle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:not[%s];4:blue;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:not[%s];4:rectangle;1:%s.o;2:x
'λx.apply(not[curry[same_size,iota(filter(filter(x.s, size1), blue))]],x.o)'	0:apply(%s,%s);4:not[%s];4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue;1:%s.o;2:x
'λx.apply(and[not[triangle],size1],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:triangle;4:size1;1:%s.o;2:x
'λx.apply(and[blue,rectangle],iota(filter(x.s, curry[same_size,x.o])))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.exists(size1, filter(x.s, green))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(or[size3,or[blue,circle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:or[%s,%s];4:blue;4:circle;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, size1), or[or[green,rectangle],triangle])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:or[%s,%s];4:or[%s,%s];4:green;4:rectangle;4:triangle;3:%s.s;2:x
'λx.forall(curry[same_shape,iota(x.s)],filter(x.s, size2))'	0:forall(%s,%s);4:curry[%s,%s];5:same_shape;1:iota(%s);3:%s.s;2:x;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.exists(or[blue,circle], filter(x.s, size1))'	0:exists(%s, %s);4:or[%s,%s];4:blue;4:circle;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.exists(or[not[curry[same_color,x.o]],and[size1,blue]], filter(x.s, curry[same_size,x.o]))'	0:exists(%s, %s);4:or[%s,%s];4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:and[%s,%s];4:size1;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.apply(not[or[size3,triangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:size3;4:triangle;1:%s.o;2:x
'λx.contains(iota(filter(filter(x.s, not[or[yellow,and[curry[same_color,x.o],green]]]), size2)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:yellow;4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:green;4:size2;3:%s.s;2:x
'λx.apply(or[not[size1],size3],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:size1;4:size3;1:%s.o;2:x
'λx.apply(or[size1,green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size1;4:green;1:%s.o;2:x
'λx.forall(circle,filter(x.s, green))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(not[rectangle],iota(x.s))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:%s.s;2:x
'λx.contains(x.o, filter(filter(x.s, curry[same_color,iota(filter(x.s, circle))]), circle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:circle
'λx.apply(rectangle,x.o)'	0:apply(%s,%s);4:rectangle;1:%s.o;2:x
'λx.apply(not[and[green,not[curry[same_color,iota(filter(x.s, curry[same_shape,x.o]))]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:green;4:not[%s];4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(curry[same_color,x.o],iota(filter(x.s, and[or[size1,curry[same_shape,x.o]],curry[same_shape,x.o]])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:size1;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, rectangle), curry[same_shape,x.o]), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:green
'λx.apply(size3,iota(filter(filter(x.s, size3), yellow)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow
'λx.apply(or[curry[same_color,iota(filter(x.s, blue))],size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, curry[same_color,x.o]), or[triangle,yellow]), not[blue]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:or[%s,%s];4:triangle;4:yellow;4:not[%s];4:blue
'λx.forall(circle,filter(filter(filter(x.s, rectangle), size1), curry[same_size,x.o]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, curry[same_color,iota(filter(x.s, rectangle))]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(size3,iota(filter(filter(x.s, curry[same_size,x.o]), size3)))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:size3
'λx.contains(x.o, filter(filter(x.s, blue), size1))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1
'λx.forall(curry[size-geq,x.o],filter(x.s, circle))'	0:forall(%s,%s);4:curry[%s,%s];5:size-geq;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(size1,iota(filter(x.s, and[size1,blue])))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:blue
'λx.apply(circle,iota(filter(x.s, size2)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(curry[same_color,x.o],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.exists(not[blue], filter(filter(x.s, size3), triangle))'	0:exists(%s, %s);4:not[%s];4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle
'λx.apply(triangle,iota(filter(filter(filter(x.s, or[and[triangle,yellow],size1]), triangle), curry[size-geq,x.o])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:triangle;4:yellow;4:size1;4:triangle;4:curry[%s,%s];5:size-geq;1:%s.o;2:x
'λx.forall(size2,filter(filter(x.s, size1), green))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green
'λx.contains(iota(filter(x.s, not[circle])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;3:%s.s;2:x
'λx.apply(not[rectangle],iota(filter(x.s, curry[same_shape,x.o])))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, size2), yellow), curry[size-leq,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:yellow;4:curry[%s,%s];5:size-leq;1:%s.o;2:x
'λx.apply(or[green,curry[same_color,iota(x.s)]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:curry[%s,%s];5:same_color;1:iota(%s);3:%s.s;2:x;1:%s.o;2:x
'λx.apply(green,iota(filter(x.s, and[triangle,green])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:triangle;4:green
'λx.apply(and[and[not[blue],circle],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:blue;4:circle;4:circle;1:%s.o;2:x
'λx.exists(and[not[yellow],triangle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:yellow;4:triangle;3:%s.s;2:x
'λx.forall(size3,filter(filter(x.s, curry[size-gt,x.o]), curry[same_shape,x.o]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-gt;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.exists(size2, filter(x.s, green))'	0:exists(%s, %s);4:size2;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(not[and[size1,size2]],iota(filter(x.s, curry[same_shape,x.o])))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:size1;4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.forall(curry[same_size,x.o],filter(filter(filter(x.s, curry[same_shape,x.o]), or[curry[same_shape,x.o],size3]), not[and[triangle,rectangle]]))'	0:forall(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size3;4:not[%s];4:and[%s,%s];4:triangle;4:rectangle
'λx.apply(blue,iota(filter(x.s, circle)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[size3,blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size3;4:blue;1:%s.o;2:x
'λx.apply(not[and[and[curry[same_size,x.o],not[blue]],not[circle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:not[%s];4:blue;4:not[%s];4:circle;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, triangle), blue)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:blue
'λx.empty(filter(x.s, and[not[or[rectangle,not[or[curry[same_size,x.o],size1]]]],size3]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:or[%s,%s];4:rectangle;4:not[%s];4:or[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:size1;4:size3
'λx.apply(and[not[triangle],curry[same_shape,x.o]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:triangle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.exists(size1, filter(x.s, or[rectangle,or[green,triangle]]))'	0:exists(%s, %s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:or[%s,%s];4:green;4:triangle
'λx.apply(or[curry[same_size,x.o],circle],iota(filter(x.s, curry[same_shape,x.o])))'	0:apply(%s,%s);4:or[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(curry[same_size,x.o],iota(filter(x.s, or[size3,green])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:green
'λx.forall(size3,filter(filter(x.s, and[curry[same_shape,x.o],size1]), yellow))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size1;4:yellow
'λx.apply(not[and[not[blue],or[size2,size1]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:blue;4:or[%s,%s];4:size2;4:size1;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, size3), green)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green
'λx.forall(yellow,filter(filter(x.s, and[curry[same_color,x.o],size1]), triangle))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:size1;4:triangle
'λx.apply(not[and[green,yellow]],iota(filter(x.s, curry[same_shape,x.o])))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:green;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.forall(circle,filter(filter(x.s, and[size2,green]), curry[same_shape,x.o]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:green;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(or[size3,blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:blue;1:%s.o;2:x
'λx.apply(not[and[and[yellow,curry[same_color,x.o]],blue]],iota(filter(x.s, curry[same_shape,x.o])))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:and[%s,%s];4:yellow;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(curry[same_size,iota(filter(x.s, yellow))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;1:%s.o;2:x
'λx.apply(or[or[triangle,rectangle],size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:triangle;4:rectangle;4:size1;1:%s.o;2:x
'λx.forall(curry[same_color,x.o],filter(filter(x.s, not[circle]), curry[same_shape,x.o]))'	0:forall(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.forall(circle,filter(filter(x.s, curry[same_shape,x.o]), not[circle]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:circle
'λx.apply(and[or[yellow,green],or[curry[same_shape,iota(filter(x.s, blue))],rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:yellow;4:green;4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle;1:%s.o;2:x
'λx.apply(and[curry[same_size,x.o],not[not[or[blue,size1]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:not[%s];4:not[%s];4:or[%s,%s];4:blue;4:size1;1:%s.o;2:x
'λx.apply(or[curry[same_color,x.o],blue],iota(filter(x.s, rectangle)))'	0:apply(%s,%s);4:or[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.forall(size2,filter(filter(x.s, yellow), curry[same_color,x.o]))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:yellow;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, not[blue]), circle), curry[same_color,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:circle;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.exists(and[curry[same_shape,x.o],blue], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue;3:%s.s;2:x
'λx.exists(not[green], filter(x.s, size2))'	0:exists(%s, %s);4:not[%s];4:green;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.forall(circle,filter(x.s, yellow))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.apply(blue,iota(filter(x.s, blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.forall(size3,filter(x.s, rectangle))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(and[blue,and[blue,circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:blue;4:circle;1:%s.o;2:x
'λx.empty(filter(x.s, and[not[or[curry[same_shape,x.o],and[triangle,size3]]],blue]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:triangle;4:size3;4:blue
'λx.apply(not[and[or[blue,circle],or[size1,curry[same_shape,x.o]]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:or[%s,%s];4:blue;4:circle;4:or[%s,%s];4:size1;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.forall(yellow,filter(x.s, size1))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(or[size3,not[yellow]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:not[%s];4:yellow;1:%s.o;2:x
'λx.empty(filter(filter(x.s, curry[same_shape,x.o]), or[not[curry[same_color,x.o]],and[circle,triangle]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:and[%s,%s];4:circle;4:triangle
'λx.exists(not[yellow], filter(x.s, curry[same_color,x.o]))'	0:exists(%s, %s);4:not[%s];4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.empty(filter(filter(x.s, not[curry[same_color,x.o]]), not[curry[same_size,x.o]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, rectangle), size1), curry[same_size,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:size1;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.empty(filter(x.s, and[curry[same_shape,x.o],not[curry[same_color,x.o]]]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.exists(curry[same_color,x.o], filter(x.s, or[and[triangle,circle],not[curry[same_shape,x.o]]]))'	0:exists(%s, %s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:triangle;4:circle;4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.forall(or[size1,curry[size-geq,x.o]],filter(x.s, curry[same_shape,x.o]))'	0:forall(%s,%s);4:or[%s,%s];4:size1;4:curry[%s,%s];5:size-geq;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.forall(curry[same_color,x.o],filter(filter(x.s, or[yellow,green]), curry[same_shape,x.o]))'	0:forall(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:green;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.empty(filter(x.s, and[not[curry[same_size,x.o]],size3]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:size3
'λx.empty(filter(filter(x.s, blue), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle
'λx.apply(curry[same_size,iota(filter(x.s, curry[size-geq,x.o]))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-geq;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(curry[same_color,x.o],iota(filter(filter(x.s, curry[size-leq,x.o]), and[size1,and[blue,size1]])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-leq;1:%s.o;2:x;4:and[%s,%s];4:size1;4:and[%s,%s];4:blue;4:size1
'λx.exists(size3, filter(x.s, or[curry[same_color,x.o],yellow]))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:yellow
'λx.apply(not[and[not[size3],not[blue]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:size3;4:not[%s];4:blue;1:%s.o;2:x
'λx.apply(and[blue,and[size1,blue]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:and[%s,%s];4:size1;4:blue;1:%s.o;2:x
'λx.apply(or[not[rectangle],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:rectangle;4:blue;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(filter(x.s, size1), blue), rectangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:blue;4:rectangle
'λx.apply(or[green,yellow],iota(filter(x.s, size3)))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.forall(or[size3,blue],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:size3;4:blue;3:%s.s;2:x
'λx.exists(blue, filter(x.s, and[not[curry[same_color,x.o]],and[blue,curry[same_shape,x.o]]]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:and[%s,%s];4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(circle,iota(filter(filter(x.s, circle), green)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:green
'λx.forall(circle,filter(filter(x.s, size3), curry[same_shape,iota(filter(x.s, curry[same_color,iota(filter(x.s, green))]))]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.exists(and[not[and[curry[same_color,x.o],or[curry[same_size,x.o],triangle]]],curry[same_shape,x.o]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:or[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:triangle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(not[curry[size-lt,x.o]],iota(filter(x.s, curry[same_shape,x.o])))'	0:apply(%s,%s);4:not[%s];4:curry[%s,%s];5:size-lt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, circle), yellow), curry[same_shape,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(circle,iota(filter(x.s, or[circle,curry[same_shape,x.o]])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(size3,iota(filter(filter(x.s, triangle), or[size3,yellow])))'	0:apply(%s,%s);4:size3;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:or[%s,%s];4:size3;4:yellow
'λx.exists(and[not[curry[same_shape,x.o]],circle], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:circle;3:%s.s;2:x
'λx.apply(curry[same_color,x.o],iota(filter(filter(x.s, and[not[yellow],curry[same_shape,x.o]]), and[not[size1],blue])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:not[%s];4:yellow;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:not[%s];4:size1;4:blue
'λx.exists(and[not[curry[same_shape,x.o]],blue], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue;3:%s.s;2:x
'λx.exists(or[yellow,size2], filter(filter(x.s, not[blue]), and[curry[size-leq,iota(filter(x.s, blue))],or[blue,curry[same_color,x.o]]]))'	0:exists(%s, %s);4:or[%s,%s];4:yellow;4:size2;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:and[%s,%s];4:curry[%s,%s];5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:or[%s,%s];4:blue;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(curry[same_shape,iota(filter(filter(x.s, blue), curry[size-lt,x.o]))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:curry[%s,%s];5:size-lt;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[or[rectangle,blue],curry[same_color,x.o]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:rectangle;4:blue;4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[curry[same_size,x.o],or[size1,curry[same_color,iota(filter(x.s, curry[same_shape,x.o]))]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:or[%s,%s];4:size1;4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.forall(yellow,filter(filter(filter(x.s, curry[same_color,iota(filter(x.s, size3))]), blue), size3))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue;4:size3
'λx.apply(blue,iota(filter(x.s, curry[same_shape,iota(filter(x.s, blue))])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(not[size2],iota(filter(filter(x.s, rectangle), curry[same_size,x.o])))'	0:apply(%s,%s);4:not[%s];4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.exists(green, filter(x.s, rectangle))'	0:exists(%s, %s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:rectangle
'λx.apply(not[circle],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(or[and[green,rectangle],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:green;4:rectangle;4:blue;1:%s.o;2:x
'λx.empty(filter(filter(x.s, and[curry[same_size,iota(x.s)],yellow]), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_size;1:iota(%s);3:%s.s;2:x;4:yellow;4:size1
'λx.contains(iota(filter(filter(x.s, size2), blue)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:blue;3:%s.s;2:x
'λx.empty(filter(filter(filter(x.s, not[size3]), yellow), curry[same_shape,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size3;4:yellow;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.exists(not[or[curry[same_color,x.o],not[curry[same_shape,x.o]]]], x.s)'	0:exists(%s, %s);4:not[%s];4:or[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(and[size2,or[size2,curry[same_shape,iota(filter(x.s, size3))]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:or[%s,%s];4:size2;4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size3;1:%s.o;2:x
'λx.apply(blue,iota(filter(x.s, and[blue,size1])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:blue;4:size1
'λx.forall(or[and[not[and[and[rectangle,blue],yellow]],curry[same_shape,x.o]],curry[same_color,x.o]],x.s)'	0:forall(%s,%s);4:or[%s,%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:and[%s,%s];4:rectangle;4:blue;4:yellow;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(curry[same_color,x.o],iota(filter(x.s, or[and[yellow,blue],curry[same_shape,x.o]])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:yellow;4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.forall(size1,filter(x.s, and[curry[same_size,x.o],size3]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:size3
'λx.apply(curry[same_color,x.o],iota(filter(x.s, or[blue,circle])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:circle
'λx.forall(yellow,filter(filter(x.s, size3), rectangle))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle
'λx.apply(and[curry[same_shape,iota(filter(x.s, size1))],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:green;1:%s.o;2:x
'λx.apply(not[triangle],iota(filter(x.s, yellow)))'	0:apply(%s,%s);4:not[%s];4:triangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:yellow
'λx.forall(circle,filter(filter(x.s, blue), curry[same_size,x.o]))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.apply(curry[same_size,iota(filter(x.s, or[or[green,circle],size1]))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:or[%s,%s];4:green;4:circle;4:size1;1:%s.o;2:x
'λx.forall(not[rectangle],filter(x.s, blue))'	0:forall(%s,%s);4:not[%s];4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.empty(filter(filter(filter(filter(x.s, not[curry[same_color,x.o]]), curry[size-geq,x.o]), curry[same_shape,x.o]), or[yellow,curry[same_shape,x.o]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:curry[%s,%s];5:size-geq;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:yellow;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, or[size3,blue]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:blue
'λx.apply(not[rectangle],iota(filter(filter(filter(x.s, not[size1]), blue), not[and[not[and[not[circle],curry[same_size,x.o]]],size2]])))'	0:apply(%s,%s);4:not[%s];4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1;4:blue;4:not[%s];4:and[%s,%s];4:not[%s];4:and[%s,%s];4:not[%s];4:circle;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:size2
'λx.apply(or[and[size3,not[triangle]],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size3;4:not[%s];4:triangle;4:blue;1:%s.o;2:x
'λx.apply(curry[same_size,iota(filter(x.s, or[size3,curry[size-leq,x.o]]))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size3;4:curry[%s,%s];5:size-leq;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[blue,or[not[curry[same_size,iota(filter(filter(x.s, blue), size2))]],rectangle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:or[%s,%s];4:not[%s];4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2;4:rectangle;1:%s.o;2:x
'λx.forall(blue,filter(filter(x.s, and[curry[same_shape,x.o],triangle]), curry[same_color,x.o]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:triangle;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.exists(or[yellow,curry[same_shape,x.o]], filter(x.s, not[curry[same_size,x.o]]))'	0:exists(%s, %s);4:or[%s,%s];4:yellow;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.forall(rectangle,filter(filter(filter(x.s, or[curry[size-leq,iota(filter(filter(x.s, rectangle), or[curry[same_color,x.o],triangle]))],and[circle,circle]]), size2), size1))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:size-leq;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:or[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:triangle;4:and[%s,%s];4:circle;4:circle;4:size2;4:size1
'λx.apply(or[not[size2],green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:size2;4:green;1:%s.o;2:x
'λx.apply(and[size1,green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size1;4:green;1:%s.o;2:x
'λx.exists(and[or[circle,blue],and[curry[same_color,x.o],or[rectangle,curry[same_shape,x.o]]]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:or[%s,%s];4:circle;4:blue;4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:or[%s,%s];4:rectangle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.empty(filter(filter(filter(filter(filter(x.s, not[blue]), curry[same_size,x.o]), circle), curry[same_shape,x.o]), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:blue;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:circle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:circle
'λx.exists(blue, filter(x.s, not[curry[same_shape,x.o]]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(or[size2,or[size1,size1]],iota(filter(filter(x.s, circle), yellow)))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:or[%s,%s];4:size1;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow
'λx.empty(filter(filter(filter(filter(x.s, curry[same_shape,x.o]), or[not[and[circle,blue]],yellow]), curry[same_color,x.o]), or[circle,blue]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:circle;4:blue;4:yellow;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:or[%s,%s];4:circle;4:blue
'λx.apply(not[or[size1,not[blue]]],x.o)'	0:apply(%s,%s);4:not[%s];4:or[%s,%s];4:size1;4:not[%s];4:blue;1:%s.o;2:x
'λx.contains(iota(filter(x.s, and[or[and[and[circle,yellow],size1],green],not[and[curry[same_size,x.o],green]]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:and[%s,%s];4:and[%s,%s];4:circle;4:yellow;4:size1;4:green;4:not[%s];4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:green;3:%s.s;2:x
'λx.forall(rectangle,filter(x.s, and[rectangle,curry[same_size,iota(filter(x.s, curry[same_shape,x.o]))]]))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:rectangle;4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.exists(or[triangle,yellow], filter(x.s, size3))'	0:exists(%s, %s);4:or[%s,%s];4:triangle;4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:size3
'λx.forall(rectangle,filter(filter(x.s, and[yellow,curry[same_size,x.o]]), size1))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:size1
'λx.apply(and[rectangle,blue],iota(filter(x.s, curry[same_size,x.o])))'	0:apply(%s,%s);4:and[%s,%s];4:rectangle;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, circle), size1), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:size1;4:green
'λx.empty(filter(filter(filter(x.s, size3), rectangle), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:rectangle;4:blue
'λx.contains(x.o, filter(filter(x.s, circle), not[blue]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:blue
'λx.apply(not[not[or[not[triangle],blue]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:or[%s,%s];4:not[%s];4:triangle;4:blue;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, or[not[or[rectangle,not[blue]]],circle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:not[%s];4:or[%s,%s];4:rectangle;4:not[%s];4:blue;4:circle
'λx.exists(and[size1,curry[same_shape,x.o]], filter(x.s, not[yellow]))'	0:exists(%s, %s);4:and[%s,%s];4:size1;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:yellow
'λx.exists(and[or[rectangle,triangle],curry[same_size,x.o]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:or[%s,%s];4:rectangle;4:triangle;4:curry[%s,%s];5:same_size;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(circle,iota(filter(filter(x.s, and[curry[same_shape,x.o],blue]), curry[same_color,x.o])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:blue;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.exists(or[yellow,blue], filter(x.s, curry[same_size,x.o]))'	0:exists(%s, %s);4:or[%s,%s];4:yellow;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.exists(size3, filter(x.s, green))'	0:exists(%s, %s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(circle,iota(filter(filter(x.s, size2), curry[same_shape,x.o])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(or[rectangle,not[curry[same_color,x.o]]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.empty(filter(filter(x.s, size2), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:circle
'λx.forall(and[or[blue,and[or[not[blue],rectangle],not[curry[same_color,x.o]]]],curry[size-geq,x.o]],x.s)'	0:forall(%s,%s);4:and[%s,%s];4:or[%s,%s];4:blue;4:and[%s,%s];4:or[%s,%s];4:not[%s];4:blue;4:rectangle;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:curry[%s,%s];5:size-geq;1:%s.o;2:x;3:%s.s;2:x
'λx.apply(not[and[yellow,and[size3,circle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:yellow;4:and[%s,%s];4:size3;4:circle;1:%s.o;2:x
'λx.apply(or[yellow,rectangle],iota(filter(x.s, size1)))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(or[rectangle,or[blue,triangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:rectangle;4:or[%s,%s];4:blue;4:triangle;1:%s.o;2:x
'λx.apply(curry[same_shape,x.o],iota(filter(x.s, curry[size-geq,x.o])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-geq;1:%s.o;2:x
'λx.apply(or[circle,not[size3]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:not[%s];4:size3;1:%s.o;2:x
'λx.apply(or[and[circle,size3],triangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:circle;4:size3;4:triangle;1:%s.o;2:x
'λx.apply(or[and[size3,blue],curry[size-lt,x.o]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:and[%s,%s];4:size3;4:blue;4:curry[%s,%s];5:size-lt;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(and[blue,not[size2]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:not[%s];4:size2;1:%s.o;2:x
'λx.forall(triangle,filter(filter(x.s, curry[same_size,iota(filter(x.s, curry[same_shape,x.o]))]), triangle))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:triangle
'λx.exists(curry[same_color,x.o], filter(x.s, curry[same_size,iota(filter(x.s, curry[same_shape,x.o]))]))'	0:exists(%s, %s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(curry[same_color,x.o],iota(filter(x.s, or[curry[same_shape,x.o],and[rectangle,yellow]])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:rectangle;4:yellow
'λx.apply(or[green,blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:green;4:blue;1:%s.o;2:x
'λx.apply(size1,iota(filter(filter(filter(x.s, blue), curry[size-gt,x.o]), size1)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:curry[%s,%s];5:size-gt;1:%s.o;2:x;4:size1
'λx.empty(filter(filter(x.s, size1), curry[same_size,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, not[circle]), and[curry[same_color,x.o],curry[same_shape,x.o]]), or[green,yellow]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:green;4:yellow
'λx.apply(curry[same_color,x.o],iota(filter(x.s, or[and[size2,size1],curry[same_shape,x.o]])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:size2;4:size1;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, not[curry[same_color,x.o]]), not[size2]), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:not[%s];4:size2;4:blue
'λx.forall(size3,filter(x.s, curry[same_shape,x.o]))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, or[blue,or[not[size1],circle]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:or[%s,%s];4:not[%s];4:size1;4:circle
'λx.forall(blue,filter(filter(x.s, and[curry[same_shape,x.o],curry[same_color,x.o]]), circle))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:circle
'λx.apply(curry[same_shape,x.o],iota(filter(filter(x.s, or[circle,size3]), blue)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:size3;4:blue
'λx.apply(circle,iota(filter(filter(x.s, curry[same_shape,x.o]), circle)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:circle
'λx.apply(or[not[curry[same_color,x.o]],circle],iota(filter(filter(x.s, or[curry[size-gt,x.o],and[size1,green]]), curry[same_shape,x.o])))'	0:apply(%s,%s);4:or[%s,%s];4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:size-gt;1:%s.o;2:x;4:and[%s,%s];4:size1;4:green;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.exists(or[circle,and[blue,or[green,curry[same_color,x.o]]]], filter(x.s, curry[same_shape,x.o]))'	0:exists(%s, %s);4:or[%s,%s];4:circle;4:and[%s,%s];4:blue;4:or[%s,%s];4:green;4:curry[%s,%s];5:same_color;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(yellow,iota(filter(x.s, and[yellow,size2])))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:size2
'λx.apply(not[and[or[yellow,green],triangle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:or[%s,%s];4:yellow;4:green;4:triangle;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, curry[size-lt,iota(filter(x.s, blue))]), circle), green))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle;4:green
'λx.apply(or[or[green,size1],circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:green;4:size1;4:circle;1:%s.o;2:x
'λx.apply(not[yellow],iota(filter(x.s, curry[same_color,x.o])))'	0:apply(%s,%s);4:not[%s];4:yellow;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.empty(filter(filter(x.s, triangle), and[yellow,and[size1,curry[same_shape,iota(filter(x.s, curry[same_shape,x.o]))]]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:and[%s,%s];4:yellow;4:and[%s,%s];4:size1;4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.forall(blue,filter(filter(x.s, or[and[circle,and[curry[same_color,iota(filter(x.s, curry[same_shape,x.o]))],rectangle]],circle]), triangle))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:and[%s,%s];4:circle;4:and[%s,%s];4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:rectangle;4:circle;4:triangle
'λx.true'	0:true
'λx.empty(filter(filter(x.s, size3), not[curry[same_shape,x.o]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.empty(filter(filter(x.s, curry[same_size,x.o]), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:circle
'λx.empty(filter(filter(filter(filter(x.s, blue), circle), curry[same_color,x.o]), curry[same_shape,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.forall(size2,filter(filter(filter(x.s, curry[same_shape,x.o]), yellow), size1))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:yellow;4:size1
'λx.apply(not[and[green,size1]],iota(filter(x.s, curry[same_shape,x.o])))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:green;4:size1;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(not[circle],iota(filter(x.s, and[size3,blue])))'	0:apply(%s,%s);4:not[%s];4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:blue
'λx.forall(blue,filter(filter(x.s, circle), curry[same_color,x.o]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.forall(size3,filter(filter(x.s, not[and[size2,yellow]]), triangle))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:size2;4:yellow;4:triangle
'λx.empty(filter(filter(filter(x.s, green), circle), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:circle;4:size3
'λx.forall(and[green,blue],filter(filter(filter(x.s, curry[same_shape,x.o]), not[and[green,size2]]), not[curry[same_color,x.o]]))'	0:forall(%s,%s);4:and[%s,%s];4:green;4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:green;4:size2;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(and[or[size1,triangle],green],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:size1;4:triangle;4:green;1:%s.o;2:x
'λx.apply(size2,iota(filter(filter(x.s, not[circle]), size2)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:circle;4:size2
'λx.apply(curry[same_color,iota(filter(x.s, and[or[curry[same_size,x.o],green],curry[same_shape,x.o]]))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:or[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:green;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:%s.o;2:x
'λx.exists(blue, filter(x.s, not[size1]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size1
'λx.forall(rectangle,filter(filter(x.s, size1), or[rectangle,curry[same_shape,x.o]]))'	0:forall(%s,%s);4:rectangle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size1;4:or[%s,%s];4:rectangle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.exists(not[yellow], filter(x.s, or[curry[same_shape,x.o],and[size1,size3]]))'	0:exists(%s, %s);4:not[%s];4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:size1;4:size3
'λx.forall(blue,filter(x.s, and[curry[same_size,x.o],circle]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:circle
'λx.apply(and[curry[same_shape,x.o],or[blue,circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:blue;4:circle;1:%s.o;2:x
'λx.apply(or[blue,rectangle],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:rectangle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.empty(filter(filter(filter(filter(filter(filter(x.s, and[size2,curry[same_size,iota(filter(x.s, curry[same_shape,x.o]))]]), size1), size3), size3), yellow), circle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size2;4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size1;4:size3;4:size3;4:yellow;4:circle
'λx.forall(triangle,filter(filter(filter(x.s, circle), curry[same_shape,x.o]), size3))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size3
'λx.apply(and[and[not[blue],not[circle]],curry[same_color,x.o]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:not[%s];4:blue;4:not[%s];4:circle;4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:%s.o;2:x
'λx.apply(or[circle,or[blue,size3]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:or[%s,%s];4:blue;4:size3;1:%s.o;2:x
'λx.contains(x.o, filter(x.s, or[size1,circle]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:circle
'λx.apply(or[or[rectangle,triangle],blue],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:rectangle;4:triangle;4:blue;1:%s.o;2:x
'λx.apply(curry[same_size,x.o],iota(filter(x.s, size2)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.forall(blue,filter(x.s, circle))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.apply(and[and[size2,size2],curry[size-leq,iota(filter(x.s, size1))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:and[%s,%s];4:size2;4:size2;4:curry[%s,%s];5:size-leq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:size1;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, rectangle), blue), size3))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:blue;4:size3
'λx.apply(or[size2,green],iota(filter(filter(x.s, blue), size2)))'	0:apply(%s,%s);4:or[%s,%s];4:size2;4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2
'λx.forall(size1,filter(x.s, curry[size-gt,x.o]))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-gt;1:%s.o;2:x
'λx.exists(or[size3,blue], filter(x.s, curry[same_size,x.o]))'	0:exists(%s, %s);4:or[%s,%s];4:size3;4:blue;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.apply(and[or[blue,curry[same_size,iota(filter(x.s, circle))]],circle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:blue;4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:circle;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(filter(x.s, size3), blue), curry[same_shape,x.o])))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(or[blue,or[not[and[yellow,size3]],rectangle]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:or[%s,%s];4:not[%s];4:and[%s,%s];4:yellow;4:size3;4:rectangle;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(filter(filter(filter(x.s, blue), curry[same_shape,x.o]), not[triangle]), blue), size1)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:triangle;4:blue;4:size1
'λx.contains(x.o, filter(filter(x.s, size3), triangle))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:triangle
'λx.apply(blue,iota(filter(filter(filter(x.s, not[size2]), not[rectangle]), blue)))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:size2;4:not[%s];4:rectangle;4:blue
'λx.forall(triangle,filter(x.s, not[or[triangle,curry[same_size,x.o]]]))'	0:forall(%s,%s);4:triangle;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:or[%s,%s];4:triangle;4:curry[%s,%s];5:same_size;1:%s.o;2:x
'λx.apply(yellow,iota(filter(filter(x.s, and[yellow,curry[same_shape,x.o]]), size1)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:yellow;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size1
'λx.apply(curry[size-geq,iota(filter(x.s, green))],x.o)'	0:apply(%s,%s);4:curry[%s,%s];5:size-geq;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:green;1:%s.o;2:x
'λx.apply(and[or[not[size2],size3],and[and[not[triangle],curry[same_color,x.o]],or[rectangle,circle]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:not[%s];4:size2;4:size3;4:and[%s,%s];4:and[%s,%s];4:not[%s];4:triangle;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:or[%s,%s];4:rectangle;4:circle;1:%s.o;2:x
'λx.forall(circle,filter(filter(x.s, and[curry[same_size,x.o],blue]), blue))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:blue;4:blue
'λx.apply(or[circle,size1],iota(filter(filter(x.s, circle), blue)))'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:blue
'λx.apply(size1,iota(filter(filter(filter(x.s, curry[same_shape,x.o]), and[blue,size1]), blue)))'	0:apply(%s,%s);4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:blue;4:size1;4:blue
'λx.empty(filter(filter(x.s, or[size1,green]), and[not[circle],curry[same_shape,x.o]]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:green;4:and[%s,%s];4:not[%s];4:circle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(or[yellow,or[size1,green]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:or[%s,%s];4:size1;4:green;1:%s.o;2:x
'λx.forall(not[rectangle],filter(x.s, size1))'	0:forall(%s,%s);4:not[%s];4:rectangle;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(and[not[and[triangle,or[and[not[curry[same_size,iota(filter(x.s, blue))]],size2],circle]]],yellow],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:and[%s,%s];4:triangle;4:or[%s,%s];4:and[%s,%s];4:not[%s];4:curry[%s,%s];5:same_size;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size2;4:circle;4:yellow;1:%s.o;2:x
'λx.apply(not[and[curry[size-lt,iota(filter(x.s, curry[same_shape,x.o]))],circle]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:curry[%s,%s];5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:circle;1:%s.o;2:x
'λx.forall(size3,filter(filter(x.s, curry[same_size,x.o]), size1))'	0:forall(%s,%s);4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:size1
'λx.exists(and[blue,curry[same_shape,x.o]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.exists(or[and[size1,size2],and[blue,curry[same_shape,x.o]]], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:size1;4:size2;4:and[%s,%s];4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:%s.s;2:x
'λx.empty(filter(x.s, and[and[and[size2,and[curry[same_color,iota(filter(x.s, curry[same_shape,x.o]))],size2]],size1],yellow]))'	0:empty(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:and[%s,%s];4:and[%s,%s];4:size2;4:and[%s,%s];4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size2;4:size1;4:yellow
'λx.exists(circle, filter(filter(filter(x.s, curry[same_color,x.o]), curry[same_shape,x.o]), or[green,yellow]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:green;4:yellow
'λx.empty(filter(filter(filter(x.s, and[green,curry[same_color,iota(filter(x.s, curry[same_shape,x.o]))]]), size3), blue))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:green;4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size3;4:blue
'λx.apply(and[blue,curry[same_shape,iota(filter(filter(x.s, blue), circle))]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle;1:%s.o;2:x
'λx.apply(or[or[and[curry[same_color,iota(filter(x.s, blue))],yellow],yellow],green],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:or[%s,%s];4:and[%s,%s];4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:yellow;4:yellow;4:green;1:%s.o;2:x
'λx.apply(curry[same_shape,x.o],iota(filter(filter(x.s, size2), green)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:green
'λx.empty(filter(filter(x.s, size2), curry[same_shape,x.o]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.exists(blue, filter(x.s, not[curry[same_color,x.o]]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(not[and[yellow,size1]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:yellow;4:size1;1:%s.o;2:x
'λx.exists(or[circle,size2], x.s)'	0:exists(%s, %s);4:or[%s,%s];4:circle;4:size2;3:%s.s;2:x
'λx.apply(and[curry[size-lt,iota(filter(x.s, blue))],curry[same_size,x.o]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:size-lt;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:%s.o;2:x
'λx.forall(size1,filter(filter(filter(x.s, rectangle), curry[same_shape,x.o]), green))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:green
'λx.contains(iota(filter(filter(x.s, triangle), green)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green;3:%s.s;2:x
'λx.forall(and[size2,size1],filter(filter(x.s, curry[same_shape,x.o]), not[curry[same_color,x.o]]))'	0:forall(%s,%s);4:and[%s,%s];4:size2;4:size1;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(triangle,iota(filter(filter(x.s, green), size2)))'	0:apply(%s,%s);4:triangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size2
'λx.forall(blue,filter(filter(filter(x.s, circle), curry[same_size,x.o]), or[curry[same_shape,x.o],size1]))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size1
'λx.apply(or[yellow,curry[same_color,x.o]],iota(filter(x.s, curry[same_shape,x.o])))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(curry[same_color,x.o],iota(filter(filter(x.s, or[curry[same_color,x.o],blue]), curry[same_shape,x.o])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_color;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:blue;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(or[curry[same_shape,x.o],and[size3,green]],iota(filter(x.s, blue)))'	0:apply(%s,%s);4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:and[%s,%s];4:size3;4:green;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue
'λx.apply(or[size3,circle],iota(filter(filter(x.s, not[triangle]), or[not[green],green])))'	0:apply(%s,%s);4:or[%s,%s];4:size3;4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:or[%s,%s];4:not[%s];4:green;4:green
'λx.exists(or[green,size3], filter(x.s, curry[size-geq,x.o]))'	0:exists(%s, %s);4:or[%s,%s];4:green;4:size3;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-geq;1:%s.o;2:x
'λx.apply(or[circle,or[size1,not[green]]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:or[%s,%s];4:size1;4:not[%s];4:green;1:%s.o;2:x
'λx.apply(rectangle,iota(filter(filter(x.s, blue), size1)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:size1
'λx.apply(curry[same_shape,x.o],iota(filter(filter(x.s, curry[size-lt,x.o]), curry[same_shape,x.o])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-lt;1:%s.o;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, not[and[circle,circle]]), curry[same_color,iota(filter(filter(x.s, size3), green))])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:and[%s,%s];4:circle;4:circle;4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:green
'λx.contains(iota(filter(x.s, and[size3,or[yellow,circle]])), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size3;4:or[%s,%s];4:yellow;4:circle;3:%s.s;2:x
'λx.apply(and[blue,blue],iota(filter(x.s, curry[same_shape,x.o])))'	0:apply(%s,%s);4:and[%s,%s];4:blue;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.forall(blue,filter(x.s, size2))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:size2
'λx.apply(blue,iota(filter(x.s, not[curry[size-gt,x.o]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:size-gt;1:%s.o;2:x
'λx.apply(not[not[or[blue,circle]]],x.o)'	0:apply(%s,%s);4:not[%s];4:not[%s];4:or[%s,%s];4:blue;4:circle;1:%s.o;2:x
'λx.apply(size2,iota(filter(x.s, or[yellow,circle])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:yellow;4:circle
'λx.contains(iota(filter(filter(filter(x.s, curry[same_color,x.o]), blue), blue)), x.s)'	0:contains(%s, %s);1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:blue;4:blue;3:%s.s;2:x
'λx.apply(curry[size-lt,x.o],iota(filter(x.s, triangle)))'	0:apply(%s,%s);4:curry[%s,%s];5:size-lt;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:triangle
'λx.forall(green,filter(filter(filter(filter(x.s, curry[same_shape,x.o]), curry[same_color,x.o]), blue), circle))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:blue;4:circle
'λx.forall(size2,filter(filter(filter(x.s, curry[same_shape,x.o]), green), green))'	0:forall(%s,%s);4:size2;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:green;4:green
'λx.exists(blue, filter(x.s, curry[size-gt,x.o]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-gt;1:%s.o;2:x
'λx.apply(or[curry[same_shape,iota(filter(x.s, rectangle))],circle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:circle;1:%s.o;2:x
'λx.exists(circle, filter(filter(x.s, or[size1,and[blue,circle]]), or[curry[same_shape,x.o],curry[same_color,x.o]]))'	0:exists(%s, %s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size1;4:and[%s,%s];4:blue;4:circle;4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.empty(filter(filter(filter(x.s, curry[same_color,x.o]), or[size1,rectangle]), yellow))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:or[%s,%s];4:size1;4:rectangle;4:yellow
'λx.apply(and[size2,triangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:size2;4:triangle;1:%s.o;2:x
'λx.forall(circle,filter(filter(x.s, size3), yellow))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:yellow
'λx.forall(curry[same_shape,x.o],filter(filter(x.s, green), size1))'	0:forall(%s,%s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size1
'λx.apply(green,iota(filter(filter(x.s, triangle), green)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:triangle;4:green
'λx.exists(blue, filter(x.s, or[size2,triangle]))'	0:exists(%s, %s);4:blue;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:size2;4:triangle
'λx.apply(curry[same_size,x.o],iota(filter(x.s, or[curry[same_shape,x.o],not[not[and[size3,size2]]]])))'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:not[%s];4:and[%s,%s];4:size3;4:size2
'λx.apply(size2,iota(filter(filter(x.s, green), size2)))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:green;4:size2
'λx.forall(circle,filter(filter(x.s, and[curry[same_shape,x.o],curry[same_color,x.o]]), blue))'	0:forall(%s,%s);4:circle;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:blue
'λx.contains(x.o, filter(x.s, or[circle,or[and[green,triangle],blue]]))'	0:contains(%s, %s);1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:circle;4:or[%s,%s];4:and[%s,%s];4:green;4:triangle;4:blue
'λx.apply(yellow,iota(filter(filter(x.s, circle), yellow)))'	0:apply(%s,%s);4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:yellow
'λx.forall(green,filter(x.s, and[curry[same_shape,x.o],or[triangle,size1]]))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:or[%s,%s];4:triangle;4:size1
'λx.apply(or[circle,rectangle],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:circle;4:rectangle;1:%s.o;2:x
'λx.apply(and[green,and[size1,circle]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:green;4:and[%s,%s];4:size1;4:circle;1:%s.o;2:x
'λx.apply(curry[same_size,x.o],iota(filter(filter(x.s, size3), blue)))'	0:apply(%s,%s);4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size3;4:blue
'λx.apply(blue,iota(filter(filter(x.s, curry[same_color,x.o]), curry[size-leq,x.o])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:curry[%s,%s];5:size-leq;1:%s.o;2:x
'λx.forall(blue,filter(filter(x.s, or[curry[same_shape,x.o],green]), rectangle))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:green;4:rectangle
'λx.apply(and[not[rectangle],blue],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:not[%s];4:rectangle;4:blue;1:%s.o;2:x
'λx.empty(filter(filter(filter(filter(x.s, not[curry[same_shape,x.o]]), rectangle), blue), rectangle))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:rectangle;4:blue;4:rectangle
'λx.forall(yellow,filter(x.s, circle))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:circle
'λx.exists(not[size3], filter(filter(x.s, curry[same_shape,x.o]), not[green]))'	0:exists(%s, %s);4:not[%s];4:size3;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:not[%s];4:green
'λx.apply(not[and[not[triangle],yellow]],x.o)'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:not[%s];4:triangle;4:yellow;1:%s.o;2:x
'λx.forall(blue,filter(filter(filter(x.s, curry[same_color,x.o]), curry[same_size,x.o]), size1))'	0:forall(%s,%s);4:blue;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:size1
'λx.apply(blue,iota(filter(filter(x.s, circle), not[and[size2,blue]])))'	0:apply(%s,%s);4:blue;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:circle;4:not[%s];4:and[%s,%s];4:size2;4:blue
'λx.exists(or[and[size1,size2],curry[same_shape,x.o]], filter(x.s, or[blue,circle]))'	0:exists(%s, %s);4:or[%s,%s];4:and[%s,%s];4:size1;4:size2;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:blue;4:circle
'λx.empty(filter(filter(filter(x.s, not[triangle]), yellow), size1))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:not[%s];4:triangle;4:yellow;4:size1
'λx.apply(circle,iota(filter(x.s, and[circle,green])))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:circle;4:green
'λx.forall(yellow,filter(x.s, green))'	0:forall(%s,%s);4:yellow;3:filter(%s, %s);3:%s.s;2:x;4:green
'λx.apply(and[curry[same_color,x.o],not[and[triangle,curry[same_color,iota(filter(x.s, blue))]]]],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:not[%s];4:and[%s,%s];4:triangle;4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:blue;1:%s.o;2:x
'λx.apply(or[green,curry[same_size,x.o]],iota(filter(x.s, curry[same_shape,x.o])))'	0:apply(%s,%s);4:or[%s,%s];4:green;4:curry[%s,%s];5:same_size;1:%s.o;2:x;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.forall(size1,filter(filter(filter(x.s, or[green,curry[same_size,x.o]]), triangle), size3))'	0:forall(%s,%s);4:size1;3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:green;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:triangle;4:size3
'λx.exists(curry[same_shape,x.o], filter(filter(x.s, blue), circle))'	0:exists(%s, %s);4:curry[%s,%s];5:same_shape;1:%s.o;2:x;3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:circle
'λx.apply(circle,iota(filter(filter(filter(x.s, curry[same_size,x.o]), yellow), size3)))'	0:apply(%s,%s);4:circle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:yellow;4:size3
'λx.apply(size2,iota(filter(filter(x.s, size2), curry[same_color,x.o])))'	0:apply(%s,%s);4:size2;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:curry[%s,%s];5:same_color;1:%s.o;2:x
'λx.apply(green,iota(filter(filter(x.s, size2), rectangle)))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:rectangle
'λx.exists(and[triangle,or[yellow,or[size3,blue]]], x.s)'	0:exists(%s, %s);4:and[%s,%s];4:triangle;4:or[%s,%s];4:yellow;4:or[%s,%s];4:size3;4:blue;3:%s.s;2:x
'λx.apply(not[and[curry[same_size,x.o],size1]],iota(filter(filter(x.s, and[size1,triangle]), blue)))'	0:apply(%s,%s);4:not[%s];4:and[%s,%s];4:curry[%s,%s];5:same_size;1:%s.o;2:x;4:size1;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:and[%s,%s];4:size1;4:triangle;4:blue
'λx.apply(green,iota(filter(filter(x.s, size2), and[not[circle],green])))'	0:apply(%s,%s);4:green;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:size2;4:and[%s,%s];4:not[%s];4:circle;4:green
'λx.apply(and[or[green,curry[same_color,iota(filter(x.s, rectangle))]],rectangle],x.o)'	0:apply(%s,%s);4:and[%s,%s];4:or[%s,%s];4:green;4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:rectangle;4:rectangle;1:%s.o;2:x
'λx.apply(or[yellow,yellow],iota(filter(filter(x.s, or[rectangle,size3]), yellow)))'	0:apply(%s,%s);4:or[%s,%s];4:yellow;4:yellow;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:or[%s,%s];4:rectangle;4:size3;4:yellow
'λx.forall(green,filter(x.s, size1))'	0:forall(%s,%s);4:green;3:filter(%s, %s);3:%s.s;2:x;4:size1
'λx.apply(or[curry[same_color,x.o],blue],iota(filter(x.s, curry[same_shape,x.o])))'	0:apply(%s,%s);4:or[%s,%s];4:curry[%s,%s];5:same_color;1:%s.o;2:x;4:blue;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x
'λx.empty(filter(filter(x.s, curry[size-lt,x.o]), or[size2,circle]))'	0:empty(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:size-lt;1:%s.o;2:x;4:or[%s,%s];4:size2;4:circle
'λx.apply(rectangle,iota(filter(filter(x.s, blue), rectangle)))'	0:apply(%s,%s);4:rectangle;1:iota(%s);3:filter(%s, %s);3:filter(%s, %s);3:%s.s;2:x;4:blue;4:rectangle
'λx.apply(or[blue,or[triangle,green]],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:blue;4:or[%s,%s];4:triangle;4:green;1:%s.o;2:x
'λx.apply(or[curry[same_color,iota(filter(x.s, curry[same_shape,x.o]))],size1],x.o)'	0:apply(%s,%s);4:or[%s,%s];4:curry[%s,%s];5:same_color;1:iota(%s);3:filter(%s, %s);3:%s.s;2:x;4:curry[%s,%s];5:same_shape;1:%s.o;2:x;4:size1;1:%s.o;2:x
